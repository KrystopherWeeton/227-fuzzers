; ModuleID = '../../third_party/libjingle_xmpp/xmpp/xmppengineimpl.cc'
source_filename = "../../third_party/libjingle_xmpp/xmpp/xmppengineimpl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.jingle_xmpp::StaticQName" = type { i8*, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.jingle_xmpp::XmppEngineImpl" = type { %"class.jingle_xmpp::XmppEngine", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppStanzaParser", i32, %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.24", %"class.std::__1::basic_string", i32, %"class.jingle_xmpp::Jid", i32, i8, i32, i32, %"class.std::__1::unique_ptr.11", i8, %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppSessionHandler"*, %"class.jingle_xmpp::XmlnsStack", [6 x %"class.std::__1::unique_ptr.36"], %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67" }
%"class.jingle_xmpp::XmppEngine" = type { i32 (...)** }
%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler" = type { %"class.jingle_xmpp::XmppStanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl"* }
%"class.jingle_xmpp::XmppStanzaParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppStanzaParser" = type { %"class.jingle_xmpp::XmppStanzaParseHandler"*, %"class.jingle_xmpp::XmppStanzaParser::ParseHandler", %"class.jingle_xmpp::XmlParser", i32, %"class.jingle_xmpp::XmlBuilder" }
%"class.jingle_xmpp::XmppStanzaParser::ParseHandler" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmppStanzaParser"* }
%"class.jingle_xmpp::XmlParseHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlParser" = type <{ i32 (...)**, %"class.jingle_xmpp::XmlParser::ParseContext", %struct.XML_ParserStruct*, %"class.jingle_xmpp::XmlParseHandler"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlParser::ParseContext" = type { %"class.jingle_xmpp::XmlParseContext", %"class.jingle_xmpp::XmlnsStack", i32, i64, i64, i64 }
%"class.jingle_xmpp::XmlParseContext" = type { i32 (...)** }
%struct.XML_ParserStruct = type opaque
%"class.jingle_xmpp::XmlBuilder" = type { %"class.jingle_xmpp::XmlParseHandler", %"class.jingle_xmpp::XmlElement"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17" }
%"class.jingle_xmpp::XmlElement" = type <{ %"class.jingle_xmpp::XmlChild", %"class.jingle_xmpp::QName", %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::XmlChild"*, %"class.jingle_xmpp::XmlChild"*, i8, [7 x i8] }>
%"class.jingle_xmpp::XmlChild" = type { i32 (...)**, %"class.jingle_xmpp::XmlChild"* }
%"class.jingle_xmpp::QName" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.jingle_xmpp::XmlAttr" = type { %"class.jingle_xmpp::XmlAttr"*, %"class.jingle_xmpp::QName", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::vector.20"* }
%"class.std::__1::vector.20" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.jingle_xmpp::XmppLoginTask"* }
%"class.jingle_xmpp::XmppLoginTask" = type { %"class.jingle_xmpp::XmppEngineImpl"*, i8, i8, i32, %"class.jingle_xmpp::XmlElement"*, i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.11", %"class.jingle_xmpp::Jid", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.jingle_xmpp::SaslMechanism"* }
%"class.jingle_xmpp::SaslMechanism" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.jingle_xmpp::Jid" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.jingle_xmpp::XmlElement"* }
%"class.jingle_xmpp::XmppOutputHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmppSessionHandler" = type { i32 (...)** }
%"class.jingle_xmpp::XmlnsStack" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::vector.4"* }
%"class.std::__1::vector.4" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::vector.39"* }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.std::__1::__compressed_pair.40" }
%"class.jingle_xmpp::XmppStanzaHandler" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.jingle_xmpp::XmppStanzaHandler"** }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::vector.51"* }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"**, %"class.std::__1::__compressed_pair.53" }
%"class.jingle_xmpp::XmppIqEntry" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.jingle_xmpp::XmppIqEntry"** }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.jingle_xmpp::SaslHandler"* }
%"class.jingle_xmpp::SaslHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.jingle_xmpp::XmppEngineImpl::EnterExit" = type <{ %"class.jingle_xmpp::XmppEngineImpl"*, i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_iostream" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.jingle_xmpp::XmppIqHandler" = type { i32 (...)** }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN11jingle_xmpp22XmppStanzaParseHandlerD2Ev = comdat any

$_ZN11jingle_xmpp3JidaSERKS0_ = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl11SetLanguageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl8GetStateEv = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl11IsEncryptedEv = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl8GetErrorEPi = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl14GetStreamErrorEv = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl7FullJidEv = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerD0Ev = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler11StartStreamEPKNS_10XmlElementE = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler6StanzaEPKNS_10XmlElementE = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler9EndStreamEv = comdat any

$_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler8XmlErrorEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerE = comdat any

@_ZTVN11jingle_xmpp14XmppEngineImplE = hidden unnamed_addr constant { [32 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImplD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImplD0Ev to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppOutputHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl16SetOutputHandlerEPNS_17XmppOutputHandlerE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, i8*, i64)* @_ZN11jingle_xmpp14XmppEngineImpl11HandleInputEPKcm to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, i32)* @_ZN11jingle_xmpp14XmppEngineImpl16ConnectionClosedEi to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::Jid"*)* @_ZN11jingle_xmpp14XmppEngineImpl7SetUserERKNS_3JidE to i8*), i8* bitcast (%"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl7GetUserEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::SaslHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl14SetSaslHandlerEPNS_11SaslHandlerE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, i32)* @_ZN11jingle_xmpp14XmppEngineImpl6SetTlsENS_10TlsOptionsE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp14XmppEngineImpl12SetTlsServerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_ to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl6GetTlsEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp14XmppEngineImpl20SetRequestedResourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (%"class.std::__1::basic_string"* (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl20GetRequestedResourceEv to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp14XmppEngineImpl11SetLanguageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppSessionHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl17SetSessionHandlerEPNS_18XmppSessionHandlerE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl7ConnectEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl8GetStateEv to i8*), i8* bitcast (i1 (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl11IsEncryptedEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, i32*)* @_ZN11jingle_xmpp14XmppEngineImpl8GetErrorEPi to i8*), i8* bitcast (%"class.jingle_xmpp::XmlElement"* (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl14GetStreamErrorEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl10DisconnectEv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppStanzaHandler"*, i32)* @_ZN11jingle_xmpp14XmppEngineImpl16AddStanzaHandlerEPNS_17XmppStanzaHandlerENS_10XmppEngine12HandlerLevelE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppStanzaHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl19RemoveStanzaHandlerEPNS_17XmppStanzaHandlerE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp14XmppEngineImpl10SendStanzaEPKNS_10XmlElementE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp14XmppEngineImpl7SendRawERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmppIqHandler"*, i8**)* @_ZN11jingle_xmpp14XmppEngineImpl6SendIqEPKNS_10XmlElementEPNS_13XmppIqHandlerEPPv to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, i8*, %"class.jingle_xmpp::XmppIqHandler"**)* @_ZN11jingle_xmpp14XmppEngineImpl15RemoveIqHandlerEPvPPNS_13XmppIqHandlerE to i8*), i8* bitcast (i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)* @_ZN11jingle_xmpp14XmppEngineImpl15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (%"class.jingle_xmpp::Jid"* (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl7FullJidEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl6NextIdEv to i8*)] }, align 8
@_ZN11jingle_xmpp9STR_EMPTYE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [7 x i8] c"stream\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"http://etherx.jabber.org/streams\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"jabber:client\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"</stream:stream>\00", align 1
@_ZN11jingle_xmpp15QN_STREAM_ERRORE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp7QN_TYPEE = external global %"struct.jingle_xmpp::StaticQName", align 8
@_ZN11jingle_xmpp5QN_IQE = external global %"struct.jingle_xmpp::StaticQName", align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"<stream:stream to=\22\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\22 \00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"xml:lang=\22\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"version=\221.0\22 \00", align 1
@.str.12 = private unnamed_addr constant [49 x i8] c"xmlns:stream=\22http://etherx.jabber.org/streams\22 \00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"xmlns=\22jabber:client\22>\0D\0A\00", align 1
@_ZTVN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.jingle_xmpp::XmppStanzaParseHandler"*)* @_ZN11jingle_xmpp22XmppStanzaParseHandlerD2Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerD0Ev to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler11StartStreamEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*, %"class.jingle_xmpp::XmlElement"*)* @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler6StanzaEPKNS_10XmlElementE to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler9EndStreamEv to i8*), i8* bitcast (void (%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*)* @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler8XmlErrorEv to i8*)] }, comdat, align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN11jingle_xmpp14XmppEngineImplC1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppEngineImpl"*), void (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImplC2Ev
@_ZN11jingle_xmpp14XmppEngineImplD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppEngineImpl"*), void (%"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImplD2Ev
@_ZN11jingle_xmpp14XmppEngineImpl9EnterExitC1EPS0_ = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppEngineImpl::EnterExit"*, %"class.jingle_xmpp::XmppEngineImpl"*), void (%"class.jingle_xmpp::XmppEngineImpl::EnterExit"*, %"class.jingle_xmpp::XmppEngineImpl"*)* @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitC2EPS0_
@_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD1Ev = hidden unnamed_addr alias void (%"class.jingle_xmpp::XmppEngineImpl::EnterExit"*), void (%"class.jingle_xmpp::XmppEngineImpl::EnterExit"*)* @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.jingle_xmpp::XmppEngine"* @_ZN11jingle_xmpp10XmppEngine6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 608) #13
  %2 = bitcast i8* %1 to %"class.jingle_xmpp::XmppEngineImpl"*
  tail call void @_ZN11jingle_xmpp14XmppEngineImplC2Ev(%"class.jingle_xmpp::XmppEngineImpl"* nonnull %2)
  %3 = bitcast i8* %1 to %"class.jingle_xmpp::XmppEngine"*
  ret %"class.jingle_xmpp::XmppEngine"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImplC2Ev(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN11jingle_xmpp14XmppEngineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 1, i32 1
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11jingle_xmpp16XmppStanzaParserC1EPNS_22XmppStanzaParseHandlerE(%"class.jingle_xmpp::XmppStanzaParser"* %8, %"class.jingle_xmpp::XmppStanzaParseHandler"* %9) #14
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 4
  tail call void @_ZN11jingle_xmpp3JidC1Ev(%"class.jingle_xmpp::Jid"* %11) #14
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 5
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #14
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6
  %15 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %16 = icmp ugt i64 %15, -17
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = bitcast %"class.std::__1::basic_string"* %14 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %18) #15
  unreachable

19:                                               ; preds = %1
  %20 = icmp ult i64 %15, 23
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = add nuw i64 %15, 16
  %23 = and i64 %22, -16
  %24 = tail call i8* @_Znwm(i64 %23) #13
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = or i64 %23, -9223372036854775808
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %15, i64* %28, align 8
  br label %35

29:                                               ; preds = %19
  %30 = trunc i64 %15 to i8
  %31 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  store i8 %30, i8* %32, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %34 = icmp eq i64 %15, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29, %21
  %36 = phi i8* [ %24, %21 ], [ %33, %29 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %15, i1 false) #14
  br label %37

37:                                               ; preds = %29, %35
  %38 = phi i8* [ %33, %29 ], [ %36, %35 ]
  %39 = getelementptr inbounds i8, i8* %38, i64 %15
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 7
  store i32 2, i32* %40, align 8
  %41 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 8
  %42 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10
  %43 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 48, i1 false)
  %44 = tail call i8* @_Znwm(i64 176) #13
  %45 = bitcast i8* %44 to %"class.jingle_xmpp::XmppLoginTask"*
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskC1EPNS_14XmppEngineImplE(%"class.jingle_xmpp::XmppLoginTask"* nonnull %45, %"class.jingle_xmpp::XmppEngineImpl"* %0) #14
  %46 = ptrtoint i8* %44 to i64
  %47 = bitcast %"class.std::__1::unique_ptr.24"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 11
  %49 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 13
  %50 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 28, i1 false)
  tail call void @_ZN11jingle_xmpp3JidC1Ev(%"class.jingle_xmpp::Jid"* %49) #14
  %51 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 15
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %54 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 20
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 22
  %56 = bitcast i32* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 17, i1 false)
  %57 = bitcast %"class.jingle_xmpp::XmppOutputHandler"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false)
  tail call void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"* %55) #14
  %58 = getelementptr %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 0
  %59 = bitcast %"class.std::__1::unique_ptr.36"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 48, i1 false)
  %60 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24
  %61 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #14
  %62 = ptrtoint i8* %61 to i64
  %63 = bitcast %"class.std::__1::unique_ptr.48"* %60 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 25
  %65 = bitcast %"class.std::__1::unique_ptr.61"* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26
  %67 = tail call i8* @_Znwm(i64 280) #13
  %68 = getelementptr inbounds i8, i8* %67, i64 128
  %69 = bitcast i8* %68 to i32 (...)***
  %70 = bitcast i8* %67 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %69, align 8
  %71 = getelementptr inbounds i8, i8* %67, i64 16
  %72 = bitcast i8* %71 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds i8, i8* %67, i64 24
  %74 = bitcast i8* %73 to %"class.std::__1::basic_streambuf"*
  %75 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %76 = bitcast i8* %67 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %78 = bitcast i8* %67 to i8**
  %79 = inttoptr i64 %75 to i8*
  %80 = getelementptr i8, i8* %79, i64 -24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds i8, i8* %67, i64 %82
  %84 = bitcast i8* %83 to i64*
  store i64 %77, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %67, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = load i8*, i8** %78, align 8
  %88 = getelementptr i8, i8* %87, i64 -24
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds i8, i8* %67, i64 %90
  %92 = bitcast i8* %91 to %"class.std::__1::ios_base"*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %92, i8* %73) #14
  %93 = getelementptr inbounds i8, i8* %91, i64 136
  %94 = bitcast i8* %93 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 144
  %96 = bitcast i8* %95 to i32*
  store i32 -1, i32* %96, align 8
  %97 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %98 = bitcast i8* %71 to i64*
  store i64 %97, i64* %98, align 8
  %99 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %100 = inttoptr i64 %97 to i8*
  %101 = getelementptr i8, i8* %100, i64 -24
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds i8, i8* %71, i64 %103
  %105 = bitcast i8* %104 to i64*
  store i64 %99, i64* %105, align 8
  %106 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %106, i64* %76, align 8
  %107 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %108 = inttoptr i64 %106 to i8*
  %109 = getelementptr i8, i8* %108, i64 -24
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds i8, i8* %67, i64 %111
  %113 = bitcast i8* %112 to i64*
  store i64 %107, i64* %113, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %70, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %69, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %72, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %74) #14
  %114 = bitcast i8* %73 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds i8, i8* %67, i64 88
  %116 = getelementptr inbounds i8, i8* %67, i64 120
  %117 = bitcast i8* %116 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 32, i1 false) #14
  store i32 24, i32* %117, align 8
  %118 = ptrtoint i8* %67 to i64
  %119 = bitcast %"class.std::__1::unique_ptr.67"* %66 to i64*
  store i64 %118, i64* %119, align 8
  %120 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 0, i64 24, i1 false) #14
  %121 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %121, align 8
  %123 = bitcast %"class.std::__1::vector.39"** %121 to i8**
  store i8* %120, i8** %123, align 8
  %124 = icmp eq %"class.std::__1::vector.39"* %122, null
  br i1 %124, label %164, label %153

125:                                              ; preds = %249
  %126 = load i8*, i8** %256, align 8
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %249, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #14
  %128 = load i8, i8* %252, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %133

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #14
  %134 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #14
  %135 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 0, i8* %136, align 1
  store i8 0, i8* %134, align 8
  %137 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #14
  %138 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  store i8 13, i8* %139, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %137, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i64 13, i1 false) #14
  %140 = getelementptr inbounds i8, i8* %137, i64 13
  store i8 0, i8* %140, align 1
  call void @_ZN11jingle_xmpp10XmlnsStack8AddXmlnsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmlnsStack"* %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %141 = load i8, i8* %139, align 1
  %142 = icmp slt i8 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %133
  %144 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #13
  br label %146

146:                                              ; preds = %133, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #14
  %147 = load i8, i8* %136, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #13
  br label %152

152:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #14
  ret void

153:                                              ; preds = %37
  %154 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %122, i64 0, i32 0, i32 0
  %155 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %154, align 8
  %156 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %155, null
  br i1 %156, label %162, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %155 to i64
  %159 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %122, i64 0, i32 0, i32 1
  %160 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %159 to i64*
  store i64 %158, i64* %160, align 8
  %161 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %155 to i8*
  tail call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %157, %153
  %163 = bitcast %"class.std::__1::vector.39"* %122 to i8*
  tail call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %37, %162
  %165 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #14
  %166 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 1, i32 0, i32 0, i32 0
  %167 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %166, align 8
  %168 = bitcast %"class.std::__1::vector.39"** %166 to i8**
  store i8* %165, i8** %168, align 8
  %169 = icmp eq %"class.std::__1::vector.39"* %167, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %167, i64 0, i32 0, i32 0
  %172 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %171, align 8
  %173 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %172 to i64
  %176 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %167, i64 0, i32 0, i32 1
  %177 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %172 to i8*
  tail call void @_ZdlPv(i8* %178) #13
  br label %179

179:                                              ; preds = %174, %170
  %180 = bitcast %"class.std::__1::vector.39"* %167 to i8*
  tail call void @_ZdlPv(i8* %180) #13
  br label %181

181:                                              ; preds = %179, %164
  %182 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 0, i64 24, i1 false) #14
  %183 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 2, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %183, align 8
  %185 = bitcast %"class.std::__1::vector.39"** %183 to i8**
  store i8* %182, i8** %185, align 8
  %186 = icmp eq %"class.std::__1::vector.39"* %184, null
  br i1 %186, label %198, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %184, i64 0, i32 0, i32 0
  %189 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %188, align 8
  %190 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %187
  %192 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %189 to i64
  %193 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %184, i64 0, i32 0, i32 1
  %194 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %189 to i8*
  tail call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %191, %187
  %197 = bitcast %"class.std::__1::vector.39"* %184 to i8*
  tail call void @_ZdlPv(i8* %197) #13
  br label %198

198:                                              ; preds = %196, %181
  %199 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 0, i64 24, i1 false) #14
  %200 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 3, i32 0, i32 0, i32 0
  %201 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %200, align 8
  %202 = bitcast %"class.std::__1::vector.39"** %200 to i8**
  store i8* %199, i8** %202, align 8
  %203 = icmp eq %"class.std::__1::vector.39"* %201, null
  br i1 %203, label %215, label %204

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %201, i64 0, i32 0, i32 0
  %206 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %205, align 8
  %207 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %206 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %201, i64 0, i32 0, i32 1
  %211 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %206 to i8*
  tail call void @_ZdlPv(i8* %212) #13
  br label %213

213:                                              ; preds = %208, %204
  %214 = bitcast %"class.std::__1::vector.39"* %201 to i8*
  tail call void @_ZdlPv(i8* %214) #13
  br label %215

215:                                              ; preds = %213, %198
  %216 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 0, i64 24, i1 false) #14
  %217 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 4, i32 0, i32 0, i32 0
  %218 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %217, align 8
  %219 = bitcast %"class.std::__1::vector.39"** %217 to i8**
  store i8* %216, i8** %219, align 8
  %220 = icmp eq %"class.std::__1::vector.39"* %218, null
  br i1 %220, label %232, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %218, i64 0, i32 0, i32 0
  %223 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %222, align 8
  %224 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %223, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %221
  %226 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %223 to i64
  %227 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %218, i64 0, i32 0, i32 1
  %228 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %227 to i64*
  store i64 %226, i64* %228, align 8
  %229 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %223 to i8*
  tail call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %225, %221
  %231 = bitcast %"class.std::__1::vector.39"* %218 to i8*
  tail call void @_ZdlPv(i8* %231) #13
  br label %232

232:                                              ; preds = %230, %215
  %233 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %233, i8 0, i64 24, i1 false) #14
  %234 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 5, i32 0, i32 0, i32 0
  %235 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %234, align 8
  %236 = bitcast %"class.std::__1::vector.39"** %234 to i8**
  store i8* %233, i8** %236, align 8
  %237 = icmp eq %"class.std::__1::vector.39"* %235, null
  br i1 %237, label %249, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %235, i64 0, i32 0, i32 0
  %240 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %239, align 8
  %241 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %238
  %243 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %240 to i64
  %244 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %235, i64 0, i32 0, i32 1
  %245 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %244 to i64*
  store i64 %243, i64* %245, align 8
  %246 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %240 to i8*
  tail call void @_ZdlPv(i8* %246) #13
  br label %247

247:                                              ; preds = %242, %238
  %248 = bitcast %"class.std::__1::vector.39"* %235 to i8*
  tail call void @_ZdlPv(i8* %248) #13
  br label %249

249:                                              ; preds = %247, %232
  %250 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #14
  %251 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  store i8 6, i8* %252, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %250, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1 false) #14
  %253 = getelementptr inbounds i8, i8* %250, i64 6
  store i8 0, i8* %253, align 2
  %254 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #14
  %255 = tail call i8* @_Znwm(i64 48) #13
  %256 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %255, i8** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %258, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %255, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32, i1 false) #14
  %259 = getelementptr inbounds i8, i8* %255, i64 32
  store i8 0, i8* %259, align 1
  call void @_ZN11jingle_xmpp10XmlnsStack8AddXmlnsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmlnsStack"* %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %260 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %125, label %127
}

declare void @_ZN11jingle_xmpp16XmppStanzaParserC1EPNS_22XmppStanzaParseHandlerE(%"class.jingle_xmpp::XmppStanzaParser"*, %"class.jingle_xmpp::XmppStanzaParseHandler"*) unnamed_addr #2

declare void @_ZN11jingle_xmpp3JidC1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #2

declare void @_ZN11jingle_xmpp13XmppLoginTaskC1EPNS_14XmppEngineImplE(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #2

declare void @_ZN11jingle_xmpp10XmlnsStackC1Ev(%"class.jingle_xmpp::XmlnsStack"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN11jingle_xmpp10XmlnsStack8AddXmlnsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmlnsStack"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImplD2Ev(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*] }, { [32 x i8*] }* @_ZTVN11jingle_xmpp14XmppEngineImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN11jingle_xmpp14XmppEngineImpl15DeleteIqCookiesEv(%"class.jingle_xmpp::XmppEngineImpl"* %0) #14
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %3, align 8
  store %"class.std::__1::basic_stringstream"* null, %"class.std::__1::basic_stringstream"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_stringstream"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_stringstream"* %4 to void (%"class.std::__1::basic_stringstream"*)***
  %8 = load void (%"class.std::__1::basic_stringstream"*)**, void (%"class.std::__1::basic_stringstream"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %8, i64 1
  %10 = load void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %9, align 8
  tail call void %10(%"class.std::__1::basic_stringstream"* nonnull %4) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %13 = load %"class.jingle_xmpp::SaslHandler"*, %"class.jingle_xmpp::SaslHandler"** %12, align 8
  store %"class.jingle_xmpp::SaslHandler"* null, %"class.jingle_xmpp::SaslHandler"** %12, align 8
  %14 = icmp eq %"class.jingle_xmpp::SaslHandler"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.jingle_xmpp::SaslHandler"* %13 to void (%"class.jingle_xmpp::SaslHandler"*)***
  %17 = load void (%"class.jingle_xmpp::SaslHandler"*)**, void (%"class.jingle_xmpp::SaslHandler"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.jingle_xmpp::SaslHandler"*)*, void (%"class.jingle_xmpp::SaslHandler"*)** %17, i64 1
  %19 = load void (%"class.jingle_xmpp::SaslHandler"*)*, void (%"class.jingle_xmpp::SaslHandler"*)** %18, align 8
  tail call void %19(%"class.jingle_xmpp::SaslHandler"* nonnull %13) #14
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 24, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::vector.51"*, %"class.std::__1::vector.51"** %21, align 8
  store %"class.std::__1::vector.51"* null, %"class.std::__1::vector.51"** %21, align 8
  %23 = icmp eq %"class.std::__1::vector.51"* %22, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %22, i64 0, i32 0, i32 0
  %26 = load %"class.jingle_xmpp::XmppIqEntry"**, %"class.jingle_xmpp::XmppIqEntry"*** %25, align 8
  %27 = icmp eq %"class.jingle_xmpp::XmppIqEntry"** %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = ptrtoint %"class.jingle_xmpp::XmppIqEntry"** %26 to i64
  %30 = getelementptr inbounds %"class.std::__1::vector.51", %"class.std::__1::vector.51"* %22, i64 0, i32 0, i32 1
  %31 = bitcast %"class.jingle_xmpp::XmppIqEntry"*** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = bitcast %"class.jingle_xmpp::XmppIqEntry"** %26 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %28, %24
  %34 = bitcast %"class.std::__1::vector.51"* %22 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %20, %33
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 5, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %36, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %36, align 8
  %38 = icmp eq %"class.std::__1::vector.39"* %37, null
  br i1 %38, label %50, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %37, i64 0, i32 0, i32 0
  %41 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %40, align 8
  %42 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %41 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %37, i64 0, i32 0, i32 1
  %46 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %41 to i8*
  tail call void @_ZdlPv(i8* %47) #13
  br label %48

48:                                               ; preds = %43, %39
  %49 = bitcast %"class.std::__1::vector.39"* %37 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %35, %48
  %51 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 4, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %51, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %51, align 8
  %53 = icmp eq %"class.std::__1::vector.39"* %52, null
  br i1 %53, label %126, label %115

54:                                               ; preds = %186
  %55 = bitcast %"class.jingle_xmpp::XmlElement"* %189 to void (%"class.jingle_xmpp::XmlElement"*)***
  %56 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %56, i64 4
  %58 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %57, align 8
  tail call void %58(%"class.jingle_xmpp::XmlElement"* nonnull %189) #14
  br label %59

59:                                               ; preds = %186, %54
  %60 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 13
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %60) #14
  %61 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 11
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %59, %66
  %70 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %71 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %70, align 8
  store %"class.jingle_xmpp::XmppLoginTask"* null, %"class.jingle_xmpp::XmppLoginTask"** %70, align 8
  %72 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"* nonnull %71) #14
  %74 = bitcast %"class.jingle_xmpp::XmppLoginTask"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %69, %73
  %76 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 9
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  tail call void @_ZdlPv(i8* %83) #13
  br label %84

84:                                               ; preds = %75, %81
  %85 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 8
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  tail call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %84, %90
  %94 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6
  %95 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  %97 = load i8, i8* %96, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  tail call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %93, %99
  %103 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 5
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %102, %108
  %112 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 4
  tail call void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"* %112) #14
  %113 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 2, i32 4
  tail call void @_ZN11jingle_xmpp10XmlBuilderD1Ev(%"class.jingle_xmpp::XmlBuilder"* %113) #14
  %114 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 2, i32 2
  tail call void @_ZN11jingle_xmpp9XmlParserD1Ev(%"class.jingle_xmpp::XmlParser"* %114) #14
  ret void

115:                                              ; preds = %50
  %116 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %52, i64 0, i32 0, i32 0
  %117 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %116, align 8
  %118 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %117 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %52, i64 0, i32 0, i32 1
  %122 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %117 to i8*
  tail call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %119, %115
  %125 = bitcast %"class.std::__1::vector.39"* %52 to i8*
  tail call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %124, %50
  %127 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 3, i32 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %127, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.39"* %128, null
  br i1 %129, label %141, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %128, i64 0, i32 0, i32 0
  %132 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %131, align 8
  %133 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %132, null
  br i1 %133, label %139, label %134

134:                                              ; preds = %130
  %135 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %132 to i64
  %136 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %128, i64 0, i32 0, i32 1
  %137 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %132 to i8*
  tail call void @_ZdlPv(i8* %138) #13
  br label %139

139:                                              ; preds = %134, %130
  %140 = bitcast %"class.std::__1::vector.39"* %128 to i8*
  tail call void @_ZdlPv(i8* %140) #13
  br label %141

141:                                              ; preds = %139, %126
  %142 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 2, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %142, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %142, align 8
  %144 = icmp eq %"class.std::__1::vector.39"* %143, null
  br i1 %144, label %156, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %143, i64 0, i32 0, i32 0
  %147 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %146, align 8
  %148 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %147, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %147 to i64
  %151 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %143, i64 0, i32 0, i32 1
  %152 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %151 to i64*
  store i64 %150, i64* %152, align 8
  %153 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %147 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %149, %145
  %155 = bitcast %"class.std::__1::vector.39"* %143 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  br label %156

156:                                              ; preds = %154, %141
  %157 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 1, i32 0, i32 0, i32 0
  %158 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %157, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %157, align 8
  %159 = icmp eq %"class.std::__1::vector.39"* %158, null
  br i1 %159, label %171, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %158, i64 0, i32 0, i32 0
  %162 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %161, align 8
  %163 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %162, null
  br i1 %163, label %169, label %164

164:                                              ; preds = %160
  %165 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %162 to i64
  %166 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %158, i64 0, i32 0, i32 1
  %167 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %166 to i64*
  store i64 %165, i64* %167, align 8
  %168 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %162 to i8*
  tail call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %164, %160
  %170 = bitcast %"class.std::__1::vector.39"* %158 to i8*
  tail call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %169, %156
  %172 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %172, align 8
  store %"class.std::__1::vector.39"* null, %"class.std::__1::vector.39"** %172, align 8
  %174 = icmp eq %"class.std::__1::vector.39"* %173, null
  br i1 %174, label %186, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %173, i64 0, i32 0, i32 0
  %177 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %176, align 8
  %178 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %177 to i64
  %181 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %173, i64 0, i32 0, i32 1
  %182 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %181 to i64*
  store i64 %180, i64* %182, align 8
  %183 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %177 to i8*
  tail call void @_ZdlPv(i8* %183) #13
  br label %184

184:                                              ; preds = %179, %175
  %185 = bitcast %"class.std::__1::vector.39"* %173 to i8*
  tail call void @_ZdlPv(i8* %185) #13
  br label %186

186:                                              ; preds = %184, %171
  %187 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 22
  tail call void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"* %187) #14
  %188 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %189 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %188, align 8
  store %"class.jingle_xmpp::XmlElement"* null, %"class.jingle_xmpp::XmlElement"** %188, align 8
  %190 = icmp eq %"class.jingle_xmpp::XmlElement"* %189, null
  br i1 %190, label %59, label %54
}

declare void @_ZN11jingle_xmpp14XmppEngineImpl15DeleteIqCookiesEv(%"class.jingle_xmpp::XmppEngineImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp10XmlnsStackD1Ev(%"class.jingle_xmpp::XmlnsStack"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp3JidD1Ev(%"class.jingle_xmpp::Jid"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp22XmppStanzaParseHandlerD2Ev(%"class.jingle_xmpp::XmppStanzaParseHandler"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImplD0Ev(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN11jingle_xmpp14XmppEngineImplD2Ev(%"class.jingle_xmpp::XmppEngineImpl"* %0) #14
  %2 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl16SetOutputHandlerEPNS_17XmppOutputHandlerE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, %"class.jingle_xmpp::XmppOutputHandler"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 20
  store %"class.jingle_xmpp::XmppOutputHandler"* %1, %"class.jingle_xmpp::XmppOutputHandler"** %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ 0, %6 ], [ 2, %2 ]
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl17SetSessionHandlerEPNS_18XmppSessionHandlerE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, %"class.jingle_xmpp::XmppSessionHandler"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 21
  store %"class.jingle_xmpp::XmppSessionHandler"* %1, %"class.jingle_xmpp::XmppSessionHandler"** %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ 0, %6 ], [ 2, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl11HandleInputEPKcm(%"class.jingle_xmpp::XmppEngineImpl"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -2
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %4, i64 0, i32 1
  %13 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %11, align 8
  store i32 %6, i32* %12, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 2, i32 2
  %18 = tail call zeroext i1 @_ZN11jingle_xmpp9XmlParser5ParseEPKcmb(%"class.jingle_xmpp::XmlParser"* %17, i8* %1, i64 %2, i1 zeroext false) #14
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  br label %19

19:                                               ; preds = %3, %9
  %20 = phi i32 [ 0, %9 ], [ 2, %3 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl16ConnectionClosedEi(%"class.jingle_xmpp::XmppEngineImpl"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 1
  %11 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %9, align 8
  store i32 %5, i32* %10, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = icmp eq i32 %1, 0
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %17 = select i1 %15, i32 8, i32 10
  store i32 %17, i32* %16, align 8
  %18 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 %1, i32* %18, align 4
  store i32 4, i32* %4, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  br label %19

19:                                               ; preds = %2, %7
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl11SignalErrorENS_10XmppEngine5ErrorEi(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 %2, i32* %9, align 4
  store i32 4, i32* %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl6SetTlsENS_10TlsOptionsE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 7
  store i32 %1, i32* %7, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i32 [ 0, %6 ], [ 2, %2 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl12SetTlsServerERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %71

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 8
  %9 = icmp eq %"class.std::__1::basic_string"* %8, %1
  br i1 %9, label %39, label %10

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %14, label %29, label %19

19:                                               ; preds = %10
  br i1 %18, label %23, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #14
  br label %39

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %25, i64 %27) #14
  br label %39

29:                                               ; preds = %10
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %35 = zext i8 %17 to i64
  %36 = select i1 %18, i8* %31, i8* %34
  %37 = select i1 %18, i64 %33, i64 %35
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %8, i8* %36, i64 %37) #14
  br label %39

39:                                               ; preds = %7, %20, %23, %29
  %40 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 9
  %41 = icmp eq %"class.std::__1::basic_string"* %40, %2
  br i1 %41, label %71, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %46, label %61, label %51

51:                                               ; preds = %42
  br i1 %50, label %55, label %52

52:                                               ; preds = %51
  %53 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #14
  br label %71

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %40, i8* %57, i64 %59) #14
  br label %71

61:                                               ; preds = %42
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %67 = zext i8 %49 to i64
  %68 = select i1 %50, i8* %63, i8* %66
  %69 = select i1 %50, i64 %65, i64 %67
  %70 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %40, i8* %68, i64 %69) #14
  br label %71

71:                                               ; preds = %61, %55, %52, %39, %3
  %72 = phi i32 [ 2, %3 ], [ 0, %39 ], [ 0, %52 ], [ 0, %55 ], [ 0, %61 ]
  ret i32 %72
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl6GetTlsEv(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl7SetUserERKNS_3JidE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 4
  %8 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp3JidaSERKS0_(%"class.jingle_xmpp::Jid"* %7, %"class.jingle_xmpp::Jid"* dereferenceable(72) %1)
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i32 [ 0, %6 ], [ 2, %2 ]
  ret i32 %10
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp3JidaSERKS0_(%"class.jingle_xmpp::Jid"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 0
  %4 = icmp eq %"class.jingle_xmpp::Jid"* %0, %1
  br i1 %4, label %96, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.jingle_xmpp::Jid"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.jingle_xmpp::Jid"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.jingle_xmpp::Jid"* %0 to i8*
  %17 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #14
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #14
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.jingle_xmpp::Jid"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #14
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #14
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %51, i64 %53) #14
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %62, i64 %63) #14
  br label %65

65:                                               ; preds = %46, %49, %55
  %66 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %0, i64 0, i32 2
  %67 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2
  %68 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %71, label %86, label %76

76:                                               ; preds = %65
  br i1 %75, label %80, label %77

77:                                               ; preds = %76
  %78 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  %79 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 24, i1 false) #14
  br label %96

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %82, i64 %84) #14
  br label %96

86:                                               ; preds = %65
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"class.jingle_xmpp::Jid", %"class.jingle_xmpp::Jid"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %67 to i8*
  %92 = zext i8 %74 to i64
  %93 = select i1 %75, i8* %88, i8* %91
  %94 = select i1 %75, i64 %90, i64 %92
  %95 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %66, i8* %93, i64 %94) #14
  br label %96

96:                                               ; preds = %2, %77, %80, %86
  ret %"class.jingle_xmpp::Jid"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp14XmppEngineImpl7GetUserEv(%"class.jingle_xmpp::XmppEngineImpl"* readnone) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 4
  ret %"class.jingle_xmpp::Jid"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl14SetSaslHandlerEPNS_11SaslHandlerE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, %"class.jingle_xmpp::SaslHandler"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %8 = load %"class.jingle_xmpp::SaslHandler"*, %"class.jingle_xmpp::SaslHandler"** %7, align 8
  store %"class.jingle_xmpp::SaslHandler"* %1, %"class.jingle_xmpp::SaslHandler"** %7, align 8
  %9 = icmp eq %"class.jingle_xmpp::SaslHandler"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.jingle_xmpp::SaslHandler"* %8 to void (%"class.jingle_xmpp::SaslHandler"*)***
  %12 = load void (%"class.jingle_xmpp::SaslHandler"*)**, void (%"class.jingle_xmpp::SaslHandler"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.jingle_xmpp::SaslHandler"*)*, void (%"class.jingle_xmpp::SaslHandler"*)** %12, i64 1
  %14 = load void (%"class.jingle_xmpp::SaslHandler"*)*, void (%"class.jingle_xmpp::SaslHandler"*)** %13, align 8
  tail call void %14(%"class.jingle_xmpp::SaslHandler"* nonnull %8) #14
  br label %15

15:                                               ; preds = %10, %6, %2
  %16 = phi i32 [ 2, %2 ], [ 0, %6 ], [ 0, %10 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl20SetRequestedResourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %38

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %38, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %13, label %28, label %18

18:                                               ; preds = %9
  br i1 %17, label %22, label %19

19:                                               ; preds = %18
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #14
  br label %38

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %24, i64 %26) #14
  br label %38

28:                                               ; preds = %9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %34 = zext i8 %16 to i64
  %35 = select i1 %17, i8* %30, i8* %33
  %36 = select i1 %17, i64 %32, i64 %34
  %37 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %7, i8* %35, i64 %36) #14
  br label %38

38:                                               ; preds = %28, %22, %19, %6, %2
  %39 = phi i32 [ 2, %2 ], [ 0, %6 ], [ 0, %19 ], [ 0, %22 ], [ 0, %28 ]
  ret i32 %39
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZN11jingle_xmpp14XmppEngineImpl20GetRequestedResourceEv(%"class.jingle_xmpp::XmppEngineImpl"* readnone) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 6
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl16AddStanzaHandlerEPNS_17XmppStanzaHandlerENS_10XmppEngine12HandlerLevelE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.jingle_xmpp::XmppStanzaHandler"*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %1 to i64
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 4
  br i1 %7, label %80, label %8

8:                                                ; preds = %3
  %9 = zext i32 %2 to i64
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 %9, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 1
  %13 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %14, align 8
  %16 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %13, %15
  %17 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %15 to i64
  br i1 %16, label %23, label %18

18:                                               ; preds = %8
  %19 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %13 to i64*
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %13, i64 1
  %21 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %20 to i64
  %22 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %12 to i64*
  store i64 %21, i64* %22, align 8
  br label %80

23:                                               ; preds = %8
  %24 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %13 to i64
  %25 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %12 to i64*
  %26 = bitcast %"class.std::__1::vector.39"* %11 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %24, %27
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = icmp ugt i64 %30, 2305843009213693951
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::vector.39"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %33) #15
  unreachable

34:                                               ; preds = %23
  %35 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %14 to i64*
  %36 = sub i64 %17, %27
  %37 = ashr exact i64 %36, 3
  %38 = icmp ult i64 %37, 1152921504606846975
  br i1 %38, label %39, label %47

39:                                               ; preds = %34
  %40 = ashr exact i64 %36, 2
  %41 = icmp ult i64 %40, %30
  %42 = select i1 %41, i64 %30, i64 %40
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = icmp ugt i64 %42, 2305843009213693951
  br i1 %45, label %46, label %47

46:                                               ; preds = %44
  tail call void @abort() #15
  unreachable

47:                                               ; preds = %44, %34
  %48 = phi i64 [ %42, %44 ], [ 2305843009213693951, %34 ]
  %49 = shl i64 %48, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to %"class.jingle_xmpp::XmppStanzaHandler"**
  br label %52

52:                                               ; preds = %47, %39
  %53 = phi i64 [ %48, %47 ], [ 0, %39 ]
  %54 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %51, %47 ], [ null, %39 ]
  %55 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %54, i64 %29
  %56 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %54, i64 %53
  %57 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %56 to i64
  %58 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %55 to i64*
  store i64 %4, i64* %58, align 8
  %59 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %55, i64 1
  %60 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %59 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 0
  %62 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %61, align 8
  %63 = load i64, i64* %25, align 8
  %64 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %62 to i64
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = sub nsw i64 0, %66
  %68 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %55, i64 %67
  %69 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %68 to i64
  %70 = icmp sgt i64 %65, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %52
  %72 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %68 to i8*
  %73 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %73, i64 %65, i1 false) #14
  %74 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %61, align 8
  br label %75

75:                                               ; preds = %71, %52
  %76 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %62, %52 ], [ %74, %71 ]
  store i64 %69, i64* %26, align 8
  store i64 %60, i64* %25, align 8
  store i64 %57, i64* %35, align 8
  %77 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %76 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %78, %75, %18, %3
  %81 = phi i32 [ 2, %3 ], [ 0, %18 ], [ 0, %75 ], [ 0, %78 ]
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl19RemoveStanzaHandlerEPNS_17XmppStanzaHandlerE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.jingle_xmpp::XmppStanzaHandler"*) unnamed_addr #0 align 2 {
  br label %7

3:                                                ; preds = %101
  %4 = and i8 %102, 1
  %5 = xor i8 %4, 1
  %6 = zext i8 %5 to i32
  ret i32 %6

7:                                                ; preds = %101, %2
  %8 = phi i64 [ 0, %2 ], [ %103, %101 ]
  %9 = phi i8 [ 0, %2 ], [ %102, %101 ]
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 %8, i32 0, i32 0, i32 0
  %11 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %11, i64 0, i32 0, i32 1
  %15 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %14, align 8
  %16 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %13, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %7, %21
  %18 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %22, %21 ], [ %13, %7 ]
  %19 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %18, align 8
  %20 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %19, %1
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %18, i64 1
  %23 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %22, %15
  br i1 %23, label %101, label %17

24:                                               ; preds = %17, %7
  %25 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %13, %7 ], [ %18, %17 ]
  %26 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %25 to i64
  %27 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %25, %15
  br i1 %27, label %101, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %25, i64 1
  %30 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %29, %15
  br i1 %30, label %83, label %31

31:                                               ; preds = %28
  %32 = getelementptr %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %15, i64 -2
  %33 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %32 to i64
  %34 = sub i64 %33, %26
  %35 = lshr i64 %34, 3
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %31, %51
  %40 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %53, %51 ], [ %29, %31 ]
  %41 = phi i64 [ %52, %51 ], [ %26, %31 ]
  %42 = phi i64 [ %54, %51 ], [ %37, %31 ]
  %43 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %40, align 8
  %44 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %43, %1
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %43 to i64
  %47 = inttoptr i64 %41 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %48 = inttoptr i64 %41 to i64*
  store i64 %46, i64* %48, align 8
  %49 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %47, i64 1
  %50 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %49 to i64
  br label %51

51:                                               ; preds = %45, %39
  %52 = phi i64 [ %41, %39 ], [ %50, %45 ]
  %53 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %40, i64 1
  %54 = add i64 %42, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %39, !llvm.loop !2

56:                                               ; preds = %51, %31
  %57 = phi i64 [ undef, %31 ], [ %52, %51 ]
  %58 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %29, %31 ], [ %53, %51 ]
  %59 = phi i64 [ %26, %31 ], [ %52, %51 ]
  %60 = icmp ult i64 %34, 24
  br i1 %60, label %77, label %61

61:                                               ; preds = %56, %133
  %62 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %135, %133 ], [ %58, %56 ]
  %63 = phi i64 [ %134, %133 ], [ %59, %56 ]
  %64 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %62, align 8
  %65 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %64, %1
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %64 to i64
  %68 = inttoptr i64 %63 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %69 = inttoptr i64 %63 to i64*
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %68, i64 1
  %71 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %70 to i64
  br label %72

72:                                               ; preds = %66, %61
  %73 = phi i64 [ %63, %61 ], [ %71, %66 ]
  %74 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %62, i64 1
  %75 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %74, align 8
  %76 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %75, %1
  br i1 %76, label %111, label %105

77:                                               ; preds = %133, %56
  %78 = phi i64 [ %57, %56 ], [ %134, %133 ]
  %79 = inttoptr i64 %78 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %80 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %10, align 8
  %81 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %80, i64 0, i32 0, i32 1
  %82 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %81, align 8
  br label %83

83:                                               ; preds = %77, %28
  %84 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %15, %28 ], [ %82, %77 ]
  %85 = phi %"class.std::__1::vector.39"* [ %11, %28 ], [ %80, %77 ]
  %86 = phi %"class.jingle_xmpp::XmppStanzaHandler"** [ %25, %28 ], [ %79, %77 ]
  %87 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %85, i64 0, i32 0, i32 1
  %88 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %86, %84
  br i1 %88, label %101, label %89

89:                                               ; preds = %83
  %90 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %84 to i64
  %91 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %87 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %92, %90
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %89
  %97 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %86 to i8*
  %98 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"** %84 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %93, i1 false) #14
  br label %99

99:                                               ; preds = %89, %96
  %100 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %86, i64 %94
  store %"class.jingle_xmpp::XmppStanzaHandler"** %100, %"class.jingle_xmpp::XmppStanzaHandler"*** %87, align 8
  br label %101

101:                                              ; preds = %21, %24, %83, %99
  %102 = phi i8 [ 1, %99 ], [ %9, %83 ], [ %9, %24 ], [ %9, %21 ]
  %103 = add nuw nsw i64 %8, 1
  %104 = icmp eq i64 %103, 6
  br i1 %104, label %3, label %7

105:                                              ; preds = %72
  %106 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %75 to i64
  %107 = inttoptr i64 %73 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %108 = inttoptr i64 %73 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %107, i64 1
  %110 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %109 to i64
  br label %111

111:                                              ; preds = %105, %72
  %112 = phi i64 [ %73, %72 ], [ %110, %105 ]
  %113 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %62, i64 2
  %114 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %113, align 8
  %115 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %114, %1
  br i1 %115, label %122, label %116

116:                                              ; preds = %111
  %117 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %114 to i64
  %118 = inttoptr i64 %112 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %119 = inttoptr i64 %112 to i64*
  store i64 %117, i64* %119, align 8
  %120 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %118, i64 1
  %121 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %120 to i64
  br label %122

122:                                              ; preds = %116, %111
  %123 = phi i64 [ %112, %111 ], [ %121, %116 ]
  %124 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %62, i64 3
  %125 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %124, align 8
  %126 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"* %125, %1
  br i1 %126, label %133, label %127

127:                                              ; preds = %122
  %128 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"* %125 to i64
  %129 = inttoptr i64 %123 to %"class.jingle_xmpp::XmppStanzaHandler"**
  %130 = inttoptr i64 %123 to i64*
  store i64 %128, i64* %130, align 8
  %131 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %129, i64 1
  %132 = ptrtoint %"class.jingle_xmpp::XmppStanzaHandler"** %131 to i64
  br label %133

133:                                              ; preds = %127, %122
  %134 = phi i64 [ %123, %122 ], [ %132, %127 ]
  %135 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %62, i64 4
  %136 = icmp eq %"class.jingle_xmpp::XmppStanzaHandler"** %135, %15
  br i1 %136, label %77, label %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl7ConnectEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %1
  %7 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2, i64 0, i32 1
  %10 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %8, align 8
  store i32 1, i32* %9, align 8
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  store i32 2, i32* %3, align 8
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %14, align 8
  %16 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %6
  tail call void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"* nonnull %15, %"class.jingle_xmpp::XmlElement"* null, i1 zeroext false) #14
  %18 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %14, align 8
  %19 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %18, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 10
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  store %"class.jingle_xmpp::XmppLoginTask"* null, %"class.jingle_xmpp::XmppLoginTask"** %14, align 8
  %23 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %18, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"* nonnull %18) #14
  %25 = bitcast %"class.jingle_xmpp::XmppLoginTask"* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  br label %26

26:                                               ; preds = %6, %24, %22, %17
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %27

27:                                               ; preds = %1, %26
  %28 = phi i32 [ 0, %26 ], [ 2, %1 ]
  ret i32 %28
}

declare void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmlElement"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl10SendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 1
  %11 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %9, align 8
  store i32 %5, i32* %10, align 8
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 8
  %15 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %16 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %15, align 8
  %17 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %7
  tail call void @_ZN11jingle_xmpp13XmppLoginTask14OutgoingStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"* nonnull %16, %"class.jingle_xmpp::XmlElement"* %1) #14
  br label %27

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %21 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %20, align 8
  %22 = icmp eq %"class.std::__1::basic_stringstream"* %21, null
  %23 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %21, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::basic_ostream.base"* %23 to %"class.std::__1::basic_ostream"*
  %25 = select i1 %22, %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"* %24
  %26 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 22
  tail call void @_ZN11jingle_xmpp10XmlPrinter8PrintXmlEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEPKNS_10XmlElementEPNS_10XmlnsStackE(%"class.std::__1::basic_ostream"* %25, %"class.jingle_xmpp::XmlElement"* %1, %"class.jingle_xmpp::XmlnsStack"* %26) #14
  br label %27

27:                                               ; preds = %19, %18
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  br label %28

28:                                               ; preds = %2, %27
  %29 = phi i32 [ 0, %27 ], [ 2, %2 ]
  ret i32 %29
}

declare void @_ZN11jingle_xmpp13XmppLoginTask14OutgoingStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl18InternalSendStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_stringstream"* %4, null
  %6 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_ostream.base"* %6 to %"class.std::__1::basic_ostream"*
  %8 = select i1 %5, %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"* %7
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 22
  tail call void @_ZN11jingle_xmpp10XmlPrinter8PrintXmlEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEPKNS_10XmlElementEPNS_10XmlnsStackE(%"class.std::__1::basic_ostream"* %8, %"class.jingle_xmpp::XmlElement"* %1, %"class.jingle_xmpp::XmlnsStack"* %9) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl7SendRawERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %36, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %8, align 8
  %10 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %9, null
  br i1 %10, label %11, label %36

11:                                               ; preds = %7
  %12 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3, i64 0, i32 1
  %15 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %13, align 8
  store i32 %5, i32* %14, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %20, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_ostream.base"* %21 to %"class.std::__1::basic_ostream"*
  %23 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %32 = zext i8 %25 to i64
  %33 = select i1 %26, i8* %28, i8* %31
  %34 = select i1 %26, i64 %30, i64 %32
  %35 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* %33, i64 %34) #14
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  br label %36

36:                                               ; preds = %7, %2, %11
  %37 = phi i32 [ 0, %11 ], [ 2, %7 ], [ 2, %2 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl6NextIdEv(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppEngineImpl"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_stringstream", align 8
  %4 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 272, i1 false)
  %7 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %13 = bitcast %"class.std::__1::basic_stringstream"* %3 to i64*
  store i64 %12, i64* %13, align 8
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_stringstream"* %3 to i8**
  %16 = inttoptr i64 %12 to i8*
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %14, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8
  %23 = load i8*, i8** %15, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %4, i64 %26
  %28 = bitcast i8* %27 to %"class.std::__1::ios_base"*
  %29 = bitcast %"class.std::__1::basic_stringbuf"* %10 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %28, i8* %29) #14
  %30 = getelementptr inbounds i8, i8* %27, i64 136
  %31 = bitcast i8* %30 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %27, i64 144
  %33 = bitcast i8* %32 to i32*
  store i32 -1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 0, i32 1
  %35 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %36 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i64*
  store i64 %35, i64* %36, align 8
  %37 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %38 = inttoptr i64 %35 to i8*
  %39 = getelementptr i8, i8* %38, i64 -24
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::basic_ostream.base"* %34 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 %41
  %44 = bitcast i8* %43 to i64*
  store i64 %37, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %13, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %4, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %11) #14
  %53 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 1, i32 3
  %56 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 32, i1 false) #14
  store i32 24, i32* %55, align 8
  %57 = bitcast %"class.std::__1::basic_ostream.base"* %34 to %"class.std::__1::basic_ostream"*
  %58 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %1, i64 0, i32 12
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 8
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %57, i32 %59) #14
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %10) #14
  %62 = load i64, i64* bitcast ([10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %62, i64* %13, align 8
  %63 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 8) to i64*), align 8
  %64 = inttoptr i64 %62 to i8*
  %65 = getelementptr i8, i8* %64, i64 -24
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = getelementptr inbounds i8, i8* %4, i64 %67
  %69 = bitcast i8* %68 to i64*
  store i64 %63, i64* %69, align 8
  %70 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 9) to i64*), align 8
  store i64 %70, i64* %36, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %71 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %2, %75
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %11) #14
  %79 = bitcast %"class.std::__1::basic_stringstream"* %3 to %"class.std::__1::basic_iostream"*
  call void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"* nonnull %79, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #14
  %80 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %3, i64 0, i32 2
  %81 = bitcast %"class.std::__1::basic_ios.base"* %80 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %81) #14
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %4) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl10DisconnectEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.jingle_xmpp::XmppEngineImpl::EnterExit", align 8
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %22, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2, i64 0, i32 1
  %10 = bitcast %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store %"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmppEngineImpl"** %8, align 8
  store i32 %4, i32* %9, align 8
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  %14 = icmp eq i32 %4, 3
  br i1 %14, label %15, label %21

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %17, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_ostream.base"* %18 to %"class.std::__1::basic_ostream"*
  %20 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 16) #14
  br label %21

21:                                               ; preds = %15, %6
  store i32 4, i32* %3, align 8
  call void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %22

22:                                               ; preds = %1, %21
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl13IncomingStartEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %29

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 19
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %12 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %11, align 8
  %13 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  tail call void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"* nonnull %12, %"class.jingle_xmpp::XmlElement"* %1, i1 zeroext true) #14
  %15 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %11, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 10
  br i1 %18, label %19, label %29

19:                                               ; preds = %14
  store %"class.jingle_xmpp::XmppLoginTask"* null, %"class.jingle_xmpp::XmppLoginTask"** %11, align 8
  %20 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %15, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"* nonnull %15) #14
  %22 = bitcast %"class.jingle_xmpp::XmppLoginTask"* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %29

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 4
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  store i32 1, i32* %3, align 8
  %28 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 0, i32* %28, align 4
  store i32 4, i32* %24, align 8
  br label %29

29:                                               ; preds = %2, %27, %23, %21, %19, %6, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN11jingle_xmpp14XmppEngineImpl8HasErrorEv(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl14IncomingStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %197

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 19
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %197

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmlElement", %"class.jingle_xmpp::XmlElement"* %1, i64 0, i32 1
  %14 = tail call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %13, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp15QN_STREAM_ERRORE) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %37

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %197, label %20

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 104) #13
  %22 = bitcast i8* %21 to %"class.jingle_xmpp::XmlElement"*
  tail call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %22, %"class.jingle_xmpp::XmlElement"* dereferenceable(104) %1) #14
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %24 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %23, align 8
  %25 = bitcast %"class.jingle_xmpp::XmlElement"** %23 to i8**
  store i8* %21, i8** %25, align 8
  %26 = icmp eq %"class.jingle_xmpp::XmlElement"* %24, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = bitcast %"class.jingle_xmpp::XmlElement"* %24 to void (%"class.jingle_xmpp::XmlElement"*)***
  %29 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %29, i64 4
  %31 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %30, align 8
  tail call void %31(%"class.jingle_xmpp::XmlElement"* nonnull %24) #14
  br label %32

32:                                               ; preds = %27, %20
  %33 = load i32, i32* %17, align 8
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %197, label %35

35:                                               ; preds = %32
  store i32 2, i32* %5, align 8
  %36 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 0, i32* %36, align 4
  store i32 4, i32* %17, align 8
  br label %197

37:                                               ; preds = %12
  %38 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %39 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %38, align 8
  %40 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %39, null
  br i1 %40, label %50, label %41

41:                                               ; preds = %37
  tail call void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"* nonnull %39, %"class.jingle_xmpp::XmlElement"* %1, i1 zeroext false) #14
  %42 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %38, align 8
  %43 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %42, i64 0, i32 3
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 10
  br i1 %45, label %46, label %197

46:                                               ; preds = %41
  store %"class.jingle_xmpp::XmppLoginTask"* null, %"class.jingle_xmpp::XmppLoginTask"** %38, align 8
  %47 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %42, null
  br i1 %47, label %197, label %48

48:                                               ; preds = %46
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"* nonnull %42) #14
  %49 = bitcast %"class.jingle_xmpp::XmppLoginTask"* %42 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %197

50:                                               ; preds = %37
  %51 = tail call zeroext i1 @_ZN11jingle_xmpp14XmppEngineImpl16HandleIqResponseEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmlElement"* %1) #14
  br i1 %51, label %197, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 1, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %54, i64 0, i32 0, i32 1
  %56 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.39"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %57, %59
  br i1 %60, label %61, label %70

61:                                               ; preds = %70, %52
  %62 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 2, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %63, i64 0, i32 0, i32 1
  %65 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector.39"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %66, %68
  br i1 %69, label %115, label %102

70:                                               ; preds = %52, %70
  %71 = phi %"class.std::__1::vector.39"* [ %83, %70 ], [ %54, %52 ]
  %72 = phi i64 [ %82, %70 ], [ 0, %52 ]
  %73 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %71, i64 0, i32 0, i32 0
  %74 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %73, align 8
  %75 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %74, i64 %72
  %76 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %75, align 8
  %77 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"* %76 to i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)***
  %78 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)**, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*** %77, align 8
  %79 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %78, i64 2
  %80 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.jingle_xmpp::XmppStanzaHandler"* %76, %"class.jingle_xmpp::XmlElement"* %1) #14
  %82 = add nuw i64 %72, 1
  %83 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %53, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %83, i64 0, i32 0, i32 1
  %85 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::vector.39"* %83 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %82, %90
  br i1 %91, label %70, label %61

92:                                               ; preds = %102
  %93 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %62, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %93, i64 0, i32 0, i32 1
  %95 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = bitcast %"class.std::__1::vector.39"* %93 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %96, %98
  %100 = ashr exact i64 %99, 3
  %101 = icmp ult i64 %114, %100
  br i1 %101, label %102, label %115

102:                                              ; preds = %61, %92
  %103 = phi %"class.std::__1::vector.39"* [ %93, %92 ], [ %63, %61 ]
  %104 = phi i64 [ %114, %92 ], [ 0, %61 ]
  %105 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %103, i64 0, i32 0, i32 0
  %106 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %105, align 8
  %107 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %106, i64 %104
  %108 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %107, align 8
  %109 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"* %108 to i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)***
  %110 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)**, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*** %109, align 8
  %111 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %110, i64 2
  %112 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %111, align 8
  %113 = tail call zeroext i1 %112(%"class.jingle_xmpp::XmppStanzaHandler"* %108, %"class.jingle_xmpp::XmlElement"* %1) #14
  %114 = add nuw i64 %104, 1
  br i1 %113, label %197, label %92

115:                                              ; preds = %92, %61
  %116 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 3, i32 0, i32 0, i32 0
  %117 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %117, i64 0, i32 0, i32 1
  %119 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector.39"* %117 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %120, %122
  br i1 %123, label %221, label %198

124:                                              ; preds = %285
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  %128 = load i64, i64* %288, align 8
  %129 = zext i8 %126 to i64
  %130 = select i1 %127, i64 %128, i64 %129
  %131 = icmp eq i64 %130, 5
  br i1 %131, label %132, label %139

132:                                              ; preds = %124
  %133 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5) #14
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %190, label %135

135:                                              ; preds = %132
  %136 = load i8, i8* %125, align 1
  %137 = load i64, i64* %288, align 8
  %138 = zext i8 %136 to i64
  br label %139

139:                                              ; preds = %135, %124
  %140 = phi i64 [ %138, %135 ], [ %129, %124 ]
  %141 = phi i64 [ %137, %135 ], [ %128, %124 ]
  %142 = phi i8 [ %136, %135 ], [ %126, %124 ]
  %143 = icmp slt i8 %142, 0
  %144 = select i1 %143, i64 %141, i64 %140
  %145 = icmp eq i64 %144, 6
  br i1 %145, label %146, label %149

146:                                              ; preds = %139
  %147 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #14
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %190, label %149

149:                                              ; preds = %139, %146
  %150 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #14
  %151 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0)) #14
  %152 = icmp ugt i64 %151, -17
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %154) #15
  unreachable

155:                                              ; preds = %149
  %156 = icmp ult i64 %151, 23
  br i1 %156, label %166, label %157

157:                                              ; preds = %155
  %158 = add nuw i64 %151, 16
  %159 = and i64 %158, -16
  %160 = call i8* @_Znwm(i64 %159) #13
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %160, i8** %161, align 8
  %162 = or i64 %159, -9223372036854775808
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %151, i64* %164, align 8
  %165 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %171

166:                                              ; preds = %155
  %167 = trunc i64 %151 to i8
  %168 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  store i8 %167, i8* %169, align 1
  %170 = icmp eq i64 %151, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %166, %157
  %172 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %168, %166 ], [ %165, %157 ]
  %173 = phi i8* [ %150, %166 ], [ %160, %157 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %173, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN11jingle_xmpp9STR_EMPTYE, i64 0, i64 0), i64 %151, i1 false) #14
  br label %174

174:                                              ; preds = %166, %171
  %175 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %168, %166 ], [ %172, %171 ]
  %176 = phi i8* [ %150, %166 ], [ %173, %171 ]
  %177 = getelementptr inbounds i8, i8* %176, i64 %151
  store i8 0, i8* %177, align 1
  %178 = bitcast %"class.jingle_xmpp::XmppEngineImpl"* %0 to i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)***
  %179 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)**, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*** %178, align 8
  %180 = getelementptr inbounds i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %179, i64 27
  %181 = load i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)*, i32 (%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"*)** %180, align 8
  %182 = call i32 %181(%"class.jingle_xmpp::XmppEngineImpl"* %0, %"class.jingle_xmpp::XmlElement"* %1, i32 2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #14
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  call void @_ZdlPv(i8* %188) #13
  br label %189

189:                                              ; preds = %174, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #14
  br label %190

190:                                              ; preds = %285, %189, %146, %132
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %292, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %190
  %195 = load i8*, i8** %287, align 8
  call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %190, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #14
  br label %197

197:                                              ; preds = %102, %198, %230, %262, %2, %48, %46, %35, %32, %16, %8, %41, %50, %196
  ret void

198:                                              ; preds = %115, %211
  %199 = phi %"class.std::__1::vector.39"* [ %212, %211 ], [ %117, %115 ]
  %200 = phi i64 [ %210, %211 ], [ 0, %115 ]
  %201 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %199, i64 0, i32 0, i32 0
  %202 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %201, align 8
  %203 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %202, i64 %200
  %204 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %203, align 8
  %205 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"* %204 to i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)***
  %206 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)**, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*** %205, align 8
  %207 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %206, i64 2
  %208 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %207, align 8
  %209 = tail call zeroext i1 %208(%"class.jingle_xmpp::XmppStanzaHandler"* %204, %"class.jingle_xmpp::XmlElement"* %1) #14
  %210 = add nuw i64 %200, 1
  br i1 %209, label %197, label %211

211:                                              ; preds = %198
  %212 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %116, align 8
  %213 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %212, i64 0, i32 0, i32 1
  %214 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.std::__1::vector.39"* %212 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %215, %217
  %219 = ashr exact i64 %218, 3
  %220 = icmp ult i64 %210, %219
  br i1 %220, label %198, label %221

221:                                              ; preds = %211, %115
  %222 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 4, i32 0, i32 0, i32 0
  %223 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %222, align 8
  %224 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %223, i64 0, i32 0, i32 1
  %225 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.std::__1::vector.39"* %223 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = icmp eq i64 %226, %228
  br i1 %229, label %253, label %230

230:                                              ; preds = %221, %243
  %231 = phi %"class.std::__1::vector.39"* [ %244, %243 ], [ %223, %221 ]
  %232 = phi i64 [ %242, %243 ], [ 0, %221 ]
  %233 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %231, i64 0, i32 0, i32 0
  %234 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %233, align 8
  %235 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %234, i64 %232
  %236 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %235, align 8
  %237 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"* %236 to i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)***
  %238 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)**, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*** %237, align 8
  %239 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %238, i64 2
  %240 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %239, align 8
  %241 = tail call zeroext i1 %240(%"class.jingle_xmpp::XmppStanzaHandler"* %236, %"class.jingle_xmpp::XmlElement"* %1) #14
  %242 = add nuw i64 %232, 1
  br i1 %241, label %197, label %243

243:                                              ; preds = %230
  %244 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %222, align 8
  %245 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %244, i64 0, i32 0, i32 1
  %246 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %245 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = bitcast %"class.std::__1::vector.39"* %244 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = sub i64 %247, %249
  %251 = ashr exact i64 %250, 3
  %252 = icmp ult i64 %242, %251
  br i1 %252, label %230, label %253

253:                                              ; preds = %243, %221
  %254 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 23, i64 5, i32 0, i32 0, i32 0
  %255 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %255, i64 0, i32 0, i32 1
  %257 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.std::__1::vector.39"* %255 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = icmp eq i64 %258, %260
  br i1 %261, label %285, label %262

262:                                              ; preds = %253, %275
  %263 = phi %"class.std::__1::vector.39"* [ %276, %275 ], [ %255, %253 ]
  %264 = phi i64 [ %274, %275 ], [ 0, %253 ]
  %265 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %263, i64 0, i32 0, i32 0
  %266 = load %"class.jingle_xmpp::XmppStanzaHandler"**, %"class.jingle_xmpp::XmppStanzaHandler"*** %265, align 8
  %267 = getelementptr inbounds %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %266, i64 %264
  %268 = load %"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmppStanzaHandler"** %267, align 8
  %269 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"* %268 to i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)***
  %270 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)**, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*** %269, align 8
  %271 = getelementptr inbounds i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %270, i64 2
  %272 = load i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)*, i1 (%"class.jingle_xmpp::XmppStanzaHandler"*, %"class.jingle_xmpp::XmlElement"*)** %271, align 8
  %273 = tail call zeroext i1 %272(%"class.jingle_xmpp::XmppStanzaHandler"* %268, %"class.jingle_xmpp::XmlElement"* %1) #14
  %274 = add nuw i64 %264, 1
  br i1 %273, label %197, label %275

275:                                              ; preds = %262
  %276 = load %"class.std::__1::vector.39"*, %"class.std::__1::vector.39"** %254, align 8
  %277 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %276, i64 0, i32 0, i32 1
  %278 = bitcast %"class.jingle_xmpp::XmppStanzaHandler"*** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %"class.std::__1::vector.39"* %276 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = sub i64 %279, %281
  %283 = ashr exact i64 %282, 3
  %284 = icmp ult i64 %274, %283
  br i1 %284, label %262, label %285

285:                                              ; preds = %275, %253
  %286 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #14
  %287 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %289 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %289, i8 -86, i64 24, i1 false)
  call void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.jingle_xmpp::XmlElement"* %1, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp7QN_TYPEE) #14
  %290 = call i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"* %13, %"struct.jingle_xmpp::StaticQName"* nonnull dereferenceable(16) @_ZN11jingle_xmpp5QN_IQE) #14
  %291 = icmp eq i32 %290, 0
  %292 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %291, label %124, label %190
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl17SignalStreamErrorEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 104) #13
  %8 = bitcast i8* %7 to %"class.jingle_xmpp::XmlElement"*
  tail call void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"* nonnull %8, %"class.jingle_xmpp::XmlElement"* dereferenceable(104) %1) #14
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %10 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %9, align 8
  %11 = bitcast %"class.jingle_xmpp::XmlElement"** %9 to i8**
  store i8* %7, i8** %11, align 8
  %12 = icmp eq %"class.jingle_xmpp::XmlElement"* %10, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %6
  %14 = bitcast %"class.jingle_xmpp::XmlElement"* %10 to void (%"class.jingle_xmpp::XmlElement"*)***
  %15 = load void (%"class.jingle_xmpp::XmlElement"*)**, void (%"class.jingle_xmpp::XmlElement"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %15, i64 4
  %17 = load void (%"class.jingle_xmpp::XmlElement"*)*, void (%"class.jingle_xmpp::XmlElement"*)** %16, align 8
  tail call void %17(%"class.jingle_xmpp::XmlElement"* nonnull %10) #14
  br label %18

18:                                               ; preds = %6, %13
  %19 = load i32, i32* %3, align 8
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  store i32 2, i32* %22, align 8
  %23 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 0, i32* %23, align 4
  store i32 4, i32* %3, align 8
  br label %24

24:                                               ; preds = %21, %18, %2
  ret void
}

declare zeroext i1 @_ZN11jingle_xmpp14XmppEngineImpl16HandleIqResponseEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*) local_unnamed_addr #2

declare void @_ZNK11jingle_xmpp10XmlElement4AttrERKNS_11StaticQNameE(%"class.std::__1::basic_string"* sret, %"class.jingle_xmpp::XmlElement"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl11IncomingEndEb(%"class.jingle_xmpp::XmppEngineImpl"* nocapture, i1 zeroext) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %17

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 19
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = select i1 %1, i32 1, i32 9
  store i32 %15, i32* %3, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  store i32 0, i32* %16, align 4
  store i32 4, i32* %11, align 8
  br label %17

17:                                               ; preds = %2, %14, %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl17InternalSendStartERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load i8, i8* %10, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %15, i64 24, i1 false) #14
  br label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %18, i64 %20) #14
  br label %21

21:                                               ; preds = %14, %16
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %7, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp ne i64 %28, 0
  %30 = icmp eq %"class.std::__1::basic_string"* %3, %1
  %31 = or i1 %30, %29
  br i1 %31, label %56, label %32

32:                                               ; preds = %21
  %33 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %25, label %46, label %37

37:                                               ; preds = %32
  br i1 %36, label %40, label %38

38:                                               ; preds = %37
  %39 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %39, i64 24, i1 false) #14
  br label %56

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %42, i64 %44) #14
  br label %56

46:                                               ; preds = %32
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %52 = zext i8 %35 to i64
  %53 = select i1 %36, i8* %48, i8* %51
  %54 = select i1 %36, i64 %50, i64 %52
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %53, i64 %54) #14
  br label %56

56:                                               ; preds = %21, %46, %40, %38
  %57 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #14
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 11
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = load i8, i8* %62, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  %67 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 %67, i64 24, i1 false) #14
  br label %73

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %70, i64 %72) #14
  br label %73

73:                                               ; preds = %66, %68
  %74 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = load i64, i64* %59, align 8
  %79 = zext i8 %76 to i64
  %80 = select i1 %77, i64 %78, i64 %79
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %89

82:                                               ; preds = %73
  br i1 %77, label %83, label %85

83:                                               ; preds = %82
  store i64 1, i64* %59, align 8
  %84 = load i8*, i8** %58, align 8
  br label %86

85:                                               ; preds = %82
  store i8 1, i8* %75, align 1
  br label %86

86:                                               ; preds = %83, %85
  %87 = phi i8* [ %84, %83 ], [ %57, %85 ]
  store i8 42, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  store i8 0, i8* %88, align 1
  br label %89

89:                                               ; preds = %86, %73
  %90 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %91 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %91, i64 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::basic_ostream.base"* %92 to %"class.std::__1::basic_ostream"*
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i64 19) #14
  %95 = load i8, i8* %23, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i8*, i8** %6, align 8
  %98 = load i64, i64* %7, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i8* %97, i8* %5
  %101 = select i1 %96, i64 %98, i64 %99
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* %100, i64 %101) #14
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #14
  %104 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %103, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64 10) #14
  %105 = load i8, i8* %75, align 1
  %106 = icmp slt i8 %105, 0
  %107 = load i8*, i8** %58, align 8
  %108 = load i64, i64* %59, align 8
  %109 = zext i8 %105 to i64
  %110 = select i1 %106, i8* %107, i8* %57
  %111 = select i1 %106, i64 %108, i64 %109
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %104, i8* %110, i64 %111) #14
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i64 2) #14
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14) #14
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0), i64 48) #14
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24) #14
  %117 = load i8, i8* %75, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %89
  %120 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %89, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #14
  %122 = load i8, i8* %23, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %121, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret void
}

declare void @_ZN11jingle_xmpp10XmlPrinter8PrintXmlEPNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEEPKNS_10XmlElementEPNS_10XmlnsStackE(%"class.std::__1::basic_ostream"*, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlnsStack"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl23ChooseBestSaslMechanismERKNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEb(%"class.std::__1::basic_string"* noalias sret, %"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.std::__1::vector"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %1, i64 0, i32 25, i32 0, i32 0, i32 0
  %6 = load %"class.jingle_xmpp::SaslHandler"*, %"class.jingle_xmpp::SaslHandler"** %5, align 8
  %7 = bitcast %"class.jingle_xmpp::SaslHandler"* %6 to void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)***
  %8 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)**, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)** %8, i64 2
  %10 = load void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)*, void (%"class.std::__1::basic_string"*, %"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::vector"*, i1)** %9, align 8
  tail call void %10(%"class.std::__1::basic_string"* sret %0, %"class.jingle_xmpp::SaslHandler"* %6, %"class.std::__1::vector"* %2, i1 zeroext %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.jingle_xmpp::SaslMechanism"* @_ZN11jingle_xmpp14XmppEngineImpl16GetSaslMechanismERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %4 = load %"class.jingle_xmpp::SaslHandler"*, %"class.jingle_xmpp::SaslHandler"** %3, align 8
  %5 = bitcast %"class.jingle_xmpp::SaslHandler"* %4 to %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)***
  %6 = load %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)**, %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)*, %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)** %6, i64 3
  %8 = load %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)*, %"class.jingle_xmpp::SaslMechanism"* (%"class.jingle_xmpp::SaslHandler"*, %"class.std::__1::basic_string"*)** %7, align 8
  %9 = tail call %"class.jingle_xmpp::SaslMechanism"* %8(%"class.jingle_xmpp::SaslHandler"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #14
  ret %"class.jingle_xmpp::SaslMechanism"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl11SignalBoundERKNS_3JidE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::Jid"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 13
  %8 = tail call dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp3JidaSERKS0_(%"class.jingle_xmpp::Jid"* %7, %"class.jingle_xmpp::Jid"* dereferenceable(72) %1)
  store i32 3, i32* %3, align 8
  br label %9

9:                                                ; preds = %6, %2
  ret void
}

declare void @_ZN11jingle_xmpp10XmlElementC1ERKS0_(%"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl8StartTlsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 20
  %4 = load %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppOutputHandler"** %3, align 8
  %5 = icmp eq %"class.jingle_xmpp::XmppOutputHandler"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 9
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %6
  %16 = zext i8 %10 to i64
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %14, %12 ], [ %16, %15 ]
  %19 = icmp eq i64 %18, 0
  %20 = select i1 %19, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %7
  %21 = bitcast %"class.jingle_xmpp::XmppOutputHandler"* %4 to void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)***
  %22 = load void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)**, void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)** %22, i64 3
  %24 = load void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)*, void (%"class.jingle_xmpp::XmppOutputHandler"*, %"class.std::__1::basic_string"*)** %23, align 8
  tail call void %24(%"class.jingle_xmpp::XmppOutputHandler"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %20) #14
  %25 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 15
  store i8 1, i8* %25, align 4
  br label %26

26:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitC2EPS0_(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nocapture, %"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %0, i64 0, i32 0
  store %"class.jingle_xmpp::XmppEngineImpl"* %1, %"class.jingle_xmpp::XmppEngineImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %1, i64 0, i32 14
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11jingle_xmpp14XmppEngineImpl9EnterExitD2Ev(%"class.jingle_xmpp::XmppEngineImpl::EnterExit"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %0, i64 0, i32 0
  %5 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, -1
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 14
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::EnterExit", %"class.jingle_xmpp::XmppEngineImpl::EnterExit"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %10, %12
  %14 = icmp eq i32 %10, 4
  %15 = and i1 %14, %13
  %16 = icmp eq i32 %8, 0
  %17 = or i1 %16, %15
  %18 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 20
  %19 = load %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppOutputHandler"** %18, align 8
  %20 = icmp eq %"class.jingle_xmpp::XmppOutputHandler"* %19, null
  %21 = xor i1 %17, true
  %22 = or i1 %20, %21
  br i1 %22, label %72, label %23

23:                                               ; preds = %1
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 26, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %29, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_stringbuf"* %30) #14
  %31 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = load i64, i64* %26, align 8
  %36 = zext i8 %33 to i64
  %37 = select i1 %34, i64 %35, i64 %36
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %47, label %39

39:                                               ; preds = %23
  %40 = load %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppOutputHandler"** %18, align 8
  %41 = load i8*, i8** %25, align 8
  %42 = select i1 %34, i8* %41, i8* %24
  %43 = bitcast %"class.jingle_xmpp::XmppOutputHandler"* %40 to void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)***
  %44 = load void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)**, void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)*, void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)** %44, i64 2
  %46 = load void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)*, void (%"class.jingle_xmpp::XmppOutputHandler"*, i8*, i64)** %45, align 8
  call void %46(%"class.jingle_xmpp::XmppOutputHandler"* %40, i8* %42, i64 %37) #14
  br label %47

47:                                               ; preds = %23, %39
  %48 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %27, align 8
  %49 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 0, i8* %51, align 1
  store i8 0, i8* %49, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %48, i64 0, i32 1
  call void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"* %52, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #14
  %53 = load i8, i8* %51, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %47, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  br i1 %15, label %59, label %65

59:                                               ; preds = %58
  %60 = load %"class.jingle_xmpp::XmppOutputHandler"*, %"class.jingle_xmpp::XmppOutputHandler"** %18, align 8
  %61 = bitcast %"class.jingle_xmpp::XmppOutputHandler"* %60 to void (%"class.jingle_xmpp::XmppOutputHandler"*)***
  %62 = load void (%"class.jingle_xmpp::XmppOutputHandler"*)**, void (%"class.jingle_xmpp::XmppOutputHandler"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.jingle_xmpp::XmppOutputHandler"*)*, void (%"class.jingle_xmpp::XmppOutputHandler"*)** %62, i64 4
  %64 = load void (%"class.jingle_xmpp::XmppOutputHandler"*)*, void (%"class.jingle_xmpp::XmppOutputHandler"*)** %63, align 8
  call void %64(%"class.jingle_xmpp::XmppOutputHandler"* %60) #14
  store %"class.jingle_xmpp::XmppOutputHandler"* null, %"class.jingle_xmpp::XmppOutputHandler"** %18, align 8
  br label %65

65:                                               ; preds = %59, %58
  %66 = load i8, i8* %32, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %71 = load i32, i32* %6, align 8
  br label %72

72:                                               ; preds = %1, %70
  %73 = phi i32 [ %8, %1 ], [ %71, %70 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %94

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 19
  %77 = load i8, i8* %76, align 8, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 2
  call void @_ZN11jingle_xmpp16XmppStanzaParser5ResetEv(%"class.jingle_xmpp::XmppStanzaParser"* %80) #14
  store i8 0, i8* %76, align 8
  br label %81

81:                                               ; preds = %75, %79
  %82 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %5, i64 0, i32 21
  %83 = load %"class.jingle_xmpp::XmppSessionHandler"*, %"class.jingle_xmpp::XmppSessionHandler"** %82, align 8
  %84 = icmp eq %"class.jingle_xmpp::XmppSessionHandler"* %83, null
  br i1 %84, label %94, label %85

85:                                               ; preds = %81
  %86 = load i32, i32* %9, align 8
  %87 = load i32, i32* %11, align 8
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.jingle_xmpp::XmppSessionHandler"* %83 to void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)***
  %91 = load void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)**, void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)*, void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)** %91, i64 2
  %93 = load void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)*, void (%"class.jingle_xmpp::XmppSessionHandler"*, i32)** %92, align 8
  call void %93(%"class.jingle_xmpp::XmppSessionHandler"* nonnull %83, i32 %86) #14
  br label %94

94:                                               ; preds = %89, %81, %85, %72
  ret void
}

declare void @_ZN11jingle_xmpp16XmppStanzaParser5ResetEv(%"class.jingle_xmpp::XmppStanzaParser"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl11SetLanguageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 11
  %4 = icmp eq %"class.std::__1::basic_string"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #14
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #14
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #14
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl8GetStateEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 14
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN11jingle_xmpp14XmppEngineImpl11IsEncryptedEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 15
  %3 = load i8, i8* %2, align 4, !range !4
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN11jingle_xmpp14XmppEngineImpl8GetErrorEPi(%"class.jingle_xmpp::XmppEngineImpl"*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 4
  store i32 %6, i32* %1, align 4
  br label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 16
  %9 = load i32, i32* %8, align 8
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.jingle_xmpp::XmlElement"* @_ZN11jingle_xmpp14XmppEngineImpl14GetStreamErrorEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmlElement"** %2, align 8
  ret %"class.jingle_xmpp::XmlElement"* %3
}

declare i32 @_ZN11jingle_xmpp14XmppEngineImpl6SendIqEPKNS_10XmlElementEPNS_13XmppIqHandlerEPPv(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, %"class.jingle_xmpp::XmppIqHandler"*, i8**) unnamed_addr #2

declare i32 @_ZN11jingle_xmpp14XmppEngineImpl15RemoveIqHandlerEPvPPNS_13XmppIqHandlerE(%"class.jingle_xmpp::XmppEngineImpl"*, i8*, %"class.jingle_xmpp::XmppIqHandler"**) unnamed_addr #2

declare i32 @_ZN11jingle_xmpp14XmppEngineImpl15SendStanzaErrorEPKNS_10XmlElementENS_15XmppStanzaErrorERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmlElement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"class.jingle_xmpp::Jid"* @_ZN11jingle_xmpp14XmppEngineImpl7FullJidEv(%"class.jingle_xmpp::XmppEngineImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %0, i64 0, i32 13
  ret %"class.jingle_xmpp::Jid"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandlerD0Ev(%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler11StartStreamEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"* %0, i64 0, i32 1
  %4 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %4, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %4, i64 0, i32 19
  %10 = load i8, i8* %9, align 8, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %31

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %4, i64 0, i32 10, i32 0, i32 0, i32 0
  %14 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %13, align 8
  %15 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %12
  tail call void @_ZN11jingle_xmpp13XmppLoginTask14IncomingStanzaEPKNS_10XmlElementEb(%"class.jingle_xmpp::XmppLoginTask"* nonnull %14, %"class.jingle_xmpp::XmlElement"* %1, i1 zeroext true) #14
  %17 = load %"class.jingle_xmpp::XmppLoginTask"*, %"class.jingle_xmpp::XmppLoginTask"** %13, align 8
  %18 = getelementptr inbounds %"class.jingle_xmpp::XmppLoginTask", %"class.jingle_xmpp::XmppLoginTask"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 10
  br i1 %20, label %21, label %31

21:                                               ; preds = %16
  store %"class.jingle_xmpp::XmppLoginTask"* null, %"class.jingle_xmpp::XmppLoginTask"** %13, align 8
  %22 = icmp eq %"class.jingle_xmpp::XmppLoginTask"* %17, null
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  tail call void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"* nonnull %17) #14
  %24 = bitcast %"class.jingle_xmpp::XmppLoginTask"* %17 to i8*
  tail call void @_ZdlPv(i8* %24) #13
  br label %31

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %4, i64 0, i32 14
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 4
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  store i32 1, i32* %5, align 8
  %30 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %4, i64 0, i32 17
  store i32 0, i32* %30, align 4
  store i32 4, i32* %26, align 8
  br label %31

31:                                               ; preds = %2, %8, %16, %21, %23, %25, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler6StanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*, %"class.jingle_xmpp::XmlElement"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"* %0, i64 0, i32 1
  %4 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %3, align 8
  tail call void @_ZN11jingle_xmpp14XmppEngineImpl14IncomingStanzaEPKNS_10XmlElementE(%"class.jingle_xmpp::XmppEngineImpl"* %4, %"class.jingle_xmpp::XmlElement"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler9EndStreamEv(%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"* %0, i64 0, i32 1
  %3 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 19
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 14
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  store i32 9, i32* %4, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 17
  store i32 0, i32* %16, align 4
  store i32 4, i32* %12, align 8
  br label %17

17:                                               ; preds = %1, %7, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11jingle_xmpp14XmppEngineImpl18StanzaParseHandler8XmlErrorEv(%"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler", %"class.jingle_xmpp::XmppEngineImpl::StanzaParseHandler"* %0, i64 0, i32 1
  %3 = load %"class.jingle_xmpp::XmppEngineImpl"*, %"class.jingle_xmpp::XmppEngineImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %17

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 19
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %17

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 14
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 4
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  store i32 1, i32* %4, align 8
  %16 = getelementptr inbounds %"class.jingle_xmpp::XmppEngineImpl", %"class.jingle_xmpp::XmppEngineImpl"* %3, i64 0, i32 17
  store i32 0, i32* %16, align 4
  store i32 4, i32* %12, align 8
  br label %17

17:                                               ; preds = %1, %7, %11, %15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp10XmlBuilderD1Ev(%"class.jingle_xmpp::XmlBuilder"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp9XmlParserD1Ev(%"class.jingle_xmpp::XmlParser"*) unnamed_addr #4

declare zeroext i1 @_ZN11jingle_xmpp9XmlParser5ParseEPKcmb(%"class.jingle_xmpp::XmlParser"*, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__114basic_iostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_iostream"*, i8**) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #4

declare i32 @_ZNK11jingle_xmpp5QName7CompareERKNS_11StaticQNameE(%"class.jingle_xmpp::QName"*, %"struct.jingle_xmpp::StaticQName"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind
declare void @_ZN11jingle_xmpp13XmppLoginTaskD1Ev(%"class.jingle_xmpp::XmppLoginTask"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strERKNS_12basic_stringIcS2_S4_EE(%"class.std::__1::basic_stringbuf"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
