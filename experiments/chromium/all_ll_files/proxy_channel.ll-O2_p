; ModuleID = '../../ppapi/proxy/proxy_channel.cc'
source_filename = "../../ppapi/proxy/proxy_channel.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ppapi::proxy::ProxyChannel" = type { %"class.IPC::Listener", %"class.IPC::Sender", %"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, %"class.IPC::TestSink"*, %"class.std::__1::unique_ptr" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.ppapi::proxy::ProxyChannel::Delegate" = type { i32 (...)** }
%"class.IPC::TestSink" = type { %"class.IPC::Channel.base", %"class.std::__1::vector", %"class.base::ObserverList" }
%"class.IPC::Channel.base" = type <{ %"class.IPC::Sender", i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.IPC::Message"*, %"class.IPC::Message"*, %"class.std::__1::__compressed_pair" }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.IPC::Message"* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.1", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.3" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.IPC::SyncChannel"* }
%"class.IPC::SyncChannel" = type { %"class.IPC::ChannelProxy.base", %class.scoped_refptr.62, %"class.base::WaitableEventWatcher", %"class.base::OnceCallback", %"class.std::__1::vector.95" }
%"class.IPC::ChannelProxy.base" = type <{ %"class.IPC::Sender", %class.scoped_refptr.10, i8 }>
%class.scoped_refptr.10 = type { %"class.IPC::ChannelProxy::Context"* }
%"class.IPC::ChannelProxy::Context" = type { %"class.IPC::Listener", %"class.base::RefCountedThreadSafe", %"class.base::Lock", %"class.std::__1::map", %class.scoped_refptr.20, %"class.IPC::Listener"*, %"class.std::__1::vector.22", %class.scoped_refptr.20, %"class.std::__1::unique_ptr.30", i8, %class.scoped_refptr.34, %"class.base::Lock", %"class.std::__1::unique_ptr.41", %"class.std::__1::vector.22", %"class.base::Lock", i32, %"class.base::Lock", %"class.std::__1::unique_ptr.47", %"class.base::Lock", %"class.std::__1::vector.55" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i64 }
%class.scoped_refptr.20 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21" }>
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.IPC::Channel"* }
%"class.IPC::Channel" = type <{ %"class.IPC::Sender", i8, [7 x i8] }>
%class.scoped_refptr.34 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.35", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", %"struct.std::__1::atomic.36", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.IPC::MessageFilterRouter"* }
%"class.IPC::MessageFilterRouter" = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %class.scoped_refptr.24*, %class.scoped_refptr.24*, %"class.std::__1::__compressed_pair.25" }
%class.scoped_refptr.24 = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.scoped_refptr.24* }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.mojo::ThreadSafeForwarder"* }
%"class.mojo::ThreadSafeForwarder" = type { %"class.mojo::internal::ThreadSafeForwarderBase", %"class.IPC::mojom::ChannelProxy" }
%"class.mojo::internal::ThreadSafeForwarderBase" = type { %"class.mojo::MessageReceiverWithResponder", %class.scoped_refptr.50 }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%class.scoped_refptr.50 = type { %"class.mojo::ThreadSafeProxy"* }
%"class.mojo::ThreadSafeProxy" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.51", [4 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.IPC::mojom::ChannelProxy" = type { %"class.IPC::mojom::Channel", %"class.mojo::MessageReceiverWithResponder"* }
%"class.IPC::mojom::Channel" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.57" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.std::__1::pair"* }
%class.scoped_refptr.62 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.64", %"class.std::__1::map.75", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.63 }
%class.scoped_refptr.63 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::WaitableEventWatcher" = type <{ %class.scoped_refptr.86, %"class.base::AsyncWaiter"*, %class.scoped_refptr.87, %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%class.scoped_refptr.86 = type { %"class.base::Flag"* }
%"class.base::Flag" = type opaque
%"class.base::AsyncWaiter" = type opaque
%class.scoped_refptr.87 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.88", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.93 }
%class.scoped_refptr.93 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.94", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %class.scoped_refptr.97*, %class.scoped_refptr.97*, %"class.std::__1::__compressed_pair.98" }
%class.scoped_refptr.97 = type opaque
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %class.scoped_refptr.97* }
%"struct.IPC::ChannelHandle" = type { %"class.mojo::MessagePipeHandle" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.87, i8, [7 x i8] }>
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.21", [4 x i8] }>
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque

$_ZN3IPC8Listener18OnChannelConnectedEi = comdat any

$_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE = comdat any

$_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE = comdat any

$_ZN3IPC8Listener15OnChannelDeniedEv = comdat any

$_ZN3IPC8Listener20OnChannelListenErrorEv = comdat any

@_ZTVN5ppapi5proxy12ProxyChannelE = hidden unnamed_addr constant { [13 x i8*], [5 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.IPC::Listener"*, i32)* @_ZN3IPC8Listener18OnChannelConnectedEi to i8*), i8* bitcast (void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZN5ppapi5proxy12ProxyChannel14OnChannelErrorEv to i8*), i8* bitcast (void (%"class.IPC::Listener"*, %"class.IPC::Message"*)* @_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE to i8*), i8* bitcast (void (%"class.IPC::Listener"*, %"class.std::__1::basic_string"*, %"class.mojo::ScopedInterfaceEndpointHandle"*)* @_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE to i8*), i8* bitcast (void (%"class.IPC::Listener"*)* @_ZN3IPC8Listener15OnChannelDeniedEv to i8*), i8* bitcast (void (%"class.IPC::Listener"*)* @_ZN3IPC8Listener20OnChannelListenErrorEv to i8*), i8* bitcast (void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZN5ppapi5proxy12ProxyChannelD2Ev to i8*), i8* bitcast (void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZN5ppapi5proxy12ProxyChannelD0Ev to i8*), i8* bitcast (i1 (%"class.ppapi::proxy::ProxyChannel"*, %"class.IPC::Message"*)* @_ZN5ppapi5proxy12ProxyChannel4SendEPN3IPC7MessageE to i8*), i8* bitcast (i1 (%"class.ppapi::proxy::ProxyChannel"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, %"struct.IPC::ChannelHandle"*, i1, %"class.base::SingleThreadTaskRunner"*)* @_ZN5ppapi5proxy12ProxyChannel15InitWithChannelEPNS1_8DelegateEiRKN3IPC13ChannelHandleEb13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i1 (%"class.ppapi::proxy::ProxyChannel"*, %"class.IPC::Message"*)* @_ZThn8_N5ppapi5proxy12ProxyChannel4SendEPN3IPC7MessageE to i8*), i8* bitcast (void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZThn8_N5ppapi5proxy12ProxyChannelD1Ev to i8*), i8* bitcast (void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZThn8_N5ppapi5proxy12ProxyChannelD0Ev to i8*)] }, align 8

@_ZN5ppapi5proxy12ProxyChannelD1Ev = hidden unnamed_addr alias void (%"class.ppapi::proxy::ProxyChannel"*), void (%"class.ppapi::proxy::ProxyChannel"*)* @_ZN5ppapi5proxy12ProxyChannelD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi5proxy12ProxyChannelC2Ev(%"class.ppapi::proxy::ProxyChannel"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ppapi::proxy::ProxyChannel"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 2
  store %"class.ppapi::proxy::ProxyChannel::Delegate"* null, %"class.ppapi::proxy::ProxyChannel::Delegate"** %3, align 8
  %4 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 3
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 4
  %6 = bitcast %"class.IPC::TestSink"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannelD2Ev(%"class.ppapi::proxy::ProxyChannel"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.ppapi::proxy::ProxyChannel"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %3, align 8
  store %"class.IPC::SyncChannel"* null, %"class.IPC::SyncChannel"** %3, align 8
  %5 = icmp eq %"class.IPC::SyncChannel"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.IPC::SyncChannel"* %4 to void (%"class.IPC::SyncChannel"*)***
  %8 = load void (%"class.IPC::SyncChannel"*)**, void (%"class.IPC::SyncChannel"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %8, i64 2
  %10 = load void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %9, align 8
  tail call void %10(%"class.IPC::SyncChannel"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5ppapi5proxy12ProxyChannelD1Ev(%"class.ppapi::proxy::ProxyChannel"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 -1, i32 5
  %3 = bitcast %"class.std::__1::unique_ptr"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*], [5 x i8*] }, { [13 x i8*], [5 x i8*] }* @_ZTVN5ppapi5proxy12ProxyChannelE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 5, i32 0, i32 0, i32 0
  %5 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %4, align 8
  store %"class.IPC::SyncChannel"* null, %"class.IPC::SyncChannel"** %4, align 8
  %6 = icmp eq %"class.IPC::SyncChannel"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.IPC::SyncChannel"* %5 to void (%"class.IPC::SyncChannel"*)***
  %9 = load void (%"class.IPC::SyncChannel"*)**, void (%"class.IPC::SyncChannel"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %9, i64 2
  %11 = load void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %10, align 8
  tail call void %11(%"class.IPC::SyncChannel"* nonnull %5) #7
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannelD0Ev(%"class.ppapi::proxy::ProxyChannel"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N5ppapi5proxy12ProxyChannelD0Ev(%"class.ppapi::proxy::ProxyChannel"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi5proxy12ProxyChannel15InitWithChannelEPNS1_8DelegateEiRKN3IPC13ChannelHandleEb13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.ppapi::proxy::ProxyChannel"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, %"struct.IPC::ChannelHandle"* dereferenceable(4), i1 zeroext, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #1 align 2 {
  %7 = alloca %class.scoped_refptr.20, align 8
  %8 = alloca %class.scoped_refptr.20, align 8
  %9 = getelementptr inbounds %class.scoped_refptr.20, %class.scoped_refptr.20* %7, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %5, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %10 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 2
  store %"class.ppapi::proxy::ProxyChannel::Delegate"* %1, %"class.ppapi::proxy::ProxyChannel::Delegate"** %10, align 8
  %11 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 3
  store i32 %2, i32* %11, align 8
  %12 = select i1 %4, i32 2, i32 1
  %13 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 0
  %14 = bitcast %class.scoped_refptr.20* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = bitcast %"class.ppapi::proxy::ProxyChannel::Delegate"* %1 to %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)***
  %16 = load %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)** %16, i64 2
  %18 = load %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)** %17, align 8
  %19 = tail call %"class.base::SingleThreadTaskRunner"* %18(%"class.ppapi::proxy::ProxyChannel::Delegate"* %1) #7
  %20 = getelementptr inbounds %class.scoped_refptr.20, %class.scoped_refptr.20* %8, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %19, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %21 = icmp eq %"class.base::SingleThreadTaskRunner"* %19, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  br label %25

25:                                               ; preds = %6, %22
  %26 = bitcast %"class.ppapi::proxy::ProxyChannel::Delegate"* %1 to %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)***
  %27 = load %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)**, %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*, %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)** %27, i64 3
  %29 = load %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)*, %"class.base::WaitableEvent"* (%"class.ppapi::proxy::ProxyChannel::Delegate"*)** %28, align 8
  %30 = tail call %"class.base::WaitableEvent"* %29(%"class.ppapi::proxy::ProxyChannel::Delegate"* %1) #7
  %31 = call %"class.IPC::SyncChannel"* @_ZN3IPC11SyncChannel6CreateERKNS_13ChannelHandleENS_7Channel4ModeEPNS_8ListenerERK13scoped_refptrIN4base22SingleThreadTaskRunnerEESD_bPNS9_13WaitableEventE(%"struct.IPC::ChannelHandle"* dereferenceable(4) %3, i32 %12, %"class.IPC::Listener"* %13, %class.scoped_refptr.20* nonnull dereferenceable(8) %8, %class.scoped_refptr.20* nonnull dereferenceable(8) %7, i1 zeroext true, %"class.base::WaitableEvent"* %30) #7
  %32 = ptrtoint %"class.IPC::SyncChannel"* %31 to i64
  %33 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 5
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %32, i64* %36, align 8
  %37 = icmp eq %"class.IPC::SyncChannel"* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %25
  %39 = bitcast %"class.IPC::SyncChannel"* %35 to void (%"class.IPC::SyncChannel"*)***
  %40 = load void (%"class.IPC::SyncChannel"*)**, void (%"class.IPC::SyncChannel"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %40, i64 2
  %42 = load void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %41, align 8
  call void %42(%"class.IPC::SyncChannel"* nonnull %35) #7
  br label %43

43:                                               ; preds = %38, %25
  %44 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %20, align 8
  %45 = icmp eq %"class.base::SingleThreadTaskRunner"* %44, null
  br i1 %45, label %54, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %44, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw sub i32* %48, i32 1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %47, i64 -2
  %53 = bitcast %"class.base::RefCountedThreadSafe.21"* %52 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %53) #7
  br label %54

54:                                               ; preds = %43, %46, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %55 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %9, align 8
  %56 = icmp eq %"class.base::SingleThreadTaskRunner"* %55, null
  br i1 %56, label %65, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %55, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw sub i32* %59, i32 1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.base::RefCountedThreadSafe.21", %"class.base::RefCountedThreadSafe.21"* %58, i64 -2
  %64 = bitcast %"class.base::RefCountedThreadSafe.21"* %63 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %64) #7
  br label %65

65:                                               ; preds = %54, %57, %62
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.IPC::SyncChannel"* @_ZN3IPC11SyncChannel6CreateERKNS_13ChannelHandleENS_7Channel4ModeEPNS_8ListenerERK13scoped_refptrIN4base22SingleThreadTaskRunnerEESD_bPNS9_13WaitableEventE(%"struct.IPC::ChannelHandle"* dereferenceable(4), i32, %"class.IPC::Listener"*, %class.scoped_refptr.20* dereferenceable(8), %class.scoped_refptr.20* dereferenceable(8), i1 zeroext, %"class.base::WaitableEvent"*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannel16InitWithTestSinkEPN3IPC8TestSinkE(%"class.ppapi::proxy::ProxyChannel"* nocapture, %"class.IPC::TestSink"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 4
  store %"class.IPC::TestSink"* %1, %"class.IPC::TestSink"** %3, align 8
  %4 = tail call i32 @_ZN4base16GetCurrentProcIdEv() #7
  %5 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 3
  store i32 %4, i32* %5, align 8
  ret void
}

declare i32 @_ZN4base16GetCurrentProcIdEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannel14OnChannelErrorEv(%"class.ppapi::proxy::ProxyChannel"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %2, align 8
  store %"class.IPC::SyncChannel"* null, %"class.IPC::SyncChannel"** %2, align 8
  %4 = icmp eq %"class.IPC::SyncChannel"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.IPC::SyncChannel"* %3 to void (%"class.IPC::SyncChannel"*)***
  %7 = load void (%"class.IPC::SyncChannel"*)**, void (%"class.IPC::SyncChannel"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %7, i64 2
  %9 = load void (%"class.IPC::SyncChannel"*)*, void (%"class.IPC::SyncChannel"*)** %8, align 8
  tail call void %9(%"class.IPC::SyncChannel"* nonnull %3) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5ppapi5proxy12ProxyChannel21ShareHandleWithRemoteEib(%"class.ppapi::proxy::ProxyChannel"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::File", align 8
  %5 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %5, align 8
  %7 = icmp eq %"class.IPC::SyncChannel"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  br i1 %2, label %9, label %21

9:                                                ; preds = %8
  %10 = bitcast %"class.base::File"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  call void @_ZN4base4FileC1Ei(%"class.base::File"* nonnull %4, i32 %1) #7
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #7
  br label %21

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 2
  %13 = load %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.ppapi::proxy::ProxyChannel::Delegate"** %12, align 8
  %14 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.ppapi::proxy::ProxyChannel::Delegate"* %13 to i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)***
  %17 = load i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)**, i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)*** %16, align 8
  %18 = getelementptr inbounds i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)*, i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)** %17, i64 4
  %19 = load i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)*, i64 (%"class.ppapi::proxy::ProxyChannel::Delegate"*, i32, i32, i1)** %18, align 8
  %20 = tail call i64 %19(%"class.ppapi::proxy::ProxyChannel::Delegate"* %13, i32 %1, i32 %15, i1 zeroext %2) #7
  br label %21

21:                                               ; preds = %8, %9, %11
  %22 = phi i64 [ %20, %11 ], [ 4294967295, %9 ], [ 4294967295, %8 ]
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base4FileC1Ei(%"class.base::File"*, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannel39ShareUnsafeSharedMemoryRegionWithRemoteERKN4base24UnsafeSharedMemoryRegionE(%"class.base::UnsafeSharedMemoryRegion"* noalias sret, %"class.ppapi::proxy::ProxyChannel"* nocapture readonly, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %4, align 8
  %6 = icmp eq %"class.IPC::SyncChannel"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN4base24UnsafeSharedMemoryRegionC1Ev(%"class.base::UnsafeSharedMemoryRegion"* %0) #7
  br label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 2
  %10 = load %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.ppapi::proxy::ProxyChannel::Delegate"** %9, align 8
  %11 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.ppapi::proxy::ProxyChannel::Delegate"* %10 to void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)***
  %14 = load void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)**, void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)*, void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)** %14, i64 5
  %16 = load void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)*, void (%"class.base::UnsafeSharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::UnsafeSharedMemoryRegion"*, i32)** %15, align 8
  tail call void %16(%"class.base::UnsafeSharedMemoryRegion"* sret %0, %"class.ppapi::proxy::ProxyChannel::Delegate"* %10, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64) %2, i32 %12) #7
  br label %17

17:                                               ; preds = %8, %7
  ret void
}

declare void @_ZN4base24UnsafeSharedMemoryRegionC1Ev(%"class.base::UnsafeSharedMemoryRegion"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi5proxy12ProxyChannel41ShareReadOnlySharedMemoryRegionWithRemoteERKN4base26ReadOnlySharedMemoryRegionE(%"class.base::ReadOnlySharedMemoryRegion"* noalias sret, %"class.ppapi::proxy::ProxyChannel"* nocapture readonly, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %4, align 8
  %6 = icmp eq %"class.IPC::SyncChannel"* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"* %0) #7
  br label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 2
  %10 = load %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.ppapi::proxy::ProxyChannel::Delegate"** %9, align 8
  %11 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.ppapi::proxy::ProxyChannel::Delegate"* %10 to void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)***
  %14 = load void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)**, void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)*, void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)** %14, i64 6
  %16 = load void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)*, void (%"class.base::ReadOnlySharedMemoryRegion"*, %"class.ppapi::proxy::ProxyChannel::Delegate"*, %"class.base::ReadOnlySharedMemoryRegion"*, i32)** %15, align 8
  tail call void %16(%"class.base::ReadOnlySharedMemoryRegion"* sret %0, %"class.ppapi::proxy::ProxyChannel::Delegate"* %10, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64) %2, i32 %12) #7
  br label %17

17:                                               ; preds = %8, %7
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi5proxy12ProxyChannel4SendEPN3IPC7MessageE(%"class.ppapi::proxy::ProxyChannel"* nocapture readonly, %"class.IPC::Message"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 4
  %4 = load %"class.IPC::TestSink"*, %"class.IPC::TestSink"** %3, align 8
  %5 = icmp eq %"class.IPC::TestSink"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.IPC::TestSink"* %4 to i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)***
  %8 = load i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)*** %7, align 8
  %9 = load i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.IPC::TestSink"* nonnull %4, %"class.IPC::Message"* %1) #7
  br label %27

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %12, align 8
  %14 = icmp eq %"class.IPC::SyncChannel"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.IPC::SyncChannel"* %13 to i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)***
  %17 = load i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)*** %16, align 8
  %18 = load i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.IPC::SyncChannel"* nonnull %13, %"class.IPC::Message"* %1) #7
  br label %27

20:                                               ; preds = %11
  %21 = icmp eq %"class.IPC::Message"* %1, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.IPC::Message"* %1 to void (%"class.IPC::Message"*)***
  %24 = load void (%"class.IPC::Message"*)**, void (%"class.IPC::Message"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.IPC::Message"*)*, void (%"class.IPC::Message"*)** %24, i64 1
  %26 = load void (%"class.IPC::Message"*)*, void (%"class.IPC::Message"*)** %25, align 8
  tail call void %26(%"class.IPC::Message"* nonnull %1) #7
  br label %27

27:                                               ; preds = %20, %22, %15, %6
  %28 = phi i1 [ %10, %6 ], [ %19, %15 ], [ false, %22 ], [ false, %20 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn8_N5ppapi5proxy12ProxyChannel4SendEPN3IPC7MessageE(%"class.ppapi::proxy::ProxyChannel"* nocapture readonly, %"class.IPC::Message"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::proxy::ProxyChannel", %"class.ppapi::proxy::ProxyChannel"* %0, i64 -1, i32 5
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 4
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to %"class.IPC::TestSink"**
  %6 = load %"class.IPC::TestSink"*, %"class.IPC::TestSink"** %5, align 8
  %7 = icmp eq %"class.IPC::TestSink"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.IPC::TestSink"* %6 to i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)***
  %10 = load i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)*** %9, align 8
  %11 = load i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::TestSink"*, %"class.IPC::Message"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.IPC::TestSink"* nonnull %6, %"class.IPC::Message"* %1) #7
  br label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 5, i32 0, i32 0, i32 0
  %15 = load %"class.IPC::SyncChannel"*, %"class.IPC::SyncChannel"** %14, align 8
  %16 = icmp eq %"class.IPC::SyncChannel"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.IPC::SyncChannel"* %15 to i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)***
  %19 = load i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)*** %18, align 8
  %20 = load i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::SyncChannel"*, %"class.IPC::Message"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.IPC::SyncChannel"* nonnull %15, %"class.IPC::Message"* %1) #7
  br label %29

22:                                               ; preds = %13
  %23 = icmp eq %"class.IPC::Message"* %1, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %22
  %25 = bitcast %"class.IPC::Message"* %1 to void (%"class.IPC::Message"*)***
  %26 = load void (%"class.IPC::Message"*)**, void (%"class.IPC::Message"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.IPC::Message"*)*, void (%"class.IPC::Message"*)** %26, i64 1
  %28 = load void (%"class.IPC::Message"*)*, void (%"class.IPC::Message"*)** %27, align 8
  tail call void %28(%"class.IPC::Message"* nonnull %1) #7
  br label %29

29:                                               ; preds = %8, %17, %22, %24
  %30 = phi i1 [ %12, %8 ], [ %21, %17 ], [ false, %24 ], [ false, %22 ]
  ret i1 %30
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener18OnChannelConnectedEi(%"class.IPC::Listener"*, i32) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE(%"class.IPC::Listener"*, %"class.IPC::Message"* dereferenceable(56)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE(%"class.IPC::Listener"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener15OnChannelDeniedEv(%"class.IPC::Listener"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener20OnChannelListenErrorEv(%"class.IPC::Listener"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
