; ModuleID = '../../third_party/webrtc/modules/audio_processing/include/audio_frame_proxies.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/include/audio_frame_proxies.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { i8 }
%union.anon.33 = type { double }
%union.anon.23 = type { i32 }
%"class.webrtc::AudioProcessing" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.webrtc::AudioFrame" = type { i32, i64, i64, i64, i32, i64, i32, i32, i32, i64, %"class.webrtc::RtpPacketInfos", [7680 x i16], i8, %"class.absl::optional.9" }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr" }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.14" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.1", i32, %"class.absl::optional", %"class.absl::optional.4", %"class.absl::optional.9", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i8 }
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.9" }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.webrtc::RtpPacketInfo"* }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }
%union.anon.13 = type { i64 }
%"class.webrtc::StreamConfig" = type { i32, i64, i8, i64 }
%"struct.webrtc::AudioProcessingStats" = type { %"class.absl::optional.19", %"class.absl::optional.24", %"class.absl::optional.29", %"class.absl::optional.29", %"class.absl::optional.29", %"class.absl::optional.19", %"class.absl::optional.19", %"class.absl::optional.29", %"class.absl::optional.29", %"class.absl::optional.19" }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }

@__const._ZN6webrtc17ProcessAudioFrameEPNS_15AudioProcessingEPNS_10AudioFrameE.stats = private unnamed_addr constant { { { { { i8, [3 x i8], %union.anon.23 } } } }, %"class.absl::optional.24", [6 x i8], { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } } { { { { { i8, [3 x i8], %union.anon.23 } } } } { { { { i8, [3 x i8], %union.anon.23 } } } { { { i8, [3 x i8], %union.anon.23 } } { { i8, [3 x i8], %union.anon.23 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.23 { i32 -1431655766 } } } } }, %"class.absl::optional.24" { %"class.absl::optional_internal::optional_data.25" { %"class.absl::optional_internal::optional_data_base.26" { %"class.absl::optional_internal::optional_data_dtor_base.27" { i8 -86, %union.anon.28 { i8 -86 } } } } }, [6 x i8] c"\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.33 } } } } { { { { i8, [7 x i8], %union.anon.33 } } } { { { i8, [7 x i8], %union.anon.33 } } { { i8, [7 x i8], %union.anon.33 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.33 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } } { { { { i8, [7 x i8], %union.anon.33 } } } { { { i8, [7 x i8], %union.anon.33 } } { { i8, [7 x i8], %union.anon.33 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.33 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } } { { { { i8, [7 x i8], %union.anon.33 } } } { { { i8, [7 x i8], %union.anon.33 } } { { i8, [7 x i8], %union.anon.33 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.33 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } { { { { i8, [3 x i8], %union.anon.23 } } } { { { i8, [3 x i8], %union.anon.23 } } { { i8, [3 x i8], %union.anon.23 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.23 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } { { { { i8, [3 x i8], %union.anon.23 } } } { { { i8, [3 x i8], %union.anon.23 } } { { i8, [3 x i8], %union.anon.23 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.23 { i32 -1431655766 } } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } } { { { { i8, [7 x i8], %union.anon.33 } } } { { { i8, [7 x i8], %union.anon.33 } } { { i8, [7 x i8], %union.anon.33 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.33 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } } { { { { i8, [7 x i8], %union.anon.33 } } } { { { i8, [7 x i8], %union.anon.33 } } { { i8, [7 x i8], %union.anon.33 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.33 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } { { { { i8, [3 x i8], %union.anon.23 } } } { { { i8, [3 x i8], %union.anon.23 } } { { i8, [3 x i8], %union.anon.23 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.23 { i32 -1431655766 } } } } } }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc17ProcessAudioFrameEPNS_15AudioProcessingEPNS_10AudioFrameE(%"class.webrtc::AudioProcessing"*, %"class.webrtc::AudioFrame"*) local_unnamed_addr #0 {
  %3 = alloca %"class.webrtc::StreamConfig", align 8
  %4 = alloca %"class.webrtc::StreamConfig", align 8
  %5 = alloca %"struct.webrtc::AudioProcessingStats", align 8
  %6 = icmp ne %"class.webrtc::AudioFrame"* %1, null
  %7 = icmp ne %"class.webrtc::AudioProcessing"* %0, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %48

9:                                                ; preds = %2
  %10 = bitcast %"class.webrtc::StreamConfig"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = getelementptr inbounds %"class.webrtc::AudioFrame", %"class.webrtc::AudioFrame"* %1, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.webrtc::AudioFrame", %"class.webrtc::AudioFrame"* %1, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 0
  store i32 %12, i32* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 1
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 2
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 3
  %19 = sdiv i32 %12, 100
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %18, align 8
  %21 = bitcast %"class.webrtc::StreamConfig"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 0
  store i32 %12, i32* %22, align 8
  %23 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 1
  store i64 %14, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 2
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 3
  store i64 %20, i64* %25, align 8
  %26 = tail call i16* @_ZNK6webrtc10AudioFrame4dataEv(%"class.webrtc::AudioFrame"* nonnull %1) #4
  %27 = tail call i16* @_ZN6webrtc10AudioFrame12mutable_dataEv(%"class.webrtc::AudioFrame"* nonnull %1) #4
  %28 = bitcast %"class.webrtc::AudioProcessing"* %0 to i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)***
  %29 = load i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)**, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)** %29, i64 17
  %31 = load i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)** %30, align 8
  %32 = call i32 %31(%"class.webrtc::AudioProcessing"* nonnull %0, i16* %26, %"class.webrtc::StreamConfig"* nonnull dereferenceable(32) %3, %"class.webrtc::StreamConfig"* nonnull dereferenceable(32) %4, i16* %27) #4
  %33 = getelementptr inbounds %"struct.webrtc::AudioProcessingStats", %"struct.webrtc::AudioProcessingStats"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %33) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 getelementptr inbounds ({ { { { { i8, [3 x i8], %union.anon.23 } } } }, %"class.absl::optional.24", [6 x i8], { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } }, { { { { { i8, [3 x i8], %union.anon.23 } } } }, %"class.absl::optional.24", [6 x i8], { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [7 x i8], %union.anon.33 } } } }, { { { { i8, [3 x i8], %union.anon.23 } } } } }* @__const._ZN6webrtc17ProcessAudioFrameEPNS_15AudioProcessingEPNS_10AudioFrameE.stats, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 120, i1 false)
  %34 = bitcast %"class.webrtc::AudioProcessing"* %0 to void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)***
  %35 = load void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)**, void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)*, void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)** %35, i64 32
  %37 = load void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)*, void (%"struct.webrtc::AudioProcessingStats"*, %"class.webrtc::AudioProcessing"*)** %36, align 8
  call void %37(%"struct.webrtc::AudioProcessingStats"* nonnull sret %5, %"class.webrtc::AudioProcessing"* nonnull %0) #4
  %38 = getelementptr inbounds %"struct.webrtc::AudioProcessingStats", %"struct.webrtc::AudioProcessingStats"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %9
  %42 = getelementptr inbounds %"struct.webrtc::AudioProcessingStats", %"struct.webrtc::AudioProcessingStats"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1, !range !2
  %44 = xor i8 %43, 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds %"class.webrtc::AudioFrame", %"class.webrtc::AudioFrame"* %1, i64 0, i32 8
  store i32 %45, i32* %46, align 8
  br label %47

47:                                               ; preds = %9, %41
  call void @_ZN6webrtc20AudioProcessingStatsD1Ev(%"struct.webrtc::AudioProcessingStats"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %33) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #4
  br label %48

48:                                               ; preds = %2, %47
  %49 = phi i32 [ %32, %47 ], [ -5, %2 ]
  ret i32 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i16* @_ZNK6webrtc10AudioFrame4dataEv(%"class.webrtc::AudioFrame"*) local_unnamed_addr #2

declare i16* @_ZN6webrtc10AudioFrame12mutable_dataEv(%"class.webrtc::AudioFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc20AudioProcessingStatsD1Ev(%"struct.webrtc::AudioProcessingStats"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc24ProcessReverseAudioFrameEPNS_15AudioProcessingEPNS_10AudioFrameE(%"class.webrtc::AudioProcessing"*, %"class.webrtc::AudioFrame"*) local_unnamed_addr #0 {
  %3 = alloca %"class.webrtc::StreamConfig", align 8
  %4 = alloca %"class.webrtc::StreamConfig", align 8
  %5 = icmp ne %"class.webrtc::AudioFrame"* %1, null
  %6 = icmp ne %"class.webrtc::AudioProcessing"* %0, null
  %7 = and i1 %6, %5
  br i1 %7, label %8, label %36

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::AudioFrame", %"class.webrtc::AudioFrame"* %1, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %36 [
    i32 8000, label %11
    i32 16000, label %11
    i32 32000, label %11
    i32 48000, label %11
  ]

11:                                               ; preds = %8, %8, %8, %8
  %12 = getelementptr inbounds %"class.webrtc::AudioFrame", %"class.webrtc::AudioFrame"* %1, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.webrtc::StreamConfig"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  %17 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 0
  store i32 %10, i32* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 1
  store i64 %13, i64* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 2
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %3, i64 0, i32 3
  %21 = trunc i32 %10 to i16
  %22 = udiv i16 %21, 100
  %23 = zext i16 %22 to i64
  store i64 %23, i64* %20, align 8
  %24 = bitcast %"class.webrtc::StreamConfig"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %25 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 0
  store i32 %10, i32* %25, align 8
  %26 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 1
  store i64 %13, i64* %26, align 8
  %27 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 2
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::StreamConfig", %"class.webrtc::StreamConfig"* %4, i64 0, i32 3
  store i64 %23, i64* %28, align 8
  %29 = tail call i16* @_ZNK6webrtc10AudioFrame4dataEv(%"class.webrtc::AudioFrame"* nonnull %1) #4
  %30 = tail call i16* @_ZN6webrtc10AudioFrame12mutable_dataEv(%"class.webrtc::AudioFrame"* nonnull %1) #4
  %31 = bitcast %"class.webrtc::AudioProcessing"* %0 to i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)***
  %32 = load i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)**, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)** %32, i64 19
  %34 = load i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)*, i32 (%"class.webrtc::AudioProcessing"*, i16*, %"class.webrtc::StreamConfig"*, %"class.webrtc::StreamConfig"*, i16*)** %33, align 8
  %35 = call i32 %34(%"class.webrtc::AudioProcessing"* nonnull %0, i16* %29, %"class.webrtc::StreamConfig"* nonnull dereferenceable(32) %3, %"class.webrtc::StreamConfig"* nonnull dereferenceable(32) %4, i16* %30) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #4
  br label %36

36:                                               ; preds = %11, %8, %2, %15
  %37 = phi i32 [ %35, %15 ], [ -5, %2 ], [ -7, %8 ], [ -9, %11 ]
  ret i32 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
