; ModuleID = '../../third_party/blink/renderer/core/layout/layout_block_flow_line.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_block_flow_line.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1605", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1605" = type { %"class.std::__1::__compressed_pair.1606" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.1607" }
%"struct.std::__1::__compressed_pair_elem.1607" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1608", %"class.absl::optional.1617" }
%"class.absl::optional.1608" = type { %"class.absl::optional_internal::optional_data.1609" }
%"class.absl::optional_internal::optional_data.1609" = type { %"class.absl::optional_internal::optional_data_base.1610" }
%"class.absl::optional_internal::optional_data_base.1610" = type { %"class.absl::optional_internal::optional_data_dtor_base.1611" }
%"class.absl::optional_internal::optional_data_dtor_base.1611" = type { i8, %union.anon.1612 }
%union.anon.1612 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1617" = type { %"class.absl::optional_internal::optional_data.1618" }
%"class.absl::optional_internal::optional_data.1618" = type { %"class.absl::optional_internal::optional_data_base.1619" }
%"class.absl::optional_internal::optional_data_base.1619" = type { %"class.absl::optional_internal::optional_data_dtor_base.1620" }
%"class.absl::optional_internal::optional_data_dtor_base.1620" = type { i8, %union.anon.1621 }
%union.anon.1621 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1669", %"class.std::__1::unique_ptr.1679" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1625, %"class.WTF::Vector.1626", %"class.std::__1::unique_ptr.1631", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1652, %"class.blink::Persistent.1653" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1603", [4 x i8] }>
%"class.WTF::RefCounted.1603" = type { %"class.base::RefCounted.1604" }
%"class.base::RefCounted.1604" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1596", i64 }
%"class.std::__1::vector.1596" = type { %"class.std::__1::__vector_base.1597" }
%"class.std::__1::__vector_base.1597" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1598" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2351 }
%class.scoped_refptr.2351 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2352", %"class.WTF::Vector.630", %"class.WTF::Vector.2354", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2352" = type { %"class.base::RefCounted.2353" }
%"class.base::RefCounted.2353" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2354" = type { %"class.WTF::VectorBuffer.2355" }
%"class.WTF::VectorBuffer.2355" = type { %"class.WTF::VectorBufferBase.2356" }
%"class.WTF::VectorBufferBase.2356" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2357 }
%union.anon.2357 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1340", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1342", %"class.blink::HeapVector.1344", %"class.std::__1::unique_ptr.1352", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1358", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1371", %"class.WTF::Vector.1373", i8, i8, %"class.std::__1::unique_ptr.1378", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1384", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1392", i8, i32, %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1400", %"class.WTF::HashMap.1402", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.1413", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1415", i8, i32, %"class.blink::Member.1422", %"class.blink::Member.1424", i32, %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.blink::Member.1430", %"class.std::__1::unique_ptr.1432", i64, %"class.std::__1::unique_ptr.1438", i32, i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1455", %"class.WTF::Vector.1457", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1462", %"class.blink::Member.1469", %"class.std::__1::unique_ptr.1471", %"class.blink::Member.1477", i8, i8, %"class.WTF::String", %"class.blink::Member.1479", i8, [7 x i8], %"class.blink::HeapHashMap.1481", %"class.blink::HeapObserverSet", %"class.blink::Member.1495", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1497", i32, i8, i8, %"class.blink::WeakMember.1499", %"class.blink::Member.1500" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1524", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1565", i32, i8, [3 x i8], %"class.blink::HeapVector.1567", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1575", %"class.blink::Member.1577", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1586", %"class.blink::Member.1592", %"class.blink::Member.1594", i8, [7 x i8] }>
%"class.blink::Supplementable.1524" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1525" }
%"class.blink::HeapHashMap.1525" = type { %"class.WTF::HashMap.1528" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1531"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1531" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1540" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1532" }
%"class.blink::HeapObserverSet.1532" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1533" }
%"class.blink::HeapHashSet.1533" = type { %"class.WTF::HashSet.1536" }
%"class.WTF::HashSet.1536" = type { %"class.WTF::HashTable.1537" }
%"class.WTF::HashTable.1537" = type <{ %"class.blink::WeakMember.1539"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1539" = type opaque
%"class.blink::Supplementable.1540" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1541" }
%"class.blink::HeapHashMap.1541" = type { %"class.WTF::HashMap.1544" }
%"class.WTF::HashMap.1544" = type { %"class.WTF::HashTable.1545" }
%"class.WTF::HashTable.1545" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type { i8*, %"class.blink::Member.2342" }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2344" }
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1548, %"class.std::__1::unique_ptr.1549", %"class.std::__1::unique_ptr.1549", %"class.std::__1::unique_ptr.1555", %"class.std::__1::unique_ptr.1555", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1561", i32, i32 }
%class.scoped_refptr.1548 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.2057", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.2059", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2064 }
%"class.WTF::RefCounted.2057" = type { %"class.base::RefCounted.2058" }
%"class.base::RefCounted.2058" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.2059" = type { %"class.absl::optional_internal::optional_data.2060" }
%"class.absl::optional_internal::optional_data.2060" = type { %"class.absl::optional_internal::optional_data_base.2061" }
%"class.absl::optional_internal::optional_data_base.2061" = type { %"class.absl::optional_internal::optional_data_dtor_base.2062" }
%"class.absl::optional_internal::optional_data_dtor_base.2062" = type { i8, %union.anon.2063 }
%union.anon.2063 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.2064 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1549" = type { %"class.std::__1::__compressed_pair.1550" }
%"class.std::__1::__compressed_pair.1550" = type { %"struct.std::__1::__compressed_pair_elem.1551" }
%"struct.std::__1::__compressed_pair_elem.1551" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1555" = type { %"class.std::__1::__compressed_pair.1556" }
%"class.std::__1::__compressed_pair.1556" = type { %"struct.std::__1::__compressed_pair_elem.1557" }
%"struct.std::__1::__compressed_pair_elem.1557" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1561" = type { %"class.WTF::HashTable.1562" }
%"class.WTF::HashTable.1562" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1567" = type { %"class.WTF::Vector.1570" }
%"class.WTF::Vector.1570" = type { %"class.WTF::VectorBuffer.1571" }
%"class.WTF::VectorBuffer.1571" = type { %"class.WTF::VectorBufferBase.1572" }
%"class.WTF::VectorBufferBase.1572" = type { %"class.blink::Member.1573"*, i32, i32 }
%"class.blink::Member.1573" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1579", i32, i32 }
%"class.blink::HeapHashMap.1579" = type { %"class.WTF::HashMap.1582" }
%"class.WTF::HashMap.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"struct.WTF::KeyValuePair.1585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1585" = type opaque
%"class.std::__1::unique_ptr.1586" = type { %"class.std::__1::__compressed_pair.1587" }
%"class.std::__1::__compressed_pair.1587" = type { %"struct.std::__1::__compressed_pair_elem.1588" }
%"struct.std::__1::__compressed_pair_elem.1588" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1515", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1515" = type { %"class.WTF::Vector.1518" }
%"class.WTF::Vector.1518" = type { %"class.WTF::VectorBuffer.1519" }
%"class.WTF::VectorBuffer.1519" = type { %"class.WTF::VectorBufferBase.1520" }
%"class.WTF::VectorBufferBase.1520" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2365 }
%class.scoped_refptr.2365 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2375" }
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2371" }
%"class.blink::MemberBase.2371" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2373" }
%"class.blink::MemberBase.2373" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2366", %"class.WTF::Vector.2366" }
%"class.WTF::Vector.2366" = type { %"class.WTF::VectorBuffer.2367" }
%"class.WTF::VectorBuffer.2367" = type { %"class.WTF::VectorBufferBase.2368" }
%"class.WTF::VectorBufferBase.2368" = type { %class.scoped_refptr.2365*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1344" = type { %"class.WTF::Vector.1347" }
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::Member.1350"*, i32, i32 }
%"class.blink::Member.1350" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1365", i32, [4 x i8] }>
%"class.WTF::Vector.1365" = type { %"class.WTF::VectorBuffer.1366" }
%"class.WTF::VectorBuffer.1366" = type { %"class.WTF::VectorBufferBase.1367" }
%"class.WTF::VectorBufferBase.1367" = type { %"struct.std::__1::pair.1368"*, i32, i32 }
%"struct.std::__1::pair.1368" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1710", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1936", %"class.std::__1::unique_ptr.1942", %class.scoped_refptr.1706, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1948", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::UntracedMember.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1714", %"class.blink::Member.1719", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1721", i8, i32, %"class.blink::Color", %"class.absl::optional.1724", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1729", %"class.blink::Member.1731", %"class.blink::Member.1731", %"class.std::__1::unique_ptr.1734", i32, [4 x i8], %"class.WTF::HashSet.1737", %"class.blink::Member.1744", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1746", %"class.blink::HeapHashSet.1753", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1761", i8, %"class.blink::Member.1767", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1779", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1793", i8, %"class.std::__1::unique_ptr.1799", %"class.std::__1::unique_ptr.1880", %"class.WTF::Vector.1886", i32, %class.scoped_refptr.1891, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::Member.1896", %"class.blink::HeapHashSet.1898", %"class.blink::HeapHashSet.1905", %"class.std::__1::unique_ptr.1912", %"class.std::__1::unique_ptr.1919", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1714" = type { %"class.WTF::HashTable.1715" }
%"class.WTF::HashTable.1715" = type <{ %class.scoped_refptr.1718*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1718 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1719" = type { %"class.blink::MemberBase.1720" }
%"class.blink::MemberBase.1720" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1721" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1722", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1724" = type { %"class.absl::optional_internal::optional_data.1725" }
%"class.absl::optional_internal::optional_data.1725" = type { %"class.absl::optional_internal::optional_data_base.1726" }
%"class.absl::optional_internal::optional_data_base.1726" = type { %"class.absl::optional_internal::optional_data_dtor_base.1727" }
%"class.absl::optional_internal::optional_data_dtor_base.1727" = type { i8, %union.anon.1728 }
%union.anon.1728 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::HeapHashSet.1733"* }
%"class.blink::HeapHashSet.1733" = type opaque
%"class.std::__1::unique_ptr.1734" = type { %"class.std::__1::__compressed_pair.1735" }
%"class.std::__1::__compressed_pair.1735" = type { %"struct.std::__1::__compressed_pair_elem.1736" }
%"struct.std::__1::__compressed_pair_elem.1736" = type { %"class.WTF::HashSet.1737"* }
%"class.WTF::HashSet.1737" = type { %"class.WTF::HashTable.1738" }
%"class.WTF::HashTable.1738" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1746" = type { %"class.WTF::HashSet.1749" }
%"class.WTF::HashSet.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"class.blink::Member.1752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1752" = type opaque
%"class.blink::HeapHashSet.1753" = type { %"class.WTF::HashSet.1756" }
%"class.WTF::HashSet.1756" = type { %"class.WTF::HashTable.1757" }
%"class.WTF::HashTable.1757" = type <{ %"class.blink::Member.1759"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1759" = type { %"class.blink::MemberBase.1760" }
%"class.blink::MemberBase.1760" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1965", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1975", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.blink::Member.1973", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1975" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1976", { i64, i64 } }
%"class.blink::WeakMember.1976" = type { %"class.blink::MemberBase.1760" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1767" = type { %"class.blink::MemberBase.1768" }
%"class.blink::MemberBase.1768" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1771", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1771" = type { %"class.WTF::HashTable.1772" }
%"class.WTF::HashTable.1772" = type <{ %"struct.WTF::KeyValuePair.1774"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1774" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1775", i32, i32 }
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1779" = type { %"class.WTF::LinkedHashSet.1782" }
%"class.WTF::LinkedHashSet.1782" = type { %"class.WTF::HashMap.1783", %"class.WTF::VectorBackedLinkedList.1787" }
%"class.WTF::HashMap.1783" = type { %"class.WTF::HashTable.1784" }
%"class.WTF::HashTable.1784" = type <{ %"struct.WTF::KeyValuePair.1786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1786" = type opaque
%"class.WTF::VectorBackedLinkedList.1787" = type { %"class.WTF::Vector.1788", i32, i32 }
%"class.WTF::Vector.1788" = type { %"class.WTF::VectorBuffer.1789" }
%"class.WTF::VectorBuffer.1789" = type { %"class.WTF::VectorBufferBase.1790" }
%"class.WTF::VectorBufferBase.1790" = type { %"class.WTF::VectorBackedLinkedListNode.1791"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1791" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1793" = type { %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.1795" }
%"struct.std::__1::__compressed_pair_elem.1795" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1802, %class.scoped_refptr.1802, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1857", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1862", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1802 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1803", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1810" }
%"class.WTF::RefCounted.1803" = type { %"class.base::RefCounted.1804" }
%"class.base::RefCounted.1804" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1805", i32, [4 x i8] }>
%"class.WTF::Vector.1805" = type { %"class.WTF::VectorBuffer.1806" }
%"class.WTF::VectorBuffer.1806" = type { %"class.WTF::VectorBufferBase.1807" }
%"class.WTF::VectorBufferBase.1807" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1810" = type { %"class.WTF::VectorBuffer.1811" }
%"class.WTF::VectorBuffer.1811" = type { %"class.WTF::VectorBufferBase.1812" }
%"class.WTF::VectorBufferBase.1812" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1813", %"class.std::__1::unique_ptr.1829", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1816", %"class.WTF::Vector.1821", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1816" = type { %"class.WTF::VectorBuffer.1817" }
%"class.WTF::VectorBuffer.1817" = type { %"class.WTF::VectorBufferBase.1818" }
%"class.WTF::VectorBufferBase.1818" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1821" = type { %"class.WTF::VectorBuffer.1822" }
%"class.WTF::VectorBuffer.1822" = type { %"class.WTF::VectorBufferBase.1823" }
%"class.WTF::VectorBufferBase.1823" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1832", %"class.absl::optional.1832" }
%"class.absl::optional.1832" = type { %"class.absl::optional_internal::optional_data.1833" }
%"class.absl::optional_internal::optional_data.1833" = type { %"class.absl::optional_internal::optional_data_base.1834" }
%"class.absl::optional_internal::optional_data_base.1834" = type { %"class.absl::optional_internal::optional_data_dtor_base.1835" }
%"class.absl::optional_internal::optional_data_dtor_base.1835" = type { i8, [3 x i8], %union.anon.1836 }
%union.anon.1836 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1810"*, %"class.absl::optional.1842", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1842" = type { %"class.absl::optional_internal::optional_data.1843" }
%"class.absl::optional_internal::optional_data.1843" = type { %"class.absl::optional_internal::optional_data_base.1844" }
%"class.absl::optional_internal::optional_data_base.1844" = type { %"class.absl::optional_internal::optional_data_dtor_base.1845" }
%"class.absl::optional_internal::optional_data_dtor_base.1845" = type { i8, %union.anon.1846 }
%union.anon.1846 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1847", %"class.WTF::Vector.1852" }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849", [128 x i8] }
%"class.WTF::VectorBufferBase.1849" = type { i32*, i32, i32 }
%"class.WTF::Vector.1852" = type { %"class.WTF::VectorBuffer.1853" }
%"class.WTF::VectorBuffer.1853" = type { %"class.WTF::VectorBufferBase.1854", [128 x i8] }
%"class.WTF::VectorBufferBase.1854" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1857" = type { %"class.WTF::VectorBuffer.1858" }
%"class.WTF::VectorBuffer.1858" = type { %"class.WTF::VectorBufferBase.1859" }
%"class.WTF::VectorBufferBase.1859" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1862" = type { %"class.WTF::HashTable.1863" }
%"class.WTF::HashTable.1863" = type <{ %"struct.WTF::KeyValuePair.1866"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1866" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1867", %"class.WTF::Vector.1872" }
%"class.WTF::HashMap.1867" = type { %"class.WTF::HashTable.1868" }
%"class.WTF::HashTable.1868" = type <{ %"struct.WTF::KeyValuePair.1871"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1871" = type opaque
%"class.WTF::Vector.1872" = type { %"class.WTF::VectorBuffer.1873" }
%"class.WTF::VectorBuffer.1873" = type { %"class.WTF::VectorBufferBase.1874" }
%"class.WTF::VectorBufferBase.1874" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1880" = type { %"class.std::__1::__compressed_pair.1881" }
%"class.std::__1::__compressed_pair.1881" = type { %"struct.std::__1::__compressed_pair_elem.1882" }
%"struct.std::__1::__compressed_pair_elem.1882" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1886" = type { %"class.WTF::VectorBuffer.1887" }
%"class.WTF::VectorBuffer.1887" = type { %"class.WTF::VectorBufferBase.1888" }
%"class.WTF::VectorBufferBase.1888" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1891 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1898" = type { %"class.WTF::HashSet.1901" }
%"class.WTF::HashSet.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"class.blink::WeakMember.1904"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1904" = type opaque
%"class.blink::HeapHashSet.1905" = type { %"class.WTF::HashSet.1908" }
%"class.WTF::HashSet.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %"class.blink::WeakMember.1911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1911" = type opaque
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1915" }
%"class.base::time_internal::TimeBase.1915" = type { i64 }
%"class.std::__1::unique_ptr.1919" = type { %"class.std::__1::__compressed_pair.1920" }
%"class.std::__1::__compressed_pair.1920" = type { %"struct.std::__1::__compressed_pair_elem.1921" }
%"struct.std::__1::__compressed_pair_elem.1921" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1922", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1922" = type { %"class.absl::optional_internal::optional_data.1923" }
%"class.absl::optional_internal::optional_data.1923" = type { %"class.absl::optional_internal::optional_data_base.1924" }
%"class.absl::optional_internal::optional_data_base.1924" = type { %"class.absl::optional_internal::optional_data_dtor_base.1925" }
%"class.absl::optional_internal::optional_data_dtor_base.1925" = type { i8, %union.anon.1926 }
%union.anon.1926 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1936" = type { %"class.std::__1::__compressed_pair.1937" }
%"class.std::__1::__compressed_pair.1937" = type { %"struct.std::__1::__compressed_pair_elem.1938" }
%"struct.std::__1::__compressed_pair_elem.1938" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1706 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1948" = type { %"class.blink::PersistentBase.1949" }
%"class.blink::PersistentBase.1949" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1952", i64 }
%"class.blink::HeapVector.1952" = type { %"class.WTF::Vector.1955" }
%"class.WTF::Vector.1955" = type { %"class.WTF::VectorBuffer.1956" }
%"class.WTF::VectorBuffer.1956" = type { %"class.WTF::VectorBufferBase.1957", [368 x i8] }
%"class.WTF::VectorBufferBase.1957" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1759", i8, %"class.blink::Member.1958", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::HeapLinkedHashSet.1960"* }
%"class.blink::HeapLinkedHashSet.1960" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::Member.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1421" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1457" = type { %"class.WTF::VectorBuffer.1458" }
%"class.WTF::VectorBuffer.1458" = type { %"class.WTF::VectorBufferBase.1459" }
%"class.WTF::VectorBufferBase.1459" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1462" = type { %"class.WTF::HashMap.1465" }
%"class.WTF::HashMap.1465" = type { %"class.WTF::HashTable.1466" }
%"class.WTF::HashTable.1466" = type <{ %"struct.WTF::KeyValuePair.1468"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1468" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1471" = type { %"class.std::__1::__compressed_pair.1472" }
%"class.std::__1::__compressed_pair.1472" = type { %"struct.std::__1::__compressed_pair_elem.1473" }
%"struct.std::__1::__compressed_pair_elem.1473" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1481" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1488" }
%"class.blink::HeapHashSet.1488" = type { %"class.WTF::HashSet.1491" }
%"class.WTF::HashSet.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"class.blink::WeakMember.1494"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1494" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1504", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1511", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1504" = type { %"class.WTF::HashSet.1507" }
%"class.WTF::HashSet.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"class.blink::Member.1510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1510" = type opaque
%"class.blink::HeapTaskRunnerTimer.1511" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1512", { i64, i64 } }
%"class.blink::WeakMember.1512" = type { %"class.blink::MemberBase.1498" }
%"class.blink::WeakMember.1499" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2346" }
%"class.WTF::Vector.2346" = type { %"class.WTF::VectorBuffer.2347" }
%"class.WTF::VectorBuffer.2347" = type { %"class.WTF::VectorBufferBase.2348" }
%"class.WTF::VectorBufferBase.2348" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2074", %"class.absl::optional.2074", %"class.absl::optional.2074" }
%"class.absl::optional.2074" = type { %"class.absl::optional_internal::optional_data.2075" }
%"class.absl::optional_internal::optional_data.2075" = type { %"class.absl::optional_internal::optional_data_base.2076" }
%"class.absl::optional_internal::optional_data_base.2076" = type { %"class.absl::optional_internal::optional_data_dtor_base.2077" }
%"class.absl::optional_internal::optional_data_dtor_base.2077" = type { i8, %union.anon.2078 }
%union.anon.2078 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2361" }
%"class.WTF::VectorBuffer.2361" = type { %"class.WTF::VectorBufferBase.2362", [32 x i8] }
%"class.WTF::VectorBufferBase.2362" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1979", %"class.blink::Persistent.1985", %"class.std::__1::unique_ptr.2009", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2025" }
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1985" = type { %"class.blink::PersistentBase.1986" }
%"class.blink::PersistentBase.1986" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1991", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2004" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1989", %"class.blink::Member.1759", %"class.blink::Member.1759", i8, [7 x i8] }>
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1965", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1994", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1821" }
%"class.WTF::HashMap.1994" = type { %"class.WTF::HashTable.1995" }
%"class.WTF::HashTable.1995" = type <{ %"struct.WTF::KeyValuePair.1998"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1998" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2002" }
%"class.blink::Member.2002" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2002" }
%"class.absl::optional.2004" = type { %"class.absl::optional_internal::optional_data.2005" }
%"class.absl::optional_internal::optional_data.2005" = type { %"class.absl::optional_internal::optional_data_base.2006" }
%"class.absl::optional_internal::optional_data_base.2006" = type { %"class.absl::optional_internal::optional_data_dtor_base.2007" }
%"class.absl::optional_internal::optional_data_dtor_base.2007" = type { i8, %union.anon.2008 }
%union.anon.2008 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2009" = type { %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2012", %"class.WTF::Vector.2012", %"class.WTF::HashMap.2017", %"class.WTF::Vector.2012", i8, [7 x i8] }>
%"class.WTF::HashMap.2017" = type { %"class.WTF::HashTable.2018" }
%"class.WTF::HashTable.2018" = type <{ %"struct.WTF::KeyValuePair.2021"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2021" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2012" }
%"class.WTF::Vector.2012" = type { %"class.WTF::VectorBuffer.2013" }
%"class.WTF::VectorBuffer.2013" = type { %"class.WTF::VectorBufferBase.2014" }
%"class.WTF::VectorBufferBase.2014" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2028", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2034", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2040", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2028" = type { %"class.std::__1::__compressed_pair.2029" }
%"class.std::__1::__compressed_pair.2029" = type { %"struct.std::__1::__compressed_pair_elem.2030" }
%"struct.std::__1::__compressed_pair_elem.2030" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2034" = type { %"class.std::__1::__compressed_pair.2035" }
%"class.std::__1::__compressed_pair.2035" = type { %"struct.std::__1::__compressed_pair_elem.2036" }
%"struct.std::__1::__compressed_pair_elem.2036" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2040" = type { %"class.blink::PersistentBase.2041" }
%"class.blink::PersistentBase.2041" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1625 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2065", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2212, %union.anon.2230, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2065" = type { %"class.base::RefCounted.2066" }
%"class.base::RefCounted.2066" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2067, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2067 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2068 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2068 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2102 }
%class.scoped_refptr.2102 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2103", [4 x i8], %"class.std::__1::unique_ptr.2105", i64, %"class.WTF::Vector.2109", %"class.WTF::Vector.2114", %"class.WTF::Vector.2120", %"class.WTF::Vector.2138", %class.scoped_refptr.1548, %"class.WTF::HashMap.2144", %"class.WTF::Vector.2149", %"class.WTF::Vector.2109", %"class.WTF::Vector.2154", %"class.WTF::HashMap.2159", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2103" = type { %"class.base::RefCountedThreadSafe.2104" }
%"class.base::RefCountedThreadSafe.2104" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2105" = type { %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.2107" }
%"struct.std::__1::__compressed_pair_elem.2107" = type { i8* }
%"class.WTF::Vector.2114" = type { %"class.WTF::VectorBuffer.2115" }
%"class.WTF::VectorBuffer.2115" = type { %"class.WTF::VectorBufferBase.2116", [8 x i8] }
%"class.WTF::VectorBufferBase.2116" = type { %class.scoped_refptr.2117*, i32, i32 }
%class.scoped_refptr.2117 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2120" = type { %"class.WTF::VectorBuffer.2121" }
%"class.WTF::VectorBuffer.2121" = type { %"class.WTF::VectorBufferBase.2122" }
%"class.WTF::VectorBufferBase.2122" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2124", %"class.std::__1::unique_ptr.2130" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2123 }
%class.scoped_refptr.2123 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2124" = type { %"class.std::__1::__compressed_pair.2125" }
%"class.std::__1::__compressed_pair.2125" = type { %"struct.std::__1::__compressed_pair_elem.2126" }
%"struct.std::__1::__compressed_pair_elem.2126" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2130" = type { %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.2132" }
%"struct.std::__1::__compressed_pair_elem.2132" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2138" = type { %"class.WTF::VectorBuffer.2139" }
%"class.WTF::VectorBuffer.2139" = type { %"class.WTF::VectorBufferBase.2140" }
%"class.WTF::VectorBufferBase.2140" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2141", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2141" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2144" = type { %"class.WTF::HashTable.2145" }
%"class.WTF::HashTable.2145" = type <{ %"struct.WTF::KeyValuePair.2148"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2148" = type opaque
%"class.WTF::Vector.2149" = type { %"class.WTF::VectorBuffer.2150" }
%"class.WTF::VectorBuffer.2150" = type { %"class.WTF::VectorBufferBase.2151" }
%"class.WTF::VectorBufferBase.2151" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.2109" = type { %"class.WTF::VectorBuffer.2110" }
%"class.WTF::VectorBuffer.2110" = type { %"class.WTF::VectorBufferBase.2111", [16 x i8] }
%"class.WTF::VectorBufferBase.2111" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2154" = type { %"class.WTF::VectorBuffer.2155" }
%"class.WTF::VectorBuffer.2155" = type { %"class.WTF::VectorBufferBase.2156" }
%"class.WTF::VectorBufferBase.2156" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.2159" = type { %"class.WTF::HashTable.2160" }
%"class.WTF::HashTable.2160" = type <{ %"struct.WTF::KeyValuePair.2163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2163" = type { i8**, %"class.std::__1::unique_ptr.2377" }
%"class.std::__1::unique_ptr.2377" = type { %"class.std::__1::__compressed_pair.2378" }
%"class.std::__1::__compressed_pair.2378" = type { %"struct.std::__1::__compressed_pair_elem.2379" }
%"struct.std::__1::__compressed_pair_elem.2379" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2164" }
%"class.std::__1::unique_ptr.2164" = type { %"class.std::__1::__compressed_pair.2165" }
%"class.std::__1::__compressed_pair.2165" = type { %"struct.std::__1::__compressed_pair_elem.2166" }
%"struct.std::__1::__compressed_pair_elem.2166" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2167, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2184" }
%class.scoped_refptr.2167 = type { %"class.base::RefCountedData.2168"* }
%"class.base::RefCountedData.2168" = type { %"class.base::RefCountedThreadSafe.2169", %"class.WTF::Vector.2170" }
%"class.base::RefCountedThreadSafe.2169" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2170" = type { %"class.WTF::VectorBuffer.2171" }
%"class.WTF::VectorBuffer.2171" = type { %"class.WTF::VectorBufferBase.2172" }
%"class.WTF::VectorBufferBase.2172" = type { %class.scoped_refptr.2173*, i32, i32 }
%class.scoped_refptr.2173 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2174", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2176" }
%"class.WTF::RefCounted.2174" = type { %"class.base::RefCounted.2175" }
%"class.base::RefCounted.2175" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2176" = type { %"class.std::__1::__compressed_pair.2177" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.2178" }
%"struct.std::__1::__compressed_pair_elem.2178" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2184" = type { %"class.std::__1::__compressed_pair.2185" }
%"class.std::__1::__compressed_pair.2185" = type { %"struct.std::__1::__compressed_pair_elem.2186" }
%"struct.std::__1::__compressed_pair_elem.2186" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2187", %"class.WTF::Vector.2200", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2187" = type { %"class.WTF::VectorBuffer.2188" }
%"class.WTF::VectorBuffer.2188" = type { %"class.WTF::VectorBufferBase.2189", [320 x i8] }
%"class.WTF::VectorBufferBase.2189" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2190", %"class.WTF::Vector.2190", %class.scoped_refptr.2195, i8, [7 x i8] }>
%"class.WTF::Vector.2190" = type { %"class.WTF::VectorBuffer.2191" }
%"class.WTF::VectorBuffer.2191" = type { %"class.WTF::VectorBufferBase.2192", [8 x i8] }
%"class.WTF::VectorBufferBase.2192" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2195 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2196", %"class.WTF::Vector.2170", %"class.WTF::Vector.2170" }
%"class.WTF::RefCounted.2196" = type { %"class.base::RefCounted.2197" }
%"class.base::RefCounted.2197" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2200" = type { %"class.WTF::VectorBuffer.2201" }
%"class.WTF::VectorBuffer.2201" = type { %"class.WTF::VectorBufferBase.2202", [288 x i8] }
%"class.WTF::VectorBufferBase.2202" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2190", %"class.WTF::Vector.2190" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2203 }
%class.scoped_refptr.2203 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2212 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2213", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2215, %"class.std::__1::unique_ptr.2218" }
%"class.WTF::RefCounted.2213" = type { %"class.base::RefCounted.2214" }
%"class.base::RefCounted.2214" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2215 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2216", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2216" = type { %"class.base::RefCounted.2217" }
%"class.base::RefCounted.2217" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2218" = type { %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.2220" }
%"struct.std::__1::__compressed_pair_elem.2220" = type { %"class.WTF::Vector.2221"* }
%"class.WTF::Vector.2221" = type { %"class.WTF::VectorBuffer.2222" }
%"class.WTF::VectorBuffer.2222" = type { %"class.WTF::VectorBufferBase.2223" }
%"class.WTF::VectorBufferBase.2223" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2224 }
%union.anon.2224 = type { %"class.blink::LineBoxList" }
%union.anon.2230 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.2069", %class.scoped_refptr.2231, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2232, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2102, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2233", %"class.absl::optional.2249" }
%"class.absl::optional.2069" = type { %"class.absl::optional_internal::optional_data.2070" }
%"class.absl::optional_internal::optional_data.2070" = type { %"class.absl::optional_internal::optional_data_base.2071" }
%"class.absl::optional_internal::optional_data_base.2071" = type { %"class.absl::optional_internal::optional_data_dtor_base.2072" }
%"class.absl::optional_internal::optional_data_dtor_base.2072" = type { i8, %union.anon.2073 }
%union.anon.2073 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2231 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.2254", [4 x i8], %union.anon.2256, %class.scoped_refptr.2231, i32, [4 x i8] }>
%"class.WTF::RefCounted.2254" = type { %"class.base::RefCounted.2255" }
%"class.base::RefCounted.2255" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.2256 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2232 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2236", %"class.WTF::Vector.2241", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2236" = type { %"class.WTF::VectorBuffer.2237" }
%"class.WTF::VectorBuffer.2237" = type { %"class.WTF::VectorBufferBase.2238" }
%"class.WTF::VectorBufferBase.2238" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2241" = type { %"class.WTF::VectorBuffer.2242" }
%"class.WTF::VectorBuffer.2242" = type { %"class.WTF::VectorBufferBase.2243" }
%"class.WTF::VectorBufferBase.2243" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.2249" = type { %"class.absl::optional_internal::optional_data.2250" }
%"class.absl::optional_internal::optional_data.2250" = type { %"class.absl::optional_internal::optional_data_base.2251" }
%"class.absl::optional_internal::optional_data_base.2251" = type { %"class.absl::optional_internal::optional_data_dtor_base.2252" }
%"class.absl::optional_internal::optional_data_dtor_base.2252" = type { i8, %union.anon.2253 }
%union.anon.2253 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1626" = type { %"class.WTF::VectorBuffer.1627" }
%"class.WTF::VectorBuffer.1627" = type { %"class.WTF::VectorBufferBase.1628", [8 x i8] }
%"class.WTF::VectorBufferBase.1628" = type { %class.scoped_refptr.1625*, i32, i32 }
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1634", %"class.absl::optional.1639", %"class.absl::optional.1644" }
%"class.absl::optional.1634" = type { %"class.absl::optional_internal::optional_data.1635" }
%"class.absl::optional_internal::optional_data.1635" = type { %"class.absl::optional_internal::optional_data_base.1636" }
%"class.absl::optional_internal::optional_data_base.1636" = type { %"class.absl::optional_internal::optional_data_dtor_base.1637" }
%"class.absl::optional_internal::optional_data_dtor_base.1637" = type { i8, %union.anon.1638 }
%union.anon.1638 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1639" = type { %"class.absl::optional_internal::optional_data.1640" }
%"class.absl::optional_internal::optional_data.1640" = type { %"class.absl::optional_internal::optional_data_base.1641" }
%"class.absl::optional_internal::optional_data_base.1641" = type { %"class.absl::optional_internal::optional_data_dtor_base.1642" }
%"class.absl::optional_internal::optional_data_dtor_base.1642" = type { i8, [3 x i8], %union.anon.1643 }
%union.anon.1643 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1644" = type { %"class.absl::optional_internal::optional_data.1645" }
%"class.absl::optional_internal::optional_data.1645" = type { %"class.absl::optional_internal::optional_data_base.1646" }
%"class.absl::optional_internal::optional_data_base.1646" = type { %"class.absl::optional_internal::optional_data_dtor_base.1647" }
%"class.absl::optional_internal::optional_data_dtor_base.1647" = type { i8, %union.anon.1648 }
%union.anon.1648 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1652 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1653" = type { %"class.blink::PersistentBase.1654" }
%"class.blink::PersistentBase.1654" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1657", %"struct.blink::PhysicalRect", %"class.blink::Member.1667" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %"class.WTF::HashSet.1660"* }
%"class.WTF::HashSet.1660" = type { %"class.WTF::HashTable.1661" }
%"class.WTF::HashTable.1661" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1669" = type { %"class.blink::PersistentBase.1670" }
%"class.blink::PersistentBase.1670" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1673", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1673" = type { %"class.std::__1::__compressed_pair.1674" }
%"class.std::__1::__compressed_pair.1674" = type { %"struct.std::__1::__compressed_pair_elem.1675" }
%"struct.std::__1::__compressed_pair_elem.1675" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2047", %"class.WTF::HashMap.2052", %"class.WTF::String" }
%"class.WTF::Vector.2047" = type { %"class.WTF::VectorBuffer.2048" }
%"class.WTF::VectorBuffer.2048" = type { %"class.WTF::VectorBufferBase.2049" }
%"class.WTF::VectorBufferBase.2049" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2052" = type { %"class.WTF::HashTable.2053" }
%"class.WTF::HashTable.2053" = type <{ %"struct.WTF::KeyValuePair.2056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2056" = type opaque
%"class.std::__1::unique_ptr.1679" = type { %"class.std::__1::__compressed_pair.1680" }
%"class.std::__1::__compressed_pair.1680" = type { %"struct.std::__1::__compressed_pair_elem.1681" }
%"struct.std::__1::__compressed_pair_elem.1681" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1682", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1682" = type { %"class.WTF::HashTable.1685", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1685" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1688", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1691, %"class.std::__1::unique_ptr.1692", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1605", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1691 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1977", i16, %class.scoped_refptr.1691 }
%"class.WTF::ThreadSafeRefCounted.1977" = type { %"class.base::RefCountedThreadSafe.1978" }
%"class.base::RefCountedThreadSafe.1978" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.WTF::Vector.1695"* }
%"class.WTF::Vector.1695" = type { %"class.WTF::VectorBuffer.1696" }
%"class.WTF::VectorBuffer.1696" = type { %"class.WTF::VectorBufferBase.1697" }
%"class.WTF::VectorBufferBase.1697" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1706, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LineInfo" = type { i8, i8, i8, i8, i32, i32 }
%"class.blink::BidiRunList" = type <{ %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, i32, [4 x i8] }>
%"struct.blink::BidiRun" = type { %"struct.blink::BidiCharacterRun", %"class.blink::LineLayoutItem", %"class.blink::InlineBox"* }
%"struct.blink::BidiCharacterRun" = type { i8, i8, %"struct.blink::BidiCharacterRun"*, i32, i32 }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2286 }
%union.anon.2286 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.2287" }
%"class.blink::InlineBoxList.2287" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutRubyRun" = type { %"class.blink::LayoutBlockFlow" }
%"class.WTF::HashMap.2257" = type { %"class.WTF::HashTable.2258" }
%"class.WTF::HashTable.2258" = type <{ %"struct.WTF::KeyValuePair.2261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2261" = type { %"class.blink::InlineTextBox"*, %"struct.std::__1::pair.2262" }
%"struct.std::__1::pair.2262" = type { %"class.WTF::Vector.2263", %"struct.blink::GlyphOverflow" }
%"class.WTF::Vector.2263" = type { %"class.WTF::VectorBuffer.2264" }
%"class.WTF::VectorBuffer.2264" = type { %"class.WTF::VectorBufferBase.2265" }
%"class.WTF::VectorBufferBase.2265" = type { %"class.blink::SimpleFontData"**, i32, i32 }
%"struct.blink::GlyphOverflow" = type { float, float, float, float }
%"class.blink::VerticalPositionCache" = type { %"class.WTF::HashMap.2268", %"class.WTF::HashMap.2268" }
%"class.WTF::HashMap.2268" = type { %"class.WTF::HashTable.2269" }
%"class.WTF::HashTable.2269" = type <{ %"struct.WTF::KeyValuePair.2272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2272" = type <{ %"class.blink::LineLayoutItem", i32, [4 x i8] }>
%"class.WTF::Vector.2273" = type { %"class.WTF::VectorBuffer.2274" }
%"class.WTF::VectorBuffer.2274" = type { %"class.WTF::VectorBufferBase.2275", [4096 x i8] }
%"class.WTF::VectorBufferBase.2275" = type { %"class.blink::WordMeasurement"*, i32, i32 }
%"class.blink::WordMeasurement" = type { %"class.blink::LineLayoutText", float, i32, i32, [4 x i8], %"class.WTF::HashSet.2276", %"class.blink::FloatRect" }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.WTF::HashSet.2276" = type { %"class.WTF::HashTable.2277" }
%"class.WTF::HashTable.2277" = type <{ %"class.blink::SimpleFontData"**, i32, i32, i32, [4 x i8] }>
%"class.blink::TextRun" = type <{ %union.anon.2341, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.2341 = type { i8* }
%"class.blink::ExpansionOpportunities" = type <{ %"class.WTF::Vector.2282", i32, [4 x i8] }>
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.1071", [64 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::InlineIterator" = type { %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", i32, i32 }
%"class.blink::SVGRootInlineBox" = type <{ %"class.blink::RootInlineBox", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.blink::LineLayoutState" = type <{ %"class.WTF::Vector.2288", %"class.blink::FloatingObject"*, %"class.blink::RootInlineBox"*, %"class.blink::LineInfo", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, %"class.blink::LayoutUnit", [4 x i8] }>
%"class.WTF::Vector.2288" = type { %"class.WTF::VectorBuffer.2289" }
%"class.WTF::VectorBuffer.2289" = type { %"class.WTF::VectorBufferBase.2290" }
%"class.WTF::VectorBufferBase.2290" = type { %"struct.blink::LayoutBlockFlow::FloatWithRect"*, i32, i32 }
%"struct.blink::LayoutBlockFlow::FloatWithRect" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::BidiResolver" = type { %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"class.blink::InlineIterator", %"struct.blink::BidiStatus", i32, %"class.blink::InlineIterator", %"class.blink::InlineIterator", i8, %"class.blink::InlineIterator", i8, [7 x i8], %"class.blink::BidiRunList", %"class.blink::MidpointState", i32, %"class.WTF::Vector.2298", %"struct.blink::BidiRun"*, i8, i8, %"class.WTF::Vector.2303", %"class.WTF::HashMap.2308" }
%"struct.blink::BidiStatus" = type { i32, i32, i32, %class.scoped_refptr.1691 }
%"class.blink::MidpointState" = type <{ %"class.WTF::Vector.2293", i32, i32, i8, [7 x i8] }>
%"class.WTF::Vector.2293" = type { %"class.WTF::VectorBuffer.2294" }
%"class.WTF::VectorBuffer.2294" = type { %"class.WTF::VectorBufferBase.2295" }
%"class.WTF::VectorBufferBase.2295" = type { %"class.blink::InlineIterator"*, i32, i32 }
%"class.WTF::Vector.2298" = type { %"class.WTF::VectorBuffer.2299" }
%"class.WTF::VectorBuffer.2299" = type { %"class.WTF::VectorBufferBase.2300" }
%"class.WTF::VectorBufferBase.2300" = type { %"struct.blink::BidiIsolatedRun"*, i32, i32 }
%"struct.blink::BidiIsolatedRun" = type <{ %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem", %"struct.blink::BidiRun"*, i32, i8, [3 x i8] }>
%"class.WTF::Vector.2303" = type { %"class.WTF::VectorBuffer.2304" }
%"class.WTF::VectorBuffer.2304" = type { %"class.WTF::VectorBufferBase.2305", [64 x i8] }
%"class.WTF::VectorBufferBase.2305" = type { %"class.blink::BidiEmbedding"*, i32, i32 }
%"class.blink::BidiEmbedding" = type { i32, i32 }
%"class.WTF::HashMap.2308" = type { %"class.WTF::HashTable.2309" }
%"class.WTF::HashTable.2309" = type <{ %"struct.WTF::KeyValuePair.2312"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2312" = type { %"struct.blink::BidiRun"*, %"class.blink::MidpointState" }
%class.anon.2466 = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::LineWidth" = type <{ %"class.blink::LineLayoutBlockFlow", float, float, float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8], i32, [4 x i8] }>
%"class.blink::LineLayoutBlockFlow" = type { %"class.blink::LineLayoutBox" }
%"class.blink::LineLayoutBox" = type { %"class.blink::LineLayoutBoxModel" }
%"class.blink::LineLayoutBoxModel" = type { %"class.blink::LineLayoutItem" }
%"struct.blink::LayoutTextInfo" = type { %"class.blink::LineLayoutText", %"class.blink::LazyLineBreakIterator", %"class.blink::Font"* }
%"class.blink::LazyLineBreakIterator" = type <{ %"class.WTF::String", %"class.WTF::AtomicString", %"class.icu_69::BreakIterator"*, [2 x i16], [4 x i8], %"struct.blink::LazyLineBreakIterator::PriorContext", i32, i32, i32, [4 x i8] }>
%"class.icu_69::BreakIterator" = type <{ %"class.icu_69::UObject", [157 x i8], [157 x i8], [6 x i8] }>
%"class.icu_69::UObject" = type { i32 (...)** }
%"struct.blink::LazyLineBreakIterator::PriorContext" = type <{ i16*, i32, [4 x i8] }>
%"class.blink::LineBreaker" = type { %"class.blink::LineLayoutBlockFlow", i8, i32, %"class.WTF::Vector.2313" }
%"class.WTF::Vector.2313" = type { %"class.WTF::VectorBuffer.2314" }
%"class.WTF::VectorBuffer.2314" = type { %"class.WTF::VectorBufferBase.2315" }
%"class.WTF::VectorBufferBase.2315" = type { %"class.blink::LineLayoutBox"*, i32, i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"struct.blink::InlineMinMaxIterator" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, [7 x i8] }>
%"class.blink::LayoutListItem" = type <{ %"class.blink::LayoutBlockFlow", %"class.blink::ListItemOrdinal", i8, [7 x i8] }>
%"class.blink::ListItemOrdinal" = type <{ i32, i8, [3 x i8] }>
%"class.blink::InlineWalker" = type <{ %"class.blink::LineLayoutBlockFlow", %"class.blink::LineLayoutItem", i8, [7 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2438", %"class.blink::Member.2440", %"class.blink::Member.2442", %"class.blink::Member.2461", %"class.blink::Member.2463" }
%"class.blink::Member.2438" = type { %"class.blink::MemberBase.2439" }
%"class.blink::MemberBase.2439" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2440" = type { %"class.blink::MemberBase.2441" }
%"class.blink::MemberBase.2441" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2442" = type { %"class.blink::MemberBase.2443" }
%"class.blink::MemberBase.2443" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2446", %"class.blink::HeapHashSet.2455" }
%"class.blink::HeapVector.2446" = type { %"class.WTF::Vector.2449" }
%"class.WTF::Vector.2449" = type { %"class.WTF::VectorBuffer.2450" }
%"class.WTF::VectorBuffer.2450" = type { %"class.WTF::VectorBufferBase.2451" }
%"class.WTF::VectorBufferBase.2451" = type { %"class.blink::Member.2452"*, i32, i32 }
%"class.blink::Member.2452" = type { %"class.blink::MemberBase.2453" }
%"class.blink::MemberBase.2453" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2455" = type { %"class.WTF::HashSet.2458" }
%"class.WTF::HashSet.2458" = type { %"class.WTF::HashTable.2459" }
%"class.WTF::HashTable.2459" = type <{ %"class.blink::Member.2452"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::HeapHashSet.2465"* }
%"class.blink::HeapHashSet.2465" = type opaque
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.2431", %"class.blink::WeakMember.966", i32, [4 x i8], %"class.blink::HeapHashSet.1251", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.2432", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.2431" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.2432" = type { %"class.absl::optional_internal::optional_data.2433" }
%"class.absl::optional_internal::optional_data.2433" = type { %"class.absl::optional_internal::optional_data_base.2434" }
%"class.absl::optional_internal::optional_data_base.2434" = type { %"class.absl::optional_internal::optional_data_dtor_base.2435" }
%"class.absl::optional_internal::optional_data_dtor_base.2435" = type { i8, %union.anon.2436 }
%union.anon.2436 = type { %"class.blink::FloatSize" }
%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator" = type { %class.scoped_refptr.1625* }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.2319, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.2319 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.2320, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.2320 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.2321", %class.scoped_refptr.2323, i32, i32, i32, i32, float, i32, [0 x %struct.anon.2324] }
%"class.WTF::RefCounted.2321" = type { %"class.base::RefCounted.2322" }
%"class.base::RefCounted.2322" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2323 = type { %"class.blink::SimpleFontData"* }
%struct.anon.2324 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.2318 }
%union.anon.2318 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.WTF::Vector.2333" = type { %"class.WTF::VectorBuffer.2334" }
%"class.WTF::VectorBuffer.2334" = type { %"class.WTF::VectorBufferBase.2335" }
%"class.WTF::VectorBufferBase.2335" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.base::CheckedContiguousIterator.2339" = type { %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"* }
%"class.blink::IsolateTracker" = type { i32, i8, [3 x i8], %"class.blink::MidpointState", %"class.blink::BidiRunList"* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2479" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2467", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2467" = type { %"class.std::__1::__vector_base.2468" }
%"class.std::__1::__vector_base.2468" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2474" }
%"class.std::__1::__compressed_pair.2474" = type { %"struct.std::__1::__compressed_pair_elem.2475" }
%"struct.std::__1::__compressed_pair_elem.2475" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2469", i64, i64 }
%"class.std::__1::unique_ptr.2469" = type { %"class.std::__1::__compressed_pair.2470" }
%"class.std::__1::__compressed_pair.2470" = type { %"struct.std::__1::__compressed_pair_elem.2107" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::LineLayoutInline" = type { %"class.blink::LineLayoutBoxModel" }

$_ZN5blink22ExpansionOpportunities20AddRunWithExpansionsERNS_7BidiRunERbNS_11TextJustifyE = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZN5blink22ExpansionOpportunities33ComputeExpansionsForJustifiedTextEPNS_7BidiRunES2_RNS_10LayoutUnitES3_ = comdat any

$_ZN5blink13RootInlineBox11AppendFloatEPNS_9LayoutBoxE = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEED2Ev = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE = comdat any

$_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZN5blink12InlineWalker7AdvanceEv = comdat any

$_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv = comdat any

$_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv = comdat any

$_ZNK5blink15LayoutBlockFlow18StartOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotES1_ = comdat any

$_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE = comdat any

$_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_ = comdat any

$_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF12VectorBufferIjLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj = comdat any

$_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf = comdat any

$_ZN3WTF12CopyToVectorINS_7HashSetIPKN5blink14SimpleFontDataENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEENS_6VectorIS5_Lj0ESA_EEEEvRKT_RT0_ = comdat any

$_ZNK3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6insertINS_17HashMapTranslatorISO_SJ_SC_EEPS2_SF_EENS_18HashTableAddResultISP_SG_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6ExpandEPSG_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E8RehashToEPSG_jSQ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E16LookupForWritingERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink14SimpleFontDataEEEmm = comdat any

$_ZN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm = comdat any

$_ZN5blink11BidiContextD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_ = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE = comdat any

$_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE = comdat any

$_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm = comdat any

$_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE = comdat any

$_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_ = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE = comdat any

$_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv = comdat any

$_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_ = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15LayoutBlockFlow13FloatWithRectEEEmm = comdat any

@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/layout/layout_block_flow_line.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"resolver.GetPosition() == end_of_line\00", align 1
@_ZN5blink26layout_invalidation_reason23kFloatDescendantChangedE = external constant [0 x i8], align 1
@_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE15kFullStopString = internal constant [3 x i16] [i16 46, i16 46, i16 46], align 2
@_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str = internal global i64 0, align 8
@_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE = internal constant i16 8230, align 2
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink14SimpleFontDataEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::SimpleFontData *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENSt3__14pairINS_6VectorIPKNS2_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS2_13GlyphOverflowEEEEEEEPKcv = private unnamed_addr constant [206 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::InlineTextBox *, std::__1::pair<WTF::Vector<const blink::SimpleFontData *, 0, WTF::PartitionAllocator>, blink::GlyphOverflow> >]\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"opportunities_in_run <= total_opportunities_\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"total_opportunities_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<blink::LayoutBox *, 0, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBox *]\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InlineIteratorEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InlineIterator]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiIsolatedRun]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink7BidiRunENS2_13MidpointStateINS2_14InlineIteratorEEEEEEEPKcv = private unnamed_addr constant [129 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::BidiRun *, blink::MidpointState<blink::InlineIterator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BidiEmbedding]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.14 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.21 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.23 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15LayoutBlockFlow13FloatWithRectEEEPKcv = private unnamed_addr constant [85 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBlockFlow::FloatWithRect]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineFlowBox"* @_ZN5blink15LayoutBlockFlow15CreateLineBoxesENS_14LineLayoutItemERKNS_8LineInfoEPNS_9InlineBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LineInfo"* nocapture readonly dereferenceable(12), %"class.blink::InlineBox"*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = ptrtoint %"class.blink::LayoutBlockFlow"* %0 to i64
  %8 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  br label %11

11:                                               ; preds = %130, %4
  %12 = phi %"class.blink::LayoutObject"* [ %1, %4 ], [ %134, %130 ]
  %13 = phi %"class.blink::InlineFlowBox"* [ null, %4 ], [ %131, %130 ]
  %14 = phi i32 [ 1, %4 ], [ %17, %130 ]
  %15 = phi %"class.blink::InlineBox"* [ %3, %4 ], [ %132, %130 ]
  %16 = ptrtoint %"class.blink::LayoutObject"* %12 to i64
  %17 = add i32 %14, 1
  %18 = icmp ugt i32 %14, 199
  br i1 %18, label %30, label %19

19:                                               ; preds = %11
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, i64 92
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %5, i32 22) #13
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::LayoutObject"* %12 to i1 (%"class.blink::LayoutObject"*)***
  %26 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, i64 24
  %28 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %12) #13
  br i1 %29, label %30, label %31

30:                                               ; preds = %24, %11
  br label %31

31:                                               ; preds = %30, %24, %19
  %32 = phi i64 [ %7, %30 ], [ %16, %24 ], [ %16, %19 ]
  %33 = inttoptr i64 %32 to %"class.blink::LayoutObject"*
  %34 = inttoptr i64 %32 to i1 (%"class.blink::LayoutObject"*)***
  %35 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, i64 26
  %37 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %33) #13
  br i1 %38, label %39, label %57

39:                                               ; preds = %31
  %40 = inttoptr i64 %32 to %"class.blink::LayoutInline"*
  %41 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %40, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 268435456
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #13
  %48 = load i96, i96* %42, align 4
  br label %51

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.blink::LayoutInline", %"class.blink::LayoutInline"* %40, i64 0, i32 2, i32 0
  br label %51

51:                                               ; preds = %46, %49
  %52 = phi i96 [ %48, %46 ], [ %43, %49 ]
  %53 = phi %"class.blink::LineBoxList"* [ %47, %46 ], [ %50, %49 ]
  %54 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %53, i64 0, i32 0, i32 1
  %55 = and i96 %52, 70369012613120
  %56 = icmp eq i96 %55, 70368744177664
  br label %60

57:                                               ; preds = %31
  %58 = inttoptr i64 %32 to %"class.blink::LayoutBlockFlow"*
  %59 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %58, i64 0, i32 1, i32 0, i32 1
  br label %60

60:                                               ; preds = %57, %51
  %61 = phi i1 [ %56, %51 ], [ true, %57 ]
  %62 = phi %"class.blink::InlineFlowBox"** [ %54, %51 ], [ %59, %57 ]
  %63 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %62, align 8
  %64 = icmp eq %"class.blink::InlineFlowBox"* %63, null
  br i1 %64, label %79, label %65

65:                                               ; preds = %60, %75
  %66 = phi %"class.blink::InlineFlowBox"* [ %77, %75 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %66, i64 0, i32 0, i32 7, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %66, i64 0, i32 0, i32 1
  %73 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %72, align 8
  %74 = icmp eq %"class.blink::InlineBox"* %73, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %66, i64 0, i32 0, i32 3
  %77 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %76, align 8
  %78 = icmp eq %"class.blink::InlineFlowBox"* %77, null
  br i1 %78, label %118, label %65

79:                                               ; preds = %71, %65, %60
  br i1 %61, label %80, label %130

80:                                               ; preds = %79
  %81 = icmp eq %"class.blink::LayoutObject"* %5, %33
  br i1 %81, label %82, label %86

82:                                               ; preds = %80
  %83 = inttoptr i64 %32 to %"class.blink::LayoutBlockFlow"*
  %84 = tail call %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow28CreateAndAppendRootInlineBoxEv(%"class.blink::LayoutBlockFlow"* %83) #13
  %85 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %84, i64 0, i32 0, i32 0
  br label %103

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 4
  %88 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %87 to i96*
  %89 = load i96, i96* %88, align 4
  %90 = and i96 %89, 67108864
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %86
  %93 = inttoptr i64 %32 to %"class.blink::LayoutBox"*
  %94 = inttoptr i64 %32 to %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)***
  %95 = load %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)** %95, i64 158
  %97 = load %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)** %96, align 8
  %98 = tail call %"class.blink::InlineBox"* %97(%"class.blink::LayoutBox"* %93) #13
  br label %103

99:                                               ; preds = %86
  %100 = inttoptr i64 %32 to %"class.blink::LayoutInline"*
  %101 = tail call %"class.blink::InlineFlowBox"* @_ZN5blink12LayoutInline28CreateAndAppendInlineFlowBoxEv(%"class.blink::LayoutInline"* %100) #13
  %102 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %101, i64 0, i32 0
  br label %103

103:                                              ; preds = %99, %92, %82
  %104 = phi %"class.blink::InlineBox"* [ %85, %82 ], [ %98, %92 ], [ %102, %99 ]
  %105 = bitcast %"class.blink::InlineBox"* %104 to %"class.blink::InlineFlowBox"*
  %106 = load i8, i8* %8, align 4, !range !2
  %107 = zext i8 %106 to i32
  %108 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %104, i64 0, i32 7, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = and i32 %109, -2
  %111 = or i32 %110, %107
  store i32 %111, i32* %108, align 4
  %112 = load i96, i96* %10, align 4
  %113 = trunc i96 %112 to i32
  %114 = lshr i32 %113, 31
  %115 = shl nuw nsw i32 %114, 11
  %116 = and i32 %111, -2049
  %117 = or i32 %115, %116
  store i32 %117, i32* %108, align 4
  br label %118

118:                                              ; preds = %75, %103
  %119 = phi %"class.blink::InlineFlowBox"* [ %105, %103 ], [ %63, %75 ]
  %120 = phi i1 [ false, %103 ], [ true, %75 ]
  %121 = icmp eq %"class.blink::InlineFlowBox"* %13, null
  %122 = select i1 %121, %"class.blink::InlineFlowBox"* %119, %"class.blink::InlineFlowBox"* %13
  %123 = icmp eq %"class.blink::InlineBox"* %15, null
  br i1 %123, label %125, label %124

124:                                              ; preds = %118
  tail call void @_ZN5blink13InlineFlowBox9AddToLineEPNS_9InlineBoxE(%"class.blink::InlineFlowBox"* %119, %"class.blink::InlineBox"* nonnull %15) #13
  br label %125

125:                                              ; preds = %118, %124
  %126 = icmp eq %"class.blink::LayoutObject"* %5, %33
  %127 = or i1 %126, %120
  br i1 %127, label %135, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %119, i64 0, i32 0
  br label %130

130:                                              ; preds = %79, %128
  %131 = phi %"class.blink::InlineFlowBox"* [ %122, %128 ], [ %13, %79 ]
  %132 = phi %"class.blink::InlineBox"* [ %129, %128 ], [ %15, %79 ]
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %134 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  br label %11

135:                                              ; preds = %125
  ret %"class.blink::InlineFlowBox"* %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink13InlineFlowBox9AddToLineEPNS_9InlineBoxE(%"class.blink::InlineFlowBox"*, %"class.blink::InlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow13ConstructLineERNS_11BidiRunListINS_7BidiRunEEERKNS_8LineInfoE(%"class.blink::LayoutBlockFlow"*, %"class.blink::BidiRunList"* nocapture readonly dereferenceable(32), %"class.blink::LineInfo"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %6, %8
  %10 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 0
  %11 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %10, align 8
  %12 = icmp eq %"struct.blink::BidiRun"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %9, 1
  %15 = icmp eq i32 %9, 2
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br label %26

20:                                               ; preds = %232, %3
  %21 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %1, i64 0, i32 2
  %22 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %22, i64 0, i32 1, i32 0
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %295, label %238

26:                                               ; preds = %13, %232
  %27 = phi %"struct.blink::BidiRun"* [ %11, %13 ], [ %236, %232 ]
  %28 = phi %"class.blink::InlineFlowBox"* [ null, %13 ], [ %233, %232 ]
  br i1 %15, label %29, label %73

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 1, i32 0
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = bitcast %"class.blink::LayoutObject"* %31 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %31, i32 15) #13
  br i1 %36, label %73, label %37

37:                                               ; preds = %29
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %31, i32 13) #13
  br i1 %41, label %73, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %31, i32 36) #13
  br i1 %46, label %73, label %47

47:                                               ; preds = %42
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8
  %52 = and i160 %51, 41538374868278621028243970633760768
  %53 = icmp eq i160 %52, 0
  %54 = select i1 %53, %"struct.blink::BidiRun"** %10, %"struct.blink::BidiRun"** %17
  %55 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %54, align 8
  %56 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %55, i64 0, i32 1, i32 0
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = bitcast %"class.blink::LayoutObject"* %57 to i1 (%"class.blink::LayoutObject"*, i32)***
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %57, i32 15) #13
  br i1 %62, label %73, label %63

63:                                               ; preds = %47
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %58, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, i64 92
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::LayoutObject"* %57, i32 13) #13
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %58, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, i64 92
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.blink::LayoutObject"* %57, i32 36) #13
  br label %73

73:                                               ; preds = %29, %37, %68, %63, %47, %42, %26
  %74 = phi i1 [ %14, %42 ], [ %14, %26 ], [ true, %63 ], [ true, %47 ], [ %72, %68 ], [ %14, %37 ], [ %14, %29 ]
  %75 = load i8, i8* %18, align 2, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %232

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 1, i32 0
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 4
  %81 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %80 to i96*
  %82 = load i96, i96* %81, align 4
  %83 = and i96 %82, 33554432
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %158, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 0, i32 3
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 0, i32 4
  %89 = load i32, i32* %88, align 4
  %90 = sub nsw i32 %89, %87
  %91 = trunc i32 %90 to i16
  %92 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::LayoutText"*
  %93 = tail call %"class.blink::InlineTextBox"* @_ZN5blink10LayoutText19CreateInlineTextBoxEit(%"class.blink::LayoutText"* %92, i32 %87, i16 zeroext %91) #13
  %94 = bitcast %"class.blink::LayoutObject"* %79 to i1 (%"class.blink::LayoutObject"*, i32)***
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, i64 92
  %97 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* %79, i32 0) #13
  br i1 %98, label %102, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 0, i32 7, i32 0
  %101 = load i32, i32* %100, align 4
  br label %131

102:                                              ; preds = %85
  br i1 %74, label %125, label %103

103:                                              ; preds = %102
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 6, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %107, label %114

107:                                              ; preds = %103, %107
  %108 = phi %"class.blink::LayoutObject"* [ %110, %107 ], [ %79, %103 ]
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 6, i32 0, i32 0
  %112 = load %"class.blink::Node"*, %"class.blink::Node"** %111, align 8
  %113 = icmp eq %"class.blink::Node"* %112, null
  br i1 %113, label %107, label %114

114:                                              ; preds = %107, %103
  %115 = phi %"class.blink::Node"* [ %105, %103 ], [ %112, %107 ]
  %116 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %115, i64 0, i32 3, i32 0, i32 0
  %117 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %117, i64 0, i32 2, i32 0, i32 0
  %119 = load %"class.blink::Document"*, %"class.blink::Document"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %119, i64 0, i32 33
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 2
  %123 = zext i1 %122 to i32
  %124 = shl nuw nsw i32 %123, 17
  br label %125

125:                                              ; preds = %114, %102
  %126 = phi i32 [ 131072, %102 ], [ %124, %114 ]
  %127 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 0, i32 7, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, -131073
  %130 = or i32 %129, %126
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %125, %99
  %132 = phi i32 [ %101, %99 ], [ %130, %125 ]
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %79, i64 0, i32 5, i32 0
  %134 = bitcast %"class.blink::ComputedStyle"** %133 to %"class.blink::ComputedStyleBase"**
  %135 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %135, i64 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 0, i32 0
  %140 = load i8, i8* %139, align 8
  %141 = and i8 %140, 1
  %142 = zext i8 %141 to i32
  %143 = lshr i160 %138, 151
  %144 = trunc i160 %143 to i32
  %145 = and i32 %144, 1
  %146 = or i32 %145, %142
  %147 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 0, i32 7, i32 0
  %148 = shl nuw nsw i32 %146, 16
  %149 = and i32 %132, -65537
  %150 = or i32 %148, %149
  store i32 %150, i32* %147, align 4
  %151 = load i8, i8* %139, align 8
  %152 = and i8 %151, 2
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %131
  %155 = or i32 %150, 32768
  store i32 %155, i32* %147, align 4
  br label %156

156:                                              ; preds = %131, %154
  %157 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 0
  br label %172

158:                                              ; preds = %77
  %159 = and i96 %82, 67108864
  %160 = icmp eq i96 %159, 0
  br i1 %160, label %168, label %161

161:                                              ; preds = %158
  %162 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::LayoutBox"*
  %163 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)***
  %164 = load %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*** %163, align 8
  %165 = getelementptr inbounds %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)** %164, i64 158
  %166 = load %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)** %165, align 8
  %167 = tail call %"class.blink::InlineBox"* %166(%"class.blink::LayoutBox"* %162) #13
  br label %172

168:                                              ; preds = %158
  %169 = bitcast %"class.blink::LayoutObject"* %79 to %"class.blink::LayoutInline"*
  %170 = tail call %"class.blink::InlineFlowBox"* @_ZN5blink12LayoutInline28CreateAndAppendInlineFlowBoxEv(%"class.blink::LayoutInline"* %169) #13
  %171 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %170, i64 0, i32 0
  br label %172

172:                                              ; preds = %168, %161, %156
  %173 = phi %"class.blink::InlineBox"* [ %157, %156 ], [ %167, %161 ], [ %171, %168 ]
  %174 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 2
  store %"class.blink::InlineBox"* %173, %"class.blink::InlineBox"** %174, align 8
  %175 = icmp eq %"class.blink::InlineBox"* %173, null
  br i1 %175, label %232, label %176

176:                                              ; preds = %172
  %177 = icmp eq %"class.blink::InlineFlowBox"* %28, null
  br i1 %177, label %178, label %182

178:                                              ; preds = %176
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 7
  %181 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %180, align 8
  br label %189

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %28, i64 0, i32 0, i32 4, i32 0
  %184 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %183, align 8
  %185 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %186 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 0, i32 7
  %187 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %186, align 8
  %188 = icmp eq %"class.blink::LayoutObject"* %184, %187
  br i1 %188, label %192, label %189

189:                                              ; preds = %178, %182
  %190 = phi %"class.blink::LayoutObject"* [ %181, %178 ], [ %187, %182 ]
  %191 = tail call %"class.blink::InlineFlowBox"* @_ZN5blink15LayoutBlockFlow15CreateLineBoxesENS_14LineLayoutItemERKNS_8LineInfoEPNS_9InlineBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutObject"* %190, %"class.blink::LineInfo"* dereferenceable(12) %2, %"class.blink::InlineBox"* nonnull %173)
  br label %193

192:                                              ; preds = %182
  tail call void @_ZN5blink13InlineFlowBox9AddToLineEPNS_9InlineBoxE(%"class.blink::InlineFlowBox"* nonnull %28, %"class.blink::InlineBox"* nonnull %173) #13
  br label %193

193:                                              ; preds = %192, %189
  %194 = phi %"class.blink::InlineFlowBox"* [ %191, %189 ], [ %28, %192 ]
  %195 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 0, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %173, i64 0, i32 7, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = shl i8 %196, 2
  %200 = zext i8 %199 to i32
  %201 = and i32 %198, -253
  %202 = or i32 %201, %200
  store i32 %202, i32* %197, align 4
  %203 = bitcast %"class.blink::InlineBox"* %173 to i1 (%"class.blink::InlineBox"*)***
  %204 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %203, align 8
  %205 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %204, i64 15
  %206 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %205, align 8
  %207 = tail call zeroext i1 %206(%"class.blink::InlineBox"* nonnull %173) #13
  br i1 %207, label %208, label %232

208:                                              ; preds = %193
  %209 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %210 = icmp eq %"class.blink::Node"* %209, null
  br i1 %210, label %211, label %218

211:                                              ; preds = %208, %211
  %212 = phi %"class.blink::LayoutObject"* [ %214, %211 ], [ %4, %208 ]
  %213 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %212, i64 0, i32 7
  %214 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %214, i64 0, i32 6, i32 0, i32 0
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  %217 = icmp eq %"class.blink::Node"* %216, null
  br i1 %217, label %211, label %218

218:                                              ; preds = %211, %208
  %219 = phi %"class.blink::Node"* [ %209, %208 ], [ %216, %211 ]
  %220 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %219, i64 0, i32 3, i32 0, i32 0
  %221 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %221, i64 0, i32 2, i32 0, i32 0
  %223 = load %"class.blink::Document"*, %"class.blink::Document"** %222, align 8
  %224 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %223) #13
  %225 = icmp eq %"class.blink::AXObjectCache"* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %218
  %227 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %228 = bitcast %"class.blink::AXObjectCache"* %224 to void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)***
  %229 = load void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)** %229, i64 51
  %231 = load void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AXObjectCache"*, %"class.blink::LayoutObject"*)** %230, align 8
  tail call void %231(%"class.blink::AXObjectCache"* nonnull %224, %"class.blink::LayoutObject"* %227) #13
  br label %232

232:                                              ; preds = %73, %172, %226, %218, %193
  %233 = phi %"class.blink::InlineFlowBox"* [ %28, %73 ], [ %28, %172 ], [ %194, %226 ], [ %194, %218 ], [ %194, %193 ]
  %234 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %27, i64 0, i32 0, i32 2
  %235 = bitcast %"struct.blink::BidiCharacterRun"** %234 to %"struct.blink::BidiRun"**
  %236 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %235, align 8
  %237 = icmp eq %"struct.blink::BidiRun"* %236, null
  br i1 %237, label %20, label %26

238:                                              ; preds = %20
  %239 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %240 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %239 to i96*
  %241 = load i96, i96* %240, align 4
  %242 = and i96 %241, 33554432
  %243 = icmp eq i96 %242, 0
  br i1 %243, label %295, label %244

244:                                              ; preds = %238
  %245 = icmp eq %"struct.blink::BidiRun"* %22, null
  br i1 %245, label %295, label %246

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %22, i64 0, i32 0, i32 4
  %248 = load i32, i32* %247, align 4
  %249 = bitcast %"class.blink::LayoutObject"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %250 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %249, align 8
  %251 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %250, i64 92
  %252 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %251, align 8
  %253 = tail call zeroext i1 %252(%"class.blink::LayoutObject"* nonnull %24, i32 0) #13
  br i1 %253, label %295, label %254

254:                                              ; preds = %246
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 4
  %256 = bitcast i8* %255 to %"class.WTF::StringImpl"**
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %295, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 1
  %261 = load i32, i32* %260, align 4
  %262 = icmp ult i32 %248, %261
  br i1 %262, label %263, label %295

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %265 = load atomic i32, i32* %264 monotonic, align 4
  %266 = and i32 %265, 1
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 1
  br i1 %267, label %282, label %269

269:                                              ; preds = %263
  %270 = bitcast %"class.WTF::StringImpl"* %268 to i8*
  %271 = zext i32 %248 to i64
  br label %272

272:                                              ; preds = %278, %269
  %273 = phi i64 [ %279, %278 ], [ %271, %269 ]
  %274 = getelementptr inbounds i8, i8* %270, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = icmp ult i8 %275, 33
  br i1 %276, label %277, label %295

277:                                              ; preds = %272
  switch i8 %275, label %295 [
    i8 32, label %278
    i8 13, label %278
    i8 12, label %278
    i8 11, label %278
    i8 10, label %278
    i8 9, label %278
  ]

278:                                              ; preds = %277, %277, %277, %277, %277, %277
  %279 = add nuw nsw i64 %273, 1
  %280 = trunc i64 %279 to i32
  %281 = icmp eq i32 %261, %280
  br i1 %281, label %295, label %272

282:                                              ; preds = %263
  %283 = bitcast %"class.WTF::StringImpl"* %268 to i16*
  %284 = zext i32 %248 to i64
  br label %285

285:                                              ; preds = %291, %282
  %286 = phi i64 [ %292, %291 ], [ %284, %282 ]
  %287 = getelementptr inbounds i16, i16* %283, i64 %286
  %288 = load i16, i16* %287, align 2
  %289 = icmp ult i16 %288, 33
  br i1 %289, label %290, label %295

290:                                              ; preds = %285
  switch i16 %288, label %295 [
    i16 32, label %291
    i16 13, label %291
    i16 12, label %291
    i16 11, label %291
    i16 10, label %291
    i16 9, label %291
  ]

291:                                              ; preds = %290, %290, %290, %290, %290, %290
  %292 = add nuw nsw i64 %286, 1
  %293 = trunc i64 %292 to i32
  %294 = icmp eq i32 %261, %293
  br i1 %294, label %295, label %285

295:                                              ; preds = %278, %277, %272, %291, %290, %285, %259, %254, %246, %244, %238, %20
  %296 = phi i1 [ true, %238 ], [ true, %20 ], [ false, %244 ], [ true, %246 ], [ false, %259 ], [ false, %254 ], [ false, %291 ], [ true, %285 ], [ true, %290 ], [ false, %278 ], [ true, %272 ], [ true, %277 ]
  %297 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %298 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 1
  %300 = load i8, i8* %299, align 1, !range !2
  %301 = icmp ne i8 %300, 0
  %302 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %21, align 8
  %303 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %302, i64 0, i32 1, i32 0
  %304 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %303, align 8
  tail call void @_ZN5blink13InlineFlowBox28DetermineSpacingForFlowBoxesEbbNS_14LineLayoutItemE(%"class.blink::InlineFlowBox"* %298, i1 zeroext %301, i1 zeroext %296, %"class.blink::LayoutObject"* %304) #13
  %305 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %297, align 8
  %306 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %305, i64 0, i32 0, i32 7, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = or i32 %307, 2
  store i32 %308, i32* %306, align 4
  %309 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %305, i64 0, i32 2
  %310 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %309, align 8
  %311 = icmp eq %"class.blink::InlineBox"* %310, null
  br i1 %311, label %321, label %312

312:                                              ; preds = %295, %312
  %313 = phi %"class.blink::InlineBox"* [ %319, %312 ], [ %310, %295 ]
  %314 = bitcast %"class.blink::InlineBox"* %313 to void (%"class.blink::InlineBox"*)***
  %315 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %315, i64 21
  %317 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %316, align 8
  tail call void %317(%"class.blink::InlineBox"* nonnull %313) #13
  %318 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %313, i64 0, i32 1
  %319 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %318, align 8
  %320 = icmp eq %"class.blink::InlineBox"* %319, null
  br i1 %320, label %321, label %312

321:                                              ; preds = %312, %295
  %322 = bitcast %"class.blink::InlineFlowBox"** %297 to %"class.blink::RootInlineBox"**
  %323 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %322, align 8
  ret %"class.blink::RootInlineBox"* %323
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink13InlineFlowBox28DetermineSpacingForFlowBoxesEbbNS_14LineLayoutItemE(%"class.blink::InlineFlowBox"*, i1 zeroext, i1 zeroext, %"class.blink::LayoutObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = xor i1 %1, true
  %6 = tail call i32 @_ZNK5blink13ComputedStyle12GetTextAlignEb(%"class.blink::ComputedStyle"* %4, i1 zeroext %5) #13
  ret i32 %6
}

declare i32 @_ZNK5blink13ComputedStyle12GetTextAlignEb(%"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20SetMarginsForRubyRunEPNS_7BidiRunEPNS_13LayoutRubyRunEPNS_12LayoutObjectERKNS_8LineInfoE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"struct.blink::BidiRun"* nocapture readonly, %"class.blink::LayoutRubyRun"*, %"class.blink::LayoutObject"*, %"class.blink::LineInfo"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %6, align 4
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %7, align 4
  %10 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 0, i32 2
  %11 = bitcast %"struct.blink::BidiCharacterRun"** %10 to %"struct.blink::BidiRun"**
  %12 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %11, align 8
  %13 = icmp eq %"struct.blink::BidiRun"* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %5, %34
  %15 = phi %"struct.blink::BidiRun"* [ %37, %34 ], [ %12, %5 ]
  %16 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %15, i64 0, i32 1, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 113336795588871485128704
  %22 = icmp eq i96 %21, 75557863725914323419136
  br i1 %22, label %34, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %15, i64 0, i32 2
  %25 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %24, align 8
  %26 = bitcast %"class.blink::InlineBox"* %25 to i1 (%"class.blink::InlineBox"*)***
  %27 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %27, i64 9
  %29 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::InlineBox"* %25) #13
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %15, i64 0, i32 1, i32 0
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  br label %39

34:                                               ; preds = %14, %23
  %35 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %15, i64 0, i32 0, i32 2
  %36 = bitcast %"struct.blink::BidiCharacterRun"** %35 to %"struct.blink::BidiRun"**
  %37 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %36, align 8
  %38 = icmp eq %"struct.blink::BidiRun"* %37, null
  br i1 %38, label %39, label %14

39:                                               ; preds = %34, %5, %31
  %40 = phi %"class.blink::LayoutObject"* [ %33, %31 ], [ null, %5 ], [ null, %34 ]
  %41 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = getelementptr inbounds %"class.blink::LayoutRubyRun", %"class.blink::LayoutRubyRun"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 41538374868278621028243970633760768
  %50 = icmp eq i160 %49, 0
  %51 = select i1 %50, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %40
  %52 = select i1 %50, %"class.blink::LayoutObject"* %40, %"class.blink::LayoutObject"* %3
  call void @_ZNK5blink13LayoutRubyRun11GetOverhangEbPNS_12LayoutObjectES2_RiS3_(%"class.blink::LayoutRubyRun"* %2, i1 zeroext %43, %"class.blink::LayoutObject"* %51, %"class.blink::LayoutObject"* %52, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %7) #13
  %53 = load i32, i32* %6, align 4
  %54 = icmp slt i32 %53, -33554431
  br i1 %54, label %60, label %55

55:                                               ; preds = %39
  %56 = icmp sgt i32 %53, 33554432
  %57 = shl i32 %53, 6
  %58 = sub i32 0, %57
  %59 = select i1 %56, i32 -2147483648, i32 %58
  br label %60

60:                                               ; preds = %55, %39
  %61 = phi i32 [ 2147483647, %39 ], [ %59, %55 ]
  %62 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyle"* %63, null
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %66 = select i1 %64, %"class.blink::ComputedStyle"* %65, %"class.blink::ComputedStyle"* %63
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8, !noalias !3
  %70 = bitcast %"class.blink::LayoutRubyRun"* %2 to i8*
  %71 = and i160 %69, 15211807202738752817960438464512
  %72 = icmp eq i160 %71, 0
  %73 = and i160 %69, 41538374868278621028243970633760768
  %74 = icmp eq i160 %73, 0
  %75 = select i1 %74, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %76 = select i1 %74, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %77 = select i1 %72, { i64, i64 } %76, { i64, i64 } %75
  %78 = select i1 %72, { i64, i64 } %76, { i64, i64 } %75
  %79 = extractvalue { i64, i64 } %77, 0
  %80 = extractvalue { i64, i64 } %78, 1
  %81 = getelementptr inbounds i8, i8* %70, i64 %80
  %82 = bitcast i8* %81 to %"class.blink::LayoutBox"*
  %83 = and i64 %79, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %92, label %85

85:                                               ; preds = %60
  %86 = bitcast i8* %81 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = add i64 %79, -1
  %89 = getelementptr i8, i8* %87, i64 %88
  %90 = bitcast i8* %89 to void (%"class.blink::LayoutBox"*, i32)**
  %91 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %90, align 8
  br label %94

92:                                               ; preds = %60
  %93 = inttoptr i64 %79 to void (%"class.blink::LayoutBox"*, i32)*
  br label %94

94:                                               ; preds = %85, %92
  %95 = phi void (%"class.blink::LayoutBox"*, i32)* [ %91, %85 ], [ %93, %92 ]
  call void %95(%"class.blink::LayoutBox"* %82, i32 %61) #13
  %96 = load i32, i32* %7, align 4
  %97 = icmp slt i32 %96, -33554431
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = icmp sgt i32 %96, 33554432
  %100 = shl i32 %96, 6
  %101 = sub i32 0, %100
  %102 = select i1 %99, i32 -2147483648, i32 %101
  br label %103

103:                                              ; preds = %98, %94
  %104 = phi i32 [ 2147483647, %94 ], [ %102, %98 ]
  %105 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %62, align 8
  %106 = icmp eq %"class.blink::ComputedStyle"* %105, null
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %44, align 8
  %108 = select i1 %106, %"class.blink::ComputedStyle"* %107, %"class.blink::ComputedStyle"* %105
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8, !noalias !6
  %112 = and i160 %111, 15211807202738752817960438464512
  %113 = icmp eq i160 %112, 0
  %114 = and i160 %111, 41538374868278621028243970633760768
  %115 = icmp eq i160 %114, 0
  %116 = select i1 %115, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %117 = select i1 %115, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %118 = select i1 %113, { i64, i64 } %117, { i64, i64 } %116
  %119 = select i1 %113, { i64, i64 } %117, { i64, i64 } %116
  %120 = extractvalue { i64, i64 } %118, 0
  %121 = extractvalue { i64, i64 } %119, 1
  %122 = getelementptr inbounds i8, i8* %70, i64 %121
  %123 = bitcast i8* %122 to %"class.blink::LayoutBox"*
  %124 = and i64 %120, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %133, label %126

126:                                              ; preds = %103
  %127 = bitcast i8* %122 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = add i64 %120, -1
  %130 = getelementptr i8, i8* %128, i64 %129
  %131 = bitcast i8* %130 to void (%"class.blink::LayoutBox"*, i32)**
  %132 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %131, align 8
  br label %135

133:                                              ; preds = %103
  %134 = inttoptr i64 %120 to void (%"class.blink::LayoutBox"*, i32)*
  br label %135

135:                                              ; preds = %126, %133
  %136 = phi void (%"class.blink::LayoutBox"*, i32)* [ %132, %126 ], [ %134, %133 ]
  call void %136(%"class.blink::LayoutBox"* %123, i32 %104) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare void @_ZNK5blink13LayoutRubyRun11GetOverhangEbPNS_12LayoutObjectES2_RiS3_(%"class.blink::LayoutRubyRun"*, i1 zeroext, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow30UpdateLogicalWidthForAlignmentERKNS_10ETextAlignEPKNS_13RootInlineBoxEPNS_7BidiRunERNS_10LayoutUnitESA_SA_j(%"class.blink::LayoutBlockFlow"*, i32* nocapture readonly dereferenceable(4), %"class.blink::RootInlineBox"* readonly, %"struct.blink::BidiRun"* readonly, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), i32) local_unnamed_addr #0 align 2 {
  %9 = icmp eq %"class.blink::RootInlineBox"* %2, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %2, i64 0, i32 0, i32 0, i32 4, i32 0
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 541598767187353870268366848
  %20 = icmp eq i160 %19, 309485009821345068724781056
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %2, i64 0, i32 0, i32 0, i32 7, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = lshr i32 %23, 2
  %25 = trunc i32 %24 to i8
  br label %35

26:                                               ; preds = %8, %10
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %28 = bitcast %"class.blink::ComputedStyle"** %27 to %"class.blink::ComputedStyleBase"**
  %29 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = lshr i160 %32, 115
  %34 = trunc i160 %33 to i8
  br label %35

35:                                               ; preds = %26, %21
  %36 = phi i8 [ %25, %21 ], [ %34, %26 ]
  %37 = and i8 %36, 1
  %38 = load i32, i32* %1, align 4
  switch i32 %38, label %418 [
    i32 0, label %39
    i32 4, label %39
    i32 1, label %107
    i32 5, label %107
    i32 2, label %117
    i32 6, label %117
    i32 3, label %248
    i32 7, label %272
    i32 8, label %345
  ]

39:                                               ; preds = %35, %35
  %40 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = and i160 %44, 41538374868278621028243970633760768
  %46 = icmp eq i160 %45, 0
  %47 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %46, label %51, label %74

51:                                               ; preds = %39
  %52 = icmp sgt i32 %48, %50
  %53 = icmp ne %"struct.blink::BidiRun"* %3, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %418

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %57 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %57, i64 0, i32 6, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %48, -1
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %48) #13
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !9
  %66 = icmp slt i32 %50, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %50) #13
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !9
  %72 = icmp sgt i32 %71, 0
  %73 = select i1 %72, i32 %71, i32 0
  store i32 %73, i32* %58, align 8
  br label %418

74:                                               ; preds = %39
  %75 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 1, i32 0
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 5, i32 0
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 286720
  %85 = icmp eq i160 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %88 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %88, i64 0, i32 6, i32 0
  store i32 0, i32* %89, align 8
  br label %418

90:                                               ; preds = %76, %74
  %91 = icmp sgt i32 %48, %50
  br i1 %91, label %92, label %418

92:                                               ; preds = %90
  %93 = icmp sgt i32 %50, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %50) #13
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !9
  %99 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %98, -1
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %98) #13
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !9
  store i32 %106, i32* %99, align 4
  br label %418

107:                                              ; preds = %35, %35
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 9
  %111 = bitcast [20 x i8]* %110 to i160*
  %112 = load i160, i160* %111, align 8
  %113 = and i160 %112, 41538374868278621028243970633760768
  %114 = icmp eq i160 %113, 0
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  tail call fastcc void @_ZN5blinkL38UpdateLogicalWidthForRightAlignedBlockEbPNS_7BidiRunERNS_10LayoutUnitES3_S2_(i1 zeroext %114, %"struct.blink::BidiRun"* %3, %"class.blink::LayoutUnit"* dereferenceable(4) %4, %"class.blink::LayoutUnit"* dereferenceable(4) %5, i32 %116)
  br label %418

117:                                              ; preds = %35, %35
  %118 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %119, i64 0, i32 0, i32 9
  %121 = bitcast [20 x i8]* %120 to i160*
  %122 = load i160, i160* %121, align 8
  %123 = and i160 %122, 41538374868278621028243970633760768
  %124 = icmp eq i160 %123, 0
  %125 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %127, label %182, label %128

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 1, i32 0
  %130 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 0, i32 5, i32 0
  %132 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8
  %136 = and i160 %135, 286720
  %137 = icmp eq i160 %136, 0
  br i1 %137, label %138, label %182

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %140 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %140, i64 0, i32 6, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %142, -1
  %146 = select i1 %145, i32 -2147483648, i32 2147483647
  %147 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %144, i32 %142) #13
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !9
  store i32 %150, i32* %143, align 4
  %151 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %139, align 8
  %152 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %151, i64 0, i32 6, i32 0
  %153 = load i32, i32* %152, align 8
  %154 = icmp sgt i32 %150, -1
  %155 = select i1 %154, i32 -2147483648, i32 2147483647
  %156 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %150) #13
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !9
  %160 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %159, i32 64) #13
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = sdiv i32 %162, 2
  %164 = sext i32 %163 to i64
  %165 = select i1 %161, i64 1073741823, i64 %164, !prof !9
  %166 = tail call i1 @llvm.is.constant.i64(i64 %165) #13
  br i1 %166, label %174, label %167

167:                                              ; preds = %138
  %168 = icmp slt i64 %165, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = add nsw i64 %165, 2147483648
  %171 = icmp ult i64 %170, 4294967296
  %172 = trunc i64 %165 to i32
  %173 = select i1 %171, i32 %172, i32 %169, !prof !10
  br label %176

174:                                              ; preds = %138
  %175 = trunc i64 %165 to i32
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %173, %167 ], [ %175, %174 ]
  %178 = icmp slt i32 %177, %153
  %179 = select i1 %178, i32 %177, i32 %153
  %180 = icmp sgt i32 %179, 0
  %181 = select i1 %180, i32 %179, i32 0
  store i32 %181, i32* %152, align 8
  br label %182

182:                                              ; preds = %176, %128, %117
  %183 = phi i32 [ 0, %117 ], [ %179, %176 ], [ 0, %128 ]
  %184 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %124, label %186, label %212

186:                                              ; preds = %182
  %187 = icmp sgt i32 %185, -1
  %188 = select i1 %187, i32 -2147483648, i32 2147483647
  %189 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %185) #13
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %188, i32 %191, !prof !9
  %193 = sdiv i32 %192, 2
  %194 = sext i32 %193 to i64
  %195 = tail call i1 @llvm.is.constant.i64(i64 %194) #13
  br i1 %195, label %202, label %196

196:                                              ; preds = %186
  %197 = icmp slt i32 %192, -1
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = add nsw i64 %194, 2147483648
  %200 = icmp ult i64 %199, 4294967296
  %201 = select i1 %200, i32 %193, i32 %198, !prof !10
  br label %202

202:                                              ; preds = %196, %186
  %203 = phi i32 [ %201, %196 ], [ %193, %186 ]
  %204 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = icmp sgt i32 %203, 0
  %207 = select i1 %206, i32 %203, i32 0
  %208 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %205, i32 %207) #13
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 2147483647, i32 %210, !prof !9
  store i32 %211, i32* %204, align 4
  br label %418

212:                                              ; preds = %182
  %213 = icmp sgt i32 %185, %126
  %214 = icmp sgt i32 %185, -1
  %215 = select i1 %214, i32 -2147483648, i32 2147483647
  %216 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %185) #13
  %217 = extractvalue { i32, i1 } %216, 1
  %218 = extractvalue { i32, i1 } %216, 0
  %219 = select i1 %217, i32 %215, i32 %218, !prof !9
  br i1 %213, label %238, label %220

220:                                              ; preds = %212
  %221 = sdiv i32 %219, 2
  %222 = sext i32 %221 to i64
  %223 = tail call i1 @llvm.is.constant.i64(i64 %222) #13
  br i1 %223, label %230, label %224

224:                                              ; preds = %220
  %225 = icmp slt i32 %219, -1
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = add nsw i64 %222, 2147483648
  %228 = icmp ult i64 %227, 4294967296
  %229 = select i1 %228, i32 %221, i32 %226, !prof !10
  br label %230

230:                                              ; preds = %224, %220
  %231 = phi i32 [ %229, %224 ], [ %221, %220 ]
  %232 = icmp sgt i32 %183, -1
  %233 = select i1 %232, i32 -2147483648, i32 2147483647
  %234 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %231, i32 %183) #13
  %235 = extractvalue { i32, i1 } %234, 1
  %236 = extractvalue { i32, i1 } %234, 0
  %237 = select i1 %235, i32 %233, i32 %236, !prof !9
  br label %238

238:                                              ; preds = %230, %212
  %239 = phi i32 [ %237, %230 ], [ %219, %212 ]
  %240 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp slt i32 %239, 0
  %243 = select i1 %242, i32 -2147483648, i32 2147483647
  %244 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %241, i32 %239) #13
  %245 = extractvalue { i32, i1 } %244, 1
  %246 = extractvalue { i32, i1 } %244, 0
  %247 = select i1 %245, i32 %243, i32 %246, !prof !9
  store i32 %247, i32* %240, align 4
  br label %418

248:                                              ; preds = %35
  %249 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %250 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)***
  %251 = load void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)**, void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*** %250, align 8
  %252 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %251, i64 203
  %253 = load void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)*, void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)** %252, align 8
  tail call void %253(%"class.blink::LayoutBlock"* %249, i32 %7, %"class.blink::LayoutUnit"* dereferenceable(4) %4, %"class.blink::LayoutUnit"* dereferenceable(4) %6) #13
  %254 = icmp eq i32 %7, 0
  br i1 %254, label %272, label %255

255:                                              ; preds = %248
  %256 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %256, label %418, label %257

257:                                              ; preds = %255
  %258 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %259 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %259, i64 0, i32 6, i32 0
  %261 = load i32, i32* %260, align 8
  %262 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  %264 = icmp sgt i32 %261, -1
  %265 = select i1 %264, i32 -2147483648, i32 2147483647
  %266 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %263, i32 %261) #13
  %267 = extractvalue { i32, i1 } %266, 1
  %268 = extractvalue { i32, i1 } %266, 0
  %269 = select i1 %267, i32 %265, i32 %268, !prof !9
  store i32 %269, i32* %262, align 4
  %270 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %258, align 8
  %271 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %270, i64 0, i32 6, i32 0
  store i32 0, i32* %271, align 8
  br label %418

272:                                              ; preds = %248, %35
  %273 = icmp eq i8 %37, 0
  %274 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %275 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %275, i64 0, i32 0, i32 9
  %277 = bitcast [20 x i8]* %276 to i160*
  %278 = load i160, i160* %277, align 8
  %279 = and i160 %278, 41538374868278621028243970633760768
  %280 = icmp eq i160 %279, 0
  br i1 %273, label %281, label %342

281:                                              ; preds = %272
  %282 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %280, label %286, label %309

286:                                              ; preds = %281
  %287 = icmp sgt i32 %283, %285
  %288 = icmp ne %"struct.blink::BidiRun"* %3, null
  %289 = and i1 %288, %287
  br i1 %289, label %290, label %418

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %292 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %292, i64 0, i32 6, i32 0
  %294 = load i32, i32* %293, align 8
  %295 = icmp sgt i32 %283, -1
  %296 = select i1 %295, i32 -2147483648, i32 2147483647
  %297 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %294, i32 %283) #13
  %298 = extractvalue { i32, i1 } %297, 1
  %299 = extractvalue { i32, i1 } %297, 0
  %300 = select i1 %298, i32 %296, i32 %299, !prof !9
  %301 = icmp slt i32 %285, 0
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %300, i32 %285) #13
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !9
  %307 = icmp sgt i32 %306, 0
  %308 = select i1 %307, i32 %306, i32 0
  store i32 %308, i32* %293, align 8
  br label %418

309:                                              ; preds = %281
  %310 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %310, label %325, label %311

311:                                              ; preds = %309
  %312 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 1, i32 0
  %313 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %313, i64 0, i32 5, i32 0
  %315 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %315, i64 0, i32 0, i32 9
  %317 = bitcast [20 x i8]* %316 to i160*
  %318 = load i160, i160* %317, align 8
  %319 = and i160 %318, 286720
  %320 = icmp eq i160 %319, 0
  br i1 %320, label %321, label %325

321:                                              ; preds = %311
  %322 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %323 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %323, i64 0, i32 6, i32 0
  store i32 0, i32* %324, align 8
  br label %418

325:                                              ; preds = %311, %309
  %326 = icmp sgt i32 %283, %285
  br i1 %326, label %327, label %418

327:                                              ; preds = %325
  %328 = icmp sgt i32 %285, -1
  %329 = select i1 %328, i32 -2147483648, i32 2147483647
  %330 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %283, i32 %285) #13
  %331 = extractvalue { i32, i1 } %330, 1
  %332 = extractvalue { i32, i1 } %330, 0
  %333 = select i1 %331, i32 %329, i32 %332, !prof !9
  %334 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = icmp sgt i32 %333, -1
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  %338 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %335, i32 %333) #13
  %339 = extractvalue { i32, i1 } %338, 1
  %340 = extractvalue { i32, i1 } %338, 0
  %341 = select i1 %339, i32 %337, i32 %340, !prof !9
  store i32 %341, i32* %334, align 4
  br label %418

342:                                              ; preds = %272
  %343 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  tail call fastcc void @_ZN5blinkL38UpdateLogicalWidthForRightAlignedBlockEbPNS_7BidiRunERNS_10LayoutUnitES3_S2_(i1 zeroext %280, %"struct.blink::BidiRun"* %3, %"class.blink::LayoutUnit"* dereferenceable(4) %4, %"class.blink::LayoutUnit"* dereferenceable(4) %5, i32 %344)
  br label %418

345:                                              ; preds = %35
  %346 = icmp eq i8 %37, 0
  %347 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %348 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %347, align 8
  %349 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %348, i64 0, i32 0, i32 9
  %350 = bitcast [20 x i8]* %349 to i160*
  %351 = load i160, i160* %350, align 8
  %352 = and i160 %351, 41538374868278621028243970633760768
  %353 = icmp eq i160 %352, 0
  br i1 %346, label %354, label %357

354:                                              ; preds = %345
  %355 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  tail call fastcc void @_ZN5blinkL38UpdateLogicalWidthForRightAlignedBlockEbPNS_7BidiRunERNS_10LayoutUnitES3_S2_(i1 zeroext %353, %"struct.blink::BidiRun"* %3, %"class.blink::LayoutUnit"* dereferenceable(4) %4, %"class.blink::LayoutUnit"* dereferenceable(4) %5, i32 %356)
  br label %418

357:                                              ; preds = %345
  %358 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  %360 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %353, label %362, label %385

362:                                              ; preds = %357
  %363 = icmp sgt i32 %359, %361
  %364 = icmp ne %"struct.blink::BidiRun"* %3, null
  %365 = and i1 %364, %363
  br i1 %365, label %366, label %418

366:                                              ; preds = %362
  %367 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %368 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %368, i64 0, i32 6, i32 0
  %370 = load i32, i32* %369, align 8
  %371 = icmp sgt i32 %359, -1
  %372 = select i1 %371, i32 -2147483648, i32 2147483647
  %373 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %370, i32 %359) #13
  %374 = extractvalue { i32, i1 } %373, 1
  %375 = extractvalue { i32, i1 } %373, 0
  %376 = select i1 %374, i32 %372, i32 %375, !prof !9
  %377 = icmp slt i32 %361, 0
  %378 = select i1 %377, i32 -2147483648, i32 2147483647
  %379 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %376, i32 %361) #13
  %380 = extractvalue { i32, i1 } %379, 1
  %381 = extractvalue { i32, i1 } %379, 0
  %382 = select i1 %380, i32 %378, i32 %381, !prof !9
  %383 = icmp sgt i32 %382, 0
  %384 = select i1 %383, i32 %382, i32 0
  store i32 %384, i32* %369, align 8
  br label %418

385:                                              ; preds = %357
  %386 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %386, label %401, label %387

387:                                              ; preds = %385
  %388 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 1, i32 0
  %389 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %389, i64 0, i32 5, i32 0
  %391 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %390, align 8
  %392 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %391, i64 0, i32 0, i32 9
  %393 = bitcast [20 x i8]* %392 to i160*
  %394 = load i160, i160* %393, align 8
  %395 = and i160 %394, 286720
  %396 = icmp eq i160 %395, 0
  br i1 %396, label %397, label %401

397:                                              ; preds = %387
  %398 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 2
  %399 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %398, align 8
  %400 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %399, i64 0, i32 6, i32 0
  store i32 0, i32* %400, align 8
  br label %418

401:                                              ; preds = %387, %385
  %402 = icmp sgt i32 %359, %361
  br i1 %402, label %403, label %418

403:                                              ; preds = %401
  %404 = icmp sgt i32 %361, -1
  %405 = select i1 %404, i32 -2147483648, i32 2147483647
  %406 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %359, i32 %361) #13
  %407 = extractvalue { i32, i1 } %406, 1
  %408 = extractvalue { i32, i1 } %406, 0
  %409 = select i1 %407, i32 %405, i32 %408, !prof !9
  %410 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = icmp sgt i32 %409, -1
  %413 = select i1 %412, i32 -2147483648, i32 2147483647
  %414 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %411, i32 %409) #13
  %415 = extractvalue { i32, i1 } %414, 1
  %416 = extractvalue { i32, i1 } %414, 0
  %417 = select i1 %415, i32 %413, i32 %416, !prof !9
  store i32 %417, i32* %410, align 4
  br label %418

418:                                              ; preds = %403, %401, %397, %366, %362, %327, %325, %321, %290, %286, %238, %202, %92, %90, %86, %55, %51, %255, %354, %342, %257, %35, %107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL38UpdateLogicalWidthForRightAlignedBlockEbPNS_7BidiRunERNS_10LayoutUnitES3_S2_(i1 zeroext, %"struct.blink::BidiRun"* readonly, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), i32) unnamed_addr #0 {
  br i1 %0, label %6, label %49

6:                                                ; preds = %5
  %7 = icmp eq %"struct.blink::BidiRun"* %1, null
  br i1 %7, label %33, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 1, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 286720
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %18, label %33

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 2
  %20 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %20, i64 0, i32 6, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %22, -1
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %22) #13
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !9
  store i32 %30, i32* %23, align 4
  %31 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %19, align 8
  %32 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %31, i64 0, i32 6, i32 0
  store i32 0, i32* %32, align 8
  br label %33

33:                                               ; preds = %6, %18, %8
  %34 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, %4
  br i1 %36, label %37, label %100

37:                                               ; preds = %33
  %38 = icmp sgt i32 %35, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %35) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !9
  %44 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %43, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %43) #13
  br label %93

49:                                               ; preds = %5
  %50 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %4
  %53 = icmp ne %"struct.blink::BidiRun"* %1, null
  %54 = and i1 %53, %52
  br i1 %54, label %55, label %81

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 2
  %57 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %57, i64 0, i32 6, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp sgt i32 %51, -1
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %51) #13
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !9
  %66 = icmp slt i32 %4, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %4) #13
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !9
  %72 = icmp sgt i32 %71, 0
  %73 = select i1 %72, i32 %71, i32 0
  store i32 %73, i32* %58, align 8
  %74 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %56, align 8
  %75 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %74, i64 0, i32 6, i32 0
  %76 = load i32, i32* %75, align 8
  %77 = load i32, i32* %50, align 4
  %78 = icmp sgt i32 %76, -1
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %76) #13
  br label %93

81:                                               ; preds = %49
  %82 = icmp sgt i32 %51, -1
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %51) #13
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !9
  %88 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %87, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %87) #13
  br label %93

93:                                               ; preds = %55, %81, %37
  %94 = phi { i32, i1 } [ %48, %37 ], [ %92, %81 ], [ %80, %55 ]
  %95 = phi i32 [ %47, %37 ], [ %91, %81 ], [ %79, %55 ]
  %96 = phi i32* [ %44, %37 ], [ %88, %81 ], [ %50, %55 ]
  %97 = extractvalue { i32, i1 } %94, 1
  %98 = extractvalue { i32, i1 } %94, 0
  %99 = select i1 %97, i32 %95, i32 %98
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %93, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow28CanContainFirstFormattedLineEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %41, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 31
  switch i32 %16, label %41 [
    i32 1, label %17
    i32 14, label %17
  ]

17:                                               ; preds = %8, %8
  %18 = and i160 %13, 2113929216
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %41

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %22 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, i64 23
  %24 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %2) #13
  br i1 %25, label %26, label %41

26:                                               ; preds = %20
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 25
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %2) #13
  br i1 %30, label %41, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 20) #13
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br label %41

41:                                               ; preds = %31, %8, %1, %17, %20, %26, %37
  %42 = phi i1 [ true, %31 ], [ %40, %37 ], [ true, %26 ], [ true, %20 ], [ true, %17 ], [ true, %1 ], [ true, %8 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow38ComputeInlineDirectionPositionsForLineEPNS_13RootInlineBoxERKNS_8LineInfoEPNS_7BidiRunES7_bRN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS8_6VectorIPKNS_14SimpleFontDataELj0ENS8_18PartitionAllocatorEEENS_13GlyphOverflowEEENS8_7PtrHashISB_EENS8_10HashTraitsISC_EENSP_ISM_EESJ_EERNS_21VerticalPositionCacheERKNSF_INS_15WordMeasurementELj64ESJ_EE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"*, %"class.blink::LineInfo"* nocapture readonly dereferenceable(12), %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, i1 zeroext, %"class.WTF::HashMap.2257"* dereferenceable(24), %"class.blink::VerticalPositionCache"* nocapture readnone dereferenceable(48), %"class.WTF::Vector.2273"* dereferenceable(4112)) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.blink::LayoutUnit", align 4
  %11 = alloca %"class.blink::LayoutUnit", align 4
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %56, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 16777216
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %56, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 32
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 31
  switch i32 %31, label %56 [
    i32 1, label %32
    i32 14, label %32
  ]

32:                                               ; preds = %23, %23
  %33 = and i160 %28, 2113929216
  %34 = icmp eq i160 %33, 0
  br i1 %34, label %35, label %56

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %37 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %37, i64 23
  %39 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %13) #13
  br i1 %40, label %41, label %56

41:                                               ; preds = %35
  %42 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %36, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, i64 25
  %44 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %13) #13
  br i1 %45, label %56, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %13, i32 20) #13
  br i1 %51, label %56, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 8
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br label %56

56:                                               ; preds = %9, %52, %46, %41, %35, %32, %23, %17
  %57 = phi i1 [ false, %9 ], [ true, %46 ], [ %55, %52 ], [ true, %41 ], [ true, %35 ], [ true, %32 ], [ true, %17 ], [ true, %23 ]
  %58 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 4
  %59 = bitcast %"class.blink::InlineFlowBox"** %58 to %"class.blink::RootInlineBox"**
  %60 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %59, align 8
  %61 = icmp eq %"class.blink::RootInlineBox"* %60, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %60, i64 0, i32 0, i32 0, i32 7, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 4096
  %66 = icmp ne i32 %65, 0
  br label %67

67:                                               ; preds = %56, %62
  %68 = phi i1 [ false, %56 ], [ %66, %62 ]
  %69 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  br i1 %57, label %81, label %71

71:                                               ; preds = %67
  br i1 %68, label %72, label %82

72:                                               ; preds = %71
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 1, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %76, i64 0, i32 19
  %78 = load i16, i16* %77, align 4
  %79 = trunc i16 %78 to i8
  %80 = icmp sgt i8 %79, -1
  br i1 %80, label %82, label %81

81:                                               ; preds = %72, %67
  br label %82

82:                                               ; preds = %71, %72, %81
  %83 = phi i32 [ 1, %81 ], [ 0, %72 ], [ 0, %71 ]
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 1, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %87, i64 0, i32 19
  %89 = load i16, i16* %88, align 4
  %90 = lshr i16 %89, 8
  %91 = and i16 %90, 1
  %92 = zext i16 %91 to i32
  %93 = xor i32 %83, %92
  %94 = bitcast %"class.blink::LayoutUnit"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #13
  %95 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %10, i64 0, i32 0
  %96 = bitcast %"class.blink::LayoutUnit"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #13
  %97 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %11, i64 0, i32 0
  %98 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %99 = tail call i32 @_ZNK5blink11LayoutBlock30MinLineHeightForReplacedObjectEbNS_10LayoutUnitE(%"class.blink::LayoutBlock"* %98, i1 zeroext %57, i32 0) #13
  %100 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %101, i64 0, i32 0, i32 9
  %103 = bitcast [20 x i8]* %102 to i160*
  %104 = load i160, i160* %103, align 8
  %105 = and i160 %104, 15211807202738752817960438464512
  %106 = icmp eq i160 %105, 0
  %107 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %109 = select i1 %106, i32* %107, i32* %108
  %110 = load i32, i32* %109, align 4
  %111 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %98) #13
  %112 = tail call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %110, i32 %111, i32 %99) #13
  %113 = tail call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %112, i32 %93) #13
  store i32 %113, i32* %95, align 4
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8
  %118 = and i160 %117, 15211807202738752817960438464512
  %119 = icmp eq i160 %118, 0
  %120 = select i1 %119, i32* %107, i32* %108
  %121 = load i32, i32* %120, align 4
  %122 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %98) #13
  %123 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %100) #13
  %124 = icmp slt i32 %123, 0
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 %123) #13
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !9
  %130 = tail call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %121, i32 %129, i32 %99) #13
  %131 = tail call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %130, i32 %93) #13
  %132 = icmp sgt i32 %113, -1
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %131, i32 %113) #13
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !9
  store i32 %137, i32* %97, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #13
  store i8 -86, i8* %12, align 1
  %138 = icmp eq %"struct.blink::BidiRun"* %3, null
  br i1 %138, label %196, label %139

139:                                              ; preds = %82
  %140 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %3, i64 0, i32 1, i32 0
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 1073741824
  %146 = icmp eq i96 %145, 0
  br i1 %146, label %196, label %147

147:                                              ; preds = %139
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 5, i32 0
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 9
  %151 = bitcast [20 x i8]* %150 to i160*
  %152 = load i160, i160* %151, align 8
  %153 = and i160 %152, 15211807202738752817960438464512
  %154 = icmp eq i160 %153, 0
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 1, i32 4, i32 0, i64 8
  %156 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 1, i32 4, i32 0, i64 4
  %157 = select i1 %154, i8* %155, i8* %156
  %158 = bitcast i8* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = tail call i32 @_ZNK5blink11LayoutBlock30MinLineHeightForReplacedObjectEbNS_10LayoutUnitE(%"class.blink::LayoutBlock"* %98, i1 zeroext %57, i32 %159) #13
  %161 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %162 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %161, i64 0, i32 0, i32 9
  %163 = bitcast [20 x i8]* %162 to i160*
  %164 = load i160, i160* %163, align 8
  %165 = and i160 %164, 15211807202738752817960438464512
  %166 = icmp eq i160 %165, 0
  %167 = select i1 %166, i32* %107, i32* %108
  %168 = load i32, i32* %167, align 4
  %169 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %98) #13
  %170 = tail call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %168, i32 %169, i32 %160) #13
  %171 = tail call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %170, i32 %93) #13
  store i32 %171, i32* %95, align 4
  %172 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %172, i64 0, i32 0, i32 9
  %174 = bitcast [20 x i8]* %173 to i160*
  %175 = load i160, i160* %174, align 8
  %176 = and i160 %175, 15211807202738752817960438464512
  %177 = icmp eq i160 %176, 0
  %178 = select i1 %177, i32* %107, i32* %108
  %179 = load i32, i32* %178, align 4
  %180 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %98) #13
  %181 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %100) #13
  %182 = icmp slt i32 %181, 0
  %183 = select i1 %182, i32 -2147483648, i32 2147483647
  %184 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %180, i32 %181) #13
  %185 = extractvalue { i32, i1 } %184, 1
  %186 = extractvalue { i32, i1 } %184, 0
  %187 = select i1 %185, i32 %183, i32 %186, !prof !9
  %188 = tail call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %179, i32 %187, i32 %160) #13
  %189 = tail call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %188, i32 %93) #13
  %190 = icmp sgt i32 %171, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %189, i32 %171) #13
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !9
  store i32 %195, i32* %97, align 4
  br label %196

196:                                              ; preds = %139, %82, %147
  %197 = call %"struct.blink::BidiRun"* @_ZN5blink15LayoutBlockFlow41ComputeInlineDirectionPositionsForSegmentEPNS_13RootInlineBoxERKNS_8LineInfoERNS_10LayoutUnitES7_PNS_7BidiRunES9_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINSA_6VectorIPKNS_14SimpleFontDataELj0ENSA_18PartitionAllocatorEEENS_13GlyphOverflowEEENSA_7PtrHashISD_EENSA_10HashTraitsISE_EENSR_ISO_EESL_EERNS_21VerticalPositionCacheERKNSH_INS_15WordMeasurementELj64ESL_EE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* %1, %"class.blink::LineInfo"* dereferenceable(12) %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %10, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %11, %"struct.blink::BidiRun"* %3, %"struct.blink::BidiRun"* %4, %"class.WTF::HashMap.2257"* dereferenceable(24) %6, %"class.blink::VerticalPositionCache"* dereferenceable(48) undef, %"class.WTF::Vector.2273"* dereferenceable(4112) %8)
  %198 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 7, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = lshr i32 %199, 2
  %201 = trunc i32 %200 to i8
  %202 = and i8 %201, 1
  store i8 %202, i8* %12, align 1
  %203 = bitcast %"class.blink::RootInlineBox"* %1 to %"class.blink::InlineFlowBox"*
  %204 = load i32, i32* %95, align 4
  %205 = call i32 @_ZN5blink13InlineFlowBox27PlaceBoxesInInlineDirectionENS_10LayoutUnitERb(%"class.blink::InlineFlowBox"* %203, i32 %204, i8* nonnull dereferenceable(1) %12) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"struct.blink::BidiRun"* @_ZN5blink15LayoutBlockFlow41ComputeInlineDirectionPositionsForSegmentEPNS_13RootInlineBoxERKNS_8LineInfoERNS_10LayoutUnitES7_PNS_7BidiRunES9_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINSA_6VectorIPKNS_14SimpleFontDataELj0ENSA_18PartitionAllocatorEEENS_13GlyphOverflowEEENSA_7PtrHashISD_EENSA_10HashTraitsISE_EENSR_ISO_EESL_EERNS_21VerticalPositionCacheERKNSH_INS_15WordMeasurementELj64ESL_EE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"*, %"class.blink::LineInfo"* nocapture readonly dereferenceable(12), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, %"class.WTF::HashMap.2257"* dereferenceable(24), %"class.blink::VerticalPositionCache"* nocapture readnone dereferenceable(48), %"class.WTF::Vector.2273"* dereferenceable(4112)) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = alloca %"class.blink::LineLayoutText", align 8
  %13 = alloca %"class.WTF::HashSet.2276", align 8
  %14 = alloca %"struct.blink::GlyphOverflow", align 4
  %15 = alloca %"class.blink::FloatRect", align 4
  %16 = alloca %"class.blink::FloatRect", align 4
  %17 = alloca %"class.blink::InlineTextBox"*, align 8
  %18 = alloca %"struct.std::__1::pair.2262", align 8
  %19 = alloca %"struct.blink::GlyphOverflow", align 4
  %20 = alloca %"class.blink::InlineTextBox"*, align 8
  %21 = alloca %"struct.std::__1::pair.2262", align 8
  %22 = alloca %"struct.blink::GlyphOverflow", align 4
  %23 = alloca %"class.blink::LayoutUnit", align 4
  %24 = alloca i8, align 1
  %25 = alloca %"class.blink::ExpansionOpportunities", align 8
  %26 = alloca i32, align 4
  %27 = alloca %"class.blink::LineLayoutText", align 8
  %28 = bitcast %"class.blink::LayoutUnit"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %23, i64 0, i32 0
  %30 = bitcast %"class.blink::RootInlineBox"* %1 to %"class.blink::InlineFlowBox"*
  %31 = tail call i32 @_ZN5blink13InlineFlowBox26GetFlowSpacingLogicalWidthEv(%"class.blink::InlineFlowBox"* %30) #13
  store i32 %31, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %24) #13
  store i8 1, i8* %24, align 1
  %32 = bitcast %"class.blink::ExpansionOpportunities"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 72, i1 false)
  %34 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0, i32 1, i64 0
  %35 = bitcast %"class.blink::ExpansionOpportunities"* %25 to i8**
  store i8* %34, i8** %35, align 8
  %36 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 1
  store i32 0, i32* %38, align 8
  %39 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %26, align 4
  %42 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %43 = bitcast %"class.blink::ComputedStyle"** %42 to %"class.blink::ComputedStyleBase"**
  %44 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %46, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %48, i64 0, i32 3
  %50 = load i8, i8* %49, align 2
  %51 = and i8 %50, 3
  %52 = zext i8 %51 to i32
  %53 = icmp eq %"struct.blink::BidiRun"* %5, null
  br i1 %53, label %777, label %54

54:                                               ; preds = %10
  %55 = bitcast %"class.blink::LineLayoutText"* %27 to i8*
  %56 = bitcast %"class.blink::LineLayoutText"* %27 to i64*
  %57 = icmp ne i8 %51, 1
  %58 = bitcast %"class.blink::LineLayoutText"* %27 to %"class.blink::LayoutText"**
  %59 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %27, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %2, i64 0, i32 0
  %61 = bitcast %"class.blink::LineLayoutText"* %12 to i8*
  %62 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %12, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::LineLayoutText"* %12 to i64*
  %64 = bitcast %"class.WTF::HashSet.2276"* %13 to i8*
  %65 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %13, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %13, i64 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %13, i64 0, i32 0, i32 2
  %68 = bitcast %"struct.blink::GlyphOverflow"* %14 to i8*
  %69 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %14, i64 0, i32 0
  %70 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %14, i64 0, i32 1
  %71 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %14, i64 0, i32 2
  %72 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %14, i64 0, i32 3
  %73 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %12, i64 0, i32 0
  %74 = bitcast %"class.blink::LineLayoutText"* %12 to %"class.blink::LayoutText"**
  %75 = bitcast %"class.blink::TextRun"* %11 to i8*
  %76 = bitcast %"class.blink::FloatRect"* %15 to i8*
  %77 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %9, i64 0, i32 0, i32 0, i32 2
  %78 = bitcast %"class.blink::FloatRect"* %16 to i8*
  %79 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %16, i64 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %16, i64 0, i32 0, i32 1
  %81 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %13, i64 0, i32 0
  %82 = bitcast %"class.WTF::HashSet.2276"* %13 to i64*
  %83 = bitcast %"class.blink::InlineTextBox"** %17 to i8*
  %84 = bitcast %"class.blink::InlineTextBox"** %17 to i64*
  %85 = bitcast %"struct.std::__1::pair.2262"* %18 to i8*
  %86 = bitcast %"struct.blink::GlyphOverflow"* %19 to i8*
  %87 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %18, i64 0, i32 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %89 = bitcast %"struct.std::__1::pair.2262"* %18 to i64*
  %90 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %18, i64 0, i32 1
  %91 = bitcast %"struct.blink::GlyphOverflow"* %90 to i8*
  %92 = getelementptr inbounds %"class.WTF::HashMap.2257", %"class.WTF::HashMap.2257"* %7, i64 0, i32 0
  %93 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.blink::InlineTextBox"** %20 to i8*
  %95 = bitcast %"class.blink::InlineTextBox"** %20 to i64*
  %96 = bitcast %"struct.std::__1::pair.2262"* %21 to i8*
  %97 = bitcast %"struct.blink::GlyphOverflow"* %22 to i8*
  %98 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %21, i64 0, i32 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %100 = bitcast %"struct.std::__1::pair.2262"* %21 to i64*
  %101 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %21, i64 0, i32 1
  %102 = bitcast %"struct.blink::GlyphOverflow"* %101 to i8*
  %103 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %105 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %104 to i96*
  %106 = icmp eq i32 %41, 3
  br label %107

107:                                              ; preds = %54, %746
  %108 = phi i8 [ 1, %54 ], [ %749, %746 ]
  %109 = phi %"class.blink::LayoutObject"* [ null, %54 ], [ %748, %746 ]
  %110 = phi %"struct.blink::BidiRun"* [ %5, %54 ], [ %752, %746 ]
  %111 = phi i64 [ 0, %54 ], [ %747, %746 ]
  %112 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 2
  %113 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  %114 = icmp eq %"class.blink::InlineBox"* %113, null
  br i1 %114, label %746, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 1
  %117 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %116, i64 0, i32 0
  %118 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %118, i64 0, i32 4
  %120 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %119 to i96*
  %121 = load i96, i96* %120, align 4
  %122 = and i96 %121, 113336795588871485128704
  %123 = icmp eq i96 %122, 75557863725914323419136
  br i1 %123, label %746, label %124

124:                                              ; preds = %115
  %125 = bitcast %"class.blink::InlineBox"* %113 to i1 (%"class.blink::InlineBox"*)***
  %126 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %125, align 8
  %127 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %126, i64 9
  %128 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %127, align 8
  %129 = call zeroext i1 %128(%"class.blink::InlineBox"* nonnull %113) #13
  br i1 %129, label %746, label %130

130:                                              ; preds = %124
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %117, align 8
  %132 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 4
  %133 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %132 to i96*
  %134 = load i96, i96* %133, align 4
  %135 = and i96 %134, 33554432
  %136 = icmp eq i96 %135, 0
  %137 = ptrtoint %"class.blink::LayoutObject"* %131 to i64
  br i1 %136, label %622, label %138

138:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  store i64 %137, i64* %56, align 8
  %139 = icmp ne %"struct.blink::BidiRun"* %110, %6
  %140 = and i1 %57, %139
  %141 = and i1 %106, %140
  %142 = bitcast %"class.blink::LayoutObject"* %131 to %"class.blink::LayoutText"*
  br i1 %141, label %143, label %155

143:                                              ; preds = %138
  %144 = load i8, i8* %24, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %152

146:                                              ; preds = %143
  %147 = bitcast %"class.blink::InlineBox"** %112 to %"class.blink::InlineTextBox"**
  %148 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %148, i64 0, i32 0, i32 7, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = or i32 %150, 8192
  store i32 %151, i32* %149, align 4
  br label %152

152:                                              ; preds = %143, %146
  call void @_ZN5blink22ExpansionOpportunities20AddRunWithExpansionsERNS_7BidiRunERbNS_11TextJustifyE(%"class.blink::ExpansionOpportunities"* nonnull %25, %"struct.blink::BidiRun"* nonnull dereferenceable(40) %110, i8* nonnull dereferenceable(1) %24, i32 %52)
  %153 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %58, align 8
  %154 = ptrtoint %"class.blink::LayoutText"* %153 to i64
  br label %155

155:                                              ; preds = %152, %138
  %156 = phi i64 [ %154, %152 ], [ %137, %138 ]
  %157 = phi %"class.blink::LayoutText"* [ %153, %152 ], [ %142, %138 ]
  %158 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %157, i64 0, i32 7, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %268, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %268, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = icmp ne i32 %167, 0
  %169 = and i8 %108, 1
  %170 = icmp eq i8 %169, 0
  %171 = or i1 %170, %168
  br i1 %171, label %217, label %172

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 1
  br i1 %176, label %182, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.WTF::StringImpl"* %177 to i8*
  %180 = load i8, i8* %179, align 1
  %181 = zext i8 %180 to i16
  br label %185

182:                                              ; preds = %172
  %183 = bitcast %"class.WTF::StringImpl"* %177 to i16*
  %184 = load i16, i16* %183, align 2
  br label %185

185:                                              ; preds = %178, %182
  %186 = phi i16 [ %181, %178 ], [ %184, %182 ]
  %187 = icmp ult i16 %186, 128
  br i1 %187, label %188, label %191

188:                                              ; preds = %185
  %189 = icmp ult i16 %186, 33
  br i1 %189, label %190, label %217

190:                                              ; preds = %188
  switch i16 %186, label %217 [
    i16 32, label %195
    i16 13, label %195
    i16 12, label %195
    i16 11, label %195
    i16 10, label %195
    i16 9, label %195
  ]

191:                                              ; preds = %185
  %192 = zext i16 %186 to i32
  %193 = call i32 @u_charDirection_69(i32 %192) #13
  %194 = icmp eq i32 %193, 9
  br i1 %194, label %195, label %217

195:                                              ; preds = %190, %190, %190, %190, %190, %190, %191
  %196 = load i8, i8* %60, align 4, !range !2
  %197 = icmp ne i8 %196, 0
  %198 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %59, i1 zeroext %197)
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %198, i64 0, i32 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %200, i64 0, i32 1, i32 0, i32 0
  %202 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %202, i64 0, i32 1, i32 0, i32 9
  %204 = load float, float* %203, align 4
  %205 = load i32, i32* %29, align 4
  %206 = sitofp i32 %205 to float
  %207 = fmul float %206, 1.562500e-02
  %208 = fadd float %204, %207
  %209 = fmul float %208, 6.400000e+01
  %210 = fcmp ult float %209, 0xC1E0000000000000
  %211 = fcmp ugt float %209, 0x41DFFFFFE0000000
  %212 = fcmp ogt float %209, 0xC1E0000000000000
  %213 = select i1 %212, float %209, float 0xC1E0000000000000
  %214 = fptosi float %213 to i32
  %215 = select i1 %210, i32 0, i32 2147483647
  %216 = select i1 %211, i32 %215, i32 %214
  store i32 %216, i32* %29, align 4
  br label %217

217:                                              ; preds = %190, %188, %191, %165, %195
  %218 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 4
  %219 = load i32, i32* %218, align 4
  %220 = add nsw i32 %219, -1
  %221 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %58, align 8
  %222 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %221, i64 0, i32 7, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  %225 = ptrtoint %"class.blink::LayoutText"* %221 to i64
  br i1 %224, label %254, label %226

226:                                              ; preds = %217
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %228 = load i32, i32* %227, align 4
  %229 = icmp ugt i32 %228, %220
  br i1 %229, label %230, label %254

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 1
  br i1 %234, label %242, label %236

236:                                              ; preds = %230
  %237 = bitcast %"class.WTF::StringImpl"* %235 to i8*
  %238 = zext i32 %220 to i64
  %239 = getelementptr inbounds i8, i8* %237, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i16
  br label %247

242:                                              ; preds = %230
  %243 = bitcast %"class.WTF::StringImpl"* %235 to i16*
  %244 = zext i32 %220 to i64
  %245 = getelementptr inbounds i16, i16* %243, i64 %244
  %246 = load i16, i16* %245, align 2
  br label %247

247:                                              ; preds = %236, %242
  %248 = phi i16 [ %241, %236 ], [ %246, %242 ]
  %249 = icmp ult i16 %248, 128
  br i1 %249, label %250, label %258

250:                                              ; preds = %247
  %251 = icmp ult i16 %248, 33
  br i1 %251, label %252, label %263

252:                                              ; preds = %250
  %253 = icmp eq i16 %248, 32
  br i1 %253, label %263, label %254

254:                                              ; preds = %217, %226, %252
  %255 = phi i16 [ %248, %252 ], [ 0, %226 ], [ 0, %217 ]
  %256 = add nsw i16 %255, -9
  %257 = icmp ult i16 %256, 5
  br label %263

258:                                              ; preds = %247
  %259 = zext i16 %248 to i32
  %260 = call i32 @u_charDirection_69(i32 %259) #13
  %261 = icmp eq i32 %260, 9
  %262 = load i64, i64* %56, align 8
  br label %263

263:                                              ; preds = %250, %252, %254, %258
  %264 = phi i64 [ %262, %258 ], [ %225, %250 ], [ %225, %252 ], [ %225, %254 ]
  %265 = phi i1 [ %261, %258 ], [ false, %250 ], [ true, %252 ], [ %257, %254 ]
  %266 = xor i1 %265, true
  %267 = zext i1 %266 to i8
  br label %268

268:                                              ; preds = %155, %161, %263
  %269 = phi i64 [ %264, %263 ], [ %156, %161 ], [ %156, %155 ]
  %270 = phi i8 [ %267, %263 ], [ %108, %161 ], [ %108, %155 ]
  %271 = load i32, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  store i64 %269, i64* %63, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 20, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %68, i8 0, i64 16, i1 false) #13
  %272 = load i8, i8* %60, align 4, !range !2
  %273 = icmp ne i8 %272, 0
  %274 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %73, i1 zeroext %273) #13
  %275 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %274, i64 0, i32 0, i32 0, i32 0, i32 0
  %276 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %275, align 8
  %277 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %276, i64 0, i32 1, i32 0, i32 0
  %278 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %277, align 8
  %279 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %278, i64 0, i32 1
  %280 = bitcast %"class.blink::InlineBox"** %112 to %"class.blink::InlineTextBox"**
  %281 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %281, i64 0, i32 0, i32 7, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = trunc i32 %283 to i16
  %285 = icmp slt i16 %284, 0
  br i1 %285, label %286, label %304

286:                                              ; preds = %268
  %287 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 1
  %288 = load i8, i8* %287, align 1
  %289 = and i8 %288, 1
  %290 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %74, align 8
  %291 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %290, i64 0, i32 0, i32 5, i32 0
  %292 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %291, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #13
  %293 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"* %292) #13
  %294 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %293, i64 0, i32 0
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::Font"* dereferenceable(88) %279, %"class.WTF::String"* dereferenceable(8) %294, %"class.blink::ComputedStyle"* dereferenceable(104) %292, i8 zeroext %289, i32 0) #13
  %295 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %279, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.WTF::HashSet.2276"* null, %"class.blink::FloatRect"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #13
  %296 = fmul float %295, 6.400000e+01
  %297 = fcmp ult float %296, 0xC1E0000000000000
  %298 = fcmp ugt float %296, 0x41DFFFFFE0000000
  %299 = fcmp ogt float %296, 0xC1E0000000000000
  %300 = select i1 %299, float %296, float 0xC1E0000000000000
  %301 = fptosi float %300 to i32
  %302 = select i1 %297, i32 0, i32 2147483647
  %303 = select i1 %298, i32 %302, i32 %301
  br label %304

304:                                              ; preds = %286, %268
  %305 = phi i32 [ %303, %286 ], [ 0, %268 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %76, i8 0, i64 16, i1 false) #13
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %278, i64 0, i32 1, i32 0, i32 12, i32 0
  %307 = bitcast %"struct.blink::FontDescription::BitFields"* %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = and i64 %308, 8589934592
  %310 = icmp ne i64 %309, 0
  %311 = call zeroext i1 @_ZNK5blink4Font18CanShapeWordByWordEv(%"class.blink::Font"* %279) #13
  br i1 %311, label %312, label %509

312:                                              ; preds = %304
  %313 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %74, align 8
  %314 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %313, i64 0, i32 7, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 1
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %313, i64 0, i32 0
  br i1 %319, label %509, label %321

321:                                              ; preds = %312
  %322 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 3
  %323 = load i32, i32* %322, align 8
  %324 = load i32, i32* %77, align 4
  %325 = zext i32 %324 to i64
  %326 = icmp ult i64 %111, %325
  br i1 %326, label %327, label %337

327:                                              ; preds = %321
  %328 = trunc i64 %111 to i32
  %329 = call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZNK3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2273"* %9, i32 %328) #13
  %330 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %329, i64 0, i32 0, i32 0, i32 0
  %331 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %330, align 8
  %332 = icmp eq %"class.blink::LayoutObject"* %331, %320
  br i1 %332, label %333, label %337

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %329, i64 0, i32 2
  %335 = load i32, i32* %334, align 4
  %336 = icmp eq i32 %335, %323
  br i1 %336, label %355, label %337

337:                                              ; preds = %333, %327, %321
  %338 = icmp eq i32 %324, 0
  br i1 %338, label %355, label %339

339:                                              ; preds = %337, %352
  %340 = phi i64 [ %353, %352 ], [ 0, %337 ]
  %341 = trunc i64 %340 to i32
  %342 = call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZNK3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2273"* %9, i32 %341) #13
  %343 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %342, i64 0, i32 0, i32 0, i32 0
  %344 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %343, align 8
  %345 = icmp eq %"class.blink::LayoutObject"* %344, %320
  br i1 %345, label %346, label %352

346:                                              ; preds = %339
  %347 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %342, i64 0, i32 2
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, %323
  br i1 %349, label %355, label %350

350:                                              ; preds = %346
  %351 = icmp sgt i32 %348, %323
  br i1 %351, label %355, label %352

352:                                              ; preds = %350, %339
  %353 = add nuw nsw i64 %340, 1
  %354 = icmp eq i64 %353, %325
  br i1 %354, label %355, label %339

355:                                              ; preds = %352, %350, %346, %337, %333
  %356 = phi i64 [ %111, %333 ], [ 0, %337 ], [ %340, %346 ], [ %325, %352 ], [ %325, %350 ]
  %357 = load i32, i32* %77, align 4
  %358 = zext i32 %357 to i64
  %359 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 4
  %360 = icmp ult i64 %356, %358
  br i1 %360, label %361, label %498

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 1
  br label %363

363:                                              ; preds = %493, %361
  %364 = phi float [ 0.000000e+00, %361 ], [ %495, %493 ]
  %365 = phi i32 [ %323, %361 ], [ %494, %493 ]
  %366 = phi i64 [ %356, %361 ], [ %496, %493 ]
  %367 = load i32, i32* %359, align 4
  %368 = icmp slt i32 %365, %367
  br i1 %368, label %369, label %498

369:                                              ; preds = %363
  %370 = trunc i64 %366 to i32
  %371 = call dereferenceable(64) %"class.blink::WordMeasurement"* @_ZNK3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2273"* %9, i32 %370) #13
  %372 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 3
  %375 = load i32, i32* %374, align 8
  %376 = icmp eq i32 %375, %373
  br i1 %376, label %493, label %377

377:                                              ; preds = %369
  %378 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 0, i32 0, i32 0
  %379 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %378, align 8
  %380 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %381 = icmp eq %"class.blink::LayoutObject"* %379, %380
  %382 = icmp eq i32 %373, %365
  %383 = and i1 %382, %381
  %384 = bitcast %"class.blink::LayoutObject"* %380 to %"class.blink::LayoutText"*
  br i1 %383, label %385, label %498

385:                                              ; preds = %377
  %386 = load i32, i32* %359, align 4
  %387 = icmp sgt i32 %375, %386
  br i1 %387, label %498, label %388

388:                                              ; preds = %385
  %389 = icmp eq i32 %375, %386
  %390 = and i1 %310, %389
  br i1 %390, label %391, label %446

391:                                              ; preds = %388
  %392 = sub nsw i32 %375, %365
  %393 = load i8, i8* %362, align 1
  %394 = and i8 %393, 1
  %395 = load i8, i8* %60, align 4, !range !2
  %396 = icmp ne i8 %395, 0
  %397 = bitcast %"class.blink::LayoutObject"* %379 to float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)***
  %398 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*** %397, align 8
  %399 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)** %398, i64 112
  %400 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)** %399, align 8
  %401 = call float %400(%"class.blink::LayoutText"* %384, i32 %365, i32 %392, i32 %271, i8 zeroext %394, i1 zeroext %396, %"class.WTF::HashSet.2276"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #13
  %402 = fadd float %364, %401
  %403 = icmp ne i64 %366, 0
  %404 = icmp eq i32 %392, 1
  %405 = and i1 %403, %404
  br i1 %405, label %406, label %456

406:                                              ; preds = %391
  %407 = load i32, i32* %372, align 4
  %408 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %74, align 8
  %409 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %408, i64 0, i32 7, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %456, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 1
  %414 = load i32, i32* %413, align 4
  %415 = icmp ugt i32 %414, %407
  br i1 %415, label %416, label %456

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 1
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 1
  br i1 %420, label %428, label %422

422:                                              ; preds = %416
  %423 = bitcast %"class.WTF::StringImpl"* %421 to i8*
  %424 = zext i32 %407 to i64
  %425 = getelementptr inbounds i8, i8* %423, i64 %424
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i16
  br label %433

428:                                              ; preds = %416
  %429 = bitcast %"class.WTF::StringImpl"* %421 to i16*
  %430 = zext i32 %407 to i64
  %431 = getelementptr inbounds i16, i16* %429, i64 %430
  %432 = load i16, i16* %431, align 2
  br label %433

433:                                              ; preds = %428, %422
  %434 = phi i16 [ %427, %422 ], [ %432, %428 ]
  %435 = icmp eq i16 %434, 32
  br i1 %435, label %436, label %456

436:                                              ; preds = %433
  %437 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %408, i64 0, i32 0, i32 5, i32 0
  %438 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %438, i64 0, i32 0, i32 0, i32 0, i32 0
  %440 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %440, i64 0, i32 1, i32 0, i32 0
  %442 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %442, i64 0, i32 1, i32 0, i32 9
  %444 = load float, float* %443, align 4
  %445 = fadd float %402, %444
  br label %456

446:                                              ; preds = %388
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #13
  %447 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 6
  %448 = bitcast %"class.blink::FloatRect"* %447 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %78, i8* align 8 %448, i64 16, i1 false) #13
  %449 = load float, float* %79, align 4
  %450 = fadd float %364, %449
  store float %450, float* %79, align 4
  %451 = load float, float* %80, align 4
  %452 = fadd float %451, 0.000000e+00
  store float %452, float* %80, align 4
  call void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"* nonnull %15, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16) #13
  %453 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 1
  %454 = load float, float* %453, align 8
  %455 = fadd float %364, %454
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #13
  br label %456

456:                                              ; preds = %446, %436, %433, %412, %406, %391
  %457 = phi float [ %455, %446 ], [ %445, %436 ], [ %402, %433 ], [ %402, %391 ], [ %402, %412 ], [ %402, %406 ]
  %458 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 5, i32 0, i32 2
  %459 = load i32, i32* %458, align 4
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %493, label %461

461:                                              ; preds = %456
  %462 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 5, i32 0, i32 0
  %463 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %462, align 8
  %464 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %371, i64 0, i32 5, i32 0, i32 1
  %465 = load i32, i32* %464, align 8
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %463, i64 %466
  %468 = icmp eq i32 %465, 0
  br i1 %468, label %476, label %469

469:                                              ; preds = %461, %473
  %470 = phi %"class.blink::SimpleFontData"** [ %474, %473 ], [ %463, %461 ]
  %471 = bitcast %"class.blink::SimpleFontData"** %470 to i64*
  %472 = load i64, i64* %471, align 8
  switch i64 %472, label %476 [
    i64 -1, label %473
    i64 0, label %473
  ]

473:                                              ; preds = %469, %469
  %474 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %470, i64 1
  %475 = icmp eq %"class.blink::SimpleFontData"** %474, %467
  br i1 %475, label %493, label %469

476:                                              ; preds = %469, %461
  %477 = phi %"class.blink::SimpleFontData"** [ %463, %461 ], [ %470, %469 ]
  %478 = icmp eq %"class.blink::SimpleFontData"** %477, %467
  br i1 %478, label %493, label %479

479:                                              ; preds = %476, %491
  %480 = phi %"class.blink::SimpleFontData"** [ %485, %491 ], [ %477, %476 ]
  %481 = call { %"class.blink::SimpleFontData"**, i8 } @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2277"* nonnull %81, %"class.blink::SimpleFontData"** dereferenceable(8) %480, %"class.blink::SimpleFontData"** dereferenceable(8) %480) #13
  %482 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %480, i64 1
  %483 = icmp eq %"class.blink::SimpleFontData"** %482, %467
  br i1 %483, label %493, label %484

484:                                              ; preds = %479, %488
  %485 = phi %"class.blink::SimpleFontData"** [ %489, %488 ], [ %482, %479 ]
  %486 = bitcast %"class.blink::SimpleFontData"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  switch i64 %487, label %491 [
    i64 -1, label %488
    i64 0, label %488
  ]

488:                                              ; preds = %484, %484
  %489 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %485, i64 1
  %490 = icmp eq %"class.blink::SimpleFontData"** %489, %467
  br i1 %490, label %493, label %484

491:                                              ; preds = %484
  %492 = icmp eq %"class.blink::SimpleFontData"** %485, %467
  br i1 %492, label %493, label %479

493:                                              ; preds = %473, %491, %479, %488, %476, %456, %369
  %494 = phi i32 [ %365, %369 ], [ %375, %456 ], [ %375, %476 ], [ %375, %488 ], [ %375, %479 ], [ %375, %491 ], [ %375, %473 ]
  %495 = phi float [ %364, %369 ], [ %457, %456 ], [ %457, %476 ], [ %457, %488 ], [ %457, %479 ], [ %457, %491 ], [ %457, %473 ]
  %496 = add nuw nsw i64 %366, 1
  %497 = icmp eq i64 %496, %358
  br i1 %497, label %498, label %363

498:                                              ; preds = %493, %385, %377, %363, %355
  %499 = phi i64 [ %356, %355 ], [ %358, %493 ], [ %366, %363 ], [ %366, %385 ], [ %366, %377 ]
  %500 = phi i32 [ %323, %355 ], [ %494, %493 ], [ %365, %363 ], [ %365, %385 ], [ %365, %377 ]
  %501 = phi float [ 0.000000e+00, %355 ], [ %495, %493 ], [ %364, %363 ], [ %364, %385 ], [ %364, %377 ]
  %502 = load i32, i32* %359, align 4
  %503 = icmp eq i32 %500, %502
  br i1 %503, label %527, label %504

504:                                              ; preds = %498
  %505 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %65, align 8
  %506 = icmp eq %"class.blink::SimpleFontData"** %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %504
  %508 = bitcast %"class.blink::SimpleFontData"** %505 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %508) #13
  store atomic i64 0, i64* %82 monotonic, align 8
  store i32 0, i32* %66, align 8
  store i32 0, i32* %67, align 4
  br label %509

509:                                              ; preds = %507, %504, %312, %304
  %510 = phi i64 [ %111, %312 ], [ %499, %504 ], [ %499, %507 ], [ %111, %304 ]
  %511 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 3
  %512 = load i32, i32* %511, align 8
  %513 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 4
  %514 = load i32, i32* %513, align 4
  %515 = sub nsw i32 %514, %512
  %516 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 1
  %517 = load i8, i8* %516, align 1
  %518 = and i8 %517, 1
  %519 = load i8, i8* %60, align 4, !range !2
  %520 = icmp ne i8 %519, 0
  %521 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %74, align 8
  %522 = bitcast %"class.blink::LayoutText"* %521 to float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)***
  %523 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*** %522, align 8
  %524 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)** %523, i64 112
  %525 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*, float)** %524, align 8
  %526 = call float %525(%"class.blink::LayoutText"* %521, i32 %512, i32 %515, i32 %271, i8 zeroext %518, i1 zeroext %520, %"class.WTF::HashSet.2276"* nonnull %13, %"class.blink::FloatRect"* nonnull %15, float 0.000000e+00) #13
  br label %527

527:                                              ; preds = %509, %498
  %528 = phi i64 [ %510, %509 ], [ %499, %498 ]
  %529 = phi float [ %526, %509 ], [ %501, %498 ]
  %530 = fcmp olt float %529, 0.000000e+00
  %531 = select i1 %530, float 0.000000e+00, float %529
  call void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"* nonnull %14, %"class.blink::FloatRect"* nonnull dereferenceable(16) %15, %"class.blink::Font"* dereferenceable(88) %279, float %531) #13
  %532 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  %533 = fmul float %531, 6.400000e+01
  %534 = fcmp ult float %533, 0xC1E0000000000000
  %535 = fcmp ugt float %533, 0x41DFFFFFE0000000
  %536 = fcmp ogt float %533, 0xC1E0000000000000
  %537 = select i1 %536, float %533, float 0xC1E0000000000000
  %538 = fptosi float %537 to i32
  %539 = select i1 %534, i32 0, i32 2147483647
  %540 = select i1 %535, i32 %539, i32 %538
  %541 = icmp slt i32 %305, 0
  %542 = select i1 %541, i32 -2147483648, i32 2147483647
  %543 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %540, i32 %305) #13
  %544 = extractvalue { i32, i1 } %543, 1
  %545 = extractvalue { i32, i1 } %543, 0
  %546 = select i1 %544, i32 %542, i32 %545, !prof !9
  %547 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %532, i64 0, i32 6, i32 0
  store i32 %546, i32* %547, align 8
  %548 = load i32, i32* %67, align 4
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %583, label %550

550:                                              ; preds = %527
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  %551 = bitcast %"class.blink::InlineBox"** %112 to i64*
  %552 = load i64, i64* %551, align 8
  store i64 %552, i64* %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %86, i8 0, i64 16, i1 false)
  store atomic i64 0, i64* %89 monotonic, align 8, !alias.scope !11
  store i32 0, i32* %87, align 8, !alias.scope !11
  store i32 0, i32* %88, align 4, !alias.scope !11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 4 %86, i64 16, i1 false) #13
  %553 = call { %"struct.WTF::KeyValuePair.2261"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6insertINS_17HashMapTranslatorISO_SJ_SC_EEPS2_SF_EENS_18HashTableAddResultISP_SG_EEOT0_OT1_(%"class.WTF::HashTable.2258"* %92, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %17, %"struct.std::__1::pair.2262"* nonnull dereferenceable(32) %18) #13
  %554 = extractvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } %553, 0
  %555 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %93, align 8
  %556 = icmp eq %"class.blink::SimpleFontData"** %555, null
  %557 = bitcast %"class.blink::SimpleFontData"** %555 to i8*
  br i1 %556, label %563, label %558, !prof !10

558:                                              ; preds = %550
  %559 = load i32, i32* %88, align 4
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %562, label %561, !prof !9

561:                                              ; preds = %558
  store i32 0, i32* %88, align 4
  br label %562

562:                                              ; preds = %561, %558
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %557) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %93, align 8
  br label %563

563:                                              ; preds = %562, %550
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  %564 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %554, i64 0, i32 1, i32 0
  call void @_ZN3WTF12CopyToVectorINS_7HashSetIPKN5blink14SimpleFontDataENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEENS_6VectorIS5_Lj0ESA_EEEEvRKT_RT0_(%"class.WTF::HashSet.2276"* nonnull dereferenceable(24) %13, %"class.WTF::Vector.2263"* dereferenceable(16) %564) #13
  %565 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  %566 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %565, i64 0, i32 3
  %567 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %566, align 8
  %568 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %567, i64 0, i32 6
  %569 = load i32, i32* %568, align 8
  br label %570

570:                                              ; preds = %578, %563
  %571 = phi i32 [ %569, %563 ], [ %580, %578 ]
  %572 = phi %"class.blink::InlineFlowBox"* [ %567, %563 ], [ %576, %578 ]
  %573 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %572, i64 0, i32 6
  %574 = and i32 %571, -17
  store i32 %574, i32* %573, align 8
  %575 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %572, i64 0, i32 0, i32 3
  %576 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %575, align 8
  %577 = icmp eq %"class.blink::InlineFlowBox"* %576, null
  br i1 %577, label %583, label %578

578:                                              ; preds = %570
  %579 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %576, i64 0, i32 6
  %580 = load i32, i32* %579, align 8
  %581 = and i32 %580, 16
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %570

583:                                              ; preds = %578, %570, %527
  %584 = load float, float* %69, align 4
  %585 = call float @llvm.fabs.f32(float %584) #13
  %586 = fcmp olt float %585, 6.250000e-02
  br i1 %586, label %587, label %599

587:                                              ; preds = %583
  %588 = load float, float* %70, align 4
  %589 = call float @llvm.fabs.f32(float %588) #13
  %590 = fcmp olt float %589, 6.250000e-02
  br i1 %590, label %591, label %599

591:                                              ; preds = %587
  %592 = load float, float* %71, align 4
  %593 = call float @llvm.fabs.f32(float %592) #13
  %594 = fcmp olt float %593, 6.250000e-02
  br i1 %594, label %595, label %599

595:                                              ; preds = %591
  %596 = load float, float* %72, align 4
  %597 = call float @llvm.fabs.f32(float %596) #13
  %598 = fcmp olt float %597, 6.250000e-02
  br i1 %598, label %616, label %599

599:                                              ; preds = %595, %591, %587, %583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #13
  %600 = bitcast %"class.blink::InlineBox"** %112 to i64*
  %601 = load i64, i64* %600, align 8
  store i64 %601, i64* %95, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %97, i8 0, i64 16, i1 false)
  store atomic i64 0, i64* %100 monotonic, align 8, !alias.scope !14
  store i32 0, i32* %98, align 8, !alias.scope !14
  store i32 0, i32* %99, align 4, !alias.scope !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 4 %97, i64 16, i1 false) #13
  %602 = call { %"struct.WTF::KeyValuePair.2261"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6insertINS_17HashMapTranslatorISO_SJ_SC_EEPS2_SF_EENS_18HashTableAddResultISP_SG_EEOT0_OT1_(%"class.WTF::HashTable.2258"* %92, %"class.blink::InlineTextBox"** nonnull dereferenceable(8) %20, %"struct.std::__1::pair.2262"* nonnull dereferenceable(32) %21) #13
  %603 = extractvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } %602, 0
  %604 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %103, align 8
  %605 = icmp eq %"class.blink::SimpleFontData"** %604, null
  %606 = bitcast %"class.blink::SimpleFontData"** %604 to i8*
  br i1 %605, label %612, label %607, !prof !10

607:                                              ; preds = %599
  %608 = load i32, i32* %99, align 4
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %611, label %610, !prof !9

610:                                              ; preds = %607
  store i32 0, i32* %99, align 4
  br label %611

611:                                              ; preds = %610, %607
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %606) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %103, align 8
  br label %612

612:                                              ; preds = %611, %599
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  %613 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %603, i64 0, i32 1, i32 1
  %614 = bitcast %"struct.blink::GlyphOverflow"* %613 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %614, i8* nonnull align 4 %68, i64 16, i1 false) #13
  %615 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  call void @_ZN5blink9InlineBox26ClearKnownToHaveNoOverflowEv(%"class.blink::InlineBox"* %615) #13
  br label %616

616:                                              ; preds = %612, %595
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #13
  %617 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %65, align 8
  %618 = icmp eq %"class.blink::SimpleFontData"** %617, null
  br i1 %618, label %621, label %619, !prof !10

619:                                              ; preds = %616
  %620 = bitcast %"class.blink::SimpleFontData"** %617 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %620) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %65, align 8
  br label %621

621:                                              ; preds = %616, %619
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %732

622:                                              ; preds = %130
  store i8 0, i8* %24, align 1
  %623 = bitcast %"class.blink::LayoutObject"* %131 to i1 (%"class.blink::LayoutObject"*)***
  %624 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %623, align 8
  %625 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %624, i64 26
  %626 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %625, align 8
  %627 = call zeroext i1 %626(%"class.blink::LayoutObject"* %131) #13
  br i1 %627, label %732, label %628

628:                                              ; preds = %622
  %629 = bitcast %"class.blink::LineLayoutItem"* %116 to %"class.blink::LayoutBox"**
  %630 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %629, align 8
  %631 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %630, i64 0, i32 0, i32 0
  %632 = bitcast %"class.blink::LayoutBox"* %630 to i1 (%"class.blink::LayoutObject"*, i32)***
  %633 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %632, align 8
  %634 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %633, i64 92
  %635 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %634, align 8
  %636 = call zeroext i1 %635(%"class.blink::LayoutObject"* %631, i32 42) #13
  br i1 %636, label %637, label %639

637:                                              ; preds = %628
  %638 = bitcast %"class.blink::LayoutBox"* %630 to %"class.blink::LayoutRubyRun"*
  call void @_ZN5blink15LayoutBlockFlow20SetMarginsForRubyRunEPNS_7BidiRunEPNS_13LayoutRubyRunEPNS_12LayoutObjectERKNS_8LineInfoE(%"class.blink::LayoutBlockFlow"* %0, %"struct.blink::BidiRun"* nonnull %110, %"class.blink::LayoutRubyRun"* %638, %"class.blink::LayoutObject"* %109, %"class.blink::LineInfo"* dereferenceable(12) %2)
  br label %639

639:                                              ; preds = %637, %628
  %640 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  %641 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %630, i64 0, i32 2, i32 1
  %642 = bitcast %"class.blink::LayoutSize"* %641 to i64*
  %643 = load i64, i64* %642, align 4
  %644 = lshr i64 %643, 32
  %645 = load i96, i96* %105, align 4
  %646 = trunc i96 %645 to i32
  %647 = icmp slt i32 %646, 0
  %648 = select i1 %647, i64 %643, i64 %644
  %649 = trunc i64 %648 to i32
  %650 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %640, i64 0, i32 6, i32 0
  store i32 %649, i32* %650, align 8
  %651 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %652 = icmp eq %"class.blink::ComputedStyle"* %651, null
  %653 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %630, i64 0, i32 0, i32 0, i32 5, i32 0
  %654 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %653, align 8
  %655 = select i1 %652, %"class.blink::ComputedStyle"* %654, %"class.blink::ComputedStyle"* %651
  %656 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %655, i64 0, i32 0, i32 9
  %657 = bitcast [20 x i8]* %656 to i160*
  %658 = load i160, i160* %657, align 8, !noalias !17
  %659 = bitcast %"class.blink::LayoutBox"* %630 to i8*
  %660 = and i160 %658, 15211807202738752817960438464512
  %661 = icmp eq i160 %660, 0
  %662 = and i160 %658, 41538374868278621028243970633760768
  %663 = icmp eq i160 %662, 0
  %664 = select i1 %663, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %665 = select i1 %663, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %666 = select i1 %661, { i64, i64 } %665, { i64, i64 } %664
  %667 = select i1 %661, { i64, i64 } %665, { i64, i64 } %664
  %668 = extractvalue { i64, i64 } %666, 0
  %669 = extractvalue { i64, i64 } %667, 1
  %670 = getelementptr inbounds i8, i8* %659, i64 %669
  %671 = bitcast i8* %670 to %"class.blink::LayoutBoxModelObject"*
  %672 = and i64 %668, 1
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %681, label %674

674:                                              ; preds = %639
  %675 = bitcast i8* %670 to i8**
  %676 = load i8*, i8** %675, align 8
  %677 = add i64 %668, -1
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = bitcast i8* %678 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %680 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %679, align 8
  br label %683

681:                                              ; preds = %639
  %682 = inttoptr i64 %668 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %683

683:                                              ; preds = %674, %681
  %684 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %680, %674 ], [ %682, %681 ]
  %685 = call i32 %684(%"class.blink::LayoutBoxModelObject"* %671) #13
  %686 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %687 = icmp eq %"class.blink::ComputedStyle"* %686, null
  %688 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %653, align 8
  %689 = select i1 %687, %"class.blink::ComputedStyle"* %688, %"class.blink::ComputedStyle"* %686
  %690 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %689, i64 0, i32 0, i32 9
  %691 = bitcast [20 x i8]* %690 to i160*
  %692 = load i160, i160* %691, align 8, !noalias !20
  %693 = and i160 %692, 15211807202738752817960438464512
  %694 = icmp eq i160 %693, 0
  %695 = and i160 %692, 41538374868278621028243970633760768
  %696 = icmp eq i160 %695, 0
  %697 = select i1 %696, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %698 = select i1 %696, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %699 = select i1 %694, { i64, i64 } %698, { i64, i64 } %697
  %700 = select i1 %694, { i64, i64 } %698, { i64, i64 } %697
  %701 = extractvalue { i64, i64 } %699, 0
  %702 = extractvalue { i64, i64 } %700, 1
  %703 = getelementptr inbounds i8, i8* %659, i64 %702
  %704 = bitcast i8* %703 to %"class.blink::LayoutBoxModelObject"*
  %705 = and i64 %701, 1
  %706 = icmp eq i64 %705, 0
  br i1 %706, label %714, label %707

707:                                              ; preds = %683
  %708 = bitcast i8* %703 to i8**
  %709 = load i8*, i8** %708, align 8
  %710 = add i64 %701, -1
  %711 = getelementptr i8, i8* %709, i64 %710
  %712 = bitcast i8* %711 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %713 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %712, align 8
  br label %716

714:                                              ; preds = %683
  %715 = inttoptr i64 %701 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %716

716:                                              ; preds = %707, %714
  %717 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %713, %707 ], [ %715, %714 ]
  %718 = call i32 %717(%"class.blink::LayoutBoxModelObject"* %704) #13
  %719 = icmp slt i32 %718, 0
  %720 = select i1 %719, i32 -2147483648, i32 2147483647
  %721 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %685, i32 %718) #13
  %722 = extractvalue { i32, i1 } %721, 1
  %723 = extractvalue { i32, i1 } %721, 0
  %724 = select i1 %722, i32 %720, i32 %723, !prof !9
  %725 = load i32, i32* %29, align 4
  %726 = icmp slt i32 %724, 0
  %727 = select i1 %726, i32 -2147483648, i32 2147483647
  %728 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %725, i32 %724) #13
  %729 = extractvalue { i32, i1 } %728, 1
  %730 = extractvalue { i32, i1 } %728, 0
  %731 = select i1 %729, i32 %727, i32 %730, !prof !9
  store i32 %731, i32* %29, align 4
  br label %732

732:                                              ; preds = %622, %716, %621
  %733 = phi i64 [ %528, %621 ], [ %111, %622 ], [ %111, %716 ]
  %734 = phi i8 [ %270, %621 ], [ %108, %622 ], [ 1, %716 ]
  %735 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %112, align 8
  %736 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %735, i64 0, i32 6, i32 0
  %737 = load i32, i32* %736, align 8
  %738 = load i32, i32* %29, align 4
  %739 = icmp slt i32 %737, 0
  %740 = select i1 %739, i32 -2147483648, i32 2147483647
  %741 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %738, i32 %737) #13
  %742 = extractvalue { i32, i1 } %741, 1
  %743 = extractvalue { i32, i1 } %741, 0
  %744 = select i1 %742, i32 %740, i32 %743, !prof !9
  store i32 %744, i32* %29, align 4
  %745 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %117, align 8
  br label %746

746:                                              ; preds = %107, %115, %124, %732
  %747 = phi i64 [ %111, %107 ], [ %111, %115 ], [ %111, %124 ], [ %733, %732 ]
  %748 = phi %"class.blink::LayoutObject"* [ %109, %107 ], [ %109, %115 ], [ %109, %124 ], [ %745, %732 ]
  %749 = phi i8 [ %108, %107 ], [ %108, %115 ], [ %108, %124 ], [ %734, %732 ]
  %750 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %110, i64 0, i32 0, i32 2
  %751 = bitcast %"struct.blink::BidiCharacterRun"** %750 to %"struct.blink::BidiRun"**
  %752 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %751, align 8
  %753 = icmp eq %"struct.blink::BidiRun"* %752, null
  br i1 %753, label %754, label %107

754:                                              ; preds = %746
  %755 = load i8, i8* %24, align 1, !range !2
  %756 = load i32, i32* %38, align 8
  %757 = icmp eq i8 %755, 0
  %758 = icmp eq i32 %756, 0
  %759 = or i1 %757, %758
  br i1 %759, label %777, label %760

760:                                              ; preds = %754
  %761 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0
  %762 = load i32, i32* %37, align 4
  %763 = add i32 %762, -1
  %764 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2282"* nonnull %761, i32 %763) #13
  %765 = load i32, i32* %764, align 4
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %769

767:                                              ; preds = %760
  %768 = load i32, i32* %38, align 8
  br label %777

769:                                              ; preds = %760
  %770 = load i32, i32* %37, align 4
  %771 = add i32 %770, -1
  %772 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2282"* nonnull %761, i32 %771) #13
  %773 = load i32, i32* %772, align 4
  %774 = add i32 %773, -1
  store i32 %774, i32* %772, align 4
  %775 = load i32, i32* %38, align 8
  %776 = add i32 %775, -1
  store i32 %776, i32* %38, align 8
  br label %777

777:                                              ; preds = %10, %767, %769, %754
  %778 = phi i32 [ %768, %767 ], [ %776, %769 ], [ %756, %754 ], [ 0, %10 ]
  call void @_ZN5blink15LayoutBlockFlow30UpdateLogicalWidthForAlignmentERKNS_10ETextAlignEPKNS_13RootInlineBoxEPNS_7BidiRunERNS_10LayoutUnitESA_SA_j(%"class.blink::LayoutBlockFlow"* %0, i32* nonnull dereferenceable(4) %26, %"class.blink::RootInlineBox"* %1, %"struct.blink::BidiRun"* %6, %"class.blink::LayoutUnit"* dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %23, %"class.blink::LayoutUnit"* dereferenceable(4) %4, i32 %778)
  %779 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %780 = load i32, i32* %779, align 4
  call void @_ZN5blink22ExpansionOpportunities33ComputeExpansionsForJustifiedTextEPNS_7BidiRunES2_RNS_10LayoutUnitES3_(%"class.blink::ExpansionOpportunities"* nonnull %25, %"struct.blink::BidiRun"* %5, %"struct.blink::BidiRun"* %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %23, i32 %780)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #13
  %781 = load i32, i32* %37, align 4
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %784, label %783, !prof !9

783:                                              ; preds = %777
  store i32 0, i32* %37, align 4
  br label %784

784:                                              ; preds = %783, %777
  %785 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %786 = load i32*, i32** %785, align 8
  %787 = bitcast i8* %34 to i32*
  %788 = icmp eq i32* %786, %787
  br i1 %788, label %791, label %789, !prof !10

789:                                              ; preds = %784
  %790 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %25, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIjLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.2283"* nonnull %790, i32* %786) #13
  br label %791

791:                                              ; preds = %784, %789
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  ret %"struct.blink::BidiRun"* null
}

declare i32 @_ZN5blink13InlineFlowBox27PlaceBoxesInInlineDirectionENS_10LayoutUnitERb(%"class.blink::InlineFlowBox"*, i32, i8* dereferenceable(1)) local_unnamed_addr #2

declare i32 @_ZN5blink13InlineFlowBox26GetFlowSpacingLogicalWidthEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ExpansionOpportunities20AddRunWithExpansionsERNS_7BidiRunERbNS_11TextJustifyE(%"class.blink::ExpansionOpportunities"*, %"struct.blink::BidiRun"* dereferenceable(40), i8* dereferenceable(1), i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 1
  %7 = bitcast %"class.blink::LineLayoutItem"* %6 to %"class.blink::LayoutText"**
  %8 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %7, align 8
  %9 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %5, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %8, i64 0, i32 7, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 1
  %18 = bitcast %"class.WTF::StringImpl"* %17 to i8*
  %19 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, %20
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 2
  %28 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %28, i64 0, i32 7, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = lshr i32 %30, 2
  %32 = trunc i32 %31 to i8
  %33 = and i8 %32, 1
  %34 = tail call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %26, i8* %22, i8 zeroext %33, i8* dereferenceable(1) %2, i32 %3) #13
  store i32 %34, i32* %5, align 4
  br label %66

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %8, i64 0, i32 0
  %37 = bitcast %"class.blink::LayoutText"* %8 to i1 (%"class.blink::LayoutObject"*)***
  %38 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, i64 81
  %40 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %36) #13
  br i1 %41, label %42, label %46

42:                                               ; preds = %35
  %43 = load i8, i8* %2, align 1, !range !2
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i32 2, i32 1
  store i32 %45, i32* %5, align 4
  store i8 1, i8* %2, align 1
  br label %66

46:                                               ; preds = %35
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %49 = bitcast %"class.WTF::StringImpl"* %48 to i16*
  %50 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %49, i64 %52
  %54 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 0, i32 4
  %55 = load i32, i32* %54, align 4
  %56 = sub nsw i32 %55, %51
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %1, i64 0, i32 2
  %59 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %59, i64 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = lshr i32 %61, 2
  %63 = trunc i32 %62 to i8
  %64 = and i8 %63, 1
  %65 = tail call i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64 %57, i16* %53, i8 zeroext %64, i8* dereferenceable(1) %2, i32 %3) #13
  store i32 %65, i32* %5, align 4
  br label %66

66:                                               ; preds = %42, %46, %16
  %67 = phi i32 [ %45, %42 ], [ %65, %46 ], [ %34, %16 ]
  %68 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp eq i32 %69, %71
  br i1 %72, label %80, label %73, !prof !9

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = zext i32 %69 to i64
  %77 = getelementptr inbounds i32, i32* %75, i64 %76
  store i32 %67, i32* %77, align 4
  %78 = load i32, i32* %68, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %68, align 4
  br label %82

80:                                               ; preds = %66
  %81 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2282"* %81, i32* nonnull dereferenceable(4) %5) #13
  br label %82

82:                                               ; preds = %73, %80
  %83 = load i32, i32* %5, align 4
  %84 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, %83
  store i32 %86, i32* %84, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #13
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ExpansionOpportunities33ComputeExpansionsForJustifiedTextEPNS_7BidiRunES2_RNS_10LayoutUnitES3_(%"class.blink::ExpansionOpportunities"*, %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"*, %"class.blink::LayoutUnit"* dereferenceable(4), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %162, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sge i32 %15, %4
  %17 = icmp eq %"struct.blink::BidiRun"* %1, null
  %18 = or i1 %16, %17
  br i1 %18, label %162, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::ExpansionOpportunities", %"class.blink::ExpansionOpportunities"* %0, i64 0, i32 0
  %21 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %23 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  %26 = bitcast %"class.logging::CheckError"* %9 to i8*
  br label %27

27:                                               ; preds = %19, %156
  %28 = phi i64 [ 0, %19 ], [ %157, %156 ]
  %29 = phi %"struct.blink::BidiRun"* [ %1, %19 ], [ %160, %156 ]
  %30 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %29, i64 0, i32 2
  %31 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %32 = icmp eq %"class.blink::InlineBox"* %31, null
  %33 = icmp eq %"struct.blink::BidiRun"* %29, %2
  %34 = or i1 %33, %32
  br i1 %34, label %156, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %29, i64 0, i32 1, i32 0
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = and i96 %40, 33554432
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %156, label %43

43:                                               ; preds = %35
  %44 = add i64 %28, 1
  %45 = trunc i64 %28 to i32
  %46 = call dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2282"* %20, i32 %45) #13
  %47 = load i32, i32* %46, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %22, align 8
  %48 = load i32, i32* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %49 = icmp ugt i32 %47, %48
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  store i8* null, i8** %22, align 8
  br label %58

51:                                               ; preds = %43
  %52 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #13
  %53 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %48) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0), i8* %52, i8* %53) #13
  %54 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  store i8* %54, i8** %22, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 104, %"class.logging::CheckOpResult"* nonnull %7) #13
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #13
  br label %58

58:                                               ; preds = %50, %51, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 5, i32 0
  %61 = bitcast %"class.blink::ComputedStyle"** %60 to %"class.blink::ComputedStyleBase"**
  %62 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %62, i64 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = and i160 %65, 520192
  %67 = icmp eq i160 %66, 8192
  br i1 %67, label %152, label %68

68:                                               ; preds = %58
  %69 = bitcast %"class.blink::InlineBox"** %30 to %"class.blink::InlineTextBox"**
  %70 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %69, align 8
  %71 = load i32, i32* %10, align 8
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 109, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0)) #13
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #13
  br label %75

75:                                               ; preds = %68, %73
  %76 = load i32, i32* %14, align 4
  %77 = icmp sgt i32 %76, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %76) #13
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !9
  %83 = icmp ugt i32 %47, 33554430
  %84 = shl i32 %47, 6
  %85 = select i1 %83, i32 2147483647, i32 %84
  %86 = sext i32 %82 to i64
  %87 = sext i32 %85 to i64
  %88 = mul nsw i64 %86, %87
  %89 = sdiv i64 %88, 64
  %90 = ashr i64 %89, 32
  %91 = trunc i64 %90 to i32
  %92 = trunc i64 %89 to i32
  %93 = ashr i32 %92, 31
  %94 = icmp eq i32 %93, %91
  br i1 %94, label %99, label %95

95:                                               ; preds = %75
  %96 = xor i32 %82, %85
  %97 = lshr i32 %96, 31
  %98 = add nuw i32 %97, 2147483647
  br label %99

99:                                               ; preds = %75, %95
  %100 = phi i32 [ %92, %75 ], [ %98, %95 ]
  %101 = load i32, i32* %10, align 8
  %102 = icmp ugt i32 %101, 33554430
  %103 = shl i32 %101, 6
  %104 = select i1 %102, i32 2147483647, i32 %103
  %105 = sext i32 %100 to i64
  %106 = shl nsw i64 %105, 6
  %107 = sext i32 %104 to i64
  %108 = sdiv i64 %106, %107
  %109 = call i1 @llvm.is.constant.i64(i64 %108) #13
  br i1 %109, label %117, label %110

110:                                              ; preds = %99
  %111 = icmp slt i64 %108, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = add i64 %108, 2147483648
  %114 = icmp ult i64 %113, 4294967296
  %115 = trunc i64 %108 to i32
  %116 = select i1 %114, i32 %115, i32 %112, !prof !10
  br label %123

117:                                              ; preds = %99
  %118 = icmp sgt i64 %108, 2147483647
  br i1 %118, label %123, label %119

119:                                              ; preds = %117
  %120 = icmp sgt i64 %108, -2147483648
  %121 = select i1 %120, i64 %108, i64 -2147483648
  %122 = trunc i64 %121 to i32
  br label %123

123:                                              ; preds = %110, %117, %119
  %124 = phi i32 [ %116, %110 ], [ %122, %119 ], [ 2147483647, %117 ]
  %125 = sdiv i32 %124, 64
  %126 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 7, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = lshr i32 %127, 12
  %129 = and i32 %128, 262080
  %130 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %70, i64 0, i32 0, i32 6, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %131, i32 %129) #13
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 -2147483648, i32 %134, !prof !9
  store i32 %135, i32* %130, align 4
  %136 = shl i32 %125, 18
  %137 = and i32 %136, 1073479680
  %138 = and i32 %127, -1073479681
  %139 = or i32 %137, %138
  store i32 %139, i32* %126, align 4
  %140 = shl nsw i32 %125, 6
  %141 = icmp slt i32 %124, -63
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %140) #13
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !9
  store i32 %146, i32* %130, align 4
  %147 = load i32, i32* %14, align 4
  %148 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %147, i32 %140) #13
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %142, i32 %150, !prof !9
  store i32 %151, i32* %14, align 4
  br label %152

152:                                              ; preds = %58, %123
  %153 = load i32, i32* %10, align 8
  %154 = sub i32 %153, %47
  store i32 %154, i32* %10, align 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %162, label %156

156:                                              ; preds = %152, %35, %27
  %157 = phi i64 [ %44, %152 ], [ %28, %35 ], [ %28, %27 ]
  %158 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %29, i64 0, i32 0, i32 2
  %159 = bitcast %"struct.blink::BidiCharacterRun"** %158 to %"struct.blink::BidiRun"**
  %160 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %159, align 8
  %161 = icmp eq %"struct.blink::BidiRun"* %160, null
  br i1 %161, label %162, label %27

162:                                              ; preds = %156, %152, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow37ComputeBlockDirectionPositionsForLineEPNS_13RootInlineBoxEPNS_7BidiRunERN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS5_6VectorIPKNS_14SimpleFontDataELj0ENS5_18PartitionAllocatorEEENS_13GlyphOverflowEEENS5_7PtrHashIS8_EENS5_10HashTraitsIS9_EENSM_ISJ_EESG_EERNS_21VerticalPositionCacheE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"*, %"struct.blink::BidiRun"* readonly, %"class.WTF::HashMap.2257"* dereferenceable(24), %"class.blink::VerticalPositionCache"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %16 = select i1 %13, i32* %14, i32* %15
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZN5blink13RootInlineBox26AlignBoxesInBlockDirectionENS_10LayoutUnitERN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EERNS_21VerticalPositionCacheE(%"class.blink::RootInlineBox"* %1, i32 %17, %"class.WTF::HashMap.2257"* dereferenceable(24) %3, %"class.blink::VerticalPositionCache"* dereferenceable(48) %4) #13
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 15211807202738752817960438464512
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %5
  %26 = load i32, i32* %14, align 4
  %27 = icmp eq i32 %26, %18
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  store i32 %18, i32* %14, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %6) #13
  br label %33

29:                                               ; preds = %5
  %30 = load i32, i32* %15, align 4
  %31 = icmp eq i32 %30, %18
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  store i32 %18, i32* %15, align 4
  tail call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %6) #13
  br label %33

33:                                               ; preds = %25, %28, %29, %32
  %34 = icmp eq %"struct.blink::BidiRun"* %2, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %81, %33
  ret void

36:                                               ; preds = %33, %81
  %37 = phi %"struct.blink::BidiRun"* [ %84, %81 ], [ %2, %33 ]
  %38 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %37, i64 0, i32 2
  %39 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %38, align 8
  %40 = icmp eq %"class.blink::InlineBox"* %39, null
  br i1 %40, label %81, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %37, i64 0, i32 1, i32 0
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 113336795588871485128704
  %48 = icmp eq i96 %47, 75557863725914323419136
  br i1 %48, label %49, label %65

49:                                               ; preds = %41
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = select i1 %55, i32* %14, i32* %15
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %39, i64 0, i32 7, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = and i32 %59, 2048
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %39, i64 0, i32 5, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %39, i64 0, i32 5, i32 1, i32 0
  %64 = select i1 %61, i32* %62, i32* %63
  store i32 %57, i32* %64, align 4
  br label %65

65:                                               ; preds = %49, %41
  %66 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %66, i64 0, i32 4
  %68 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %67 to i96*
  %69 = load i96, i96* %68, align 4
  %70 = and i96 %69, 33554432
  %71 = icmp eq i96 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::LayoutObject"* %66 to %"class.blink::LayoutText"*
  %74 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %38, align 8
  tail call void @_ZN5blink10LayoutText15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutText"* %73, %"class.blink::InlineBox"* %74) #13
  br label %81

75:                                               ; preds = %65
  %76 = and i96 %69, 67108864
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.blink::LayoutObject"* %66 to %"class.blink::LayoutBox"*
  %80 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %38, align 8
  tail call void @_ZN5blink9LayoutBox15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutBox"* %79, %"class.blink::InlineBox"* %80) #13
  br label %81

81:                                               ; preds = %75, %36, %72, %78
  %82 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %37, i64 0, i32 0, i32 2
  %83 = bitcast %"struct.blink::BidiCharacterRun"** %82 to %"struct.blink::BidiRun"**
  %84 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %83, align 8
  %85 = icmp eq %"struct.blink::BidiRun"* %84, null
  br i1 %85, label %35, label %36
}

declare i32 @_ZN5blink13RootInlineBox26AlignBoxesInBlockDirectionENS_10LayoutUnitERN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EERNS_21VerticalPositionCacheE(%"class.blink::RootInlineBox"*, i32, %"class.WTF::HashMap.2257"* dereferenceable(24), %"class.blink::VerticalPositionCache"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutText"*, %"class.blink::InlineBox"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow30AppendFloatingObjectToLastLineERNS_14FloatingObjectE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::FloatingObject"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"class.blink::InlineFlowBox"** %3 to %"class.blink::RootInlineBox"**
  %5 = bitcast %"class.blink::InlineFlowBox"** %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 1
  %8 = bitcast %"class.blink::RootInlineBox"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %1, i64 0, i32 0
  %11 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %10, align 8
  tail call void @_ZN5blink13RootInlineBox11AppendFloatEPNS_9LayoutBoxE(%"class.blink::RootInlineBox"* %9, %"class.blink::LayoutBox"* %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13RootInlineBox11AppendFloatEPNS_9LayoutBoxE(%"class.blink::RootInlineBox"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.1692", %"class.std::__1::unique_ptr.1692"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.1695"*, %"class.WTF::Vector.1695"** %5, align 8
  %7 = icmp eq %"class.WTF::Vector.1695"* %6, null
  %8 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  br i1 %7, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %6, i64 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %6, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %23, label %15, !prof !9

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %16, align 8
  %18 = zext i32 %11 to i64
  %19 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %17, i64 %18
  %20 = bitcast %"class.blink::LayoutBox"** %19 to i64*
  store i64 %8, i64* %20, align 8
  %21 = load i32, i32* %10, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %10, align 4
  br label %57

23:                                               ; preds = %9
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1695"* nonnull %6, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #13
  br label %57

24:                                               ; preds = %2
  %25 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #13
  %26 = bitcast i8* %25 to %"class.blink::LayoutBox"***
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 0, i32* %28, align 8
  %29 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 1) #13
  %30 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %29, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #13
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast i8* %25 to i64*
  store atomic i64 %31, i64* %32 monotonic, align 8
  %33 = lshr i64 %29, 3
  %34 = trunc i64 %33 to i32
  store i32 %34, i32* %28, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 1, i32* %36, align 4
  %37 = bitcast %"class.blink::LayoutBox"** %3 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast i8* %30 to i64*
  store i64 %38, i64* %39, align 8
  %40 = ptrtoint i8* %25 to i64
  %41 = load %"class.WTF::Vector.1695"*, %"class.WTF::Vector.1695"** %5, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.1692"* %4 to i64*
  store i64 %40, i64* %42, align 8
  %43 = icmp eq %"class.WTF::Vector.1695"* %41, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %24
  %45 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %41, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %45, align 8
  %47 = icmp eq %"class.blink::LayoutBox"** %46, null
  %48 = bitcast %"class.blink::LayoutBox"** %46 to i8*
  br i1 %47, label %55, label %49, !prof !10

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %41, i64 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !9

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #13
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %45, align 8
  br label %55

55:                                               ; preds = %54, %44
  %56 = bitcast %"class.WTF::Vector.1695"* %41 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %56) #13
  br label %57

57:                                               ; preds = %24, %55, %23, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow27CreateLineBoxesFromBidiRunsEjRNS_11BidiRunListINS_7BidiRunEEERKNS_14InlineIteratorERNS_8LineInfoERNS_21VerticalPositionCacheEPS2_RKN3WTF6VectorINS_15WordMeasurementELj64ENSD_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::BidiRunList"* nocapture readonly dereferenceable(32), %"class.blink::InlineIterator"* nocapture readonly dereferenceable(24), %"class.blink::LineInfo"* nocapture dereferenceable(12), %"class.blink::VerticalPositionCache"* dereferenceable(48), %"struct.blink::BidiRun"*, %"class.WTF::Vector.2273"* dereferenceable(4112)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.WTF::HashMap.2257", align 8
  %10 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %85, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = icmp eq %"class.blink::LayoutObject"* %15, null
  %17 = zext i1 %16 to i8
  %18 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 1
  store i8 %17, i8* %18, align 1
  %19 = tail call %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow13ConstructLineERNS_11BidiRunListINS_7BidiRunEEERKNS_8LineInfoE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %2, %"class.blink::LineInfo"* dereferenceable(12) %4)
  %20 = icmp eq %"class.blink::RootInlineBox"* %19, null
  br i1 %20, label %85, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %19, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %19, i64 0, i32 0, i32 0, i32 7, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %1, 2
  %26 = and i32 %25, 252
  %27 = and i32 %24, -253
  %28 = or i32 %27, %26
  store i32 %28, i32* %23, align 4
  %29 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !2
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 12
  %33 = and i32 %28, -4097
  %34 = or i32 %32, %33
  store i32 %34, i32* %23, align 4
  %35 = bitcast %"class.blink::RootInlineBox"* %19 to i1 (%"class.blink::InlineBox"*)***
  %36 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %36, i64 19
  %38 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::InlineBox"* %22) #13
  %40 = bitcast %"class.WTF::HashMap.2257"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.WTF::HashMap.2257", %"class.WTF::HashMap.2257"* %9, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::HashMap.2257", %"class.WTF::HashMap.2257"* %9, i64 0, i32 0, i32 1
  %43 = bitcast %"class.WTF::HashMap.2257"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 20, i1 false) #13
  %44 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %2, i64 0, i32 0
  %45 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %44, align 8
  br i1 %39, label %48, label %46

46:                                               ; preds = %21
  call void @_ZN5blink15LayoutBlockFlow38ComputeInlineDirectionPositionsForLineEPNS_13RootInlineBoxERKNS_8LineInfoEPNS_7BidiRunES7_bRN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS8_6VectorIPKNS_14SimpleFontDataELj0ENS8_18PartitionAllocatorEEENS_13GlyphOverflowEEENS8_7PtrHashISB_EENS8_10HashTraitsISC_EENSP_ISM_EESJ_EERNS_21VerticalPositionCacheERKNSF_INS_15WordMeasurementELj64ESJ_EE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull %19, %"class.blink::LineInfo"* dereferenceable(12) %4, %"struct.blink::BidiRun"* %45, %"struct.blink::BidiRun"* %6, i1 zeroext undef, %"class.WTF::HashMap.2257"* nonnull dereferenceable(24) %9, %"class.blink::VerticalPositionCache"* dereferenceable(48) %5, %"class.WTF::Vector.2273"* dereferenceable(4112) %7)
  %47 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %44, align 8
  call void @_ZN5blink15LayoutBlockFlow37ComputeBlockDirectionPositionsForLineEPNS_13RootInlineBoxEPNS_7BidiRunERN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS5_6VectorIPKNS_14SimpleFontDataELj0ENS5_18PartitionAllocatorEEENS_13GlyphOverflowEEENS5_7PtrHashIS8_EENS5_10HashTraitsIS9_EENSM_ISJ_EESG_EERNS_21VerticalPositionCacheE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull %19, %"struct.blink::BidiRun"* %47, %"class.WTF::HashMap.2257"* nonnull dereferenceable(24) %9, %"class.blink::VerticalPositionCache"* dereferenceable(48) %5)
  br label %50

48:                                               ; preds = %21
  call void @_ZN5blink15LayoutBlockFlow37ComputeBlockDirectionPositionsForLineEPNS_13RootInlineBoxEPNS_7BidiRunERN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS5_6VectorIPKNS_14SimpleFontDataELj0ENS5_18PartitionAllocatorEEENS_13GlyphOverflowEEENS5_7PtrHashIS8_EENS5_10HashTraitsIS9_EENSM_ISJ_EESG_EERNS_21VerticalPositionCacheE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull %19, %"struct.blink::BidiRun"* %45, %"class.WTF::HashMap.2257"* nonnull dereferenceable(24) %9, %"class.blink::VerticalPositionCache"* dereferenceable(48) %5)
  %49 = bitcast %"class.blink::RootInlineBox"* %19 to %"class.blink::SVGRootInlineBox"*
  call void @_ZN5blink16SVGRootInlineBox36ComputePerCharacterLayoutInformationEv(%"class.blink::SVGRootInlineBox"* nonnull %49) #13
  br label %50

50:                                               ; preds = %46, %48
  %51 = bitcast %"class.blink::RootInlineBox"* %19 to %"class.blink::InlineFlowBox"*
  %52 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %19, i64 0, i32 5, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %19, i64 0, i32 6, i32 0
  %55 = load i32, i32* %54, align 4
  call void @_ZN5blink13InlineFlowBox15ComputeOverflowENS_10LayoutUnitES1_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EE(%"class.blink::InlineFlowBox"* nonnull %51, i32 %53, i32 %55, %"class.WTF::HashMap.2257"* nonnull dereferenceable(24) %9) #13
  %56 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %41, align 8
  %57 = icmp eq %"struct.WTF::KeyValuePair.2261"* %56, null
  br i1 %57, label %84, label %58, !prof !10

58:                                               ; preds = %50
  %59 = load i32, i32* %42, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %82, label %61

61:                                               ; preds = %58
  %62 = zext i32 %59 to i64
  br label %63

63:                                               ; preds = %79, %61
  %64 = phi i64 [ 0, %61 ], [ %80, %79 ]
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %56, i64 %64, i32 0
  %66 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %65, align 8
  %67 = icmp eq %"class.blink::InlineTextBox"* %66, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %56, i64 %64, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %69, align 8
  %71 = icmp eq %"class.blink::SimpleFontData"** %70, null
  %72 = bitcast %"class.blink::SimpleFontData"** %70 to i8*
  br i1 %71, label %79, label %73, !prof !10

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %56, i64 %64, i32 1, i32 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77, !prof !9

77:                                               ; preds = %73
  store i32 0, i32* %74, align 4
  br label %78

78:                                               ; preds = %77, %73
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %69, align 8
  br label %79

79:                                               ; preds = %78, %68, %63
  %80 = add nuw nsw i64 %64, 1
  %81 = icmp eq i64 %80, %62
  br i1 %81, label %82, label %63

82:                                               ; preds = %79, %58
  %83 = bitcast %"struct.WTF::KeyValuePair.2261"* %56 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #13
  store %"struct.WTF::KeyValuePair.2261"* null, %"struct.WTF::KeyValuePair.2261"** %41, align 8
  br label %84

84:                                               ; preds = %50, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #13
  br label %85

85:                                               ; preds = %84, %13, %8
  %86 = phi %"class.blink::RootInlineBox"* [ null, %8 ], [ %19, %84 ], [ null, %13 ]
  ret %"class.blink::RootInlineBox"* %86
}

declare void @_ZN5blink16SVGRootInlineBox36ComputePerCharacterLayoutInformationEv(%"class.blink::SVGRootInlineBox"*) local_unnamed_addr #2

declare void @_ZN5blink13InlineFlowBox15ComputeOverflowENS_10LayoutUnitES1_RN3WTF7HashMapIPKNS_13InlineTextBoxENSt3__14pairINS2_6VectorIPKNS_14SimpleFontDataELj0ENS2_18PartitionAllocatorEEENS_13GlyphOverflowEEENS2_7PtrHashIS5_EENS2_10HashTraitsIS6_EENSJ_ISG_EESD_EE(%"class.blink::InlineFlowBox"*, i32, i32, %"class.WTF::HashMap.2257"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow19LayoutRunsAndFloatsERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BidiResolver", align 8
  %4 = alloca %"class.blink::InlineIterator", align 8
  %5 = alloca %"struct.blink::BidiStatus", align 8
  %6 = bitcast %"class.blink::BidiResolver"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 424, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 424, i1 false)
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 0, i32 3
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 1, i32 2
  %10 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 1, i32 3
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 2, i32 2
  %13 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 2, i32 3
  %15 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 3, i32 2
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 20, i1 false) #13
  %17 = bitcast i32* %15 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 10, i32 10>, <4 x i32>* %17, align 8
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 2
  store i32 10, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 5
  store i32 10, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 6, i32 2
  %23 = bitcast %"class.blink::InlineIterator"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %22, align 8
  %24 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 6, i32 3
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 7, i32 2
  %26 = bitcast i32* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 7, i32 3
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 8
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 9
  %30 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 9, i32 2
  %31 = bitcast %"class.blink::InlineIterator"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %30, align 8
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 9, i32 3
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 10
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 12
  %35 = bitcast %"class.blink::BidiRunList"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 28, i1 false) #13
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 13
  %37 = bitcast %"class.blink::MidpointState"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 25, i1 false) #13
  %38 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 14
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 15
  %40 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 1, i64 0
  %42 = bitcast %"class.WTF::Vector.2303"* %40 to i8**
  %43 = bitcast %"class.WTF::Vector.2298"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 25, i1 false) #13
  store i8* %41, i8** %42, align 8
  %44 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %44, align 8
  %45 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %3, i64 0, i32 20
  %47 = bitcast %"class.WTF::HashMap.2308"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 20, i1 false) #13
  %48 = call %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow22DetermineStartPositionERNS_15LineLayoutStateERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::BidiResolver"* nonnull dereferenceable(424) %3)
  %49 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %49, align 8
  %51 = icmp eq %"class.blink::FloatingObjects"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %50, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %50, i64 0, i32 0, i32 2
  %58 = bitcast %"class.WTF::MallocedListHashSetNode"** %57 to i64**
  %59 = load i64*, i64** %58, align 8
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 1
  %62 = bitcast %"class.blink::FloatingObject"** %61 to i64*
  store i64 %60, i64* %62, align 8
  br label %63

63:                                               ; preds = %52, %2, %56
  %64 = bitcast %"class.blink::InlineIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %4, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %65, align 8
  store i32 0, i32* %66, align 4
  %67 = bitcast %"struct.blink::BidiStatus"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  %68 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %5, i64 0, i32 0
  store i32 10, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %5, i64 0, i32 1
  store i32 10, i32* %69, align 4
  %70 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %5, i64 0, i32 2
  store i32 10, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %5, i64 0, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %71, align 8
  %72 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 8
  %73 = load i8, i8* %72, align 2, !range !2
  %74 = icmp eq i8 %73, 0
  %75 = icmp ne %"class.blink::RootInlineBox"* %48, null
  %76 = and i1 %75, %74
  br i1 %76, label %77, label %78

77:                                               ; preds = %63
  call void @_ZN5blink15LayoutBlockFlow20DetermineEndPositionERNS_15LineLayoutStateEPNS_13RootInlineBoxERNS_14InlineIteratorERNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::RootInlineBox"* nonnull %48, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %4, %"struct.blink::BidiStatus"* nonnull dereferenceable(24) %5)
  br label %78

78:                                               ; preds = %63, %77
  br i1 %75, label %79, label %86

79:                                               ; preds = %78, %79
  %80 = phi %"class.blink::RootInlineBox"* [ %83, %79 ], [ %48, %78 ]
  %81 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %80, i64 0, i32 0, i32 5
  %82 = bitcast %"class.blink::InlineFlowBox"** %81 to %"class.blink::RootInlineBox"**
  %83 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %82, align 8
  %84 = bitcast %"class.blink::RootInlineBox"* %80 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"* nonnull %84) #13
  %85 = icmp eq %"class.blink::RootInlineBox"* %83, null
  br i1 %85, label %86, label %79

86:                                               ; preds = %79, %78
  call void @_ZN5blink15LayoutBlockFlow26LayoutRunsAndFloatsInRangeERNS_15LineLayoutStateERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERKS4_RKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::BidiResolver"* nonnull dereferenceable(424) %3, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %4, %"struct.blink::BidiStatus"* nonnull dereferenceable(24) %5)
  call void @_ZN5blink15LayoutBlockFlow21LinkToEndLineIfNeededERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1)
  %87 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 0
  call void @_ZN5blink15LayoutBlockFlow35MarkDirtyFloatsForPaintInvalidationERN3WTF6VectorINS0_13FloatWithRectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"* %0, %"class.WTF::Vector.2288"* dereferenceable(16) %87)
  %88 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %71, align 8
  %89 = icmp eq %"class.blink::BidiContext"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %88) #13
  %95 = bitcast %"class.blink::BidiContext"* %88 to i8*
  call void @free(i8* %95) #13
  br label %96

96:                                               ; preds = %86, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #13
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 424, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow22DetermineStartPositionERNS_15LineLayoutStateERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* nocapture dereferenceable(64), %"class.blink::BidiResolver"* dereferenceable(424)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca i8*, align 8
  %6 = alloca %class.anon.2466, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.blink::LayoutUnit", align 4
  %10 = alloca %"struct.blink::BidiStatus", align 8
  %11 = alloca %"struct.blink::BidiStatus", align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 8
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %124

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 9
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = bitcast %"class.blink::LayoutUnit"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %9, i64 0, i32 0
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.blink::InlineFlowBox"** %22 to %"class.blink::RootInlineBox"**
  %24 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %23, align 8
  %25 = icmp eq %"class.blink::RootInlineBox"* %24, null
  br i1 %25, label %163, label %26

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast i64* %7 to %"class.blink::LayoutSize"*
  %30 = bitcast i64* %7 to i8*
  %31 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %32

32:                                               ; preds = %26, %118
  %33 = phi %"class.blink::RootInlineBox"* [ %24, %26 ], [ %121, %118 ]
  %34 = phi %"class.blink::RootInlineBox"* [ null, %26 ], [ %115, %118 ]
  %35 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 0, i32 0, i32 7, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 256
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %163

40:                                               ; preds = %32
  br i1 %19, label %75, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 10, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* %21, align 4
  %45 = icmp sgt i32 %43, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %44, i32 %43) #13
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !9
  store i32 %50, i32* %21, align 4
  call void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %33, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %9) #13
  %51 = load i32, i32* %21, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %75, label %53

53:                                               ; preds = %41
  %54 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %27, align 8
  %55 = icmp eq %"class.blink::FloatingObjects"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %54, i64 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %56, %53
  %61 = load i32, i32* %28, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %56, %60
  store i8 1, i8* %13, align 2
  br label %123

64:                                               ; preds = %60
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %65 = load i32, i32* %36, align 4
  %66 = and i32 %65, 2048
  %67 = icmp eq i32 %66, 0
  %68 = zext i32 %51 to i64
  %69 = shl nuw i64 %68, 32
  %70 = select i1 %67, i64 %68, i64 %69
  store i64 %70, i64* %7, align 8
  %71 = bitcast %"class.blink::RootInlineBox"* %33 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %72 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %72, i64 10
  %74 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %73, align 8
  call void %74(%"class.blink::InlineBox"* %35, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %29) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  br label %75

75:                                               ; preds = %41, %40, %64
  %76 = icmp eq %"class.blink::RootInlineBox"* %34, null
  br i1 %76, label %77, label %114

77:                                               ; preds = %75
  %78 = load i32, i32* %36, align 4
  %79 = and i32 %78, 4096
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %114, label %81

81:                                               ; preds = %77
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8
  %86 = and i160 %85, 41538374868278621028243970633760768
  %87 = icmp eq i160 %86, 0
  %88 = bitcast %"class.blink::RootInlineBox"* %33 to %"class.blink::InlineFlowBox"*
  br i1 %87, label %89, label %91

89:                                               ; preds = %81
  %90 = call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %88) #13
  br label %93

91:                                               ; preds = %81
  %92 = call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %88) #13
  br label %93

93:                                               ; preds = %91, %89
  %94 = phi %"class.blink::InlineBox"* [ %90, %89 ], [ %92, %91 ]
  %95 = icmp eq %"class.blink::InlineBox"* %94, null
  br i1 %95, label %114, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %94, i64 0, i32 4, i32 0
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = bitcast %"class.blink::LayoutObject"* %98 to i1 (%"class.blink::LayoutObject"*, i32)***
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %99, align 8
  %101 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, i64 92
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, align 8
  %103 = call zeroext i1 %102(%"class.blink::LayoutObject"* %98, i32 0) #13
  br i1 %103, label %104, label %114

104:                                              ; preds = %96
  %105 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %105, i64 0, i32 5, i32 0
  %107 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %107, i64 0, i32 0, i32 9
  %109 = bitcast [20 x i8]* %108 to i160*
  %110 = load i160, i160* %109, align 8
  %111 = and i160 %110, 2066035336255469780992
  %112 = icmp eq i160 %111, 0
  %113 = select i1 %112, %"class.blink::RootInlineBox"* null, %"class.blink::RootInlineBox"* %33
  br label %114

114:                                              ; preds = %104, %93, %96, %77, %75
  %115 = phi %"class.blink::RootInlineBox"* [ %34, %75 ], [ null, %77 ], [ null, %96 ], [ null, %93 ], [ %113, %104 ]
  %116 = load i8, i8* %13, align 2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %33, i64 0, i32 0, i32 5
  %120 = bitcast %"class.blink::InlineFlowBox"** %119 to %"class.blink::RootInlineBox"**
  %121 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %120, align 8
  %122 = icmp eq %"class.blink::RootInlineBox"* %121, null
  br i1 %122, label %163, label %32

123:                                              ; preds = %114, %63
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  br label %124

124:                                              ; preds = %3, %123
  %125 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 7
  %126 = load i8, i8* %125, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %162, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %130 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %129 to i96*
  %131 = load i96, i96* %130, align 4
  %132 = and i96 %131, 3
  %133 = icmp eq i96 %132, 0
  br i1 %133, label %134, label %162

134:                                              ; preds = %128
  %135 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135)
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason23kFloatDescendantChangedE, i64 0, i64 0), i8** %5, align 8
  %136 = and i96 %131, 1
  %137 = icmp eq i96 %136, 0
  br i1 %137, label %138, label %157

138:                                              ; preds = %134
  %139 = and i96 %131, 2
  %140 = icmp eq i96 %139, 0
  %141 = or i96 %131, 1
  store i96 %141, i96* %130, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %12, i32 1) #13
  %142 = load i96, i96* %130, align 4
  %143 = or i96 %142, 1180591620717411303424
  store i96 %143, i96* %130, align 4
  br i1 %140, label %144, label %161

144:                                              ; preds = %138
  %145 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %146 = and i8 %145, 25
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %161, label %148, !prof !10

148:                                              ; preds = %144
  %149 = bitcast %class.anon.2466* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #13
  %150 = getelementptr inbounds %class.anon.2466, %class.anon.2466* %6, i64 0, i32 0
  store %"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"** %150, align 8
  %151 = getelementptr inbounds %class.anon.2466, %class.anon.2466* %6, i64 0, i32 1
  store i8** %5, i8*** %151, align 8
  %152 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %153 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #13
  %154 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %155 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %155, i64* %154, align 8
  %156 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* null, i64 0, i32 %152, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), %class.anon.2466* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #13
  br label %161

157:                                              ; preds = %134
  %158 = or i96 %131, 1
  store i96 %158, i96* %130, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %12, i32 1) #13
  %159 = load i96, i96* %130, align 4
  %160 = or i96 %159, 1180591620717411303424
  store i96 %160, i96* %130, align 4
  br label %161

161:                                              ; preds = %144, %148, %138, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135)
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %12, i8 zeroext 3) #13
  br label %162

162:                                              ; preds = %128, %124, %161
  call void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"* %0) #13
  br label %216

163:                                              ; preds = %32, %118, %16
  %164 = phi %"class.blink::RootInlineBox"* [ null, %16 ], [ %34, %32 ], [ %115, %118 ]
  %165 = phi %"class.blink::RootInlineBox"* [ null, %16 ], [ %33, %32 ], [ null, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  %166 = icmp eq %"class.blink::RootInlineBox"* %164, null
  %167 = select i1 %166, %"class.blink::RootInlineBox"* %165, %"class.blink::RootInlineBox"* %164
  %168 = icmp eq %"class.blink::RootInlineBox"* %167, null
  br i1 %168, label %201, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %167, i64 0, i32 0, i32 4
  %171 = bitcast %"class.blink::InlineFlowBox"** %170 to %"class.blink::RootInlineBox"**
  %172 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %171, align 8
  %173 = icmp eq %"class.blink::RootInlineBox"* %172, null
  br i1 %173, label %211, label %174

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %172, i64 0, i32 0, i32 0, i32 7, i32 0
  %176 = load i32, i32* %175, align 4
  %177 = and i32 %176, 4096
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %200, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %172, i64 0, i32 2, i32 0
  %181 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %180, align 8
  %182 = icmp eq %"class.blink::LayoutObject"* %181, null
  br i1 %182, label %200, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %181, i64 0, i32 4
  %185 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %184 to i96*
  %186 = load i96, i96* %185, align 4
  %187 = and i96 %186, 33554432
  %188 = icmp eq i96 %187, 0
  br i1 %188, label %211, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %181, i64 1, i32 4, i32 0, i64 4
  %191 = bitcast i8* %190 to %"class.WTF::StringImpl"**
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %172, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 1
  %198 = load i32, i32* %197, align 4
  %199 = icmp ult i32 %196, %198
  br i1 %199, label %211, label %200

200:                                              ; preds = %179, %174, %189, %194
  br label %211

201:                                              ; preds = %163
  %202 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %203 = bitcast %"class.blink::InlineFlowBox"** %202 to %"class.blink::RootInlineBox"**
  %204 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %203, align 8
  %205 = icmp eq %"class.blink::RootInlineBox"* %204, null
  br i1 %205, label %216, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %204, i64 0, i32 0, i32 0, i32 7, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, 4096
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %216

211:                                              ; preds = %206, %183, %200, %194, %169
  %212 = phi %"class.blink::RootInlineBox"* [ %167, %183 ], [ %167, %169 ], [ %167, %194 ], [ %172, %200 ], [ %204, %206 ]
  %213 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %212, i64 0, i32 0, i32 4
  %214 = bitcast %"class.blink::InlineFlowBox"** %213 to %"class.blink::RootInlineBox"**
  %215 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %214, align 8
  br label %216

216:                                              ; preds = %201, %206, %211, %162
  %217 = phi %"class.blink::RootInlineBox"* [ null, %162 ], [ %215, %211 ], [ %204, %206 ], [ null, %201 ]
  %218 = phi %"class.blink::RootInlineBox"* [ null, %162 ], [ %212, %211 ], [ null, %206 ], [ null, %201 ]
  %219 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %320, label %222

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %224 = bitcast %"class.blink::InlineFlowBox"** %223 to %"class.blink::RootInlineBox"**
  %225 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %224, align 8
  %226 = icmp eq %"class.blink::RootInlineBox"* %225, %218
  br i1 %226, label %320, label %227

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %229 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %228 to i96*
  %230 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %231

231:                                              ; preds = %227, %314
  %232 = phi %"class.blink::RootInlineBox"* [ %225, %227 ], [ %318, %314 ]
  %233 = phi i32 [ 0, %227 ], [ %315, %314 ]
  %234 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %232, i64 0, i32 4, i32 0, i32 0, i32 0
  %235 = load %"class.WTF::Vector.1695"*, %"class.WTF::Vector.1695"** %234, align 8
  %236 = icmp eq %"class.WTF::Vector.1695"* %235, null
  br i1 %236, label %314, label %237

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %235, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %238, align 8
  %240 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %235, i64 0, i32 0, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = zext i32 %241 to i64
  %243 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %239, i64 %242
  %244 = icmp eq i32 %241, 0
  br i1 %244, label %314, label %245

245:                                              ; preds = %237
  %246 = shl nuw nsw i64 %242, 3
  %247 = add nuw nsw i64 %246, 34359738360
  %248 = lshr exact i64 %247, 3
  %249 = trunc i64 %248 to i32
  br label %250

250:                                              ; preds = %245, %298
  %251 = phi %"class.blink::LayoutBox"** [ %309, %298 ], [ %239, %245 ]
  %252 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %251, align 8
  %253 = call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %252) #13
  %254 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %253, i64 0, i32 1
  store %"class.blink::RootInlineBox"* %232, %"class.blink::RootInlineBox"** %254, align 8
  %255 = load i96, i96* %229, align 4
  %256 = trunc i96 %255 to i32
  %257 = icmp slt i32 %256, 0
  %258 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %252, i64 0, i32 2
  %259 = bitcast %"class.blink::LayoutRect"* %258 to i64*
  %260 = load i64, i64* %259, align 4
  %261 = lshr i64 %260, 32
  %262 = select i1 %257, i64 %261, i64 %260
  %263 = trunc i64 %262 to i32
  %264 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %252, i64 0, i32 0
  %265 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %230, align 8
  %266 = icmp eq %"class.blink::ComputedStyle"* %265, null
  %267 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %252, i64 0, i32 0, i32 0, i32 5, i32 0
  %268 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %267, align 8
  %269 = select i1 %266, %"class.blink::ComputedStyle"* %268, %"class.blink::ComputedStyle"* %265
  %270 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %269, i64 0, i32 0, i32 9
  %271 = bitcast [20 x i8]* %270 to i160*
  %272 = load i160, i160* %271, align 8, !noalias !23
  %273 = lshr i160 %272, 102
  %274 = trunc i160 %273 to i8
  %275 = and i8 %274, 3
  %276 = bitcast %"class.blink::LayoutBox"* %252 to i8*
  switch i8 %275, label %277 [
    i8 0, label %286
    i8 1, label %278
  ]

277:                                              ; preds = %250
  br label %278

278:                                              ; preds = %277, %250
  %279 = phi { i64, i64 } [ { i64 1033, i64 0 }, %277 ], [ { i64 1041, i64 0 }, %250 ]
  %280 = extractvalue { i64, i64 } %279, 0
  %281 = extractvalue { i64, i64 } %279, 1
  %282 = getelementptr inbounds i8, i8* %276, i64 %281
  %283 = bitcast i8* %282 to %"class.blink::LayoutBoxModelObject"*
  %284 = and i64 %280, 1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %296, label %286

286:                                              ; preds = %278, %250
  %287 = phi %"class.blink::LayoutBoxModelObject"* [ %283, %278 ], [ %264, %250 ]
  %288 = phi i8* [ %282, %278 ], [ %276, %250 ]
  %289 = phi i64 [ %280, %278 ], [ 1017, %250 ]
  %290 = bitcast i8* %288 to i8**
  %291 = load i8*, i8** %290, align 8
  %292 = add i64 %289, -1
  %293 = getelementptr i8, i8* %291, i64 %292
  %294 = bitcast i8* %293 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %295 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %294, align 8
  br label %298

296:                                              ; preds = %278
  %297 = inttoptr i64 %280 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %298

298:                                              ; preds = %286, %296
  %299 = phi %"class.blink::LayoutBoxModelObject"* [ %287, %286 ], [ %283, %296 ]
  %300 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %295, %286 ], [ %297, %296 ]
  %301 = call i32 %300(%"class.blink::LayoutBoxModelObject"* %299) #13
  %302 = icmp sgt i32 %301, -1
  %303 = select i1 %302, i32 -2147483648, i32 2147483647
  %304 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %263, i32 %301) #13
  %305 = extractvalue { i32, i1 } %304, 1
  %306 = extractvalue { i32, i1 } %304, 0
  %307 = select i1 %305, i32 %303, i32 %306, !prof !9
  %308 = call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %307, %"class.blink::LineWidth"* null) #13
  %309 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %251, i64 1
  %310 = icmp eq %"class.blink::LayoutBox"** %309, %243
  br i1 %310, label %311, label %250

311:                                              ; preds = %298
  %312 = add i32 %233, 1
  %313 = add i32 %312, %249
  br label %314

314:                                              ; preds = %311, %237, %231
  %315 = phi i32 [ %233, %231 ], [ %233, %237 ], [ %313, %311 ]
  %316 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %232, i64 0, i32 0, i32 5
  %317 = bitcast %"class.blink::InlineFlowBox"** %316 to %"class.blink::RootInlineBox"**
  %318 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %317, align 8
  %319 = icmp eq %"class.blink::RootInlineBox"* %318, %218
  br i1 %319, label %320, label %231

320:                                              ; preds = %314, %222, %216
  %321 = phi i32 [ 0, %216 ], [ 0, %222 ], [ %315, %314 ]
  %322 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 4
  store i32 %321, i32* %322, align 4
  %323 = icmp ne %"class.blink::RootInlineBox"* %217, null
  %324 = xor i1 %323, true
  %325 = zext i1 %324 to i8
  %326 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 0
  store i8 %325, i8* %326, align 4
  br i1 %323, label %327, label %398

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %217, i64 0, i32 0, i32 0, i32 7, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = lshr i32 %329, 12
  %331 = trunc i32 %330 to i8
  %332 = and i8 %331, 1
  %333 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 3
  store i8 %332, i8* %333, align 1
  %334 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %335 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %217, i64 0, i32 8, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %338 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %338, i64 0, i32 0, i32 9
  %340 = bitcast [20 x i8]* %339 to i160*
  %341 = load i160, i160* %340, align 8
  %342 = and i160 %341, 15211807202738752817960438464512
  %343 = icmp eq i160 %342, 0
  br i1 %343, label %344, label %349

344:                                              ; preds = %327
  %345 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %346, %336
  br i1 %347, label %354, label %348

348:                                              ; preds = %344
  store i32 %336, i32* %345, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %334) #13
  br label %354

349:                                              ; preds = %327
  %350 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, %336
  br i1 %352, label %354, label %353

353:                                              ; preds = %349
  store i32 %336, i32* %350, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %334) #13
  br label %354

354:                                              ; preds = %344, %348, %349, %353
  %355 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %217, i64 0, i32 2, i32 0
  %356 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %217, i64 0, i32 1
  %358 = load i32, i32* %357, align 4
  %359 = icmp eq %"class.blink::LayoutObject"* %356, null
  br i1 %359, label %391, label %360

360:                                              ; preds = %354, %386
  %361 = phi i32 [ %387, %386 ], [ 0, %354 ]
  %362 = phi %"class.blink::LayoutObject"* [ %389, %386 ], [ %356, %354 ]
  %363 = icmp eq %"class.blink::LayoutObject"* %362, %12
  br i1 %363, label %391, label %364

364:                                              ; preds = %360
  %365 = bitcast %"class.blink::LayoutObject"* %362 to i1 (%"class.blink::LayoutObject"*)***
  %366 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %365, align 8
  %367 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %366, i64 26
  %368 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %367, align 8
  %369 = call zeroext i1 %368(%"class.blink::LayoutObject"* nonnull %362) #13
  br i1 %369, label %370, label %386

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %362, i64 0, i32 5, i32 0
  %372 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %372, i64 0, i32 0, i32 9
  %374 = bitcast [20 x i8]* %373 to i160*
  %375 = load i160, i160* %374, align 8
  %376 = lshr i160 %375, 86
  %377 = trunc i160 %376 to i32
  %378 = and i32 %377, 7
  %379 = add nsw i32 %378, -3
  %380 = icmp ult i32 %379, 3
  %381 = and i160 %375, 2854495385411919762116571938898990272765493248
  %382 = icmp eq i160 %381, 0
  %383 = and i1 %382, %380
  %384 = zext i1 %383 to i32
  %385 = add i32 %361, %384
  br label %386

386:                                              ; preds = %370, %364
  %387 = phi i32 [ %361, %364 ], [ %385, %370 ]
  %388 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %362, i64 0, i32 7
  %389 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %388, align 8
  %390 = icmp eq %"class.blink::LayoutObject"* %389, null
  br i1 %390, label %391, label %360

391:                                              ; preds = %360, %386, %354
  %392 = phi i32 [ 0, %354 ], [ %361, %360 ], [ %387, %386 ]
  %393 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"** %393, align 8
  %394 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::LayoutObject"* %356, %"class.blink::LayoutObject"** %394, align 8
  %395 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 2
  store i32 -1, i32* %395, align 8
  %396 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 3
  store i32 %358, i32* %396, align 4
  %397 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  store i32 %392, i32* %397, align 8
  call void @_ZNK5blink13RootInlineBox19LineBreakBidiStatusEv(%"struct.blink::BidiStatus"* nonnull sret %10, %"class.blink::RootInlineBox"* nonnull %217) #13
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* %2, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %10)
  br label %582

398:                                              ; preds = %320
  %399 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 3
  store i8 1, i8* %399, align 1
  %400 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %401 = bitcast %"class.blink::ComputedStyle"** %400 to %"class.blink::ComputedStyleBase"**
  %402 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %401, align 8
  %403 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %402, i64 0, i32 9
  %404 = bitcast [20 x i8]* %403 to i160*
  %405 = load i160, i160* %404, align 8
  %406 = lshr i160 %405, 115
  %407 = trunc i160 %406 to i8
  %408 = and i8 %407, 1
  %409 = and i160 %405, 541598767187353870268366848
  %410 = icmp eq i160 %409, 309485009821345068724781056
  %411 = lshr i160 %405, 86
  %412 = trunc i160 %411 to i32
  br i1 %410, label %413, label %421

413:                                              ; preds = %398
  %414 = call zeroext i8 @_ZN5blink32DeterminePlaintextDirectionalityENS_14LineLayoutItemES0_j(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"* null, i32 0) #13
  %415 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %401, align 8
  %416 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %415, i64 0, i32 9
  %417 = bitcast [20 x i8]* %416 to i160*
  %418 = load i160, i160* %417, align 8
  %419 = lshr i160 %418, 86
  %420 = trunc i160 %419 to i32
  br label %421

421:                                              ; preds = %398, %413
  %422 = phi i32 [ %420, %413 ], [ %412, %398 ]
  %423 = phi i8 [ %414, %413 ], [ %408, %398 ]
  %424 = and i32 %422, 7
  %425 = icmp eq i32 %424, 2
  %426 = icmp eq i32 %424, 5
  %427 = or i1 %425, %426
  %428 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %11, i64 0, i32 3
  %429 = icmp ne i8 %423, 0
  %430 = zext i1 %429 to i32
  %431 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %11, i64 0, i32 2
  store i32 %430, i32* %431, align 8
  %432 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %11, i64 0, i32 1
  store i32 %430, i32* %432, align 4
  %433 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %11, i64 0, i32 0
  store i32 %430, i32* %433, align 8
  %434 = zext i1 %429 to i8
  %435 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %434, i32 %430, i1 zeroext %427, i32 0, %"class.blink::BidiContext"* null) #13
  %436 = ptrtoint %"class.blink::BidiContext"* %435 to i64
  %437 = bitcast %class.scoped_refptr.1691* %428 to i64*
  store i64 %436, i64* %437, align 8
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* %2, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %11)
  %438 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12
  %439 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 2, i32 6
  %440 = bitcast %"class.blink::UntracedMember"* %439 to %"class.blink::LayoutObject"**
  %441 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %440, align 8
  %442 = ptrtoint %"class.blink::LayoutObject"* %441 to i64
  %443 = icmp eq %"class.blink::LayoutObject"* %441, null
  br i1 %443, label %574, label %444

444:                                              ; preds = %421
  %445 = bitcast %"class.blink::LayoutObject"* %441 to i1 (%"class.blink::LayoutObject"*)***
  %446 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %445, align 8
  %447 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %446, i64 26
  %448 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %447, align 8
  %449 = call zeroext i1 %448(%"class.blink::LayoutObject"* nonnull %441) #13
  br i1 %449, label %450, label %518

450:                                              ; preds = %444
  %451 = icmp eq %"class.blink::BidiResolver"* %2, null
  br i1 %451, label %510, label %452

452:                                              ; preds = %450
  %453 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %445, align 8
  %454 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %453, i64 26
  %455 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %454, align 8
  %456 = call zeroext i1 %455(%"class.blink::LayoutObject"* nonnull %441) #13
  br i1 %456, label %457, label %510

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %441, i64 0, i32 5, i32 0
  %459 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %458, align 8
  %460 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %459, i64 0, i32 0, i32 9
  %461 = bitcast [20 x i8]* %460 to i160*
  %462 = load i160, i160* %461, align 8
  %463 = lshr i160 %462, 86
  %464 = trunc i160 %463 to i32
  %465 = and i32 %464, 7
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %510, label %467

467:                                              ; preds = %457
  %468 = add nsw i32 %465, -3
  %469 = icmp ult i32 %468, 3
  %470 = and i160 %462, 2854495385411919762116571938898990272765493248
  %471 = icmp eq i160 %470, 0
  %472 = and i1 %471, %469
  br i1 %472, label %473, label %478

473:                                              ; preds = %467
  %474 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %438) #13
  %475 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  %476 = load i32, i32* %475, align 8
  %477 = add i32 %476, 1
  store i32 %477, i32* %475, align 8
  br label %510

478:                                              ; preds = %467
  %479 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  %480 = load i32, i32* %479, align 8
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %510

482:                                              ; preds = %478
  %483 = icmp eq i32 %465, 1
  %484 = and i160 %462, 41538374868278621028243970633760768
  %485 = icmp ne i160 %484, 0
  %486 = select i1 %485, i32 14, i32 11
  %487 = select i1 %485, i32 15, i32 12
  %488 = select i1 %483, i32 %486, i32 %487
  %489 = bitcast i64* %8 to %"class.blink::BidiEmbedding"*
  %490 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19
  %491 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %491) #13
  %492 = bitcast i64* %8 to i32*
  store i32 %488, i32* %492, align 8
  %493 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %489, i64 0, i32 1
  store i32 0, i32* %493, align 4
  %494 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 2
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 1
  %497 = load i32, i32* %496, align 8
  %498 = icmp eq i32 %495, %497
  br i1 %498, label %508, label %499, !prof !9

499:                                              ; preds = %482
  %500 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %490, i64 0, i32 0, i32 0, i32 0
  %501 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %500, align 8
  %502 = zext i32 %495 to i64
  %503 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %501, i64 %502
  %504 = bitcast %"class.blink::BidiEmbedding"* %503 to i64*
  %505 = load i64, i64* %8, align 8
  store i64 %505, i64* %504, align 4
  %506 = load i32, i32* %494, align 4
  %507 = add i32 %506, 1
  store i32 %507, i32* %494, align 4
  br label %509

508:                                              ; preds = %482
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2303"* %490, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %489) #13
  br label %509

509:                                              ; preds = %508, %499
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %491) #13
  br label %510

510:                                              ; preds = %509, %478, %473, %457, %452, %450
  %511 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %441) #13
  br i1 %511, label %515, label %512

512:                                              ; preds = %510
  %513 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL14BidiNextSharedINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_NS_19EmptyInlineBehaviorEPb(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"* nonnull %441, %"class.blink::BidiResolver"* %2, i32 0, i8* null) #13
  %514 = ptrtoint %"class.blink::LayoutObject"* %513 to i64
  br label %518

515:                                              ; preds = %510
  br i1 %451, label %539, label %516

516:                                              ; preds = %515
  %517 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %438) #13
  br label %539

518:                                              ; preds = %512, %444
  %519 = phi i64 [ %514, %512 ], [ %442, %444 ]
  %520 = inttoptr i64 %519 to %"class.blink::LayoutObject"*
  %521 = icmp eq i64 %519, 0
  br i1 %521, label %534, label %522

522:                                              ; preds = %518
  %523 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %520, i64 0, i32 4
  %524 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %523 to i96*
  %525 = load i96, i96* %524, align 4
  %526 = and i96 %525, 113336795588871485128704
  %527 = icmp eq i96 %526, 75557863725914323419136
  %528 = and i96 %525, 1115684864
  %529 = icmp ne i96 %528, 0
  %530 = or i1 %529, %527
  br i1 %530, label %534, label %531

531:                                              ; preds = %522
  %532 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL14BidiNextSharedINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_NS_19EmptyInlineBehaviorEPb(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"* nonnull %520, %"class.blink::BidiResolver"* %2, i32 0, i8* null) #13
  %533 = ptrtoint %"class.blink::LayoutObject"* %532 to i64
  br label %534

534:                                              ; preds = %531, %522, %518
  %535 = phi i64 [ %533, %531 ], [ 0, %518 ], [ %519, %522 ]
  %536 = icmp eq %"class.blink::BidiResolver"* %2, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %534
  %538 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %438) #13
  br label %539

539:                                              ; preds = %515, %516, %534, %537
  %540 = phi i64 [ %442, %515 ], [ %442, %516 ], [ %535, %534 ], [ %535, %537 ]
  %541 = inttoptr i64 %540 to %"class.blink::LayoutObject"*
  %542 = icmp eq i64 %540, 0
  br i1 %542, label %574, label %543

543:                                              ; preds = %539, %569
  %544 = phi i32 [ %570, %569 ], [ 0, %539 ]
  %545 = phi %"class.blink::LayoutObject"* [ %572, %569 ], [ %541, %539 ]
  %546 = icmp eq %"class.blink::LayoutObject"* %545, %12
  br i1 %546, label %574, label %547

547:                                              ; preds = %543
  %548 = bitcast %"class.blink::LayoutObject"* %545 to i1 (%"class.blink::LayoutObject"*)***
  %549 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %548, align 8
  %550 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %549, i64 26
  %551 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %550, align 8
  %552 = call zeroext i1 %551(%"class.blink::LayoutObject"* nonnull %545) #13
  br i1 %552, label %553, label %569

553:                                              ; preds = %547
  %554 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %545, i64 0, i32 5, i32 0
  %555 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %554, align 8
  %556 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %555, i64 0, i32 0, i32 9
  %557 = bitcast [20 x i8]* %556 to i160*
  %558 = load i160, i160* %557, align 8
  %559 = lshr i160 %558, 86
  %560 = trunc i160 %559 to i32
  %561 = and i32 %560, 7
  %562 = add nsw i32 %561, -3
  %563 = icmp ult i32 %562, 3
  %564 = and i160 %558, 2854495385411919762116571938898990272765493248
  %565 = icmp eq i160 %564, 0
  %566 = and i1 %565, %563
  %567 = zext i1 %566 to i32
  %568 = add i32 %544, %567
  br label %569

569:                                              ; preds = %553, %547
  %570 = phi i32 [ %544, %547 ], [ %568, %553 ]
  %571 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %545, i64 0, i32 7
  %572 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %571, align 8
  %573 = icmp eq %"class.blink::LayoutObject"* %572, null
  br i1 %573, label %574, label %543

574:                                              ; preds = %543, %569, %421, %539
  %575 = phi %"class.blink::LayoutObject"* [ null, %539 ], [ null, %421 ], [ %541, %569 ], [ %541, %543 ]
  %576 = phi i32 [ 0, %539 ], [ 0, %421 ], [ %544, %543 ], [ %570, %569 ]
  %577 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject"** %577, align 8
  %578 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::LayoutObject"* %575, %"class.blink::LayoutObject"** %578, align 8
  %579 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 2
  store i32 -1, i32* %579, align 8
  %580 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 3
  store i32 0, i32* %580, align 4
  %581 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  store i32 %576, i32* %581, align 8
  br label %582

582:                                              ; preds = %574, %391
  ret %"class.blink::RootInlineBox"* %218
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20DetermineEndPositionERNS_15LineLayoutStateEPNS_13RootInlineBoxERNS_14InlineIteratorERNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* nocapture dereferenceable(64), %"class.blink::RootInlineBox"* nocapture readonly, %"class.blink::InlineIterator"* nocapture dereferenceable(24), %"struct.blink::BidiStatus"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::BidiStatus", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %2, i64 0, i32 0, i32 5
  %9 = bitcast %"class.blink::InlineFlowBox"** %8 to %"class.blink::RootInlineBox"**
  %10 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %9, align 8
  %11 = icmp eq %"class.blink::RootInlineBox"* %10, null
  br i1 %11, label %129, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  br label %14

14:                                               ; preds = %12, %66
  %15 = phi %"class.blink::RootInlineBox"* [ %10, %12 ], [ %71, %66 ]
  %16 = phi %"class.blink::RootInlineBox"* [ null, %12 ], [ %68, %66 ]
  %17 = phi i1 [ false, %12 ], [ %67, %66 ]
  %18 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %15, i64 0, i32 0, i32 0, i32 7, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 4352
  %21 = icmp eq i32 %20, 4096
  br i1 %21, label %22, label %54

22:                                               ; preds = %14
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 41538374868278621028243970633760768
  %28 = icmp eq i160 %27, 0
  %29 = bitcast %"class.blink::RootInlineBox"* %15 to %"class.blink::InlineFlowBox"*
  br i1 %28, label %30, label %32

30:                                               ; preds = %22
  %31 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %29) #13
  br label %34

32:                                               ; preds = %22
  %33 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* nonnull %29) #13
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi %"class.blink::InlineBox"* [ %31, %30 ], [ %33, %32 ]
  %36 = icmp eq %"class.blink::InlineBox"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %35, i64 0, i32 4, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*, i32)***
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %39, i32 0) #13
  br i1 %44, label %45, label %54

45:                                               ; preds = %37
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 5, i32 0
  %48 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %48, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8
  %52 = and i160 %51, 2066035336255469780992
  %53 = icmp eq i160 %52, 0
  br i1 %53, label %54, label %129

54:                                               ; preds = %14, %45, %34, %37
  %55 = load i32, i32* %18, align 4
  %56 = and i32 %55, 256
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %66

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::Vector.1695"*, %"class.WTF::Vector.1695"** %59, align 8
  %61 = icmp eq %"class.WTF::Vector.1695"* %60, null
  %62 = or i1 %17, %61
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = icmp eq %"class.blink::RootInlineBox"* %16, null
  %65 = select i1 %64, %"class.blink::RootInlineBox"* %15, %"class.blink::RootInlineBox"* %16
  br label %66

66:                                               ; preds = %54, %58, %63
  %67 = phi i1 [ true, %63 ], [ false, %58 ], [ false, %54 ]
  %68 = phi %"class.blink::RootInlineBox"* [ %65, %63 ], [ null, %58 ], [ null, %54 ]
  %69 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %15, i64 0, i32 0, i32 5
  %70 = bitcast %"class.blink::InlineFlowBox"** %69 to %"class.blink::RootInlineBox"**
  %71 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %70, align 8
  %72 = icmp eq %"class.blink::RootInlineBox"* %71, null
  br i1 %72, label %73, label %14

73:                                               ; preds = %66
  %74 = icmp eq %"class.blink::RootInlineBox"* %68, null
  br i1 %74, label %129, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %68, i64 0, i32 0, i32 4
  %77 = bitcast %"class.blink::InlineFlowBox"** %76 to %"class.blink::RootInlineBox"**
  %78 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %78, i64 0, i32 2, i32 0
  %80 = bitcast %"class.blink::LayoutObject"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %78, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %86 = bitcast %"class.blink::LayoutObject"** %85 to i64*
  store i64 %81, i64* %86, align 8
  %87 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 2
  store i32 -1, i32* %87, align 8
  %88 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 3
  store i32 %83, i32* %88, align 4
  %89 = bitcast %"struct.blink::BidiStatus"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #13
  call void @_ZNK5blink13RootInlineBox19LineBreakBidiStatusEv(%"struct.blink::BidiStatus"* nonnull sret %6, %"class.blink::RootInlineBox"* %78) #13
  %90 = bitcast %"struct.blink::BidiStatus"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %89, i64 12, i1 false) #13
  %91 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 3
  %92 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 3
  %93 = getelementptr inbounds %class.scoped_refptr.1691, %class.scoped_refptr.1691* %92, i64 0, i32 0
  %94 = bitcast %class.scoped_refptr.1691* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %93, align 8
  %96 = bitcast %class.scoped_refptr.1691* %91 to i64*
  %97 = getelementptr inbounds %class.scoped_refptr.1691, %class.scoped_refptr.1691* %91, i64 0, i32 0
  %98 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.blink::BidiContext"* %98, null
  br i1 %99, label %106, label %100

100:                                              ; preds = %75
  %101 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw sub i32* %101, i32 1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %98) #13
  %105 = bitcast %"class.blink::BidiContext"* %98 to i8*
  call void @free(i8* %105) #13
  br label %106

106:                                              ; preds = %75, %100, %104
  %107 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 3, i32 0
  %108 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %107, align 8
  %109 = icmp eq %"class.blink::BidiContext"* %108, null
  br i1 %109, label %116, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw sub i32* %111, i32 1 acq_rel
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %108) #13
  %115 = bitcast %"class.blink::BidiContext"* %108 to i8*
  call void @free(i8* %115) #13
  br label %116

116:                                              ; preds = %114, %110, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #13
  %117 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %78, i64 0, i32 8, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 5, i32 0
  store i32 %118, i32* %119, align 8
  br label %122

120:                                              ; preds = %122
  %121 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  store %"class.blink::RootInlineBox"* %68, %"class.blink::RootInlineBox"** %121, align 8
  br label %129

122:                                              ; preds = %116, %122
  %123 = phi %"class.blink::RootInlineBox"* [ %127, %122 ], [ %68, %116 ]
  %124 = bitcast %"class.blink::RootInlineBox"* %123 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink13InlineFlowBox11ExtractLineEv(%"class.blink::InlineFlowBox"* nonnull %124) #13
  %125 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %123, i64 0, i32 0, i32 5
  %126 = bitcast %"class.blink::InlineFlowBox"** %125 to %"class.blink::RootInlineBox"**
  %127 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %126, align 8
  %128 = icmp eq %"class.blink::RootInlineBox"* %127, null
  br i1 %128, label %120, label %122

129:                                              ; preds = %45, %5, %73, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26LayoutRunsAndFloatsInRangeERNS_15LineLayoutStateERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERKS4_RKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* dereferenceable(64), %"class.blink::BidiResolver"* dereferenceable(424), %"class.blink::InlineIterator"* nocapture readonly dereferenceable(24), %"struct.blink::BidiStatus"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.blink::InlineIterator", align 8
  %9 = alloca %"struct.blink::LayoutTextInfo", align 8
  %10 = alloca %"class.blink::VerticalPositionCache", align 8
  %11 = alloca %"class.blink::LineBreaker", align 8
  %12 = alloca %"class.WTF::Vector.2273", align 8
  %13 = alloca %"class.blink::InlineIterator", align 8
  %14 = alloca %"struct.blink::BidiStatus", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.blink::LayoutUnit", align 4
  %17 = alloca %"class.blink::BidiResolver", align 8
  %18 = alloca %"struct.blink::BidiStatus", align 8
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %5, %25
  %26 = phi %"class.blink::LayoutObject"* [ %28, %25 ], [ %19, %5 ]
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 6, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %25, label %32

32:                                               ; preds = %25, %5
  %33 = phi %"class.blink::Node"* [ %23, %5 ], [ %30, %25 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 113
  %39 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %39, i64 0, i32 3
  %41 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutState"* %41, null
  br i1 %42, label %65, label %43

43:                                               ; preds = %32
  br i1 %24, label %44, label %51

44:                                               ; preds = %43, %44
  %45 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %19, %43 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %43
  %52 = phi %"class.blink::Node"* [ %23, %43 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %56, i64 0, i32 113
  %58 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %58, i64 0, i32 3
  %60 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %60, i64 0, i32 0
  %62 = load i8, i8* %61, align 8
  %63 = and i8 %62, 1
  %64 = icmp ne i8 %63, 0
  br label %65

65:                                               ; preds = %32, %51
  %66 = phi i1 [ false, %32 ], [ %64, %51 ]
  %67 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 9
  %68 = load i8, i8* %67, align 1, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 8
  %72 = load i8, i8* %71, align 2, !range !2
  %73 = icmp ne i8 %72, 0
  br label %74

74:                                               ; preds = %65, %70
  %75 = phi i1 [ true, %65 ], [ %73, %70 ]
  %76 = bitcast %"class.blink::InlineIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 2
  %80 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 3
  %81 = bitcast %"class.blink::BidiResolver"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* align 8 %81, i64 24, i1 false)
  %82 = bitcast %"struct.blink::LayoutTextInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %82) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 72, i1 false)
  %83 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 5, i32 0
  store i16* null, i16** %83, align 8
  %84 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 5, i32 1
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 6
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 7
  store i32 0, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 8
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 2
  store %"class.blink::Font"* null, %"class.blink::Font"** %88, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 36, i1 false) #13
  %89 = bitcast %"class.blink::VerticalPositionCache"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %89) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 48, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 20, i1 false) #13
  %90 = getelementptr inbounds %"class.blink::VerticalPositionCache", %"class.blink::VerticalPositionCache"* %10, i64 0, i32 1
  %91 = bitcast %"class.WTF::HashMap.2268"* %90 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 20, i1 false) #13
  %92 = bitcast %"class.blink::LineBreaker"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #13
  %93 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 1
  %94 = bitcast i8* %93 to i64*
  store i64 -6148914691236517206, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 3
  %97 = bitcast %"class.WTF::Vector.2313"* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #13
  call void @_ZN5blink11LineBreaker5ResetEv(%"class.blink::LineBreaker"* nonnull %11) #13
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %99 = icmp eq %"class.blink::LayoutObject"* %98, null
  br i1 %99, label %788, label %100

100:                                              ; preds = %74
  %101 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  %102 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 6
  %103 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 13, i32 1
  %104 = bitcast i32* %103 to i8*
  %105 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3
  %106 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 2
  %107 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 4
  %108 = bitcast %"class.blink::InlineIterator"* %8 to i64*
  %109 = bitcast %"class.blink::LayoutObject"** %78 to i64*
  %110 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 3
  %111 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::Vector.2273"* %12 to i8*
  %113 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0, i32 1, i64 0
  %114 = bitcast %"class.WTF::Vector.2273"* %12 to i8**
  %115 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0, i32 0, i32 2
  %117 = bitcast %"class.blink::InlineIterator"* %13 to i8*
  %118 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 3, i64 0
  %119 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 3, i64 1
  %120 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  %121 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %122 = bitcast %"class.blink::InlineFlowBox"** %121 to %"class.blink::RootInlineBox"**
  %123 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4
  %124 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12
  %125 = getelementptr inbounds %"class.blink::BidiRunList", %"class.blink::BidiRunList"* %124, i64 0, i32 0
  %126 = bitcast %"class.blink::BidiRunList"* %124 to i8*
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %128 = bitcast [20 x i8]* %127 to i160*
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 3, i32 0
  %130 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 3
  %132 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %14, i64 0, i32 3
  %133 = getelementptr inbounds %class.scoped_refptr.1691, %class.scoped_refptr.1691* %132, i64 0, i32 0
  %134 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %14, i64 0, i32 2
  %135 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %14, i64 0, i32 1
  %136 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %14, i64 0, i32 0
  %137 = bitcast %class.scoped_refptr.1691* %132 to i64*
  %138 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBlockFlow"*, i1)***
  %139 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 3, i32 5
  %140 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 17
  %141 = bitcast %"class.logging::CheckError"* %15 to i8*
  %142 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 16
  %143 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12, i32 3
  %144 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 1
  %145 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12, i32 2
  %146 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %148 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %149 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 10
  %150 = bitcast %"class.blink::LayoutUnit"* %16 to i8*
  %151 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %152 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %105, i64 0, i32 0
  %153 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %154 = bitcast i64* %6 to %"class.blink::LayoutSize"*
  %155 = bitcast i64* %6 to i8*
  %156 = bitcast %"class.blink::BidiResolver"* %2 to i64*
  %157 = bitcast %"class.blink::LayoutObject"** %120 to i64*
  %158 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 2
  %159 = getelementptr inbounds %"class.WTF::Vector.2313", %"class.WTF::Vector.2313"* %96, i64 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 3, i32 0, i32 0, i32 2
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 1, i32 4, i32 0, i64 8
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 1, i32 4, i32 0, i64 4
  %163 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 2
  %164 = bitcast %"class.blink::BidiResolver"* %17 to i8*
  %165 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 0, i32 2
  %166 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 0, i32 3
  %167 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 1, i32 2
  %168 = bitcast i32* %166 to i8*
  %169 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 1, i32 3
  %170 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 2, i32 2
  %171 = bitcast i32* %169 to i8*
  %172 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 2, i32 3
  %173 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 3, i32 2
  %174 = bitcast i32* %172 to i8*
  %175 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 4, i32 2
  %176 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 4, i32 3, i32 0
  %177 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 5
  %178 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 6
  %179 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 6, i32 2
  %180 = bitcast %"class.blink::InlineIterator"* %178 to i8*
  %181 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 6, i32 3
  %182 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 7, i32 2
  %183 = bitcast i32* %181 to i8*
  %184 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 7, i32 3
  %185 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 8
  %186 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 9
  %187 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 9, i32 2
  %188 = bitcast %"class.blink::InlineIterator"* %186 to i8*
  %189 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 9, i32 3
  %190 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 10
  %191 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 12
  %192 = bitcast %"class.blink::BidiRunList"* %191 to i8*
  %193 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 13
  %194 = bitcast %"class.blink::MidpointState"* %193 to i8*
  %195 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 14
  %196 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 15
  %197 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 19
  %198 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 19, i32 0, i32 1, i64 0
  %199 = bitcast %"class.WTF::Vector.2303"* %197 to i8**
  %200 = bitcast %"class.WTF::Vector.2298"* %196 to i8*
  %201 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 19, i32 0, i32 0, i32 1
  %202 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 19, i32 0, i32 0, i32 2
  %203 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %17, i64 0, i32 20
  %204 = bitcast %"class.WTF::HashMap.2308"* %203 to i8*
  %205 = bitcast %"struct.blink::BidiStatus"* %18 to i8*
  %206 = bitcast %"struct.blink::BidiStatus"* %123 to i8*
  %207 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %18, i64 0, i32 3, i32 0
  %208 = bitcast %"class.logging::CheckError"* %7 to i8*
  %209 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  %210 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0, i32 0, i32 0
  %211 = bitcast i8* %113 to %"class.blink::WordMeasurement"*
  %212 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0
  %213 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %12, i64 0, i32 0, i32 1, i64 0
  %214 = bitcast i32* %173 to <4 x i32>*
  br label %215

215:                                              ; preds = %100, %785
  %216 = phi i32 [ -2147483648, %100 ], [ %576, %785 ]
  %217 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %101, align 8
  %218 = icmp eq %"class.blink::RootInlineBox"* %217, null
  br i1 %218, label %227, label %219

219:                                              ; preds = %215
  %220 = load i8, i8* %102, align 4, !range !2
  %221 = icmp eq i8 %220, 0
  br i1 %221, label %223, label %222

222:                                              ; preds = %219
  store i8 1, i8* %102, align 4
  br label %226

223:                                              ; preds = %219
  %224 = call zeroext i1 @_ZN5blink15LayoutBlockFlow14MatchedEndLineERNS_15LineLayoutStateERKNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERKS4_RKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::BidiResolver"* dereferenceable(424) %2, %"class.blink::InlineIterator"* dereferenceable(24) %3, %"struct.blink::BidiStatus"* dereferenceable(24) %4)
  %225 = zext i1 %224 to i8
  store i8 %225, i8* %102, align 4
  br i1 %224, label %226, label %227

226:                                              ; preds = %223, %222
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %120, align 8
  store i32 -1, i32* %158, align 8
  store i32 0, i32* %131, align 4
  store i32 0, i32* %209, align 8
  br label %788

227:                                              ; preds = %215, %223
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 9, i1 false) #13
  store i8 1, i8* %106, align 2
  store i32 0, i32* %107, align 4
  %228 = load i64, i64* %108, align 8
  %229 = load i64, i64* %109, align 8
  %230 = load i32, i32* %79, align 8
  %231 = load i32, i32* %80, align 4
  %232 = load i8, i8* %110, align 1, !range !2
  %233 = icmp ne i8 %232, 0
  %234 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %111, align 8
  %235 = icmp eq %"class.blink::FloatingObjects"* %234, null
  br i1 %235, label %245, label %236

236:                                              ; preds = %227
  %237 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %234, i64 0, i32 0, i32 0, i32 2
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %234, i64 0, i32 0, i32 2
  %242 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %241, align 8
  %243 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %242, i64 0, i32 0, i32 0, i32 0, i32 0
  %244 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %243, align 8
  br label %245

245:                                              ; preds = %236, %227, %240
  %246 = phi %"class.blink::FloatingObject"* [ %244, %240 ], [ null, %236 ], [ null, %227 ]
  call void @llvm.lifetime.start.p0i8(i64 4112, i8* nonnull %112) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 4096, i1 false)
  store i8* %113, i8** %114, align 8
  store i32 64, i32* %115, align 8
  store i32 0, i32* %116, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #13
  call void @_ZN5blink11LineBreaker13NextLineBreakERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_14LayoutTextInfoERN3WTF6VectorINS_15WordMeasurementELj64ENSB_18PartitionAllocatorEEE(%"class.blink::InlineIterator"* nonnull sret %13, %"class.blink::LineBreaker"* nonnull %11, %"class.blink::BidiResolver"* dereferenceable(424) %2, %"class.blink::LineInfo"* dereferenceable(12) %105, %"struct.blink::LayoutTextInfo"* nonnull dereferenceable(80) %9, %"class.WTF::Vector.2273"* nonnull dereferenceable(4112) %12) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %117, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #13
  store i16 0, i16* %118, align 8
  store i16 0, i16* %119, align 2
  %247 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %248 = icmp eq %"class.blink::LayoutObject"* %247, null
  br i1 %248, label %249, label %283

249:                                              ; preds = %245
  %250 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %125, align 8
  %251 = icmp eq %"struct.blink::BidiRun"* %250, null
  br i1 %251, label %260, label %252

252:                                              ; preds = %249, %252
  %253 = phi %"struct.blink::BidiRun"* [ %256, %252 ], [ %250, %249 ]
  %254 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %253, i64 0, i32 0, i32 2
  %255 = bitcast %"struct.blink::BidiCharacterRun"** %254 to %"struct.blink::BidiRun"**
  %256 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %255, align 8
  %257 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %253, i64 0, i32 0, i32 0
  call void @free(i8* %257) #13
  %258 = icmp eq %"struct.blink::BidiRun"* %256, null
  br i1 %258, label %259, label %252

259:                                              ; preds = %252
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 28, i1 false) #13
  br label %260

260:                                              ; preds = %249, %259
  store i8 1, i8* %149, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %120, align 8
  store i32 -1, i32* %158, align 8
  store i32 0, i32* %131, align 4
  store i32 0, i32* %209, align 8
  %261 = load i32, i32* %116, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %278, label %263, !prof !9

263:                                              ; preds = %260
  %264 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %210, align 8
  %265 = zext i32 %261 to i64
  %266 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %264, i64 %265
  br label %267

267:                                              ; preds = %274, %263
  %268 = phi %"class.blink::WordMeasurement"* [ %275, %274 ], [ %264, %263 ]
  %269 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %268, i64 0, i32 5, i32 0, i32 0
  %270 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %269, align 8
  %271 = icmp eq %"class.blink::SimpleFontData"** %270, null
  br i1 %271, label %274, label %272, !prof !10

272:                                              ; preds = %267
  %273 = bitcast %"class.blink::SimpleFontData"** %270 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %273) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %269, align 8
  br label %274

274:                                              ; preds = %272, %267
  %275 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %268, i64 1
  %276 = icmp eq %"class.blink::WordMeasurement"* %275, %266
  br i1 %276, label %277, label %267

277:                                              ; preds = %274
  store i32 0, i32* %116, align 4
  br label %278

278:                                              ; preds = %277, %260
  %279 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %210, align 8
  %280 = icmp eq %"class.blink::WordMeasurement"* %279, %211
  br i1 %280, label %282, label %281, !prof !10

281:                                              ; preds = %278
  call void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2274"* nonnull %212, %"class.blink::WordMeasurement"* %279) #13
  br label %282

282:                                              ; preds = %278, %281
  call void @llvm.lifetime.end.p0i8(i64 4112, i8* nonnull %112) #13
  br label %788

283:                                              ; preds = %245
  %284 = load i8, i8* %106, align 2, !range !2
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %303, label %286

286:                                              ; preds = %283
  %287 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %122, align 8
  %288 = icmp eq %"class.blink::RootInlineBox"* %287, null
  br i1 %288, label %292, label %289

289:                                              ; preds = %286
  %290 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %291 = load i32, i32* %80, align 4
  call void @_ZN5blink13RootInlineBox16SetLineBreakInfoENS_14LineLayoutItemEjRKNS_10BidiStatusE(%"class.blink::RootInlineBox"* nonnull %287, %"class.blink::LayoutObject"* %290, i32 %291, %"struct.blink::BidiStatus"* dereferenceable(24) %123) #13
  br label %292

292:                                              ; preds = %286, %289
  %293 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %125, align 8
  %294 = icmp eq %"struct.blink::BidiRun"* %293, null
  br i1 %294, label %575, label %295

295:                                              ; preds = %292, %295
  %296 = phi %"struct.blink::BidiRun"* [ %299, %295 ], [ %293, %292 ]
  %297 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %296, i64 0, i32 0, i32 2
  %298 = bitcast %"struct.blink::BidiCharacterRun"** %297 to %"struct.blink::BidiRun"**
  %299 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %298, align 8
  %300 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %296, i64 0, i32 0, i32 0
  call void @free(i8* %300) #13
  %301 = icmp eq %"struct.blink::BidiRun"* %299, null
  br i1 %301, label %302, label %295

302:                                              ; preds = %295
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 28, i1 false) #13
  br label %575

303:                                              ; preds = %283
  %304 = load i160, i160* %128, align 8
  %305 = and i160 %304, 2854495385411919762116571938898990272765493248
  %306 = icmp eq i160 %305, 0
  br i1 %306, label %311, label %307

307:                                              ; preds = %303
  %308 = and i160 %304, 41538374868278621028243970633760768
  %309 = icmp eq i160 %308, 0
  %310 = select i1 %309, i32 1, i32 2
  br label %311

311:                                              ; preds = %303, %307
  %312 = phi i32 [ %310, %307 ], [ 0, %303 ]
  %313 = and i160 %304, 541598767187353870268366848
  %314 = icmp eq i160 %313, 309485009821345068724781056
  %315 = and i1 %233, %314
  br i1 %315, label %316, label %346

316:                                              ; preds = %311
  %317 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %129, align 8
  %318 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %317, i64 0, i32 2, i32 0
  %319 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %318, align 8
  %320 = icmp eq %"class.blink::BidiContext"* %319, null
  br i1 %320, label %321, label %346

321:                                              ; preds = %316
  %322 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %323 = load i32, i32* %131, align 4
  %324 = call zeroext i8 @_ZN5blink32DeterminePlaintextDirectionalityENS_14LineLayoutItemES0_j(%"class.blink::LayoutObject"* %322, %"class.blink::LayoutObject"* nonnull %247, i32 %323) #13
  %325 = load i160, i160* %128, align 8
  %326 = lshr i160 %325, 86
  %327 = trunc i160 %326 to i32
  %328 = and i32 %327, 7
  %329 = icmp eq i32 %328, 2
  %330 = icmp eq i32 %328, 5
  %331 = or i1 %329, %330
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %133, align 8
  %332 = icmp ne i8 %324, 0
  %333 = zext i1 %332 to i32
  store i32 %333, i32* %134, align 8
  store i32 %333, i32* %135, align 4
  store i32 %333, i32* %136, align 8
  %334 = zext i1 %332 to i8
  %335 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %334, i32 %333, i1 zeroext %331, i32 0, %"class.blink::BidiContext"* null) #13
  %336 = ptrtoint %"class.blink::BidiContext"* %335 to i64
  %337 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %133, align 8
  store i64 %336, i64* %137, align 8
  %338 = icmp eq %"class.blink::BidiContext"* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %321
  %340 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %337, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = atomicrmw sub i32* %340, i32 1 acq_rel
  %342 = icmp eq i32 %341, 1
  br i1 %342, label %343, label %345

343:                                              ; preds = %339
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %337) #13
  %344 = bitcast %"class.blink::BidiContext"* %337 to i8*
  call void @free(i8* %344) #13
  br label %345

345:                                              ; preds = %321, %339, %343
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* %2, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %14)
  br label %346

346:                                              ; preds = %316, %345, %311
  %347 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %348 = icmp ne %"class.blink::LayoutObject"* %347, null
  %349 = load i8, i8* %110, align 1
  %350 = icmp eq i8 %349, 0
  %351 = and i1 %350, %348
  %352 = load i32 (%"class.blink::LayoutBlockFlow"*, i1)**, i32 (%"class.blink::LayoutBlockFlow"*, i1)*** %138, align 8
  %353 = getelementptr inbounds i32 (%"class.blink::LayoutBlockFlow"*, i1)*, i32 (%"class.blink::LayoutBlockFlow"*, i1)** %352, i64 220
  %354 = load i32 (%"class.blink::LayoutBlockFlow"*, i1)*, i32 (%"class.blink::LayoutBlockFlow"*, i1)** %353, align 8
  %355 = call i32 %354(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %351) #13
  store i32 %355, i32* %139, align 4
  switch i32 %355, label %374 [
    i32 8, label %367
    i32 7, label %360
    i32 1, label %356
    i32 5, label %356
    i32 2, label %356
    i32 6, label %356
    i32 3, label %356
  ]

356:                                              ; preds = %346, %346, %346, %346, %346
  %357 = load i160, i160* %128, align 8
  %358 = and i160 %357, 286720
  %359 = icmp eq i160 %358, 0
  br label %374

360:                                              ; preds = %346
  %361 = load i160, i160* %128, align 8
  %362 = and i160 %361, 286720
  %363 = icmp eq i160 %362, 0
  br i1 %363, label %364, label %374

364:                                              ; preds = %360
  %365 = and i160 %361, 41538374868278621028243970633760768
  %366 = icmp ne i160 %365, 0
  br label %374

367:                                              ; preds = %346
  %368 = load i160, i160* %128, align 8
  %369 = and i160 %368, 286720
  %370 = icmp eq i160 %369, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %367
  %372 = and i160 %368, 41538374868278621028243970633760768
  %373 = icmp eq i160 %372, 0
  br label %374

374:                                              ; preds = %346, %356, %360, %364, %367, %371
  %375 = phi i1 [ %359, %356 ], [ false, %360 ], [ %366, %364 ], [ false, %367 ], [ %373, %371 ], [ false, %346 ]
  %376 = zext i1 %375 to i8
  store i8 %376, i8* %140, align 8
  %377 = load i8, i8* %110, align 1, !range !2
  %378 = icmp ne i8 %377, 0
  call void @_ZN5blink24ConstructBidiRunsForLineERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_11BidiRunListIS2_EERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"* dereferenceable(424) %2, %"class.blink::BidiRunList"* dereferenceable(32) %124, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %8, i32 %312, i1 zeroext %378, i1 zeroext %233) #13
  %379 = load i32, i32* %131, align 4
  %380 = load i32, i32* %80, align 4
  %381 = icmp eq i32 %379, %380
  br i1 %381, label %382, label %386

382:                                              ; preds = %374
  %383 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %384 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %385 = icmp eq %"class.blink::LayoutObject"* %383, %384
  br i1 %385, label %388, label %386

386:                                              ; preds = %374, %382
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 1205, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #13
  %387 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #13
  br label %388

388:                                              ; preds = %382, %386
  %389 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %142, align 8
  %390 = load i32, i32* %143, align 8
  %391 = icmp eq i32 %390, 0
  %392 = load i8, i8* %144, align 8
  %393 = icmp eq i8 %392, 0
  %394 = or i1 %391, %393
  br i1 %394, label %400, label %395

395:                                              ; preds = %388
  %396 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %145, align 8
  %397 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %396, i64 0, i32 0, i32 0
  %398 = load i8, i8* %397, align 8
  %399 = or i8 %398, 2
  store i8 %399, i8* %397, align 8
  br label %400

400:                                              ; preds = %388, %395
  %401 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %402 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %401, i64 0, i32 0, i32 9
  %403 = bitcast [20 x i8]* %402 to i160*
  %404 = load i160, i160* %403, align 8
  %405 = and i160 %404, 15211807202738752817960438464512
  %406 = icmp eq i160 %405, 0
  %407 = select i1 %406, i32* %147, i32* %148
  %408 = load i32, i32* %407, align 4
  %409 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %129, align 8
  %410 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %409, i64 0, i32 1
  %411 = load i16, i16* %410, align 4
  %412 = and i16 %411, 127
  %413 = zext i16 %412 to i32
  %414 = call %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow27CreateLineBoxesFromBidiRunsEjRNS_11BidiRunListINS_7BidiRunEEERKNS_14InlineIteratorERNS_8LineInfoERNS_21VerticalPositionCacheEPS2_RKN3WTF6VectorINS_15WordMeasurementELj64ENSD_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"* %0, i32 %413, %"class.blink::BidiRunList"* dereferenceable(32) %124, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %8, %"class.blink::LineInfo"* dereferenceable(12) %105, %"class.blink::VerticalPositionCache"* nonnull dereferenceable(48) %10, %"struct.blink::BidiRun"* %389, %"class.WTF::Vector.2273"* nonnull dereferenceable(4112) %12)
  %415 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %125, align 8
  %416 = icmp eq %"struct.blink::BidiRun"* %415, null
  br i1 %416, label %425, label %417

417:                                              ; preds = %400, %417
  %418 = phi %"struct.blink::BidiRun"* [ %421, %417 ], [ %415, %400 ]
  %419 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %418, i64 0, i32 0, i32 2
  %420 = bitcast %"struct.blink::BidiCharacterRun"** %419 to %"struct.blink::BidiRun"**
  %421 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %420, align 8
  %422 = getelementptr inbounds %"struct.blink::BidiRun", %"struct.blink::BidiRun"* %418, i64 0, i32 0, i32 0
  call void @free(i8* %422) #13
  %423 = icmp eq %"struct.blink::BidiRun"* %421, null
  br i1 %423, label %424, label %417

424:                                              ; preds = %417
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 28, i1 false) #13
  br label %425

425:                                              ; preds = %400, %424
  store i8 1, i8* %149, align 8
  %426 = icmp eq %"class.blink::RootInlineBox"* %414, null
  br i1 %426, label %575, label %427

427:                                              ; preds = %425
  %428 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %429 = load i32, i32* %80, align 4
  call void @_ZN5blink13RootInlineBox16SetLineBreakInfoENS_14LineLayoutItemEjRKNS_10BidiStatusE(%"class.blink::RootInlineBox"* nonnull %414, %"class.blink::LayoutObject"* %428, i32 %429, %"struct.blink::BidiStatus"* dereferenceable(24) %123) #13
  br i1 %75, label %430, label %575

430:                                              ; preds = %427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %150) #13
  store i32 0, i32* %151, align 4
  call void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %414, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %16) #13
  %431 = load i32, i32* %151, align 4
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %531, label %433

433:                                              ; preds = %430
  %434 = load i8, i8* %152, align 4, !range !2
  %435 = zext i8 %434 to i32
  %436 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %153) #13
  %437 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %146) #13
  %438 = icmp slt i32 %437, 0
  %439 = select i1 %438, i32 -2147483648, i32 2147483647
  %440 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %436, i32 %437) #13
  %441 = extractvalue { i32, i1 } %440, 1
  %442 = extractvalue { i32, i1 } %440, 0
  %443 = select i1 %441, i32 %439, i32 %442, !prof !9
  %444 = call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %408, i32 %443, i32 0) #13
  %445 = call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %444, i32 %435) #13
  %446 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %153) #13
  %447 = call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %408, i32 %446, i32 0) #13
  %448 = call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %447, i32 %435) #13
  %449 = icmp sgt i32 %448, -1
  %450 = select i1 %449, i32 -2147483648, i32 2147483647
  %451 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %445, i32 %448) #13
  %452 = extractvalue { i32, i1 } %451, 1
  %453 = extractvalue { i32, i1 } %451, 0
  %454 = select i1 %452, i32 %450, i32 %453, !prof !9
  %455 = icmp sgt i32 %454, 0
  %456 = select i1 %455, i32 %454, i32 0
  %457 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0
  %458 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 7, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = and i32 %459, 2048
  %461 = icmp eq i32 %460, 0
  %462 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %463 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %464 = select i1 %461, i32* %463, i32* %462
  %465 = load i32, i32* %464, align 4
  %466 = load i32, i32* %151, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #13
  %467 = zext i32 %466 to i64
  %468 = shl nuw i64 %467, 32
  %469 = select i1 %461, i64 %467, i64 %468
  store i64 %469, i64* %6, align 8
  %470 = bitcast %"class.blink::RootInlineBox"* %414 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %471 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %470, align 8
  %472 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %471, i64 10
  %473 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %472, align 8
  call void %473(%"class.blink::InlineBox"* %457, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %154) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #13
  %474 = load i32, i32* %151, align 4
  %475 = icmp slt i32 %474, 0
  %476 = select i1 %475, i32 -2147483648, i32 2147483647
  %477 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %408, i32 %474) #13
  %478 = extractvalue { i32, i1 } %477, 1
  %479 = extractvalue { i32, i1 } %477, 0
  %480 = select i1 %478, i32 %476, i32 %479, !prof !9
  %481 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %153) #13
  %482 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %146) #13
  %483 = icmp slt i32 %482, 0
  %484 = select i1 %483, i32 -2147483648, i32 2147483647
  %485 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %481, i32 %482) #13
  %486 = extractvalue { i32, i1 } %485, 1
  %487 = extractvalue { i32, i1 } %485, 0
  %488 = select i1 %486, i32 %484, i32 %487, !prof !9
  %489 = call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %480, i32 %488, i32 0) #13
  %490 = call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %489, i32 %435) #13
  %491 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %153) #13
  %492 = call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %480, i32 %491, i32 0) #13
  %493 = call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %492, i32 %435) #13
  %494 = icmp sgt i32 %493, -1
  %495 = select i1 %494, i32 -2147483648, i32 2147483647
  %496 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %490, i32 %493) #13
  %497 = extractvalue { i32, i1 } %496, 1
  %498 = extractvalue { i32, i1 } %496, 0
  %499 = select i1 %497, i32 %495, i32 %498, !prof !9
  %500 = icmp sgt i32 %499, 0
  %501 = select i1 %500, i32 %499, i32 0
  %502 = icmp eq i32 %501, %456
  br i1 %502, label %528, label %503

503:                                              ; preds = %433
  %504 = icmp eq i32 %216, -2147483648
  %505 = select i1 %504, i32 %465, i32 %216
  %506 = bitcast %"class.blink::RootInlineBox"* %414 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"* nonnull %506) #13
  %507 = load i32, i32* %151, align 4
  %508 = icmp slt i32 %507, 0
  %509 = select i1 %508, i32 -2147483648, i32 2147483647
  %510 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %408, i32 %507) #13
  %511 = extractvalue { i32, i1 } %510, 1
  %512 = extractvalue { i32, i1 } %510, 0
  %513 = select i1 %511, i32 %509, i32 %512, !prof !9
  call void @_ZN5blink15LayoutBlockFlow26RemoveFloatingObjectsBelowEPNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::FloatingObject"* %246, i32 %408) #13
  %514 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %515 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %514, i64 0, i32 0, i32 9
  %516 = bitcast [20 x i8]* %515 to i160*
  %517 = load i160, i160* %516, align 8
  %518 = and i160 %517, 15211807202738752817960438464512
  %519 = icmp eq i160 %518, 0
  br i1 %519, label %520, label %524

520:                                              ; preds = %503
  %521 = load i32, i32* %147, align 4
  %522 = icmp eq i32 %521, %513
  br i1 %522, label %571, label %523

523:                                              ; preds = %520
  store i32 %513, i32* %147, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %146) #13
  br label %571

524:                                              ; preds = %503
  %525 = load i32, i32* %148, align 4
  %526 = icmp eq i32 %525, %513
  br i1 %526, label %571, label %527

527:                                              ; preds = %524
  store i32 %513, i32* %148, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %146) #13
  br label %571

528:                                              ; preds = %433
  %529 = load i32, i32* %151, align 4
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %533

531:                                              ; preds = %528, %430
  %532 = icmp eq i32 %216, -2147483648
  br i1 %532, label %572, label %535

533:                                              ; preds = %528
  %534 = icmp eq i32 %216, -2147483648
  br i1 %534, label %554, label %535

535:                                              ; preds = %533, %531
  %536 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 7, i32 0
  %537 = load i32, i32* %536, align 4
  %538 = and i32 %537, 2048
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %541 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %542 = select i1 %539, i32* %541, i32* %540
  %543 = load i32, i32* %542, align 4
  %544 = icmp sgt i32 %216, -1
  %545 = select i1 %544, i32 -2147483648, i32 2147483647
  %546 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %543, i32 %216) #13
  %547 = extractvalue { i32, i1 } %546, 1
  %548 = extractvalue { i32, i1 } %546, 0
  %549 = select i1 %547, i32 %545, i32 %548, !prof !9
  %550 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 0, i32 6
  %551 = load i32, i32* %550, align 8
  %552 = or i32 %551, 33554432
  store i32 %552, i32* %550, align 8
  %553 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 10, i32 0
  store i32 %549, i32* %553, align 4
  br label %554

554:                                              ; preds = %533, %535
  %555 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %414, i64 0, i32 8, i32 0
  %556 = load i32, i32* %555, align 4
  %557 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %558 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %557, i64 0, i32 0, i32 9
  %559 = bitcast [20 x i8]* %558 to i160*
  %560 = load i160, i160* %559, align 8
  %561 = and i160 %560, 15211807202738752817960438464512
  %562 = icmp eq i160 %561, 0
  br i1 %562, label %563, label %567

563:                                              ; preds = %554
  %564 = load i32, i32* %147, align 4
  %565 = icmp eq i32 %564, %556
  br i1 %565, label %572, label %566

566:                                              ; preds = %563
  store i32 %556, i32* %147, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %146) #13
  br label %572

567:                                              ; preds = %554
  %568 = load i32, i32* %148, align 4
  %569 = icmp eq i32 %568, %556
  br i1 %569, label %572, label %570

570:                                              ; preds = %567
  store i32 %556, i32* %148, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %146) #13
  br label %572

571:                                              ; preds = %520, %523, %524, %527
  store i64 %228, i64* %156, align 8
  store i64 %229, i64* %157, align 8
  store i32 %230, i32* %158, align 8
  store i32 %231, i32* %131, align 4
  store i64 %228, i64* %108, align 8
  store i64 %229, i64* %109, align 8
  store i32 %230, i32* %79, align 8
  store i32 %231, i32* %80, align 4
  br label %572

572:                                              ; preds = %531, %570, %567, %566, %563, %571
  %573 = phi %"class.blink::RootInlineBox"* [ null, %571 ], [ %414, %531 ], [ %414, %563 ], [ %414, %566 ], [ %414, %567 ], [ %414, %570 ]
  %574 = phi i32 [ %505, %571 ], [ -2147483648, %531 ], [ -2147483648, %563 ], [ -2147483648, %566 ], [ -2147483648, %567 ], [ -2147483648, %570 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %150) #13
  br label %575

575:                                              ; preds = %572, %427, %425, %302, %292
  %576 = phi i32 [ %216, %292 ], [ %216, %302 ], [ %216, %425 ], [ %574, %572 ], [ %216, %427 ]
  %577 = phi %"class.blink::RootInlineBox"* [ null, %292 ], [ null, %302 ], [ null, %425 ], [ %573, %572 ], [ %414, %427 ]
  %578 = icmp eq i32 %576, -2147483648
  br i1 %578, label %579, label %727

579:                                              ; preds = %575
  %580 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %159, align 8
  %581 = load i32, i32* %160, align 4
  %582 = zext i32 %581 to i64
  %583 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %580, i64 %582
  %584 = icmp eq i32 %581, 0
  br i1 %584, label %589, label %585

585:                                              ; preds = %579
  %586 = icmp ne %"class.blink::RootInlineBox"* %577, null
  %587 = and i1 %75, %586
  %588 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %577, i64 0, i32 7, i32 0
  br label %592

589:                                              ; preds = %670, %579
  %590 = load i8, i8* %106, align 2, !range !2
  %591 = icmp eq i8 %590, 0
  br i1 %591, label %673, label %674

592:                                              ; preds = %585, %670
  %593 = phi %"class.blink::LineLayoutBox"* [ %580, %585 ], [ %671, %670 ]
  %594 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %593, i64 0, i32 0, i32 0, i32 0
  %595 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %594, align 8
  %596 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %595, i64 0, i32 5, i32 0
  %597 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %596, align 8
  %598 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %597, i64 0, i32 0, i32 9
  %599 = bitcast [20 x i8]* %598 to i160*
  %600 = load i160, i160* %599, align 8
  %601 = lshr i160 %600, 37
  %602 = trunc i160 %601 to i32
  %603 = and i32 %602, 31
  switch i32 %603, label %615 [
    i32 0, label %604
    i32 25, label %604
    i32 19, label %604
    i32 17, label %604
    i32 15, label %604
    i32 5, label %604
    i32 3, label %604
    i32 24, label %604
  ]

604:                                              ; preds = %592, %592, %592, %592, %592, %592, %592, %592
  br i1 %587, label %605, label %670

605:                                              ; preds = %604
  %606 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %595, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %607 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %606, align 8
  %608 = icmp eq %"struct.blink::FragmentData::RareData"* %607, null
  br i1 %608, label %612, label %609

609:                                              ; preds = %605
  %610 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %607, i64 0, i32 0, i32 0, i32 0, i32 0
  %611 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %610, align 8
  br label %612

612:                                              ; preds = %605, %609
  %613 = phi %"class.blink::PaintLayer"* [ %611, %609 ], [ null, %605 ]
  %614 = load i32, i32* %588, align 8
  br label %666

615:                                              ; preds = %592
  %616 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %595, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %617 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %618 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %617, i64 0, i32 0, i32 9
  %619 = bitcast [20 x i8]* %618 to i160*
  %620 = load i160, i160* %619, align 8
  %621 = and i160 %620, 15211807202738752817960438464512
  %622 = icmp eq i160 %621, 0
  %623 = select i1 %622, i8* %161, i8* %162
  %624 = bitcast i8* %623 to i32*
  %625 = load i32, i32* %624, align 4
  %626 = bitcast %"class.blink::LayoutObject"* %616 to i1 (%"class.blink::LayoutObject"*)***
  %627 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %626, align 8
  %628 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %627, i64 26
  %629 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %628, align 8
  %630 = call zeroext i1 %629(%"class.blink::LayoutObject"* %616) #13
  br i1 %630, label %633, label %631

631:                                              ; preds = %615
  %632 = bitcast %"class.blink::LayoutObject"* %595 to %"class.blink::LayoutBox"*
  br label %658

633:                                              ; preds = %615
  %634 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %616, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %635 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %634, align 8
  %636 = icmp eq %"struct.blink::FragmentData::RareData"* %635, null
  br i1 %636, label %640, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %635, i64 0, i32 0, i32 0, i32 0, i32 0
  %639 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %638, align 8
  br label %640

640:                                              ; preds = %637, %633
  %641 = phi %"class.blink::PaintLayer"* [ %639, %637 ], [ null, %633 ]
  %642 = call i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %625, i32 0) #13
  %643 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %641, i64 0, i32 10, i32 0
  store i32 %642, i32* %643, align 8
  %644 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %634, align 8
  %645 = icmp eq %"struct.blink::FragmentData::RareData"* %644, null
  br i1 %645, label %649, label %646

646:                                              ; preds = %640
  %647 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %644, i64 0, i32 0, i32 0, i32 0, i32 0
  %648 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %647, align 8
  br label %649

649:                                              ; preds = %646, %640
  %650 = phi %"class.blink::PaintLayer"* [ %648, %646 ], [ null, %640 ]
  %651 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %650, i64 0, i32 11, i32 0
  store i32 %625, i32* %651, align 4
  %652 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %595, i64 0, i32 4
  %653 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %652 to i96*
  %654 = load i96, i96* %653, align 4
  %655 = trunc i96 %654 to i32
  %656 = icmp slt i32 %655, 0
  %657 = bitcast %"class.blink::LayoutObject"* %595 to %"class.blink::LayoutBox"*
  call void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"* %657, i1 zeroext %656) #13
  br label %658

658:                                              ; preds = %649, %631
  %659 = phi %"class.blink::LayoutBox"* [ %632, %631 ], [ %657, %649 ]
  call void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %659, i32 %625, i32 0) #13
  %660 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %595, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %661 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %660, align 8
  %662 = icmp eq %"struct.blink::FragmentData::RareData"* %661, null
  br i1 %662, label %666, label %663

663:                                              ; preds = %658
  %664 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %661, i64 0, i32 0, i32 0, i32 0, i32 0
  %665 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %664, align 8
  br label %666

666:                                              ; preds = %663, %658, %612
  %667 = phi %"class.blink::PaintLayer"* [ %613, %612 ], [ %665, %663 ], [ null, %658 ]
  %668 = phi i32 [ %614, %612 ], [ %625, %663 ], [ %625, %658 ]
  %669 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %667, i64 0, i32 11, i32 0
  store i32 %668, i32* %669, align 4
  br label %670

670:                                              ; preds = %666, %604
  %671 = getelementptr inbounds %"class.blink::LineLayoutBox", %"class.blink::LineLayoutBox"* %593, i64 1
  %672 = icmp eq %"class.blink::LineLayoutBox"* %671, %583
  br i1 %672, label %589, label %592

673:                                              ; preds = %589
  store i8 0, i8* %152, align 4
  br label %674

674:                                              ; preds = %589, %673
  %675 = load i32, i32* %163, align 4
  call void @_ZN5blink15LayoutBlockFlow11ClearFloatsENS_6EClearE(%"class.blink::LayoutBlockFlow"* %0, i32 %675) #13
  %676 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %111, align 8
  %677 = icmp eq %"class.blink::FloatingObjects"* %676, null
  br i1 %677, label %727, label %678

678:                                              ; preds = %674
  %679 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %122, align 8
  %680 = icmp eq %"class.blink::RootInlineBox"* %679, null
  br i1 %680, label %727, label %681

681:                                              ; preds = %678
  call void @llvm.lifetime.start.p0i8(i64 424, i8* nonnull %164) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 -86, i64 424, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %164, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %165, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %168, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %167, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %171, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %170, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %174, i8 0, i64 20, i1 false) #13
  store <4 x i32> <i32 -1, i32 0, i32 10, i32 10>, <4 x i32>* %214, align 8
  store i32 10, i32* %175, align 8
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %176, align 8
  store i32 10, i32* %177, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %179, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %183, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %182, align 8
  store i32 0, i32* %184, align 4
  store i8 0, i8* %185, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %187, align 8
  store i32 0, i32* %189, align 4
  store i8 1, i8* %190, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 28, i1 false) #13
  call void @llvm.memset.p0i8.i64(i8* align 8 %194, i8 0, i64 25, i1 false) #13
  store i32 0, i32* %195, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 25, i1 false) #13
  store i8* %198, i8** %199, align 8
  store i32 8, i32* %201, align 8
  store i32 0, i32* %202, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 20, i1 false) #13
  %682 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %683 = icmp eq %"class.blink::LayoutObject"* %682, null
  br i1 %683, label %716, label %684

684:                                              ; preds = %681, %711
  %685 = phi i32 [ %712, %711 ], [ 0, %681 ]
  %686 = phi %"class.blink::LayoutObject"* [ %714, %711 ], [ %682, %681 ]
  %687 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %688 = icmp eq %"class.blink::LayoutObject"* %686, %687
  br i1 %688, label %716, label %689

689:                                              ; preds = %684
  %690 = bitcast %"class.blink::LayoutObject"* %686 to i1 (%"class.blink::LayoutObject"*)***
  %691 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %690, align 8
  %692 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %691, i64 26
  %693 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %692, align 8
  %694 = call zeroext i1 %693(%"class.blink::LayoutObject"* nonnull %686) #13
  br i1 %694, label %695, label %711

695:                                              ; preds = %689
  %696 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %686, i64 0, i32 5, i32 0
  %697 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %696, align 8
  %698 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %697, i64 0, i32 0, i32 9
  %699 = bitcast [20 x i8]* %698 to i160*
  %700 = load i160, i160* %699, align 8
  %701 = lshr i160 %700, 86
  %702 = trunc i160 %701 to i32
  %703 = and i32 %702, 7
  %704 = add nsw i32 %703, -3
  %705 = icmp ult i32 %704, 3
  %706 = and i160 %700, 2854495385411919762116571938898990272765493248
  %707 = icmp eq i160 %706, 0
  %708 = and i1 %707, %705
  %709 = zext i1 %708 to i32
  %710 = add i32 %685, %709
  br label %711

711:                                              ; preds = %695, %689
  %712 = phi i32 [ %685, %689 ], [ %710, %695 ]
  %713 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %686, i64 0, i32 7
  %714 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %713, align 8
  %715 = icmp eq %"class.blink::LayoutObject"* %714, null
  br i1 %715, label %716, label %684

716:                                              ; preds = %684, %711, %681
  %717 = phi i32 [ 0, %681 ], [ %685, %684 ], [ %712, %711 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %164, i8* nonnull align 8 %76, i64 24, i1 false) #13
  store i32 %717, i32* %195, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 %206, i64 12, i1 false) #13
  %718 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %129, align 8
  store %"class.blink::BidiContext"* %718, %"class.blink::BidiContext"** %207, align 8
  %719 = icmp eq %"class.blink::BidiContext"* %718, null
  br i1 %719, label %726, label %720

720:                                              ; preds = %716
  %721 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %718, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %722 = atomicrmw add i32* %721, i32 1 monotonic
  %723 = icmp sgt i32 %722, 0
  br i1 %723, label %726, label %724

724:                                              ; preds = %720
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  %725 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #13
  br label %726

726:                                              ; preds = %716, %720, %724
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"* nonnull %17, %"struct.blink::BidiStatus"* nonnull byval(%"struct.blink::BidiStatus") align 8 %18)
  call void @_ZN5blink15LayoutBlockFlow22AppendFloatsToLastLineERNS_15LineLayoutStateERKNS_14InlineIteratorERKNS_12BidiResolverIS3_NS_7BidiRunENS_15BidiIsolatedRunEEERKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::InlineIterator"* dereferenceable(24) %3, %"class.blink::BidiResolver"* nonnull dereferenceable(424) %17, %"struct.blink::BidiStatus"* dereferenceable(24) %4)
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 424, i8* nonnull %164) #13
  br label %727

727:                                              ; preds = %674, %678, %726, %575
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 9, i1 false) #13
  %728 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %729 = icmp eq %"class.blink::LayoutObject"* %728, null
  br i1 %729, label %762, label %730

730:                                              ; preds = %727, %757
  %731 = phi i32 [ %758, %757 ], [ 0, %727 ]
  %732 = phi %"class.blink::LayoutObject"* [ %760, %757 ], [ %728, %727 ]
  %733 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %734 = icmp eq %"class.blink::LayoutObject"* %732, %733
  br i1 %734, label %762, label %735

735:                                              ; preds = %730
  %736 = bitcast %"class.blink::LayoutObject"* %732 to i1 (%"class.blink::LayoutObject"*)***
  %737 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %736, align 8
  %738 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %737, i64 26
  %739 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %738, align 8
  %740 = call zeroext i1 %739(%"class.blink::LayoutObject"* nonnull %732) #13
  br i1 %740, label %741, label %757

741:                                              ; preds = %735
  %742 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %732, i64 0, i32 5, i32 0
  %743 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %742, align 8
  %744 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %743, i64 0, i32 0, i32 9
  %745 = bitcast [20 x i8]* %744 to i160*
  %746 = load i160, i160* %745, align 8
  %747 = lshr i160 %746, 86
  %748 = trunc i160 %747 to i32
  %749 = and i32 %748, 7
  %750 = add nsw i32 %749, -3
  %751 = icmp ult i32 %750, 3
  %752 = and i160 %746, 2854495385411919762116571938898990272765493248
  %753 = icmp eq i160 %752, 0
  %754 = and i1 %753, %751
  %755 = zext i1 %754 to i32
  %756 = add i32 %731, %755
  br label %757

757:                                              ; preds = %741, %735
  %758 = phi i32 [ %731, %735 ], [ %756, %741 ]
  %759 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %732, i64 0, i32 7
  %760 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %759, align 8
  %761 = icmp eq %"class.blink::LayoutObject"* %760, null
  br i1 %761, label %762, label %730

762:                                              ; preds = %730, %757, %727
  %763 = phi i32 [ 0, %727 ], [ %731, %730 ], [ %758, %757 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %76, i64 24, i1 false) #13
  store i32 %763, i32* %209, align 8
  %764 = load i32, i32* %116, align 4
  %765 = icmp eq i32 %764, 0
  br i1 %765, label %781, label %766, !prof !9

766:                                              ; preds = %762
  %767 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %210, align 8
  %768 = zext i32 %764 to i64
  %769 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %767, i64 %768
  br label %770

770:                                              ; preds = %777, %766
  %771 = phi %"class.blink::WordMeasurement"* [ %778, %777 ], [ %767, %766 ]
  %772 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %771, i64 0, i32 5, i32 0, i32 0
  %773 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %772, align 8
  %774 = icmp eq %"class.blink::SimpleFontData"** %773, null
  br i1 %774, label %777, label %775, !prof !10

775:                                              ; preds = %770
  %776 = bitcast %"class.blink::SimpleFontData"** %773 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %776) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %772, align 8
  br label %777

777:                                              ; preds = %775, %770
  %778 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %771, i64 1
  %779 = icmp eq %"class.blink::WordMeasurement"* %778, %769
  br i1 %779, label %780, label %770

780:                                              ; preds = %777
  store i32 0, i32* %116, align 4
  br label %781

781:                                              ; preds = %780, %762
  %782 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %210, align 8
  %783 = icmp eq %"class.blink::WordMeasurement"* %782, %211
  br i1 %783, label %785, label %784, !prof !10

784:                                              ; preds = %781
  call void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2274"* nonnull %212, %"class.blink::WordMeasurement"* %782) #13
  br label %785

785:                                              ; preds = %781, %784
  call void @llvm.lifetime.end.p0i8(i64 4112, i8* nonnull %112) #13
  %786 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %78, align 8
  %787 = icmp eq %"class.blink::LayoutObject"* %786, null
  br i1 %787, label %788, label %215

788:                                              ; preds = %785, %74, %282, %226
  br i1 %66, label %789, label %968

789:                                              ; preds = %788
  %790 = bitcast %"class.blink::ComputedStyle"** %20 to %"class.blink::ComputedStyleBase"**
  %791 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %790, align 8
  %792 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %791, i64 0, i32 1, i32 0, i32 0
  %793 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %792, align 8
  %794 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %793, i64 0, i32 22
  %795 = load i16, i16* %794, align 2
  %796 = icmp sgt i16 %795, 1
  br i1 %796, label %797, label %968

797:                                              ; preds = %789
  %798 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %799 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %798, align 8
  %800 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %799, null
  br i1 %800, label %806, label %801

801:                                              ; preds = %797
  %802 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %799, i64 0, i32 10
  %803 = load i8, i8* %802, align 8
  %804 = and i8 %803, 1
  %805 = icmp eq i8 %804, 0
  br i1 %805, label %806, label %968

806:                                              ; preds = %801, %797
  %807 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %808 = bitcast %"class.blink::InlineFlowBox"** %807 to %"class.blink::RootInlineBox"**
  %809 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %810 = bitcast %"class.blink::InlineFlowBox"** %809 to %"class.blink::RootInlineBox"**
  %811 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %810, align 8
  %812 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %808, align 8
  %813 = icmp ne %"class.blink::RootInlineBox"* %812, null
  %814 = xor i1 %813, true
  %815 = icmp eq %"class.blink::RootInlineBox"* %812, %811
  %816 = or i1 %815, %814
  br i1 %816, label %838, label %817

817:                                              ; preds = %806
  %818 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %812, i64 0, i32 0, i32 6
  %819 = load i32, i32* %818, align 8
  %820 = and i32 %819, 33554432
  %821 = icmp eq i32 %820, 0
  br i1 %821, label %827, label %838

822:                                              ; preds = %827
  %823 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %833, i64 0, i32 0, i32 6
  %824 = load i32, i32* %823, align 8
  %825 = and i32 %824, 33554432
  %826 = icmp eq i32 %825, 0
  br i1 %826, label %827, label %838

827:                                              ; preds = %817, %822
  %828 = phi i32 [ %830, %822 ], [ 1, %817 ]
  %829 = phi %"class.blink::RootInlineBox"* [ %833, %822 ], [ %812, %817 ]
  %830 = add nuw nsw i32 %828, 1
  %831 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %829, i64 0, i32 0, i32 4
  %832 = bitcast %"class.blink::InlineFlowBox"** %831 to %"class.blink::RootInlineBox"**
  %833 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %832, align 8
  %834 = icmp ne %"class.blink::RootInlineBox"* %833, null
  %835 = xor i1 %834, true
  %836 = icmp eq %"class.blink::RootInlineBox"* %833, %811
  %837 = or i1 %836, %835
  br i1 %837, label %838, label %822

838:                                              ; preds = %822, %827, %817, %806
  %839 = phi i32 [ 1, %806 ], [ 1, %817 ], [ %830, %827 ], [ %830, %822 ]
  %840 = phi %"class.blink::RootInlineBox"* [ %812, %806 ], [ %812, %817 ], [ %833, %827 ], [ %833, %822 ]
  %841 = phi i1 [ %813, %806 ], [ %813, %817 ], [ %834, %827 ], [ %834, %822 ]
  %842 = phi i1 [ %815, %806 ], [ false, %817 ], [ %836, %827 ], [ false, %822 ]
  br i1 %841, label %843, label %969

843:                                              ; preds = %838
  %844 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %840, i64 0, i32 0, i32 6
  %845 = load i32, i32* %844, align 8
  %846 = and i32 %845, 33554432
  %847 = icmp eq i32 %846, 0
  %848 = or i1 %842, %847
  br i1 %848, label %969, label %849

849:                                              ; preds = %843
  %850 = sext i16 %795 to i32
  %851 = icmp slt i32 %839, %850
  br i1 %851, label %852, label %968

852:                                              ; preds = %849
  %853 = sub nsw i32 %850, %839
  %854 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %840, i64 0, i32 0, i32 4
  %855 = bitcast %"class.blink::InlineFlowBox"** %854 to %"class.blink::RootInlineBox"**
  %856 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %855, align 8
  %857 = icmp eq %"class.blink::RootInlineBox"* %856, null
  %858 = icmp eq %"class.blink::RootInlineBox"* %856, %811
  %859 = or i1 %857, %858
  br i1 %859, label %875, label %860

860:                                              ; preds = %852, %867
  %861 = phi %"class.blink::RootInlineBox"* [ %871, %867 ], [ %856, %852 ]
  %862 = phi i32 [ %868, %867 ], [ 1, %852 ]
  %863 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %861, i64 0, i32 0, i32 6
  %864 = load i32, i32* %863, align 8
  %865 = and i32 %864, 33554432
  %866 = icmp eq i32 %865, 0
  br i1 %866, label %867, label %875

867:                                              ; preds = %860
  %868 = add nuw nsw i32 %862, 1
  %869 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %861, i64 0, i32 0, i32 4
  %870 = bitcast %"class.blink::InlineFlowBox"** %869 to %"class.blink::RootInlineBox"**
  %871 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %870, align 8
  %872 = icmp eq %"class.blink::RootInlineBox"* %871, null
  %873 = icmp eq %"class.blink::RootInlineBox"* %871, %811
  %874 = or i1 %872, %873
  br i1 %874, label %875, label %860

875:                                              ; preds = %867, %860, %852
  %876 = phi i32 [ 1, %852 ], [ %862, %860 ], [ %868, %867 ]
  %877 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %793, i64 0, i32 21
  %878 = load i16, i16* %877, align 4
  %879 = sext i16 %878 to i32
  %880 = sub nsw i32 %876, %879
  %881 = icmp slt i32 %880, 1
  br i1 %881, label %969, label %882

882:                                              ; preds = %875
  %883 = icmp slt i32 %853, %880
  %884 = select i1 %883, i32 %853, i32 %880
  %885 = icmp sgt i32 %884, 0
  br i1 %885, label %886, label %907

886:                                              ; preds = %882
  %887 = icmp eq i32 %884, 1
  br i1 %887, label %907, label %888

888:                                              ; preds = %886
  %889 = add i32 %884, -1
  %890 = add i32 %884, -2
  %891 = and i32 %889, 7
  %892 = icmp ult i32 %890, 7
  br i1 %892, label %895, label %893

893:                                              ; preds = %888
  %894 = sub i32 %889, %891
  br label %939

895:                                              ; preds = %939, %888
  %896 = phi %"class.blink::RootInlineBox"* [ undef, %888 ], [ %965, %939 ]
  %897 = phi %"class.blink::RootInlineBox"* [ %856, %888 ], [ %965, %939 ]
  %898 = icmp eq i32 %891, 0
  br i1 %898, label %907, label %899

899:                                              ; preds = %895, %899
  %900 = phi %"class.blink::RootInlineBox"* [ %904, %899 ], [ %897, %895 ]
  %901 = phi i32 [ %905, %899 ], [ %891, %895 ]
  %902 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %900, i64 0, i32 0, i32 4
  %903 = bitcast %"class.blink::InlineFlowBox"** %902 to %"class.blink::RootInlineBox"**
  %904 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %903, align 8
  %905 = add i32 %901, -1
  %906 = icmp eq i32 %905, 0
  br i1 %906, label %907, label %899, !llvm.loop !26

907:                                              ; preds = %895, %899, %886, %882
  %908 = phi %"class.blink::RootInlineBox"* [ %840, %882 ], [ %856, %886 ], [ %896, %895 ], [ %904, %899 ]
  %909 = call i32 @_ZNK5blink15LayoutBlockFlow9LineCountEPKNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* %908) #13
  call void @_ZN5blink15LayoutBlockFlow26SetBreakAtLineToAvoidWidowEi(%"class.blink::LayoutBlockFlow"* %0, i32 %909) #13
  %910 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %808, align 8
  %911 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %910, i64 0, i32 8, i32 0
  %912 = load i32, i32* %911, align 4
  %913 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %908, i64 0, i32 8, i32 0
  %914 = load i32, i32* %913, align 4
  %915 = icmp sge i32 %912, %914
  %916 = icmp eq %"class.blink::RootInlineBox"* %910, null
  %917 = or i1 %916, %915
  %918 = icmp eq %"class.blink::RootInlineBox"* %910, %908
  %919 = or i1 %917, %918
  br i1 %919, label %968, label %920

920:                                              ; preds = %907, %933
  %921 = phi %"class.blink::RootInlineBox"* [ %929, %933 ], [ %910, %907 ]
  %922 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %921, i64 0, i32 0, i32 0
  %923 = bitcast %"class.blink::RootInlineBox"* %921 to void (%"class.blink::InlineBox"*)***
  %924 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %923, align 8
  %925 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %924, i64 28
  %926 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %925, align 8
  call void %926(%"class.blink::InlineBox"* %922) #13
  %927 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %921, i64 0, i32 0, i32 4
  %928 = bitcast %"class.blink::InlineFlowBox"** %927 to %"class.blink::RootInlineBox"**
  %929 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %928, align 8
  %930 = icmp eq %"class.blink::RootInlineBox"* %929, null
  %931 = icmp eq %"class.blink::RootInlineBox"* %929, %908
  %932 = or i1 %930, %931
  br i1 %932, label %968, label %933

933:                                              ; preds = %920
  %934 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %929, i64 0, i32 8, i32 0
  %935 = load i32, i32* %934, align 4
  %936 = icmp sge i32 %935, %912
  %937 = icmp slt i32 %935, 0
  %938 = or i1 %936, %937
  br i1 %938, label %920, label %968

939:                                              ; preds = %939, %893
  %940 = phi %"class.blink::RootInlineBox"* [ %856, %893 ], [ %965, %939 ]
  %941 = phi i32 [ %894, %893 ], [ %966, %939 ]
  %942 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %940, i64 0, i32 0, i32 4
  %943 = bitcast %"class.blink::InlineFlowBox"** %942 to %"class.blink::RootInlineBox"**
  %944 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %943, align 8
  %945 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %944, i64 0, i32 0, i32 4
  %946 = bitcast %"class.blink::InlineFlowBox"** %945 to %"class.blink::RootInlineBox"**
  %947 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %946, align 8
  %948 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %947, i64 0, i32 0, i32 4
  %949 = bitcast %"class.blink::InlineFlowBox"** %948 to %"class.blink::RootInlineBox"**
  %950 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %949, align 8
  %951 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %950, i64 0, i32 0, i32 4
  %952 = bitcast %"class.blink::InlineFlowBox"** %951 to %"class.blink::RootInlineBox"**
  %953 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %952, align 8
  %954 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %953, i64 0, i32 0, i32 4
  %955 = bitcast %"class.blink::InlineFlowBox"** %954 to %"class.blink::RootInlineBox"**
  %956 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %955, align 8
  %957 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %956, i64 0, i32 0, i32 4
  %958 = bitcast %"class.blink::InlineFlowBox"** %957 to %"class.blink::RootInlineBox"**
  %959 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %958, align 8
  %960 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %959, i64 0, i32 0, i32 4
  %961 = bitcast %"class.blink::InlineFlowBox"** %960 to %"class.blink::RootInlineBox"**
  %962 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %961, align 8
  %963 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %962, i64 0, i32 0, i32 4
  %964 = bitcast %"class.blink::InlineFlowBox"** %963 to %"class.blink::RootInlineBox"**
  %965 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %964, align 8
  %966 = add i32 %941, -8
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %895, label %939

968:                                              ; preds = %920, %933, %801, %907, %849, %789, %788
  call void @_ZN5blink15LayoutBlockFlow31ClearDidBreakAtLineToAvoidWidowEv(%"class.blink::LayoutBlockFlow"* %0) #13
  br label %969

969:                                              ; preds = %875, %838, %843, %968
  %970 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %971 = load %"class.blink::LineLayoutBox"*, %"class.blink::LineLayoutBox"** %970, align 8
  %972 = icmp eq %"class.blink::LineLayoutBox"* %971, null
  %973 = bitcast %"class.blink::LineLayoutBox"* %971 to i8*
  br i1 %972, label %980, label %974, !prof !10

974:                                              ; preds = %969
  %975 = getelementptr inbounds %"class.blink::LineBreaker", %"class.blink::LineBreaker"* %11, i64 0, i32 3, i32 0, i32 0, i32 2
  %976 = load i32, i32* %975, align 4
  %977 = icmp eq i32 %976, 0
  br i1 %977, label %979, label %978, !prof !9

978:                                              ; preds = %974
  store i32 0, i32* %975, align 4
  br label %979

979:                                              ; preds = %978, %974
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %973) #13
  store %"class.blink::LineLayoutBox"* null, %"class.blink::LineLayoutBox"** %970, align 8
  br label %980

980:                                              ; preds = %969, %979
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #13
  %981 = getelementptr inbounds %"class.blink::VerticalPositionCache", %"class.blink::VerticalPositionCache"* %10, i64 0, i32 1, i32 0, i32 0
  %982 = load %"struct.WTF::KeyValuePair.2272"*, %"struct.WTF::KeyValuePair.2272"** %981, align 8
  %983 = icmp eq %"struct.WTF::KeyValuePair.2272"* %982, null
  br i1 %983, label %986, label %984, !prof !10

984:                                              ; preds = %980
  %985 = bitcast %"struct.WTF::KeyValuePair.2272"* %982 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %985) #13
  store %"struct.WTF::KeyValuePair.2272"* null, %"struct.WTF::KeyValuePair.2272"** %981, align 8
  br label %986

986:                                              ; preds = %984, %980
  %987 = getelementptr inbounds %"class.blink::VerticalPositionCache", %"class.blink::VerticalPositionCache"* %10, i64 0, i32 0, i32 0, i32 0
  %988 = load %"struct.WTF::KeyValuePair.2272"*, %"struct.WTF::KeyValuePair.2272"** %987, align 8
  %989 = icmp eq %"struct.WTF::KeyValuePair.2272"* %988, null
  br i1 %989, label %992, label %990, !prof !10

990:                                              ; preds = %986
  %991 = bitcast %"struct.WTF::KeyValuePair.2272"* %988 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %991) #13
  store %"struct.WTF::KeyValuePair.2272"* null, %"struct.WTF::KeyValuePair.2272"** %987, align 8
  br label %992

992:                                              ; preds = %986, %990
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %89) #13
  %993 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 2
  %994 = load %"class.icu_69::BreakIterator"*, %"class.icu_69::BreakIterator"** %993, align 8
  %995 = icmp eq %"class.icu_69::BreakIterator"* %994, null
  br i1 %995, label %997, label %996

996:                                              ; preds = %992
  call void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"* nonnull %994) #13
  br label %997

997:                                              ; preds = %996, %992
  %998 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %999 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %998, align 8
  %1000 = icmp eq %"class.WTF::StringImpl"* %999, null
  br i1 %1000, label %1014, label %1001

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1003 = load atomic i32, i32* %1002 monotonic, align 4
  %1004 = and i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 0
  %1007 = load i32, i32* %1006, align 4
  br i1 %1005, label %1008, label %1010

1008:                                             ; preds = %1001
  %1009 = add i32 %1007, -1
  store i32 %1009, i32* %1006, align 4
  br label %1010

1010:                                             ; preds = %1008, %1001
  %1011 = phi i32 [ %1009, %1008 ], [ %1007, %1001 ]
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1010
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %999) #13
  br label %1014

1014:                                             ; preds = %1013, %1010, %997
  %1015 = getelementptr inbounds %"struct.blink::LayoutTextInfo", %"struct.blink::LayoutTextInfo"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %1016 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1015, align 8
  %1017 = icmp eq %"class.WTF::StringImpl"* %1016, null
  br i1 %1017, label %1031, label %1018

1018:                                             ; preds = %1014
  %1019 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1020 = load atomic i32, i32* %1019 monotonic, align 4
  %1021 = and i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 0
  %1024 = load i32, i32* %1023, align 4
  br i1 %1022, label %1025, label %1027

1025:                                             ; preds = %1018
  %1026 = add i32 %1024, -1
  store i32 %1026, i32* %1023, align 4
  br label %1027

1027:                                             ; preds = %1025, %1018
  %1028 = phi i32 [ %1026, %1025 ], [ %1024, %1018 ]
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1027
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1016) #13
  br label %1031

1031:                                             ; preds = %1014, %1027, %1030
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %82) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow21LinkToEndLineIfNeededERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::InlineIterator", align 8
  %6 = alloca %"class.blink::BidiResolver", align 8
  %7 = alloca %"struct.blink::BidiStatus", align 8
  %8 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  %9 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %8, align 8
  %10 = icmp eq %"class.blink::RootInlineBox"* %9, null
  br i1 %10, label %193, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 6
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %186, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 8
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp ne i8 %21, 0
  br label %23

23:                                               ; preds = %19, %15
  %24 = phi i1 [ true, %15 ], [ %22, %19 ]
  %25 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %37 = select i1 %34, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 5, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %40) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !9
  store i32 %46, i32* %26, align 4
  %47 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %48 = bitcast i64* %3 to i8*
  %49 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %50 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %49 to i96*
  br label %72

51:                                               ; preds = %181
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %57 = bitcast %"class.blink::InlineFlowBox"** %56 to %"class.blink::RootInlineBox"**
  %58 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %58, i64 0, i32 8, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = and i160 %55, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %51
  %64 = load i32, i32* %35, align 4
  %65 = icmp eq i32 %64, %60
  br i1 %65, label %71, label %66

66:                                               ; preds = %63
  store i32 %60, i32* %35, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %27) #13
  br label %71

67:                                               ; preds = %51
  %68 = load i32, i32* %36, align 4
  %69 = icmp eq i32 %68, %60
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  store i32 %60, i32* %36, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %27) #13
  br label %71

71:                                               ; preds = %63, %66, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  br label %193

72:                                               ; preds = %23, %181
  %73 = phi %"class.blink::RootInlineBox"* [ %9, %23 ], [ %184, %181 ]
  %74 = bitcast %"class.blink::RootInlineBox"* %73 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink13InlineFlowBox10AttachLineEv(%"class.blink::InlineFlowBox"* nonnull %74) #13
  br i1 %24, label %75, label %85

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 10, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %26, align 4
  %79 = icmp sgt i32 %77, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %78, i32 %77) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !9
  store i32 %84, i32* %26, align 4
  call void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %73, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4) #13
  br label %85

85:                                               ; preds = %75, %72
  %86 = load i32, i32* %26, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  %90 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 0, i32 0, i32 7, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 2048
  %93 = icmp eq i32 %92, 0
  %94 = zext i32 %86 to i64
  %95 = shl nuw i64 %94, 32
  %96 = select i1 %93, i64 %94, i64 %95
  store i64 %96, i64* %3, align 8
  %97 = bitcast %"class.blink::RootInlineBox"* %73 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %98 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %98, i64 10
  %100 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %99, align 8
  call void %100(%"class.blink::InlineBox"* %89, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %47) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %101

101:                                              ; preds = %85, %88
  %102 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::Vector.1695"*, %"class.WTF::Vector.1695"** %102, align 8
  %104 = icmp eq %"class.WTF::Vector.1695"* %103, null
  br i1 %104, label %181, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %103, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %106, align 8
  %108 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %103, i64 0, i32 0, i32 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %107, i64 %110
  %112 = icmp eq i32 %109, 0
  br i1 %112, label %181, label %113

113:                                              ; preds = %105, %161
  %114 = phi %"class.blink::LayoutBox"** [ %179, %161 ], [ %107, %105 ]
  %115 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %114, align 8
  %116 = call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %115) #13
  %117 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %116, i64 0, i32 1
  store %"class.blink::RootInlineBox"* %73, %"class.blink::RootInlineBox"** %117, align 8
  %118 = load i96, i96* %50, align 4
  %119 = trunc i96 %118 to i32
  %120 = icmp slt i32 %119, 0
  %121 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 2
  %122 = bitcast %"class.blink::LayoutRect"* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = lshr i64 %123, 32
  %125 = select i1 %120, i64 %124, i64 %123
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 0
  %128 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %129 = icmp eq %"class.blink::ComputedStyle"* %128, null
  %130 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %115, i64 0, i32 0, i32 0, i32 5, i32 0
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %130, align 8
  %132 = select i1 %129, %"class.blink::ComputedStyle"* %131, %"class.blink::ComputedStyle"* %128
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8, !noalias !28
  %136 = lshr i160 %135, 102
  %137 = trunc i160 %136 to i8
  %138 = and i8 %137, 3
  %139 = bitcast %"class.blink::LayoutBox"* %115 to i8*
  switch i8 %138, label %140 [
    i8 0, label %149
    i8 1, label %141
  ]

140:                                              ; preds = %113
  br label %141

141:                                              ; preds = %140, %113
  %142 = phi { i64, i64 } [ { i64 1033, i64 0 }, %140 ], [ { i64 1041, i64 0 }, %113 ]
  %143 = extractvalue { i64, i64 } %142, 0
  %144 = extractvalue { i64, i64 } %142, 1
  %145 = getelementptr inbounds i8, i8* %139, i64 %144
  %146 = bitcast i8* %145 to %"class.blink::LayoutBoxModelObject"*
  %147 = and i64 %143, 1
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %159, label %149

149:                                              ; preds = %141, %113
  %150 = phi %"class.blink::LayoutBoxModelObject"* [ %146, %141 ], [ %127, %113 ]
  %151 = phi i8* [ %145, %141 ], [ %139, %113 ]
  %152 = phi i64 [ %143, %141 ], [ 1017, %113 ]
  %153 = bitcast i8* %151 to i8**
  %154 = load i8*, i8** %153, align 8
  %155 = add i64 %152, -1
  %156 = getelementptr i8, i8* %154, i64 %155
  %157 = bitcast i8* %156 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %157, align 8
  br label %161

159:                                              ; preds = %141
  %160 = inttoptr i64 %143 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %161

161:                                              ; preds = %149, %159
  %162 = phi %"class.blink::LayoutBoxModelObject"* [ %150, %149 ], [ %146, %159 ]
  %163 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %158, %149 ], [ %160, %159 ]
  %164 = call i32 %163(%"class.blink::LayoutBoxModelObject"* %162) #13
  %165 = icmp sgt i32 %164, -1
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %126, i32 %164) #13
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !9
  %171 = load i32, i32* %26, align 4
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %170, i32 %171) #13
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !9
  %178 = call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %177, %"class.blink::LineWidth"* null) #13
  %179 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %114, i64 1
  %180 = icmp eq %"class.blink::LayoutBox"** %179, %111
  br i1 %180, label %181, label %113

181:                                              ; preds = %161, %105, %101
  %182 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 0, i32 5
  %183 = bitcast %"class.blink::InlineFlowBox"** %182 to %"class.blink::RootInlineBox"**
  %184 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %183, align 8
  %185 = icmp eq %"class.blink::RootInlineBox"* %184, null
  br i1 %185, label %51, label %72

186:                                              ; preds = %11, %186
  %187 = phi %"class.blink::RootInlineBox"* [ %190, %186 ], [ %9, %11 ]
  %188 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %187, i64 0, i32 0, i32 5
  %189 = bitcast %"class.blink::InlineFlowBox"** %188 to %"class.blink::RootInlineBox"**
  %190 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %189, align 8
  %191 = bitcast %"class.blink::RootInlineBox"* %187 to %"class.blink::InlineFlowBox"*
  tail call void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"* nonnull %191) #13
  %192 = icmp eq %"class.blink::RootInlineBox"* %190, null
  br i1 %192, label %193, label %186

193:                                              ; preds = %186, %2, %71
  %194 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %195 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 9
  %197 = bitcast [20 x i8]* %196 to i160*
  %198 = load i160, i160* %197, align 8
  %199 = and i160 %198, 15211807202738752817960438464512
  %200 = icmp eq i160 %199, 0
  %201 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %202 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %203 = select i1 %200, i32* %201, i32* %202
  %204 = load i32, i32* %203, align 4
  %205 = call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %204, %"class.blink::LineWidth"* null) #13
  br i1 %205, label %206, label %262

206:                                              ; preds = %193
  %207 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %208 = bitcast %"class.blink::InlineFlowBox"** %207 to %"class.blink::RootInlineBox"**
  %209 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %208, align 8
  %210 = icmp eq %"class.blink::RootInlineBox"* %209, null
  br i1 %210, label %262, label %211

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::InlineIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %212) #13
  %213 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %212, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %213, align 8
  %214 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %5, i64 0, i32 3
  store i32 0, i32* %214, align 4
  %215 = bitcast %"class.blink::BidiResolver"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 424, i8* nonnull %215) #13
  %216 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %216, align 8
  %217 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 0, i32 3
  %218 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 1, i32 2
  %219 = bitcast i32* %217 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %219, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %218, align 8
  %220 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 1, i32 3
  %221 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 2, i32 2
  %222 = bitcast i32* %220 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %222, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %221, align 8
  %223 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 2, i32 3
  %224 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 3, i32 2
  %225 = bitcast i32* %223 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %225, i8 0, i64 20, i1 false) #13
  %226 = bitcast i32* %224 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 0, i32 10, i32 10>, <4 x i32>* %226, align 8
  %227 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 4, i32 2
  store i32 10, i32* %227, align 8
  %228 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 4, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %228, align 8
  %229 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 5
  store i32 10, i32* %229, align 8
  %230 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 6
  %231 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 6, i32 2
  %232 = bitcast %"class.blink::InlineIterator"* %230 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %232, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %231, align 8
  %233 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 6, i32 3
  %234 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 7, i32 2
  %235 = bitcast i32* %233 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %235, i8 0, i64 20, i1 false) #13
  store i32 -1, i32* %234, align 8
  %236 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 7, i32 3
  store i32 0, i32* %236, align 4
  %237 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 8
  store i8 0, i8* %237, align 8
  %238 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 9
  %239 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 9, i32 2
  %240 = bitcast %"class.blink::InlineIterator"* %238 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %240, i8 0, i64 16, i1 false) #13
  store i32 -1, i32* %239, align 8
  %241 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 9, i32 3
  store i32 0, i32* %241, align 4
  %242 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 10
  store i8 1, i8* %242, align 8
  %243 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 12
  %244 = bitcast %"class.blink::BidiRunList"* %243 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %244, i8 0, i64 28, i1 false) #13
  %245 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 13
  %246 = bitcast %"class.blink::MidpointState"* %245 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 25, i1 false) #13
  %247 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 14
  store i32 0, i32* %247, align 8
  %248 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 15
  %249 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 19
  %250 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 19, i32 0, i32 1, i64 0
  %251 = bitcast %"class.WTF::Vector.2303"* %249 to i8**
  %252 = bitcast %"class.WTF::Vector.2298"* %248 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %252, i8 0, i64 25, i1 false) #13
  store i8* %250, i8** %251, align 8
  %253 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 19, i32 0, i32 0, i32 1
  store i32 8, i32* %253, align 8
  %254 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 19, i32 0, i32 0, i32 2
  store i32 0, i32* %254, align 4
  %255 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %6, i64 0, i32 20
  %256 = bitcast %"class.WTF::HashMap.2308"* %255 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 20, i1 false) #13
  %257 = bitcast %"struct.blink::BidiStatus"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #13
  %258 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %7, i64 0, i32 0
  store i32 10, i32* %258, align 8
  %259 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %7, i64 0, i32 1
  store i32 10, i32* %259, align 4
  %260 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %7, i64 0, i32 2
  store i32 10, i32* %260, align 8
  %261 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %7, i64 0, i32 3, i32 0
  store %"class.blink::BidiContext"* null, %"class.blink::BidiContext"** %261, align 8
  call void @_ZN5blink15LayoutBlockFlow22AppendFloatsToLastLineERNS_15LineLayoutStateERKNS_14InlineIteratorERKNS_12BidiResolverIS3_NS_7BidiRunENS_15BidiIsolatedRunEEERKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::InlineIterator"* nonnull dereferenceable(24) %5, %"class.blink::BidiResolver"* nonnull dereferenceable(424) %6, %"struct.blink::BidiStatus"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #13
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEED2Ev(%"class.blink::BidiResolver"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 424, i8* nonnull %215) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %212) #13
  br label %262

262:                                              ; preds = %206, %193, %211
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow35MarkDirtyFloatsForPaintInvalidationERN3WTF6VectorINS0_13FloatWithRectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2288"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %1, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = icmp eq i32 %4, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %40, %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %17 = select i1 %14, i32* %15, i32* %16
  %18 = load i32, i32* %17, align 4
  %19 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"* %0, i32 %18, %"class.blink::LineWidth"* null) #13
  ret void

20:                                               ; preds = %2, %40
  %21 = phi i64 [ %42, %40 ], [ 0, %2 ]
  %22 = trunc i64 %21 to i32
  %23 = tail call dereferenceable(32) %"struct.blink::LayoutBlockFlow::FloatWithRect"* @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2288"* %1, i32 %22) #13
  %24 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %23, i64 0, i32 0
  %25 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %24, align 8
  %26 = tail call dereferenceable(32) %"struct.blink::LayoutBlockFlow::FloatWithRect"* @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2288"* %1, i32 %22) #13
  %27 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %26, i64 0, i32 2
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %40

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %25, i64 0, i32 2
  %32 = bitcast %"class.blink::LayoutRect"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = icmp ne i32 %34, 0
  %36 = icmp ugt i64 %33, 4294967295
  %37 = or i1 %36, %35
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %25, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %39, i8 zeroext 3) #13
  br label %40

40:                                               ; preds = %30, %20, %38
  %41 = tail call %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %25) #13
  %42 = add nuw nsw i64 %21, 1
  %43 = icmp eq i64 %42, %5
  br i1 %43, label %7, label %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEED2Ev(%"class.blink::BidiResolver"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.2312"* %3, null
  br i1 %4, label %32, label %5, !prof !10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 20, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %27, %9
  %12 = phi i64 [ 0, %9 ], [ %28, %27 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %3, i64 %12, i32 0
  %14 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %13, align 8
  %15 = icmp eq %"struct.blink::BidiRun"* %14, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %17, align 8
  %19 = icmp eq %"class.blink::InlineIterator"* %18, null
  %20 = bitcast %"class.blink::InlineIterator"* %18 to i8*
  br i1 %19, label %27, label %21, !prof !10

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !9

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #13
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %17, align 8
  br label %27

27:                                               ; preds = %26, %16, %11
  %28 = add nuw nsw i64 %12, 1
  %29 = icmp eq i64 %28, %10
  br i1 %29, label %30, label %11

30:                                               ; preds = %27, %5
  %31 = bitcast %"struct.WTF::KeyValuePair.2312"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %31) #13
  store %"struct.WTF::KeyValuePair.2312"* null, %"struct.WTF::KeyValuePair.2312"** %2, align 8
  br label %32

32:                                               ; preds = %1, %30
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %34 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !9

37:                                               ; preds = %32
  store i32 0, i32* %34, align 4
  br label %38

38:                                               ; preds = %37, %32
  %39 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %42 = bitcast i8* %41 to %"class.blink::BidiEmbedding"*
  %43 = icmp eq %"class.blink::BidiEmbedding"* %40, %42
  br i1 %43, label %46, label %44, !prof !10

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %33, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2304"* %45, %"class.blink::BidiEmbedding"* %40) #13
  br label %46

46:                                               ; preds = %38, %44
  store %"class.blink::BidiEmbedding"* null, %"class.blink::BidiEmbedding"** %39, align 8
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %47, align 8
  %49 = icmp eq %"struct.blink::BidiIsolatedRun"* %48, null
  %50 = bitcast %"struct.blink::BidiIsolatedRun"* %48 to i8*
  br i1 %49, label %57, label %51, !prof !10

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 15, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !9

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #13
  store %"struct.blink::BidiIsolatedRun"* null, %"struct.blink::BidiIsolatedRun"** %47, align 8
  br label %57

57:                                               ; preds = %46, %56
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %58, align 8
  %60 = icmp eq %"class.blink::InlineIterator"* %59, null
  %61 = bitcast %"class.blink::InlineIterator"* %59 to i8*
  br i1 %60, label %68, label %62, !prof !10

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66, !prof !9

66:                                               ; preds = %62
  store i32 0, i32* %63, align 4
  br label %67

67:                                               ; preds = %66, %62
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #13
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %58, align 8
  br label %68

68:                                               ; preds = %57, %67
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %70 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %69, align 8
  %71 = icmp eq %"class.blink::BidiContext"* %70, null
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %70, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %70) #13
  %77 = bitcast %"class.blink::BidiContext"* %70 to i8*
  tail call void @free(i8* %77) #13
  br label %78

78:                                               ; preds = %68, %72, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow22AppendFloatsToLastLineERNS_15LineLayoutStateERKNS_14InlineIteratorERKNS_12BidiResolverIS3_NS_7BidiRunENS_15BidiIsolatedRunEEERKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* dereferenceable(64), %"class.blink::InlineIterator"* nocapture readonly dereferenceable(24), %"class.blink::BidiResolver"* nocapture readonly dereferenceable(424), %"struct.blink::BidiStatus"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 1
  %10 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %9, align 8
  %11 = icmp eq %"class.blink::FloatingObject"* %10, null
  br i1 %11, label %93, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::MallocedListHashSetNode"**, %"class.WTF::MallocedListHashSetNode"*** %13, align 8
  %15 = icmp eq %"class.WTF::MallocedListHashSetNode"** %14, null
  %16 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %80, label %18

18:                                               ; preds = %12
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = bitcast %"class.blink::FloatingObject"* %10 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = shl i64 %22, 32
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 22
  %27 = xor i64 %26, %25
  %28 = shl i64 %27, 13
  %29 = xor i64 %28, -1
  %30 = add i64 %27, %29
  %31 = lshr i64 %30, 8
  %32 = xor i64 %31, %30
  %33 = mul i64 %32, 9
  %34 = lshr i64 %33, 15
  %35 = xor i64 %34, %33
  %36 = shl i64 %35, 27
  %37 = xor i64 %36, -1
  %38 = add i64 %35, %37
  %39 = lshr i64 %38, 31
  %40 = xor i64 %39, %38
  %41 = trunc i64 %40 to i32
  %42 = and i32 %19, %41
  %43 = zext i32 %42 to i64
  %44 = xor i32 %41, -1
  %45 = lshr i32 %41, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  %57 = inttoptr i64 %22 to %"class.blink::LayoutBox"*
  br label %58

58:                                               ; preds = %70, %18
  %59 = phi i64 [ 0, %18 ], [ %72, %70 ]
  %60 = phi i64 [ %43, %18 ], [ %74, %70 ]
  %61 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %14, i64 %60
  %62 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %61, align 8
  %63 = ptrtoint %"class.WTF::MallocedListHashSetNode"* %62 to i64
  switch i64 %63, label %64 [
    i64 0, label %80
    i64 -1, label %70
  ]

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %66, i64 0, i32 0
  %68 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %67, align 8
  %69 = icmp eq %"class.blink::LayoutBox"* %68, %57
  br i1 %69, label %75, label %70

70:                                               ; preds = %64, %58
  %71 = icmp eq i64 %59, 0
  %72 = select i1 %71, i64 %56, i64 %59
  %73 = add i64 %72, %60
  %74 = and i64 %73, %20
  br label %58

75:                                               ; preds = %64
  %76 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %14, i64 %60
  %77 = icmp eq %"class.WTF::MallocedListHashSetNode"** %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = zext i32 %17 to i64
  br label %83

80:                                               ; preds = %58, %75, %12
  %81 = zext i32 %17 to i64
  %82 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %14, i64 %81
  br label %83

83:                                               ; preds = %80, %78
  %84 = phi i64 [ %79, %78 ], [ %81, %80 ]
  %85 = phi %"class.WTF::MallocedListHashSetNode"** [ %76, %78 ], [ %82, %80 ]
  %86 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %14, i64 %84
  %87 = icmp eq %"class.WTF::MallocedListHashSetNode"** %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %83
  %89 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %85, align 8
  br label %90

90:                                               ; preds = %83, %88
  %91 = phi %"class.WTF::MallocedListHashSetNode"* [ %89, %88 ], [ null, %83 ]
  %92 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %91, i64 0, i32 2
  br label %93

93:                                               ; preds = %5, %90
  %94 = phi %"class.WTF::MallocedListHashSetNode"** [ %8, %5 ], [ %92, %90 ]
  %95 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %94, align 8
  %96 = icmp eq %"class.WTF::MallocedListHashSetNode"* %95, null
  br i1 %96, label %183, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %2, i64 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  %100 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 6
  %101 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %102 = bitcast %"class.blink::InlineFlowBox"** %101 to %"class.blink::RootInlineBox"**
  %103 = bitcast %"class.blink::InlineFlowBox"** %101 to i64*
  %104 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 0
  %105 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 4
  br label %106

106:                                              ; preds = %97, %177
  %107 = phi %"class.WTF::MallocedListHashSetNode"* [ %95, %97 ], [ %181, %177 ]
  %108 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %108, align 8
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %111 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %109, i64 0, i32 0
  %112 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %112, i64 0, i32 0, i32 0
  %114 = icmp eq %"class.blink::LayoutObject"* %110, %113
  br i1 %114, label %115, label %127

115:                                              ; preds = %106
  %116 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %99, align 8
  %117 = icmp eq %"class.blink::RootInlineBox"* %116, null
  br i1 %117, label %127, label %118

118:                                              ; preds = %115
  %119 = load i8, i8* %100, align 4, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  store i8 1, i8* %100, align 4
  br label %192

122:                                              ; preds = %118
  %123 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow14MatchedEndLineERNS_15LineLayoutStateERKNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERKS4_RKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1, %"class.blink::BidiResolver"* dereferenceable(424) %3, %"class.blink::InlineIterator"* dereferenceable(24) %2, %"struct.blink::BidiStatus"* dereferenceable(24) %4)
  %124 = zext i1 %123 to i8
  store i8 %124, i8* %100, align 4
  br i1 %123, label %192, label %125

125:                                              ; preds = %122
  %126 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %111, align 8
  br label %127

127:                                              ; preds = %125, %106, %115
  %128 = phi %"class.blink::LayoutBox"* [ %126, %125 ], [ %112, %106 ], [ %112, %115 ]
  %129 = load i64, i64* %103, align 8
  %130 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %109, i64 0, i32 1
  %131 = bitcast %"class.blink::RootInlineBox"** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %102, align 8
  tail call void @_ZN5blink13RootInlineBox11AppendFloatEPNS_9LayoutBoxE(%"class.blink::RootInlineBox"* %132, %"class.blink::LayoutBox"* %128) #13
  %133 = load i32, i32* %105, align 4
  %134 = tail call dereferenceable(32) %"struct.blink::LayoutBlockFlow::FloatWithRect"* @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2288"* %104, i32 %133) #13
  %135 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %134, i64 0, i32 1
  %136 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %109, i64 0, i32 2
  %137 = bitcast %"class.blink::LayoutRect"* %135 to i64*
  %138 = load i64, i64* %137, align 4
  %139 = trunc i64 %138 to i32
  %140 = lshr i64 %138, 32
  %141 = trunc i64 %140 to i32
  %142 = bitcast %"class.blink::LayoutRect"* %136 to i64*
  %143 = load i64, i64* %142, align 4
  %144 = trunc i64 %143 to i32
  %145 = lshr i64 %143, 32
  %146 = trunc i64 %145 to i32
  %147 = icmp eq i32 %139, %144
  %148 = icmp eq i32 %141, %146
  %149 = and i1 %147, %148
  br i1 %149, label %150, label %166

150:                                              ; preds = %127
  %151 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %134, i64 0, i32 1, i32 1
  %152 = bitcast %"class.blink::LayoutSize"* %151 to i64*
  %153 = load i64, i64* %152, align 4
  %154 = trunc i64 %153 to i32
  %155 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %109, i64 0, i32 2, i32 1
  %156 = bitcast %"class.blink::LayoutSize"* %155 to i64*
  %157 = load i64, i64* %156, align 4
  %158 = trunc i64 %157 to i32
  %159 = icmp eq i32 %154, %158
  br i1 %159, label %160, label %166

160:                                              ; preds = %150
  %161 = lshr i64 %157, 32
  %162 = trunc i64 %161 to i32
  %163 = lshr i64 %153, 32
  %164 = trunc i64 %163 to i32
  %165 = icmp eq i32 %164, %162
  br i1 %165, label %177, label %166

166:                                              ; preds = %160, %127, %150
  %167 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %99, align 8
  %168 = icmp eq %"class.blink::RootInlineBox"* %167, null
  br i1 %168, label %176, label %169

169:                                              ; preds = %166, %169
  %170 = phi %"class.blink::RootInlineBox"* [ %173, %169 ], [ %167, %166 ]
  %171 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %170, i64 0, i32 0, i32 5
  %172 = bitcast %"class.blink::InlineFlowBox"** %171 to %"class.blink::RootInlineBox"**
  %173 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %172, align 8
  %174 = bitcast %"class.blink::RootInlineBox"* %170 to %"class.blink::InlineFlowBox"*
  tail call void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"* nonnull %174) #13
  %175 = icmp eq %"class.blink::RootInlineBox"* %173, null
  br i1 %175, label %176, label %169

176:                                              ; preds = %169, %166
  store %"class.blink::RootInlineBox"* null, %"class.blink::RootInlineBox"** %99, align 8
  br label %177

177:                                              ; preds = %160, %176
  %178 = load i32, i32* %105, align 4
  %179 = add i32 %178, 1
  store i32 %179, i32* %105, align 4
  %180 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %107, i64 0, i32 2
  %181 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %180, align 8
  %182 = icmp eq %"class.WTF::MallocedListHashSetNode"* %181, null
  br i1 %182, label %183, label %106

183:                                              ; preds = %177, %93
  %184 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %7, i64 0, i32 0, i32 2
  %189 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %188, align 8
  %190 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %189, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %190, align 8
  br label %192

192:                                              ; preds = %122, %187, %183, %121
  %193 = phi %"class.blink::FloatingObject"* [ %109, %121 ], [ %191, %187 ], [ null, %183 ], [ %109, %122 ]
  store %"class.blink::FloatingObject"* %193, %"class.blink::FloatingObject"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow14MatchedEndLineERNS_15LineLayoutStateERKNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERKS4_RKNS_10BidiStatusE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* nocapture dereferenceable(64), %"class.blink::BidiResolver"* nocapture readonly dereferenceable(424), %"class.blink::InlineIterator"* nocapture readonly dereferenceable(24), %"struct.blink::BidiStatus"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::BidiStatus", align 8
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %44

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %14, %16
  br i1 %17, label %18, label %44

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %124

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %26, %28
  br i1 %29, label %30, label %124

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %124

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 3, i32 0
  %38 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %4, i64 0, i32 3, i32 0
  %40 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %39, align 8
  %41 = tail call zeroext i1 @_ZN5blinkeqERKNS_11BidiContextES2_(%"class.blink::BidiContext"* dereferenceable(16) %38, %"class.blink::BidiContext"* dereferenceable(16) %40) #13
  br i1 %41, label %42, label %124

42:                                               ; preds = %36
  %43 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow33CheckPaginationAndFloatsAtEndLineERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1)
  br label %124

44:                                               ; preds = %5, %12
  %45 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  %46 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %45, align 8
  %47 = icmp eq %"class.blink::RootInlineBox"* %46, null
  br i1 %47, label %124, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 0, i32 1, i32 0
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %46, i64 0, i32 2, i32 0
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %52, %50
  br i1 %53, label %54, label %119

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %46, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, %8
  br i1 %57, label %58, label %119

58:                                               ; preds = %208, %195, %182, %169, %156, %143, %130, %54
  %59 = phi %"class.blink::RootInlineBox"* [ %46, %54 ], [ %122, %130 ], [ %137, %143 ], [ %150, %156 ], [ %163, %169 ], [ %176, %182 ], [ %189, %195 ], [ %202, %208 ]
  %60 = bitcast %"struct.blink::BidiStatus"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #13
  call void @_ZNK5blink13RootInlineBox19LineBreakBidiStatusEv(%"struct.blink::BidiStatus"* nonnull sret %6, %"class.blink::RootInlineBox"* nonnull %59) #13
  %61 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %85

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %68, %70
  br i1 %71, label %72, label %85

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %85

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 3, i32 0
  %80 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 4, i32 3, i32 0
  %82 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %81, align 8
  %83 = call zeroext i1 @_ZN5blinkeqERKNS_11BidiContextES2_(%"class.blink::BidiContext"* dereferenceable(16) %80, %"class.blink::BidiContext"* dereferenceable(16) %82) #13
  %84 = xor i1 %83, true
  br label %85

85:                                               ; preds = %58, %66, %72, %78
  %86 = phi i1 [ true, %72 ], [ true, %66 ], [ true, %58 ], [ %84, %78 ]
  %87 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %6, i64 0, i32 3, i32 0
  %88 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %87, align 8
  %89 = icmp eq %"class.blink::BidiContext"* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %88) #13
  %95 = bitcast %"class.blink::BidiContext"* %88 to i8*
  call void @free(i8* %95) #13
  br label %96

96:                                               ; preds = %85, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #13
  br i1 %86, label %124, label %97

97:                                               ; preds = %96
  %98 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %59, i64 0, i32 0, i32 5
  %99 = bitcast %"class.blink::InlineFlowBox"** %98 to %"class.blink::RootInlineBox"**
  %100 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %99, align 8
  store %"class.blink::RootInlineBox"* %100, %"class.blink::RootInlineBox"** %45, align 8
  %101 = icmp eq %"class.blink::RootInlineBox"* %100, null
  br i1 %101, label %107, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %59, i64 0, i32 8, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 5, i32 0
  store i32 %104, i32* %105, align 8
  %106 = call zeroext i1 @_ZN5blink15LayoutBlockFlow33CheckPaginationAndFloatsAtEndLineERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* dereferenceable(64) %1)
  br label %107

107:                                              ; preds = %97, %102
  %108 = phi i1 [ %106, %102 ], [ false, %97 ]
  %109 = icmp eq %"class.blink::RootInlineBox"* %46, %100
  br i1 %109, label %124, label %110

110:                                              ; preds = %107, %110
  %111 = phi %"class.blink::RootInlineBox"* [ %114, %110 ], [ %46, %107 ]
  %112 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %111, i64 0, i32 0, i32 5
  %113 = bitcast %"class.blink::InlineFlowBox"** %112 to %"class.blink::RootInlineBox"**
  %114 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %113, align 8
  %115 = bitcast %"class.blink::RootInlineBox"* %111 to %"class.blink::InlineFlowBox"*
  call void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"* nonnull %115) #13
  %116 = icmp eq %"class.blink::RootInlineBox"* %114, null
  %117 = icmp eq %"class.blink::RootInlineBox"* %114, %100
  %118 = or i1 %116, %117
  br i1 %118, label %124, label %110

119:                                              ; preds = %48, %54
  %120 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %46, i64 0, i32 0, i32 5
  %121 = bitcast %"class.blink::InlineFlowBox"** %120 to %"class.blink::RootInlineBox"**
  %122 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %121, align 8
  %123 = icmp eq %"class.blink::RootInlineBox"* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %204, %208, %119, %134, %147, %160, %173, %186, %199, %110, %44, %36, %107, %96, %18, %24, %30, %42
  %125 = phi i1 [ %43, %42 ], [ false, %36 ], [ false, %30 ], [ false, %24 ], [ false, %18 ], [ %108, %107 ], [ false, %96 ], [ false, %44 ], [ %108, %110 ], [ false, %199 ], [ false, %186 ], [ false, %173 ], [ false, %160 ], [ false, %147 ], [ false, %134 ], [ false, %119 ], [ false, %208 ], [ false, %204 ]
  ret i1 %125

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %122, i64 0, i32 2, i32 0
  %128 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %127, align 8
  %129 = icmp eq %"class.blink::LayoutObject"* %128, %50
  br i1 %129, label %130, label %134

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %122, i64 0, i32 1
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, %8
  br i1 %133, label %58, label %134

134:                                              ; preds = %130, %126
  %135 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %122, i64 0, i32 0, i32 5
  %136 = bitcast %"class.blink::InlineFlowBox"** %135 to %"class.blink::RootInlineBox"**
  %137 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %136, align 8
  %138 = icmp eq %"class.blink::RootInlineBox"* %137, null
  br i1 %138, label %124, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %137, i64 0, i32 2, i32 0
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %140, align 8
  %142 = icmp eq %"class.blink::LayoutObject"* %141, %50
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %137, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %145, %8
  br i1 %146, label %58, label %147

147:                                              ; preds = %143, %139
  %148 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %137, i64 0, i32 0, i32 5
  %149 = bitcast %"class.blink::InlineFlowBox"** %148 to %"class.blink::RootInlineBox"**
  %150 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %149, align 8
  %151 = icmp eq %"class.blink::RootInlineBox"* %150, null
  br i1 %151, label %124, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %150, i64 0, i32 2, i32 0
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = icmp eq %"class.blink::LayoutObject"* %154, %50
  br i1 %155, label %156, label %160

156:                                              ; preds = %152
  %157 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %150, i64 0, i32 1
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %8
  br i1 %159, label %58, label %160

160:                                              ; preds = %156, %152
  %161 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %150, i64 0, i32 0, i32 5
  %162 = bitcast %"class.blink::InlineFlowBox"** %161 to %"class.blink::RootInlineBox"**
  %163 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %162, align 8
  %164 = icmp eq %"class.blink::RootInlineBox"* %163, null
  br i1 %164, label %124, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 2, i32 0
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = icmp eq %"class.blink::LayoutObject"* %167, %50
  br i1 %168, label %169, label %173

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 1
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, %8
  br i1 %172, label %58, label %173

173:                                              ; preds = %169, %165
  %174 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %163, i64 0, i32 0, i32 5
  %175 = bitcast %"class.blink::InlineFlowBox"** %174 to %"class.blink::RootInlineBox"**
  %176 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %175, align 8
  %177 = icmp eq %"class.blink::RootInlineBox"* %176, null
  br i1 %177, label %124, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %176, i64 0, i32 2, i32 0
  %180 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %179, align 8
  %181 = icmp eq %"class.blink::LayoutObject"* %180, %50
  br i1 %181, label %182, label %186

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %176, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, %8
  br i1 %185, label %58, label %186

186:                                              ; preds = %182, %178
  %187 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %176, i64 0, i32 0, i32 5
  %188 = bitcast %"class.blink::InlineFlowBox"** %187 to %"class.blink::RootInlineBox"**
  %189 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %188, align 8
  %190 = icmp eq %"class.blink::RootInlineBox"* %189, null
  br i1 %190, label %124, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %189, i64 0, i32 2, i32 0
  %193 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %192, align 8
  %194 = icmp eq %"class.blink::LayoutObject"* %193, %50
  br i1 %194, label %195, label %199

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %189, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, %8
  br i1 %198, label %58, label %199

199:                                              ; preds = %195, %191
  %200 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %189, i64 0, i32 0, i32 5
  %201 = bitcast %"class.blink::InlineFlowBox"** %200 to %"class.blink::RootInlineBox"**
  %202 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %201, align 8
  %203 = icmp eq %"class.blink::RootInlineBox"* %202, null
  br i1 %203, label %124, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %202, i64 0, i32 2, i32 0
  %206 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %205, align 8
  %207 = icmp eq %"class.blink::LayoutObject"* %206, %50
  br i1 %207, label %208, label %124

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %202, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, %8
  br i1 %211, label %58, label %124
}

declare void @_ZN5blink11LineBreaker13NextLineBreakERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_8LineInfoERNS_14LayoutTextInfoERN3WTF6VectorINS_15WordMeasurementELj64ENSB_18PartitionAllocatorEEE(%"class.blink::InlineIterator"* sret, %"class.blink::LineBreaker"*, %"class.blink::BidiResolver"* dereferenceable(424), %"class.blink::LineInfo"* dereferenceable(12), %"struct.blink::LayoutTextInfo"* dereferenceable(80), %"class.WTF::Vector.2273"* dereferenceable(4112)) local_unnamed_addr #2

declare void @_ZN5blink13RootInlineBox16SetLineBreakInfoENS_14LineLayoutItemEjRKNS_10BidiStatusE(%"class.blink::RootInlineBox"*, %"class.blink::LayoutObject"*, i32, %"struct.blink::BidiStatus"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i8 @_ZN5blink32DeterminePlaintextDirectionalityENS_14LineLayoutItemES0_j(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9SetStatusENS_10BidiStatusE(%"class.blink::BidiResolver"*, %"struct.blink::BidiStatus"* byval(%"struct.blink::BidiStatus") align 8) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4
  %5 = bitcast %"struct.blink::BidiStatus"* %4 to i8*
  %6 = bitcast %"struct.blink::BidiStatus"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* nonnull align 8 %6, i64 12, i1 false) #13
  %7 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %8 = getelementptr inbounds %"struct.blink::BidiStatus", %"struct.blink::BidiStatus"* %1, i64 0, i32 3, i32 0
  %9 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %10 = icmp eq %"class.blink::BidiContext"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %18

18:                                               ; preds = %15, %11, %2
  %19 = ptrtoint %"class.blink::BidiContext"* %9 to i64
  %20 = bitcast %class.scoped_refptr.1691* %7 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr.1691, %class.scoped_refptr.1691* %7, i64 0, i32 0
  %22 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.blink::BidiContext"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %22) #13
  %29 = bitcast %"class.blink::BidiContext"* %22 to i8*
  call void @free(i8* %29) #13
  br label %30

30:                                               ; preds = %18, %24, %28
  %31 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %8, align 8
  %32 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 1
  %33 = load i16, i16* %32, align 4
  %34 = and i16 %33, 3968
  %35 = icmp ne i16 %34, 0
  %36 = zext i1 %35 to i8
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 18
  store i8 %36, i8* %37, align 1
  %38 = icmp eq %"class.blink::BidiContext"* %31, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %31) #13
  %44 = bitcast %"class.blink::BidiContext"* %31 to i8*
  call void @free(i8* %44) #13
  br label %45

45:                                               ; preds = %30, %39, %43
  ret void
}

declare void @_ZN5blink24ConstructBidiRunsForLineERNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEERNS_11BidiRunListIS2_EERKS1_NS_23VisualDirectionOverrideEbb(%"class.blink::BidiResolver"* dereferenceable(424), %"class.blink::BidiRunList"* dereferenceable(32), %"class.blink::InlineIterator"* dereferenceable(24), i32, i1 zeroext, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"* dereferenceable(160), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink13InlineFlowBox10DeleteLineEv(%"class.blink::InlineFlowBox"*) unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow11ClearFloatsENS_6EClearE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow26SetBreakAtLineToAvoidWidowEi(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutBlockFlow9LineCountEPKNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::RootInlineBox"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow26MarkLinesDirtyInBlockRangeENS_10LayoutUnitES1_PNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, i32, i32, %"class.blink::RootInlineBox"* readnone) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %1, %2
  br i1 %5, label %6, label %52

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.blink::InlineFlowBox"** %7 to %"class.blink::RootInlineBox"**
  %9 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %8, align 8
  %10 = icmp eq %"class.blink::RootInlineBox"* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %6
  %12 = icmp ne i32 %2, 2147483647
  %13 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %9, i64 0, i32 8, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp sge i32 %14, %2
  %16 = and i1 %12, %15
  br i1 %16, label %22, label %28

17:                                               ; preds = %22
  %18 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %26, i64 0, i32 8, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sge i32 %19, %2
  %21 = and i1 %12, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %11, %17
  %23 = phi %"class.blink::RootInlineBox"* [ %26, %17 ], [ %9, %11 ]
  %24 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %23, i64 0, i32 0, i32 4
  %25 = bitcast %"class.blink::InlineFlowBox"** %24 to %"class.blink::RootInlineBox"**
  %26 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %25, align 8
  %27 = icmp eq %"class.blink::RootInlineBox"* %26, null
  br i1 %27, label %28, label %17

28:                                               ; preds = %22, %17, %11
  %29 = phi %"class.blink::RootInlineBox"* [ %9, %11 ], [ %23, %17 ], [ %23, %22 ]
  %30 = icmp eq %"class.blink::RootInlineBox"* %29, null
  %31 = icmp eq %"class.blink::RootInlineBox"* %29, %3
  %32 = or i1 %30, %31
  br i1 %32, label %52, label %33

33:                                               ; preds = %28, %40
  %34 = phi %"class.blink::RootInlineBox"* [ %48, %40 ], [ %29, %28 ]
  %35 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 8, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp sge i32 %36, %1
  %38 = icmp slt i32 %36, 0
  %39 = or i1 %37, %38
  br i1 %39, label %40, label %52

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0
  %42 = bitcast %"class.blink::RootInlineBox"* %34 to void (%"class.blink::InlineBox"*)***
  %43 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %43, i64 28
  %45 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %44, align 8
  tail call void %45(%"class.blink::InlineBox"* %41) #13
  %46 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 4
  %47 = bitcast %"class.blink::InlineFlowBox"** %46 to %"class.blink::RootInlineBox"**
  %48 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %47, align 8
  %49 = icmp eq %"class.blink::RootInlineBox"* %48, null
  %50 = icmp eq %"class.blink::RootInlineBox"* %48, %3
  %51 = or i1 %49, %50
  br i1 %51, label %52, label %33

52:                                               ; preds = %40, %33, %6, %28, %4
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow31ClearDidBreakAtLineToAvoidWidowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #2

declare void @_ZN5blink13InlineFlowBox10AttachLineEv(%"class.blink::InlineFlowBox"*) unnamed_addr #2

declare %"class.blink::FloatingObject"* @_ZN5blink15LayoutBlockFlow20InsertFloatingObjectERNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink15LayoutBlockFlow14PlaceNewFloatsENS_10LayoutUnitEPNS_9LineWidthE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::LineWidth"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink20InlineMinMaxIterator4NextEv(%"struct.blink::InlineMinMaxIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  store i8 0, i8* %2, align 8
  %5 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %0, i64 0, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br label %8

8:                                                ; preds = %92, %1
  %9 = phi %"class.blink::LayoutObject"* [ %77, %92 ], [ %7, %1 ]
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %13 = icmp eq %"class.blink::LayoutObject"* %12, null
  br i1 %13, label %14, label %93

14:                                               ; preds = %8, %11
  br i1 %4, label %15, label %47

15:                                               ; preds = %14
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %9, %16
  br i1 %17, label %27, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 1082130432
  %23 = icmp ne i96 %22, 0
  %24 = and i96 %21, 113336795588871485128704
  %25 = icmp eq i96 %24, 75557863725914323419136
  %26 = or i1 %23, %25
  br i1 %26, label %38, label %27

27:                                               ; preds = %18, %15
  %28 = bitcast %"class.blink::LayoutObject"* %9 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %29 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %29, i64 13
  %31 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call %"class.blink::LayoutObjectChildList"* %31(%"class.blink::LayoutObject"* %9) #13
  %33 = icmp eq %"class.blink::LayoutObjectChildList"* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %32, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %38, label %76

38:                                               ; preds = %27, %18, %34
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %40 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*)***
  %41 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, i64 26
  %43 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %39) #13
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br i1 %44, label %46, label %47

46:                                               ; preds = %38
  store i8 1, i8* %2, align 8
  br label %93

47:                                               ; preds = %38, %14
  %48 = phi %"class.blink::LayoutObject"* [ %9, %14 ], [ %45, %38 ]
  %49 = icmp eq %"class.blink::LayoutObject"* %48, null
  br i1 %49, label %93, label %50

50:                                               ; preds = %47, %71
  %51 = phi %"class.blink::LayoutObject"* [ %72, %71 ], [ %48, %47 ]
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %51, %52
  br i1 %53, label %93, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 9
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutObject"* %56, null
  br i1 %57, label %58, label %76

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 7
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  store %"class.blink::LayoutObject"* %60, %"class.blink::LayoutObject"** %5, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  %62 = icmp eq %"class.blink::LayoutObject"* %60, %52
  %63 = or i1 %61, %62
  br i1 %63, label %71, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::LayoutObject"* %60 to i1 (%"class.blink::LayoutObject"*)***
  %66 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %66, i64 26
  %68 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* nonnull %60) #13
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  br i1 %69, label %74, label %71

71:                                               ; preds = %64, %58
  %72 = phi %"class.blink::LayoutObject"* [ %60, %58 ], [ %70, %64 ]
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %93, label %50

74:                                               ; preds = %64
  store i8 1, i8* %2, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %70, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %54, %34, %74
  %77 = phi %"class.blink::LayoutObject"* [ %70, %74 ], [ %36, %34 ], [ %56, %54 ]
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = and i96 %80, 113336795588871485128704
  %82 = icmp eq i96 %81, 75557863725914323419136
  br i1 %82, label %92, label %83

83:                                               ; preds = %76
  %84 = and i96 %80, 1115684864
  %85 = icmp eq i96 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %83
  %87 = bitcast %"class.blink::LayoutObject"* %77 to i1 (%"class.blink::LayoutObject"*)***
  %88 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, i64 26
  %90 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %77) #13
  br i1 %91, label %93, label %92

92:                                               ; preds = %86, %76
  store %"class.blink::LayoutObject"* %77, %"class.blink::LayoutObject"** %5, align 8
  br label %8

93:                                               ; preds = %83, %74, %86, %11, %47, %50, %71, %46
  %94 = phi %"class.blink::LayoutObject"* [ %45, %46 ], [ null, %71 ], [ null, %50 ], [ null, %47 ], [ null, %11 ], [ null, %74 ], [ %77, %86 ], [ %77, %83 ]
  store %"class.blink::LayoutObject"* %94, %"class.blink::LayoutObject"** %5, align 8
  ret %"class.blink::LayoutObject"* %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow35ComputeInlinePreferredLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca %"class.blink::Length"*, align 8
  %28 = alloca i16, align 2
  %29 = alloca %"class.blink::TextRun", align 8
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i8, align 1
  %33 = alloca %"struct.blink::InlineMinMaxIterator", align 8
  %34 = alloca %"class.blink::LayoutUnit", align 4
  %35 = alloca %"class.blink::LayoutUnit", align 4
  %36 = alloca %"class.blink::LayoutUnit", align 4
  %37 = alloca %"class.blink::LayoutUnit", align 4
  %38 = alloca i32, align 4
  %39 = alloca i8, align 1
  %40 = alloca i8, align 1
  %41 = alloca %"class.blink::LayoutUnit", align 4
  %42 = alloca %"class.blink::LayoutUnit", align 4
  %43 = alloca i8, align 1
  %44 = alloca i8, align 1
  %45 = alloca %"class.blink::LayoutUnit", align 4
  %46 = alloca %"class.blink::LayoutUnit", align 4
  %47 = alloca i32, align 4
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  store i32 0, i32* %30, align 4
  %50 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50)
  store i32 0, i32* %31, align 4
  %51 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %48, i32 14) #13
  br i1 %55, label %56, label %58

56:                                               ; preds = %3
  %57 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutListItem"*
  tail call void @_ZN5blink14LayoutListItem24UpdateMarkerTextIfNeededEv(%"class.blink::LayoutListItem"* %57) #13
  br label %58

58:                                               ; preds = %56, %3
  %59 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #13
  store i8 1, i8* %32, align 1
  %61 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %71

64:                                               ; preds = %58, %64
  %65 = phi %"class.blink::LayoutObject"* [ %67, %64 ], [ %48, %58 ]
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 7
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 6, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %64, label %71

71:                                               ; preds = %64, %58
  %72 = phi %"class.blink::Node"* [ %62, %58 ], [ %69, %64 ]
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %72, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %76, i64 0, i32 33
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %104

80:                                               ; preds = %71
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %51, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %81, i64 92
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::LayoutObject"* %48, i32 46) #13
  br i1 %84, label %85, label %104

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 0
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 5, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 3
  %95 = select i1 %90, %"class.blink::Length"* %93, %"class.blink::Length"* %94
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = add i8 %97, -1
  %99 = icmp ult i8 %98, 8
  br i1 %99, label %100, label %104

100:                                              ; preds = %85
  %101 = lshr i8 -125, %98
  %102 = and i8 %101, 1
  %103 = icmp ne i8 %102, 0
  br label %104

104:                                              ; preds = %85, %100, %80, %71
  %105 = phi i1 [ true, %80 ], [ true, %71 ], [ %103, %100 ], [ false, %85 ]
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %107 = bitcast [20 x i8]* %106 to i160*
  %108 = load i160, i160* %107, align 8
  %109 = and i160 %108, 73728
  %110 = icmp eq i160 %109, 0
  %111 = zext i1 %110 to i8
  %112 = bitcast %"struct.blink::InlineMinMaxIterator"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #13
  %113 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %33, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %33, i64 0, i32 1
  %115 = getelementptr inbounds %"struct.blink::InlineMinMaxIterator", %"struct.blink::InlineMinMaxIterator"* %33, i64 0, i32 2
  %116 = bitcast %"struct.blink::InlineMinMaxIterator"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 24, i1 false)
  store %"class.blink::LayoutObject"* %48, %"class.blink::LayoutObject"** %113, align 8
  store %"class.blink::LayoutObject"* %48, %"class.blink::LayoutObject"** %114, align 8
  store i8 0, i8* %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  %118 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %118, i64 0, i32 12
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %118, i64 0, i32 12, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 2
  br i1 %122, label %123, label %144, !prof !10

123:                                              ; preds = %104
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %118, i64 0, i32 12, i32 3
  %125 = load i8, i8* %124, align 2, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %123
  %128 = bitcast %"class.blink::Length"* %119 to float*
  %129 = load float, float* %128, align 4
  br label %134

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %119, i64 0, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = sitofp i32 %132 to float
  br label %134

134:                                              ; preds = %130, %127
  %135 = phi float [ %129, %127 ], [ %133, %130 ]
  %136 = fmul float %135, 6.400000e+01
  %137 = fcmp ult float %136, 0xC1E0000000000000
  %138 = fcmp ugt float %136, 0x41DFFFFFE0000000
  %139 = fcmp ogt float %136, 0xC1E0000000000000
  %140 = select i1 %139, float %136, float 0xC1E0000000000000
  %141 = fptosi float %140 to i32
  %142 = select i1 %137, i32 0, i32 2147483647
  %143 = select i1 %138, i32 %142, i32 %141
  br label %146

144:                                              ; preds = %104
  %145 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %119, i32 0) #13
  br label %146

146:                                              ; preds = %134, %144
  %147 = phi i32 [ %143, %134 ], [ %145, %144 ]
  %148 = call %"class.blink::LayoutObject"* @_ZN5blink20InlineMinMaxIterator4NextEv(%"struct.blink::InlineMinMaxIterator"* nonnull %33)
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %1310, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.blink::LayoutUnit"* %34 to i8*
  %152 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %34, i64 0, i32 0
  %153 = bitcast %"class.blink::LayoutUnit"* %35 to i8*
  %154 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %35, i64 0, i32 0
  %155 = bitcast %"class.blink::Length"** %20 to i8*
  %156 = bitcast %"class.blink::Length"** %21 to i8*
  %157 = bitcast %"class.blink::Length"** %22 to i8*
  %158 = bitcast %"class.blink::Length"** %23 to i8*
  %159 = bitcast %"class.blink::Length"** %24 to i8*
  %160 = bitcast %"class.blink::Length"** %25 to i8*
  %161 = bitcast %"class.blink::Length"** %26 to i8*
  %162 = bitcast %"class.blink::Length"** %27 to i8*
  %163 = bitcast %"class.blink::Length"** %16 to i8*
  %164 = bitcast %"class.blink::Length"** %17 to i8*
  %165 = bitcast %"class.blink::Length"** %18 to i8*
  %166 = bitcast %"class.blink::Length"** %19 to i8*
  %167 = bitcast %"class.blink::Length"** %4 to i8*
  %168 = bitcast %"class.blink::Length"** %5 to i8*
  %169 = bitcast %"class.blink::Length"** %6 to i8*
  %170 = bitcast %"class.blink::Length"** %7 to i8*
  %171 = bitcast %"class.blink::Length"** %8 to i8*
  %172 = bitcast %"class.blink::Length"** %9 to i8*
  %173 = bitcast %"class.blink::Length"** %10 to i8*
  %174 = bitcast %"class.blink::Length"** %11 to i8*
  %175 = bitcast %"class.blink::Length"** %12 to i8*
  %176 = bitcast %"class.blink::Length"** %13 to i8*
  %177 = bitcast %"class.blink::Length"** %14 to i8*
  %178 = bitcast %"class.blink::Length"** %15 to i8*
  %179 = bitcast %"class.blink::LayoutUnit"* %36 to i8*
  %180 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %36, i64 0, i32 0
  %181 = bitcast %"class.blink::LayoutUnit"* %37 to i8*
  %182 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %37, i64 0, i32 0
  %183 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %184 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %185 = bitcast i32* %31 to %"class.blink::LayoutUnit"*
  %186 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %187 = bitcast i32* %30 to %"class.blink::LayoutUnit"*
  %188 = bitcast i32* %38 to i8*
  %189 = bitcast i32* %38 to %"class.blink::LayoutUnit"*
  %190 = bitcast %"class.blink::LayoutUnit"* %41 to i8*
  %191 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %41, i64 0, i32 0
  %192 = bitcast %"class.blink::LayoutUnit"* %42 to i8*
  %193 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %42, i64 0, i32 0
  %194 = bitcast %"class.blink::LayoutUnit"* %45 to i8*
  %195 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %45, i64 0, i32 0
  %196 = bitcast %"class.blink::LayoutUnit"* %46 to i8*
  %197 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %46, i64 0, i32 0
  %198 = bitcast i32* %47 to i8*
  %199 = bitcast i32* %47 to %"class.blink::LayoutUnit"*
  br label %200

200:                                              ; preds = %150, %1202
  %201 = phi %"class.blink::LayoutObject"* [ %148, %150 ], [ %1211, %1202 ]
  %202 = phi i8 [ 0, %150 ], [ %1210, %1202 ]
  %203 = phi i8 [ 0, %150 ], [ %1209, %1202 ]
  %204 = phi %"class.blink::LayoutObject"* [ null, %150 ], [ %1208, %1202 ]
  %205 = phi i8 [ 0, %150 ], [ %1207, %1202 ]
  %206 = phi i8 [ 0, %150 ], [ %1206, %1202 ]
  %207 = phi i8 [ %111, %150 ], [ %1205, %1202 ]
  %208 = phi %"class.blink::LayoutObject"* [ null, %150 ], [ %1204, %1202 ]
  %209 = phi i32 [ %147, %150 ], [ %1203, %1202 ]
  %210 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 4
  %211 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %210 to i96*
  %212 = load i96, i96* %211, align 4
  %213 = and i96 %212, 1073741824
  %214 = icmp eq i96 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %200
  %216 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 7
  %217 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %216, align 8
  br label %218

218:                                              ; preds = %200, %215
  %219 = phi %"class.blink::LayoutObject"* [ %217, %215 ], [ %201, %200 ]
  %220 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %219, i64 0, i32 5, i32 0
  %221 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %221, i64 0, i32 0, i32 9
  %223 = bitcast [20 x i8]* %222 to i160*
  %224 = load i160, i160* %223, align 8
  %225 = and i160 %224, 73728
  %226 = icmp eq i160 %225, 0
  %227 = zext i1 %226 to i8
  %228 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutObject"*, i32)***
  %229 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %228, align 8
  %230 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %229, i64 92
  %231 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %230, align 8
  %232 = call zeroext i1 %231(%"class.blink::LayoutObject"* nonnull %201, i32 0) #13
  br i1 %232, label %1172, label %233

233:                                              ; preds = %218
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #13
  store i32 0, i32* %152, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %153) #13
  store i32 0, i32* %154, align 4
  %234 = load i96, i96* %211, align 4
  %235 = and i96 %234, 33554432
  %236 = icmp eq i96 %235, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutObject"*)***
  br label %745

239:                                              ; preds = %233
  %240 = and i96 %234, 67108864
  %241 = icmp eq i96 %240, 0
  br i1 %241, label %250, label %242

242:                                              ; preds = %239
  %243 = bitcast %"class.blink::LayoutObject"* %201 to %"class.blink::LayoutBox"*
  %244 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutBox"*)***
  %245 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %244, align 8
  %246 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %245, i64 183
  %247 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %246, align 8
  %248 = call zeroext i1 %247(%"class.blink::LayoutBox"* %243) #13
  br i1 %248, label %249, label %250

249:                                              ; preds = %242
  call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %201, i32 1) #13
  br label %250

250:                                              ; preds = %239, %249, %242
  %251 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutObject"*)***
  %252 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %251, align 8
  %253 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %252, i64 26
  %254 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %253, align 8
  %255 = call zeroext i1 %254(%"class.blink::LayoutObject"* nonnull %201) #13
  br i1 %255, label %256, label %649

256:                                              ; preds = %250
  %257 = load i8, i8* %115, align 8, !range !2
  %258 = icmp eq i8 %257, 0
  %259 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 5, i32 0
  %260 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8
  %261 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 9
  %262 = bitcast [20 x i8]* %261 to i160*
  %263 = load i160, i160* %262, align 8
  %264 = bitcast %"class.blink::LayoutObject"* %201 to i8*
  %265 = and i160 %263, 15211807202738752817960438464512
  %266 = icmp eq i160 %265, 0
  %267 = and i160 %263, 41538374868278621028243970633760768
  %268 = icmp eq i160 %267, 0
  br i1 %258, label %443, label %269

269:                                              ; preds = %256
  %270 = select i1 %268, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %271 = select i1 %268, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %272 = select i1 %266, { i64, i64 } %271, { i64, i64 } %270
  %273 = select i1 %266, { i64, i64 } %271, { i64, i64 } %270
  %274 = extractvalue { i64, i64 } %272, 0
  %275 = extractvalue { i64, i64 } %273, 1
  %276 = getelementptr inbounds i8, i8* %264, i64 %275
  %277 = bitcast i8* %276 to %"class.blink::LayoutBoxModelObject"*
  %278 = and i64 %274, 1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %287, label %280

280:                                              ; preds = %269
  %281 = bitcast i8* %276 to i8**
  %282 = load i8*, i8** %281, align 8
  %283 = add i64 %274, -1
  %284 = getelementptr i8, i8* %282, i64 %283
  %285 = bitcast i8* %284 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %286 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %285, align 8
  br label %289

287:                                              ; preds = %269
  %288 = inttoptr i64 %274 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %286, %280 ], [ %288, %287 ]
  %291 = call i32 %290(%"class.blink::LayoutBoxModelObject"* %277) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166)
  %292 = load i160, i160* %262, align 8, !noalias !31
  %293 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 7, i32 0, i32 0
  %294 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %293, align 8, !noalias !31
  %295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %294, i64 0, i32 12
  %296 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %294, i64 0, i32 11
  %297 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %294, i64 0, i32 9
  %298 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %294, i64 0, i32 10
  store %"class.blink::Length"* %295, %"class.blink::Length"** %16, align 8, !alias.scope !31
  store %"class.blink::Length"* %296, %"class.blink::Length"** %17, align 8, !alias.scope !31
  store %"class.blink::Length"* %297, %"class.blink::Length"** %18, align 8, !alias.scope !31
  store %"class.blink::Length"* %298, %"class.blink::Length"** %19, align 8, !alias.scope !31
  %299 = and i160 %292, 15211807202738752817960438464512
  %300 = icmp eq i160 %299, 0
  %301 = and i160 %292, 41538374868278621028243970633760768
  %302 = icmp eq i160 %301, 0
  %303 = select i1 %302, %"class.blink::Length"** %17, %"class.blink::Length"** %19
  %304 = select i1 %302, %"class.blink::Length"** %18, %"class.blink::Length"** %16
  %305 = select i1 %300, %"class.blink::Length"** %303, %"class.blink::Length"** %304
  %306 = load %"class.blink::Length"*, %"class.blink::Length"** %305, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166)
  %307 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %306, i64 0, i32 2
  %308 = load i8, i8* %307, align 1
  switch i8 %308, label %330 [
    i8 2, label %309
    i8 0, label %331
  ]

309:                                              ; preds = %289
  %310 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %306, i64 0, i32 3
  %311 = load i8, i8* %310, align 2, !range !2
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %316, label %313

313:                                              ; preds = %309
  %314 = bitcast %"class.blink::Length"* %306 to float*
  %315 = load float, float* %314, align 4
  br label %320

316:                                              ; preds = %309
  %317 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %306, i64 0, i32 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = sitofp i32 %318 to float
  br label %320

320:                                              ; preds = %316, %313
  %321 = phi float [ %315, %313 ], [ %319, %316 ]
  %322 = fmul float %321, 6.400000e+01
  %323 = fcmp ult float %322, 0xC1E0000000000000
  %324 = fcmp ugt float %322, 0x41DFFFFFE0000000
  %325 = fcmp ogt float %322, 0xC1E0000000000000
  %326 = select i1 %325, float %322, float 0xC1E0000000000000
  %327 = fptosi float %326 to i32
  %328 = select i1 %323, i32 0, i32 2147483647
  %329 = select i1 %324, i32 %328, i32 %327
  br label %331

330:                                              ; preds = %289
  br label %331

331:                                              ; preds = %330, %320, %289
  %332 = phi i32 [ %329, %320 ], [ %291, %330 ], [ 0, %289 ]
  %333 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8, !noalias !34
  %334 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %333, i64 0, i32 0, i32 9
  %335 = bitcast [20 x i8]* %334 to i160*
  %336 = load i160, i160* %335, align 8, !noalias !34
  %337 = and i160 %336, 15211807202738752817960438464512
  %338 = icmp eq i160 %337, 0
  %339 = and i160 %336, 41538374868278621028243970633760768
  %340 = icmp eq i160 %339, 0
  %341 = select i1 %340, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %342 = select i1 %340, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %343 = select i1 %338, { i64, i64 } %342, { i64, i64 } %341
  %344 = select i1 %338, { i64, i64 } %342, { i64, i64 } %341
  %345 = extractvalue { i64, i64 } %343, 0
  %346 = extractvalue { i64, i64 } %344, 1
  %347 = getelementptr inbounds i8, i8* %264, i64 %346
  %348 = bitcast i8* %347 to %"class.blink::LayoutBoxModelObject"*
  %349 = and i64 %345, 1
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %358, label %351

351:                                              ; preds = %331
  %352 = bitcast i8* %347 to i8**
  %353 = load i8*, i8** %352, align 8
  %354 = add i64 %345, -1
  %355 = getelementptr i8, i8* %353, i64 %354
  %356 = bitcast i8* %355 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %357 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %356, align 8
  br label %360

358:                                              ; preds = %331
  %359 = inttoptr i64 %345 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %360

360:                                              ; preds = %358, %351
  %361 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %357, %351 ], [ %359, %358 ]
  %362 = call i32 %361(%"class.blink::LayoutBoxModelObject"* %348) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170)
  %363 = load i160, i160* %262, align 8, !noalias !37
  %364 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %293, align 8, !noalias !37
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %364, i64 0, i32 16
  %366 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %364, i64 0, i32 15
  %367 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %364, i64 0, i32 13
  %368 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %364, i64 0, i32 14
  store %"class.blink::Length"* %365, %"class.blink::Length"** %4, align 8, !alias.scope !37
  store %"class.blink::Length"* %366, %"class.blink::Length"** %5, align 8, !alias.scope !37
  store %"class.blink::Length"* %367, %"class.blink::Length"** %6, align 8, !alias.scope !37
  store %"class.blink::Length"* %368, %"class.blink::Length"** %7, align 8, !alias.scope !37
  %369 = and i160 %363, 15211807202738752817960438464512
  %370 = icmp eq i160 %369, 0
  %371 = and i160 %363, 41538374868278621028243970633760768
  %372 = icmp eq i160 %371, 0
  %373 = select i1 %372, %"class.blink::Length"** %5, %"class.blink::Length"** %7
  %374 = select i1 %372, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %375 = select i1 %370, %"class.blink::Length"** %373, %"class.blink::Length"** %374
  %376 = load %"class.blink::Length"*, %"class.blink::Length"** %375, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170)
  %377 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %376, i64 0, i32 2
  %378 = load i8, i8* %377, align 1
  switch i8 %378, label %399 [
    i8 2, label %379
    i8 0, label %403
  ]

379:                                              ; preds = %360
  %380 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %376, i64 0, i32 3
  %381 = load i8, i8* %380, align 2, !range !2
  %382 = icmp eq i8 %381, 0
  br i1 %382, label %386, label %383

383:                                              ; preds = %379
  %384 = bitcast %"class.blink::Length"* %376 to float*
  %385 = load float, float* %384, align 4
  br label %390

386:                                              ; preds = %379
  %387 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %376, i64 0, i32 0, i32 0
  %388 = load i32, i32* %387, align 4
  %389 = sitofp i32 %388 to float
  br label %390

390:                                              ; preds = %386, %383
  %391 = phi float [ %385, %383 ], [ %389, %386 ]
  %392 = fmul float %391, 6.400000e+01
  %393 = fcmp ult float %392, 0xC1E0000000000000
  %394 = fcmp ugt float %392, 0x41DFFFFFE0000000
  %395 = fcmp ogt float %392, 0xC1E0000000000000
  %396 = select i1 %395, float %392, float 0xC1E0000000000000
  %397 = fptosi float %396 to i32
  %398 = select i1 %393, i32 0, i32 2147483647
  br i1 %394, label %403, label %399

399:                                              ; preds = %390, %360
  %400 = phi i32 [ %397, %390 ], [ %362, %360 ]
  %401 = icmp slt i32 %400, 0
  %402 = select i1 %401, i32 -2147483648, i32 2147483647
  br label %403

403:                                              ; preds = %399, %390, %360
  %404 = phi i32 [ 0, %360 ], [ %398, %390 ], [ %400, %399 ]
  %405 = phi i32 [ 2147483647, %360 ], [ 2147483647, %390 ], [ %402, %399 ]
  %406 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %332, i32 %404) #13
  %407 = extractvalue { i32, i1 } %406, 1
  %408 = extractvalue { i32, i1 } %406, 0
  %409 = select i1 %407, i32 %405, i32 %408, !prof !9
  %410 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8, !noalias !40
  %411 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %410, i64 0, i32 0, i32 9
  %412 = bitcast [20 x i8]* %411 to i160*
  %413 = load i160, i160* %412, align 8, !noalias !40
  %414 = and i160 %413, 15211807202738752817960438464512
  %415 = icmp eq i160 %414, 0
  %416 = and i160 %413, 41538374868278621028243970633760768
  %417 = icmp eq i160 %416, 0
  %418 = select i1 %417, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %419 = select i1 %417, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %420 = select i1 %415, { i64, i64 } %419, { i64, i64 } %418
  %421 = select i1 %415, { i64, i64 } %419, { i64, i64 } %418
  %422 = extractvalue { i64, i64 } %420, 0
  %423 = extractvalue { i64, i64 } %421, 1
  %424 = getelementptr inbounds i8, i8* %264, i64 %423
  %425 = bitcast i8* %424 to %"class.blink::LayoutBoxModelObject"*
  %426 = and i64 %422, 1
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %435, label %428

428:                                              ; preds = %403
  %429 = bitcast i8* %424 to i8**
  %430 = load i8*, i8** %429, align 8
  %431 = add i64 %422, -1
  %432 = getelementptr i8, i8* %430, i64 %431
  %433 = bitcast i8* %432 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %434 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %433, align 8
  br label %437

435:                                              ; preds = %403
  %436 = inttoptr i64 %422 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %437

437:                                              ; preds = %435, %428
  %438 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %434, %428 ], [ %436, %435 ]
  %439 = call i32 %438(%"class.blink::LayoutBoxModelObject"* %425) #13
  %440 = icmp slt i32 %439, 0
  %441 = select i1 %440, i32 -2147483648, i32 2147483647
  %442 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %409, i32 %439) #13
  br label %617

443:                                              ; preds = %256
  %444 = select i1 %268, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %445 = select i1 %268, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %446 = select i1 %266, { i64, i64 } %445, { i64, i64 } %444
  %447 = select i1 %266, { i64, i64 } %445, { i64, i64 } %444
  %448 = extractvalue { i64, i64 } %446, 0
  %449 = extractvalue { i64, i64 } %447, 1
  %450 = getelementptr inbounds i8, i8* %264, i64 %449
  %451 = bitcast i8* %450 to %"class.blink::LayoutBoxModelObject"*
  %452 = and i64 %448, 1
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %461, label %454

454:                                              ; preds = %443
  %455 = bitcast i8* %450 to i8**
  %456 = load i8*, i8** %455, align 8
  %457 = add i64 %448, -1
  %458 = getelementptr i8, i8* %456, i64 %457
  %459 = bitcast i8* %458 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %460 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %459, align 8
  br label %463

461:                                              ; preds = %443
  %462 = inttoptr i64 %448 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %460, %454 ], [ %462, %461 ]
  %465 = call i32 %464(%"class.blink::LayoutBoxModelObject"* %451) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174)
  %466 = load i160, i160* %262, align 8, !noalias !43
  %467 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %260, i64 0, i32 0, i32 7, i32 0, i32 0
  %468 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %467, align 8, !noalias !43
  %469 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %468, i64 0, i32 12
  %470 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %468, i64 0, i32 11
  %471 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %468, i64 0, i32 9
  %472 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %468, i64 0, i32 10
  store %"class.blink::Length"* %469, %"class.blink::Length"** %8, align 8, !alias.scope !43
  store %"class.blink::Length"* %470, %"class.blink::Length"** %9, align 8, !alias.scope !43
  store %"class.blink::Length"* %471, %"class.blink::Length"** %10, align 8, !alias.scope !43
  store %"class.blink::Length"* %472, %"class.blink::Length"** %11, align 8, !alias.scope !43
  %473 = and i160 %466, 15211807202738752817960438464512
  %474 = icmp eq i160 %473, 0
  %475 = and i160 %466, 41538374868278621028243970633760768
  %476 = icmp eq i160 %475, 0
  %477 = select i1 %476, %"class.blink::Length"** %11, %"class.blink::Length"** %9
  %478 = select i1 %476, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %479 = select i1 %474, %"class.blink::Length"** %477, %"class.blink::Length"** %478
  %480 = load %"class.blink::Length"*, %"class.blink::Length"** %479, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174)
  %481 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %480, i64 0, i32 2
  %482 = load i8, i8* %481, align 1
  switch i8 %482, label %504 [
    i8 2, label %483
    i8 0, label %505
  ]

483:                                              ; preds = %463
  %484 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %480, i64 0, i32 3
  %485 = load i8, i8* %484, align 2, !range !2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %490, label %487

487:                                              ; preds = %483
  %488 = bitcast %"class.blink::Length"* %480 to float*
  %489 = load float, float* %488, align 4
  br label %494

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %480, i64 0, i32 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = sitofp i32 %492 to float
  br label %494

494:                                              ; preds = %490, %487
  %495 = phi float [ %489, %487 ], [ %493, %490 ]
  %496 = fmul float %495, 6.400000e+01
  %497 = fcmp ult float %496, 0xC1E0000000000000
  %498 = fcmp ugt float %496, 0x41DFFFFFE0000000
  %499 = fcmp ogt float %496, 0xC1E0000000000000
  %500 = select i1 %499, float %496, float 0xC1E0000000000000
  %501 = fptosi float %500 to i32
  %502 = select i1 %497, i32 0, i32 2147483647
  %503 = select i1 %498, i32 %502, i32 %501
  br label %505

504:                                              ; preds = %463
  br label %505

505:                                              ; preds = %504, %494, %463
  %506 = phi i32 [ %503, %494 ], [ %465, %504 ], [ 0, %463 ]
  %507 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8, !noalias !46
  %508 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %507, i64 0, i32 0, i32 9
  %509 = bitcast [20 x i8]* %508 to i160*
  %510 = load i160, i160* %509, align 8, !noalias !46
  %511 = and i160 %510, 15211807202738752817960438464512
  %512 = icmp eq i160 %511, 0
  %513 = and i160 %510, 41538374868278621028243970633760768
  %514 = icmp eq i160 %513, 0
  %515 = select i1 %514, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %516 = select i1 %514, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %517 = select i1 %512, { i64, i64 } %516, { i64, i64 } %515
  %518 = select i1 %512, { i64, i64 } %516, { i64, i64 } %515
  %519 = extractvalue { i64, i64 } %517, 0
  %520 = extractvalue { i64, i64 } %518, 1
  %521 = getelementptr inbounds i8, i8* %264, i64 %520
  %522 = bitcast i8* %521 to %"class.blink::LayoutBoxModelObject"*
  %523 = and i64 %519, 1
  %524 = icmp eq i64 %523, 0
  br i1 %524, label %532, label %525

525:                                              ; preds = %505
  %526 = bitcast i8* %521 to i8**
  %527 = load i8*, i8** %526, align 8
  %528 = add i64 %519, -1
  %529 = getelementptr i8, i8* %527, i64 %528
  %530 = bitcast i8* %529 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %531 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %530, align 8
  br label %534

532:                                              ; preds = %505
  %533 = inttoptr i64 %519 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %534

534:                                              ; preds = %532, %525
  %535 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %531, %525 ], [ %533, %532 ]
  %536 = call i32 %535(%"class.blink::LayoutBoxModelObject"* %522) #13
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %177)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178)
  %537 = load i160, i160* %262, align 8, !noalias !49
  %538 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %467, align 8, !noalias !49
  %539 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %538, i64 0, i32 16
  %540 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %538, i64 0, i32 15
  %541 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %538, i64 0, i32 13
  %542 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %538, i64 0, i32 14
  store %"class.blink::Length"* %539, %"class.blink::Length"** %12, align 8, !alias.scope !49
  store %"class.blink::Length"* %540, %"class.blink::Length"** %13, align 8, !alias.scope !49
  store %"class.blink::Length"* %541, %"class.blink::Length"** %14, align 8, !alias.scope !49
  store %"class.blink::Length"* %542, %"class.blink::Length"** %15, align 8, !alias.scope !49
  %543 = and i160 %537, 15211807202738752817960438464512
  %544 = icmp eq i160 %543, 0
  %545 = and i160 %537, 41538374868278621028243970633760768
  %546 = icmp eq i160 %545, 0
  %547 = select i1 %546, %"class.blink::Length"** %15, %"class.blink::Length"** %13
  %548 = select i1 %546, %"class.blink::Length"** %12, %"class.blink::Length"** %14
  %549 = select i1 %544, %"class.blink::Length"** %547, %"class.blink::Length"** %548
  %550 = load %"class.blink::Length"*, %"class.blink::Length"** %549, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %177)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178)
  %551 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %550, i64 0, i32 2
  %552 = load i8, i8* %551, align 1
  switch i8 %552, label %573 [
    i8 2, label %553
    i8 0, label %577
  ]

553:                                              ; preds = %534
  %554 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %550, i64 0, i32 3
  %555 = load i8, i8* %554, align 2, !range !2
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %560, label %557

557:                                              ; preds = %553
  %558 = bitcast %"class.blink::Length"* %550 to float*
  %559 = load float, float* %558, align 4
  br label %564

560:                                              ; preds = %553
  %561 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %550, i64 0, i32 0, i32 0
  %562 = load i32, i32* %561, align 4
  %563 = sitofp i32 %562 to float
  br label %564

564:                                              ; preds = %560, %557
  %565 = phi float [ %559, %557 ], [ %563, %560 ]
  %566 = fmul float %565, 6.400000e+01
  %567 = fcmp ult float %566, 0xC1E0000000000000
  %568 = fcmp ugt float %566, 0x41DFFFFFE0000000
  %569 = fcmp ogt float %566, 0xC1E0000000000000
  %570 = select i1 %569, float %566, float 0xC1E0000000000000
  %571 = fptosi float %570 to i32
  %572 = select i1 %567, i32 0, i32 2147483647
  br i1 %568, label %577, label %573

573:                                              ; preds = %564, %534
  %574 = phi i32 [ %571, %564 ], [ %536, %534 ]
  %575 = icmp slt i32 %574, 0
  %576 = select i1 %575, i32 -2147483648, i32 2147483647
  br label %577

577:                                              ; preds = %573, %564, %534
  %578 = phi i32 [ 0, %534 ], [ %572, %564 ], [ %574, %573 ]
  %579 = phi i32 [ 2147483647, %534 ], [ 2147483647, %564 ], [ %576, %573 ]
  %580 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %506, i32 %578) #13
  %581 = extractvalue { i32, i1 } %580, 1
  %582 = extractvalue { i32, i1 } %580, 0
  %583 = select i1 %581, i32 %579, i32 %582, !prof !9
  %584 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %259, align 8, !noalias !52
  %585 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %584, i64 0, i32 0, i32 9
  %586 = bitcast [20 x i8]* %585 to i160*
  %587 = load i160, i160* %586, align 8, !noalias !52
  %588 = and i160 %587, 15211807202738752817960438464512
  %589 = icmp eq i160 %588, 0
  %590 = and i160 %587, 41538374868278621028243970633760768
  %591 = icmp eq i160 %590, 0
  %592 = select i1 %591, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %593 = select i1 %591, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %594 = select i1 %589, { i64, i64 } %593, { i64, i64 } %592
  %595 = select i1 %589, { i64, i64 } %593, { i64, i64 } %592
  %596 = extractvalue { i64, i64 } %594, 0
  %597 = extractvalue { i64, i64 } %595, 1
  %598 = getelementptr inbounds i8, i8* %264, i64 %597
  %599 = bitcast i8* %598 to %"class.blink::LayoutBoxModelObject"*
  %600 = and i64 %596, 1
  %601 = icmp eq i64 %600, 0
  br i1 %601, label %609, label %602

602:                                              ; preds = %577
  %603 = bitcast i8* %598 to i8**
  %604 = load i8*, i8** %603, align 8
  %605 = add i64 %596, -1
  %606 = getelementptr i8, i8* %604, i64 %605
  %607 = bitcast i8* %606 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %608 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %607, align 8
  br label %611

609:                                              ; preds = %577
  %610 = inttoptr i64 %596 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %611

611:                                              ; preds = %609, %602
  %612 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %608, %602 ], [ %610, %609 ]
  %613 = call i32 %612(%"class.blink::LayoutBoxModelObject"* %599) #13
  %614 = icmp slt i32 %613, 0
  %615 = select i1 %614, i32 -2147483648, i32 2147483647
  %616 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %583, i32 %613) #13
  br label %617

617:                                              ; preds = %437, %611
  %618 = phi { i32, i1 } [ %442, %437 ], [ %616, %611 ]
  %619 = phi i32 [ %441, %437 ], [ %615, %611 ]
  %620 = extractvalue { i32, i1 } %618, 1
  %621 = extractvalue { i32, i1 } %618, 0
  %622 = select i1 %620, i32 %619, i32 %621
  %623 = load i32, i32* %152, align 4
  %624 = icmp slt i32 %622, 0
  %625 = select i1 %624, i32 -2147483648, i32 2147483647
  %626 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %623, i32 %622) #13
  %627 = extractvalue { i32, i1 } %626, 1
  %628 = extractvalue { i32, i1 } %626, 0
  %629 = select i1 %627, i32 %625, i32 %628, !prof !9
  store i32 %629, i32* %152, align 4
  %630 = load i32, i32* %154, align 4
  %631 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %630, i32 %622) #13
  %632 = extractvalue { i32, i1 } %631, 1
  %633 = extractvalue { i32, i1 } %631, 0
  %634 = select i1 %632, i32 %625, i32 %633, !prof !9
  store i32 %634, i32* %154, align 4
  %635 = load i32, i32* %31, align 4
  %636 = icmp slt i32 %629, 0
  %637 = select i1 %636, i32 -2147483648, i32 2147483647
  %638 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %635, i32 %629) #13
  %639 = extractvalue { i32, i1 } %638, 1
  %640 = extractvalue { i32, i1 } %638, 0
  %641 = select i1 %639, i32 %637, i32 %640, !prof !9
  store i32 %641, i32* %31, align 4
  %642 = load i32, i32* %30, align 4
  %643 = icmp slt i32 %634, 0
  %644 = select i1 %643, i32 -2147483648, i32 2147483647
  %645 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %642, i32 %634) #13
  %646 = extractvalue { i32, i1 } %645, 1
  %647 = extractvalue { i32, i1 } %645, 0
  %648 = select i1 %646, i32 %644, i32 %647, !prof !9
  store i32 %648, i32* %30, align 4
  call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* nonnull %201) #13
  br label %745

649:                                              ; preds = %250
  %650 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 5, i32 0
  %651 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %650, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158)
  %652 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %651, i64 0, i32 0, i32 9
  %653 = bitcast [20 x i8]* %652 to i160*
  %654 = load i160, i160* %653, align 8, !noalias !55
  %655 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %651, i64 0, i32 0, i32 7, i32 0, i32 0
  %656 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %655, align 8, !noalias !55
  %657 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %656, i64 0, i32 12
  %658 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %656, i64 0, i32 11
  %659 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %656, i64 0, i32 9
  %660 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %656, i64 0, i32 10
  store %"class.blink::Length"* %657, %"class.blink::Length"** %20, align 8, !alias.scope !55
  store %"class.blink::Length"* %658, %"class.blink::Length"** %21, align 8, !alias.scope !55
  store %"class.blink::Length"* %659, %"class.blink::Length"** %22, align 8, !alias.scope !55
  store %"class.blink::Length"* %660, %"class.blink::Length"** %23, align 8, !alias.scope !55
  %661 = and i160 %654, 15211807202738752817960438464512
  %662 = icmp eq i160 %661, 0
  %663 = and i160 %654, 41538374868278621028243970633760768
  %664 = icmp eq i160 %663, 0
  %665 = select i1 %664, %"class.blink::Length"** %23, %"class.blink::Length"** %21
  %666 = select i1 %664, %"class.blink::Length"** %20, %"class.blink::Length"** %22
  %667 = select i1 %662, %"class.blink::Length"** %665, %"class.blink::Length"** %666
  %668 = load %"class.blink::Length"*, %"class.blink::Length"** %667, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162)
  store %"class.blink::Length"* %657, %"class.blink::Length"** %24, align 8, !alias.scope !58
  store %"class.blink::Length"* %658, %"class.blink::Length"** %25, align 8, !alias.scope !58
  store %"class.blink::Length"* %659, %"class.blink::Length"** %26, align 8, !alias.scope !58
  store %"class.blink::Length"* %660, %"class.blink::Length"** %27, align 8, !alias.scope !58
  %669 = select i1 %664, %"class.blink::Length"** %25, %"class.blink::Length"** %27
  %670 = select i1 %664, %"class.blink::Length"** %26, %"class.blink::Length"** %24
  %671 = select i1 %662, %"class.blink::Length"** %669, %"class.blink::Length"** %670
  %672 = load %"class.blink::Length"*, %"class.blink::Length"** %671, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162)
  %673 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %668, i64 0, i32 2
  %674 = load i8, i8* %673, align 1
  %675 = icmp eq i8 %674, 2
  br i1 %675, label %676, label %698

676:                                              ; preds = %649
  %677 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %668, i64 0, i32 3
  %678 = load i8, i8* %677, align 2, !range !2
  %679 = icmp eq i8 %678, 0
  br i1 %679, label %683, label %680

680:                                              ; preds = %676
  %681 = bitcast %"class.blink::Length"* %668 to float*
  %682 = load float, float* %681, align 4
  br label %687

683:                                              ; preds = %676
  %684 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %668, i64 0, i32 0, i32 0
  %685 = load i32, i32* %684, align 4
  %686 = sitofp i32 %685 to float
  br label %687

687:                                              ; preds = %683, %680
  %688 = phi float [ %682, %680 ], [ %686, %683 ]
  %689 = fmul float %688, 6.400000e+01
  %690 = call float @llvm.ceil.f32(float %689) #13
  %691 = fcmp ult float %690, 0xC1E0000000000000
  %692 = fcmp ugt float %690, 0x41DFFFFFE0000000
  %693 = fcmp ogt float %690, 0xC1E0000000000000
  %694 = select i1 %693, float %690, float 0xC1E0000000000000
  %695 = fptosi float %694 to i32
  %696 = select i1 %691, i32 0, i32 2147483647
  %697 = select i1 %692, i32 %696, i32 %695
  br label %698

698:                                              ; preds = %687, %649
  %699 = phi i32 [ %697, %687 ], [ 0, %649 ]
  %700 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %672, i64 0, i32 2
  %701 = load i8, i8* %700, align 1
  %702 = icmp eq i8 %701, 2
  br i1 %702, label %703, label %731

703:                                              ; preds = %698
  %704 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %672, i64 0, i32 3
  %705 = load i8, i8* %704, align 2, !range !2
  %706 = icmp eq i8 %705, 0
  br i1 %706, label %710, label %707

707:                                              ; preds = %703
  %708 = bitcast %"class.blink::Length"* %672 to float*
  %709 = load float, float* %708, align 4
  br label %714

710:                                              ; preds = %703
  %711 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %672, i64 0, i32 0, i32 0
  %712 = load i32, i32* %711, align 4
  %713 = sitofp i32 %712 to float
  br label %714

714:                                              ; preds = %710, %707
  %715 = phi float [ %709, %707 ], [ %713, %710 ]
  %716 = fmul float %715, 6.400000e+01
  %717 = call float @llvm.ceil.f32(float %716) #13
  %718 = fcmp ult float %717, 0xC1E0000000000000
  %719 = fcmp ugt float %717, 0x41DFFFFFE0000000
  %720 = fcmp ogt float %717, 0xC1E0000000000000
  %721 = select i1 %720, float %717, float 0xC1E0000000000000
  %722 = fptosi float %721 to i32
  %723 = select i1 %718, i32 0, i32 2147483647
  %724 = select i1 %719, i32 %723, i32 %722
  %725 = icmp slt i32 %724, 0
  %726 = select i1 %725, i32 -2147483648, i32 2147483647
  %727 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %699, i32 %724) #13
  %728 = extractvalue { i32, i1 } %727, 1
  %729 = extractvalue { i32, i1 } %727, 0
  %730 = select i1 %728, i32 %726, i32 %729, !prof !9
  br label %731

731:                                              ; preds = %698, %714
  %732 = phi i32 [ %730, %714 ], [ %699, %698 ]
  %733 = load i32, i32* %152, align 4
  %734 = icmp slt i32 %732, 0
  %735 = select i1 %734, i32 -2147483648, i32 2147483647
  %736 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %733, i32 %732) #13
  %737 = extractvalue { i32, i1 } %736, 1
  %738 = extractvalue { i32, i1 } %736, 0
  %739 = select i1 %737, i32 %735, i32 %738, !prof !9
  store i32 %739, i32* %152, align 4
  %740 = load i32, i32* %154, align 4
  %741 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %740, i32 %732) #13
  %742 = extractvalue { i32, i1 } %741, 1
  %743 = extractvalue { i32, i1 } %741, 0
  %744 = select i1 %742, i32 %735, i32 %743, !prof !9
  store i32 %744, i32* %154, align 4
  br label %745

745:                                              ; preds = %237, %617, %731
  %746 = phi i1 (%"class.blink::LayoutObject"*)*** [ %238, %237 ], [ %251, %617 ], [ %251, %731 ]
  %747 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %746, align 8
  %748 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %747, i64 26
  %749 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %748, align 8
  %750 = call zeroext i1 %749(%"class.blink::LayoutObject"* nonnull %201) #13
  br i1 %750, label %961, label %751

751:                                              ; preds = %745
  %752 = load i96, i96* %211, align 4
  %753 = and i96 %752, 33554432
  %754 = icmp eq i96 %753, 0
  br i1 %754, label %755, label %961

755:                                              ; preds = %751
  %756 = call zeroext i1 @_ZNK5blink12LayoutObject19IsOutsideListMarkerEv(%"class.blink::LayoutObject"* nonnull %201) #13
  br i1 %756, label %961, label %757

757:                                              ; preds = %755
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #13
  store i32 0, i32* %180, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %181) #13
  store i32 0, i32* %182, align 4
  call void @_ZNK5blink11LayoutBlock34ComputeChildPreferredLogicalWidthsERNS_12LayoutObjectERNS_10LayoutUnitES4_(%"class.blink::LayoutBlock"* %183, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %201, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %36, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %37) #13
  %758 = load i32, i32* %152, align 4
  %759 = load i32, i32* %180, align 4
  %760 = icmp slt i32 %759, 0
  %761 = select i1 %760, i32 -2147483648, i32 2147483647
  %762 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %758, i32 %759) #13
  %763 = extractvalue { i32, i1 } %762, 1
  %764 = extractvalue { i32, i1 } %762, 0
  %765 = select i1 %763, i32 %761, i32 %764, !prof !9
  store i32 %765, i32* %152, align 4
  %766 = load i32, i32* %154, align 4
  %767 = load i32, i32* %182, align 4
  %768 = icmp slt i32 %767, 0
  %769 = select i1 %768, i32 -2147483648, i32 2147483647
  %770 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %766, i32 %767) #13
  %771 = extractvalue { i32, i1 } %770, 1
  %772 = extractvalue { i32, i1 } %770, 0
  %773 = select i1 %771, i32 %769, i32 %772, !prof !9
  store i32 %773, i32* %154, align 4
  %774 = load i96, i96* %211, align 4
  %775 = and i96 %774, 8388608
  %776 = icmp eq i96 %775, 0
  br i1 %776, label %831, label %777

777:                                              ; preds = %757
  %778 = icmp eq %"class.blink::LayoutObject"* %204, null
  br i1 %778, label %831, label %779

779:                                              ; preds = %777
  %780 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %204, i64 0, i32 5, i32 0
  %781 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %780, align 8
  %782 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %781, i64 0, i32 0, i32 9
  %783 = bitcast [20 x i8]* %782 to i160*
  %784 = load i160, i160* %783, align 8
  %785 = lshr i160 %784, 71
  %786 = trunc i160 %785 to i32
  %787 = and i32 %786, 7
  %788 = add nsw i32 %787, -3
  %789 = icmp ult i32 %788, 2
  br i1 %789, label %790, label %797

790:                                              ; preds = %779
  %791 = load i160, i160* %107, align 8
  %792 = and i160 %791, 41538374868278621028243970633760768
  %793 = icmp eq i160 %792, 0
  %794 = icmp ne i32 %787, 3
  %795 = xor i1 %794, %793
  %796 = select i1 %795, i32 1, i32 2
  br label %797

797:                                              ; preds = %779, %790
  %798 = phi i32 [ %796, %790 ], [ %787, %779 ]
  %799 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %201, i64 0, i32 5, i32 0
  %800 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %799, align 8
  %801 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %800, i64 0, i32 0, i32 9
  %802 = bitcast [20 x i8]* %801 to i160*
  %803 = load i160, i160* %802, align 8
  %804 = lshr i160 %803, 68
  %805 = trunc i160 %804 to i32
  %806 = and i32 %805, 7
  %807 = add nsw i32 %806, -3
  %808 = icmp ult i32 %807, 2
  br i1 %808, label %809, label %816

809:                                              ; preds = %797
  %810 = load i160, i160* %107, align 8
  %811 = and i160 %810, 41538374868278621028243970633760768
  %812 = icmp eq i160 %811, 0
  %813 = icmp ne i32 %806, 3
  %814 = xor i1 %813, %812
  %815 = select i1 %814, i32 1, i32 2
  br label %816

816:                                              ; preds = %797, %809
  %817 = phi i32 [ %815, %809 ], [ %806, %797 ]
  %818 = icmp eq i32 %798, 1
  %819 = or i32 %817, 4
  %820 = icmp eq i32 %819, 5
  %821 = and i1 %818, %820
  br i1 %821, label %828, label %822

822:                                              ; preds = %816
  %823 = icmp eq i32 %798, 2
  br i1 %823, label %824, label %828

824:                                              ; preds = %822
  %825 = icmp eq i32 %817, 5
  %826 = icmp eq i32 %817, 2
  %827 = or i1 %825, %826
  br label %828

828:                                              ; preds = %816, %822, %824
  %829 = phi i1 [ false, %822 ], [ %827, %824 ], [ true, %816 ]
  %830 = zext i1 %829 to i8
  br label %831

831:                                              ; preds = %757, %828, %777
  %832 = phi %"class.blink::LayoutObject"* [ %201, %777 ], [ %201, %828 ], [ %204, %757 ]
  %833 = phi i8 [ 0, %777 ], [ %830, %828 ], [ 0, %757 ]
  %834 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %746, align 8
  %835 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %834, i64 21
  %836 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %835, align 8
  %837 = call zeroext i1 %836(%"class.blink::LayoutObject"* nonnull %201) #13
  %838 = xor i1 %837, true
  %839 = or i1 %105, %838
  br i1 %839, label %840, label %852

840:                                              ; preds = %831
  %841 = xor i1 %226, true
  %842 = and i8 %207, 1
  %843 = icmp eq i8 %842, 0
  %844 = and i1 %843, %841
  br i1 %844, label %852, label %845

845:                                              ; preds = %840
  %846 = and i8 %203, 1
  %847 = icmp ne i8 %846, 0
  %848 = and i8 %202, 1
  %849 = or i8 %848, %833
  %850 = icmp eq i8 %849, 0
  %851 = and i1 %850, %847
  br i1 %851, label %861, label %854

852:                                              ; preds = %840, %831
  %853 = icmp eq i8 %833, 0
  br i1 %853, label %870, label %854

854:                                              ; preds = %852, %845
  %855 = load i32, i32* %184, align 4
  %856 = load i32, i32* %31, align 4
  %857 = icmp slt i32 %855, %856
  %858 = select i1 %857, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %859 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %858, i64 0, i32 0
  %860 = load i32, i32* %859, align 4
  store i32 %860, i32* %184, align 4
  store i32 0, i32* %31, align 4
  br label %861

861:                                              ; preds = %845, %854
  %862 = icmp eq i8 %833, 0
  br i1 %862, label %870, label %863

863:                                              ; preds = %861
  %864 = load i32, i32* %186, align 4
  %865 = load i32, i32* %30, align 4
  %866 = icmp slt i32 %864, %865
  %867 = select i1 %866, %"class.blink::LayoutUnit"* %187, %"class.blink::LayoutUnit"* %2
  %868 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %867, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  store i32 %869, i32* %186, align 4
  store i32 0, i32* %30, align 4
  br label %870

870:                                              ; preds = %852, %861, %863
  %871 = and i8 %206, 1
  %872 = icmp eq i8 %871, 0
  br i1 %872, label %873, label %893

873:                                              ; preds = %870
  %874 = load i96, i96* %211, align 4
  %875 = and i96 %874, 8388608
  %876 = icmp eq i96 %875, 0
  br i1 %876, label %877, label %893

877:                                              ; preds = %873
  %878 = load i32, i32* %152, align 4
  %879 = icmp slt i32 %209, 0
  %880 = select i1 %879, i32 -2147483648, i32 2147483647
  %881 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %878, i32 %209) #13
  %882 = extractvalue { i32, i1 } %881, 1
  %883 = extractvalue { i32, i1 } %881, 0
  %884 = select i1 %882, i32 %880, i32 %883, !prof !9
  store i32 %884, i32* %152, align 4
  %885 = load i32, i32* %154, align 4
  %886 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %885, i32 %209) #13
  %887 = extractvalue { i32, i1 } %886, 1
  %888 = extractvalue { i32, i1 } %886, 0
  %889 = select i1 %887, i32 %880, i32 %888, !prof !9
  store i32 %889, i32* %154, align 4
  %890 = icmp slt i32 %884, 0
  %891 = select i1 %890, i32 %884, i32 %209
  %892 = select i1 %890, i8 %206, i8 1
  br label %893

893:                                              ; preds = %873, %877, %870
  %894 = phi i32 [ %209, %873 ], [ %209, %870 ], [ %891, %877 ]
  %895 = phi i8 [ %206, %873 ], [ %206, %870 ], [ %892, %877 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188)
  store i32 0, i32* %38, align 4
  %896 = load i32, i32* %154, align 4
  %897 = icmp sgt i32 %896, 0
  %898 = select i1 %897, %"class.blink::LayoutUnit"* %35, %"class.blink::LayoutUnit"* %189
  %899 = load i32, i32* %30, align 4
  %900 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %898, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  %902 = icmp slt i32 %901, 0
  %903 = select i1 %902, i32 -2147483648, i32 2147483647
  %904 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %899, i32 %901) #13
  %905 = extractvalue { i32, i1 } %904, 1
  %906 = extractvalue { i32, i1 } %904, 0
  %907 = select i1 %905, i32 %903, i32 %906, !prof !9
  store i32 %907, i32* %30, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188)
  %908 = and i1 %226, %839
  %909 = xor i1 %908, true
  br i1 %908, label %910, label %916

910:                                              ; preds = %893
  %911 = and i8 %203, 1
  %912 = icmp ne i8 %911, 0
  %913 = and i8 %202, 1
  %914 = icmp eq i8 %913, 0
  %915 = and i1 %912, %914
  br i1 %915, label %916, label %936

916:                                              ; preds = %893, %910
  %917 = load i96, i96* %211, align 4
  %918 = and i96 %917, 8388608
  %919 = icmp eq i96 %918, 0
  br i1 %919, label %927, label %920

920:                                              ; preds = %916
  %921 = load i32, i32* %184, align 4
  %922 = load i32, i32* %152, align 4
  %923 = icmp slt i32 %921, %922
  %924 = select i1 %923, %"class.blink::LayoutUnit"* %34, %"class.blink::LayoutUnit"* %1
  %925 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %924, i64 0, i32 0
  %926 = load i32, i32* %925, align 4
  store i32 %926, i32* %184, align 4
  br label %943

927:                                              ; preds = %916
  %928 = load i32, i32* %31, align 4
  %929 = load i32, i32* %152, align 4
  %930 = icmp slt i32 %929, 0
  %931 = select i1 %930, i32 -2147483648, i32 2147483647
  %932 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %928, i32 %929) #13
  %933 = extractvalue { i32, i1 } %932, 1
  %934 = extractvalue { i32, i1 } %932, 0
  %935 = select i1 %933, i32 %931, i32 %934, !prof !9
  store i32 %935, i32* %31, align 4
  br label %943

936:                                              ; preds = %910
  %937 = load i32, i32* %184, align 4
  %938 = load i32, i32* %152, align 4
  %939 = icmp slt i32 %937, %938
  %940 = select i1 %939, %"class.blink::LayoutUnit"* %34, %"class.blink::LayoutUnit"* %1
  %941 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %940, i64 0, i32 0
  %942 = load i32, i32* %941, align 4
  store i32 %942, i32* %184, align 4
  store i32 0, i32* %31, align 4
  br label %943

943:                                              ; preds = %920, %927, %936
  %944 = and i8 %203, 1
  %945 = icmp eq i8 %944, 0
  %946 = or i1 %945, %909
  br i1 %946, label %954, label %947

947:                                              ; preds = %943
  %948 = load i32, i32* %184, align 4
  %949 = load i32, i32* %31, align 4
  %950 = icmp slt i32 %948, %949
  %951 = select i1 %950, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %952 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %951, i64 0, i32 0
  %953 = load i32, i32* %952, align 4
  store i32 %953, i32* %184, align 4
  store i32 0, i32* %31, align 4
  br label %954

954:                                              ; preds = %943, %947
  %955 = load i96, i96* %211, align 4
  %956 = and i96 %955, 8388608
  %957 = icmp eq i96 %956, 0
  br i1 %957, label %958, label %959

958:                                              ; preds = %954
  store i8 0, i8* %32, align 1
  br label %959

959:                                              ; preds = %954, %958
  %960 = phi %"class.blink::LayoutObject"* [ %208, %954 ], [ null, %958 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %181) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #13
  br label %1143

961:                                              ; preds = %751, %755, %745
  %962 = load i96, i96* %211, align 4
  %963 = and i96 %962, 33554432
  %964 = icmp eq i96 %963, 0
  br i1 %964, label %1143, label %965

965:                                              ; preds = %961
  %966 = bitcast %"class.blink::LayoutObject"* %201 to %"class.blink::LayoutText"*
  %967 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutText"*)***
  %968 = load i1 (%"class.blink::LayoutText"*)**, i1 (%"class.blink::LayoutText"*)*** %967, align 8
  %969 = getelementptr inbounds i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %968, i64 107
  %970 = load i1 (%"class.blink::LayoutText"*)*, i1 (%"class.blink::LayoutText"*)** %969, align 8
  %971 = call zeroext i1 %970(%"class.blink::LayoutText"* %966) #13
  br i1 %971, label %972, label %979

972:                                              ; preds = %965
  %973 = load i32, i32* %184, align 4
  %974 = load i32, i32* %31, align 4
  %975 = icmp slt i32 %973, %974
  %976 = select i1 %975, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %977 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %976, i64 0, i32 0
  %978 = load i32, i32* %977, align 4
  store i32 %978, i32* %184, align 4
  store i32 0, i32* %31, align 4
  br label %1166

979:                                              ; preds = %965
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %39) #13
  store i8 -86, i8* %39, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #13
  store i8 -86, i8* %40, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %190) #13
  store i32 0, i32* %191, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %192) #13
  store i32 0, i32* %193, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #13
  store i8 -86, i8* %43, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %44) #13
  store i8 -86, i8* %44, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #13
  store i32 0, i32* %195, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %196) #13
  store i32 0, i32* %197, align 4
  %980 = load i32, i32* %30, align 4
  %981 = load i160, i160* %107, align 8
  %982 = lshr i160 %981, 115
  %983 = trunc i160 %982 to i8
  %984 = and i8 %983, 1
  call void @_ZN5blink10LayoutText17TrimmedPrefWidthsENS_10LayoutUnitERS1_RbS2_S3_S3_S3_S2_S2_S2_S2_S3_NS_13TextDirectionE(%"class.blink::LayoutText"* %966, i32 %980, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %41, i8* nonnull dereferenceable(1) %43, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %42, i8* nonnull dereferenceable(1) %44, i8* nonnull dereferenceable(1) %39, i8* nonnull dereferenceable(1) %40, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %45, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %46, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %34, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %35, i8* nonnull dereferenceable(1) %32, i8 zeroext %984) #13
  %985 = load i8, i8* %40, align 1, !range !2
  %986 = icmp eq i8 %985, 0
  %987 = xor i1 %986, true
  %988 = load i32, i32* %154, align 4
  %989 = icmp ne i32 %988, 0
  %990 = or i1 %989, %987
  br i1 %990, label %1004, label %991

991:                                              ; preds = %979
  br i1 %226, label %992, label %1136

992:                                              ; preds = %991
  %993 = load i8, i8* %43, align 1, !range !2
  %994 = load i8, i8* %44, align 1
  %995 = or i8 %994, %993
  %996 = icmp eq i8 %995, 0
  br i1 %996, label %1136, label %997

997:                                              ; preds = %992
  %998 = load i32, i32* %184, align 4
  %999 = load i32, i32* %31, align 4
  %1000 = icmp slt i32 %998, %999
  %1001 = select i1 %1000, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %1002 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1001, i64 0, i32 0
  %1003 = load i32, i32* %1002, align 4
  store i32 %1003, i32* %184, align 4
  store i32 0, i32* %31, align 4
  br label %1136

1004:                                             ; preds = %979
  %1005 = load i8, i8* %32, align 1, !range !2
  %1006 = icmp eq i8 %1005, 0
  %1007 = select i1 %1006, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %201
  %1008 = and i8 %206, 1
  %1009 = icmp ne i8 %1008, 0
  %1010 = and i8 %205, 1
  %1011 = icmp eq i8 %1010, 0
  %1012 = and i1 %1009, %1011
  br i1 %1012, label %1042, label %1013

1013:                                             ; preds = %1004
  %1014 = load i32, i32* %152, align 4
  %1015 = icmp slt i32 %209, 0
  %1016 = select i1 %1015, i32 -2147483648, i32 2147483647
  %1017 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1014, i32 %209) #13
  %1018 = extractvalue { i32, i1 } %1017, 1
  %1019 = extractvalue { i32, i1 } %1017, 0
  %1020 = select i1 %1018, i32 %1016, i32 %1019, !prof !9
  store i32 %1020, i32* %152, align 4
  %1021 = load i32, i32* %191, align 4
  %1022 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1021, i32 %209) #13
  %1023 = extractvalue { i32, i1 } %1022, 1
  %1024 = extractvalue { i32, i1 } %1022, 0
  %1025 = select i1 %1023, i32 %1016, i32 %1024, !prof !9
  store i32 %1025, i32* %191, align 4
  br i1 %1009, label %1036, label %1026

1026:                                             ; preds = %1013
  %1027 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %988, i32 %209) #13
  %1028 = extractvalue { i32, i1 } %1027, 1
  %1029 = extractvalue { i32, i1 } %1027, 0
  %1030 = select i1 %1028, i32 %1016, i32 %1029, !prof !9
  store i32 %1030, i32* %154, align 4
  %1031 = load i32, i32* %195, align 4
  %1032 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1031, i32 %209) #13
  %1033 = extractvalue { i32, i1 } %1032, 1
  %1034 = extractvalue { i32, i1 } %1032, 0
  %1035 = select i1 %1033, i32 %1016, i32 %1034, !prof !9
  store i32 %1035, i32* %195, align 4
  br label %1036

1036:                                             ; preds = %1026, %1013
  %1037 = phi i32 [ %988, %1013 ], [ %1030, %1026 ]
  %1038 = phi i8 [ %206, %1013 ], [ 1, %1026 ]
  %1039 = icmp slt i32 %1020, 0
  %1040 = select i1 %1039, i32 %1020, i32 %209
  %1041 = select i1 %1039, i8 1, i8 %205
  br label %1042

1042:                                             ; preds = %1036, %1004
  %1043 = phi i32 [ %988, %1004 ], [ %1037, %1036 ]
  %1044 = phi i32 [ 0, %1004 ], [ %209, %1036 ]
  %1045 = phi i32 [ %209, %1004 ], [ %1040, %1036 ]
  %1046 = phi i8 [ %206, %1004 ], [ %1038, %1036 ]
  %1047 = phi i8 [ %205, %1004 ], [ %1041, %1036 ]
  %1048 = load i8, i8* %39, align 1, !range !2
  %1049 = icmp eq i8 %1048, 0
  br i1 %1049, label %1050, label %1059

1050:                                             ; preds = %1042
  %1051 = load i32, i32* %31, align 4
  %1052 = load i32, i32* %152, align 4
  %1053 = icmp slt i32 %1052, 0
  %1054 = select i1 %1053, i32 -2147483648, i32 2147483647
  %1055 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1051, i32 %1052) #13
  %1056 = extractvalue { i32, i1 } %1055, 1
  %1057 = extractvalue { i32, i1 } %1055, 0
  %1058 = select i1 %1056, i32 %1054, i32 %1057, !prof !9
  store i32 %1058, i32* %31, align 4
  br label %1103

1059:                                             ; preds = %1042
  %1060 = load i8, i8* %43, align 1, !range !2
  %1061 = icmp eq i8 %1060, 0
  br i1 %1061, label %1070, label %1062

1062:                                             ; preds = %1059
  %1063 = load i32, i32* %184, align 4
  %1064 = load i32, i32* %31, align 4
  %1065 = icmp slt i32 %1063, %1064
  %1066 = select i1 %1065, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %1067 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1066, i64 0, i32 0
  %1068 = load i32, i32* %1067, align 4
  store i32 %1068, i32* %184, align 4
  %1069 = load i32, i32* %152, align 4
  br label %1091

1070:                                             ; preds = %1059
  %1071 = load i32, i32* %31, align 4
  %1072 = load i32, i32* %191, align 4
  %1073 = icmp slt i32 %1072, 0
  %1074 = select i1 %1073, i32 -2147483648, i32 2147483647
  %1075 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1071, i32 %1072) #13
  %1076 = extractvalue { i32, i1 } %1075, 1
  %1077 = extractvalue { i32, i1 } %1075, 0
  %1078 = select i1 %1076, i32 %1074, i32 %1077, !prof !9
  store i32 %1078, i32* %31, align 4
  %1079 = load i32, i32* %184, align 4
  %1080 = icmp slt i32 %1079, %1078
  %1081 = select i1 %1080, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %1082 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1081, i64 0, i32 0
  %1083 = load i32, i32* %1082, align 4
  store i32 %1083, i32* %184, align 4
  %1084 = load i32, i32* %152, align 4
  %1085 = icmp sgt i32 %1044, -1
  %1086 = select i1 %1085, i32 -2147483648, i32 2147483647
  %1087 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1084, i32 %1044) #13
  %1088 = extractvalue { i32, i1 } %1087, 1
  %1089 = extractvalue { i32, i1 } %1087, 0
  %1090 = select i1 %1088, i32 %1086, i32 %1089, !prof !9
  store i32 %1090, i32* %152, align 4
  br label %1091

1091:                                             ; preds = %1070, %1062
  %1092 = phi i32 [ %1083, %1070 ], [ %1068, %1062 ]
  %1093 = phi i32 [ %1090, %1070 ], [ %1069, %1062 ]
  store i32 %1093, i32* %31, align 4
  %1094 = load i8, i8* %44, align 1, !range !2
  %1095 = icmp eq i8 %1094, 0
  %1096 = icmp slt i32 %1092, %1093
  %1097 = select i1 %1096, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %1098 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1097, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 4
  store i32 %1099, i32* %184, align 4
  br i1 %1095, label %1101, label %1100

1100:                                             ; preds = %1091
  store i32 0, i32* %31, align 4
  br label %1103

1101:                                             ; preds = %1091
  %1102 = load i32, i32* %193, align 4
  store i32 %1102, i32* %31, align 4
  br label %1103

1103:                                             ; preds = %1100, %1101, %1050
  %1104 = phi i8 [ 0, %1100 ], [ 1, %1101 ], [ %202, %1050 ]
  br i1 %986, label %1124, label %1105

1105:                                             ; preds = %1103
  %1106 = load i32, i32* %30, align 4
  %1107 = load i32, i32* %195, align 4
  %1108 = icmp slt i32 %1107, 0
  %1109 = select i1 %1108, i32 -2147483648, i32 2147483647
  %1110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1106, i32 %1107) #13
  %1111 = extractvalue { i32, i1 } %1110, 1
  %1112 = extractvalue { i32, i1 } %1110, 0
  %1113 = select i1 %1111, i32 %1109, i32 %1112, !prof !9
  store i32 %1113, i32* %30, align 4
  %1114 = load i32, i32* %186, align 4
  %1115 = icmp slt i32 %1114, %1113
  %1116 = select i1 %1115, %"class.blink::LayoutUnit"* %187, %"class.blink::LayoutUnit"* %2
  %1117 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1116, i64 0, i32 0
  %1118 = load i32, i32* %1117, align 4
  store i32 %1118, i32* %186, align 4
  %1119 = icmp slt i32 %1118, %1043
  %1120 = select i1 %1119, %"class.blink::LayoutUnit"* %35, %"class.blink::LayoutUnit"* %2
  %1121 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1120, i64 0, i32 0
  %1122 = load i32, i32* %1121, align 4
  store i32 %1122, i32* %186, align 4
  %1123 = load i32, i32* %197, align 4
  store i32 %1123, i32* %30, align 4
  br label %1136

1124:                                             ; preds = %1103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198)
  store i32 0, i32* %47, align 4
  %1125 = icmp sgt i32 %1043, 0
  %1126 = select i1 %1125, %"class.blink::LayoutUnit"* %35, %"class.blink::LayoutUnit"* %199
  %1127 = load i32, i32* %30, align 4
  %1128 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1126, i64 0, i32 0
  %1129 = load i32, i32* %1128, align 4
  %1130 = icmp slt i32 %1129, 0
  %1131 = select i1 %1130, i32 -2147483648, i32 2147483647
  %1132 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1127, i32 %1129) #13
  %1133 = extractvalue { i32, i1 } %1132, 1
  %1134 = extractvalue { i32, i1 } %1132, 0
  %1135 = select i1 %1133, i32 %1131, i32 %1134, !prof !9
  store i32 %1135, i32* %30, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198)
  br label %1136

1136:                                             ; preds = %992, %997, %991, %1124, %1105
  %1137 = phi i32 [ %209, %992 ], [ %209, %997 ], [ %209, %991 ], [ %1045, %1124 ], [ %1045, %1105 ]
  %1138 = phi %"class.blink::LayoutObject"* [ %208, %992 ], [ %208, %997 ], [ %208, %991 ], [ %1007, %1124 ], [ %1007, %1105 ]
  %1139 = phi i8 [ %206, %992 ], [ %206, %997 ], [ %206, %991 ], [ %1046, %1124 ], [ 1, %1105 ]
  %1140 = phi i8 [ %205, %992 ], [ %205, %997 ], [ %205, %991 ], [ %1047, %1124 ], [ %1047, %1105 ]
  %1141 = phi i8 [ %202, %992 ], [ %202, %997 ], [ %202, %991 ], [ %1104, %1124 ], [ %1104, %1105 ]
  %1142 = phi i1 [ false, %992 ], [ false, %997 ], [ false, %991 ], [ true, %1124 ], [ true, %1105 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %196) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %192) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %190) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %39) #13
  br i1 %1142, label %1143, label %1166

1143:                                             ; preds = %961, %1136, %959
  %1144 = phi i32 [ %1137, %1136 ], [ %209, %961 ], [ %894, %959 ]
  %1145 = phi %"class.blink::LayoutObject"* [ %1138, %1136 ], [ %208, %961 ], [ %960, %959 ]
  %1146 = phi i8 [ %1139, %1136 ], [ %206, %961 ], [ %895, %959 ]
  %1147 = phi i8 [ %1140, %1136 ], [ %205, %961 ], [ %205, %959 ]
  %1148 = phi %"class.blink::LayoutObject"* [ %204, %1136 ], [ %204, %961 ], [ %832, %959 ]
  %1149 = phi i8 [ %1141, %1136 ], [ %202, %961 ], [ %202, %959 ]
  %1150 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %228, align 8
  %1151 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1150, i64 92
  %1152 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1151, align 8
  %1153 = call zeroext i1 %1152(%"class.blink::LayoutObject"* nonnull %201, i32 15) #13
  br i1 %1153, label %1164, label %1154

1154:                                             ; preds = %1143
  %1155 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %228, align 8
  %1156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1155, i64 92
  %1157 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1156, align 8
  %1158 = call zeroext i1 %1157(%"class.blink::LayoutObject"* nonnull %201, i32 36) #13
  br i1 %1158, label %1164, label %1159

1159:                                             ; preds = %1154
  %1160 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %228, align 8
  %1161 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1160, i64 92
  %1162 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1161, align 8
  %1163 = call zeroext i1 %1162(%"class.blink::LayoutObject"* nonnull %201, i32 31) #13
  br i1 %1163, label %1164, label %1165

1164:                                             ; preds = %1143, %1154, %1159
  store i8 1, i8* %32, align 1
  br label %1165

1165:                                             ; preds = %1164, %1159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #13
  br label %1185

1166:                                             ; preds = %972, %1136
  %1167 = phi i32 [ %1137, %1136 ], [ %209, %972 ]
  %1168 = phi %"class.blink::LayoutObject"* [ %1138, %1136 ], [ %208, %972 ]
  %1169 = phi i8 [ %1139, %1136 ], [ %206, %972 ]
  %1170 = phi i8 [ %1140, %1136 ], [ %205, %972 ]
  %1171 = phi i8 [ %1141, %1136 ], [ %202, %972 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %153) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #13
  br label %1202

1172:                                             ; preds = %218
  %1173 = load i32, i32* %184, align 4
  %1174 = load i32, i32* %31, align 4
  %1175 = icmp slt i32 %1173, %1174
  %1176 = select i1 %1175, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %1
  %1177 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1176, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 4
  store i32 %1178, i32* %184, align 4
  %1179 = load i32, i32* %186, align 4
  %1180 = load i32, i32* %30, align 4
  %1181 = icmp slt i32 %1179, %1180
  %1182 = select i1 %1181, %"class.blink::LayoutUnit"* %187, %"class.blink::LayoutUnit"* %2
  %1183 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1182, i64 0, i32 0
  %1184 = load i32, i32* %1183, align 4
  store i32 %1184, i32* %186, align 4
  store i32 0, i32* %30, align 4
  store i32 0, i32* %31, align 4
  store i8 1, i8* %32, align 1
  br label %1185

1185:                                             ; preds = %1165, %1172
  %1186 = phi i32 [ %209, %1172 ], [ %1144, %1165 ]
  %1187 = phi %"class.blink::LayoutObject"* [ null, %1172 ], [ %1145, %1165 ]
  %1188 = phi i8 [ 1, %1172 ], [ %1146, %1165 ]
  %1189 = phi i8 [ %205, %1172 ], [ %1147, %1165 ]
  %1190 = phi %"class.blink::LayoutObject"* [ %204, %1172 ], [ %1148, %1165 ]
  %1191 = phi i8 [ %202, %1172 ], [ %1149, %1165 ]
  %1192 = load i96, i96* %211, align 4
  %1193 = and i96 %1192, 33554432
  %1194 = icmp eq i96 %1193, 0
  br i1 %1194, label %1195, label %1201

1195:                                             ; preds = %1185
  %1196 = bitcast %"class.blink::LayoutObject"* %201 to i1 (%"class.blink::LayoutObject"*)***
  %1197 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1196, align 8
  %1198 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1197, i64 26
  %1199 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1198, align 8
  %1200 = call zeroext i1 %1199(%"class.blink::LayoutObject"* nonnull %201) #13
  br i1 %1200, label %1202, label %1201

1201:                                             ; preds = %1185, %1195
  br label %1202

1202:                                             ; preds = %1166, %1201, %1195
  %1203 = phi i32 [ %1186, %1201 ], [ %1186, %1195 ], [ %1167, %1166 ]
  %1204 = phi %"class.blink::LayoutObject"* [ %1187, %1201 ], [ %1187, %1195 ], [ %1168, %1166 ]
  %1205 = phi i8 [ %227, %1201 ], [ %227, %1195 ], [ %207, %1166 ]
  %1206 = phi i8 [ %1188, %1201 ], [ %1188, %1195 ], [ %1169, %1166 ]
  %1207 = phi i8 [ %1189, %1201 ], [ %1189, %1195 ], [ %1170, %1166 ]
  %1208 = phi %"class.blink::LayoutObject"* [ %1190, %1201 ], [ %1190, %1195 ], [ %204, %1166 ]
  %1209 = phi i8 [ 0, %1201 ], [ 1, %1195 ], [ %203, %1166 ]
  %1210 = phi i8 [ %1191, %1201 ], [ %1191, %1195 ], [ %1171, %1166 ]
  %1211 = call %"class.blink::LayoutObject"* @_ZN5blink20InlineMinMaxIterator4NextEv(%"struct.blink::InlineMinMaxIterator"* nonnull %33)
  %1212 = icmp eq %"class.blink::LayoutObject"* %1211, null
  br i1 %1212, label %1213, label %200

1213:                                             ; preds = %1202
  %1214 = load i160, i160* %107, align 8
  %1215 = and i160 %1214, 286720
  %1216 = icmp ne i160 %1215, 0
  %1217 = icmp eq %"class.blink::LayoutObject"* %1204, null
  %1218 = or i1 %1217, %1216
  br i1 %1218, label %1310, label %1219

1219:                                             ; preds = %1213
  %1220 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1204, i64 0, i32 4
  %1221 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1220 to i96*
  %1222 = load i96, i96* %1221, align 4
  %1223 = and i96 %1222, 33554432
  %1224 = icmp eq i96 %1223, 0
  br i1 %1224, label %1310, label %1225

1225:                                             ; preds = %1219
  %1226 = bitcast i16* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1226) #13
  store i16 32, i16* %28, align 2
  %1227 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1204, i64 1, i32 4, i32 0, i64 4
  %1228 = bitcast i8* %1227 to %"class.WTF::StringImpl"**
  %1229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1228, align 8
  %1230 = icmp eq %"class.WTF::StringImpl"* %1229, null
  br i1 %1230, label %1263, label %1231

1231:                                             ; preds = %1225
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1229, i64 0, i32 1
  %1233 = load i32, i32* %1232, align 4
  %1234 = icmp eq i32 %1233, 0
  br i1 %1234, label %1263, label %1235

1235:                                             ; preds = %1231
  %1236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1229, i64 1
  %1238 = bitcast %"class.WTF::StringImpl"* %1237 to i8*
  %1239 = bitcast %"class.WTF::StringImpl"* %1237 to i16*
  %1240 = zext i32 %1233 to i64
  br label %1241

1241:                                             ; preds = %1260, %1235
  %1242 = phi i64 [ %1240, %1235 ], [ %1262, %1260 ]
  %1243 = trunc i64 %1242 to i32
  %1244 = add i32 %1243, -1
  %1245 = icmp ugt i32 %1233, %1244
  br i1 %1245, label %1246, label %1263

1246:                                             ; preds = %1241
  %1247 = load atomic i32, i32* %1236 monotonic, align 4
  %1248 = and i32 %1247, 1
  %1249 = icmp eq i32 %1248, 0
  %1250 = zext i32 %1244 to i64
  br i1 %1249, label %1255, label %1251

1251:                                             ; preds = %1246
  %1252 = getelementptr inbounds i8, i8* %1238, i64 %1250
  %1253 = load i8, i8* %1252, align 1
  %1254 = zext i8 %1253 to i16
  br label %1258

1255:                                             ; preds = %1246
  %1256 = getelementptr inbounds i16, i16* %1239, i64 %1250
  %1257 = load i16, i16* %1256, align 2
  br label %1258

1258:                                             ; preds = %1255, %1251
  %1259 = phi i16 [ %1254, %1251 ], [ %1257, %1255 ]
  switch i16 %1259, label %1263 [
    i16 32, label %1260
    i16 10, label %1260
    i16 9, label %1260
    i16 160, label %1260
  ]

1260:                                             ; preds = %1258, %1258, %1258, %1258
  store i16 %1259, i16* %28, align 2
  %1261 = icmp eq i32 %1244, 0
  %1262 = add nsw i64 %1242, -1
  br i1 %1261, label %1263, label %1241

1263:                                             ; preds = %1260, %1258, %1241, %1231, %1225
  %1264 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1204, i64 0, i32 5, i32 0
  %1265 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1264, align 8
  %1266 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1265, i64 0, i32 0, i32 0, i32 0, i32 0
  %1267 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %1266, align 8
  %1268 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %1267, i64 0, i32 1, i32 0, i32 0
  %1269 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %1268, align 8
  %1270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %1269, i64 0, i32 1
  %1271 = bitcast %"class.blink::TextRun"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1271) #13
  %1272 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1271, i8 -86, i64 16, i1 false) #13
  store float 0xFFFFFFFFE0000000, float* %1272, align 8
  %1273 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %1273, align 4
  %1274 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 5
  store i16 -21846, i16* %1274, align 8
  %1275 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 6, i64 0
  store i8 -86, i8* %1275, align 2
  %1276 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 6, i64 1
  store i8 -86, i8* %1276, align 1
  %1277 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %1277, align 4
  %1278 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 7, i32 1
  %1279 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1265, i64 0, i32 0, i32 9
  %1280 = bitcast [20 x i8]* %1279 to i160*
  %1281 = bitcast i8* %1278 to i64*
  store i64 -6148914691236517206, i64* %1281, align 4
  %1282 = load i160, i160* %1280, align 8
  %1283 = lshr i160 %1282, 115
  %1284 = trunc i160 %1283 to i8
  %1285 = and i8 %1284, 1
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %29, %"class.blink::Font"* dereferenceable(88) %1270, i16* nonnull %28, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %1265, i8 zeroext %1285) #13
  %1286 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %1270, %"class.blink::TextRun"* nonnull dereferenceable(40) %29, %"class.WTF::HashSet.2276"* null, %"class.blink::FloatRect"* null) #13
  %1287 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %1269, i64 0, i32 1, i32 0, i32 9
  %1288 = load float, float* %1287, align 4
  %1289 = fadd float %1286, %1288
  %1290 = fmul float %1289, 6.400000e+01
  %1291 = call float @llvm.ceil.f32(float %1290) #13
  %1292 = fcmp ult float %1291, 0xC1E0000000000000
  %1293 = fcmp ugt float %1291, 0x41DFFFFFE0000000
  %1294 = fcmp ogt float %1291, 0xC1E0000000000000
  %1295 = select i1 %1294, float %1291, float 0xC1E0000000000000
  %1296 = fptosi float %1295 to i32
  %1297 = select i1 %1292, i32 0, i32 2147483647
  %1298 = select i1 %1293, i32 %1297, i32 %1296
  %1299 = load i32, i32* %30, align 4
  %1300 = icmp sgt i32 %1298, -1
  %1301 = select i1 %1300, i32 -2147483648, i32 2147483647
  %1302 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1299, i32 %1298) #13
  %1303 = extractvalue { i32, i1 } %1302, 1
  %1304 = extractvalue { i32, i1 } %1302, 0
  %1305 = select i1 %1303, i32 %1301, i32 %1304, !prof !9
  store i32 %1305, i32* %30, align 4
  %1306 = load i32, i32* %31, align 4
  %1307 = icmp sgt i32 %1306, %1305
  br i1 %1307, label %1308, label %1309

1308:                                             ; preds = %1263
  store i32 %1305, i32* %31, align 4
  br label %1309

1309:                                             ; preds = %1308, %1263
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1271) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1226) #13
  br label %1310

1310:                                             ; preds = %146, %1213, %1309, %1219
  %1311 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %1312 = load i32, i32* %1311, align 4
  %1313 = load i32, i32* %31, align 4
  %1314 = icmp slt i32 %1312, %1313
  %1315 = bitcast i32* %31 to %"class.blink::LayoutUnit"*
  %1316 = select i1 %1314, %"class.blink::LayoutUnit"* %1315, %"class.blink::LayoutUnit"* %1
  %1317 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1316, i64 0, i32 0
  %1318 = load i32, i32* %1317, align 4
  store i32 %1318, i32* %1311, align 4
  %1319 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %1320 = load i32, i32* %1319, align 4
  %1321 = load i32, i32* %30, align 4
  %1322 = icmp slt i32 %1320, %1321
  %1323 = bitcast i32* %30 to %"class.blink::LayoutUnit"*
  %1324 = select i1 %1322, %"class.blink::LayoutUnit"* %1323, %"class.blink::LayoutUnit"* %2
  %1325 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1324, i64 0, i32 0
  %1326 = load i32, i32* %1325, align 4
  store i32 %1326, i32* %1319, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  ret void
}

declare void @_ZN5blink14LayoutListItem24UpdateMarkerTextIfNeededEv(%"class.blink::LayoutListItem"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12LayoutObject19IsOutsideListMarkerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZNK5blink11LayoutBlock34ComputeChildPreferredLogicalWidthsERNS_12LayoutObjectERNS_10LayoutUnitES4_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText17TrimmedPrefWidthsENS_10LayoutUnitERS1_RbS2_S3_S3_S3_S2_S2_S2_S2_S3_NS_13TextDirectionE(%"class.blink::LayoutText"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), i8* dereferenceable(1), %"class.blink::LayoutUnit"* dereferenceable(4), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4), i8* dereferenceable(1), i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %67, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 32
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 31
  switch i32 %16, label %67 [
    i32 1, label %17
    i32 14, label %17
  ]

17:                                               ; preds = %8, %8
  %18 = and i160 %13, 2113929216
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %67

20:                                               ; preds = %17
  %21 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %22 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %22, i64 23
  %24 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %2) #13
  br i1 %25, label %26, label %67

26:                                               ; preds = %20
  %27 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %21, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, i64 25
  %29 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %2) #13
  br i1 %30, label %67, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 20) #13
  br i1 %36, label %67, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 7
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %84, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*)***
  %43 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, i64 24
  %45 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* nonnull %39) #13
  br i1 %46, label %47, label %56

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = lshr i160 %52, 32
  %54 = trunc i160 %53 to i32
  %55 = and i32 %54, 31
  switch i32 %55, label %56 [
    i32 21, label %67
    i32 12, label %67
    i32 3, label %67
    i32 2, label %67
    i32 1, label %67
    i32 13, label %67
  ]

56:                                               ; preds = %47, %41
  %57 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*, i32)***
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* nonnull %39, i32 1) #13
  br i1 %61, label %67, label %62

62:                                               ; preds = %56
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* nonnull %39, i32 23) #13
  br i1 %66, label %67, label %84

67:                                               ; preds = %31, %47, %47, %47, %47, %47, %47, %56, %62, %8, %1, %17, %20, %26
  %68 = phi %"class.blink::LayoutObject"* [ %2, %31 ], [ %2, %26 ], [ %2, %20 ], [ %2, %17 ], [ %2, %1 ], [ %2, %8 ], [ %39, %62 ], [ %39, %56 ], [ %39, %47 ], [ %39, %47 ], [ %39, %47 ], [ %39, %47 ], [ %39, %47 ], [ %39, %47 ]
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  %71 = load i96, i96* %70, align 4
  %72 = and i96 %71, 8589934592
  %73 = icmp eq i96 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 5, i32 0
  %76 = bitcast %"class.blink::ComputedStyle"** %75 to %"class.blink::ComputedStyleBase"**
  %77 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %77, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %79, i64 0, i32 12
  %81 = load i16, i16* %80, align 4
  %82 = and i16 %81, 512
  %83 = icmp ne i16 %82, 0
  br label %84

84:                                               ; preds = %67, %37, %62, %74
  %85 = phi i1 [ false, %67 ], [ %83, %74 ], [ false, %62 ], [ false, %37 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow20LayoutInlineChildrenEbNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LineLayoutState", align 8
  %5 = alloca %"class.WTF::Vector.1695", align 8
  %6 = alloca %"class.blink::InlineWalker", align 8
  %7 = alloca %"class.blink::LayoutBox"*, align 8
  %8 = alloca %"struct.blink::LayoutBlockFlow::FloatWithRect", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %12 = icmp eq %"class.blink::InlineFlowBox"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 3
  %18 = icmp ne i96 %17, 0
  %19 = or i1 %18, %1
  br label %20

20:                                               ; preds = %13, %3
  %21 = phi i1 [ true, %3 ], [ %19, %13 ]
  %22 = bitcast %"class.blink::LineLayoutState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 64, i1 false)
  %23 = zext i1 %21 to i8
  %24 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 32, i1 false) #13
  store i8 1, i8* %24, align 8
  %25 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 3, i32 1
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 3, i32 2
  store i8 1, i8* %26, align 2
  %27 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 3, i32 3
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 3, i32 4
  %29 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 8
  %30 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 18, i1 false) #13
  store i8 %23, i8* %29, align 2
  %31 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 9
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 10, i32 0
  store i32 0, i32* %32, align 8
  br i1 %21, label %33, label %37

33:                                               ; preds = %20
  br i1 %12, label %35, label %34

34:                                               ; preds = %33
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %9, i8 zeroext 3) #13
  br label %35

35:                                               ; preds = %33, %34
  %36 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"* %36) #13
  br label %65

37:                                               ; preds = %20
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %37, %41
  %42 = phi %"class.blink::LayoutObject"* [ %44, %41 ], [ %9, %37 ]
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %37
  %49 = phi %"class.blink::Node"* [ %39, %37 ], [ %46, %41 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 113
  %55 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %55, i64 0, i32 3
  %57 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutState"* %57, null
  br i1 %58, label %65, label %59

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %57, i64 0, i32 0
  %61 = load i8, i8* %60, align 8
  %62 = and i8 %61, 5
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %59
  store i8 1, i8* %31, align 1
  br label %65

65:                                               ; preds = %59, %64, %48, %35
  %66 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %67 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp eq %"class.blink::LayoutObject"* %68, null
  br i1 %69, label %449, label %70

70:                                               ; preds = %65
  %71 = bitcast %"class.WTF::Vector.1695"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #13
  %72 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %5, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %5, i64 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #13
  %75 = bitcast %"class.blink::InlineWalker"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #13
  %76 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %6, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %6, i64 0, i32 2
  %78 = bitcast %"class.blink::InlineWalker"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false)
  call void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"* nonnull %6, %"class.blink::LayoutObject"* %9)
  %79 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %80 = icmp eq %"class.blink::LayoutObject"* %79, null
  br i1 %80, label %104, label %81

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 7
  %83 = bitcast %"class.blink::LayoutBox"** %7 to i8*
  %84 = bitcast %"class.blink::LayoutBox"** %7 to %"class.blink::LayoutObject"**
  %85 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0
  %86 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8 to i8*
  %87 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 0
  %88 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 1
  %89 = bitcast %"class.blink::LayoutRect"* %88 to i64*
  %90 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 1, i32 1
  %91 = bitcast %"class.blink::LayoutSize"* %90 to i64*
  %92 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 2
  %93 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %88, i64 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 1, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 1, i32 1, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %8, i64 0, i32 1, i32 1, i32 1, i32 0
  %97 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.blink::LayoutBlockFlow"* %0 to void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)***
  %101 = bitcast %"class.blink::LayoutBox"** %7 to i64*
  %102 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %103 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %102 to i96*
  br label %110

104:                                              ; preds = %418, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  %105 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %72, align 8
  %106 = load i32, i32* %74, align 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %105, i64 %107
  %109 = icmp eq i32 %106, 0
  br i1 %109, label %422, label %432

110:                                              ; preds = %81, %418
  %111 = phi %"class.blink::LayoutObject"* [ %79, %81 ], [ %420, %418 ]
  %112 = bitcast %"class.blink::LayoutObject"* %111 to i1 (%"class.blink::LayoutObject"*)***
  %113 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %112, align 8
  %114 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %113, i64 26
  %115 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %114, align 8
  %116 = call zeroext i1 %115(%"class.blink::LayoutObject"* nonnull %111) #13
  br i1 %116, label %117, label %146

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 5, i32 0
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %119, i64 0, i32 0, i32 3, i32 0, i32 0
  %121 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %121, i64 0, i32 3, i32 0, i32 0
  %123 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %123, i64 0, i32 13, i32 5
  %125 = bitcast [7 x i8]* %124 to i56*
  %126 = load i56, i56* %125, align 8
  %127 = and i56 %126, 281474976710656
  %128 = icmp eq i56 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %123, i64 0, i32 13
  call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %130) #13
  %131 = load i56, i56* %125, align 8
  br label %132

132:                                              ; preds = %129, %117
  %133 = phi i56 [ %126, %117 ], [ %131, %129 ]
  %134 = and i56 %133, 8796093022208
  %135 = icmp eq i56 %134, 0
  br i1 %135, label %136, label %145

136:                                              ; preds = %132
  %137 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %120, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %137, i64 0, i32 3, i32 0, i32 0
  %139 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %139, i64 0, i32 14, i32 0, i32 0, i32 0
  %141 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %141, i64 0, i32 2, i32 0, i32 0
  %143 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %142, align 8
  %144 = icmp eq %"class.blink::StyleImage"* %143, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %136, %132
  call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* nonnull %111) #13
  br label %146

146:                                              ; preds = %136, %145, %110
  %147 = load i8, i8* %82, align 1, !range !2
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %156

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 4
  %151 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %150 to i96*
  %152 = load i96, i96* %151, align 4
  %153 = and i96 %152, 134217728
  %154 = icmp eq i96 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %149
  store i8 1, i8* %82, align 1
  br label %156

156:                                              ; preds = %146, %149, %155
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 4
  %158 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %157 to i96*
  %159 = load i96, i96* %158, align 4
  %160 = and i96 %159, 1082130432
  %161 = icmp ne i96 %160, 0
  %162 = and i96 %159, 113336795588871485128704
  %163 = icmp eq i96 %162, 75557863725914323419136
  %164 = or i1 %161, %163
  br i1 %164, label %165, label %321

165:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #13
  store %"class.blink::LayoutObject"* %111, %"class.blink::LayoutObject"** %84, align 8
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* nonnull %111) #13
  %166 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink15LayoutBlockFlow37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* %0, i1 zeroext %1, %"class.blink::LayoutBox"* dereferenceable(216) %166) #13
  %167 = load i96, i96* %158, align 4
  %168 = and i96 %167, 113336795588871485128704
  %169 = icmp eq i96 %168, 75557863725914323419136
  br i1 %169, label %170, label %173

170:                                              ; preds = %165
  %171 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %111, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %172 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %171, %"class.blink::LayoutBox"* %172) #13
  br label %320

173:                                              ; preds = %165
  %174 = and i96 %167, 8388608
  %175 = icmp eq i96 %174, 0
  br i1 %175, label %292, label %176

176:                                              ; preds = %173
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #13
  %177 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  store %"class.blink::LayoutBox"* %177, %"class.blink::LayoutBox"** %87, align 8
  %178 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 2
  %179 = bitcast %"class.blink::LayoutRect"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 2, i32 1
  %182 = bitcast %"class.blink::LayoutSize"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %180, i64* %89, align 8
  store i64 %183, i64* %91, align 8
  %184 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 0, i32 0, i32 4
  %185 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %184 to i96*
  %186 = load i96, i96* %185, align 4
  %187 = lshr i96 %186, 38
  %188 = trunc i96 %187 to i8
  %189 = and i8 %188, 1
  store i8 %189, i8* %92, align 8
  %190 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 1
  %191 = bitcast %"class.blink::LayoutRectOutsets"* %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 1, i32 2
  %194 = bitcast %"class.blink::LayoutUnit"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = trunc i64 %192 to i32
  %197 = lshr i64 %192, 32
  %198 = trunc i64 %197 to i32
  %199 = lshr i64 %195, 32
  %200 = trunc i64 %199 to i32
  %201 = call i1 @llvm.is.constant.i32(i32 %200) #13
  %202 = trunc i64 %180 to i32
  %203 = lshr i64 %180, 32
  %204 = trunc i64 %203 to i32
  %205 = trunc i64 %183 to i32
  %206 = lshr i64 %183, 32
  %207 = trunc i64 %206 to i32
  %208 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %177, i64 0, i32 0, i32 0
  br i1 %201, label %209, label %213

209:                                              ; preds = %176
  %210 = sub i32 0, %200
  %211 = icmp eq i32 %210, -2147483648
  %212 = select i1 %211, i32 2147483647, i32 %210
  br label %218

213:                                              ; preds = %176
  %214 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %200) #13
  %215 = extractvalue { i32, i1 } %214, 1
  %216 = extractvalue { i32, i1 } %214, 0
  %217 = select i1 %215, i32 2147483647, i32 %216
  br label %218

218:                                              ; preds = %213, %209
  %219 = phi i32 [ %212, %209 ], [ %217, %213 ]
  %220 = call i1 @llvm.is.constant.i32(i32 %196) #13
  br i1 %220, label %221, label %225

221:                                              ; preds = %218
  %222 = sub i32 0, %196
  %223 = icmp eq i32 %222, -2147483648
  %224 = select i1 %223, i32 2147483647, i32 %222
  br label %230

225:                                              ; preds = %218
  %226 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %196) #13
  %227 = extractvalue { i32, i1 } %226, 1
  %228 = extractvalue { i32, i1 } %226, 0
  %229 = select i1 %227, i32 2147483647, i32 %228
  br label %230

230:                                              ; preds = %221, %225
  %231 = phi i32 [ %224, %221 ], [ %229, %225 ]
  %232 = icmp slt i32 %219, 0
  %233 = select i1 %232, i32 -2147483648, i32 2147483647
  %234 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %202, i32 %219) #13
  %235 = extractvalue { i32, i1 } %234, 1
  %236 = extractvalue { i32, i1 } %234, 0
  %237 = select i1 %235, i32 %233, i32 %236, !prof !9
  store i32 %237, i32* %93, align 8
  %238 = icmp slt i32 %231, 0
  %239 = select i1 %238, i32 -2147483648, i32 2147483647
  %240 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %204, i32 %231) #13
  %241 = extractvalue { i32, i1 } %240, 1
  %242 = extractvalue { i32, i1 } %240, 0
  %243 = select i1 %241, i32 %239, i32 %242, !prof !9
  store i32 %243, i32* %94, align 4
  %244 = icmp slt i32 %198, 0
  %245 = select i1 %244, i32 -2147483648, i32 2147483647
  %246 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %198) #13
  %247 = extractvalue { i32, i1 } %246, 1
  %248 = extractvalue { i32, i1 } %246, 0
  %249 = select i1 %247, i32 %245, i32 %248, !prof !9
  %250 = trunc i64 %195 to i32
  %251 = icmp slt i32 %250, 0
  %252 = select i1 %251, i32 -2147483648, i32 2147483647
  %253 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %196, i32 %250) #13
  %254 = extractvalue { i32, i1 } %253, 1
  %255 = extractvalue { i32, i1 } %253, 0
  %256 = select i1 %254, i32 %252, i32 %255, !prof !9
  %257 = icmp slt i32 %249, 0
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %205, i32 %249) #13
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !9
  store i32 %262, i32* %95, align 8
  %263 = icmp slt i32 %256, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %207, i32 %256) #13
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !9
  store i32 %268, i32* %96, align 4
  %269 = load i32, i32* %97, align 4
  %270 = load i32, i32* %98, align 8
  %271 = icmp eq i32 %269, %270
  br i1 %271, label %279, label %272, !prof !9

272:                                              ; preds = %230
  %273 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %99, align 8
  %274 = zext i32 %269 to i64
  %275 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %273, i64 %274
  %276 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* nonnull align 8 %86, i64 32, i1 false) #13
  %277 = load i32, i32* %97, align 4
  %278 = add i32 %277, 1
  store i32 %278, i32* %97, align 4
  br label %281

279:                                              ; preds = %230
  call void @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2288"* nonnull %85, %"struct.blink::LayoutBlockFlow::FloatWithRect"* nonnull dereferenceable(32) %8) #13
  %280 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  br label %281

281:                                              ; preds = %272, %279
  %282 = phi %"class.blink::LayoutObject"* [ %208, %272 ], [ %280, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #13
  %283 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %282, i64 0, i32 4
  %284 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %283 to i96*
  %285 = load i96, i96* %284, align 4
  %286 = and i96 %285, 63
  %287 = icmp eq i96 %286, 0
  br i1 %287, label %320, label %288

288:                                              ; preds = %281
  %289 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)*** %100, align 8
  %290 = getelementptr inbounds void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)** %289, i64 65
  %291 = load void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)** %290, align 8
  call void %291(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutObject"* %282, i32 0) #13
  br label %320

292:                                              ; preds = %173
  br i1 %21, label %296, label %293

293:                                              ; preds = %292
  %294 = and i96 %167, 63
  %295 = icmp eq i96 %294, 0
  br i1 %295, label %320, label %310

296:                                              ; preds = %292
  %297 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink9LayoutBox14DirtyLineBoxesEb(%"class.blink::LayoutBox"* %297, i1 zeroext true) #13
  %298 = load i32, i32* %74, align 4
  %299 = load i32, i32* %73, align 8
  %300 = icmp eq i32 %298, %299
  br i1 %300, label %309, label %301, !prof !9

301:                                              ; preds = %296
  %302 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %72, align 8
  %303 = zext i32 %298 to i64
  %304 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %302, i64 %303
  %305 = load i64, i64* %101, align 8
  %306 = bitcast %"class.blink::LayoutBox"** %304 to i64*
  store i64 %305, i64* %306, align 8
  %307 = load i32, i32* %74, align 4
  %308 = add i32 %307, 1
  store i32 %308, i32* %74, align 4
  br label %320

309:                                              ; preds = %296
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1695"* nonnull %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7) #13
  br label %320

310:                                              ; preds = %293
  %311 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  call void @_ZN5blink9LayoutBox14DirtyLineBoxesEb(%"class.blink::LayoutBox"* %311, i1 zeroext false) #13
  %312 = load i96, i96* %158, align 4
  %313 = and i96 %312, 63
  %314 = icmp eq i96 %313, 0
  br i1 %314, label %320, label %315

315:                                              ; preds = %310
  %316 = bitcast %"class.blink::LayoutObject"* %111 to void (%"class.blink::LayoutObject"*)***
  %317 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %317, i64 54
  %319 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %318, align 8
  call void %319(%"class.blink::LayoutObject"* nonnull %111) #13
  br label %320

320:                                              ; preds = %281, %293, %315, %310, %309, %301, %288, %170
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #13
  br label %359

321:                                              ; preds = %156
  %322 = and i96 %159, 33554432
  %323 = icmp eq i96 %322, 0
  br i1 %323, label %324, label %335

324:                                              ; preds = %321
  %325 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %112, align 8
  %326 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %325, i64 26
  %327 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %326, align 8
  %328 = call zeroext i1 %327(%"class.blink::LayoutObject"* nonnull %111) #13
  %329 = xor i1 %328, true
  %330 = load i8, i8* %77, align 8
  %331 = icmp ne i8 %330, 0
  %332 = or i1 %331, %329
  br i1 %332, label %359, label %333

333:                                              ; preds = %324
  %334 = load i96, i96* %158, align 4
  br label %335

335:                                              ; preds = %333, %321
  %336 = phi i96 [ %334, %333 ], [ %159, %321 ]
  %337 = and i96 %336, 33554432
  %338 = icmp eq i96 %337, 0
  br i1 %338, label %339, label %343

339:                                              ; preds = %335
  %340 = bitcast %"class.blink::LayoutObject"* %111 to %"class.blink::LayoutInline"*
  %341 = load i8, i8* %29, align 2, !range !2
  %342 = icmp ne i8 %341, 0
  call void @_ZN5blink12LayoutInline27UpdateAlwaysCreateLineBoxesEb(%"class.blink::LayoutInline"* %340, i1 zeroext %342) #13
  br label %343

343:                                              ; preds = %335, %339
  %344 = load i8, i8* %29, align 2, !range !2
  %345 = icmp ne i8 %344, 0
  %346 = load i96, i96* %158, align 4
  %347 = xor i1 %345, true
  %348 = and i96 %346, 3
  %349 = icmp eq i96 %348, 0
  %350 = and i1 %349, %347
  br i1 %350, label %358, label %351

351:                                              ; preds = %343
  %352 = and i96 %346, 33554432
  %353 = icmp eq i96 %352, 0
  br i1 %353, label %356, label %354

354:                                              ; preds = %351
  %355 = bitcast %"class.blink::LayoutObject"* %111 to %"class.blink::LayoutText"*
  call void @_ZN5blink10LayoutText30DirtyOrDeleteLineBoxesIfNeededEb(%"class.blink::LayoutText"* %355, i1 zeroext %345) #13
  br label %358

356:                                              ; preds = %351
  %357 = bitcast %"class.blink::LayoutObject"* %111 to %"class.blink::LayoutInline"*
  call void @_ZN5blink12LayoutInline14DirtyLineBoxesEb(%"class.blink::LayoutInline"* %357, i1 zeroext %345) #13
  br label %358

358:                                              ; preds = %343, %356, %354
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* nonnull %111)
  br label %359

359:                                              ; preds = %324, %358, %320
  %360 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %112, align 8
  %361 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %360, i64 26
  %362 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %361, align 8
  %363 = call zeroext i1 %362(%"class.blink::LayoutObject"* nonnull %111) #13
  br i1 %363, label %364, label %418

364:                                              ; preds = %359
  %365 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 5, i32 0
  %366 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %365, align 8
  %367 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %366, i64 0, i32 0, i32 3, i32 0, i32 0
  %368 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %368, i64 0, i32 2, i32 0, i32 0
  %370 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %369, align 8
  %371 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %370, i64 0, i32 13
  %372 = bitcast [3 x i8]* %371 to i24*
  %373 = load i24, i24* %372, align 8
  %374 = and i24 %373, 1920
  %375 = icmp eq i24 %374, 0
  br i1 %375, label %418, label %376

376:                                              ; preds = %364
  %377 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %370, i64 0, i32 8, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = sitofp i32 %378 to float
  %380 = fmul float %379, 1.562500e-02
  %381 = fcmp ogt float %380, 0.000000e+00
  %382 = and i24 %373, 1792
  %383 = icmp ne i24 %382, 0
  %384 = and i1 %383, %381
  br i1 %384, label %385, label %418

385:                                              ; preds = %376
  %386 = load i96, i96* %158, align 4
  %387 = and i96 %386, 16777216
  %388 = icmp eq i96 %387, 0
  br i1 %388, label %389, label %411

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 6, i32 0, i32 0
  %391 = load %"class.blink::Node"*, %"class.blink::Node"** %390, align 8
  %392 = icmp eq %"class.blink::Node"* %391, null
  br i1 %392, label %411, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %391, i64 0, i32 1
  %395 = load i32, i32* %394, align 8
  %396 = and i32 %395, 1
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %391, i64 0, i32 6, i32 0, i32 0
  br i1 %397, label %403, label %399

399:                                              ; preds = %393
  %400 = bitcast %"class.blink::NodeData"** %398 to %"class.blink::NodeRareData"**
  %401 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %400, align 8
  %402 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %401, i64 0, i32 1, i32 0, i32 0
  br label %405

403:                                              ; preds = %393
  %404 = bitcast %"class.blink::NodeData"** %398 to %"class.blink::NodeRenderingData"**
  br label %405

405:                                              ; preds = %403, %399
  %406 = phi %"class.blink::NodeRenderingData"** [ %402, %399 ], [ %404, %403 ]
  %407 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %406, align 8
  %408 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %407, i64 0, i32 1
  %409 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %408, align 8
  %410 = icmp eq %"class.blink::LayoutObject"* %409, %111
  br i1 %410, label %411, label %418

411:                                              ; preds = %385, %389, %405
  %412 = bitcast %"class.blink::LayoutObject"* %111 to %"class.blink::LayoutBoxModelObject"*
  %413 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %412) #13
  %414 = icmp eq %"class.blink::LayoutBoxModelObject"* %413, null
  br i1 %414, label %418, label %415

415:                                              ; preds = %411
  %416 = load i96, i96* %103, align 4
  %417 = or i96 %416, 35184372088832
  store i96 %417, i96* %103, align 4
  br label %418

418:                                              ; preds = %411, %364, %376, %359, %405, %415
  %419 = call %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"* nonnull %6)
  %420 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %76, align 8
  %421 = icmp eq %"class.blink::LayoutObject"* %420, null
  br i1 %421, label %104, label %110

422:                                              ; preds = %446, %104
  call void @_ZN5blink15LayoutBlockFlow19LayoutRunsAndFloatsERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LineLayoutState"* nonnull dereferenceable(64) %4)
  %423 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %72, align 8
  %424 = icmp eq %"class.blink::LayoutBox"** %423, null
  %425 = bitcast %"class.blink::LayoutBox"** %423 to i8*
  br i1 %424, label %431, label %426, !prof !10

426:                                              ; preds = %422
  %427 = load i32, i32* %74, align 4
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %430, label %429, !prof !9

429:                                              ; preds = %426
  store i32 0, i32* %74, align 4
  br label %430

430:                                              ; preds = %429, %426
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %425) #13
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %72, align 8
  br label %431

431:                                              ; preds = %422, %430
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #13
  br label %449

432:                                              ; preds = %104, %446
  %433 = phi %"class.blink::LayoutBox"** [ %447, %446 ], [ %105, %104 ]
  %434 = bitcast %"class.blink::LayoutBox"** %433 to %"class.blink::LayoutObject"**
  %435 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %434, align 8
  %436 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %435, i64 0, i32 4
  %437 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %436 to i96*
  %438 = load i96, i96* %437, align 4
  %439 = and i96 %438, 63
  %440 = icmp eq i96 %439, 0
  br i1 %440, label %446, label %441

441:                                              ; preds = %432
  %442 = bitcast %"class.blink::LayoutObject"* %435 to void (%"class.blink::LayoutObject"*)***
  %443 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %442, align 8
  %444 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %443, i64 54
  %445 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %444, align 8
  call void %445(%"class.blink::LayoutObject"* %435) #13
  br label %446

446:                                              ; preds = %432, %441
  %447 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %433, i64 1
  %448 = icmp eq %"class.blink::LayoutBox"** %447, %108
  br i1 %448, label %422, label %432

449:                                              ; preds = %65, %431
  %450 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 1
  %451 = bitcast %"class.blink::InlineFlowBox"** %450 to %"class.blink::RootInlineBox"**
  %452 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %451, align 8
  %453 = icmp eq %"class.blink::RootInlineBox"* %452, null
  br i1 %453, label %519, label %454

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %452, i64 0, i32 6, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %458 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %457, align 8
  %459 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %458, i64 0, i32 0, i32 9
  %460 = bitcast [20 x i8]* %459 to i160*
  %461 = load i160, i160* %460, align 8
  %462 = and i160 %461, 15211807202738752817960438464512
  %463 = icmp eq i160 %462, 0
  %464 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %465 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %466 = select i1 %463, i32* %464, i32* %465
  %467 = load i32, i32* %466, align 4
  %468 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %469 = lshr i160 %461, 102
  %470 = trunc i160 %469 to i8
  %471 = and i8 %470, 3
  %472 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %471, label %473 [
    i8 0, label %482
    i8 1, label %474
  ]

473:                                              ; preds = %454
  br label %474

474:                                              ; preds = %473, %454
  %475 = phi { i64, i64 } [ { i64 969, i64 0 }, %473 ], [ { i64 961, i64 0 }, %454 ]
  %476 = extractvalue { i64, i64 } %475, 0
  %477 = extractvalue { i64, i64 } %475, 1
  %478 = getelementptr inbounds i8, i8* %472, i64 %477
  %479 = bitcast i8* %478 to %"class.blink::LayoutBoxModelObject"*
  %480 = and i64 %476, 1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %492, label %482

482:                                              ; preds = %474, %454
  %483 = phi %"class.blink::LayoutBoxModelObject"* [ %479, %474 ], [ %468, %454 ]
  %484 = phi i8* [ %478, %474 ], [ %472, %454 ]
  %485 = phi i64 [ %476, %474 ], [ 953, %454 ]
  %486 = bitcast i8* %484 to i8**
  %487 = load i8*, i8** %486, align 8
  %488 = add i64 %485, -1
  %489 = getelementptr i8, i8* %487, i64 %488
  %490 = bitcast i8* %489 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %491 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %490, align 8
  br label %494

492:                                              ; preds = %474
  %493 = inttoptr i64 %476 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %494

494:                                              ; preds = %482, %492
  %495 = phi %"class.blink::LayoutBoxModelObject"* [ %483, %482 ], [ %479, %492 ]
  %496 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %491, %482 ], [ %493, %492 ]
  %497 = call i32 %496(%"class.blink::LayoutBoxModelObject"* %495) #13
  %498 = icmp slt i32 %497, 0
  %499 = select i1 %498, i32 -2147483648, i32 2147483647
  %500 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %467, i32 %497) #13
  %501 = extractvalue { i32, i1 } %500, 1
  %502 = extractvalue { i32, i1 } %500, 0
  %503 = select i1 %501, i32 %499, i32 %502, !prof !9
  %504 = icmp slt i32 %456, %503
  %505 = select i1 %504, i32 %503, i32 %456
  %506 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %457, align 8
  %507 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %506, i64 0, i32 0, i32 9
  %508 = bitcast [20 x i8]* %507 to i160*
  %509 = load i160, i160* %508, align 8
  %510 = and i160 %509, 15211807202738752817960438464512
  %511 = icmp eq i160 %510, 10141204801825835211973625643008
  %512 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %450, align 8
  br i1 %511, label %516, label %513

513:                                              ; preds = %494
  %514 = call i32 @_ZNK5blink13InlineFlowBox32ComputeUnderAnnotationAdjustmentENS_10LayoutUnitE(%"class.blink::InlineFlowBox"* %512, i32 %505) #13
  %515 = sdiv i32 %514, 64
  br label %519

516:                                              ; preds = %494
  %517 = call i32 @_ZNK5blink13InlineFlowBox31ComputeOverAnnotationAdjustmentENS_10LayoutUnitE(%"class.blink::InlineFlowBox"* %512, i32 %505) #13
  %518 = sdiv i32 %517, 64
  br label %519

519:                                              ; preds = %513, %516, %449
  %520 = phi i32 [ 0, %449 ], [ %518, %516 ], [ %515, %513 ]
  %521 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %523 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %522, align 8
  %524 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %523, i64 0, i32 0, i32 9
  %525 = bitcast [20 x i8]* %524 to i160*
  %526 = load i160, i160* %525, align 8
  %527 = and i160 %526, 15211807202738752817960438464512
  %528 = icmp eq i160 %527, 0
  %529 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %530 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %531 = select i1 %528, i32* %529, i32* %530
  %532 = load i32, i32* %531, align 4
  %533 = shl nsw i32 %520, 6
  %534 = icmp slt i32 %520, 0
  %535 = select i1 %534, i32 -2147483648, i32 2147483647
  %536 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %532, i32 %533) #13
  %537 = extractvalue { i32, i1 } %536, 1
  %538 = extractvalue { i32, i1 } %536, 0
  %539 = select i1 %537, i32 %535, i32 %538, !prof !9
  %540 = icmp slt i32 %2, 0
  %541 = select i1 %540, i32 -2147483648, i32 2147483647
  %542 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %539, i32 %2) #13
  %543 = extractvalue { i32, i1 } %542, 1
  %544 = extractvalue { i32, i1 } %542, 0
  %545 = select i1 %543, i32 %541, i32 %544, !prof !9
  br i1 %528, label %546, label %550

546:                                              ; preds = %519
  %547 = load i32, i32* %529, align 4
  %548 = icmp eq i32 %547, %545
  br i1 %548, label %554, label %549

549:                                              ; preds = %546
  store i32 %545, i32* %529, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %521) #13
  br label %554

550:                                              ; preds = %519
  %551 = load i32, i32* %530, align 4
  %552 = icmp eq i32 %551, %545
  br i1 %552, label %554, label %553

553:                                              ; preds = %550
  store i32 %545, i32* %530, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %521) #13
  br label %554

554:                                              ; preds = %546, %549, %550, %553
  %555 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %556 = icmp eq %"class.blink::InlineFlowBox"* %555, null
  br i1 %556, label %557, label %603

557:                                              ; preds = %554
  %558 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %559 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %558, align 8
  %560 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %559, i64 202
  %561 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %560, align 8
  %562 = call zeroext i1 %561(%"class.blink::LayoutBlock"* %66) #13
  br i1 %562, label %563, label %603

563:                                              ; preds = %557
  %564 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %522, align 8
  %565 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %564, i64 0, i32 0, i32 9
  %566 = bitcast [20 x i8]* %565 to i160*
  %567 = load i160, i160* %566, align 8
  %568 = and i160 %567, 15211807202738752817960438464512
  %569 = icmp eq i160 %568, 0
  %570 = select i1 %569, i32* %529, i32* %530
  %571 = load i32, i32* %570, align 4
  %572 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %573 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %572 to i96*
  %574 = load i96, i96* %573, align 4
  %575 = trunc i96 %574 to i32
  %576 = lshr i32 %575, 31
  %577 = xor i32 %576, 1
  %578 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)***
  %579 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*** %578, align 8
  %580 = getelementptr inbounds i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %579, i64 133
  %581 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %580, align 8
  %582 = call i32 %581(%"class.blink::LayoutBlock"* %66, i1 zeroext true, i32 %577, i32 1) #13
  %583 = icmp slt i32 %582, 0
  %584 = select i1 %583, i32 -2147483648, i32 2147483647
  %585 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %571, i32 %582) #13
  %586 = extractvalue { i32, i1 } %585, 1
  %587 = extractvalue { i32, i1 } %585, 0
  %588 = select i1 %586, i32 %584, i32 %587, !prof !9
  %589 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %522, align 8
  %590 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %589, i64 0, i32 0, i32 9
  %591 = bitcast [20 x i8]* %590 to i160*
  %592 = load i160, i160* %591, align 8
  %593 = and i160 %592, 15211807202738752817960438464512
  %594 = icmp eq i160 %593, 0
  br i1 %594, label %595, label %599

595:                                              ; preds = %563
  %596 = load i32, i32* %529, align 4
  %597 = icmp eq i32 %596, %588
  br i1 %597, label %603, label %598

598:                                              ; preds = %595
  store i32 %588, i32* %529, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %521) #13
  br label %603

599:                                              ; preds = %563
  %600 = load i32, i32* %530, align 4
  %601 = icmp eq i32 %600, %588
  br i1 %601, label %603, label %602

602:                                              ; preds = %599
  store i32 %588, i32* %530, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %521) #13
  br label %603

603:                                              ; preds = %602, %599, %598, %595, %554, %557
  %604 = call zeroext i1 @_ZNK5blink15LayoutBlockFlow29ShouldTruncateOverflowingTextEv(%"class.blink::LayoutBlockFlow"* %0)
  br i1 %604, label %605, label %606

605:                                              ; preds = %603
  call void @_ZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEv(%"class.blink::LayoutBlockFlow"* %0)
  br label %606

606:                                              ; preds = %605, %603
  br i1 %21, label %607, label %611

607:                                              ; preds = %606
  %608 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %10, align 8
  %609 = icmp eq %"class.blink::InlineFlowBox"* %608, null
  br i1 %609, label %611, label %610

610:                                              ; preds = %607
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %9, i8 zeroext 3) #13
  br label %611

611:                                              ; preds = %607, %610, %606
  %612 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %613 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %612, align 8
  %614 = icmp eq %"struct.blink::LayoutBlockFlow::FloatWithRect"* %613, null
  %615 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %613 to i8*
  br i1 %614, label %622, label %616, !prof !10

616:                                              ; preds = %611
  %617 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %618 = load i32, i32* %617, align 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %621, label %620, !prof !9

620:                                              ; preds = %616
  store i32 0, i32* %617, align 4
  br label %621

621:                                              ; preds = %620, %616
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %615) #13
  store %"struct.blink::LayoutBlockFlow::FloatWithRect"* null, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %612, align 8
  br label %622

622:                                              ; preds = %611, %621
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #13
  ret void
}

declare void @_ZN5blink13InlineBoxListINS_13InlineFlowBoxEE15DeleteLineBoxesEv(%"class.blink::InlineBoxList"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 1, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 2, i32 6
  %7 = bitcast %"class.blink::UntracedMember"* %6 to %"class.blink::LayoutObject"**
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %9, label %104, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*)***
  %12 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, i64 26
  %14 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutObject"* nonnull %8) #13
  br i1 %15, label %104, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = and i96 %19, 1115684864
  %23 = icmp ne i96 %22, 0
  %24 = or i1 %23, %21
  br i1 %24, label %104, label %25

25:                                               ; preds = %16
  %26 = ptrtoint %"class.blink::LayoutObject"* %8 to i64
  br label %27

27:                                               ; preds = %99, %25
  %28 = phi i96 [ %100, %99 ], [ %19, %25 ]
  %29 = phi %"class.blink::LayoutObject"* [ %82, %99 ], [ %8, %25 ]
  %30 = phi i64 [ %81, %99 ], [ %26, %25 ]
  %31 = and i96 %28, 113336795588871485128704
  %32 = icmp eq i96 %31, 75557863725914323419136
  %33 = and i96 %28, 1115684864
  %34 = icmp ne i96 %33, 0
  %35 = or i1 %34, %32
  br i1 %35, label %48, label %36

36:                                               ; preds = %27
  %37 = inttoptr i64 %30 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %38 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %38, i64 13
  %40 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call %"class.blink::LayoutObjectChildList"* %40(%"class.blink::LayoutObject"* nonnull %29) #13
  %42 = icmp eq %"class.blink::LayoutObjectChildList"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %41, i64 0, i32 0
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = ptrtoint %"class.blink::LayoutObject"* %45 to i64
  %47 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %47, label %48, label %80

48:                                               ; preds = %43, %36, %27
  %49 = phi i64 [ %46, %43 ], [ 0, %27 ], [ 0, %36 ]
  %50 = inttoptr i64 %30 to i1 (%"class.blink::LayoutObject"*)***
  %51 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %51, i64 26
  %53 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* nonnull %29) #13
  br i1 %54, label %101, label %55

55:                                               ; preds = %48
  %56 = icmp ne %"class.blink::LayoutObject"* %29, null
  %57 = icmp ne %"class.blink::LayoutObject"* %29, %1
  %58 = and i1 %56, %57
  br i1 %58, label %59, label %80

59:                                               ; preds = %55, %72
  %60 = phi %"class.blink::LayoutObject"* [ %68, %72 ], [ %29, %55 ]
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 9
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = ptrtoint %"class.blink::LayoutObject"* %62 to i64
  br label %80

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 7
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp ne %"class.blink::LayoutObject"* %68, null
  %70 = icmp ne %"class.blink::LayoutObject"* %68, %1
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %101

72:                                               ; preds = %66
  %73 = bitcast %"class.blink::LayoutObject"* %68 to i1 (%"class.blink::LayoutObject"*)***
  %74 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %74, i64 26
  %76 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* nonnull %68) #13
  br i1 %77, label %78, label %59

78:                                               ; preds = %72
  %79 = ptrtoint %"class.blink::LayoutObject"* %68 to i64
  br label %80

80:                                               ; preds = %78, %64, %55, %43
  %81 = phi i64 [ %46, %43 ], [ %65, %64 ], [ %79, %78 ], [ %49, %55 ]
  %82 = inttoptr i64 %81 to %"class.blink::LayoutObject"*
  %83 = icmp eq i64 %81, 0
  br i1 %83, label %101, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  %87 = load i96, i96* %86, align 4
  %88 = and i96 %87, 113336795588871485128704
  %89 = icmp eq i96 %88, 75557863725914323419136
  %90 = and i96 %87, 1115684864
  %91 = icmp ne i96 %90, 0
  %92 = or i1 %91, %89
  br i1 %92, label %101, label %93

93:                                               ; preds = %84
  %94 = inttoptr i64 %81 to i1 (%"class.blink::LayoutObject"*)***
  %95 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %95, i64 26
  %97 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %82) #13
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load i96, i96* %86, align 4
  br label %27

101:                                              ; preds = %93, %84, %80, %48, %66
  %102 = phi i64 [ 0, %66 ], [ %81, %93 ], [ %30, %48 ], [ %81, %84 ], [ 0, %80 ]
  %103 = inttoptr i64 %102 to %"class.blink::LayoutObject"*
  br label %104

104:                                              ; preds = %2, %10, %16, %101
  %105 = phi %"class.blink::LayoutObject"* [ %103, %101 ], [ %8, %10 ], [ null, %2 ], [ %8, %16 ]
  store %"class.blink::LayoutObject"* %105, %"class.blink::LayoutObject"** %4, align 8
  ret void
}

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #2

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox14DirtyLineBoxesEb(%"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink12LayoutInline27UpdateAlwaysCreateLineBoxesEb(%"class.blink::LayoutInline"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !61

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #13
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #13
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !61

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #13
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %0, i64 0, i32 2
  %7 = ptrtoint %"class.blink::LayoutObject"* %5 to i64
  %8 = icmp ne i8* %6, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = load i8, i8* %6, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i1 [ %11, %9 ], [ false, %1 ]
  %14 = icmp eq %"class.blink::LayoutObject"* %5, null
  br i1 %14, label %93, label %15

15:                                               ; preds = %12, %87
  %16 = phi %"class.blink::LayoutObject"* [ %76, %87 ], [ %5, %12 ]
  %17 = phi i8 [ %75, %87 ], [ 0, %12 ]
  %18 = phi i64 [ %74, %87 ], [ %7, %12 ]
  br i1 %13, label %47, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 113336795588871485128704
  %24 = icmp eq i96 %23, 75557863725914323419136
  %25 = and i96 %22, 1115684864
  %26 = icmp ne i96 %25, 0
  %27 = or i1 %26, %24
  br i1 %27, label %40, label %28

28:                                               ; preds = %19
  %29 = inttoptr i64 %18 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %30 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %30, i64 13
  %32 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call %"class.blink::LayoutObjectChildList"* %32(%"class.blink::LayoutObject"* nonnull %16) #13
  %34 = icmp eq %"class.blink::LayoutObjectChildList"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %33, i64 0, i32 0
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = ptrtoint %"class.blink::LayoutObject"* %37 to i64
  %39 = icmp eq %"class.blink::LayoutObject"* %37, null
  br i1 %39, label %40, label %73

40:                                               ; preds = %35, %28, %19
  %41 = phi i64 [ %38, %35 ], [ 0, %19 ], [ 0, %28 ]
  %42 = inttoptr i64 %18 to i1 (%"class.blink::LayoutObject"*)***
  %43 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, i64 26
  %45 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* nonnull %16) #13
  br i1 %46, label %93, label %47

47:                                               ; preds = %40, %15
  %48 = phi i64 [ %41, %40 ], [ 0, %15 ]
  %49 = icmp ne %"class.blink::LayoutObject"* %16, null
  %50 = icmp ne %"class.blink::LayoutObject"* %16, %3
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %47, %65
  %53 = phi %"class.blink::LayoutObject"* [ %61, %65 ], [ %16, %47 ]
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 9
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = icmp eq %"class.blink::LayoutObject"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = ptrtoint %"class.blink::LayoutObject"* %55 to i64
  br label %73

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %53, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp ne %"class.blink::LayoutObject"* %61, null
  %63 = icmp ne %"class.blink::LayoutObject"* %61, %3
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %93

65:                                               ; preds = %59
  %66 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*)***
  %67 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %66, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %67, i64 26
  %69 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* nonnull %61) #13
  br i1 %70, label %71, label %52

71:                                               ; preds = %65
  %72 = ptrtoint %"class.blink::LayoutObject"* %61 to i64
  br label %73

73:                                               ; preds = %71, %57, %47, %35
  %74 = phi i64 [ %38, %35 ], [ %58, %57 ], [ %72, %71 ], [ %48, %47 ]
  %75 = phi i8 [ %17, %35 ], [ %17, %57 ], [ 1, %71 ], [ %17, %47 ]
  %76 = inttoptr i64 %74 to %"class.blink::LayoutObject"*
  %77 = icmp eq i64 %74, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 4
  %80 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %79 to i96*
  %81 = load i96, i96* %80, align 4
  %82 = and i96 %81, 113336795588871485128704
  %83 = icmp eq i96 %82, 75557863725914323419136
  %84 = and i96 %81, 1115684864
  %85 = icmp ne i96 %84, 0
  %86 = or i1 %85, %83
  br i1 %86, label %93, label %87

87:                                               ; preds = %78
  %88 = inttoptr i64 %74 to i1 (%"class.blink::LayoutObject"*)***
  %89 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %88, align 8
  %90 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %89, i64 26
  %91 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.blink::LayoutObject"* nonnull %76) #13
  br i1 %92, label %93, label %15

93:                                               ; preds = %87, %78, %73, %40, %59, %12
  %94 = phi i64 [ 0, %12 ], [ 0, %59 ], [ 0, %73 ], [ %74, %78 ], [ %18, %40 ], [ %74, %87 ]
  %95 = phi i8 [ 0, %12 ], [ %17, %59 ], [ %75, %73 ], [ %75, %78 ], [ 1, %40 ], [ %75, %87 ]
  br i1 %8, label %96, label %98

96:                                               ; preds = %93
  %97 = and i8 %95, 1
  store i8 %97, i8* %6, align 1
  br label %98

98:                                               ; preds = %93, %96
  %99 = inttoptr i64 %94 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %99, %"class.blink::LayoutObject"** %4, align 8
  ret %"class.blink::LayoutObject"* %99
}

declare i32 @_ZNK5blink13InlineFlowBox32ComputeUnderAnnotationAdjustmentENS_10LayoutUnitE(%"class.blink::InlineFlowBox"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink13InlineFlowBox31ComputeOverAnnotationAdjustmentENS_10LayoutUnitE(%"class.blink::InlineFlowBox"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = alloca %"class.blink::TextRun", align 8
  %10 = alloca %"class.blink::TextRun", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.blink::InlineBox"*, align 8
  %14 = alloca %"class.blink::LayoutUnit", align 4
  %15 = alloca %"class.blink::LayoutUnit", align 4
  %16 = alloca %"class.blink::LayoutUnit", align 4
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %23, i64 0, i32 1
  %25 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str to i8*) acquire, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %31, !prof !62

27:                                               ; preds = %1
  %28 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str) #13
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str to %"class.WTF::AtomicString"*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE15kFullStopString, i64 0, i64 0), i32 3) #13
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str) #13
  br label %31

31:                                               ; preds = %27, %30, %1
  %32 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %33, align 8
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %7, i16* nonnull @_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE, i32 1) #13
  %34 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %37, label %44

37:                                               ; preds = %31, %37
  %38 = phi %"class.blink::LayoutObject"* [ %40, %37 ], [ %17, %31 ]
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %37, label %44

44:                                               ; preds = %37, %31
  %45 = phi %"class.blink::Node"* [ %35, %31 ], [ %42, %37 ]
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 59, i32 0, i32 0
  %51 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %51, i64 0, i32 31, i32 0, i32 0
  %53 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %53, i64 0, i32 0, i32 11
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %44
  %59 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #13
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #13
  br label %61

61:                                               ; preds = %58, %44
  %62 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %53, i64 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %17) #13
  %67 = icmp eq %"class.blink::ComputedStyle"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %65, %61
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  br label %70

70:                                               ; preds = %65, %68
  %71 = phi %"class.blink::ComputedStyle"* [ %69, %68 ], [ %66, %65 ]
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %73, i64 0, i32 1, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %75, i64 0, i32 1
  %77 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %76) #13
  %78 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %77, i64 0, i32 2
  %79 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %78, align 8
  %80 = icmp eq %"class.blink::SimpleFontData"* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %70
  %82 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %76, i64 0, i32 0
  %83 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %77, %"class.blink::FontDescription"* dereferenceable(80) %82) #13
  store %"class.blink::SimpleFontData"* %83, %"class.blink::SimpleFontData"** %78, align 8
  %84 = icmp eq %"class.blink::SimpleFontData"* %83, null
  br i1 %84, label %128, label %85

85:                                               ; preds = %70, %81
  %86 = phi %"class.blink::SimpleFontData"* [ %83, %81 ], [ %79, %70 ]
  %87 = call zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"* nonnull %86, i32 8230) #13
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %128, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #13
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %100

93:                                               ; preds = %89, %93
  %94 = phi %"class.blink::LayoutObject"* [ %96, %93 ], [ %17, %89 ]
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 7
  %96 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 6, i32 0, i32 0
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %93, label %100

100:                                              ; preds = %93, %89
  %101 = phi %"class.blink::Node"* [ %91, %89 ], [ %98, %93 ]
  %102 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %101, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %105, i64 0, i32 59, i32 0, i32 0
  %107 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %107, i64 0, i32 31, i32 0, i32 0
  %109 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %109, i64 0, i32 0, i32 11
  %111 = load i8, i8* %110, align 8
  %112 = and i8 %111, 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %100
  %115 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #13
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #13
  br label %117

117:                                              ; preds = %114, %100
  %118 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %109, i64 0, i32 0, i32 0, i32 0
  %119 = load i8, i8* %118, align 8, !range !2
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %17) #13
  %123 = icmp eq %"class.blink::ComputedStyle"* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %121, %117
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  br label %126

126:                                              ; preds = %121, %124
  %127 = phi %"class.blink::ComputedStyle"* [ %125, %124 ], [ %122, %121 ]
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %8, %"class.blink::Font"* dereferenceable(88) %76, i16* nonnull @_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %127, i8 zeroext 0) #13
  br label %205

128:                                              ; preds = %85, %81
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str to %"class.WTF::StringImpl"**), align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #13
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !9

145:                                              ; preds = %136
  call void @llvm.trap() #13
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %128
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %149, i64* %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %166, label %153

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #13
  br label %166

166:                                              ; preds = %148, %162, %165
  %167 = bitcast %"class.blink::TextRun"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %167) #13
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %170, label %177

170:                                              ; preds = %166, %170
  %171 = phi %"class.blink::LayoutObject"* [ %173, %170 ], [ %17, %166 ]
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %171, i64 0, i32 7
  %173 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %173, i64 0, i32 6, i32 0, i32 0
  %175 = load %"class.blink::Node"*, %"class.blink::Node"** %174, align 8
  %176 = icmp eq %"class.blink::Node"* %175, null
  br i1 %176, label %170, label %177

177:                                              ; preds = %170, %166
  %178 = phi %"class.blink::Node"* [ %168, %166 ], [ %175, %170 ]
  %179 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %178, i64 0, i32 3, i32 0, i32 0
  %180 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %180, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.blink::Document"*, %"class.blink::Document"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %182, i64 0, i32 59, i32 0, i32 0
  %184 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %184, i64 0, i32 31, i32 0, i32 0
  %186 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %186, i64 0, i32 0, i32 11
  %188 = load i8, i8* %187, align 8
  %189 = and i8 %188, 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %177
  %192 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #13
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #13
  br label %194

194:                                              ; preds = %191, %177
  %195 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %186, i64 0, i32 0, i32 0, i32 0
  %196 = load i8, i8* %195, align 8, !range !2
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %201, label %198

198:                                              ; preds = %194
  %199 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %17) #13
  %200 = icmp eq %"class.blink::ComputedStyle"* %199, null
  br i1 %200, label %201, label %203

201:                                              ; preds = %198, %194
  %202 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  br label %203

203:                                              ; preds = %198, %201
  %204 = phi %"class.blink::ComputedStyle"* [ %202, %201 ], [ %199, %198 ]
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %9, %"class.blink::Font"* dereferenceable(88) %76, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE15kFullStopString, i64 0, i64 0), i32 3, %"class.blink::ComputedStyle"* dereferenceable(104) %204, i8 zeroext 0) #13
  br label %205

205:                                              ; preds = %203, %126
  %206 = phi %"class.blink::TextRun"* [ %9, %203 ], [ %8, %126 ]
  %207 = phi i8* [ %167, %203 ], [ %90, %126 ]
  %208 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %76, %"class.blink::TextRun"* nonnull dereferenceable(40) %206, %"class.WTF::HashSet.2276"* null, %"class.blink::FloatRect"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %207) #13
  %209 = call zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"* %24, %"class.blink::Font"* dereferenceable(88) %76) #13
  %210 = select i1 %209, float %208, float 0.000000e+00
  %211 = fcmp une float %210, 0.000000e+00
  br i1 %211, label %273, label %212

212:                                              ; preds = %205
  %213 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %24) #13
  %214 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %213, i64 0, i32 2
  %215 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %214, align 8
  %216 = icmp eq %"class.blink::SimpleFontData"* %215, null
  br i1 %216, label %217, label %221

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %24, i64 0, i32 0
  %219 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %213, %"class.blink::FontDescription"* dereferenceable(80) %218) #13
  store %"class.blink::SimpleFontData"* %219, %"class.blink::SimpleFontData"** %214, align 8
  %220 = icmp eq %"class.blink::SimpleFontData"* %219, null
  br i1 %220, label %228, label %221

221:                                              ; preds = %212, %217
  %222 = phi %"class.blink::SimpleFontData"* [ %219, %217 ], [ %215, %212 ]
  %223 = call zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"* nonnull %222, i32 8230) #13
  %224 = icmp eq i16 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %221
  %226 = bitcast %"class.blink::TextRun"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %226) #13
  %227 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %10, %"class.blink::Font"* dereferenceable(88) %24, i16* nonnull @_ZN3WTF7unicodeL28kHorizontalEllipsisCharacterE, i32 1, %"class.blink::ComputedStyle"* dereferenceable(104) %227, i8 zeroext 0) #13
  br label %269

228:                                              ; preds = %221, %217
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE24s_fullstop_character_str to %"class.WTF::StringImpl"**), align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %248, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %248

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i33
  %240 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %239, i33 1) #13
  %241 = extractvalue { i33, i1 } %240, 1
  %242 = extractvalue { i33, i1 } %240, 0
  %243 = icmp slt i33 %242, 0
  %244 = or i1 %241, %243
  br i1 %244, label %245, label %246, !prof !9

245:                                              ; preds = %236
  call void @llvm.trap() #13
  unreachable

246:                                              ; preds = %236
  %247 = trunc i33 %242 to i32
  store i32 %247, i32* %237, align 4
  br label %248

248:                                              ; preds = %246, %231, %228
  %249 = ptrtoint %"class.WTF::StringImpl"* %229 to i64
  %250 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %249, i64* %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #13
  br label %266

266:                                              ; preds = %248, %262, %265
  %267 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %267) #13
  %268 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::Font"* dereferenceable(88) %24, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @_ZZN5blink15LayoutBlockFlow25CheckLinesForTextOverflowEvE15kFullStopString, i64 0, i64 0), i32 3, %"class.blink::ComputedStyle"* dereferenceable(104) %268, i8 zeroext 0) #13
  br label %269

269:                                              ; preds = %266, %225
  %270 = phi %"class.blink::TextRun"* [ %10, %225 ], [ %11, %266 ]
  %271 = phi i8* [ %226, %225 ], [ %267, %266 ]
  %272 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %24, %"class.blink::TextRun"* nonnull dereferenceable(40) %270, %"class.WTF::HashSet.2276"* null, %"class.blink::FloatRect"* null) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %271) #13
  br label %273

273:                                              ; preds = %269, %205
  %274 = phi float [ %210, %205 ], [ %272, %269 ]
  %275 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %276 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %275, i64 0, i32 0, i32 9
  %277 = bitcast [20 x i8]* %276 to i160*
  %278 = load i160, i160* %277, align 8
  %279 = and i160 %278, 41538374868278621028243970633760768
  %280 = icmp eq i160 %279, 0
  %281 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281) #13
  %282 = lshr i160 %278, 58
  %283 = trunc i160 %282 to i32
  %284 = and i32 %283, 15
  store i32 %284, i32* %12, align 4
  %285 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %286 = bitcast %"class.blink::InlineFlowBox"** %285 to %"class.blink::RootInlineBox"**
  %287 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %286, align 8
  %288 = icmp eq %"class.blink::RootInlineBox"* %287, null
  br i1 %288, label %303, label %289

289:                                              ; preds = %273
  %290 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %291 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %292 = bitcast %"class.blink::InlineBox"** %13 to i8*
  %293 = bitcast %"class.blink::LayoutUnit"* %14 to i8*
  %294 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %14, i64 0, i32 0
  %295 = bitcast %"class.blink::LayoutUnit"* %15 to i8*
  %296 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %297 = bitcast %"class.blink::LayoutUnit"* %16 to i8*
  %298 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %16, i64 0, i32 0
  %299 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %300 = bitcast i64* %3 to i8*
  %301 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %302 = bitcast i64* %2 to i8*
  br label %320

303:                                              ; preds = %433, %273
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281) #13
  %304 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %304, null
  br i1 %305, label %319, label %306

306:                                              ; preds = %303
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %312 = load i32, i32* %311, align 4
  br i1 %310, label %313, label %315

313:                                              ; preds = %306
  %314 = add i32 %312, -1
  store i32 %314, i32* %311, align 4
  br label %315

315:                                              ; preds = %313, %306
  %316 = phi i32 [ %314, %313 ], [ %312, %306 ]
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #13
  br label %319

319:                                              ; preds = %303, %315, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  ret void

320:                                              ; preds = %289, %433
  %321 = phi %"class.blink::RootInlineBox"* [ %287, %289 ], [ %436, %433 ]
  %322 = phi i32 [ 1, %289 ], [ 0, %433 ]
  %323 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 5, i32 0
  %324 = load i32, i32* %323, align 8
  %325 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %290) #13
  %326 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %291) #13
  %327 = icmp slt i32 %326, 0
  %328 = select i1 %327, i32 -2147483648, i32 2147483647
  %329 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %325, i32 %326) #13
  %330 = extractvalue { i32, i1 } %329, 1
  %331 = extractvalue { i32, i1 } %329, 0
  %332 = select i1 %330, i32 %328, i32 %331, !prof !9
  %333 = call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %324, i32 %332, i32 0) #13
  %334 = call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %333, i32 %322) #13
  %335 = load i32, i32* %323, align 8
  %336 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %290) #13
  %337 = call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %335, i32 %336, i32 0) #13
  %338 = call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %337, i32 %322) #13
  %339 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 0
  %340 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 0, i32 7, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = and i32 %341, 2048
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %345 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %346 = select i1 %343, i32* %345, i32* %344
  %347 = load i32, i32* %346, align 4
  br i1 %280, label %348, label %358

348:                                              ; preds = %320
  %349 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 0, i32 6, i32 0
  %350 = load i32, i32* %349, align 8
  %351 = icmp slt i32 %350, 0
  %352 = select i1 %351, i32 -2147483648, i32 2147483647
  %353 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %347, i32 %350) #13
  %354 = extractvalue { i32, i1 } %353, 1
  %355 = extractvalue { i32, i1 } %353, 0
  %356 = select i1 %354, i32 %352, i32 %355, !prof !9
  %357 = icmp sgt i32 %356, %334
  br i1 %357, label %360, label %433

358:                                              ; preds = %320
  %359 = icmp slt i32 %347, %338
  br i1 %359, label %360, label %433

360:                                              ; preds = %358, %348
  %361 = phi i32 [ %347, %358 ], [ %356, %348 ]
  %362 = icmp eq i32 %322, 1
  %363 = select i1 %362, float %208, float %274
  %364 = fmul float %363, 6.400000e+01
  %365 = fcmp ult float %364, 0xC1E0000000000000
  %366 = fcmp ugt float %364, 0x41DFFFFFE0000000
  %367 = fcmp ogt float %364, 0xC1E0000000000000
  %368 = select i1 %367, float %364, float 0xC1E0000000000000
  %369 = fptosi float %368 to i32
  %370 = select i1 %365, i32 0, i32 2147483647
  %371 = select i1 %366, i32 %370, i32 %369
  %372 = select i1 %280, i32 %334, i32 %338
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #13
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %13, align 8
  %373 = call zeroext i1 @_ZN5blink13RootInlineBox26LineCanAccommodateEllipsisEbNS_10LayoutUnitES1_S1_(%"class.blink::RootInlineBox"* nonnull %321, i1 zeroext %280, i32 %372, i32 %361, i32 %371) #13
  br i1 %373, label %374, label %422

374:                                              ; preds = %360
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293) #13
  %375 = call i32 @_ZN5blink13RootInlineBox13PlaceEllipsisERKN3WTF12AtomicStringEbNS_10LayoutUnitES5_S5_S5_PPNS_9InlineBoxENS_19ForceEllipsisOnLineE(%"class.blink::RootInlineBox"* nonnull %321, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, i1 zeroext %280, i32 %338, i32 %334, i32 %371, i32 0, %"class.blink::InlineBox"** nonnull %13, i32 0) #13
  store i32 %375, i32* %294, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %295) #13
  store i32 0, i32* %296, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #13
  %376 = icmp sgt i32 %338, -1
  %377 = select i1 %376, i32 -2147483648, i32 2147483647
  %378 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %334, i32 %338) #13
  %379 = extractvalue { i32, i1 } %378, 1
  %380 = extractvalue { i32, i1 } %378, 0
  %381 = select i1 %379, i32 %377, i32 %380, !prof !9
  store i32 %381, i32* %298, align 4
  call void @_ZN5blink15LayoutBlockFlow30UpdateLogicalWidthForAlignmentERKNS_10ETextAlignEPKNS_13RootInlineBoxEPNS_7BidiRunERNS_10LayoutUnitESA_SA_j(%"class.blink::LayoutBlockFlow"* %0, i32* nonnull dereferenceable(4) %12, %"class.blink::RootInlineBox"* nonnull %321, %"struct.blink::BidiRun"* null, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %15, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %14, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %16, i32 0)
  br i1 %280, label %382, label %394

382:                                              ; preds = %374
  %383 = load i32, i32* %296, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #13
  %384 = load i32, i32* %340, align 4
  %385 = and i32 %384, 2048
  %386 = icmp eq i32 %385, 0
  %387 = zext i32 %383 to i64
  %388 = shl nuw i64 %387, 32
  %389 = select i1 %386, i64 %388, i64 %387
  store i64 %389, i64* %2, align 8
  %390 = bitcast %"class.blink::RootInlineBox"* %321 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %391 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %391, i64 10
  %393 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %392, align 8
  call void %393(%"class.blink::InlineBox"* %339, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %301) #13
  br label %420

394:                                              ; preds = %374
  %395 = load i32, i32* %298, align 4
  %396 = load i32, i32* %294, align 4
  %397 = icmp sgt i32 %396, -1
  %398 = select i1 %397, i32 -2147483648, i32 2147483647
  %399 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %395, i32 %396) #13
  %400 = extractvalue { i32, i1 } %399, 1
  %401 = extractvalue { i32, i1 } %399, 0
  %402 = select i1 %400, i32 %398, i32 %401, !prof !9
  %403 = load i32, i32* %296, align 4
  %404 = icmp sgt i32 %402, -1
  %405 = select i1 %404, i32 -2147483648, i32 2147483647
  %406 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %403, i32 %402) #13
  %407 = extractvalue { i32, i1 } %406, 1
  %408 = extractvalue { i32, i1 } %406, 0
  %409 = select i1 %407, i32 %405, i32 %408, !prof !9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #13
  %410 = load i32, i32* %340, align 4
  %411 = and i32 %410, 2048
  %412 = icmp eq i32 %411, 0
  %413 = zext i32 %409 to i64
  %414 = shl nuw i64 %413, 32
  %415 = select i1 %412, i64 %414, i64 %413
  store i64 %415, i64* %3, align 8
  %416 = bitcast %"class.blink::RootInlineBox"* %321 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %417 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %416, align 8
  %418 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %417, i64 10
  %419 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %418, align 8
  call void %419(%"class.blink::InlineBox"* %339, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %299) #13
  br label %420

420:                                              ; preds = %394, %382
  %421 = phi i8* [ %300, %394 ], [ %302, %382 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %421) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %295) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293) #13
  br label %422

422:                                              ; preds = %420, %360
  %423 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %290) #13
  %424 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %291) #13
  %425 = icmp slt i32 %424, 0
  %426 = select i1 %425, i32 -2147483648, i32 2147483647
  %427 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %423, i32 %424) #13
  %428 = extractvalue { i32, i1 } %427, 1
  %429 = extractvalue { i32, i1 } %427, 0
  %430 = select i1 %428, i32 %426, i32 %429, !prof !9
  %431 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %290)
  %432 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  call void @_ZN5blink15LayoutBlockFlow33TryPlacingEllipsisOnAtomicInlinesEPNS_13RootInlineBoxENS_10LayoutUnitES3_S3_RKN3WTF12AtomicStringEPNS_9InlineBoxE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull %321, i32 %430, i32 %431, i32 %371, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7, %"class.blink::InlineBox"* %432)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #13
  br label %433

433:                                              ; preds = %348, %422, %358
  %434 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %321, i64 0, i32 0, i32 5
  %435 = bitcast %"class.blink::InlineFlowBox"** %434 to %"class.blink::RootInlineBox"**
  %436 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %435, align 8
  %437 = icmp eq %"class.blink::RootInlineBox"* %436, null
  br i1 %437, label %303, label %320
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow25LineBoxHasBRWithClearanceEPNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::RootInlineBox"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 0, i32 7, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = and i32 %4, 4096
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %40, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 41538374868278621028243970633760768
  %14 = icmp eq i160 %13, 0
  %15 = bitcast %"class.blink::RootInlineBox"* %1 to %"class.blink::InlineFlowBox"*
  br i1 %14, label %16, label %18

16:                                               ; preds = %7
  %17 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"* %15) #13
  br label %20

18:                                               ; preds = %7
  %19 = tail call %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"* %15) #13
  br label %20

20:                                               ; preds = %18, %16
  %21 = phi %"class.blink::InlineBox"* [ %17, %16 ], [ %19, %18 ]
  %22 = icmp eq %"class.blink::InlineBox"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %21, i64 0, i32 4, i32 0
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*, i32)***
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, i64 92
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %25, i32 0) #13
  br i1 %30, label %31, label %40

31:                                               ; preds = %23
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 2066035336255469780992
  %39 = icmp ne i160 %38, 0
  br label %40

40:                                               ; preds = %2, %23, %31, %20
  %41 = phi i1 [ false, %2 ], [ false, %23 ], [ false, %20 ], [ %39, %31 ]
  ret i1 %41
}

declare void @_ZN5blink15LayoutBlockFlow17DeleteLineBoxTreeEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #2

declare void @_ZNK5blink13RootInlineBox19LineBreakBidiStatusEv(%"struct.blink::BidiStatus"* sret, %"class.blink::RootInlineBox"*) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox13LastLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #2

declare %"class.blink::InlineBox"* @_ZNK5blink13InlineFlowBox14FirstLeafChildEv(%"class.blink::InlineFlowBox"*) local_unnamed_addr #2

declare void @_ZN5blink13InlineFlowBox11ExtractLineEv(%"class.blink::InlineFlowBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow33CheckPaginationAndFloatsAtEndLineERNS_15LineLayoutStateE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LineLayoutState"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %6 = icmp eq %"class.blink::FloatingObjects"* %5, null
  br i1 %6, label %156, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 2
  %9 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %8, align 8
  %10 = icmp eq %"class.blink::RootInlineBox"* %9, null
  br i1 %10, label %156, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 0
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %23 = select i1 %20, i32* %21, i32* %22
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 5, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %26) #13
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !9
  store i32 %32, i32* %13, align 4
  %33 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %11
  %37 = getelementptr inbounds %"class.blink::LineLayoutState", %"class.blink::LineLayoutState"* %1, i64 0, i32 8
  %38 = load i8, i8* %37, align 2, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %11, %36
  br label %41

41:                                               ; preds = %40, %41
  %42 = phi i32 [ %56, %41 ], [ %32, %40 ]
  %43 = phi %"class.blink::RootInlineBox"* [ %54, %41 ], [ %9, %40 ]
  %44 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %43, i64 0, i32 10, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %45) #13
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !9
  store i32 %51, i32* %13, align 4
  call void @_ZN5blink15LayoutBlockFlow31AdjustLinePositionForPaginationERNS_13RootInlineBoxERNS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::RootInlineBox"* nonnull dereferenceable(160) %43, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3) #13
  store i32 %45, i32* %44, align 4
  %52 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %43, i64 0, i32 0, i32 5
  %53 = bitcast %"class.blink::InlineFlowBox"** %52 to %"class.blink::RootInlineBox"**
  %54 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %53, align 8
  %55 = icmp eq %"class.blink::RootInlineBox"* %54, null
  %56 = load i32, i32* %13, align 4
  br i1 %55, label %57, label %41

57:                                               ; preds = %41, %36
  %58 = phi i32 [ %32, %36 ], [ %56, %41 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %154, label %60

60:                                               ; preds = %57
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8
  %65 = and i160 %64, 15211807202738752817960438464512
  %66 = icmp eq i160 %65, 0
  %67 = select i1 %66, i32* %21, i32* %22
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %25, align 8
  %70 = icmp slt i32 %69, %68
  %71 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %8, align 8
  br label %72

72:                                               ; preds = %72, %60
  %73 = phi %"class.blink::RootInlineBox"* [ %71, %60 ], [ %76, %72 ]
  %74 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 0, i32 5
  %75 = bitcast %"class.blink::InlineFlowBox"** %74 to %"class.blink::RootInlineBox"**
  %76 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %75, align 8
  %77 = icmp eq %"class.blink::RootInlineBox"* %76, null
  br i1 %77, label %78, label %72

78:                                               ; preds = %72
  %79 = select i1 %70, i32 %69, i32 %68
  %80 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %73, i64 0, i32 8, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp slt i32 %58, 0
  %83 = sub nsw i32 0, %58
  %84 = select i1 %82, i32 %83, i32 %58
  %85 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %84) #13
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 2147483647, i32 %87, !prof !9
  %89 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %4, align 8
  %90 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %89, i64 0, i32 0, i32 1
  %91 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %90, align 8
  %92 = icmp eq %"class.WTF::MallocedListHashSetNode"* %91, null
  br i1 %92, label %154, label %93

93:                                               ; preds = %78
  %94 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %95 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %94 to i96*
  %96 = load i96, i96* %95, align 4
  %97 = trunc i96 %96 to i32
  %98 = icmp slt i32 %97, 0
  br label %99

99:                                               ; preds = %93, %150
  %100 = phi %"class.WTF::MallocedListHashSetNode"* [ %91, %93 ], [ %152, %150 ]
  %101 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::FloatingObject"*, %"class.blink::FloatingObject"** %101, align 8
  br i1 %98, label %103, label %111

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 1, i32 1, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = icmp slt i32 %107, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %107) #13
  br label %119

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %113, i32 %115) #13
  br label %119

119:                                              ; preds = %103, %111
  %120 = phi { i32, i1 } [ %110, %103 ], [ %118, %111 ]
  %121 = phi i32 [ %109, %103 ], [ %117, %111 ]
  %122 = extractvalue { i32, i1 } %120, 1
  %123 = extractvalue { i32, i1 } %120, 0
  %124 = select i1 %122, i32 %121, i32 %123
  %125 = icmp slt i32 %124, %79
  br i1 %125, label %150, label %126

126:                                              ; preds = %119
  br i1 %98, label %127, label %135

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 1, i32 1, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %131) #13
  br label %143

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.blink::FloatingObject", %"class.blink::FloatingObject"* %102, i64 0, i32 2, i32 1, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = icmp slt i32 %139, 0
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %137, i32 %139) #13
  br label %143

143:                                              ; preds = %127, %135
  %144 = phi { i32, i1 } [ %134, %127 ], [ %142, %135 ]
  %145 = phi i32 [ %133, %127 ], [ %141, %135 ]
  %146 = extractvalue { i32, i1 } %144, 1
  %147 = extractvalue { i32, i1 } %144, 0
  %148 = select i1 %146, i32 %145, i32 %147
  %149 = icmp slt i32 %148, %88
  br i1 %149, label %154, label %150

150:                                              ; preds = %119, %143
  %151 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %100, i64 0, i32 2
  %152 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %151, align 8
  %153 = icmp eq %"class.WTF::MallocedListHashSetNode"* %152, null
  br i1 %153, label %154, label %99

154:                                              ; preds = %143, %150, %78, %57
  %155 = phi i1 [ true, %57 ], [ true, %78 ], [ false, %143 ], [ true, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #13
  br label %156

156:                                              ; preds = %2, %7, %154
  %157 = phi i1 [ %155, %154 ], [ true, %7 ], [ true, %2 ]
  ret i1 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15LayoutBlockFlow32GeneratesLineBoxesForInlineChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::InlineIterator", align 8
  %4 = alloca %"class.blink::LineInfo", align 4
  %5 = bitcast %"class.blink::InlineIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %3, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %10, %"class.blink::LayoutObject"** %6, align 8
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %7, align 8
  store i32 -1, i32* %8, align 8
  store i32 0, i32* %9, align 4
  %11 = icmp eq %"class.blink::LayoutObject"* %1, null
  %12 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #13
  br i1 %11, label %118, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %4, i64 0, i32 5
  br label %19

19:                                               ; preds = %13, %115
  store i8 1, i8* %12, align 4
  store i8 0, i8* %14, align 1
  store i8 1, i8* %15, align 2
  store i8 1, i8* %16, align 1
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  %20 = call zeroext i1 @_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE(%"class.blink::InlineIterator"* nonnull dereferenceable(24) %3, %"class.blink::LineInfo"* nonnull dereferenceable(12) %4, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #13
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  br i1 %20, label %119, label %22

22:                                               ; preds = %19
  %23 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #13
  br label %118

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 33554432
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %46, label %31

31:                                               ; preds = %25
  %32 = load i32, i32* %9, align 4
  %33 = icmp ult i32 %32, 2147483647
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %32, 1
  store i32 %35, i32* %9, align 4
  br label %36

36:                                               ; preds = %34, %31
  %37 = phi i32 [ %32, %31 ], [ %35, %34 ]
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 1, i32 4, i32 0, i64 4
  %39 = bitcast i8* %38 to %"class.WTF::StringImpl"**
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ult i32 %37, %44
  br i1 %45, label %115, label %46

46:                                               ; preds = %25, %36, %42
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %48 = ptrtoint %"class.blink::LayoutObject"* %21 to i64
  br label %49

49:                                               ; preds = %111, %46
  %50 = phi %"class.blink::LayoutObject"* [ %21, %46 ], [ %92, %111 ]
  %51 = phi i64 [ %48, %46 ], [ %91, %111 ]
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 113336795588871485128704
  %56 = icmp eq i96 %55, 75557863725914323419136
  %57 = and i96 %54, 1115684864
  %58 = icmp ne i96 %57, 0
  %59 = or i1 %58, %56
  br i1 %59, label %72, label %60

60:                                               ; preds = %49
  %61 = inttoptr i64 %51 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %62 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %62, i64 13
  %64 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %63, align 8
  %65 = call %"class.blink::LayoutObjectChildList"* %64(%"class.blink::LayoutObject"* nonnull %50) #13
  %66 = icmp eq %"class.blink::LayoutObjectChildList"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %65, i64 0, i32 0
  %69 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %68, align 8
  %70 = ptrtoint %"class.blink::LayoutObject"* %69 to i64
  %71 = icmp eq %"class.blink::LayoutObject"* %69, null
  br i1 %71, label %72, label %90

72:                                               ; preds = %67, %60, %49
  %73 = phi i64 [ %70, %67 ], [ 0, %49 ], [ 0, %60 ]
  %74 = icmp ne %"class.blink::LayoutObject"* %50, null
  %75 = icmp ne %"class.blink::LayoutObject"* %50, %47
  %76 = and i1 %74, %75
  br i1 %76, label %77, label %90

77:                                               ; preds = %72, %84
  %78 = phi %"class.blink::LayoutObject"* [ %86, %84 ], [ %50, %72 ]
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 9
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = icmp eq %"class.blink::LayoutObject"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %77
  %83 = ptrtoint %"class.blink::LayoutObject"* %80 to i64
  br label %90

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 7
  %86 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %85, align 8
  %87 = icmp ne %"class.blink::LayoutObject"* %86, null
  %88 = icmp ne %"class.blink::LayoutObject"* %86, %47
  %89 = and i1 %87, %88
  br i1 %89, label %77, label %112

90:                                               ; preds = %82, %72, %67
  %91 = phi i64 [ %70, %67 ], [ %83, %82 ], [ %73, %72 ]
  %92 = inttoptr i64 %91 to %"class.blink::LayoutObject"*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 4
  %96 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %95 to i96*
  %97 = load i96, i96* %96, align 4
  %98 = and i96 %97, 113336795588871485128704
  %99 = icmp eq i96 %98, 75557863725914323419136
  %100 = and i96 %97, 1115684864
  %101 = icmp ne i96 %100, 0
  %102 = or i1 %101, %99
  br i1 %102, label %112, label %103

103:                                              ; preds = %94
  %104 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %92) #13
  br i1 %104, label %105, label %111

105:                                              ; preds = %103
  %106 = inttoptr i64 %91 to i1 (%"class.blink::LayoutObject"*)***
  %107 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %107, i64 26
  %109 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %108, align 8
  %110 = call zeroext i1 %109(%"class.blink::LayoutObject"* nonnull %92) #13
  br i1 %110, label %112, label %111

111:                                              ; preds = %105, %103
  br label %49

112:                                              ; preds = %90, %94, %105, %84
  %113 = phi i64 [ 0, %84 ], [ %91, %105 ], [ %91, %94 ], [ 0, %90 ]
  %114 = inttoptr i64 %113 to %"class.blink::LayoutObject"*
  store %"class.blink::LayoutObject"* %114, %"class.blink::LayoutObject"** %7, align 8
  store i32 0, i32* %9, align 4
  store i32 -1, i32* %8, align 8
  br label %115

115:                                              ; preds = %42, %112
  %116 = phi %"class.blink::LayoutObject"* [ %21, %42 ], [ %114, %112 ]
  %117 = icmp eq %"class.blink::LayoutObject"* %116, null
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %12) #13
  br i1 %117, label %118, label %19

118:                                              ; preds = %115, %24, %2
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %12) #13
  br label %121

119:                                              ; preds = %19
  %120 = icmp ne %"class.blink::LayoutObject"* %21, null
  br label %121

121:                                              ; preds = %119, %118
  %122 = phi i1 [ %120, %119 ], [ false, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  ret i1 %122
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink15RequiresLineBoxERKNS_14InlineIteratorERKNS_8LineInfoENS_18WhitespacePositionE(%"class.blink::InlineIterator"* dereferenceable(24), %"class.blink::LineInfo"* dereferenceable(12), i32) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 33554432
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 1, i32 4, i32 0, i64 4
  %13 = bitcast i8* %12 to %"class.WTF::StringImpl"**
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %133, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %133, label %20

20:                                               ; preds = %3, %16
  %21 = and i96 %8, 8388608
  %22 = icmp ne i96 %21, 0
  %23 = and i96 %8, 113336795588871485128704
  %24 = icmp eq i96 %23, 75557863725914323419136
  %25 = or i1 %24, %22
  br i1 %25, label %133, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::LayoutObject"* %5 to i1 (%"class.blink::LayoutObject"*)***
  %28 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, i64 26
  %30 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %5) #13
  br i1 %31, label %32, label %41

32:                                               ; preds = %26
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %34 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %33) #13
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::LayoutObject"* %33 to %"class.blink::LayoutBoxModelObject"*
  %37 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv(%"class.blink::LayoutBoxModelObject"* %36) #13
  br i1 %37, label %41, label %38

38:                                               ; preds = %32, %35
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %40 = tail call zeroext i1 @_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE(%"class.blink::LayoutObject"* %39, %"class.blink::LineInfo"* dereferenceable(12) %1)
  br i1 %40, label %41, label %133

41:                                               ; preds = %26, %35, %38
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 5, i32 0
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 286720
  %49 = icmp eq i160 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %41
  %51 = icmp eq i32 %2, 1
  %52 = and i160 %47, 520192
  %53 = icmp eq i160 %52, 16384
  %54 = and i1 %51, %53
  br i1 %54, label %55, label %133

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 2
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 3
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %133

63:                                               ; preds = %55, %41, %59
  %64 = bitcast %"class.blink::LayoutObject"* %42 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %42, i32 0) #13
  br i1 %68, label %133, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %0, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, null
  br i1 %73, label %133, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 33554432
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %133, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 1, i32 4, i32 0, i64 4
  %82 = bitcast i8* %81 to %"class.WTF::StringImpl"**
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %133, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp ugt i32 %87, %71
  br i1 %88, label %89, label %133

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 1
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  br i1 %93, label %101, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.WTF::StringImpl"* %94 to i8*
  %97 = zext i32 %71 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i16
  br label %113

101:                                              ; preds = %89
  %102 = bitcast %"class.WTF::StringImpl"* %94 to i16*
  %103 = zext i32 %71 to i64
  %104 = getelementptr inbounds i16, i16* %102, i64 %103
  %105 = load i16, i16* %104, align 2
  %106 = icmp eq i32 %2, 0
  %107 = icmp eq i16 %105, 12288
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %113

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 3
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %130, label %133

113:                                              ; preds = %95, %101
  %114 = phi i16 [ %105, %101 ], [ %100, %95 ]
  switch i16 %114, label %133 [
    i16 32, label %130
    i16 9, label %130
    i16 173, label %130
    i16 12288, label %130
    i16 10, label %115
  ]

115:                                              ; preds = %113
  %116 = bitcast %"class.blink::LayoutObject"* %72 to i1 (%"class.blink::LayoutObject"*, i32)***
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* nonnull %72, i32 65) #13
  br i1 %120, label %130, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 5, i32 0
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 9
  %125 = bitcast [20 x i8]* %124 to i160*
  %126 = load i160, i160* %125, align 8
  %127 = lshr i160 %126, 12
  %128 = trunc i160 %127 to i32
  %129 = and i32 %128, 127
  switch i32 %129, label %133 [
    i32 16, label %130
    i32 1, label %130
  ]

130:                                              ; preds = %109, %121, %121, %115, %113, %113, %113, %113
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %132 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* %131)
  br label %133

133:                                              ; preds = %109, %121, %74, %69, %85, %80, %50, %11, %113, %59, %130, %63, %38, %20, %16
  %134 = phi i1 [ false, %16 ], [ false, %20 ], [ false, %38 ], [ true, %63 ], [ true, %109 ], [ true, %121 ], [ %132, %130 ], [ true, %59 ], [ true, %113 ], [ false, %11 ], [ true, %50 ], [ true, %80 ], [ true, %85 ], [ true, %69 ], [ true, %74 ]
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow35AddVisualOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", align 8
  %5 = alloca %"struct.blink::PhysicalRect", align 4
  %6 = alloca %"class.blink::NGInlineCursor", align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.blink::LayoutRect"*
  %11 = alloca %"struct.blink::PhysicalRect", align 4
  %12 = alloca %"class.blink::InlineWalker", align 8
  %13 = alloca %"class.WTF::Vector.2333", align 8
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"struct.blink::PhysicalOffset"*
  %16 = alloca { i64, i64 }, align 8
  %17 = bitcast { i64, i64 }* %16 to %"struct.blink::PhysicalRect"*
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %143, label %23

23:                                               ; preds = %1
  %24 = bitcast %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %4, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %27 = load %class.scoped_refptr.1625*, %class.scoped_refptr.1625** %26, align 8
  store %class.scoped_refptr.1625* %27, %class.scoped_refptr.1625** %25, align 8
  %28 = zext i32 %21 to i64
  %29 = getelementptr inbounds %class.scoped_refptr.1625, %class.scoped_refptr.1625* %27, i64 %28
  %30 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  %31 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  %35 = bitcast %"class.blink::NGInlineCursor"* %6 to i8*
  %36 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 0, i32 0
  %37 = bitcast { i64, i64 }* %7 to i8*
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %40 = bitcast { i64, i64 }* %2 to %"class.blink::LayoutRect"*
  %41 = bitcast { i64, i64 }* %2 to i8*
  %42 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %43 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %46 = bitcast { i64, i64 }* %7 to i8*
  br label %48

47:                                               ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  br label %220

48:                                               ; preds = %23, %139
  %49 = call dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nonnull %4) #13
  %50 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 1
  %51 = bitcast i24* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %131, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 6, i64 %58
  %60 = icmp eq %"struct.blink::NGLink"* %59, null
  br i1 %60, label %131, label %61

61:                                               ; preds = %55
  %62 = bitcast %"struct.blink::NGLink"* %59 to %"class.blink::NGFragmentItems"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %30, i8 0, i64 16, i1 false) #13
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %35) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"* nonnull %6, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %49, %"class.blink::NGFragmentItems"* nonnull dereferenceable(24) %62) #13
  %63 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %36, align 8
  %64 = icmp eq %"class.blink::NGFragmentItem"* %63, null
  br i1 %64, label %65, label %92

65:                                               ; preds = %128, %61
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %35) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #13
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = and i160 %69, 15211807202738752817960438464512
  %71 = icmp eq i160 %70, 5070602400912917605986812821504
  %72 = load i32, i32* %31, align 4
  br i1 %71, label %73, label %79, !prof !9

73:                                               ; preds = %65
  %74 = load i32, i32* %33, align 4
  %75 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %43, align 8
  %76 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %75, i64 106
  %77 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %76, align 8
  %78 = call i32 %77(%"class.blink::LayoutObject"* %18, i32 %72, i32 %74, %"class.blink::LayoutBox"* null) #13
  br label %79

79:                                               ; preds = %65, %73
  %80 = phi i32 [ %78, %73 ], [ %72, %65 ]
  %81 = load i32, i32* %32, align 4
  %82 = load i32, i32* %33, align 4
  %83 = load i32, i32* %34, align 4
  %84 = zext i32 %81 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %80 to i64
  %87 = or i64 %85, %86
  %88 = zext i32 %83 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %82 to i64
  %91 = or i64 %89, %90
  store i64 %87, i64* %44, align 8
  store i64 %91, i64* %45, align 8
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %19, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %40) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  br label %139

92:                                               ; preds = %61, %128
  %93 = phi %"class.blink::NGFragmentItem"* [ %129, %128 ], [ %63, %61 ]
  %94 = call zeroext i1 @_ZNK5blink14NGFragmentItem20HasSelfPaintingLayerEv(%"class.blink::NGFragmentItem"* nonnull %93) #13
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false)
  %96 = call { i64, i64 } @_ZNK5blink14NGFragmentItem11InkOverflowEv(%"class.blink::NGFragmentItem"* nonnull %93) #13
  %97 = extractvalue { i64, i64 } %96, 0
  store i64 %97, i64* %39, align 8
  %98 = extractvalue { i64, i64 } %96, 1
  store i64 %98, i64* %38, align 8
  %99 = trunc i64 %98 to i32
  %100 = icmp eq i32 %99, 0
  %101 = icmp ult i64 %98, 4294967296
  %102 = or i1 %100, %101
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = lshr i64 %97, 32
  %105 = trunc i64 %104 to i32
  %106 = trunc i64 %97 to i32
  %107 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %93, i64 0, i32 2, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %108) #13
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !9
  %115 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %93, i64 0, i32 2, i32 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp slt i32 %116, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %116) #13
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !9
  %123 = zext i32 %122 to i64
  %124 = shl nuw i64 %123, 32
  %125 = zext i32 %114 to i64
  %126 = or i64 %124, %125
  store i64 %126, i64* %39, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #13
  br label %127

127:                                              ; preds = %95, %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br label %128

128:                                              ; preds = %92, %127
  call void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"* nonnull %6) #13
  %129 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %36, align 8
  %130 = icmp eq %"class.blink::NGFragmentItem"* %129, null
  br i1 %130, label %65, label %92

131:                                              ; preds = %48, %55
  %132 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 0, i32 3
  %133 = bitcast i24* %132 to i32*
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %131
  %138 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 0
  call void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsERKNS_18NGPhysicalFragmentE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::NGPhysicalFragment"* dereferenceable(48) %138) #13
  br label %139

139:                                              ; preds = %131, %137, %79
  %140 = load %class.scoped_refptr.1625*, %class.scoped_refptr.1625** %25, align 8
  %141 = getelementptr inbounds %class.scoped_refptr.1625, %class.scoped_refptr.1625* %140, i64 1
  store %class.scoped_refptr.1625* %141, %class.scoped_refptr.1625** %25, align 8
  %142 = icmp eq %class.scoped_refptr.1625* %141, %29
  br i1 %142, label %47, label %48

143:                                              ; preds = %1
  %144 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %145 = bitcast %"class.blink::InlineFlowBox"** %144 to %"class.blink::RootInlineBox"**
  %146 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %145, align 8
  %147 = icmp eq %"class.blink::RootInlineBox"* %146, null
  br i1 %147, label %220, label %148

148:                                              ; preds = %143
  %149 = bitcast { i64, i64 }* %9 to i8*
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %152 = bitcast { i64, i64 }* %9 to i8*
  br label %153

153:                                              ; preds = %148, %213
  %154 = phi %"class.blink::RootInlineBox"* [ %146, %148 ], [ %218, %213 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #13
  %155 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 5, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 -86, i64 16, i1 false)
  %156 = load i32, i32* %155, align 8
  %157 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 6, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %159, align 8
  %161 = icmp eq %"struct.blink::SimpleOverflowModel"* %160, null
  br i1 %161, label %173, label %162

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %160, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %164 = load i8, i8* %163, align 4, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %160, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %168 = bitcast %"class.blink::LayoutRect"* %167 to i64*
  %169 = load i64, i64* %168, align 4
  %170 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %160, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %171 = bitcast %"class.blink::LayoutSize"* %170 to i64*
  %172 = load i64, i64* %171, align 4
  br label %213

173:                                              ; preds = %162, %153
  %174 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 0, i32 7, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = and i32 %175, 2048
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %189, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 0, i32 6, i32 0
  %182 = load i32, i32* %181, align 8
  %183 = icmp sgt i32 %156, -1
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %156) #13
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !9
  br label %200

189:                                              ; preds = %173
  %190 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %156, -1
  %193 = select i1 %192, i32 -2147483648, i32 2147483647
  %194 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %156) #13
  %195 = extractvalue { i32, i1 } %194, 1
  %196 = extractvalue { i32, i1 } %194, 0
  %197 = select i1 %195, i32 %193, i32 %196, !prof !9
  %198 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 0, i32 6, i32 0
  %199 = load i32, i32* %198, align 8
  br label %200

200:                                              ; preds = %189, %178
  %201 = phi i32 [ %156, %178 ], [ %191, %189 ]
  %202 = phi i32 [ %180, %178 ], [ %156, %189 ]
  %203 = phi i32 [ %182, %178 ], [ %197, %189 ]
  %204 = phi i32 [ %188, %178 ], [ %199, %189 ]
  %205 = zext i32 %201 to i64
  %206 = shl nuw i64 %205, 32
  %207 = zext i32 %202 to i64
  %208 = or i64 %206, %207
  %209 = zext i32 %204 to i64
  %210 = shl nuw i64 %209, 32
  %211 = zext i32 %203 to i64
  %212 = or i64 %210, %211
  br label %213

213:                                              ; preds = %166, %200
  %214 = phi i64 [ %169, %166 ], [ %208, %200 ]
  %215 = phi i64 [ %172, %166 ], [ %212, %200 ]
  store i64 %214, i64* %151, align 8
  store i64 %215, i64* %150, align 8
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %19, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #13
  %216 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %154, i64 0, i32 0, i32 5
  %217 = bitcast %"class.blink::InlineFlowBox"** %216 to %"class.blink::RootInlineBox"**
  %218 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %217, align 8
  %219 = icmp eq %"class.blink::RootInlineBox"* %218, null
  br i1 %219, label %220, label %153

220:                                              ; preds = %213, %143, %47
  %221 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %222 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %221 to i96*
  %223 = load i96, i96* %222, align 4
  %224 = and i96 %223, 35184372088832
  %225 = icmp eq i96 %224, 0
  br i1 %225, label %422, label %226

226:                                              ; preds = %220
  %227 = bitcast %"struct.blink::PhysicalRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %227) #13
  %228 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  %230 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %227, i8 0, i64 16, i1 false) #13
  %232 = bitcast %"class.blink::InlineWalker"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #13
  %233 = getelementptr inbounds %"class.blink::InlineWalker", %"class.blink::InlineWalker"* %12, i64 0, i32 1, i32 0
  %234 = bitcast %"class.blink::InlineWalker"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 24, i1 false)
  call void @_ZN5blink12InlineWalkerC2ENS_19LineLayoutBlockFlowE(%"class.blink::InlineWalker"* nonnull %12, %"class.blink::LayoutObject"* %18)
  %235 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %233, align 8
  %236 = icmp eq %"class.blink::LayoutObject"* %235, null
  br i1 %236, label %252, label %237

237:                                              ; preds = %226
  %238 = bitcast %"class.WTF::Vector.2333"* %13 to i8*
  %239 = getelementptr inbounds %"class.WTF::Vector.2333", %"class.WTF::Vector.2333"* %13, i64 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.WTF::Vector.2333", %"class.WTF::Vector.2333"* %13, i64 0, i32 0, i32 0, i32 2
  %241 = bitcast i64* %14 to i8*
  %242 = bitcast { i64, i64 }* %16 to i8*
  %243 = bitcast { i64, i64 }* %16 to i32*
  %244 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %17, i64 0, i32 0, i32 1, i32 0
  %245 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 1
  %246 = bitcast i64* %245 to i32*
  %247 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %17, i64 0, i32 1, i32 1, i32 0
  %248 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i64 0, i32 0
  %249 = bitcast { i64, i64 }* %16 to i8*
  br label %285

250:                                              ; preds = %418
  %251 = load i32, i32* %228, align 4
  br label %252

252:                                              ; preds = %250, %226
  %253 = phi i32 [ %251, %250 ], [ 0, %226 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #13
  %254 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %255 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #13
  %256 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %257 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %257, i64 0, i32 0, i32 9
  %259 = bitcast [20 x i8]* %258 to i160*
  %260 = load i160, i160* %259, align 8
  %261 = and i160 %260, 15211807202738752817960438464512
  %262 = icmp eq i160 %261, 5070602400912917605986812821504
  br i1 %262, label %263, label %270, !prof !9

263:                                              ; preds = %252
  %264 = load i32, i32* %230, align 4
  %265 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %266 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %265, align 8
  %267 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %266, i64 106
  %268 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %267, align 8
  %269 = call i32 %268(%"class.blink::LayoutObject"* %18, i32 %253, i32 %264, %"class.blink::LayoutBox"* null) #13
  br label %270

270:                                              ; preds = %252, %263
  %271 = phi i32 [ %269, %263 ], [ %253, %252 ]
  %272 = load i32, i32* %229, align 4
  %273 = load i32, i32* %230, align 4
  %274 = load i32, i32* %231, align 4
  %275 = zext i32 %272 to i64
  %276 = shl nuw i64 %275, 32
  %277 = zext i32 %271 to i64
  %278 = or i64 %276, %277
  %279 = zext i32 %274 to i64
  %280 = shl nuw i64 %279, 32
  %281 = zext i32 %273 to i64
  %282 = or i64 %280, %281
  %283 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %278, i64* %283, align 8
  %284 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %282, i64* %284, align 8
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %19, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %254) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %227) #13
  br label %422

285:                                              ; preds = %237, %418
  %286 = phi %"class.blink::LayoutObject"* [ %235, %237 ], [ %420, %418 ]
  %287 = bitcast %"class.blink::LayoutObject"* %286 to i1 (%"class.blink::LayoutObject"*)***
  %288 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %287, align 8
  %289 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %288, i64 26
  %290 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %289, align 8
  %291 = call zeroext i1 %290(%"class.blink::LayoutObject"* nonnull %286) #13
  br i1 %291, label %292, label %418

292:                                              ; preds = %285
  %293 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %286, i64 0, i32 5, i32 0
  %294 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %294, i64 0, i32 0, i32 3, i32 0, i32 0
  %296 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %296, i64 0, i32 2, i32 0, i32 0
  %298 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %298, i64 0, i32 13
  %300 = bitcast [3 x i8]* %299 to i24*
  %301 = load i24, i24* %300, align 8
  %302 = and i24 %301, 1920
  %303 = icmp eq i24 %302, 0
  br i1 %303, label %418, label %304

304:                                              ; preds = %292
  %305 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %298, i64 0, i32 8, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = sitofp i32 %306 to float
  %308 = fmul float %307, 1.562500e-02
  %309 = fcmp ogt float %308, 0.000000e+00
  %310 = and i24 %301, 1792
  %311 = icmp ne i24 %310, 0
  %312 = and i1 %311, %309
  br i1 %312, label %313, label %418

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %286, i64 0, i32 4
  %315 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %314 to i96*
  %316 = load i96, i96* %315, align 4
  %317 = and i96 %316, 16777216
  %318 = icmp eq i96 %317, 0
  br i1 %318, label %319, label %341

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %286, i64 0, i32 6, i32 0, i32 0
  %321 = load %"class.blink::Node"*, %"class.blink::Node"** %320, align 8
  %322 = icmp eq %"class.blink::Node"* %321, null
  br i1 %322, label %341, label %323

323:                                              ; preds = %319
  %324 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %321, i64 0, i32 1
  %325 = load i32, i32* %324, align 8
  %326 = and i32 %325, 1
  %327 = icmp eq i32 %326, 0
  %328 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %321, i64 0, i32 6, i32 0, i32 0
  br i1 %327, label %333, label %329

329:                                              ; preds = %323
  %330 = bitcast %"class.blink::NodeData"** %328 to %"class.blink::NodeRareData"**
  %331 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %331, i64 0, i32 1, i32 0, i32 0
  br label %335

333:                                              ; preds = %323
  %334 = bitcast %"class.blink::NodeData"** %328 to %"class.blink::NodeRenderingData"**
  br label %335

335:                                              ; preds = %333, %329
  %336 = phi %"class.blink::NodeRenderingData"** [ %332, %329 ], [ %334, %333 ]
  %337 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %337, i64 0, i32 1
  %339 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %338, align 8
  %340 = icmp eq %"class.blink::LayoutObject"* %339, %286
  br i1 %340, label %341, label %418

341:                                              ; preds = %313, %319, %335
  %342 = bitcast %"class.blink::LayoutObject"* %286 to %"class.blink::LayoutBoxModelObject"*
  %343 = call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* nonnull %342) #13
  %344 = icmp eq %"class.blink::LayoutBoxModelObject"* %343, null
  br i1 %344, label %418, label %345

345:                                              ; preds = %341
  %346 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %293, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %238) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 16, i1 false) #13
  %347 = bitcast %"class.blink::LayoutObject"* %286 to %"class.blink::LayoutInline"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #13
  %348 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %346, i64 0, i32 0, i32 3, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %349 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %349, i64 0, i32 3, i32 0, i32 0
  %351 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %350, align 8
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %351, i64 0, i32 39
  %353 = load i32, i32* %352, align 4
  %354 = lshr i32 %353, 27
  %355 = and i32 %354, 1
  call void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"* nonnull %347, %"class.WTF::Vector.2333"* nonnull dereferenceable(16) %13, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %15, i32 %355) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %241) #13
  %356 = load i32, i32* %240, align 4
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %408, label %358

358:                                              ; preds = %345
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %242) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 -86, i64 16, i1 false)
  %359 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2333"* nonnull dereferenceable(16) %13) #13
  %360 = extractvalue { i64, i64 } %359, 0
  store i64 %360, i64* %248, align 8
  %361 = extractvalue { i64, i64 } %359, 1
  store i64 %361, i64* %245, align 8
  %362 = call i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"* %346) #13
  %363 = icmp sgt i32 %362, 33554431
  br i1 %363, label %364, label %366

364:                                              ; preds = %358
  %365 = load i32, i32* %244, align 4
  br label %374

366:                                              ; preds = %358
  %367 = icmp slt i32 %362, -33554432
  br i1 %367, label %368, label %370

368:                                              ; preds = %366
  %369 = load i32, i32* %244, align 4
  br label %377

370:                                              ; preds = %366
  %371 = shl i32 %362, 6
  %372 = load i32, i32* %244, align 4
  %373 = icmp sgt i32 %371, -1
  br i1 %373, label %374, label %377

374:                                              ; preds = %364, %370
  %375 = phi i32 [ %365, %364 ], [ %372, %370 ]
  %376 = phi i32 [ 2147483647, %364 ], [ %371, %370 ]
  br label %377

377:                                              ; preds = %368, %370, %374
  %378 = phi i32 [ %375, %374 ], [ %372, %370 ], [ %369, %368 ]
  %379 = phi i32 [ %376, %374 ], [ %371, %370 ], [ -2147483648, %368 ]
  %380 = phi i32 [ -2147483648, %374 ], [ 2147483647, %370 ], [ 2147483647, %368 ]
  %381 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %378, i32 %379) #13
  %382 = extractvalue { i32, i1 } %381, 1
  %383 = extractvalue { i32, i1 } %381, 0
  %384 = select i1 %382, i32 %380, i32 %383, !prof !9
  store i32 %384, i32* %244, align 4
  %385 = load i32, i32* %243, align 8
  %386 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %385, i32 %379) #13
  %387 = extractvalue { i32, i1 } %386, 1
  %388 = extractvalue { i32, i1 } %386, 0
  %389 = select i1 %387, i32 %380, i32 %388, !prof !9
  store i32 %389, i32* %243, align 8
  %390 = icmp slt i32 %379, 0
  %391 = select i1 %390, i32 -2147483648, i32 2147483647
  %392 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %379, i32 %379) #13
  %393 = extractvalue { i32, i1 } %392, 1
  %394 = extractvalue { i32, i1 } %392, 0
  %395 = select i1 %393, i32 %391, i32 %394, !prof !9
  %396 = load i32, i32* %246, align 8
  %397 = icmp slt i32 %395, 0
  %398 = select i1 %397, i32 -2147483648, i32 2147483647
  %399 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %396, i32 %395) #13
  %400 = extractvalue { i32, i1 } %399, 1
  %401 = extractvalue { i32, i1 } %399, 0
  %402 = select i1 %400, i32 %398, i32 %401, !prof !9
  store i32 %402, i32* %246, align 8
  %403 = load i32, i32* %247, align 4
  %404 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %403, i32 %395) #13
  %405 = extractvalue { i32, i1 } %404, 1
  %406 = extractvalue { i32, i1 } %404, 0
  %407 = select i1 %405, i32 %398, i32 %406, !prof !9
  store i32 %407, i32* %247, align 4
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %11, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %17) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #13
  br label %408

408:                                              ; preds = %377, %345
  %409 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %239, align 8
  %410 = icmp eq %"struct.blink::PhysicalRect"* %409, null
  %411 = bitcast %"struct.blink::PhysicalRect"* %409 to i8*
  br i1 %410, label %417, label %412, !prof !10

412:                                              ; preds = %408
  %413 = load i32, i32* %240, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %416, label %415, !prof !9

415:                                              ; preds = %412
  store i32 0, i32* %240, align 4
  br label %416

416:                                              ; preds = %415, %412
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %411) #13
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %239, align 8
  br label %417

417:                                              ; preds = %408, %416
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %238) #13
  br label %418

418:                                              ; preds = %341, %292, %304, %285, %335, %417
  %419 = call %"class.blink::LayoutObject"* @_ZN5blink12InlineWalker7AdvanceEv(%"class.blink::InlineWalker"* nonnull %12)
  %420 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %233, align 8
  %421 = icmp eq %"class.blink::LayoutObject"* %420, null
  br i1 %421, label %250, label %285

422:                                              ; preds = %220, %270
  ret void
}

declare dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"*) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72), %"class.blink::NGFragmentItems"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink14NGFragmentItem20HasSelfPaintingLayerEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink14NGFragmentItem11InkOverflowEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #2

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsERKNS_18NGPhysicalFragmentE(%"class.blink::LayoutBlockFlow"*, %"class.blink::NGPhysicalFragment"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink12LayoutInline31AddOutlineRectsForContinuationsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutInline"*, %"class.WTF::Vector.2333"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #2

declare { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.2333"* dereferenceable(16)) local_unnamed_addr #2

declare i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow35AddLayoutOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::LogicalRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.blink::LayoutRect"*
  %7 = alloca %"class.base::CheckedContiguousIterator.2339", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.2339", align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"struct.blink::LogicalRect"*
  %11 = alloca %"struct.blink::PhysicalRect", align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.blink::LayoutRect"*
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"class.blink::LayoutRect"*
  %16 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 8589934592
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %197, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8, !noalias !63
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8, !noalias !63
  %27 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  %28 = and i160 %26, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  %30 = and i160 %26, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %33 = select i1 %31, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %34 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %35 = select i1 %29, { i64, i64 } %33, { i64, i64 } %32
  %36 = extractvalue { i64, i64 } %34, 0
  %37 = extractvalue { i64, i64 } %35, 1
  %38 = getelementptr inbounds i8, i8* %27, i64 %37
  %39 = bitcast i8* %38 to %"class.blink::LayoutBoxModelObject"*
  %40 = and i64 %36, 1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %21
  %43 = bitcast i8* %38 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = add i64 %36, -1
  %46 = getelementptr i8, i8* %44, i64 %45
  %47 = bitcast i8* %46 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %48 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %47, align 8
  br label %51

49:                                               ; preds = %21
  %50 = inttoptr i64 %36 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %48, %42 ], [ %50, %49 ]
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %39) #13
  %54 = load i96, i96* %17, align 4
  %55 = and i96 %54, 8589934592
  %56 = icmp eq i96 %55, 0
  %57 = icmp ne i32 %53, 0
  %58 = or i1 %57, %56
  br i1 %58, label %197, label %59

59:                                               ; preds = %51
  %60 = and i96 %54, 16777216
  %61 = icmp eq i96 %60, 0
  br i1 %61, label %62, label %197

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %197, label %66

66:                                               ; preds = %62
  %67 = tail call zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %64) #13
  br i1 %67, label %68, label %197

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = and i160 %73, 41538374868278621028243970633760768
  %75 = icmp eq i160 %74, 0
  br i1 %75, label %76, label %197

76:                                               ; preds = %68
  %77 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %78 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)***
  %79 = load %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)**, %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)*, %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)** %79, i64 195
  %81 = load %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)*, %"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)** %80, align 8
  %82 = tail call %"class.blink::NGPhysicalBoxFragment"* %81(%"class.blink::LayoutBlock"* %77) #13
  %83 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %82, null
  br i1 %83, label %197, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 1
  %86 = bitcast i24* %85 to i32*
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  br i1 %89, label %136, label %93

93:                                               ; preds = %84
  %94 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 6, i64 %92
  %95 = icmp eq %"struct.blink::NGLink"* %94, null
  br i1 %95, label %136, label %96

96:                                               ; preds = %93
  %97 = bitcast %"struct.blink::NGLink"* %94 to %"class.blink::NGFragmentItems"*
  %98 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %98) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentERKNS_15NGFragmentItemsE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::NGPhysicalBoxFragment"* nonnull dereferenceable(72) %82, %"class.blink::NGFragmentItems"* nonnull dereferenceable(24) %97) #13
  %99 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %100 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %99, align 8
  %101 = icmp eq %"class.blink::NGFragmentItem"* %100, null
  br i1 %101, label %135, label %102

102:                                              ; preds = %96
  %103 = bitcast { i64, i64 }* %3 to i8*
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %105 = bitcast i64* %104 to i32*
  %106 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 0
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %109 = bitcast { i64, i64 }* %5 to i8*
  %110 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %112 = bitcast { i64, i64 }* %3 to i8*
  br label %113

113:                                              ; preds = %102, %132
  %114 = phi %"class.blink::NGFragmentItem"* [ %100, %102 ], [ %133, %132 ]
  %115 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %114, i64 0, i32 6
  %116 = load i16, i16* %115, align 8
  %117 = and i16 %116, 7
  %118 = icmp eq i16 %117, 3
  br i1 %118, label %119, label %132

119:                                              ; preds = %113
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #13
  %120 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %114, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 16, i1 false)
  %121 = call { i64, i64 } @_ZNK5blink18NGPhysicalFragment21ConvertChildToLogicalERKNS_12PhysicalRectE(%"class.blink::NGPhysicalFragment"* %106, %"struct.blink::PhysicalRect"* dereferenceable(16) %120) #13
  %122 = extractvalue { i64, i64 } %121, 0
  store i64 %122, i64* %107, align 8
  %123 = extractvalue { i64, i64 } %121, 1
  store i64 %123, i64* %104, align 8
  %124 = trunc i64 %123 to i32
  %125 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %124, i32 64) #13
  %126 = extractvalue { i32, i1 } %125, 1
  %127 = extractvalue { i32, i1 } %125, 0
  %128 = select i1 %126, i32 2147483647, i32 %127, !prof !9
  store i32 %128, i32* %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #13
  %129 = call { i64, i64 } @_ZNK5blink18NGPhysicalFragment22ConvertChildToPhysicalERKNS_11LogicalRectE(%"class.blink::NGPhysicalFragment"* %106, %"struct.blink::LogicalRect"* nonnull dereferenceable(16) %4) #13
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  store i64 %130, i64* %110, align 8
  store i64 %131, i64* %111, align 8
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %108, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #13
  br label %132

132:                                              ; preds = %113, %119
  call void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"* nonnull %2) #13
  %133 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %99, align 8
  %134 = icmp eq %"class.blink::NGFragmentItem"* %133, null
  br i1 %134, label %135, label %113

135:                                              ; preds = %132, %96
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %98) #13
  br label %217

136:                                              ; preds = %84, %93
  %137 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 6, i64 0
  %138 = bitcast %"class.base::CheckedContiguousIterator.2339"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #13
  %139 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %7, i64 0, i32 1
  %140 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 6, i64 %92
  %141 = bitcast %"class.base::CheckedContiguousIterator.2339"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2339"* nonnull %7, %"struct.blink::NGLink"* %137, %"struct.blink::NGLink"* %137, %"struct.blink::NGLink"* %140) #13
  %142 = bitcast %"class.base::CheckedContiguousIterator.2339"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #13
  %143 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %8, i64 0, i32 1
  %144 = bitcast %"class.base::CheckedContiguousIterator.2339"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2339"* nonnull %8, %"struct.blink::NGLink"* %137, %"struct.blink::NGLink"* %140, %"struct.blink::NGLink"* %140) #13
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2339"* nonnull %7, %"class.base::CheckedContiguousIterator.2339"* nonnull dereferenceable(24) %8) #13
  %145 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %139, align 8
  %146 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %143, align 8
  %147 = icmp eq %"struct.blink::NGLink"* %145, %146
  br i1 %147, label %163, label %148

148:                                              ; preds = %136
  %149 = bitcast { i64, i64 }* %9 to i8*
  %150 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %151 = bitcast i64* %150 to i32*
  %152 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %82, i64 0, i32 0
  %153 = bitcast %"struct.blink::PhysicalRect"* %11 to i8*
  %154 = bitcast %"struct.blink::PhysicalRect"* %11 to i64*
  %155 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1
  %156 = bitcast %"struct.blink::PhysicalSize"* %155 to i64*
  %157 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %158 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %159 = bitcast { i64, i64 }* %12 to i8*
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %161 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %162 = bitcast { i64, i64 }* %9 to i8*
  br label %164

163:                                              ; preds = %192, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #13
  br label %217

164:                                              ; preds = %148, %192
  %165 = call dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator.2339"* nonnull %7)
  %166 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %165, i64 0, i32 0
  %167 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %167, i64 0, i32 3
  %169 = bitcast i24* %168 to i32*
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 64
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %162, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #13
  %174 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %165, i64 0, i32 1
  %175 = bitcast %"struct.blink::PhysicalOffset"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %166, align 8
  %178 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %177, i64 0, i32 2
  %179 = bitcast %"struct.blink::PhysicalSize"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  store i64 %176, i64* %154, align 8
  store i64 %180, i64* %156, align 8
  %181 = call { i64, i64 } @_ZNK5blink18NGPhysicalFragment21ConvertChildToLogicalERKNS_12PhysicalRectE(%"class.blink::NGPhysicalFragment"* %152, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #13
  %182 = extractvalue { i64, i64 } %181, 0
  store i64 %182, i64* %157, align 8
  %183 = extractvalue { i64, i64 } %181, 1
  store i64 %183, i64* %150, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #13
  %184 = trunc i64 %183 to i32
  %185 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %184, i32 64) #13
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 2147483647, i32 %187, !prof !9
  store i32 %188, i32* %151, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #13
  %189 = call { i64, i64 } @_ZNK5blink18NGPhysicalFragment22ConvertChildToPhysicalERKNS_11LogicalRectE(%"class.blink::NGPhysicalFragment"* %152, %"struct.blink::LogicalRect"* nonnull dereferenceable(16) %10) #13
  %190 = extractvalue { i64, i64 } %189, 0
  %191 = extractvalue { i64, i64 } %189, 1
  store i64 %190, i64* %160, align 8
  store i64 %191, i64* %161, align 8
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %158, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %13) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #13
  br label %192

192:                                              ; preds = %164, %173
  %193 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.2339"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator.2339"* nonnull %7)
  call void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2339"* nonnull %7, %"class.base::CheckedContiguousIterator.2339"* nonnull dereferenceable(24) %8) #13
  %194 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %139, align 8
  %195 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %143, align 8
  %196 = icmp eq %"struct.blink::NGLink"* %194, %195
  br i1 %196, label %163, label %164

197:                                              ; preds = %1, %51, %59, %76, %62, %68, %66
  %198 = phi i32 [ 0, %62 ], [ 0, %68 ], [ 0, %66 ], [ %53, %51 ], [ 64, %76 ], [ 0, %59 ], [ 0, %1 ]
  %199 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %200 = bitcast %"class.blink::InlineFlowBox"** %199 to %"class.blink::RootInlineBox"**
  %201 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %200, align 8
  %202 = icmp eq %"class.blink::RootInlineBox"* %201, null
  br i1 %202, label %217, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %205 = bitcast { i64, i64 }* %14 to i8*
  %206 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  %207 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  br label %208

208:                                              ; preds = %203, %208
  %209 = phi %"class.blink::RootInlineBox"* [ %201, %203 ], [ %215, %208 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #13
  %210 = call { i64, i64 } @_ZNK5blink13RootInlineBox24PaddedLayoutOverflowRectENS_10LayoutUnitE(%"class.blink::RootInlineBox"* nonnull %209, i32 %198) #13
  %211 = extractvalue { i64, i64 } %210, 0
  store i64 %211, i64* %206, align 8
  %212 = extractvalue { i64, i64 } %210, 1
  store i64 %212, i64* %207, align 8
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %204, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %15) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #13
  %213 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %209, i64 0, i32 0, i32 5
  %214 = bitcast %"class.blink::InlineFlowBox"** %213 to %"class.blink::RootInlineBox"**
  %215 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %214, align 8
  %216 = icmp eq %"class.blink::RootInlineBox"* %215, null
  br i1 %216, label %217, label %208

217:                                              ; preds = %208, %197, %135, %163
  ret void
}

declare zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink18NGPhysicalFragment21ConvertChildToLogicalERKNS_12PhysicalRectE(%"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink18NGPhysicalFragment22ConvertChildToPhysicalERKNS_11LogicalRectE(%"class.blink::NGPhysicalFragment"*, %"struct.blink::LogicalRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NGLink"* @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEEdeEv(%"class.base::CheckedContiguousIterator.2339"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  ret %"struct.blink::NGLink"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.2339"* @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEppEv(%"class.base::CheckedContiguousIterator.2339"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %11 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %12 = icmp eq %"struct.blink::NGLink"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %17 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i8* %16, i8* %18) #13
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %26 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %7, align 8
  %27 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %26, i64 1
  store %"struct.blink::NGLink"* %27, %"struct.blink::NGLink"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.2339"* %0
}

declare { i64, i64 } @_ZNK5blink13RootInlineBox24PaddedLayoutOverflowRectENS_10LayoutUnitE(%"class.blink::RootInlineBox"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow23DeleteEllipsisLineBoxesEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %10 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %10, i64 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 58
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 15
  store i32 %16, i32* %3, align 4
  %17 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::InlineFlowBox"** %17 to %"class.blink::RootInlineBox"**
  %19 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %18, align 8
  %20 = icmp eq %"class.blink::RootInlineBox"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %1
  %22 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  %24 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %25 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %27 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %30 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %31 = bitcast i64* %2 to i8*
  br label %33

32:                                               ; preds = %130, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #13
  ret void

33:                                               ; preds = %21, %130
  %34 = phi %"class.blink::RootInlineBox"* [ %19, %21 ], [ %133, %130 ]
  %35 = phi i32 [ 1, %21 ], [ 0, %130 ]
  %36 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0, i32 7, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = trunc i32 %37 to i16
  %39 = icmp slt i16 %38, 0
  br i1 %39, label %40, label %88

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0
  call void @_ZN5blink13RootInlineBox15ClearTruncationEv(%"class.blink::RootInlineBox"* nonnull %34) #13
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  store i32 -1431655766, i32* %23, align 4
  %42 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 5, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %24) #13
  %45 = call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %43, i32 %44, i32 0) #13
  %46 = call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %45, i32 %35) #13
  store i32 %46, i32* %23, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #13
  store i32 -1431655766, i32* %26, align 4
  %47 = load i32, i32* %42, align 8
  %48 = call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %24) #13
  %49 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %27) #13
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %49) #13
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !9
  %56 = call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %47, i32 %55, i32 0) #13
  %57 = call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %56, i32 0) #13
  %58 = load i32, i32* %23, align 4
  %59 = icmp sgt i32 %58, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %57, i32 %58) #13
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !9
  store i32 %64, i32* %26, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %65 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0, i32 6, i32 0
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %29, align 4
  call void @_ZN5blink15LayoutBlockFlow30UpdateLogicalWidthForAlignmentERKNS_10ETextAlignEPKNS_13RootInlineBoxEPNS_7BidiRunERNS_10LayoutUnitESA_SA_j(%"class.blink::LayoutBlockFlow"* %0, i32* nonnull dereferenceable(4) %3, %"class.blink::RootInlineBox"* nonnull %34, %"struct.blink::BidiRun"* null, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5, i32 0)
  %67 = load i32, i32* %36, align 4
  %68 = and i32 %67, 2048
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %72 = select i1 %69, i32* %71, i32* %70
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* %23, align 4
  %75 = icmp sgt i32 %73, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %73) #13
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = select i1 %69, i64 %82, i64 %81
  store i64 %83, i64* %2, align 8
  %84 = bitcast %"class.blink::RootInlineBox"* %34 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  %85 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %85, i64 10
  %87 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %86, align 8
  call void %87(%"class.blink::InlineBox"* %41, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %30) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  br label %88

88:                                               ; preds = %40, %33
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = and i160 %92, 41538374868278621028243970633760768
  %94 = icmp eq i160 %93, 0
  %95 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 3
  %96 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 2
  %97 = select i1 %94, %"class.blink::InlineBox"** %95, %"class.blink::InlineBox"** %96
  %98 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %97, align 8
  %99 = icmp eq %"class.blink::InlineBox"* %98, null
  br i1 %99, label %130, label %100

100:                                              ; preds = %88, %124
  %101 = phi %"class.blink::InlineBox"* [ %128, %124 ], [ %98, %88 ]
  %102 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 4, i32 0
  %103 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 4
  %105 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %104 to i96*
  %106 = load i96, i96* %105, align 4
  %107 = and i96 %106, 1073741824
  %108 = icmp eq i96 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %100
  %110 = bitcast %"class.blink::LayoutObject"* %103 to i1 (%"class.blink::LayoutObject"*)***
  %111 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %110, align 8
  %112 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %111, i64 24
  %113 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %112, align 8
  %114 = call zeroext i1 %113(%"class.blink::LayoutObject"* %103) #13
  br i1 %114, label %115, label %124

115:                                              ; preds = %109
  %116 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, align 8
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %116, i64 0, i32 4
  %118 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %117 to i96*
  %119 = load i96, i96* %118, align 4
  %120 = and i96 %119, 72057594037927936
  %121 = icmp eq i96 %120, 0
  br i1 %121, label %130, label %122

122:                                              ; preds = %115
  %123 = and i96 %119, -72057594037927937
  store i96 %123, i96* %118, align 4
  br label %124

124:                                              ; preds = %122, %109, %100
  %125 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 2
  %126 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %101, i64 0, i32 1
  %127 = select i1 %94, %"class.blink::InlineBox"** %125, %"class.blink::InlineBox"** %126
  %128 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %127, align 8
  %129 = icmp eq %"class.blink::InlineBox"* %128, null
  br i1 %129, label %130, label %100

130:                                              ; preds = %115, %124, %88
  %131 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %34, i64 0, i32 0, i32 5
  %132 = bitcast %"class.blink::InlineFlowBox"** %131 to %"class.blink::RootInlineBox"**
  %133 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %132, align 8
  %134 = icmp eq %"class.blink::RootInlineBox"* %133, null
  br i1 %134, label %32, label %33
}

declare void @_ZN5blink13RootInlineBox15ClearTruncationEv(%"class.blink::RootInlineBox"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow30ClearTruncationOnAtomicInlinesEPNS_13RootInlineBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::RootInlineBox"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 41538374868278621028243970633760768
  %9 = icmp eq i160 %8, 0
  %10 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 3
  %11 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 2
  %12 = select i1 %9, %"class.blink::InlineBox"** %10, %"class.blink::InlineBox"** %11
  %13 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %12, align 8
  %14 = icmp eq %"class.blink::InlineBox"* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %2, %39
  %16 = phi %"class.blink::InlineBox"* [ %43, %39 ], [ %13, %2 ]
  %17 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %16, i64 0, i32 4, i32 0
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 1073741824
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %39, label %24

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*)***
  %26 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, i64 24
  %28 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %18) #13
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 72057594037927936
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %30
  %38 = and i96 %34, -72057594037927937
  store i96 %38, i96* %33, align 4
  br label %39

39:                                               ; preds = %15, %24, %37
  %40 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %16, i64 0, i32 2
  %41 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %16, i64 0, i32 1
  %42 = select i1 %9, %"class.blink::InlineBox"** %40, %"class.blink::InlineBox"** %41
  %43 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %42, align 8
  %44 = icmp eq %"class.blink::InlineBox"* %43, null
  br i1 %44, label %45, label %15

45:                                               ; preds = %39, %30, %2
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #2

declare zeroext i16 @_ZNK5blink14SimpleFontData17GlyphForCharacterEi(%"class.blink::SimpleFontData"*, i32) local_unnamed_addr #2

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.2276"*, %"class.blink::FloatRect"*) local_unnamed_addr #2

declare void @_ZN5blink16ConstructTextRunERKNS_4FontEPKDsiRKNS_13ComputedStyleENS_13TextDirectionE(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), i16*, i32, %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink13RootInlineBox26LineCanAccommodateEllipsisEbNS_10LayoutUnitES1_S1_(%"class.blink::RootInlineBox"*, i1 zeroext, i32, i32, i32) local_unnamed_addr #2

declare i32 @_ZN5blink13RootInlineBox13PlaceEllipsisERKN3WTF12AtomicStringEbNS_10LayoutUnitES5_S5_S5_PPNS_9InlineBoxENS_19ForceEllipsisOnLineE(%"class.blink::RootInlineBox"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, %"class.blink::InlineBox"**, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow33TryPlacingEllipsisOnAtomicInlinesEPNS_13RootInlineBoxENS_10LayoutUnitES3_S3_RKN3WTF12AtomicStringEPNS_9InlineBoxE(%"class.blink::LayoutBlockFlow"* nocapture readonly, %"class.blink::RootInlineBox"* nocapture readonly, i32, i32, i32, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::InlineBox"* readonly) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::InlineBox"*, align 8
  %9 = alloca %"class.blink::InlineBox"*, align 8
  %10 = icmp ne %"class.blink::InlineBox"* %6, null
  %11 = zext i1 %10 to i8
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 41538374868278621028243970633760768
  %18 = icmp eq i160 %17, 0
  br i1 %10, label %25, label %19

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1, i64 0, i32 0, i32 3
  %22 = select i1 %18, %"class.blink::InlineBox"** %20, %"class.blink::InlineBox"** %21
  %23 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %22, align 8
  %24 = icmp eq %"class.blink::InlineBox"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %7, %19
  %26 = phi %"class.blink::InlineBox"* [ %23, %19 ], [ %6, %7 ]
  %27 = icmp sgt i32 %4, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = bitcast %"class.blink::InlineBox"** %9 to i8*
  %30 = icmp slt i32 %4, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = bitcast %"class.blink::InlineBox"** %8 to i8*
  br label %34

33:                                               ; preds = %194, %19
  ret void

34:                                               ; preds = %25, %194
  %35 = phi i8 [ %11, %25 ], [ %196, %194 ]
  %36 = phi %"class.blink::InlineBox"* [ %26, %25 ], [ %200, %194 ]
  %37 = phi i32 [ %3, %25 ], [ %195, %194 ]
  %38 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 4, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 1073741824
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %34
  %46 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*)***
  %47 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %47, i64 24
  %49 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %48, align 8
  %50 = call zeroext i1 %49(%"class.blink::LayoutObject"* %39) #13
  br i1 %50, label %69, label %51

51:                                               ; preds = %45
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  br label %56

56:                                               ; preds = %51, %34
  %57 = phi i96 [ %55, %51 ], [ %42, %34 ]
  %58 = and i96 %57, 33554432
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %194, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 6, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %62) #13
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !9
  br label %194

69:                                               ; preds = %45
  %70 = and i8 %35, 1
  %71 = icmp eq i8 %70, 0
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  br i1 %71, label %78, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = or i96 %76, 72057594037927936
  store i96 %77, i96* %75, align 4
  br label %194

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 2, i32 9
  %80 = bitcast %"class.blink::LayoutObject"** %79 to %"class.blink::RootInlineBox"**
  %81 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %80, align 8
  %82 = icmp eq %"class.blink::RootInlineBox"* %81, null
  br i1 %82, label %194, label %83

83:                                               ; preds = %78
  br i1 %18, label %84, label %122

84:                                               ; preds = %83, %116
  %85 = phi i8 [ %117, %116 ], [ 0, %83 ]
  %86 = phi %"class.blink::RootInlineBox"* [ %120, %116 ], [ %81, %83 ]
  %87 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %86, i64 0, i32 0, i32 0, i32 7, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = and i32 %88, 2048
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %86, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %92 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %86, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %93 = select i1 %90, i32* %92, i32* %91
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %94) #13
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !9
  %101 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %86, i64 0, i32 0, i32 0, i32 6, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %102) #13
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !9
  %109 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %4) #13
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %31, i32 %111, !prof !9
  %113 = icmp sgt i32 %112, %2
  br i1 %113, label %114, label %116

114:                                              ; preds = %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %8, align 8
  %115 = call i32 @_ZN5blink13RootInlineBox13PlaceEllipsisERKN3WTF12AtomicStringEbNS_10LayoutUnitES5_S5_S5_PPNS_9InlineBoxENS_19ForceEllipsisOnLineE(%"class.blink::RootInlineBox"* nonnull %86, %"class.WTF::AtomicString"* dereferenceable(8) %5, i1 zeroext true, i32 %3, i32 %2, i32 %4, i32 %37, %"class.blink::InlineBox"** nonnull %8, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %116

116:                                              ; preds = %84, %114
  %117 = phi i8 [ 1, %114 ], [ %85, %84 ]
  %118 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %86, i64 0, i32 0, i32 5
  %119 = bitcast %"class.blink::InlineFlowBox"** %118 to %"class.blink::RootInlineBox"**
  %120 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %119, align 8
  %121 = icmp eq %"class.blink::RootInlineBox"* %120, null
  br i1 %121, label %183, label %84

122:                                              ; preds = %83
  %123 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 7, i32 0
  %124 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 5, i32 0, i32 0
  %125 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 5, i32 1, i32 0
  br label %126

126:                                              ; preds = %122, %176
  %127 = phi i32 [ 0, %122 ], [ %177, %176 ]
  %128 = phi %"class.blink::RootInlineBox"* [ %81, %122 ], [ %181, %176 ]
  %129 = phi i8 [ 0, %122 ], [ %178, %176 ]
  %130 = load i32, i32* %123, align 4
  %131 = and i32 %130, 2048
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i32* %125, i32* %124
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %128, i64 0, i32 0, i32 0, i32 7, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 2048
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %128, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %128, i64 0, i32 0, i32 0, i32 5, i32 1, i32 0
  %141 = select i1 %138, i32* %140, i32* %139
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %142) #13
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !9
  %149 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 %4) #13
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %28, i32 %151, !prof !9
  %153 = icmp slt i32 %152, %3
  br i1 %153, label %154, label %176

154:                                              ; preds = %126
  %155 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %128, i64 0, i32 0, i32 0, i32 6, i32 0
  %156 = load i32, i32* %155, align 8
  %157 = icmp slt i32 %156, %127
  %158 = select i1 %157, i32 %127, i32 %156
  %159 = icmp slt i32 %134, 0
  br i1 %159, label %160, label %173

160:                                              ; preds = %154
  %161 = icmp sgt i32 %156, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %156) #13
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !9
  %167 = icmp slt i32 %166, 0
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %166) #13
  %170 = extractvalue { i32, i1 } %169, 1
  %171 = extractvalue { i32, i1 } %169, 0
  %172 = select i1 %170, i32 %168, i32 %171, !prof !9
  br label %173

173:                                              ; preds = %160, %154
  %174 = phi i32 [ %172, %160 ], [ %134, %154 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %9, align 8
  %175 = call i32 @_ZN5blink13RootInlineBox13PlaceEllipsisERKN3WTF12AtomicStringEbNS_10LayoutUnitES5_S5_S5_PPNS_9InlineBoxENS_19ForceEllipsisOnLineE(%"class.blink::RootInlineBox"* nonnull %128, %"class.WTF::AtomicString"* dereferenceable(8) %5, i1 zeroext false, i32 %3, i32 %2, i32 %4, i32 %174, %"class.blink::InlineBox"** nonnull %9, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %176

176:                                              ; preds = %126, %173
  %177 = phi i32 [ %158, %173 ], [ %127, %126 ]
  %178 = phi i8 [ 1, %173 ], [ %129, %126 ]
  %179 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %128, i64 0, i32 0, i32 5
  %180 = bitcast %"class.blink::InlineFlowBox"** %179 to %"class.blink::RootInlineBox"**
  %181 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %180, align 8
  %182 = icmp eq %"class.blink::RootInlineBox"* %181, null
  br i1 %182, label %183, label %126

183:                                              ; preds = %176, %116
  %184 = phi i8 [ %117, %116 ], [ %178, %176 ]
  %185 = and i8 %184, 1
  %186 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 6, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = icmp slt i32 %187, 0
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %187) #13
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !9
  br label %194

194:                                              ; preds = %56, %183, %78, %60, %73
  %195 = phi i32 [ %37, %78 ], [ %193, %183 ], [ %37, %73 ], [ %68, %60 ], [ %37, %56 ]
  %196 = phi i8 [ %35, %78 ], [ %185, %183 ], [ %35, %73 ], [ %35, %60 ], [ %35, %56 ]
  %197 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 1
  %198 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %36, i64 0, i32 2
  %199 = select i1 %18, %"class.blink::InlineBox"** %197, %"class.blink::InlineBox"** %198
  %200 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %199, align 8
  %201 = icmp eq %"class.blink::InlineBox"* %200, null
  br i1 %201, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1190036353683150593851392
  %14 = icmp eq i160 %13, 340010386766614455386112
  %15 = and i96 %4, 8589934592
  %16 = icmp eq i96 %15, 0
  %17 = or i1 %14, %16
  br i1 %6, label %18, label %78

18:                                               ; preds = %1
  br i1 %17, label %43, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #13
  %22 = icmp eq %"class.blink::PaintLayerScrollableArea"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #13
  %25 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 3
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %30, align 8
  %32 = icmp eq %"class.blink::Scrollbar"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %29, %23
  %34 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #13
  %35 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %40, align 8
  %42 = icmp eq %"class.blink::Scrollbar"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %33, %18
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 270215977642229760
  %49 = icmp eq i160 %48, 0
  br label %50

50:                                               ; preds = %19, %29, %39, %43
  %51 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %19 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 124
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #13
  br i1 %51, label %69, label %58

58:                                               ; preds = %50
  %59 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #13
  %60 = extractvalue { i64, i64 } %59, 1
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %62) #13
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !9
  br label %69

69:                                               ; preds = %50, %58
  %70 = phi i32 [ %68, %58 ], [ %57, %50 ]
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, i64 120
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %52) #13
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %74) #13
  br label %137

78:                                               ; preds = %1
  br i1 %17, label %103, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %81 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #13
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #13
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 3
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 1, i32 0, i32 0
  %91 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %90, align 8
  %92 = icmp eq %"class.blink::Scrollbar"* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %89, %83
  %94 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #13
  %95 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 3
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %100, align 8
  %102 = icmp eq %"class.blink::Scrollbar"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %93, %78
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = and i160 %107, 270215977642229760
  %109 = icmp eq i160 %108, 0
  br label %110

110:                                              ; preds = %79, %89, %99, %103
  %111 = phi i1 [ false, %99 ], [ false, %89 ], [ false, %79 ], [ %109, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %113 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %112) #13
  br i1 %111, label %128, label %118

118:                                              ; preds = %110
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #13
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %121) #13
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !9
  br label %128

128:                                              ; preds = %110, %118
  %129 = phi i32 [ %127, %118 ], [ %117, %110 ]
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, i64 118
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %112) #13
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %133) #13
  br label %137

137:                                              ; preds = %128, %69
  %138 = phi { i32, i1 } [ %136, %128 ], [ %77, %69 ]
  %139 = phi i32 [ %135, %128 ], [ %76, %69 ]
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = extractvalue { i32, i1 } %138, 0
  %142 = select i1 %140, i32 %139, i32 %141
  ret i32 %142
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink15LayoutBlockFlow25StartAlignedOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 58
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 15
  store i32 %16, i32* %4, align 4
  switch i32 %16, label %25 [
    i32 0, label %20
    i32 4, label %20
    i32 1, label %17
    i32 5, label %17
    i32 7, label %23
  ]

17:                                               ; preds = %3, %3
  %18 = and i160 %13, 41538374868278621028243970633760768
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %25, label %23

20:                                               ; preds = %3, %3
  %21 = and i160 %13, 41538374868278621028243970633760768
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %17, %3, %20
  %24 = tail call i32 @_ZNK5blink15LayoutBlockFlow18StartOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %2, i32 0)
  br label %89

25:                                               ; preds = %17, %3, %20
  %26 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 0, i32* %27, align 4
  %28 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #13
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %31 = and i160 %13, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 0
  %33 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %35 = select i1 %32, i32* %33, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %38 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %37) #13
  %39 = tail call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %36, i32 %38, i32 0) #13
  %40 = tail call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %39, i32 0) #13
  store i32 %40, i32* %29, align 4
  %41 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %41) #13
  %42 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 15211807202738752817960438464512
  %48 = icmp eq i160 %47, 0
  %49 = select i1 %48, i32* %33, i32* %34
  %50 = load i32, i32* %49, align 4
  %51 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %37) #13
  %52 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %30) #13
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !9
  %59 = tail call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %50, i32 %58, i32 0) #13
  %60 = tail call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %59, i32 0) #13
  %61 = icmp sgt i32 %40, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %40) #13
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !9
  store i32 %66, i32* %42, align 4
  call void @_ZN5blink15LayoutBlockFlow30UpdateLogicalWidthForAlignmentERKNS_10ETextAlignEPKNS_13RootInlineBoxEPNS_7BidiRunERNS_10LayoutUnitESA_SA_j(%"class.blink::LayoutBlockFlow"* %0, i32* nonnull dereferenceable(4) %4, %"class.blink::RootInlineBox"* null, %"struct.blink::BidiRun"* null, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7, i32 0)
  %67 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %67, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = and i160 %70, 41538374868278621028243970633760768
  %72 = icmp eq i160 %71, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %25
  %74 = and i160 %70, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = select i1 %75, i32* %34, i32* %33
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* %29, align 4
  %79 = icmp sgt i32 %78, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %78) #13
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !9
  br label %87

85:                                               ; preds = %25
  %86 = load i32, i32* %29, align 4
  br label %87

87:                                               ; preds = %85, %73
  %88 = phi i32 [ %86, %85 ], [ %84, %73 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #13
  br label %89

89:                                               ; preds = %87, %23
  %90 = phi i32 [ %24, %23 ], [ %88, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow18StartOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotES1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %4
  %13 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %14 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %13) #13
  %15 = tail call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %14, i32 %3) #13
  %16 = tail call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %15, i32 %2) #13
  br label %42

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  %19 = and i160 %9, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 0
  %21 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %23 = select i1 %20, i32* %21, i32* %22
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %0 to %"class.blink::LayoutBlock"*
  %26 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %25) #13
  %27 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %18) #13
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %27) #13
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !9
  %34 = tail call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %33, i32 %3) #13
  %35 = tail call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %0, i32 %34, i32 %2) #13
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %35) #13
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !9
  br label %42

42:                                               ; preds = %17, %12
  %43 = phi i32 [ %16, %12 ], [ %41, %17 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15LayoutBlockFlow44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", align 8
  %3 = alloca %"class.blink::NGInlineCursor", align 8
  %4 = alloca %"class.blink::NGInlineCursor", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %55, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %2, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %13 = load %class.scoped_refptr.1625*, %class.scoped_refptr.1625** %12, align 8
  store %class.scoped_refptr.1625* %13, %class.scoped_refptr.1625** %11, align 8
  %14 = zext i32 %7 to i64
  %15 = getelementptr inbounds %class.scoped_refptr.1625, %class.scoped_refptr.1625* %13, i64 %14
  %16 = bitcast %"class.blink::NGInlineCursor"* %3 to i8*
  %17 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %3, i64 0, i32 0, i32 0
  br label %18

18:                                               ; preds = %9, %50
  %19 = call dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nonnull %2) #13
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false)
  call void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGInlineCursor"* nonnull %3, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72) %19) #13
  %20 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %17, align 8
  %21 = icmp eq %"class.blink::NGFragmentItem"* %20, null
  br i1 %21, label %50, label %22

22:                                               ; preds = %18
  call void @_ZN5blink14NGInlineCursor15MoveToFirstLineEv(%"class.blink::NGInlineCursor"* nonnull %3) #13
  %23 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %17, align 8
  %24 = icmp eq %"class.blink::NGFragmentItem"* %23, null
  br i1 %24, label %50, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %23, i64 0, i32 6
  %27 = load i16, i16* %26, align 8
  %28 = and i16 %27, 192
  %29 = icmp eq i16 %28, 64
  br i1 %29, label %30, label %50

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::NGInlineCursor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 112, i1 false)
  call void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* nonnull sret %4, %"class.blink::NGInlineCursor"* nonnull %3) #13
  %32 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %4, i64 0, i32 0, i32 0
  %33 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %32, align 8
  %34 = icmp eq %"class.blink::NGFragmentItem"* %33, null
  br i1 %34, label %47, label %35

35:                                               ; preds = %30, %44
  %36 = phi %"class.blink::NGFragmentItem"* [ %45, %44 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.blink::NGFragmentItem", %"class.blink::NGFragmentItem"* %36, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, null
  br i1 %39, label %40, label %41, !prof !9

40:                                               ; preds = %35
  call void @_ZN5blink14NGInlineCursor26MoveToNextSkippingChildrenEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  br label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  call void @_ZNK5blink13ComputedStyle30ClearCachedPseudoElementStylesEv(%"class.blink::ComputedStyle"* %43) #13
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %38, i8 zeroext 3) #13
  br label %44

44:                                               ; preds = %41, %40
  call void @_ZN5blink14NGInlineCursor10MoveToNextEv(%"class.blink::NGInlineCursor"* nonnull %4) #13
  %45 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %32, align 8
  %46 = icmp eq %"class.blink::NGFragmentItem"* %45, null
  br i1 %46, label %47, label %35

47:                                               ; preds = %44, %30
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #13
  %48 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  call void @_ZNK5blink13ComputedStyle30ClearCachedPseudoElementStylesEv(%"class.blink::ComputedStyle"* %49) #13
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %5, i8 zeroext 3) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #13
  br label %54

50:                                               ; preds = %22, %18, %25
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #13
  %51 = load %class.scoped_refptr.1625*, %class.scoped_refptr.1625** %11, align 8
  %52 = getelementptr inbounds %class.scoped_refptr.1625, %class.scoped_refptr.1625* %51, i64 1
  store %class.scoped_refptr.1625* %52, %class.scoped_refptr.1625** %11, align 8
  %53 = icmp eq %class.scoped_refptr.1625* %52, %15
  br i1 %53, label %54, label %18

54:                                               ; preds = %50, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  br label %62

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = bitcast %"class.blink::InlineFlowBox"** %56 to %"class.blink::RootInlineBox"**
  %58 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %57, align 8
  %59 = icmp eq %"class.blink::RootInlineBox"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %58, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9InlineBox44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::InlineBox"* %61) #13
  br label %62

62:                                               ; preds = %54, %60, %55
  ret void
}

declare void @_ZN5blink14NGInlineCursorC1ERKNS_21NGPhysicalBoxFragmentE(%"class.blink::NGInlineCursor"*, %"class.blink::NGPhysicalBoxFragment"* dereferenceable(72)) unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor15MoveToFirstLineEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare void @_ZNK5blink14NGInlineCursor20CursorForDescendantsEv(%"class.blink::NGInlineCursor"* sret, %"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare void @_ZNK5blink13ComputedStyle30ClearCachedPseudoElementStylesEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare void @_ZN5blink14NGInlineCursor10MoveToNextEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #2

declare void @_ZN5blink9InlineBox44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #2

declare %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow28CreateAndAppendRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #2

declare %"class.blink::InlineFlowBox"* @_ZN5blink12LayoutInline28CreateAndAppendInlineFlowBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #2

declare %"class.blink::InlineTextBox"* @_ZN5blink10LayoutText19CreateInlineTextBoxEit(%"class.blink::LayoutText"*, i32, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #6

declare i32 @_ZNK5blink11LayoutBlock30MinLineHeightForReplacedObjectEbNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) local_unnamed_addr #2

declare i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i8*, i8 zeroext, i8* dereferenceable(1), i32) local_unnamed_addr #2

declare i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i16*, i8 zeroext, i8* dereferenceable(1), i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRjEEvOT_(%"class.WTF::Vector.2282"*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2282"* %0, i32 %5) #13
  %14 = load i32*, i32** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i32* %1 to i64
  %17 = ptrtoint i32* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 2
  tail call void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2282"* %0, i32 %5) #13
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i32* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i32* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %23, i64 %26
  %28 = load i32, i32* %24, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2282"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !10

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2282"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 2
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2282"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 16, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2282"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2282"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i32*
  %10 = icmp eq i32* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2282"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2282"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !9

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i32* %6 to i8*
  %27 = shl nuw nsw i64 %25, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIjLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.2283"* %19, i32* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 2
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i32* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !10

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i32* %36 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #13
  %46 = load i32*, i32** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i32* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i32* %48, %50
  br i1 %51, label %54, label %52, !prof !10

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIjLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.2283"* %53, i32* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2282"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIjLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPj(%"class.WTF::VectorBuffer.2283"*, i32*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @u_charDirection_69(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Font18CanShapeWordByWordEv(%"class.blink::Font"*) local_unnamed_addr #2

declare void @_ZN5blink9FloatRect5UniteERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13GlyphOverflow13SetFromBoundsERKNS_9FloatRectERKNS_4FontEf(%"struct.blink::GlyphOverflow"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::Font"* dereferenceable(88), float) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %2) #13
  %14 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %13, i64 0, i32 2
  %15 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %14, align 8
  %16 = icmp eq %"class.blink::SimpleFontData"* %15, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %2, i64 0, i32 0
  %19 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %13, %"class.blink::FontDescription"* dereferenceable(80) %18) #13
  store %"class.blink::SimpleFontData"* %19, %"class.blink::SimpleFontData"** %14, align 8
  %20 = icmp eq %"class.blink::SimpleFontData"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4, %17
  %22 = phi %"class.blink::SimpleFontData"* [ %19, %17 ], [ %15, %4 ]
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %22, i64 0, i32 1, i32 2
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %17, %21
  %28 = phi float [ %24, %21 ], [ 0.000000e+00, %17 ]
  %29 = phi float [ %26, %21 ], [ 0.000000e+00, %17 ]
  %30 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store float 0.000000e+00, float* %5, align 4
  %31 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31)
  %32 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 1
  %33 = load float, float* %32, align 4
  %34 = fsub float -0.000000e+00, %33
  %35 = fsub float %34, %28
  store float %35, float* %6, align 4
  %36 = fcmp ogt float %35, 0.000000e+00
  %37 = select i1 %36, float* %6, float* %5
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 2
  %41 = bitcast float* %40 to i32*
  store i32 %39, i32* %41, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30)
  %42 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store float 0.000000e+00, float* %7, align 4
  %43 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  %44 = load float, float* %32, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 1
  %46 = load float, float* %45, align 4
  %47 = fadd float %44, %46
  %48 = fsub float %47, %29
  store float %48, float* %8, align 4
  %49 = fcmp ogt float %48, 0.000000e+00
  %50 = select i1 %49, float* %8, float* %7
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 3
  %54 = bitcast float* %53 to i32*
  store i32 %52, i32* %54, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  %55 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  store float 0.000000e+00, float* %9, align 4
  %56 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56)
  %57 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = fsub float -0.000000e+00, %58
  store float %59, float* %10, align 4
  %60 = fcmp olt float %58, 0.000000e+00
  %61 = select i1 %60, float* %10, float* %9
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = bitcast %"struct.blink::GlyphOverflow"* %0 to i32*
  store i32 %63, i32* %64, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  %65 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  store float 0.000000e+00, float* %11, align 4
  %66 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66)
  %67 = load float, float* %57, align 4
  %68 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1, i32 0
  %69 = load float, float* %68, align 4
  %70 = fadd float %67, %69
  %71 = fsub float %70, %3
  store float %71, float* %12, align 4
  %72 = fcmp ogt float %71, 0.000000e+00
  %73 = select i1 %72, float* %12, float* %11
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.blink::GlyphOverflow", %"struct.blink::GlyphOverflow"* %0, i64 0, i32 1
  %77 = bitcast float* %76 to i32*
  store i32 %75, i32* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12CopyToVectorINS_7HashSetIPKN5blink14SimpleFontDataENS_7PtrHashIS4_EENS_10HashTraitsIS5_EENS_18PartitionAllocatorEEENS_6VectorIS5_Lj0ESA_EEEEvRKT_RT0_(%"class.WTF::HashSet.2276"* dereferenceable(24), %"class.WTF::Vector.2263"* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %0, i64 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %6, %4
  br i1 %7, label %8, label %63

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp ult i32 %10, %4
  br i1 %11, label %12, label %51

12:                                               ; preds = %8
  %13 = lshr i32 %10, 2
  %14 = add nuw i32 %10, 1
  %15 = add i32 %14, %13
  %16 = icmp ugt i32 %15, 4
  %17 = select i1 %16, i32 %15, i32 4
  %18 = icmp ugt i32 %17, %4
  %19 = select i1 %18, i32 %17, i32 %4
  %20 = icmp ult i32 %10, %19
  br i1 %20, label %21, label %51, !prof !10

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %22, align 8
  %24 = icmp eq %"class.blink::SimpleFontData"** %23, null
  %25 = zext i32 %19 to i64
  %26 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink14SimpleFontDataEEEmm(i64 %25) #13
  %27 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %26, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink14SimpleFontDataEEEPKcv, i64 0, i64 0)) #13
  br i1 %24, label %28, label %33

28:                                               ; preds = %21
  %29 = ptrtoint i8* %27 to i64
  %30 = bitcast %"class.WTF::Vector.2263"* %1 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = lshr i64 %26, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %9, align 8
  br label %51

33:                                               ; preds = %21
  %34 = lshr i64 %26, 3
  %35 = ptrtoint i8* %27 to i64
  %36 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %22, align 8
  %37 = icmp ne i8* %27, null
  %38 = icmp ne %"class.blink::SimpleFontData"** %36, null
  %39 = and i1 %37, %38
  %40 = bitcast %"class.blink::SimpleFontData"** %36 to i8*
  br i1 %39, label %41, label %47, !prof !10

41:                                               ; preds = %33
  %42 = load i32, i32* %5, align 4
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %40, i64 %44, i1 false) #13
  %45 = bitcast %"class.WTF::Vector.2263"* %1 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %41, %33
  %48 = phi i8* [ %46, %41 ], [ %40, %33 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #13
  %49 = bitcast %"class.WTF::Vector.2263"* %1 to i64*
  store atomic i64 %35, i64* %49 monotonic, align 8
  %50 = trunc i64 %34 to i32
  store i32 %50, i32* %9, align 8
  br label %51

51:                                               ; preds = %47, %28, %12, %8
  %52 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %1, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %52, align 8
  %54 = load i32, i32* %5, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %53, i64 %55
  %57 = zext i32 %4 to i64
  %58 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %53, i64 %57
  %59 = bitcast %"class.blink::SimpleFontData"** %56 to i8*
  %60 = ptrtoint %"class.blink::SimpleFontData"** %58 to i64
  %61 = ptrtoint %"class.blink::SimpleFontData"** %56 to i64
  %62 = sub i64 %60, %61
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 %62, i1 false) #13
  br label %63

63:                                               ; preds = %2, %51
  store i32 %4, i32* %5, align 4
  %64 = load i32, i32* %3, align 4
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %0, i64 0, i32 0, i32 0
  %67 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::HashSet.2276", %"class.WTF::HashSet.2276"* %0, i64 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %67, i64 %70
  br i1 %65, label %84, label %72

72:                                               ; preds = %63
  %73 = icmp eq i32 %69, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %72, %78
  %75 = phi %"class.blink::SimpleFontData"** [ %79, %78 ], [ %67, %72 ]
  %76 = bitcast %"class.blink::SimpleFontData"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  switch i64 %77, label %81 [
    i64 -1, label %78
    i64 0, label %78
  ]

78:                                               ; preds = %74, %74
  %79 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %75, i64 1
  %80 = icmp eq %"class.blink::SimpleFontData"** %79, %71
  br i1 %80, label %84, label %74

81:                                               ; preds = %74, %72
  %82 = phi %"class.blink::SimpleFontData"** [ %67, %72 ], [ %75, %74 ]
  %83 = icmp eq %"class.blink::SimpleFontData"** %82, %71
  br i1 %83, label %84, label %85

84:                                               ; preds = %78, %85, %101, %98, %63, %81
  ret void

85:                                               ; preds = %81, %101
  %86 = phi i32 [ %102, %101 ], [ 0, %81 ]
  %87 = phi %"class.blink::SimpleFontData"** [ %95, %101 ], [ %82, %81 ]
  %88 = bitcast %"class.blink::SimpleFontData"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = tail call dereferenceable(8) %"class.blink::SimpleFontData"** @_ZN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2263"* %1, i32 %86) #13
  %91 = bitcast %"class.blink::SimpleFontData"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %87, i64 1
  %93 = icmp eq %"class.blink::SimpleFontData"** %92, %71
  br i1 %93, label %84, label %94

94:                                               ; preds = %85, %98
  %95 = phi %"class.blink::SimpleFontData"** [ %99, %98 ], [ %92, %85 ]
  %96 = bitcast %"class.blink::SimpleFontData"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %101 [
    i64 -1, label %98
    i64 0, label %98
  ]

98:                                               ; preds = %94, %94
  %99 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %95, i64 1
  %100 = icmp eq %"class.blink::SimpleFontData"** %99, %71
  br i1 %100, label %84, label %94

101:                                              ; preds = %94
  %102 = add i32 %86, 1
  %103 = icmp eq %"class.blink::SimpleFontData"** %95, %71
  br i1 %103, label %84, label %85
}

declare void @_ZN5blink9InlineBox26ClearKnownToHaveNoOverflowEv(%"class.blink::InlineBox"*) local_unnamed_addr #2

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleENS_13TextDirectionEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i8 zeroext, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle12HyphenStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::WordMeasurement"* @_ZNK3WTF6VectorIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2273"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2273", %"class.WTF::Vector.2273"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WordMeasurement"*, %"class.blink::WordMeasurement"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::WordMeasurement", %"class.blink::WordMeasurement"* %24, i64 %25
  ret %"class.blink::WordMeasurement"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::SimpleFontData"**, i8 } @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.2277"*, %"class.blink::SimpleFontData"** dereferenceable(8), %"class.blink::SimpleFontData"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 0
  %5 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %4, align 8
  %6 = icmp eq %"class.blink::SimpleFontData"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::SimpleFontData"** @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2277"* %0, %"class.blink::SimpleFontData"** null)
  %9 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::SimpleFontData"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::SimpleFontData"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %11, i64 %38
  %40 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %39, align 8
  %41 = icmp eq %"class.blink::SimpleFontData"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::SimpleFontData"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::SimpleFontData"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::SimpleFontData"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::SimpleFontData"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::SimpleFontData"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::SimpleFontData"* %58, inttoptr (i64 -1 to %"class.blink::SimpleFontData"*)
  %66 = select i1 %65, %"class.blink::SimpleFontData"** %59, %"class.blink::SimpleFontData"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %11, i64 %70
  %72 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %71, align 8
  %73 = icmp eq %"class.blink::SimpleFontData"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::SimpleFontData"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::SimpleFontData"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::SimpleFontData"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::SimpleFontData"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::SimpleFontData"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::SimpleFontData"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::SimpleFontData"** @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2277"* %0, %"class.blink::SimpleFontData"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::SimpleFontData"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::SimpleFontData"**, i8 } undef, %"class.blink::SimpleFontData"** %105, 0
  %107 = insertvalue { %"class.blink::SimpleFontData"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::SimpleFontData"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SimpleFontData"** @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.2277"*, %"class.blink::SimpleFontData"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #13
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #13
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #13
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #13
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink14SimpleFontDataEEEPKcv, i64 0, i64 0)) #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #13
  %36 = bitcast i8* %35 to %"class.blink::SimpleFontData"**
  %37 = call %"class.blink::SimpleFontData"** @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2277"* %0, %"class.blink::SimpleFontData"** %36, i32 %32, %"class.blink::SimpleFontData"** %1) #13
  ret %"class.blink::SimpleFontData"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SimpleFontData"** @_ZN3WTF9HashTableIPKN5blink14SimpleFontDataES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.2277"*, %"class.blink::SimpleFontData"**, i32, %"class.blink::SimpleFontData"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::SimpleFontData"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.2277"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %9, align 8
  %17 = ptrtoint %"class.blink::SimpleFontData"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.2277"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::SimpleFontData"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #13
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.2277", %"class.WTF::HashTable.2277"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::SimpleFontData"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::SimpleFontData"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::SimpleFontData"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %34, i64 %37
  %39 = bitcast %"class.blink::SimpleFontData"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %1, i64 %62
  %64 = ptrtoint %"class.blink::SimpleFontData"** %63 to i64
  %65 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %63, align 8
  %66 = icmp eq %"class.blink::SimpleFontData"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::SimpleFontData"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::SimpleFontData"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::SimpleFontData"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::SimpleFontData"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::SimpleFontData"** %87, null
  %89 = ptrtoint %"class.blink::SimpleFontData"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::SimpleFontData"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::SimpleFontData"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::SimpleFontData"* %93, inttoptr (i64 -1 to %"class.blink::SimpleFontData"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %1, i64 %104
  %106 = ptrtoint %"class.blink::SimpleFontData"** %105 to i64
  %107 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %105, align 8
  %108 = icmp eq %"class.blink::SimpleFontData"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::SimpleFontData"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %113, i64 %37
  %115 = icmp eq %"class.blink::SimpleFontData"** %114, %3
  %116 = select i1 %115, %"class.blink::SimpleFontData"** %111, %"class.blink::SimpleFontData"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::SimpleFontData"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::SimpleFontData"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::SimpleFontData"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2261"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6insertINS_17HashMapTranslatorISO_SJ_SC_EEPS2_SF_EENS_18HashTableAddResultISP_SG_EEOT0_OT1_(%"class.WTF::HashTable.2258"*, %"class.blink::InlineTextBox"** dereferenceable(8), %"struct.std::__1::pair.2262"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.blink::GlyphOverflow", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2261"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.2261"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6ExpandEPSG_(%"class.WTF::HashTable.2258"* %0, %"struct.WTF::KeyValuePair.2261"* null)
  %10 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.2261"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %40, i64 0, i32 0
  %42 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %41, align 8
  %43 = icmp eq %"class.blink::InlineTextBox"* %42, null
  %44 = inttoptr i64 %18 to %"class.blink::InlineTextBox"*
  br i1 %43, label %79, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %66
  %60 = phi %"class.blink::InlineTextBox"* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.2261"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.2261"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"class.blink::InlineTextBox"* %60, %44
  br i1 %65, label %130, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::InlineTextBox"* %60, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.2261"* %61, %"struct.WTF::KeyValuePair.2261"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %73, i64 0, i32 0
  %75 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %74, align 8
  %76 = icmp eq %"class.blink::InlineTextBox"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.2261"* %68, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %11, %77
  %80 = phi %"struct.WTF::KeyValuePair.2261"* [ %73, %77 ], [ %40, %11 ]
  %81 = bitcast %"struct.WTF::KeyValuePair.2261"* %80 to i64*
  br label %98

82:                                               ; preds = %77
  %83 = bitcast %"struct.blink::GlyphOverflow"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 16, i1 false)
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %68, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"struct.std::__1::pair.2262"* %84 to i64*
  %88 = bitcast %"struct.WTF::KeyValuePair.2261"* %68 to i64*
  store i64 0, i64* %88, align 8
  store atomic i64 0, i64* %87 monotonic, align 8
  store i32 0, i32* %85, align 4
  store i32 0, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %68, i64 0, i32 1, i32 1
  %90 = bitcast %"struct.blink::GlyphOverflow"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %83, i64 16, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83)
  %91 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 2147483647
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = load i64, i64* %17, align 8
  br label %98

98:                                               ; preds = %79, %82
  %99 = phi i64* [ %81, %79 ], [ %88, %82 ]
  %100 = phi i64 [ %18, %79 ], [ %97, %82 ]
  %101 = phi %"struct.WTF::KeyValuePair.2261"* [ %80, %79 ], [ %68, %82 ]
  store i64 %100, i64* %99, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %101, i64 0, i32 1
  %103 = bitcast %"struct.std::__1::pair.2262"* %2 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.2262"* %102 to i64*
  %106 = load i64, i64* %105, align 8
  store atomic i64 %106, i64* %103 monotonic, align 8
  store atomic i64 %104, i64* %105 monotonic, align 8
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i32, i32* %107, align 4
  %110 = load i32, i32* %108, align 4
  store i32 %110, i32* %107, align 4
  store i32 %109, i32* %108, align 4
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %101, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %112 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %111, align 4
  %114 = load i32, i32* %112, align 4
  store i32 %114, i32* %111, align 4
  store i32 %113, i32* %112, align 4
  %115 = getelementptr inbounds %"struct.std::__1::pair.2262", %"struct.std::__1::pair.2262"* %2, i64 0, i32 1
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %101, i64 0, i32 1, i32 1
  %117 = bitcast %"struct.blink::GlyphOverflow"* %116 to i8*
  %118 = bitcast %"struct.blink::GlyphOverflow"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 4 %118, i64 16, i1 false) #13
  %119 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, %121
  %125 = shl i32 %124, 1
  %126 = load i32, i32* %13, align 8
  %127 = icmp ult i32 %125, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %98
  %129 = tail call %"struct.WTF::KeyValuePair.2261"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6ExpandEPSG_(%"class.WTF::HashTable.2258"* %0, %"struct.WTF::KeyValuePair.2261"* %101)
  br label %130

130:                                              ; preds = %59, %98, %128
  %131 = phi i8 [ 1, %98 ], [ 1, %128 ], [ 0, %59 ]
  %132 = phi %"struct.WTF::KeyValuePair.2261"* [ %101, %98 ], [ %129, %128 ], [ %61, %59 ]
  %133 = insertvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } undef, %"struct.WTF::KeyValuePair.2261"* %132, 0
  %134 = insertvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } %133, i8 %131, 1
  ret { %"struct.WTF::KeyValuePair.2261"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2261"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E6ExpandEPSG_(%"class.WTF::HashTable.2258"*, %"struct.WTF::KeyValuePair.2261"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"struct.blink::GlyphOverflow", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 40
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([206 x i8], [206 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink13InlineTextBoxENSt3__14pairINS_6VectorIPKNS2_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS2_13GlyphOverflowEEEEEEEPKcv, i64 0, i64 0)) #13
  %37 = bitcast i8* %36 to %"struct.WTF::KeyValuePair.2261"*
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = bitcast %"struct.blink::GlyphOverflow"* %4 to i8*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %51, %41 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %37, i64 %42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false)
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %37, i64 %42, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"struct.std::__1::pair.2262"* %44 to i64*
  %48 = bitcast %"struct.WTF::KeyValuePair.2261"* %43 to i64*
  store i64 0, i64* %48, align 8
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %45, align 4
  store i32 0, i32* %46, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %37, i64 %42, i32 1, i32 1
  %50 = bitcast %"struct.blink::GlyphOverflow"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %40, i64 16, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40)
  %51 = add nuw nsw i64 %42, 1
  %52 = icmp eq i64 %51, %34
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %32
  %54 = call %"struct.WTF::KeyValuePair.2261"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E8RehashToEPSG_jSQ_(%"class.WTF::HashTable.2258"* %0, %"struct.WTF::KeyValuePair.2261"* %37, i32 %33, %"struct.WTF::KeyValuePair.2261"* %1) #13
  ret %"struct.WTF::KeyValuePair.2261"* %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2261"* @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E8RehashToEPSG_jSQ_(%"class.WTF::HashTable.2258"*, %"struct.WTF::KeyValuePair.2261"*, i32, %"struct.WTF::KeyValuePair.2261"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2258", align 8
  %6 = bitcast %"class.WTF::HashTable.2258"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2258"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2261"* %1, %"struct.WTF::KeyValuePair.2261"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2258"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2258"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %22 to i64
  br label %66

24:                                               ; preds = %117
  %25 = bitcast %"class.WTF::HashTable.2258"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2258"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %118, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2261"* [ null, %16 ], [ %121, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %119, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2261"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %35, i64 %42, i32 0
  %44 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %43, align 8
  %45 = icmp eq %"class.blink::InlineTextBox"* %44, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %47, align 8
  %49 = icmp eq %"class.blink::SimpleFontData"** %48, null
  %50 = bitcast %"class.blink::SimpleFontData"** %48 to i8*
  br i1 %49, label %57, label %51, !prof !10

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !9

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.2261"* %33

66:                                               ; preds = %21, %117
  %67 = phi i64 [ %118, %117 ], [ %23, %21 ]
  %68 = phi i32 [ %119, %117 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.2261"* [ %120, %117 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.2261"* [ %121, %117 ], [ null, %21 ]
  %71 = phi i32 [ %122, %117 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.2261"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %117
    i64 0, label %117
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.2261"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2258"* nonnull %5, %"class.blink::InlineTextBox"** dereferenceable(8) %77) #13
  %79 = extractvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %80, align 8
  %82 = icmp eq %"class.blink::SimpleFontData"** %81, null
  %83 = bitcast %"class.blink::SimpleFontData"** %81 to i8*
  br i1 %82, label %90, label %84, !prof !10

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !9

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #13
  store %"class.blink::SimpleFontData"** null, %"class.blink::SimpleFontData"*** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.2261"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"struct.std::__1::pair.2262"* %94 to i64*
  %98 = bitcast %"struct.std::__1::pair.2262"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #13
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"struct.std::__1::pair.2262"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %79, i64 0, i32 1, i32 1
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %69, i64 %72, i32 1, i32 1
  %109 = bitcast %"struct.blink::GlyphOverflow"* %107 to i8*
  %110 = bitcast %"struct.blink::GlyphOverflow"* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 16, i1 false) #13
  %111 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %15, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %111, i64 %72
  %113 = icmp eq %"struct.WTF::KeyValuePair.2261"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.2261"* %79, %"struct.WTF::KeyValuePair.2261"* %70
  %115 = load i32, i32* %12, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %111 to i64
  br label %117

117:                                              ; preds = %66, %66, %90
  %118 = phi i64 [ %67, %66 ], [ %116, %90 ], [ %67, %66 ]
  %119 = phi i32 [ %68, %66 ], [ %115, %90 ], [ %68, %66 ]
  %120 = phi %"struct.WTF::KeyValuePair.2261"* [ %69, %66 ], [ %111, %90 ], [ %69, %66 ]
  %121 = phi %"struct.WTF::KeyValuePair.2261"* [ %70, %66 ], [ %114, %90 ], [ %70, %66 ]
  %122 = add i32 %71, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2261"*, i8 } @_ZN3WTF9HashTableIPKN5blink13InlineTextBoxENS_12KeyValuePairIS4_NSt3__14pairINS_6VectorIPKNS1_14SimpleFontDataELj0ENS_18PartitionAllocatorEEENS1_13GlyphOverflowEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSL_ISF_EEEESM_SC_E16LookupForWritingERKS4_(%"class.WTF::HashTable.2258"*, %"class.blink::InlineTextBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2261"*, %"struct.WTF::KeyValuePair.2261"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2258", %"class.WTF::HashTable.2258"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::InlineTextBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %32, i64 0, i32 0
  %35 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %34, align 8
  %36 = icmp eq %"class.blink::InlineTextBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::InlineTextBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2261"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2261"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2261"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::InlineTextBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::InlineTextBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::InlineTextBox"* %63, inttoptr (i64 -1 to %"class.blink::InlineTextBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2261"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2261", %"struct.WTF::KeyValuePair.2261"* %75, i64 0, i32 0
  %78 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %77, align 8
  %79 = icmp eq %"class.blink::InlineTextBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2261"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } undef, %"struct.WTF::KeyValuePair.2261"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2261"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2261"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPKN5blink14SimpleFontDataEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::SimpleFontData"** @_ZN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2263"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2263", %"class.WTF::Vector.2263"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::SimpleFontData"**, %"class.blink::SimpleFontData"*** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %24, i64 %25
  ret %"class.blink::SimpleFontData"** %26
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIjLj16ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2282"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2282", %"class.WTF::Vector.2282"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %2, align 8
  %4 = icmp eq %"class.blink::BidiContext"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %3) #13
  %10 = bitcast %"class.blink::BidiContext"* %3 to i8*
  tail call void @free(i8* %10) #13
  ret void

11:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2304"*, %"class.blink::BidiEmbedding"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::BidiEmbedding"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN5blink11LineBreaker5ResetEv(%"class.blink::LineBreaker"*) local_unnamed_addr #2

declare %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext, i32, i1 zeroext, i32, %"class.blink::BidiContext"*) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow26RemoveFloatingObjectsBelowEPNS_14FloatingObjectENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::FloatingObject"*, i32) local_unnamed_addr #2

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #2

declare void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink15LayoutBlockFlow34UpdateStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink15WordMeasurementELj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2274"*, %"class.blink::WordMeasurement"*) local_unnamed_addr #8 comdat align 2 {
  %3 = bitcast %"class.blink::WordMeasurement"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN5blink24ReleaseLineBreakIteratorEPN6icu_6913BreakIteratorE(%"class.icu_69::BreakIterator"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutObject"* @_ZN5blinkL14BidiNextSharedINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_NS_19EmptyInlineBehaviorEPb(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"*, i32, i8*) unnamed_addr #3 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = ptrtoint %"class.blink::LayoutObject"* %1 to i64
  %10 = icmp ne i8* %4, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = load i8, i8* %4, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %5, %11
  %15 = phi i1 [ %13, %11 ], [ false, %5 ]
  %16 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %16, label %271, label %17

17:                                               ; preds = %14
  %18 = icmp ne %"class.blink::BidiResolver"* %2, null
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 14
  %20 = bitcast i64* %6 to %"class.blink::BidiEmbedding"*
  %21 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19
  %22 = bitcast i64* %6 to i8*
  %23 = bitcast i64* %6 to i32*
  %24 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %20, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 19, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %21, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %2, i64 0, i32 12
  %29 = icmp eq i32 %3, 1
  %30 = xor i1 %29, true
  %31 = or i1 %15, %30
  %32 = icmp eq %"class.blink::BidiResolver"* %2, null
  %33 = bitcast i64* %8 to %"class.blink::BidiEmbedding"*
  %34 = bitcast i64* %8 to i8*
  %35 = bitcast i64* %8 to i32*
  %36 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %33, i64 0, i32 1
  %37 = bitcast i64* %7 to %"class.blink::BidiEmbedding"*
  %38 = bitcast i64* %7 to i8*
  %39 = bitcast i64* %7 to i32*
  %40 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %37, i64 0, i32 1
  br label %41

41:                                               ; preds = %270, %17
  %42 = phi %"class.blink::LayoutObject"* [ %1, %17 ], [ %250, %270 ]
  %43 = phi i8 [ 0, %17 ], [ %249, %270 ]
  %44 = phi i64 [ %9, %17 ], [ %248, %270 ]
  br i1 %15, label %126, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 113336795588871485128704
  %50 = icmp eq i96 %49, 75557863725914323419136
  %51 = and i96 %48, 1115684864
  %52 = icmp ne i96 %51, 0
  %53 = or i1 %52, %50
  br i1 %53, label %118, label %54

54:                                               ; preds = %45
  %55 = inttoptr i64 %44 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %56 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %56, i64 13
  %58 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %57, align 8
  %59 = call %"class.blink::LayoutObjectChildList"* %58(%"class.blink::LayoutObject"* nonnull %42) #13
  %60 = icmp eq %"class.blink::LayoutObjectChildList"* %59, null
  br i1 %60, label %118, label %61

61:                                               ; preds = %54
  %62 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %59, i64 0, i32 0
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = ptrtoint %"class.blink::LayoutObject"* %63 to i64
  %65 = icmp ne %"class.blink::LayoutObject"* %63, null
  %66 = and i1 %18, %65
  br i1 %66, label %67, label %116

67:                                               ; preds = %61
  %68 = bitcast %"class.blink::LayoutObject"* %63 to i1 (%"class.blink::LayoutObject"*)***
  %69 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %69, i64 26
  %71 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %70, align 8
  %72 = call zeroext i1 %71(%"class.blink::LayoutObject"* nonnull %63) #13
  br i1 %72, label %73, label %247

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = lshr i160 %78, 86
  %80 = trunc i160 %79 to i32
  %81 = and i32 %80, 7
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %247, label %83

83:                                               ; preds = %73
  %84 = add nsw i32 %81, -3
  %85 = icmp ult i32 %84, 3
  %86 = and i160 %78, 2854495385411919762116571938898990272765493248
  %87 = icmp eq i160 %86, 0
  %88 = and i1 %87, %85
  br i1 %88, label %89, label %93

89:                                               ; preds = %83
  %90 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %28) #13
  %91 = load i32, i32* %19, align 8
  %92 = add i32 %91, 1
  store i32 %92, i32* %19, align 8
  br label %247

93:                                               ; preds = %83
  %94 = load i32, i32* %19, align 8
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %247

96:                                               ; preds = %93
  %97 = icmp eq i32 %81, 1
  %98 = and i160 %78, 41538374868278621028243970633760768
  %99 = icmp ne i160 %98, 0
  %100 = select i1 %99, i32 14, i32 11
  %101 = select i1 %99, i32 15, i32 12
  %102 = select i1 %97, i32 %100, i32 %101
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i32 %102, i32* %23, align 8
  store i32 0, i32* %24, align 4
  %103 = load i32, i32* %25, align 4
  %104 = load i32, i32* %26, align 8
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %114, label %106, !prof !9

106:                                              ; preds = %96
  %107 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %27, align 8
  %108 = zext i32 %103 to i64
  %109 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %107, i64 %108
  %110 = bitcast %"class.blink::BidiEmbedding"* %109 to i64*
  %111 = load i64, i64* %6, align 8
  store i64 %111, i64* %110, align 4
  %112 = load i32, i32* %25, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %25, align 4
  br label %115

114:                                              ; preds = %96
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2303"* %21, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %20) #13
  br label %115

115:                                              ; preds = %114, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  br label %247

116:                                              ; preds = %61
  %117 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %117, label %118, label %247

118:                                              ; preds = %54, %116, %45
  %119 = phi i64 [ %64, %116 ], [ 0, %45 ], [ 0, %54 ]
  br i1 %31, label %126, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %44 to i1 (%"class.blink::LayoutObject"*)***
  %122 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %122, i64 26
  %124 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %123, align 8
  %125 = call zeroext i1 %124(%"class.blink::LayoutObject"* nonnull %42) #13
  br i1 %125, label %271, label %126

126:                                              ; preds = %41, %118, %120
  %127 = phi i64 [ %119, %118 ], [ %119, %120 ], [ 0, %41 ]
  %128 = icmp ne %"class.blink::LayoutObject"* %42, null
  %129 = icmp ne %"class.blink::LayoutObject"* %42, %0
  %130 = and i1 %128, %129
  br i1 %130, label %131, label %247

131:                                              ; preds = %126, %243
  %132 = phi %"class.blink::LayoutObject"* [ %232, %243 ], [ %42, %126 ]
  br i1 %32, label %175, label %133

133:                                              ; preds = %131
  %134 = bitcast %"class.blink::LayoutObject"* %132 to i1 (%"class.blink::LayoutObject"*)***
  %135 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %134, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %135, i64 26
  %137 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %136, align 8
  %138 = call zeroext i1 %137(%"class.blink::LayoutObject"* nonnull %132) #13
  br i1 %138, label %139, label %175

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 5, i32 0
  %141 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %141, i64 0, i32 0, i32 9
  %143 = bitcast [20 x i8]* %142 to i160*
  %144 = load i160, i160* %143, align 8
  %145 = and i160 %144, 541598767187353870268366848
  %146 = icmp eq i160 %145, 0
  br i1 %146, label %175, label %147

147:                                              ; preds = %139
  %148 = lshr i160 %144, 86
  %149 = trunc i160 %148 to i32
  %150 = and i32 %149, 7
  %151 = add nsw i32 %150, -3
  %152 = icmp ult i32 %151, 3
  %153 = and i160 %144, 2854495385411919762116571938898990272765493248
  %154 = icmp eq i160 %153, 0
  %155 = and i1 %154, %152
  %156 = load i32, i32* %19, align 8
  br i1 %155, label %157, label %159

157:                                              ; preds = %147
  %158 = add i32 %156, -1
  store i32 %158, i32* %19, align 8
  br label %175

159:                                              ; preds = %147
  %160 = icmp eq i32 %156, 0
  br i1 %160, label %161, label %175

161:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #13
  store i32 16, i32* %35, align 8
  store i32 0, i32* %36, align 4
  %162 = load i32, i32* %25, align 4
  %163 = load i32, i32* %26, align 8
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %173, label %165, !prof !9

165:                                              ; preds = %161
  %166 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %27, align 8
  %167 = zext i32 %162 to i64
  %168 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %166, i64 %167
  %169 = bitcast %"class.blink::BidiEmbedding"* %168 to i64*
  %170 = load i64, i64* %8, align 8
  store i64 %170, i64* %169, align 4
  %171 = load i32, i32* %25, align 4
  %172 = add i32 %171, 1
  store i32 %172, i32* %25, align 4
  br label %174

173:                                              ; preds = %161
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2303"* %21, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %33) #13
  br label %174

174:                                              ; preds = %173, %165
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #13
  br label %175

175:                                              ; preds = %131, %133, %139, %157, %159, %174
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 9
  %177 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %176, align 8
  %178 = icmp eq %"class.blink::LayoutObject"* %177, null
  br i1 %178, label %230, label %179

179:                                              ; preds = %175
  %180 = ptrtoint %"class.blink::LayoutObject"* %177 to i64
  br i1 %32, label %247, label %181

181:                                              ; preds = %179
  %182 = bitcast %"class.blink::LayoutObject"* %177 to i1 (%"class.blink::LayoutObject"*)***
  %183 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %182, align 8
  %184 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %183, i64 26
  %185 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %184, align 8
  %186 = call zeroext i1 %185(%"class.blink::LayoutObject"* nonnull %177) #13
  br i1 %186, label %187, label %247

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %177, i64 0, i32 5, i32 0
  %189 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 9
  %191 = bitcast [20 x i8]* %190 to i160*
  %192 = load i160, i160* %191, align 8
  %193 = lshr i160 %192, 86
  %194 = trunc i160 %193 to i32
  %195 = and i32 %194, 7
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %247, label %197

197:                                              ; preds = %187
  %198 = add nsw i32 %195, -3
  %199 = icmp ult i32 %198, 3
  %200 = and i160 %192, 2854495385411919762116571938898990272765493248
  %201 = icmp eq i160 %200, 0
  %202 = and i1 %201, %199
  br i1 %202, label %203, label %207

203:                                              ; preds = %197
  %204 = call zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* nonnull %2, %"class.blink::BidiRunList"* dereferenceable(32) %28) #13
  %205 = load i32, i32* %19, align 8
  %206 = add i32 %205, 1
  store i32 %206, i32* %19, align 8
  br label %247

207:                                              ; preds = %197
  %208 = load i32, i32* %19, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %247

210:                                              ; preds = %207
  %211 = icmp eq i32 %195, 1
  %212 = and i160 %192, 41538374868278621028243970633760768
  %213 = icmp ne i160 %212, 0
  %214 = select i1 %213, i32 14, i32 11
  %215 = select i1 %213, i32 15, i32 12
  %216 = select i1 %211, i32 %214, i32 %215
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  store i32 %216, i32* %39, align 8
  store i32 0, i32* %40, align 4
  %217 = load i32, i32* %25, align 4
  %218 = load i32, i32* %26, align 8
  %219 = icmp eq i32 %217, %218
  br i1 %219, label %228, label %220, !prof !9

220:                                              ; preds = %210
  %221 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %27, align 8
  %222 = zext i32 %217 to i64
  %223 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %221, i64 %222
  %224 = bitcast %"class.blink::BidiEmbedding"* %223 to i64*
  %225 = load i64, i64* %7, align 8
  store i64 %225, i64* %224, align 4
  %226 = load i32, i32* %25, align 4
  %227 = add i32 %226, 1
  store i32 %227, i32* %25, align 4
  br label %229

228:                                              ; preds = %210
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2303"* %21, %"class.blink::BidiEmbedding"* nonnull dereferenceable(8) %37) #13
  br label %229

229:                                              ; preds = %228, %220
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %247

230:                                              ; preds = %175
  %231 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %132, i64 0, i32 7
  %232 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %231, align 8
  %233 = icmp ne %"class.blink::LayoutObject"* %232, null
  %234 = and i1 %29, %233
  %235 = icmp ne %"class.blink::LayoutObject"* %232, %0
  %236 = and i1 %235, %234
  br i1 %236, label %237, label %243

237:                                              ; preds = %230
  %238 = bitcast %"class.blink::LayoutObject"* %232 to i1 (%"class.blink::LayoutObject"*)***
  %239 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %238, align 8
  %240 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %239, i64 26
  %241 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %240, align 8
  %242 = call zeroext i1 %241(%"class.blink::LayoutObject"* nonnull %232) #13
  br i1 %242, label %245, label %243

243:                                              ; preds = %237, %230
  %244 = and i1 %233, %235
  br i1 %244, label %131, label %271

245:                                              ; preds = %237
  %246 = ptrtoint %"class.blink::LayoutObject"* %232 to i64
  br label %247

247:                                              ; preds = %67, %73, %89, %115, %93, %126, %245, %207, %116, %229, %203, %187, %181, %179
  %248 = phi i64 [ %64, %116 ], [ %180, %179 ], [ %180, %181 ], [ %180, %187 ], [ %180, %203 ], [ %180, %207 ], [ %180, %229 ], [ %246, %245 ], [ %127, %126 ], [ %64, %93 ], [ %64, %115 ], [ %64, %89 ], [ %64, %73 ], [ %64, %67 ]
  %249 = phi i8 [ %43, %116 ], [ %43, %179 ], [ %43, %181 ], [ %43, %187 ], [ %43, %203 ], [ %43, %207 ], [ %43, %229 ], [ 1, %245 ], [ %43, %126 ], [ %43, %93 ], [ %43, %115 ], [ %43, %89 ], [ %43, %73 ], [ %43, %67 ]
  %250 = inttoptr i64 %248 to %"class.blink::LayoutObject"*
  %251 = icmp eq i64 %248, 0
  br i1 %251, label %271, label %252

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %250, i64 0, i32 4
  %254 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %253 to i96*
  %255 = load i96, i96* %254, align 4
  %256 = and i96 %255, 113336795588871485128704
  %257 = icmp eq i96 %256, 75557863725914323419136
  %258 = and i96 %255, 1115684864
  %259 = icmp ne i96 %258, 0
  %260 = or i1 %259, %257
  br i1 %260, label %271, label %261

261:                                              ; preds = %252
  br i1 %29, label %264, label %262

262:                                              ; preds = %261
  %263 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %250)
  br i1 %263, label %264, label %270

264:                                              ; preds = %262, %261
  %265 = inttoptr i64 %248 to i1 (%"class.blink::LayoutObject"*)***
  %266 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %265, align 8
  %267 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %266, i64 26
  %268 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %267, align 8
  %269 = call zeroext i1 %268(%"class.blink::LayoutObject"* nonnull %250) #13
  br i1 %269, label %271, label %270

270:                                              ; preds = %264, %262
  br label %41

271:                                              ; preds = %264, %120, %252, %247, %243, %14
  %272 = phi i64 [ 0, %14 ], [ 0, %243 ], [ 0, %247 ], [ %248, %252 ], [ %44, %120 ], [ %248, %264 ]
  %273 = phi i8 [ 0, %14 ], [ %43, %243 ], [ %249, %247 ], [ %249, %252 ], [ 1, %120 ], [ %249, %264 ]
  br i1 %10, label %274, label %276

274:                                              ; preds = %271
  %275 = and i8 %273, 1
  store i8 %275, i8* %4, align 1
  br label %276

276:                                              ; preds = %274, %271
  %277 = inttoptr i64 %272 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %277
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"*) unnamed_addr #0 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %3 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %3, i64 26
  %5 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::LayoutObject"* %0) #13
  br i1 %6, label %7, label %36

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 1
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %36, label %12

12:                                               ; preds = %7, %31
  %13 = phi i64 [ %34, %31 ], [ %10, %7 ]
  %14 = inttoptr i64 %13 to %"class.blink::LayoutObject"*
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 8388608
  %19 = icmp ne i96 %18, 0
  %20 = and i96 %17, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = or i1 %21, %19
  br i1 %22, label %31, label %23

23:                                               ; preds = %12
  %24 = and i96 %17, 33554432
  %25 = icmp eq i96 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = inttoptr i64 %13 to %"class.blink::LayoutText"*
  %28 = tail call zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"* %27) #13
  br i1 %28, label %31, label %29

29:                                               ; preds = %23, %26
  %30 = tail call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %14)
  br i1 %30, label %31, label %36

31:                                               ; preds = %29, %26, %12
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 9
  %33 = bitcast %"class.blink::LayoutObject"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %12

36:                                               ; preds = %29, %31, %7, %1
  %37 = phi i1 [ false, %1 ], [ true, %7 ], [ false, %29 ], [ true, %31 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE23CommitExplicitEmbeddingERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3, i32 0
  %7 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 4
  %10 = trunc i16 %9 to i8
  %11 = and i8 %10, 127
  %12 = ptrtoint %"class.blink::BidiContext"* %7 to i64
  %13 = icmp eq %"class.blink::BidiContext"* %7, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %21

21:                                               ; preds = %2, %14, %18
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19
  %23 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %24, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.logging::CheckError"* %3 to i8*
  br label %41

32:                                               ; preds = %107, %21
  %33 = phi i64 [ %12, %21 ], [ %108, %107 ]
  %34 = inttoptr i64 %33 to %"class.blink::BidiContext"*
  %35 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 1
  %36 = load i16, i16* %35, align 4
  %37 = trunc i16 %36 to i8
  %38 = and i8 %37, 127
  %39 = zext i8 %11 to i32
  %40 = icmp ugt i8 %38, %11
  br i1 %40, label %111, label %115

41:                                               ; preds = %30, %107
  %42 = phi %"class.blink::BidiEmbedding"* [ %24, %30 ], [ %109, %107 ]
  %43 = phi i64 [ %12, %30 ], [ %108, %107 ]
  %44 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %72 [
    i32 16, label %46
    i32 14, label %66
  ]

46:                                               ; preds = %41
  %47 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %48 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 2, i32 0
  %49 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %48, align 8
  %50 = icmp eq %"class.blink::BidiContext"* %49, null
  br i1 %50, label %107, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 1 monotonic
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #13
  br label %57

57:                                               ; preds = %55, %51
  %58 = ptrtoint %"class.blink::BidiContext"* %49 to i64
  %59 = icmp eq i64 %43, 0
  br i1 %59, label %107, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %107

64:                                               ; preds = %60
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %47) #13
  %65 = inttoptr i64 %43 to i8*
  call void @free(i8* %65) #13
  br label %107

66:                                               ; preds = %41
  %67 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %68 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %67, i64 0, i32 1
  %69 = load i16, i16* %68, align 4
  %70 = trunc i16 %69 to i8
  %71 = and i8 %70, 127
  br label %79

72:                                               ; preds = %41
  %73 = inttoptr i64 %43 to %"class.blink::BidiContext"*
  %74 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %73, i64 0, i32 1
  %75 = load i16, i16* %74, align 4
  %76 = trunc i16 %75 to i8
  %77 = and i8 %76, 127
  switch i32 %45, label %85 [
    i32 12, label %78
    i32 15, label %79
  ]

78:                                               ; preds = %72
  br label %85

79:                                               ; preds = %72, %66
  %80 = phi i8 [ %71, %66 ], [ %77, %72 ]
  %81 = phi %"class.blink::BidiContext"* [ %67, %66 ], [ %73, %72 ]
  %82 = phi i1 [ false, %66 ], [ true, %72 ]
  %83 = add nuw i8 %80, 1
  %84 = or i8 %83, 1
  br label %89

85:                                               ; preds = %72, %78
  %86 = phi i1 [ true, %78 ], [ false, %72 ]
  %87 = add nuw i8 %77, 2
  %88 = and i8 %87, -2
  br label %89

89:                                               ; preds = %85, %79
  %90 = phi %"class.blink::BidiContext"* [ %81, %79 ], [ %73, %85 ]
  %91 = phi i1 [ %82, %79 ], [ %86, %85 ]
  %92 = phi i32 [ 1, %79 ], [ 0, %85 ]
  %93 = phi i8 [ %84, %79 ], [ %88, %85 ]
  %94 = icmp ult i8 %93, 125
  br i1 %94, label %95, label %107

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = call %"class.blink::BidiContext"* @_ZN5blink11BidiContext6CreateEhN3WTF7unicode13CharDirectionEbNS_19BidiEmbeddingSourceEPS0_(i8 zeroext %93, i32 %92, i1 zeroext %91, i32 %97, %"class.blink::BidiContext"* %90) #13
  %99 = ptrtoint %"class.blink::BidiContext"* %98 to i64
  %100 = icmp eq %"class.blink::BidiContext"* %90, null
  br i1 %100, label %107, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw sub i32* %102, i32 1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %107

105:                                              ; preds = %101
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %90) #13
  %106 = bitcast %"class.blink::BidiContext"* %90 to i8*
  call void @free(i8* %106) #13
  br label %107

107:                                              ; preds = %105, %101, %95, %64, %60, %57, %89, %46
  %108 = phi i64 [ %43, %46 ], [ %43, %89 ], [ %58, %57 ], [ %58, %60 ], [ %58, %64 ], [ %99, %95 ], [ %99, %101 ], [ %99, %105 ]
  %109 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %42, i64 1
  %110 = icmp eq %"class.blink::BidiEmbedding"* %109, %28
  br i1 %110, label %32, label %41

111:                                              ; preds = %32
  %112 = and i32 %39, 1
  %113 = and i8 %37, 1
  %114 = zext i8 %113 to i32
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %112, i32 %114)
  br label %119

115:                                              ; preds = %32
  %116 = icmp ult i8 %38, %11
  br i1 %116, label %117, label %119

117:                                              ; preds = %115
  %118 = and i32 %39, 1
  call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1, i32 %118)
  br label %119

119:                                              ; preds = %115, %117, %111
  %120 = icmp eq i64 %33, 0
  br i1 %120, label %128, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 1 monotonic
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %121
  %126 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #13
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  br label %128

128:                                              ; preds = %119, %121, %125
  %129 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 3
  %130 = bitcast %class.scoped_refptr.1691* %129 to i64*
  %131 = getelementptr inbounds %class.scoped_refptr.1691, %class.scoped_refptr.1691* %129, i64 0, i32 0
  %132 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %131, align 8
  store i64 %33, i64* %130, align 8
  %133 = icmp eq %"class.blink::BidiContext"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = atomicrmw sub i32* %135, i32 1 acq_rel
  %137 = icmp eq i32 %136, 1
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %132) #13
  %139 = bitcast %"class.blink::BidiContext"* %132 to i8*
  call void @free(i8* %139) #13
  br label %140

140:                                              ; preds = %128, %134, %138
  %141 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = load i32, i32* %25, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %148, label %147

147:                                              ; preds = %144
  store i32 0, i32* %25, align 4
  br label %148

148:                                              ; preds = %147, %144
  %149 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %23, align 8
  %150 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 19, i32 0, i32 1, i64 0
  %151 = ptrtoint i8* %150 to i64
  %152 = bitcast %"class.WTF::Vector.2303"* %22 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  store i32 8, i32* %141, align 8
  %153 = bitcast i8* %150 to %"class.blink::BidiEmbedding"*
  %154 = icmp eq %"class.blink::BidiEmbedding"* %149, %153
  br i1 %154, label %157, label %155, !prof !10

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %22, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2304"* %156, %"class.blink::BidiEmbedding"* %149) #13
  br label %157

157:                                              ; preds = %140, %148, %155
  %158 = icmp ne i8 %11, %38
  br i1 %120, label %165, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw sub i32* %160, i32 1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  call void @_ZN5blink11BidiContextD2Ev(%"class.blink::BidiContext"* nonnull %34) #13
  %164 = inttoptr i64 %33 to i8*
  call void @free(i8* %164) #13
  br label %165

165:                                              ; preds = %157, %159, %163
  ret i1 %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27RaiseExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionESA_(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %66

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %18, %20
  br i1 %21, label %66, label %22

22:                                               ; preds = %16, %8
  %23 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  %30 = zext i1 %29 to i32
  store i32 %30, i32* %23, align 8
  br label %31

31:                                               ; preds = %22, %26
  %32 = icmp eq i32 %3, 0
  %33 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 8
  br i1 %32, label %35, label %49

35:                                               ; preds = %31
  switch i32 %34, label %42 [
    i32 2, label %36
    i32 5, label %41
  ]

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %63, label %40

40:                                               ; preds = %36
  store i32 2, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

41:                                               ; preds = %35
  store i32 5, i32* %23, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %63

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp ne i32 %44, 0
  %46 = icmp eq i32 %2, 0
  %47 = and i1 %46, %45
  br i1 %47, label %48, label %63

48:                                               ; preds = %42
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %23, align 8
  br label %63

49:                                               ; preds = %31
  switch i32 %34, label %56 [
    i32 5, label %62
    i32 2, label %50
  ]

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  %54 = icmp eq i32 %2, 1
  %55 = or i1 %54, %53
  br i1 %55, label %62, label %63

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  %60 = icmp eq i32 %2, 1
  %61 = and i1 %60, %59
  br i1 %61, label %62, label %63

62:                                               ; preds = %49, %56, %50
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %23, align 8
  br label %63

63:                                               ; preds = %50, %36, %56, %62, %40, %42, %48, %41
  %64 = bitcast %"class.blink::InlineIterator"* %9 to i8*
  %65 = bitcast %"class.blink::InlineIterator"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false)
  br label %66

66:                                               ; preds = %16, %4, %63
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %5, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %3, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %3, i32* %68, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::InlineIterator"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  %71 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %72, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE27LowerExplicitEmbeddingLevelERNS_11BidiRunListIS2_EEN3WTF7unicode13CharDirectionE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32), i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 3, i32 1, i32 0
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %17, %19
  br i1 %20, label %55, label %21

21:                                               ; preds = %15, %7
  %22 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 10
  br i1 %24, label %25, label %30

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  %29 = zext i1 %28 to i32
  store i32 %29, i32* %22, align 8
  br label %30

30:                                               ; preds = %21, %25
  %31 = icmp eq i32 %2, 0
  %32 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  %33 = load i32, i32* %32, align 8
  br i1 %31, label %34, label %46

34:                                               ; preds = %30
  switch i32 %33, label %41 [
    i32 2, label %35
    i32 5, label %40
  ]

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  store i32 2, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

40:                                               ; preds = %34
  store i32 5, i32* %22, align 8
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  br label %52

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %41
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 0, i32* %22, align 8
  br label %52

46:                                               ; preds = %30
  switch i32 %33, label %47 [
    i32 5, label %51
    i32 2, label %51
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %46, %46, %47
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i32 1, i32* %22, align 8
  br label %52

52:                                               ; preds = %35, %41, %47, %51, %39, %45, %40
  %53 = bitcast %"class.blink::InlineIterator"* %8 to i8*
  %54 = bitcast %"class.blink::InlineIterator"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false)
  br label %55

55:                                               ; preds = %15, %3, %52
  tail call void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"* %0, %"class.blink::BidiRunList"* dereferenceable(32) %1)
  store i8 1, i8* %4, align 8
  %56 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 2
  store i32 %2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 1
  store i32 %2, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %59 = bitcast %"class.blink::InlineIterator"* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false)
  %60 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %60, align 8
  %61 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %61, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEE9AppendRunERNS_11BidiRunListIS2_EE(%"class.blink::BidiResolver"*, %"class.blink::BidiRunList"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.blink::IsolateTracker", align 8
  %4 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %356

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %356, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 8
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %356

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::IsolateTracker"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 1, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %59, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %51, %22
  %25 = phi i32 [ 0, %22 ], [ %52, %51 ]
  %26 = phi %"class.blink::LayoutObject"* [ %20, %22 ], [ %54, %51 ]
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %26, %27
  br i1 %28, label %56, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::LayoutObject"* %26 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 26
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %26) #13
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = lshr i160 %40, 86
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 7
  %44 = add nsw i32 %43, -3
  %45 = icmp ult i32 %44, 3
  %46 = and i160 %40, 2854495385411919762116571938898990272765493248
  %47 = icmp eq i160 %46, 0
  %48 = and i1 %47, %45
  %49 = zext i1 %48 to i32
  %50 = add i32 %25, %49
  br label %51

51:                                               ; preds = %35, %29
  %52 = phi i32 [ %25, %29 ], [ %50, %35 ]
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 7
  %54 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %53, align 8
  %55 = icmp eq %"class.blink::LayoutObject"* %54, null
  br i1 %55, label %56, label %24

56:                                               ; preds = %51, %24
  %57 = phi i32 [ %52, %51 ], [ %25, %24 ]
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  br label %59

59:                                               ; preds = %56, %16
  %60 = phi %"class.blink::LayoutObject"* [ null, %16 ], [ %58, %56 ]
  %61 = phi i32 [ 0, %16 ], [ %57, %56 ]
  %62 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 0
  store i32 %61, i32* %62, align 8
  %63 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 1
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3
  %65 = bitcast %"class.blink::MidpointState"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 25, i1 false) #13
  %66 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 4
  store %"class.blink::BidiRunList"* %1, %"class.blink::BidiRunList"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 1, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 1, i32 0
  %70 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %70, label %240, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0
  %74 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0
  %75 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 1
  %76 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 1
  %77 = bitcast i32* %75 to i8*
  %78 = bitcast i32* %76 to i8*
  br label %79

79:                                               ; preds = %238, %71
  %80 = phi i32 [ %68, %71 ], [ 0, %238 ]
  %81 = phi %"class.blink::LayoutObject"* [ %60, %71 ], [ %220, %238 ]
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %83 = icmp eq %"class.blink::LayoutObject"* %81, %82
  br i1 %83, label %240, label %84

84:                                               ; preds = %79
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %86 = icmp eq %"class.blink::LayoutObject"* %81, %85
  br i1 %86, label %240, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %62, align 8
  %89 = icmp eq i32 %88, 0
  %90 = bitcast %"class.blink::LayoutObject"* %81 to i32 (%"class.blink::LayoutObject"*)***
  %91 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %91, i64 74
  %93 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %92, align 8
  %94 = call i32 %93(%"class.blink::LayoutObject"* nonnull %81) #13
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  br i1 %89, label %102, label %96

96:                                               ; preds = %87
  %97 = call dereferenceable(16) %"class.WTF::Vector.2293"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.2293"* %73, %"class.WTF::Vector.2293"* dereferenceable(16) %74) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 9, i1 false) #13
  %98 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %90, align 8
  %99 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %98, i64 74
  %100 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %99, align 8
  %101 = call i32 %100(%"class.blink::LayoutObject"* nonnull %81) #13
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* nonnull %81, i32 %80, i32 %101, %"class.blink::LayoutObject"* %95, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 0, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3) #13
  br label %103

102:                                              ; preds = %87
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* nonnull %81, i32 %80, i32 %94, %"class.blink::LayoutObject"* %95, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 1, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3)
  br label %103

103:                                              ; preds = %96, %102
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  br label %105

105:                                              ; preds = %237, %103
  %106 = phi %"class.blink::LayoutObject"* [ %81, %103 ], [ %220, %237 ]
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 4
  %108 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %107 to i96*
  %109 = load i96, i96* %108, align 4
  %110 = and i96 %109, 113336795588871485128704
  %111 = icmp eq i96 %110, 75557863725914323419136
  %112 = and i96 %109, 1115684864
  %113 = icmp ne i96 %112, 0
  %114 = or i1 %113, %111
  br i1 %114, label %152, label %115

115:                                              ; preds = %105
  %116 = bitcast %"class.blink::LayoutObject"* %106 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %117 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %117, i64 13
  %119 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %118, align 8
  %120 = call %"class.blink::LayoutObjectChildList"* %119(%"class.blink::LayoutObject"* nonnull %106) #13
  %121 = icmp eq %"class.blink::LayoutObjectChildList"* %120, null
  br i1 %121, label %152, label %122

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %120, i64 0, i32 0
  %124 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %123, align 8
  %125 = icmp eq %"class.blink::LayoutObject"* %124, null
  br i1 %125, label %152, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::LayoutObject"* %124 to i1 (%"class.blink::LayoutObject"*)***
  %128 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %127, align 8
  %129 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %128, i64 26
  %130 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %129, align 8
  %131 = call zeroext i1 %130(%"class.blink::LayoutObject"* nonnull %124) #13
  br i1 %131, label %132, label %219

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %124, i64 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = and i160 %137, 541598767187353870268366848
  %139 = icmp eq i160 %138, 0
  br i1 %139, label %219, label %140

140:                                              ; preds = %132
  %141 = lshr i160 %137, 86
  %142 = trunc i160 %141 to i32
  %143 = and i32 %142, 7
  %144 = add nsw i32 %143, -3
  %145 = icmp ult i32 %144, 3
  %146 = and i160 %137, 2854495385411919762116571938898990272765493248
  %147 = icmp eq i160 %146, 0
  %148 = and i1 %147, %145
  br i1 %148, label %149, label %219

149:                                              ; preds = %140
  %150 = load i32, i32* %62, align 8
  %151 = add i32 %150, 1
  store i32 %151, i32* %62, align 8
  br label %219

152:                                              ; preds = %122, %115, %105
  %153 = icmp eq %"class.blink::LayoutObject"* %106, %104
  br i1 %153, label %240, label %154

154:                                              ; preds = %152, %213
  %155 = phi %"class.blink::LayoutObject"* [ %215, %213 ], [ %106, %152 ]
  %156 = bitcast %"class.blink::LayoutObject"* %155 to i1 (%"class.blink::LayoutObject"*)***
  %157 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %157, i64 26
  %159 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %158, align 8
  %160 = call zeroext i1 %159(%"class.blink::LayoutObject"* nonnull %155) #13
  br i1 %160, label %161, label %183

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 5, i32 0
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8
  %167 = and i160 %166, 541598767187353870268366848
  %168 = icmp eq i160 %167, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %161
  %170 = lshr i160 %166, 86
  %171 = trunc i160 %170 to i32
  %172 = and i32 %171, 7
  %173 = add nsw i32 %172, -3
  %174 = icmp ult i32 %173, 3
  %175 = and i160 %166, 2854495385411919762116571938898990272765493248
  %176 = icmp eq i160 %175, 0
  %177 = and i1 %176, %174
  br i1 %177, label %178, label %183

178:                                              ; preds = %169
  %179 = load i32, i32* %62, align 8
  %180 = add i32 %179, -1
  store i32 %180, i32* %62, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %178
  store i8 0, i8* %63, align 4
  br label %183

183:                                              ; preds = %182, %178, %169, %161, %154
  %184 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 9
  %185 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %184, align 8
  %186 = icmp eq %"class.blink::LayoutObject"* %185, null
  br i1 %186, label %213, label %187

187:                                              ; preds = %183
  %188 = bitcast %"class.blink::LayoutObject"* %185 to i1 (%"class.blink::LayoutObject"*)***
  %189 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %188, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %189, i64 26
  %191 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::LayoutObject"* nonnull %185) #13
  br i1 %192, label %193, label %219

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %185, i64 0, i32 5, i32 0
  %195 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %195, i64 0, i32 0, i32 9
  %197 = bitcast [20 x i8]* %196 to i160*
  %198 = load i160, i160* %197, align 8
  %199 = and i160 %198, 541598767187353870268366848
  %200 = icmp eq i160 %199, 0
  br i1 %200, label %219, label %201

201:                                              ; preds = %193
  %202 = lshr i160 %198, 86
  %203 = trunc i160 %202 to i32
  %204 = and i32 %203, 7
  %205 = add nsw i32 %204, -3
  %206 = icmp ult i32 %205, 3
  %207 = and i160 %198, 2854495385411919762116571938898990272765493248
  %208 = icmp eq i160 %207, 0
  %209 = and i1 %208, %206
  br i1 %209, label %210, label %219

210:                                              ; preds = %201
  %211 = load i32, i32* %62, align 8
  %212 = add i32 %211, 1
  store i32 %212, i32* %62, align 8
  br label %219

213:                                              ; preds = %183
  %214 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 7
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %214, align 8
  %216 = icmp ne %"class.blink::LayoutObject"* %215, null
  %217 = icmp ne %"class.blink::LayoutObject"* %215, %104
  %218 = and i1 %216, %217
  br i1 %218, label %154, label %240

219:                                              ; preds = %210, %201, %193, %187, %149, %140, %132, %126
  %220 = phi %"class.blink::LayoutObject"* [ %185, %210 ], [ %185, %201 ], [ %185, %193 ], [ %185, %187 ], [ %124, %149 ], [ %124, %140 ], [ %124, %132 ], [ %124, %126 ]
  %221 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %220, i64 0, i32 4
  %222 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %221 to i96*
  %223 = load i96, i96* %222, align 4
  %224 = and i96 %223, 113336795588871485128704
  %225 = icmp eq i96 %224, 75557863725914323419136
  %226 = and i96 %223, 1115684864
  %227 = icmp ne i96 %226, 0
  %228 = or i1 %227, %225
  br i1 %228, label %238, label %229

229:                                              ; preds = %219
  %230 = call fastcc zeroext i1 @_ZN5blinkL13IsEmptyInlineENS_14LineLayoutItemE(%"class.blink::LayoutObject"* nonnull %220) #13
  br i1 %230, label %231, label %237

231:                                              ; preds = %229
  %232 = bitcast %"class.blink::LayoutObject"* %220 to i1 (%"class.blink::LayoutObject"*)***
  %233 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %232, align 8
  %234 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %233, i64 26
  %235 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %234, align 8
  %236 = call zeroext i1 %235(%"class.blink::LayoutObject"* nonnull %220) #13
  br i1 %236, label %238, label %237

237:                                              ; preds = %231, %229
  br label %105

238:                                              ; preds = %219, %231
  %239 = icmp eq %"class.blink::LayoutObject"* %220, null
  br i1 %239, label %240, label %79

240:                                              ; preds = %79, %84, %238, %152, %213, %59
  %241 = phi %"class.blink::LayoutObject"* [ null, %59 ], [ null, %213 ], [ null, %152 ], [ %81, %79 ], [ %81, %84 ], [ null, %238 ]
  %242 = phi i32 [ %68, %59 ], [ 0, %213 ], [ 0, %152 ], [ %80, %79 ], [ %80, %84 ], [ 0, %238 ]
  %243 = phi i1 [ true, %59 ], [ true, %213 ], [ true, %152 ], [ false, %79 ], [ false, %84 ], [ true, %238 ]
  %244 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7, i32 1, i32 0
  %245 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %244, align 8
  %246 = icmp eq %"class.blink::LayoutObject"* %241, %245
  br i1 %246, label %247, label %251

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 7, i32 3
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br label %251

251:                                              ; preds = %247, %240
  %252 = phi i1 [ false, %240 ], [ %250, %247 ]
  %253 = or i1 %252, %243
  br i1 %253, label %298, label %254

254:                                              ; preds = %251
  %255 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %256 = icmp eq %"class.blink::LayoutObject"* %241, %255
  br i1 %256, label %257, label %260

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %259 = load i32, i32* %258, align 4
  br label %260

260:                                              ; preds = %254, %257
  %261 = phi i32 [ %259, %257 ], [ 2147483647, %254 ]
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %263 = icmp eq %"class.blink::LayoutObject"* %241, %262
  br i1 %263, label %264, label %269

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 6, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = icmp ugt i32 %266, %261
  br i1 %267, label %269, label %268

268:                                              ; preds = %264
  store i8 1, i8* %13, align 8
  br label %269

269:                                              ; preds = %260, %264, %268
  %270 = phi i32 [ %266, %268 ], [ %261, %264 ], [ %261, %260 ]
  %271 = bitcast %"class.blink::LayoutObject"* %241 to i32 (%"class.blink::LayoutObject"*)***
  %272 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %271, align 8
  %273 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %272, i64 74
  %274 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %273, align 8
  %275 = call i32 %274(%"class.blink::LayoutObject"* %241) #13
  %276 = load i32, i32* %62, align 8
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %292, label %278

278:                                              ; preds = %269
  %279 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %280 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %279, align 8
  %281 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0
  %282 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 0
  %283 = call dereferenceable(16) %"class.WTF::Vector.2293"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.2293"* %281, %"class.WTF::Vector.2293"* dereferenceable(16) %282) #13
  %284 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 1
  %285 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 13, i32 1
  %286 = bitcast i32* %284 to i8*
  %287 = bitcast i32* %285 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %286, i8* align 8 %287, i64 9, i1 false) #13
  %288 = load i32 (%"class.blink::LayoutObject"*)**, i32 (%"class.blink::LayoutObject"*)*** %271, align 8
  %289 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %288, i64 74
  %290 = load i32 (%"class.blink::LayoutObject"*)*, i32 (%"class.blink::LayoutObject"*)** %289, align 8
  %291 = call i32 %290(%"class.blink::LayoutObject"* %241) #13
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* %241, i32 %242, i32 %291, %"class.blink::LayoutObject"* %280, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 0, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3) #13
  br label %298

292:                                              ; preds = %269
  %293 = icmp eq i32 %275, 0
  %294 = add i32 %270, 1
  %295 = select i1 %293, i32 0, i32 %294
  %296 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %18, i64 0, i32 0, i32 0
  %297 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %296, align 8
  call fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"* %241, i32 %242, i32 %295, %"class.blink::LayoutObject"* %297, %"class.blink::BidiResolver"* dereferenceable(424) %0, i32 1, %"class.blink::IsolateTracker"* nonnull dereferenceable(48) %3)
  br label %298

298:                                              ; preds = %278, %292, %251
  br i1 %252, label %299, label %300

299:                                              ; preds = %298
  store i8 1, i8* %13, align 8
  br label %300

300:                                              ; preds = %299, %298
  %301 = load i32, i32* %62, align 8
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %310, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 0, i32 0
  %305 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %304, align 8
  %306 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %307 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL14BidiNextSharedINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_NS_19EmptyInlineBehaviorEPb(%"class.blink::LayoutObject"* %305, %"class.blink::LayoutObject"* %306, %"class.blink::BidiResolver"* null, i32 0, i8* null) #13
  store %"class.blink::LayoutObject"* %307, %"class.blink::LayoutObject"** %9, align 8
  %308 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %308, align 4
  %309 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %309, align 8
  br label %342

310:                                              ; preds = %300
  %311 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 1, i32 0
  %312 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %311, align 8
  %313 = icmp eq %"class.blink::LayoutObject"* %312, null
  br i1 %313, label %342, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %312, i64 0, i32 4
  %316 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %315 to i96*
  %317 = load i96, i96* %316, align 4
  %318 = and i96 %317, 33554432
  %319 = icmp eq i96 %318, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  %322 = load i32, i32* %321, align 4
  %323 = icmp ult i32 %322, 2147483647
  br i1 %323, label %324, label %326

324:                                              ; preds = %320
  %325 = add nuw nsw i32 %322, 1
  store i32 %325, i32* %321, align 4
  br label %326

326:                                              ; preds = %324, %320
  %327 = phi i32 [ %325, %324 ], [ %322, %320 ]
  %328 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %312, i64 1, i32 4, i32 0, i64 4
  %329 = bitcast i8* %328 to %"class.WTF::StringImpl"**
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %331, label %336, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 1
  %334 = load i32, i32* %333, align 4
  %335 = icmp ult i32 %327, %334
  br i1 %335, label %342, label %336

336:                                              ; preds = %314, %326, %332
  %337 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %8, i64 0, i32 0, i32 0
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %337, align 8
  %339 = call fastcc %"class.blink::LayoutObject"* @_ZN5blinkL14BidiNextSharedINS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEEEENS_14LineLayoutItemES6_S6_PT_NS_19EmptyInlineBehaviorEPb(%"class.blink::LayoutObject"* %338, %"class.blink::LayoutObject"* nonnull %312, %"class.blink::BidiResolver"* null, i32 0, i8* null) #13
  store %"class.blink::LayoutObject"* %339, %"class.blink::LayoutObject"** %9, align 8
  %340 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %340, align 4
  %341 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 2, i32 2
  store i32 -1, i32* %341, align 8
  br label %342

342:                                              ; preds = %310, %336, %332, %303
  %343 = bitcast %"class.blink::InlineIterator"* %18 to i8*
  %344 = bitcast %"class.blink::InlineIterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 24, i1 false)
  %345 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %346 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %345, align 8
  %347 = icmp eq %"class.blink::InlineIterator"* %346, null
  %348 = bitcast %"class.blink::InlineIterator"* %346 to i8*
  br i1 %347, label %355, label %349, !prof !10

349:                                              ; preds = %342
  %350 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %354, label %353, !prof !9

353:                                              ; preds = %349
  store i32 0, i32* %350, align 4
  br label %354

354:                                              ; preds = %353, %349
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #13
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %345, align 8
  br label %355

355:                                              ; preds = %342, %354
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #13
  br label %356

356:                                              ; preds = %12, %2, %355, %7
  %357 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 5
  store i32 10, i32* %357, align 8
  %358 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %0, i64 0, i32 4, i32 0
  store i32 10, i32* %358, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL45AdjustMidpointsAndAppendRunsForObjectIfNeededENS_14LineLayoutItemEjjS0_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEENS_17AppendRunBehaviorERNS_14IsolateTrackerE(%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"* dereferenceable(424), i32, %"class.blink::IsolateTracker"* dereferenceable(48)) unnamed_addr #0 {
  %8 = icmp ugt i32 %1, %2
  br i1 %8, label %255, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8388608
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %255

15:                                               ; preds = %9
  %16 = and i96 %12, 113336795588871485128704
  %17 = icmp eq i96 %16, 75557863725914323419136
  br i1 %17, label %18, label %34

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 37
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 31
  switch i32 %26, label %27 [
    i32 0, label %34
    i32 25, label %34
    i32 19, label %34
    i32 17, label %34
    i32 15, label %34
    i32 5, label %34
    i32 3, label %34
    i32 24, label %34
  ]

27:                                               ; preds = %18
  %28 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %29 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*)***
  %30 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, i64 26
  %32 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %28) #13
  br i1 %33, label %34, label %255

34:                                               ; preds = %18, %18, %18, %18, %18, %18, %18, %18, %15, %27
  %35 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 2
  %36 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 1
  %37 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 0
  %38 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 13, i32 3
  %39 = icmp eq i32 %5, 0
  %40 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 4, i32 3, i32 0
  %41 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 5
  %42 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 0
  %43 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 1
  %44 = bitcast %"struct.blink::BidiRun"** %43 to %"struct.blink::BidiCharacterRun"**
  %45 = bitcast %"struct.blink::BidiRun"** %42 to i8**
  %46 = bitcast %"struct.blink::BidiRun"** %43 to i8**
  %47 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %4, i64 0, i32 12, i32 3
  br label %48

48:                                               ; preds = %141, %34
  %49 = phi i32 [ %1, %34 ], [ %142, %141 ]
  %50 = load i32, i32* %35, align 4
  %51 = load i32, i32* %36, align 4
  %52 = icmp ult i32 %50, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = tail call dereferenceable(24) %"class.blink::InlineIterator"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2293"* %37, i32 %50) #13
  %55 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 0, i32 1, i32 0
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %54, i64 0, i32 3
  %58 = load i32, i32* %57, align 4
  br label %59

59:                                               ; preds = %53, %48
  %60 = phi i32 [ %58, %53 ], [ 0, %48 ]
  %61 = phi %"class.blink::LayoutObject"* [ %56, %53 ], [ null, %48 ]
  %62 = load i8, i8* %38, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %71, label %64

64:                                               ; preds = %59
  %65 = icmp eq %"class.blink::LayoutObject"* %61, %0
  %66 = and i1 %52, %65
  br i1 %66, label %67, label %255

67:                                               ; preds = %64
  store i8 0, i8* %38, align 8
  %68 = load i32, i32* %35, align 4
  %69 = add i32 %68, 1
  store i32 %69, i32* %35, align 4
  %70 = icmp ult i32 %60, %2
  br i1 %70, label %141, label %255

71:                                               ; preds = %59
  %72 = xor i1 %52, true
  %73 = icmp ne %"class.blink::LayoutObject"* %61, %0
  %74 = or i1 %73, %72
  br i1 %74, label %75, label %132

75:                                               ; preds = %71
  %76 = icmp ugt i32 %49, %2
  br i1 %76, label %255, label %77

77:                                               ; preds = %75, %130
  %78 = phi i32 [ %82, %130 ], [ %49, %75 ]
  %79 = sub i32 %2, %78
  %80 = icmp ugt i32 %79, 65535
  %81 = add i32 %78, 65535
  %82 = select i1 %80, i32 %81, i32 %2
  br i1 %39, label %83, label %84

83:                                               ; preds = %77
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %78, i32 %82, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #13
  br label %130

84:                                               ; preds = %77
  %85 = tail call noalias i8* @malloc(i64 40) #13
  %86 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %87 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %86, i64 0, i32 1
  %88 = load i16, i16* %87, align 4
  %89 = trunc i16 %88 to i8
  %90 = and i8 %89, 127
  %91 = load i32, i32* %41, align 8
  %92 = lshr i16 %88, 7
  %93 = and i16 %92, 31
  %94 = zext i16 %93 to i32
  %95 = lshr i16 %88, 12
  %96 = trunc i16 %95 to i8
  %97 = and i8 %96, 1
  store i8 %97, i8* %85, align 8
  %98 = getelementptr inbounds i8, i8* %85, i64 1
  %99 = getelementptr inbounds i8, i8* %85, i64 8
  %100 = bitcast i8* %99 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %100, align 8
  %101 = getelementptr inbounds i8, i8* %85, i64 16
  %102 = bitcast i8* %101 to i32*
  store i32 %78, i32* %102, align 8
  %103 = getelementptr inbounds i8, i8* %85, i64 20
  %104 = bitcast i8* %103 to i32*
  store i32 %82, i32* %104, align 4
  %105 = icmp eq i32 %91, 10
  %106 = select i1 %105, i32 %94, i32 %91
  store i8 %90, i8* %98, align 1
  %107 = and i8 %89, 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %84
  switch i32 %106, label %117 [
    i32 5, label %110
    i32 2, label %110
    i32 0, label %110
  ]

110:                                              ; preds = %109, %109, %109
  %111 = add nuw i8 %90, 1
  store i8 %111, i8* %98, align 1
  br label %117

112:                                              ; preds = %84
  switch i32 %106, label %117 [
    i32 1, label %113
    i32 5, label %115
    i32 2, label %115
  ]

113:                                              ; preds = %112
  %114 = add nuw i8 %90, 1
  store i8 %114, i8* %98, align 1
  br label %117

115:                                              ; preds = %112, %112
  %116 = add nuw i8 %90, 2
  store i8 %116, i8* %98, align 1
  br label %117

117:                                              ; preds = %115, %113, %112, %110, %109
  %118 = getelementptr inbounds i8, i8* %85, i64 24
  %119 = bitcast i8* %118 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %119, align 8
  %120 = getelementptr inbounds i8, i8* %85, i64 32
  %121 = bitcast i8* %120 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %121, align 8
  store i8 %97, i8* %85, align 8
  %122 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %123 = icmp eq %"struct.blink::BidiRun"* %122, null
  %124 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %125 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %124, i64 0, i32 2
  %126 = bitcast %"struct.blink::BidiCharacterRun"** %125 to i8**
  %127 = select i1 %123, i8** %45, i8** %126
  store i8* %85, i8** %127, align 8
  store i8* %85, i8** %46, align 8
  %128 = load i32, i32* %47, align 8
  %129 = add i32 %128, 1
  store i32 %129, i32* %47, align 8
  br label %130

130:                                              ; preds = %117, %83
  %131 = icmp ult i32 %82, %2
  br i1 %131, label %77, label %255

132:                                              ; preds = %71
  %133 = add i32 %60, 1
  %134 = icmp ugt i32 %133, %2
  br i1 %134, label %198, label %135

135:                                              ; preds = %132
  store i8 1, i8* %38, align 8
  %136 = load i32, i32* %35, align 4
  %137 = add i32 %136, 1
  store i32 %137, i32* %35, align 4
  %138 = icmp eq i32 %60, -1
  br i1 %138, label %255, label %139

139:                                              ; preds = %135
  %140 = icmp ugt i32 %133, %49
  br i1 %140, label %143, label %141

141:                                              ; preds = %196, %139, %67
  %142 = phi i32 [ %60, %67 ], [ %133, %139 ], [ %133, %196 ]
  br label %48

143:                                              ; preds = %139, %196
  %144 = phi i32 [ %148, %196 ], [ %49, %139 ]
  %145 = sub i32 %133, %144
  %146 = icmp ugt i32 %145, 65535
  %147 = add i32 %144, 65535
  %148 = select i1 %146, i32 %147, i32 %133
  br i1 %39, label %149, label %150

149:                                              ; preds = %143
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %144, i32 %148, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #13
  br label %196

150:                                              ; preds = %143
  %151 = tail call noalias i8* @malloc(i64 40) #13
  %152 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %153 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %152, i64 0, i32 1
  %154 = load i16, i16* %153, align 4
  %155 = trunc i16 %154 to i8
  %156 = and i8 %155, 127
  %157 = load i32, i32* %41, align 8
  %158 = lshr i16 %154, 7
  %159 = and i16 %158, 31
  %160 = zext i16 %159 to i32
  %161 = lshr i16 %154, 12
  %162 = trunc i16 %161 to i8
  %163 = and i8 %162, 1
  store i8 %163, i8* %151, align 8
  %164 = getelementptr inbounds i8, i8* %151, i64 1
  %165 = getelementptr inbounds i8, i8* %151, i64 8
  %166 = bitcast i8* %165 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %166, align 8
  %167 = getelementptr inbounds i8, i8* %151, i64 16
  %168 = bitcast i8* %167 to i32*
  store i32 %144, i32* %168, align 8
  %169 = getelementptr inbounds i8, i8* %151, i64 20
  %170 = bitcast i8* %169 to i32*
  store i32 %148, i32* %170, align 4
  %171 = icmp eq i32 %157, 10
  %172 = select i1 %171, i32 %160, i32 %157
  store i8 %156, i8* %164, align 1
  %173 = and i8 %155, 1
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %150
  switch i32 %172, label %183 [
    i32 5, label %176
    i32 2, label %176
    i32 0, label %176
  ]

176:                                              ; preds = %175, %175, %175
  %177 = add nuw i8 %156, 1
  store i8 %177, i8* %164, align 1
  br label %183

178:                                              ; preds = %150
  switch i32 %172, label %183 [
    i32 1, label %179
    i32 5, label %181
    i32 2, label %181
  ]

179:                                              ; preds = %178
  %180 = add nuw i8 %156, 1
  store i8 %180, i8* %164, align 1
  br label %183

181:                                              ; preds = %178, %178
  %182 = add nuw i8 %156, 2
  store i8 %182, i8* %164, align 1
  br label %183

183:                                              ; preds = %181, %179, %178, %176, %175
  %184 = getelementptr inbounds i8, i8* %151, i64 24
  %185 = bitcast i8* %184 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %185, align 8
  %186 = getelementptr inbounds i8, i8* %151, i64 32
  %187 = bitcast i8* %186 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %187, align 8
  store i8 %163, i8* %151, align 8
  %188 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %189 = icmp eq %"struct.blink::BidiRun"* %188, null
  %190 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %191 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %190, i64 0, i32 2
  %192 = bitcast %"struct.blink::BidiCharacterRun"** %191 to i8**
  %193 = select i1 %189, i8** %45, i8** %192
  store i8* %151, i8** %193, align 8
  store i8* %151, i8** %46, align 8
  %194 = load i32, i32* %47, align 8
  %195 = add i32 %194, 1
  store i32 %195, i32* %47, align 8
  br label %196

196:                                              ; preds = %183, %149
  %197 = icmp ult i32 %148, %133
  br i1 %197, label %143, label %141

198:                                              ; preds = %132
  %199 = icmp ugt i32 %49, %2
  br i1 %199, label %255, label %200

200:                                              ; preds = %198, %253
  %201 = phi i32 [ %205, %253 ], [ %49, %198 ]
  %202 = sub i32 %2, %201
  %203 = icmp ugt i32 %202, 65535
  %204 = add i32 %201, 65535
  %205 = select i1 %203, i32 %204, i32 %2
  br i1 %39, label %206, label %207

206:                                              ; preds = %200
  tail call void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"* %6, %"class.blink::LayoutObject"* %0, i32 %201, i32 %205, %"class.blink::LayoutObject"* %3, %"class.blink::BidiResolver"* dereferenceable(424) %4) #13
  br label %253

207:                                              ; preds = %200
  %208 = tail call noalias i8* @malloc(i64 40) #13
  %209 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %210 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %209, i64 0, i32 1
  %211 = load i16, i16* %210, align 4
  %212 = trunc i16 %211 to i8
  %213 = and i8 %212, 127
  %214 = load i32, i32* %41, align 8
  %215 = lshr i16 %211, 7
  %216 = and i16 %215, 31
  %217 = zext i16 %216 to i32
  %218 = lshr i16 %211, 12
  %219 = trunc i16 %218 to i8
  %220 = and i8 %219, 1
  store i8 %220, i8* %208, align 8
  %221 = getelementptr inbounds i8, i8* %208, i64 1
  %222 = getelementptr inbounds i8, i8* %208, i64 8
  %223 = bitcast i8* %222 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %223, align 8
  %224 = getelementptr inbounds i8, i8* %208, i64 16
  %225 = bitcast i8* %224 to i32*
  store i32 %201, i32* %225, align 8
  %226 = getelementptr inbounds i8, i8* %208, i64 20
  %227 = bitcast i8* %226 to i32*
  store i32 %205, i32* %227, align 4
  %228 = icmp eq i32 %214, 10
  %229 = select i1 %228, i32 %217, i32 %214
  store i8 %213, i8* %221, align 1
  %230 = and i8 %212, 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %235, label %232

232:                                              ; preds = %207
  switch i32 %229, label %240 [
    i32 5, label %233
    i32 2, label %233
    i32 0, label %233
  ]

233:                                              ; preds = %232, %232, %232
  %234 = add nuw i8 %213, 1
  store i8 %234, i8* %221, align 1
  br label %240

235:                                              ; preds = %207
  switch i32 %229, label %240 [
    i32 1, label %236
    i32 5, label %238
    i32 2, label %238
  ]

236:                                              ; preds = %235
  %237 = add nuw i8 %213, 1
  store i8 %237, i8* %221, align 1
  br label %240

238:                                              ; preds = %235, %235
  %239 = add nuw i8 %213, 2
  store i8 %239, i8* %221, align 1
  br label %240

240:                                              ; preds = %238, %236, %235, %233, %232
  %241 = getelementptr inbounds i8, i8* %208, i64 24
  %242 = bitcast i8* %241 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %242, align 8
  %243 = getelementptr inbounds i8, i8* %208, i64 32
  %244 = bitcast i8* %243 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %244, align 8
  store i8 %220, i8* %208, align 8
  %245 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %42, align 8
  %246 = icmp eq %"struct.blink::BidiRun"* %245, null
  %247 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %44, align 8
  %248 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %247, i64 0, i32 2
  %249 = bitcast %"struct.blink::BidiCharacterRun"** %248 to i8**
  %250 = select i1 %246, i8** %45, i8** %249
  store i8* %208, i8** %250, align 8
  store i8* %208, i8** %46, align 8
  %251 = load i32, i32* %47, align 8
  %252 = add i32 %251, 1
  store i32 %252, i32* %47, align 8
  br label %253

253:                                              ; preds = %240, %206
  %254 = icmp ult i32 %205, %2
  br i1 %254, label %200, label %255

255:                                              ; preds = %67, %135, %64, %253, %130, %27, %198, %75, %9, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.2293"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.2293"*, %"class.WTF::Vector.2293"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.2293"* %1, %0
  br i1 %3, label %90, label %4, !prof !9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.2293"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.2293"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #13
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !10

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %31, align 8
  %33 = icmp eq %"class.blink::InlineIterator"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm(i64 %34) #13
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InlineIteratorEEEPKcv, i64 0, i64 0)) #13
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.2293"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = udiv i64 %35, 24
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = udiv i64 %35, 24
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"class.blink::InlineIterator"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"class.blink::InlineIterator"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !10

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = mul nuw nsw i64 %52, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* nonnull align 8 %49, i64 %53, i1 false) #13
  %54 = bitcast %"class.WTF::Vector.2293"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #13
  %58 = bitcast %"class.WTF::Vector.2293"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.2293"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.2293"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = mul nuw nsw i64 %65, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %63, i64 %69, i1 false) #13
  %70 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %70, i64 %72
  %74 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %66, align 8
  %75 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %74, i64 %72
  %76 = icmp ne %"class.blink::InlineIterator"* %75, null
  %77 = icmp ne %"class.blink::InlineIterator"* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !10

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %70, i64 %81
  %83 = bitcast %"class.blink::InlineIterator"* %75 to i8*
  %84 = bitcast %"class.blink::InlineIterator"* %73 to i8*
  %85 = ptrtoint %"class.blink::InlineIterator"* %82 to i64
  %86 = ptrtoint %"class.blink::InlineIterator"* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %83, i8* nonnull align 8 %84, i64 %87, i1 false) #13
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.2293"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink14InlineIteratorEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::InlineIterator"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2293"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2293", %"class.WTF::Vector.2293"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::InlineIterator", %"class.blink::InlineIterator"* %24, i64 %25
  ret %"class.blink::InlineIterator"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14IsolateTracker21AddFakeRunIfNecessaryENS_14LineLayoutItemEjjS1_RNS_12BidiResolverINS_14InlineIteratorENS_7BidiRunENS_15BidiIsolatedRunEEE(%"class.blink::IsolateTracker"*, %"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutObject"*, %"class.blink::BidiResolver"* dereferenceable(424)) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"struct.blink::BidiRun"*, align 8
  %8 = alloca %"struct.blink::BidiIsolatedRun", align 8
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 8388608
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %130

14:                                               ; preds = %6
  %15 = and i96 %11, 113336795588871485128704
  %16 = icmp eq i96 %15, 75557863725914323419136
  br i1 %16, label %17, label %33

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = lshr i160 %22, 37
  %24 = trunc i160 %23 to i32
  %25 = and i32 %24, 31
  switch i32 %25, label %26 [
    i32 0, label %33
    i32 25, label %33
    i32 19, label %33
    i32 17, label %33
    i32 15, label %33
    i32 5, label %33
    i32 3, label %33
    i32 24, label %33
  ]

26:                                               ; preds = %17
  %27 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #13
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 26
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27) #13
  br i1 %32, label %33, label %130

33:                                               ; preds = %26, %17, %17, %17, %17, %17, %17, %17, %17, %14
  %34 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %0, i64 0, i32 1
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %130

37:                                               ; preds = %33
  %38 = ptrtoint %"class.blink::LayoutObject"* %4 to i64
  %39 = tail call noalias i8* @malloc(i64 40) #13
  %40 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 4, i32 3, i32 0
  %41 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %41, i64 0, i32 1
  %43 = load i16, i16* %42, align 4
  %44 = trunc i16 %43 to i8
  %45 = and i8 %44, 127
  %46 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 5
  %47 = load i32, i32* %46, align 8
  %48 = lshr i16 %43, 7
  %49 = and i16 %48, 31
  %50 = zext i16 %49 to i32
  %51 = lshr i16 %43, 12
  %52 = trunc i16 %51 to i8
  %53 = and i8 %52, 1
  store i8 %53, i8* %39, align 8
  %54 = getelementptr inbounds i8, i8* %39, i64 1
  %55 = getelementptr inbounds i8, i8* %39, i64 8
  %56 = bitcast i8* %55 to %"struct.blink::BidiCharacterRun"**
  store %"struct.blink::BidiCharacterRun"* null, %"struct.blink::BidiCharacterRun"** %56, align 8
  %57 = getelementptr inbounds i8, i8* %39, i64 16
  %58 = bitcast i8* %57 to i32*
  store i32 %2, i32* %58, align 8
  %59 = getelementptr inbounds i8, i8* %39, i64 20
  %60 = bitcast i8* %59 to i32*
  store i32 %2, i32* %60, align 4
  %61 = icmp eq i32 %47, 10
  %62 = select i1 %61, i32 %50, i32 %47
  store i8 %45, i8* %54, align 1
  %63 = and i8 %44, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %68, label %65

65:                                               ; preds = %37
  switch i32 %62, label %73 [
    i32 5, label %66
    i32 2, label %66
    i32 0, label %66
  ]

66:                                               ; preds = %65, %65, %65
  %67 = add nuw i8 %45, 1
  store i8 %67, i8* %54, align 1
  br label %73

68:                                               ; preds = %37
  switch i32 %62, label %73 [
    i32 1, label %69
    i32 5, label %71
    i32 2, label %71
  ]

69:                                               ; preds = %68
  %70 = add nuw i8 %45, 1
  store i8 %70, i8* %54, align 1
  br label %73

71:                                               ; preds = %68, %68
  %72 = add nuw i8 %45, 2
  store i8 %72, i8* %54, align 1
  br label %73

73:                                               ; preds = %71, %69, %68, %66, %65
  %74 = getelementptr inbounds i8, i8* %39, i64 24
  %75 = bitcast i8* %74 to %"class.blink::LayoutObject"**
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %39, i64 32
  %77 = bitcast i8* %76 to %"class.blink::InlineBox"**
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %77, align 8
  store i8 %53, i8* %39, align 8
  %78 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 0
  %79 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %78, align 8
  %80 = icmp eq %"struct.blink::BidiRun"* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  %82 = bitcast %"struct.blink::BidiRun"** %78 to i8**
  store i8* %39, i8** %82, align 8
  br label %90

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %85 = bitcast %"struct.blink::BidiRun"** %84 to %"struct.blink::BidiCharacterRun"**
  %86 = load %"struct.blink::BidiCharacterRun"*, %"struct.blink::BidiCharacterRun"** %85, align 8
  %87 = getelementptr inbounds %"struct.blink::BidiCharacterRun", %"struct.blink::BidiCharacterRun"* %86, i64 0, i32 2
  %88 = bitcast %"struct.blink::BidiCharacterRun"** %87 to i8**
  store i8* %39, i8** %88, align 8
  %89 = load %"class.blink::BidiContext"*, %"class.blink::BidiContext"** %40, align 8
  br label %90

90:                                               ; preds = %83, %81
  %91 = phi %"class.blink::BidiContext"* [ %41, %81 ], [ %89, %83 ]
  %92 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 1
  %93 = bitcast %"struct.blink::BidiRun"** %92 to i8**
  store i8* %39, i8** %93, align 8
  %94 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 12, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, 1
  store i32 %96, i32* %94, align 8
  %97 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15
  %98 = bitcast %"struct.blink::BidiIsolatedRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #13
  %99 = getelementptr inbounds %"class.blink::BidiContext", %"class.blink::BidiContext"* %91, i64 0, i32 1
  %100 = load i16, i16* %99, align 4
  %101 = trunc i16 %100 to i8
  %102 = and i8 %101, 127
  %103 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %103, align 8
  %104 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 1
  %105 = bitcast %"class.blink::LineLayoutItem"* %104 to i64*
  store i64 %38, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 2
  %107 = bitcast %"struct.blink::BidiRun"** %106 to i8**
  store i8* %39, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 3
  store i32 %2, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %8, i64 0, i32 4
  store i8 %102, i8* %109, align 4
  %110 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 15, i32 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %123, label %115, !prof !9

115:                                              ; preds = %90
  %116 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %97, i64 0, i32 0, i32 0, i32 0
  %117 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %116, align 8
  %118 = zext i32 %111 to i64
  %119 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %117, i64 %118
  %120 = bitcast %"struct.blink::BidiIsolatedRun"* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* nonnull align 8 %98, i64 32, i1 false) #13
  %121 = load i32, i32* %110, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %110, align 4
  br label %124

123:                                              ; preds = %90
  call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2298"* %97, %"struct.blink::BidiIsolatedRun"* nonnull dereferenceable(32) %8) #13
  br label %124

124:                                              ; preds = %115, %123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #13
  %125 = getelementptr inbounds %"class.blink::IsolateTracker", %"class.blink::IsolateTracker"* %0, i64 0, i32 3
  %126 = bitcast %"struct.blink::BidiRun"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #13
  %127 = bitcast %"struct.blink::BidiRun"** %7 to i8**
  store i8* %39, i8** %127, align 8
  %128 = getelementptr inbounds %"class.blink::BidiResolver", %"class.blink::BidiResolver"* %5, i64 0, i32 20, i32 0
  %129 = call { %"struct.WTF::KeyValuePair.2312"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2309"* %128, %"struct.blink::BidiRun"** nonnull dereferenceable(8) %7, %"class.blink::MidpointState"* dereferenceable(32) %125) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #13
  store i8 1, i8* %34, align 4
  br label %130

130:                                              ; preds = %26, %6, %33, %124
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2298"*, %"struct.blink::BidiIsolatedRun"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  %8 = icmp ugt %"struct.blink::BidiIsolatedRun"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::BidiIsolatedRun"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !10

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::BidiIsolatedRun"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2298"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::BidiIsolatedRun"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2298"* %0, i32 %22) #13
  %36 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::BidiIsolatedRun"* %1 to i64
  %39 = ptrtoint %"struct.blink::BidiIsolatedRun"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !10

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::BidiIsolatedRun"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %55) #13
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #13
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2298"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::BidiIsolatedRun"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2298"* %0, i32 %50) #13
  %64 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::BidiIsolatedRun"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::BidiIsolatedRun"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::BidiIsolatedRun"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %69, i64 %72
  %74 = bitcast %"struct.blink::BidiIsolatedRun"* %73 to i8*
  %75 = bitcast %"struct.blink::BidiIsolatedRun"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 32, i1 false) #13
  %76 = load i32, i32* %3, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15BidiIsolatedRunELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2298"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.2298"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %4
  %15 = shl nuw nsw i64 %9, 5
  %16 = add nsw i64 %15, -32
  %17 = lshr exact i64 %16, 5
  %18 = add nuw nsw i64 %17, 1
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %14, %21
  %22 = phi %"struct.blink::BidiIsolatedRun"* [ %28, %21 ], [ %6, %14 ]
  %23 = phi %"struct.blink::BidiIsolatedRun"* [ %27, %21 ], [ null, %14 ]
  %24 = phi i64 [ %29, %21 ], [ %19, %14 ]
  %25 = bitcast %"struct.blink::BidiIsolatedRun"* %23 to i8*
  %26 = bitcast %"struct.blink::BidiIsolatedRun"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 32, i1 false) #13
  %27 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %23, i64 1
  %28 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %22, i64 1
  %29 = add i64 %24, -1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %21, !llvm.loop !66

31:                                               ; preds = %21, %14
  %32 = phi %"struct.blink::BidiIsolatedRun"* [ %6, %14 ], [ %28, %21 ]
  %33 = phi %"struct.blink::BidiIsolatedRun"* [ null, %14 ], [ %27, %21 ]
  %34 = icmp ult i64 %16, 96
  br i1 %34, label %55, label %35

35:                                               ; preds = %31, %35
  %36 = phi %"struct.blink::BidiIsolatedRun"* [ %53, %35 ], [ %32, %31 ]
  %37 = phi %"struct.blink::BidiIsolatedRun"* [ %52, %35 ], [ %33, %31 ]
  %38 = bitcast %"struct.blink::BidiIsolatedRun"* %37 to i8*
  %39 = bitcast %"struct.blink::BidiIsolatedRun"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 32, i1 false) #13
  %40 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 1
  %41 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 1
  %42 = bitcast %"struct.blink::BidiIsolatedRun"* %40 to i8*
  %43 = bitcast %"struct.blink::BidiIsolatedRun"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 32, i1 false) #13
  %44 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 2
  %45 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 2
  %46 = bitcast %"struct.blink::BidiIsolatedRun"* %44 to i8*
  %47 = bitcast %"struct.blink::BidiIsolatedRun"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 32, i1 false) #13
  %48 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 3
  %49 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 3
  %50 = bitcast %"struct.blink::BidiIsolatedRun"* %48 to i8*
  %51 = bitcast %"struct.blink::BidiIsolatedRun"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 32, i1 false) #13
  %52 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %37, i64 4
  %53 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %36, i64 4
  %54 = icmp eq %"struct.blink::BidiIsolatedRun"* %53, %10
  br i1 %54, label %55, label %35

55:                                               ; preds = %31, %35, %4
  %56 = bitcast %"struct.blink::BidiIsolatedRun"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #13
  br label %122

57:                                               ; preds = %2
  %58 = zext i32 %1 to i64
  %59 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64 %58) #13
  %60 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15BidiIsolatedRunEEEPKcv, i64 0, i64 0)) #13
  %61 = lshr i64 %59, 5
  %62 = ptrtoint i8* %60 to i64
  %63 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::BidiIsolatedRun"*, %"struct.blink::BidiIsolatedRun"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %64, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %57
  %71 = bitcast %"struct.blink::BidiIsolatedRun"* %64 to i8*
  br label %117

72:                                               ; preds = %57
  %73 = bitcast i8* %60 to %"struct.blink::BidiIsolatedRun"*
  %74 = shl nuw nsw i64 %67, 5
  %75 = add nsw i64 %74, -32
  %76 = lshr exact i64 %75, 5
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %90, label %80

80:                                               ; preds = %72, %80
  %81 = phi %"struct.blink::BidiIsolatedRun"* [ %87, %80 ], [ %64, %72 ]
  %82 = phi %"struct.blink::BidiIsolatedRun"* [ %86, %80 ], [ %73, %72 ]
  %83 = phi i64 [ %88, %80 ], [ %78, %72 ]
  %84 = bitcast %"struct.blink::BidiIsolatedRun"* %82 to i8*
  %85 = bitcast %"struct.blink::BidiIsolatedRun"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 32, i1 false) #13
  %86 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %82, i64 1
  %87 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %81, i64 1
  %88 = add i64 %83, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %80, !llvm.loop !67

90:                                               ; preds = %80, %72
  %91 = phi %"struct.blink::BidiIsolatedRun"* [ %64, %72 ], [ %87, %80 ]
  %92 = phi %"struct.blink::BidiIsolatedRun"* [ %73, %72 ], [ %86, %80 ]
  %93 = icmp ult i64 %75, 96
  br i1 %93, label %114, label %94

94:                                               ; preds = %90, %94
  %95 = phi %"struct.blink::BidiIsolatedRun"* [ %112, %94 ], [ %91, %90 ]
  %96 = phi %"struct.blink::BidiIsolatedRun"* [ %111, %94 ], [ %92, %90 ]
  %97 = bitcast %"struct.blink::BidiIsolatedRun"* %96 to i8*
  %98 = bitcast %"struct.blink::BidiIsolatedRun"* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 32, i1 false) #13
  %99 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 1
  %100 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 1
  %101 = bitcast %"struct.blink::BidiIsolatedRun"* %99 to i8*
  %102 = bitcast %"struct.blink::BidiIsolatedRun"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 32, i1 false) #13
  %103 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 2
  %104 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 2
  %105 = bitcast %"struct.blink::BidiIsolatedRun"* %103 to i8*
  %106 = bitcast %"struct.blink::BidiIsolatedRun"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 32, i1 false) #13
  %107 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 3
  %108 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 3
  %109 = bitcast %"struct.blink::BidiIsolatedRun"* %107 to i8*
  %110 = bitcast %"struct.blink::BidiIsolatedRun"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 32, i1 false) #13
  %111 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %96, i64 4
  %112 = getelementptr inbounds %"struct.blink::BidiIsolatedRun", %"struct.blink::BidiIsolatedRun"* %95, i64 4
  %113 = icmp eq %"struct.blink::BidiIsolatedRun"* %112, %68
  br i1 %113, label %114, label %94

114:                                              ; preds = %94, %90
  %115 = bitcast %"class.WTF::Vector.2298"* %0 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %70, %114
  %118 = phi i8* [ %116, %114 ], [ %71, %70 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %118) #13
  %119 = bitcast %"class.WTF::Vector.2298"* %0 to i64*
  store atomic i64 %62, i64* %119 monotonic, align 8
  %120 = trunc i64 %61 to i32
  %121 = getelementptr inbounds %"class.WTF::Vector.2298", %"class.WTF::Vector.2298"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %120, i32* %121, align 8
  br label %122

122:                                              ; preds = %117, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15BidiIsolatedRunEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2312"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EES3_RKS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.2309"*, %"struct.blink::BidiRun"** dereferenceable(8), %"class.blink::MidpointState"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca [9 x i8], align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.2312"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair.2312"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2309"* %0, %"struct.WTF::KeyValuePair.2312"* null)
  %10 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair.2312"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = bitcast %"struct.blink::BidiRun"** %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = shl i64 %18, 32
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 22
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 13
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 8
  %28 = xor i64 %27, %26
  %29 = mul i64 %28, 9
  %30 = lshr i64 %29, 15
  %31 = xor i64 %30, %29
  %32 = shl i64 %31, 27
  %33 = xor i64 %32, -1
  %34 = add i64 %31, %33
  %35 = lshr i64 %34, 31
  %36 = xor i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = and i32 %15, %37
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %12, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %40, i64 0, i32 0
  %42 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %41, align 8
  %43 = icmp eq %"struct.blink::BidiRun"* %42, null
  %44 = inttoptr i64 %18 to %"struct.blink::BidiRun"*
  br i1 %43, label %79, label %45

45:                                               ; preds = %11
  %46 = xor i32 %37, -1
  %47 = lshr i32 %37, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %66
  %60 = phi %"struct.blink::BidiRun"* [ %42, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.2312"* [ %40, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.2312"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %39, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"struct.blink::BidiRun"* %60, %44
  br i1 %65, label %120, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"struct.blink::BidiRun"* %60, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.2312"* %61, %"struct.WTF::KeyValuePair.2312"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %16
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %12, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %73, i64 0, i32 0
  %75 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %74, align 8
  %76 = icmp eq %"struct.blink::BidiRun"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.2312"* %68, null
  br i1 %78, label %79, label %82

79:                                               ; preds = %11, %77
  %80 = phi %"struct.WTF::KeyValuePair.2312"* [ %73, %77 ], [ %40, %11 ]
  %81 = bitcast %"struct.WTF::KeyValuePair.2312"* %80 to i64*
  br label %98

82:                                               ; preds = %77
  %83 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %83)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 9, i1 false)
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %68, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %68, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %87 = bitcast %"class.blink::MidpointState"* %84 to i64*
  %88 = bitcast %"struct.WTF::KeyValuePair.2312"* %68 to i64*
  store i64 0, i64* %88, align 8
  store atomic i64 0, i64* %87 monotonic, align 8
  store i32 0, i32* %85, align 4
  store i32 0, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %68, i64 0, i32 1, i32 1
  %90 = bitcast i32* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* nonnull align 8 %83, i64 9, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %83)
  %91 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = add i32 %92, 2147483647
  %94 = and i32 %93, 2147483647
  %95 = and i32 %92, -2147483648
  %96 = or i32 %94, %95
  store i32 %96, i32* %91, align 8
  %97 = load i64, i64* %17, align 8
  br label %98

98:                                               ; preds = %79, %82
  %99 = phi i64* [ %81, %79 ], [ %88, %82 ]
  %100 = phi i64 [ %18, %79 ], [ %97, %82 ]
  %101 = phi %"struct.WTF::KeyValuePair.2312"* [ %80, %79 ], [ %68, %82 ]
  store i64 %100, i64* %99, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %101, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %2, i64 0, i32 0
  %104 = tail call dereferenceable(16) %"class.WTF::Vector.2293"* @_ZN3WTF6VectorIN5blink14InlineIteratorELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.2293"* %102, %"class.WTF::Vector.2293"* dereferenceable(16) %103) #13
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %101, i64 0, i32 1, i32 1
  %106 = getelementptr inbounds %"class.blink::MidpointState", %"class.blink::MidpointState"* %2, i64 0, i32 1
  %107 = bitcast i32* %105 to i8*
  %108 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 9, i1 false) #13
  %109 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %13, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %98
  %119 = tail call %"struct.WTF::KeyValuePair.2312"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2309"* %0, %"struct.WTF::KeyValuePair.2312"* %101)
  br label %120

120:                                              ; preds = %59, %98, %118
  %121 = phi i8 [ 1, %98 ], [ 1, %118 ], [ 0, %59 ]
  %122 = phi %"struct.WTF::KeyValuePair.2312"* [ %101, %98 ], [ %119, %118 ], [ %61, %59 ]
  %123 = insertvalue { %"struct.WTF::KeyValuePair.2312"*, i8 } undef, %"struct.WTF::KeyValuePair.2312"* %122, 0
  %124 = insertvalue { %"struct.WTF::KeyValuePair.2312"*, i8 } %123, i8 %121, 1
  ret { %"struct.WTF::KeyValuePair.2312"*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2312"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.2309"*, %"struct.WTF::KeyValuePair.2312"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca [9 x i8], align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #13
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %23, i8* %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 40
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPN5blink7BidiRunENS2_13MidpointStateINS2_14InlineIteratorEEEEEEEPKcv, i64 0, i64 0)) #13
  %37 = bitcast i8* %36 to %"struct.WTF::KeyValuePair.2312"*
  %38 = icmp eq i32 %33, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds [9 x i8], [9 x i8]* %4, i64 0, i64 0
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %51, %41 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %37, i64 %42
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %40)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 9, i1 false)
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %37, i64 %42, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %37, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.blink::MidpointState"* %44 to i64*
  %48 = bitcast %"struct.WTF::KeyValuePair.2312"* %43 to i64*
  store i64 0, i64* %48, align 8
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %45, align 4
  store i32 0, i32* %46, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %37, i64 %42, i32 1, i32 1
  %50 = bitcast i32* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* nonnull align 8 %40, i64 9, i1 false) #13
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %40)
  %51 = add nuw nsw i64 %42, 1
  %52 = icmp eq i64 %51, %34
  br i1 %52, label %53, label %41

53:                                               ; preds = %41, %32
  %54 = call %"struct.WTF::KeyValuePair.2312"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2309"* %0, %"struct.WTF::KeyValuePair.2312"* %37, i32 %33, %"struct.WTF::KeyValuePair.2312"* %1) #13
  ret %"struct.WTF::KeyValuePair.2312"* %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.2312"* @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.2309"*, %"struct.WTF::KeyValuePair.2312"*, i32, %"struct.WTF::KeyValuePair.2312"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2309", align 8
  %6 = bitcast %"class.WTF::HashTable.2309"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2309"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.2312"* %1, %"struct.WTF::KeyValuePair.2312"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2309"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2309"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %22 to i64
  br label %66

24:                                               ; preds = %117
  %25 = bitcast %"class.WTF::HashTable.2309"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2309"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %118, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.2312"* [ null, %16 ], [ %121, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %119, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.2312"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %35, i64 %42, i32 0
  %44 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %43, align 8
  %45 = icmp eq %"struct.blink::BidiRun"* %44, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %47, align 8
  %49 = icmp eq %"class.blink::InlineIterator"* %48, null
  %50 = bitcast %"class.blink::InlineIterator"* %48 to i8*
  br i1 %49, label %57, label %51, !prof !10

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %56, label %55, !prof !9

55:                                               ; preds = %51
  store i32 0, i32* %52, align 4
  br label %56

56:                                               ; preds = %55, %51
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #13
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %47, align 8
  br label %57

57:                                               ; preds = %56, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #13
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret %"struct.WTF::KeyValuePair.2312"* %33

66:                                               ; preds = %21, %117
  %67 = phi i64 [ %118, %117 ], [ %23, %21 ]
  %68 = phi i32 [ %119, %117 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.2312"* [ %120, %117 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.2312"* [ %121, %117 ], [ null, %21 ]
  %71 = phi i32 [ %122, %117 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.2312"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %117
    i64 0, label %117
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.2312"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.2309"* nonnull %5, %"struct.blink::BidiRun"** dereferenceable(8) %77) #13
  %79 = extractvalue { %"struct.WTF::KeyValuePair.2312"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::InlineIterator"*, %"class.blink::InlineIterator"** %80, align 8
  %82 = icmp eq %"class.blink::InlineIterator"* %81, null
  %83 = bitcast %"class.blink::InlineIterator"* %81 to i8*
  br i1 %82, label %90, label %84, !prof !10

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88, !prof !9

88:                                               ; preds = %84
  store i32 0, i32* %85, align 4
  br label %89

89:                                               ; preds = %88, %84
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %83) #13
  store %"class.blink::InlineIterator"* null, %"class.blink::InlineIterator"** %80, align 8
  br label %90

90:                                               ; preds = %76, %89
  %91 = load i64, i64* %74, align 8
  %92 = bitcast %"struct.WTF::KeyValuePair.2312"* %79 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::MidpointState"* %94 to i64*
  %98 = bitcast %"class.blink::MidpointState"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #13
  %99 = load i64, i64* %97, align 8
  %100 = bitcast %"class.blink::MidpointState"* %93 to i64*
  store atomic i64 0, i64* %97 monotonic, align 8
  store atomic i64 %99, i64* %100 monotonic, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %95, align 4
  %103 = load i32, i32* %101, align 4
  store i32 %103, i32* %95, align 4
  store i32 %102, i32* %101, align 4
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %69, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 2
  %105 = load i32, i32* %96, align 4
  %106 = load i32, i32* %104, align 4
  store i32 %106, i32* %96, align 4
  store i32 %105, i32* %104, align 4
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %79, i64 0, i32 1, i32 1
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %69, i64 %72, i32 1, i32 1
  %109 = bitcast i32* %107 to i8*
  %110 = bitcast i32* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 9, i1 false) #13
  %111 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %15, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %111, i64 %72
  %113 = icmp eq %"struct.WTF::KeyValuePair.2312"* %112, %3
  %114 = select i1 %113, %"struct.WTF::KeyValuePair.2312"* %79, %"struct.WTF::KeyValuePair.2312"* %70
  %115 = load i32, i32* %12, align 8
  %116 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %111 to i64
  br label %117

117:                                              ; preds = %66, %66, %90
  %118 = phi i64 [ %67, %66 ], [ %116, %90 ], [ %67, %66 ]
  %119 = phi i32 [ %68, %66 ], [ %115, %90 ], [ %68, %66 ]
  %120 = phi %"struct.WTF::KeyValuePair.2312"* [ %69, %66 ], [ %111, %90 ], [ %69, %66 ]
  %121 = phi %"struct.WTF::KeyValuePair.2312"* [ %70, %66 ], [ %114, %90 ], [ %70, %66 ]
  %122 = add i32 %71, 1
  %123 = icmp eq i32 %122, %119
  br i1 %123, label %24, label %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2312"*, i8 } @_ZN3WTF9HashTableIPN5blink7BidiRunENS_12KeyValuePairIS3_NS1_13MidpointStateINS1_14InlineIteratorEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS2_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS3_(%"class.WTF::HashTable.2309"*, %"struct.blink::BidiRun"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2312"*, %"struct.WTF::KeyValuePair.2312"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2309", %"class.WTF::HashTable.2309"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"struct.blink::BidiRun"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %32, i64 0, i32 0
  %35 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %34, align 8
  %36 = icmp eq %"struct.blink::BidiRun"* %35, null
  %37 = inttoptr i64 %10 to %"struct.blink::BidiRun"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.2312"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.2312"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.2312"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"struct.blink::BidiRun"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"struct.blink::BidiRun"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"struct.blink::BidiRun"* %63, inttoptr (i64 -1 to %"struct.blink::BidiRun"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.2312"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.2312", %"struct.WTF::KeyValuePair.2312"* %75, i64 0, i32 0
  %78 = load %"struct.blink::BidiRun"*, %"struct.blink::BidiRun"** %77, align 8
  %79 = icmp eq %"struct.blink::BidiRun"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.2312"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.2312"*, i8 } undef, %"struct.WTF::KeyValuePair.2312"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.2312"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.2312"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2303"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %5, align 8
  %7 = icmp eq %"class.blink::BidiEmbedding"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::BidiEmbedding"*
  %10 = icmp eq %"class.blink::BidiEmbedding"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2303"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2303"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !9

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::BidiEmbedding"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* nonnull align 4 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2304"* %19, %"class.blink::BidiEmbedding"* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::BidiEmbedding"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !10

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::BidiEmbedding"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %32, i8* nonnull align 4 %44, i64 %45, i1 false) #13
  %46 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::BidiEmbedding"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::BidiEmbedding"*
  %51 = icmp eq %"class.blink::BidiEmbedding"* %48, %50
  br i1 %51, label %54, label %52, !prof !10

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.2304"* %53, %"class.blink::BidiEmbedding"* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2303"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.2303"*, %"class.blink::BidiEmbedding"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %8 = icmp ugt %"class.blink::BidiEmbedding"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %7, i64 %10
  %12 = icmp ugt %"class.blink::BidiEmbedding"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2303"* %0, i32 %5) #13
  %14 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::BidiEmbedding"* %1 to i64
  %17 = ptrtoint %"class.blink::BidiEmbedding"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2303"* %0, i32 %5) #13
  %20 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %6, align 8
  %21 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::BidiEmbedding"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::BidiEmbedding"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::BidiEmbedding", %"class.blink::BidiEmbedding"* %23, i64 %26
  %28 = bitcast %"class.blink::BidiEmbedding"* %24 to i64*
  %29 = bitcast %"class.blink::BidiEmbedding"* %27 to i64*
  %30 = load i64, i64* %28, align 4
  store i64 %30, i64* %29, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2303"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !10

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::BidiEmbedding"*, %"class.blink::BidiEmbedding"** %31, align 8
  %33 = icmp eq %"class.blink::BidiEmbedding"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BidiEmbeddingEEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BidiEmbeddingEEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2303"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2303", %"class.WTF::Vector.2303"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2303"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink13BidiEmbeddingELj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2303"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare zeroext i1 @_ZNK5blink10LayoutText26IsAllCollapsibleWhitespaceEv(%"class.blink::LayoutText"*) local_unnamed_addr #2

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #2

declare void @_ZN5blink10LayoutText30DirtyOrDeleteLineBoxesIfNeededEb(%"class.blink::LayoutText"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink12LayoutInline14DirtyLineBoxesEb(%"class.blink::LayoutInline"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #2

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2466* dereferenceable(16)) local_unnamed_addr #3 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #13
  %20 = tail call i8* @_Znwm(i64 192) #14
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #13
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #13
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #13
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #13
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #13
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #13
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #13
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %38 = getelementptr inbounds %class.anon.2466, %class.anon.2466* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #13
  %40 = getelementptr inbounds %class.anon.2466, %class.anon.2466* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #13
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #13
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #13
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #13
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #13
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #13
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #14
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #13
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !68

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !69

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !70

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #14
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #14, !noalias !71
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !71
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #14
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

declare zeroext i1 @_ZN5blinkeqERKNS_11BidiContextES2_(%"class.blink::BidiContext"* dereferenceable(16), %"class.blink::BidiContext"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink25RequiresLineBoxForContentENS_16LineLayoutInlineERKNS_8LineInfoE(%"class.blink::LayoutObject"*, %"class.blink::LineInfo"* dereferenceable(12)) local_unnamed_addr #3 comdat {
  %3 = alloca %"class.blink::LineLayoutInline", align 8
  %4 = alloca %"class.blink::LineLayoutItem", align 8
  %5 = alloca %"class.blink::Length", align 4
  %6 = alloca %"class.blink::Length", align 4
  %7 = getelementptr inbounds %"class.blink::LineLayoutInline", %"class.blink::LineLayoutInline"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %7, align 8
  %8 = bitcast %"class.blink::LineLayoutItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LineLayoutInline", %"class.blink::LineLayoutInline"* %3, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %12 = bitcast %"class.blink::LayoutObject"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.blink::LineLayoutItem"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %18, label %30

18:                                               ; preds = %2
  %19 = inttoptr i64 %13 to %"class.blink::LayoutObject"*
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %18, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %19, %18 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %18, %2
  %31 = phi %"class.blink::Node"* [ %16, %2 ], [ %21, %18 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 33
  %37 = load i32, i32* %36, align 8
  %38 = icmp eq i32 %37, 2
  br i1 %38, label %39, label %114

39:                                               ; preds = %30
  %40 = bitcast %"class.blink::Length"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #13
  %41 = getelementptr inbounds %"class.blink::LineInfo", %"class.blink::LineInfo"* %1, i64 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %10, i1 zeroext %43)
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %5, %"class.blink::ComputedStyle"* %44) #13
  %45 = bitcast %"class.blink::Length"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #13
  %46 = load i8, i8* %41, align 4, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %4, i1 zeroext %47)
  call void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* nonnull sret %6, %"class.blink::ComputedStyle"* %48) #13
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %104

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  %58 = load i8, i8* %57, align 4, !range !2
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %101

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %82, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = bitcast %"class.blink::Length"* %5 to float*
  %67 = load float, float* %66, align 4
  %68 = bitcast float %67 to i32
  %69 = sitofp i32 %68 to float
  %70 = select i1 %65, float %69, float %67
  %71 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  %72 = load i8, i8* %71, align 2, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = bitcast %"class.blink::Length"* %6 to float*
  %75 = load float, float* %74, align 4
  %76 = bitcast float %75 to i32
  %77 = sitofp i32 %76 to float
  %78 = select i1 %73, float %77, float %75
  %79 = fcmp oeq float %70, %78
  br i1 %79, label %82, label %80

80:                                               ; preds = %62
  %81 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* nonnull %5, %"class.blink::Length"* nonnull dereferenceable(8) %6) #13
  br i1 %81, label %82, label %101

82:                                               ; preds = %80, %60, %62
  %83 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 5, i32 0
  %91 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %91, i64 0, i32 0, i32 9
  %93 = bitcast [20 x i8]* %92 to i160*
  %94 = load i160, i160* %93, align 8
  %95 = xor i160 %94, %88
  %96 = and i160 %95, 276701161105643274240
  %97 = icmp eq i160 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %82
  %99 = call zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"* %91, %"class.blink::ComputedStyle"* dereferenceable(104) %85) #13
  %100 = xor i1 %99, true
  br label %101

101:                                              ; preds = %98, %82, %54, %80
  %102 = phi i1 [ true, %54 ], [ true, %80 ], [ true, %82 ], [ %100, %98 ]
  %103 = load i8, i8* %51, align 1
  br label %104

104:                                              ; preds = %101, %39
  %105 = phi i8 [ %103, %101 ], [ %52, %39 ]
  %106 = phi i1 [ %102, %101 ], [ true, %39 ]
  %107 = icmp eq i8 %105, 8
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #13
  br label %109

109:                                              ; preds = %104, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #13
  %110 = load i8, i8* %49, align 1
  %111 = icmp eq i8 %110, 8
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #13
  br label %113

113:                                              ; preds = %112, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #13
  br label %114

114:                                              ; preds = %113, %30
  %115 = phi i1 [ false, %30 ], [ %106, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject40HasInlineDirectionBordersPaddingOrMarginEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv(%"class.blink::LayoutBoxModelObject"* %0)
  br i1 %2, label %69, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8, !noalias !74
  %9 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %10 = and i160 %8, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = and i160 %8, 41538374868278621028243970633760768
  %13 = icmp eq i160 %12, 0
  %14 = select i1 %13, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %15 = select i1 %13, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %16 = select i1 %11, { i64, i64 } %15, { i64, i64 } %14
  %17 = select i1 %11, { i64, i64 } %15, { i64, i64 } %14
  %18 = extractvalue { i64, i64 } %16, 0
  %19 = extractvalue { i64, i64 } %17, 1
  %20 = getelementptr inbounds i8, i8* %9, i64 %19
  %21 = bitcast i8* %20 to %"class.blink::LayoutBoxModelObject"*
  %22 = and i64 %18, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %3
  %25 = bitcast i8* %20 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %18, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %3
  %32 = inttoptr i64 %18 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %24, %31
  %34 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %24 ], [ %32, %31 ]
  %35 = tail call i32 %34(%"class.blink::LayoutBoxModelObject"* %21) #13
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %69

37:                                               ; preds = %33
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8, !noalias !77
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 0
  %44 = and i160 %41, 41538374868278621028243970633760768
  %45 = icmp eq i160 %44, 0
  %46 = select i1 %45, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %47 = select i1 %45, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %48 = select i1 %43, { i64, i64 } %47, { i64, i64 } %46
  %49 = select i1 %43, { i64, i64 } %47, { i64, i64 } %46
  %50 = extractvalue { i64, i64 } %48, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = getelementptr inbounds i8, i8* %9, i64 %51
  %53 = bitcast i8* %52 to %"class.blink::LayoutBoxModelObject"*
  %54 = and i64 %50, 1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %37
  %57 = bitcast i8* %52 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = add i64 %50, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = bitcast i8* %60 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, align 8
  br label %65

63:                                               ; preds = %37
  %64 = inttoptr i64 %50 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %65

65:                                               ; preds = %56, %63
  %66 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %62, %56 ], [ %64, %63 ]
  %67 = tail call i32 %66(%"class.blink::LayoutBoxModelObject"* %53) #13
  %68 = icmp ne i32 %67, 0
  br label %69

69:                                               ; preds = %33, %65, %1
  %70 = phi i1 [ true, %33 ], [ true, %1 ], [ %68, %65 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject34HasInlineDirectionBordersOrPaddingEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !80
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !80
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #13
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %131

35:                                               ; preds = %31
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !83
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8, !noalias !83
  %40 = and i160 %39, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = and i160 %39, 41538374868278621028243970633760768
  %43 = icmp eq i160 %42, 0
  %44 = select i1 %43, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %45 = select i1 %43, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %46 = select i1 %41, { i64, i64 } %45, { i64, i64 } %44
  %47 = select i1 %41, { i64, i64 } %45, { i64, i64 } %44
  %48 = extractvalue { i64, i64 } %46, 0
  %49 = extractvalue { i64, i64 } %47, 1
  %50 = getelementptr inbounds i8, i8* %7, i64 %49
  %51 = bitcast i8* %50 to %"class.blink::LayoutBoxModelObject"*
  %52 = and i64 %48, 1
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %35
  %55 = bitcast i8* %50 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = add i64 %48, -1
  %58 = getelementptr i8, i8* %56, i64 %57
  %59 = bitcast i8* %58 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %60 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %59, align 8
  br label %63

61:                                               ; preds = %35
  %62 = inttoptr i64 %48 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %63

63:                                               ; preds = %54, %61
  %64 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %60, %54 ], [ %62, %61 ]
  %65 = tail call i32 %64(%"class.blink::LayoutBoxModelObject"* %51) #13
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %131

67:                                               ; preds = %63
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !86
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8, !noalias !86
  %72 = and i160 %71, 15211807202738752817960438464512
  %73 = icmp eq i160 %72, 0
  %74 = and i160 %71, 41538374868278621028243970633760768
  %75 = icmp eq i160 %74, 0
  %76 = select i1 %75, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %77 = select i1 %75, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %78 = select i1 %73, { i64, i64 } %77, { i64, i64 } %76
  %79 = select i1 %73, { i64, i64 } %77, { i64, i64 } %76
  %80 = extractvalue { i64, i64 } %78, 0
  %81 = extractvalue { i64, i64 } %79, 1
  %82 = getelementptr inbounds i8, i8* %7, i64 %81
  %83 = bitcast i8* %82 to %"class.blink::LayoutBoxModelObject"*
  %84 = and i64 %80, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %93, label %86

86:                                               ; preds = %67
  %87 = bitcast i8* %82 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = add i64 %80, -1
  %90 = getelementptr i8, i8* %88, i64 %89
  %91 = bitcast i8* %90 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %92 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %91, align 8
  br label %95

93:                                               ; preds = %67
  %94 = inttoptr i64 %80 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %95

95:                                               ; preds = %86, %93
  %96 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %92, %86 ], [ %94, %93 ]
  %97 = tail call i32 %96(%"class.blink::LayoutBoxModelObject"* %83) #13
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %131

99:                                               ; preds = %95
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !89
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8, !noalias !89
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  %106 = and i160 %103, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  %108 = select i1 %107, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %109 = select i1 %107, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %110 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %111 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %112 = extractvalue { i64, i64 } %110, 0
  %113 = extractvalue { i64, i64 } %111, 1
  %114 = getelementptr inbounds i8, i8* %7, i64 %113
  %115 = bitcast i8* %114 to %"class.blink::LayoutBoxModelObject"*
  %116 = and i64 %112, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %99
  %119 = bitcast i8* %114 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = add i64 %112, -1
  %122 = getelementptr i8, i8* %120, i64 %121
  %123 = bitcast i8* %122 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %124 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %123, align 8
  br label %127

125:                                              ; preds = %99
  %126 = inttoptr i64 %112 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %127

127:                                              ; preds = %118, %125
  %128 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %124, %118 ], [ %126, %125 ]
  %129 = tail call i32 %128(%"class.blink::LayoutBoxModelObject"* %115) #13
  %130 = icmp ne i32 %129, 0
  br label %131

131:                                              ; preds = %95, %63, %31, %127
  %132 = phi i1 [ true, %95 ], [ true, %63 ], [ true, %31 ], [ %130, %127 ]
  ret i1 %132
}

declare void @_ZNK5blink13ComputedStyle10LineHeightEv(%"class.blink::Length"* sret, %"class.blink::ComputedStyle"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ComputedStyle35HasIdenticalAscentDescentAndLineGapERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #3 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #13
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN5blink6NGLinkEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator.2339"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*, %"struct.blink::NGLink"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.blink::NGLink"*, align 8
  %8 = alloca %"struct.blink::NGLink"*, align 8
  %9 = alloca %"struct.blink::NGLink"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.blink::NGLink"* %1, %"struct.blink::NGLink"** %7, align 8
  store %"struct.blink::NGLink"* %2, %"struct.blink::NGLink"** %8, align 8
  store %"struct.blink::NGLink"* %3, %"struct.blink::NGLink"** %9, align 8
  %14 = ptrtoint %"struct.blink::NGLink"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.2339"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.blink::NGLink"* %2 to i64
  %18 = bitcast %"struct.blink::NGLink"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.blink::NGLink"* %3 to i64
  %21 = bitcast %"struct.blink::NGLink"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.blink::NGLink"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.blink::NGLink"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %30 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8* %29, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %8, align 8
  %43 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %9, align 8
  %44 = icmp ugt %"struct.blink::NGLink"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.blink::NGLink"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %49 = bitcast %"struct.blink::NGLink"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %48, i8* %50) #13
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #13
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN5blink6NGLinkEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator.2339"*, %"class.base::CheckedContiguousIterator.2339"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %11, align 8
  %15 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %12, align 8
  %16 = icmp eq %"struct.blink::NGLink"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.2339"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %21 = bitcast %"class.base::CheckedContiguousIterator.2339"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %20, i8* %22) #13
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #13
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #13
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.2339", %"class.base::CheckedContiguousIterator.2339"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %32, align 8
  %36 = load %"struct.blink::NGLink"*, %"struct.blink::NGLink"** %33, align 8
  %37 = icmp eq %"struct.blink::NGLink"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.blink::NGLink"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  %42 = bitcast %"struct.blink::NGLink"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN5blink6NGLinkEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %43) #13
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #13
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #13
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #13
  ret void
}

declare i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #2

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #13
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #13
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #13
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !9
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #13
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #13
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #13
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #13
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !9
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #13
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #13
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #2

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.1695"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutBox"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutBox"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !10

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::LayoutBox"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1695"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::LayoutBox"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::LayoutBox"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::LayoutBox"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !10

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.1695"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.1695"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::LayoutBox"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %56 = ptrtoint %"class.blink::LayoutBox"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.1695", %"class.WTF::Vector.1695"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !10

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::LayoutBox"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1695"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::LayoutBox"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::LayoutBox"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !10

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.1695"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.1695"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::LayoutBox"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::LayoutBox"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::LayoutBox"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::LayoutBox"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %100, i64 %103
  %105 = bitcast %"class.blink::LayoutBox"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::LayoutBox"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"struct.blink::LayoutBlockFlow::FloatWithRect"* @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2288"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %24, i64 %25
  ret %"struct.blink::LayoutBlockFlow::FloatWithRect"* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink15LayoutBlockFlow13FloatWithRectELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.2288"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %6, align 8
  %8 = icmp ugt %"struct.blink::LayoutBlockFlow::FloatWithRect"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::LayoutBlockFlow::FloatWithRect"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !10

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::LayoutBlockFlow::FloatWithRect"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15LayoutBlockFlow13FloatWithRectEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15LayoutBlockFlow13FloatWithRectEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2288"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::LayoutBlockFlow::FloatWithRect"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::LayoutBlockFlow::FloatWithRect"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !10

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.2288"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.2288"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::LayoutBlockFlow::FloatWithRect"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::LayoutBlockFlow::FloatWithRect"* %1 to i64
  %56 = ptrtoint %"struct.blink::LayoutBlockFlow::FloatWithRect"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.2288", %"class.WTF::Vector.2288"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !10

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::LayoutBlockFlow::FloatWithRect"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15LayoutBlockFlow13FloatWithRectEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15LayoutBlockFlow13FloatWithRectEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2288"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::LayoutBlockFlow::FloatWithRect"*, %"struct.blink::LayoutBlockFlow::FloatWithRect"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::LayoutBlockFlow::FloatWithRect"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !10

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.2288"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.2288"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::LayoutBlockFlow::FloatWithRect"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::LayoutBlockFlow::FloatWithRect"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::LayoutBlockFlow::FloatWithRect"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::LayoutBlockFlow::FloatWithRect"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::FloatWithRect", %"struct.blink::LayoutBlockFlow::FloatWithRect"* %100, i64 %103
  %105 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %104 to i8*
  %106 = bitcast %"struct.blink::LayoutBlockFlow::FloatWithRect"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 32, i1 false) #13
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15LayoutBlockFlow13FloatWithRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!8 = distinct !{!8, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__19make_pairIN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS1_18PartitionAllocatorEEENS3_13GlyphOverflowEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__19make_pairIN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS1_18PartitionAllocatorEEENS3_13GlyphOverflowEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__19make_pairIN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS1_18PartitionAllocatorEEENS3_13GlyphOverflowEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__19make_pairIN3WTF6VectorIPKN5blink14SimpleFontDataELj0ENS1_18PartitionAllocatorEEENS3_13GlyphOverflowEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSB_IT0_E4typeEEEOSC_OSF_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!19 = distinct !{!19, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.unroll.disable"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!51 = distinct !{!51, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!57 = distinct !{!57, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!60 = distinct !{!60, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!61 = !{!"branch_weights", i32 1, i32 4001}
!62 = !{!"branch_weights", i32 1, i32 1048575}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!66 = distinct !{!66, !27}
!67 = distinct !{!67, !27}
!68 = distinct !{!68, !27}
!69 = distinct !{!69, !27}
!70 = distinct !{!70, !27}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!76 = distinct !{!76, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!79 = distinct !{!79, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!82 = distinct !{!82, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!85 = distinct !{!85, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!88 = distinct !{!88, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!91 = distinct !{!91, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
