; ModuleID = '../../chrome/browser/page_load_metrics/observers/https_engagement_metrics/https_engagement_service.cc'
source_filename = "../../chrome/browser/page_load_metrics/observers/https_engagement_metrics/https_engagement_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.HttpsEngagementService = type { %class.KeyedService, %"class.base::TimeDelta", %"class.base::TimeDelta" }
%class.KeyedService = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZN8internal33kHttpsEngagementSessionPercentageE = hidden constant [32 x i8] c"Navigation.EngagementTime.Ratio\00", align 16
@_ZTV22HttpsEngagementService = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.HttpsEngagementService*)* @_ZN22HttpsEngagementServiceD2Ev to i8*), i8* bitcast (void (%class.HttpsEngagementService*)* @_ZN22HttpsEngagementServiceD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZZN22HttpsEngagementService20StoreMetricsAndClearEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN22HttpsEngagementServiceC1Ev = hidden unnamed_addr alias void (%class.HttpsEngagementService*), void (%class.HttpsEngagementService*)* @_ZN22HttpsEngagementServiceC2Ev
@_ZN22HttpsEngagementServiceD1Ev = hidden unnamed_addr alias void (%class.HttpsEngagementService*), void (%class.HttpsEngagementService*)* @_ZN22HttpsEngagementServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HttpsEngagementServiceC2Ev(%class.HttpsEngagementService*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %2) #6
  %3 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV22HttpsEngagementService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 1, i32 0
  %5 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HttpsEngagementServiceD2Ev(%class.HttpsEngagementService*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HttpsEngagementServiceD0Ev(%class.HttpsEngagementService*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %2) #6
  %3 = bitcast %class.HttpsEngagementService* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HttpsEngagementService16RecordTimeOnPageEN4base9TimeDeltaENS_10PageSchemeE(%class.HttpsEngagementService* nocapture, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  switch i32 %2, label %50 [
    i32 1, label %6
    i32 0, label %28
  ]

6:                                                ; preds = %3
  %7 = add i64 %1, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 1, i32 0
  %10 = load i64, i64* %9, align 8
  br i1 %8, label %18, label %11

11:                                               ; preds = %6
  %12 = icmp slt i64 %1, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %10, i64 %1) #6
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !2
  br label %26

18:                                               ; preds = %6
  %19 = add i64 %10, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %10, %1
  %22 = or i1 %21, %20
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %26

26:                                               ; preds = %11, %18, %23
  %27 = phi i64 [ %17, %11 ], [ %1, %18 ], [ %1, %23 ]
  store i64 %27, i64* %9, align 8
  br label %50

28:                                               ; preds = %3
  %29 = add i64 %1, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  %31 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 2, i32 0
  %32 = load i64, i64* %31, align 8
  br i1 %30, label %40, label %33

33:                                               ; preds = %28
  %34 = icmp slt i64 %1, 0
  %35 = select i1 %34, i64 -9223372036854775808, i64 9223372036854775807
  %36 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %32, i64 %1) #6
  %37 = extractvalue { i64, i1 } %36, 1
  %38 = extractvalue { i64, i1 } %36, 0
  %39 = select i1 %37, i64 %35, i64 %38, !prof !2
  br label %48

40:                                               ; preds = %28
  %41 = add i64 %32, -9223372036854775807
  %42 = icmp ugt i64 %41, 1
  %43 = icmp eq i64 %32, %1
  %44 = or i1 %43, %42
  br i1 %44, label %48, label %45

45:                                               ; preds = %40
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %33, %40, %45
  %49 = phi i64 [ %39, %33 ], [ %1, %40 ], [ %1, %45 ]
  store i64 %49, i64* %31, align 8
  br label %50

50:                                               ; preds = %3, %48, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22HttpsEngagementService20StoreMetricsAndClearEv(%class.HttpsEngagementService*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.HttpsEngagementService, %class.HttpsEngagementService* %0, i64 0, i32 2, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  %8 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %16, label %10

10:                                               ; preds = %1
  %11 = icmp slt i64 %5, 0
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 %5) #6
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  br i1 %14, label %26, label %24

16:                                               ; preds = %1
  %17 = add i64 %9, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %9, %5
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %26

24:                                               ; preds = %10
  %25 = icmp eq i64 %15, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %10, %21, %16, %24
  %27 = phi i64 [ %15, %24 ], [ %5, %21 ], [ %5, %16 ], [ %12, %10 ]
  %28 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* %3, i64 %27)
  %29 = fmul double %28, 1.000000e+02
  %30 = load atomic i64, i64* @_ZZN22HttpsEngagementService20StoreMetricsAndClearEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %31 = inttoptr i64 %30 to %"class.base::HistogramBase"*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN8internal33kHttpsEngagementSessionPercentageE, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #6
  %35 = ptrtoint %"class.base::HistogramBase"* %34 to i64
  store atomic i64 %35, i64* @_ZZN22HttpsEngagementService20StoreMetricsAndClearEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %36

36:                                               ; preds = %26, %33
  %37 = phi %"class.base::HistogramBase"* [ %31, %26 ], [ %34, %33 ]
  %38 = fptosi double %29 to i32
  %39 = bitcast %"class.base::HistogramBase"* %37 to void (%"class.base::HistogramBase"*, i32)***
  %40 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %40, i64 6
  %42 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %41, align 8
  call void %42(%"class.base::HistogramBase"* %37, i32 %38) #6
  %43 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false)
  br label %44

44:                                               ; preds = %24, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #6
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
