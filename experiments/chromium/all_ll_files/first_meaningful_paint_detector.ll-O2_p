; ModuleID = '../../third_party/blink/renderer/core/paint/first_meaningful_paint_detector.cc'
source_filename = "../../third_party/blink/renderer/core/paint/first_meaningful_paint_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.190", i32, [4 x i8], %"class.std::__1::unique_ptr.326", %"class.std::__1::unique_ptr.326", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.354", %"class.std::__1::unique_ptr.360", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.367", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__atomic_base.228" }
%"struct.std::__1::__atomic_base.228" = type { %"struct.std::__1::__cxx_atomic_impl.229" }
%"struct.std::__1::__cxx_atomic_impl.229" = type { %"struct.std::__1::__cxx_atomic_base_impl.230" }
%"struct.std::__1::__cxx_atomic_base_impl.230" = type { i64 }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist.258"* }
%"class.blink::Worklist.258" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::Worklist.279"* }
%"class.blink::Worklist.279" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.226" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.286", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.300", [4 x i8] }>
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288", %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { i64 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { float }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.309", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.318" }
%"class.WTF::Vector.318" = type { %"class.WTF::VectorBuffer.319" }
%"class.WTF::VectorBuffer.319" = type { %"class.WTF::VectorBufferBase.320" }
%"class.WTF::VectorBufferBase.320" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.348" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.237"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.244"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.251"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.258"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.265"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1008" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.366 }
%class.scoped_refptr.366 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.367" = type { %"struct.std::__1::__atomic_base.368" }
%"struct.std::__1::__atomic_base.368" = type { %"struct.std::__1::__cxx_atomic_impl.369" }
%"struct.std::__1::__cxx_atomic_impl.369" = type { %"struct.std::__1::__cxx_atomic_base_impl.370" }
%"struct.std::__1::__cxx_atomic_base_impl.370" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FirstMeaningfulPaintDetector" = type { i32 (...)**, i8, i32, i32, %"class.blink::Member", %"class.base::TimeTicks", %"class.base::TimeTicks", double, double, i32, i8, i8, %"class.base::TimeTicks", i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::PaintTiming"* }
%"class.blink::PaintTiming" = type { %"class.blink::Supplement", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector", %"class.WTF::Vector.4", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9", i32, %"class.base::TickClock"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.133", %"class.WTF::Vector.133", i8, i32, %"class.blink::Member.144", %"class.blink::Member.146", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.162", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.168", %"class.blink::Member.170", %"class.blink::Member.79", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.173", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.35", %"class.blink::Member.383", %"class.blink::Member.35", %"class.blink::Member.35", %"class.blink::Member.35", %"class.blink::UserActionElementSet", %"class.blink::Member.392", double, double, i64, i64, %"class.blink::HeapHashSet.394", %"class.blink::HeapHashSet.401", i16, i8, %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.800", %"class.blink::Member.802", %"class.blink::TextLinkColors", %"class.blink::Member.804", i8, [7 x i8], %"class.blink::HeapHashMap.806", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.35", %"class.WTF::Vector.813", %"class.blink::Member.818", %"class.blink::Member.822", i8, %"class.blink::Member.35", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.824", %"class.blink::HeapVector.826", %"class.std::__1::unique_ptr.834", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.840", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.853", %"class.WTF::Vector.855", i8, i8, %"class.std::__1::unique_ptr.860", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.866", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.874", i8, i32, %"class.blink::Member.876", %"class.blink::Member.878", %"class.blink::Member.880", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.882", %"class.WTF::HashMap.884", %"class.blink::Member.889", %"class.blink::Member.891", %"class.blink::Member.893", %"class.blink::Member.895", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.897", i8, i32, %"class.blink::Member.904", %"class.blink::Member.906", i32, %"class.blink::Member.908", %"class.blink::Member.910", %"class.blink::Member.912", %"class.std::__1::unique_ptr.914", i64, %"class.std::__1::unique_ptr.920", i32, i32, %"class.blink::Member.931", %"class.blink::Member.933", %"class.blink::Member.935", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.937", %"class.WTF::Vector.939", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.944", %"class.blink::Member.951", %"class.std::__1::unique_ptr.953", %"class.blink::Member.959", i8, i8, %"class.WTF::String", %"class.blink::Member.961", i8, [7 x i8], %"class.blink::HeapHashMap.963", %"class.blink::HeapObserverSet", %"class.blink::Member.977", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.979", i32, i8, i8, %"class.blink::WeakMember.981", %"class.blink::Member.982" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.13", %"class.blink::Member.13" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.13", %"class.blink::Member.15", %"class.blink::Member.13", %"class.blink::Member.13", %"class.blink::Member.17" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.21", %"class.blink::Member.2", %"class.blink::Member.15", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.62", %"class.blink::Member.64", %"class.blink::Member.66", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.71", %"class.blink::HeapVector.73" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.31" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.35", i32, %"class.blink::HeapVector" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.68" }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::HeapHashMap.70"* }
%"class.blink::HeapHashMap.70" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.73" = type { %"class.WTF::Vector.76" }
%"class.WTF::Vector.76" = type { %"class.WTF::VectorBuffer.77" }
%"class.WTF::VectorBuffer.77" = type { %"class.WTF::VectorBufferBase.78" }
%"class.WTF::VectorBufferBase.78" = type { %"class.blink::Member.79"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.126" }
%"class.blink::HeapHashMap.126" = type { %"class.WTF::HashMap.129" }
%"class.WTF::HashMap.129" = type { %"class.WTF::HashTable.130" }
%"class.WTF::HashTable.130" = type <{ %"struct.WTF::KeyValuePair.132"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.132" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135" }
%"class.WTF::VectorBufferBase.135" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.137" }
%"struct.std::__1::atomic.137" = type { %"struct.std::__1::__atomic_base.138" }
%"struct.std::__1::__atomic_base.138" = type { %"struct.std::__1::__atomic_base.139" }
%"struct.std::__1::__atomic_base.139" = type { %"struct.std::__1::__cxx_atomic_impl.140" }
%"struct.std::__1::__cxx_atomic_impl.140" = type { %"struct.std::__1::__cxx_atomic_base_impl.141" }
%"struct.std::__1::__cxx_atomic_base_impl.141" = type { i32 }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1327", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1389", i32, i8, [3 x i8], %"class.blink::HeapVector.1391", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1399", %"class.blink::Member.1401", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1410", %"class.blink::Member.1529", %"class.blink::Member.1531", i8, [7 x i8] }>
%"class.blink::Supplementable.1327" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1328" }
%"class.blink::HeapHashMap.1328" = type { %"class.WTF::HashMap.1331" }
%"class.WTF::HashMap.1331" = type { %"class.WTF::HashTable.1332" }
%"class.WTF::HashTable.1332" = type <{ %"struct.WTF::KeyValuePair.1334"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1334" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1343" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1335" }
%"class.blink::HeapObserverSet.1335" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1336" }
%"class.blink::HeapHashSet.1336" = type { %"class.WTF::HashSet.1339" }
%"class.WTF::HashSet.1339" = type { %"class.WTF::HashTable.1340" }
%"class.WTF::HashTable.1340" = type <{ %"class.blink::WeakMember.1342"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1342" = type opaque
%"class.blink::Supplementable.1343" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1344" }
%"class.blink::HeapHashMap.1344" = type { %"class.WTF::HashMap.1347" }
%"class.WTF::HashMap.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"struct.WTF::KeyValuePair.1350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1350" = type { i8*, %"class.blink::Member.1550" }
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::Supplement.1552"* }
%"class.blink::Supplement.1552" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1553" }
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1351, %"class.std::__1::unique_ptr.1352", %"class.std::__1::unique_ptr.1352", %"class.std::__1::unique_ptr.1379", %"class.std::__1::unique_ptr.1379", %"class.blink::Member.146", i32, [4 x i8], %"class.WTF::HashSet.1385", i32, i32 }
%class.scoped_refptr.1351 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1325", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1135", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1140 }
%"class.WTF::RefCounted.1325" = type { %"class.base::RefCounted.1326" }
%"class.base::RefCounted.1326" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1135" = type { %"class.absl::optional_internal::optional_data.1136" }
%"class.absl::optional_internal::optional_data.1136" = type { %"class.absl::optional_internal::optional_data_base.1137" }
%"class.absl::optional_internal::optional_data_base.1137" = type { %"class.absl::optional_internal::optional_data_dtor_base.1138" }
%"class.absl::optional_internal::optional_data_dtor_base.1138" = type { i8, %union.anon.1139 }
%union.anon.1139 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1140 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1355", %"class.std::__1::map.1366", %"class.std::__1::map.1375"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1135" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1112 }
%union.anon.1112 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map.1355" = type { %"class.std::__1::__tree.1356" }
%"class.std::__1::__tree.1356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1357", %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::map.1366" = type { %"class.std::__1::__tree.1367" }
%"class.std::__1::__tree.1367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1368", %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::map.1375" = type opaque
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1385" = type { %"class.WTF::HashTable.1386" }
%"class.WTF::HashTable.1386" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1391" = type { %"class.WTF::Vector.1394" }
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { %"class.blink::Member.1397"*, i32, i32 }
%"class.blink::Member.1397" = type opaque
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1403", i32, i32 }
%"class.blink::HeapHashMap.1403" = type { %"class.WTF::HashMap.1406" }
%"class.WTF::HashMap.1406" = type { %"class.WTF::HashTable.1407" }
%"class.WTF::HashTable.1407" = type <{ %"struct.WTF::KeyValuePair.1409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1409" = type opaque
%"class.std::__1::unique_ptr.1410" = type { %"class.std::__1::__compressed_pair.1411" }
%"class.std::__1::__compressed_pair.1411" = type { %"struct.std::__1::__compressed_pair_elem.1412" }
%"struct.std::__1::__compressed_pair_elem.1412" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1413" }
%"class.std::__1::unique_ptr.1413" = type { %"class.std::__1::__compressed_pair.1414" }
%"class.std::__1::__compressed_pair.1414" = type { %"struct.std::__1::__compressed_pair_elem.1415" }
%"struct.std::__1::__compressed_pair_elem.1415" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1416" }
%"class.WTF::Vector.1416" = type { %"class.WTF::VectorBuffer.1417" }
%"class.WTF::VectorBuffer.1417" = type { %"class.WTF::VectorBufferBase.1418" }
%"class.WTF::VectorBufferBase.1418" = type { %"class.mojo::StructPtr.1419"*, i32, i32 }
%"class.mojo::StructPtr.1419" = type { %"class.std::__1::unique_ptr.1420" }
%"class.std::__1::unique_ptr.1420" = type { %"class.std::__1::__compressed_pair.1421" }
%"class.std::__1::__compressed_pair.1421" = type { %"struct.std::__1::__compressed_pair_elem.1422" }
%"struct.std::__1::__compressed_pair_elem.1422" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1423", %"class.WTF::HashMap.1430", %"class.WTF::HashMap.1435", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.1440", i8, %"class.WTF::Vector.1127", i32, %"class.mojo::StructPtr.1441", %"class.WTF::Vector.1127" }
%"class.mojo::StructPtr.1423" = type { %"class.std::__1::unique_ptr.1424" }
%"class.std::__1::unique_ptr.1424" = type { %"class.std::__1::__compressed_pair.1425" }
%"class.std::__1::__compressed_pair.1425" = type { %"struct.std::__1::__compressed_pair_elem.1426" }
%"struct.std::__1::__compressed_pair_elem.1426" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1430" = type { %"class.WTF::HashTable.1431" }
%"class.WTF::HashTable.1431" = type <{ %"struct.WTF::KeyValuePair.1434"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1434" = type opaque
%"class.WTF::HashMap.1435" = type { %"class.WTF::HashTable.1436" }
%"class.WTF::HashTable.1436" = type <{ %"struct.WTF::KeyValuePair.1439"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1439" = type opaque
%"class.mojo::InlinedStructPtr.1440" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1441" = type { %"class.std::__1::unique_ptr.1442" }
%"class.std::__1::unique_ptr.1442" = type { %"class.std::__1::__compressed_pair.1443" }
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.1127", i8, i8, [6 x i8] }>
%"class.WTF::Vector.1127" = type { %"class.WTF::VectorBuffer.1128" }
%"class.WTF::VectorBuffer.1128" = type { %"class.WTF::VectorBufferBase.1129" }
%"class.WTF::VectorBufferBase.1129" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1520" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1456", i32 }>
%"class.std::__1::unique_ptr.1456" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1459", %"class.absl::optional.1178", %"class.absl::optional.1460", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1473", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1495", %"class.std::__1::map.1506", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1515", i8, %class.scoped_refptr.1465, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1516" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1459" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1178" = type { %"class.absl::optional_internal::optional_data.1179" }
%"class.absl::optional_internal::optional_data.1179" = type { %"class.absl::optional_internal::optional_data_base.1180" }
%"class.absl::optional_internal::optional_data_base.1180" = type { %"class.absl::optional_internal::optional_data_dtor_base.1181" }
%"class.absl::optional_internal::optional_data_dtor_base.1181" = type { i8, %union.anon.1182 }
%union.anon.1182 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1460" = type { %"class.absl::optional_internal::optional_data.1461" }
%"class.absl::optional_internal::optional_data.1461" = type { %"class.absl::optional_internal::optional_data_base.1462" }
%"class.absl::optional_internal::optional_data_base.1462" = type { %"class.absl::optional_internal::optional_data_dtor_base.1463" }
%"class.absl::optional_internal::optional_data_dtor_base.1463" = type { i8, %union.anon.1464 }
%union.anon.1464 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1465, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1466" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1466" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.375 }
%class.scoped_refptr.375 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.376", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.376" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.377" }
%"struct.std::__1::atomic.377" = type { %"struct.std::__1::__atomic_base.378" }
%"struct.std::__1::__atomic_base.378" = type { %"struct.std::__1::__atomic_base.379" }
%"struct.std::__1::__atomic_base.379" = type { %"struct.std::__1::__cxx_atomic_impl.380" }
%"struct.std::__1::__cxx_atomic_impl.380" = type { %"struct.std::__1::__cxx_atomic_base_impl.381" }
%"struct.std::__1::__cxx_atomic_base_impl.381" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1471 }
%class.scoped_refptr.1471 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1543", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1465, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1543" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1472 }
%class.scoped_refptr.1472 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1473" = type { %"class.std::__1::__compressed_pair.1474" }
%"class.std::__1::__compressed_pair.1474" = type { %"struct.std::__1::__compressed_pair_elem.1475" }
%"struct.std::__1::__compressed_pair_elem.1475" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1476", %class.scoped_refptr.1477 }
%"class.base::RepeatingCallback.1476" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1477 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1478", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1478" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1482", %"class.std::__1::unique_ptr.1488", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1494" }
%"class.std::__1::unique_ptr.1482" = type { %"class.std::__1::__compressed_pair.1483" }
%"class.std::__1::__compressed_pair.1483" = type { %"struct.std::__1::__compressed_pair_elem.1484" }
%"struct.std::__1::__compressed_pair_elem.1484" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1488" = type { %"class.std::__1::__compressed_pair.1489" }
%"class.std::__1::__compressed_pair.1489" = type { %"struct.std::__1::__compressed_pair_elem.1490" }
%"struct.std::__1::__compressed_pair_elem.1490" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1494" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1495" = type { %"class.std::__1::__tree.1496" }
%"class.std::__1::__tree.1496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1497", %"class.std::__1::__compressed_pair.1501" }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1501" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::map.1506" = type { %"class.std::__1::__tree.1507" }
%"class.std::__1::__tree.1507" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1508", %"class.std::__1::__compressed_pair.1512" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1512" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.base::OnceCallback.1515" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1465 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.374" }>
%"class.base::RefCountedThreadSafe.374" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1516" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1520" = type { %"class.std::__1::__compressed_pair.1521" }
%"class.std::__1::__compressed_pair.1521" = type { %"struct.std::__1::__compressed_pair_elem.1522" }
%"struct.std::__1::__compressed_pair_elem.1522" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1401", i8, [7 x i8], %"class.WTF::Vector.1416", %"class.blink::HeapVector.1535", i8, [7 x i8], %"class.WTF::HashSet.1385", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1535" = type { %"class.WTF::Vector.1538" }
%"class.WTF::Vector.1538" = type { %"class.WTF::VectorBuffer.1539" }
%"class.WTF::VectorBuffer.1539" = type { %"class.WTF::VectorBufferBase.1540" }
%"class.WTF::VectorBufferBase.1540" = type { %"class.blink::Member.1541"*, i32, i32 }
%"class.blink::Member.1541" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1015", %"class.blink::Member.1017", %"class.blink::Member.1019", %class.scoped_refptr.373, %class.scoped_refptr.373, %"class.blink::Member.1021", %"class.blink::Member.1023", %"class.blink::Member.1029", %"class.blink::Member.1033", %"class.blink::Member.1081", %"class.blink::HeapHashMap.1083", %"class.blink::HeapHashSet.1090", %"class.blink::HeapHashSet.1090", %"class.blink::HeapHashMap.1272", %"class.blink::HeapVector.1279", %"class.blink::Member.1287", %"class.blink::HeapTaskRunnerTimer.1289", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1291", %"class.WTF::Vector.1298", %"class.blink::HeapHashSet.1304", %"class.blink::HeapHashSet.1304", %"class.std::__1::unique_ptr.1310", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1322", i8, i8, %"class.base::WeakPtrFactory.1324" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.373 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.1021" = type { %"class.blink::MemberBase.1022" }
%"class.blink::MemberBase.1022" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1027" }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1037", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1039", %"class.WTF::HashSet.1044", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1048", %"class.std::__1::map", %"class.std::__1::map.1063", %"class.std::__1::unique_ptr.1072", %"class.blink::Member.1023", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1079", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1039" = type { %"class.WTF::HashTable.1040" }
%"class.WTF::HashTable.1040" = type <{ %"struct.WTF::KeyValuePair.1043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1043" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1048" = type { %"class.WTF::HashMap.1051" }
%"class.WTF::HashMap.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"struct.WTF::KeyValuePair.1054"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1054" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::map.1063" = type { %"class.std::__1::__tree.1064" }
%"class.std::__1::__tree.1064" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1065", %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.std::__1::unique_ptr.1072" = type { %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1083" = type { %"class.WTF::HashMap.1086" }
%"class.WTF::HashMap.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"struct.WTF::KeyValuePair.1089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1089" = type opaque
%"class.blink::HeapHashSet.1090" = type { %"class.WTF::HashSet.1093" }
%"class.WTF::HashSet.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"class.blink::WeakMember.1096"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1100", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1132", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1231", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1247", %"class.blink::ResourceResponse", %class.scoped_refptr.1249, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1100" = type { %"class.absl::optional_internal::optional_data.1101" }
%"class.absl::optional_internal::optional_data.1101" = type { %"class.absl::optional_internal::optional_data_base.1102" }
%"class.absl::optional_internal::optional_data_base.1102" = type { %"class.absl::optional_internal::optional_data_dtor_base.1103" }
%"class.absl::optional_internal::optional_data_dtor_base.1103" = type { i8, %union.anon.1104 }
%union.anon.1104 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1105", i8, %"class.absl::optional.1117", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1105" = type { %"class.absl::optional_internal::optional_data.1106" }
%"class.absl::optional_internal::optional_data.1106" = type { %"class.absl::optional_internal::optional_data_base.1107" }
%"class.absl::optional_internal::optional_data_base.1107" = type { %"class.absl::optional_internal::optional_data_dtor_base.1108" }
%"class.absl::optional_internal::optional_data_dtor_base.1108" = type { i8, [7 x i8], %union.anon.1109 }
%union.anon.1109 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1117" = type { %"class.absl::optional_internal::optional_data.1118" }
%"class.absl::optional_internal::optional_data.1118" = type { %"class.absl::optional_internal::optional_data_base.1119" }
%"class.absl::optional_internal::optional_data_base.1119" = type { %"class.absl::optional_internal::optional_data_dtor_base.1120" }
%"class.absl::optional_internal::optional_data_dtor_base.1120" = type { i8, %union.anon.1121 }
%union.anon.1121 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1122", %"class.WTF::Vector.1127" }
%"class.WTF::Vector.1122" = type { %"class.WTF::VectorBuffer.1123" }
%"class.WTF::VectorBuffer.1123" = type { %"class.WTF::VectorBufferBase.1124" }
%"class.WTF::VectorBufferBase.1124" = type { i32*, i32, i32 }
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type <{ %"class.blink::WeakMember.1597", i32, [4 x i8] }>
%"class.blink::WeakMember.1597" = type { %"class.blink::MemberBase.1598" }
%"class.blink::MemberBase.1598" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet.1231" = type { %"class.WTF::HashSet.1234" }
%"class.WTF::HashSet.1234" = type { %"class.WTF::HashTable.1235" }
%"class.WTF::HashTable.1235" = type <{ %"class.blink::WeakMember.1237"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1237" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.1238", i8, i8, %class.scoped_refptr.176, %class.scoped_refptr.1243, %class.scoped_refptr.1245 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.1238" = type { %"class.WTF::HashTable.1239" }
%"class.WTF::HashTable.1239" = type <{ %"struct.std::__1::pair.1242"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1242" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.176 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.177", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.177" = type { %"class.base::RefCounted.178" }
%"class.base::RefCounted.178" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.181" }
%"class.blink::HeapHashMap.181" = type { %"class.WTF::HashMap.184" }
%"class.WTF::HashMap.184" = type { %"class.WTF::HashTable.185" }
%"class.WTF::HashTable.185" = type <{ %"struct.WTF::KeyValuePair.187"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.187" = type { %"class.blink::WeakMember.188", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1243 = type { %"class.base::RefCountedData.1244"* }
%"class.base::RefCountedData.1244" = type opaque
%class.scoped_refptr.1245 = type { %"class.base::RefCountedData.1246"* }
%"class.base::RefCountedData.1246" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1195" }
%"class.base::time_internal::TimeBase.1195" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.1140, %class.scoped_refptr.1140, %class.scoped_refptr.1140, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1146, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1158", %"class.absl::optional.1163", %"class.absl::optional.1173", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1183", %"class.absl::optional.1173", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1173", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1183", %"class.absl::optional.1188", i8, %class.scoped_refptr.1193 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1141" }
%"class.WTF::HashMap.1141" = type { %"class.WTF::HashTable.1142" }
%"class.WTF::HashTable.1142" = type <{ %"struct.WTF::KeyValuePair.1145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1145" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1146 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1147", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1156, i8, %"class.url::Origin" }
%"class.base::RefCounted.1147" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1148" }
%"class.std::__1::vector.1148" = type { %"class.std::__1::__vector_base.1149" }
%"class.std::__1::__vector_base.1149" = type { %"class.std::__1::unique_ptr.1150"*, %"class.std::__1::unique_ptr.1150"*, %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1584" }
%"class.std::__1::__compressed_pair.1584" = type { %"struct.std::__1::__compressed_pair_elem.1585" }
%"struct.std::__1::__compressed_pair_elem.1585" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.std::__1::unique_ptr.1150"* }
%class.scoped_refptr.1156 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1157", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1158" = type { %"class.absl::optional_internal::optional_data.1159" }
%"class.absl::optional_internal::optional_data.1159" = type { %"class.absl::optional_internal::optional_data_base.1160" }
%"class.absl::optional_internal::optional_data_base.1160" = type { %"class.absl::optional_internal::optional_data_dtor_base.1161" }
%"class.absl::optional_internal::optional_data_dtor_base.1161" = type { i8, %union.anon.1162 }
%union.anon.1162 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1163" = type { %"class.absl::optional_internal::optional_data.1164" }
%"class.absl::optional_internal::optional_data.1164" = type { %"class.absl::optional_internal::optional_data_base.1165" }
%"class.absl::optional_internal::optional_data_base.1165" = type { %"class.absl::optional_internal::optional_data_dtor_base.1166" }
%"class.absl::optional_internal::optional_data_dtor_base.1166" = type { i8, %union.anon.1167 }
%union.anon.1167 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1168", %"class.WTF::Vector.1127", %"class.WTF::String" }
%"class.WTF::Vector.1168" = type { %"class.WTF::VectorBuffer.1169" }
%"class.WTF::VectorBuffer.1169" = type { %"class.WTF::VectorBufferBase.1170" }
%"class.WTF::VectorBufferBase.1170" = type { %class.scoped_refptr.1140*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1178", %"class.absl::optional.1178" }
%"class.absl::optional.1173" = type { %"class.absl::optional_internal::optional_data.1174" }
%"class.absl::optional_internal::optional_data.1174" = type { %"class.absl::optional_internal::optional_data_base.1175" }
%"class.absl::optional_internal::optional_data_base.1175" = type { %"class.absl::optional_internal::optional_data_dtor_base.1176" }
%"class.absl::optional_internal::optional_data_dtor_base.1176" = type { i8, %union.anon.1177 }
%union.anon.1177 = type { %"class.WTF::String" }
%"class.absl::optional.1183" = type { %"class.absl::optional_internal::optional_data.1184" }
%"class.absl::optional_internal::optional_data.1184" = type { %"class.absl::optional_internal::optional_data_base.1185" }
%"class.absl::optional_internal::optional_data_base.1185" = type { %"class.absl::optional_internal::optional_data_dtor_base.1186" }
%"class.absl::optional_internal::optional_data_dtor_base.1186" = type { i8, %union.anon.1187 }
%union.anon.1187 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1188" = type { %"class.absl::optional_internal::optional_data.1189" }
%"class.absl::optional_internal::optional_data.1189" = type { %"class.absl::optional_internal::optional_data_base.1190" }
%"class.absl::optional_internal::optional_data_base.1190" = type { %"class.absl::optional_internal::optional_data_dtor_base.1191" }
%"class.absl::optional_internal::optional_data_dtor_base.1191" = type { i8, %union.anon.1192 }
%union.anon.1192 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1193 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1589", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1589" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1590" }
%"class.std::__1::vector.1590" = type { %"class.std::__1::__vector_base.1591" }
%"class.std::__1::__vector_base.1591" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1592" }
%"class.std::__1::__compressed_pair.1592" = type { %"struct.std::__1::__compressed_pair_elem.1593" }
%"struct.std::__1::__compressed_pair_elem.1593" = type { i32* }
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1196", %class.scoped_refptr.1206, %class.scoped_refptr.1207, %"struct.blink::CacheControlHeader", %"class.absl::optional.1178", %"class.absl::optional.1208", %"class.absl::optional.1208", %"class.absl::optional.1208", i64, %"class.blink::KURL", %"class.WTF::Vector.1213", %"class.WTF::String", %"class.WTF::Vector.1127", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1183", %"class.WTF::Vector.1127", %"class.blink::KURL", %"class.absl::optional.1218" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1194", i8 }
%"struct.std::__1::array.1194" = type { [16 x i8] }
%"class.absl::optional.1196" = type { %"class.absl::optional_internal::optional_data.1197" }
%"class.absl::optional_internal::optional_data.1197" = type { %"class.absl::optional_internal::optional_data_base.1198" }
%"class.absl::optional_internal::optional_data_base.1198" = type { %"class.absl::optional_internal::optional_data_dtor_base.1199" }
%"class.absl::optional_internal::optional_data_dtor_base.1199" = type { i8, %union.anon.1200 }
%union.anon.1200 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.1127", %"class.WTF::String", i64, i64, %"class.WTF::Vector.567", %"class.WTF::Vector.1201" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.53" }
%"class.WTF::VectorBufferBase.53" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1206 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1207 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1208" = type { %"class.absl::optional_internal::optional_data.1209" }
%"class.absl::optional_internal::optional_data.1209" = type { %"class.absl::optional_internal::optional_data_base.1210" }
%"class.absl::optional_internal::optional_data_base.1210" = type { %"class.absl::optional_internal::optional_data_dtor_base.1211" }
%"class.absl::optional_internal::optional_data_dtor_base.1211" = type { i8, %union.anon.1212 }
%union.anon.1212 = type { %"class.base::Time" }
%"class.WTF::Vector.1213" = type { %"class.WTF::VectorBuffer.1214" }
%"class.WTF::VectorBuffer.1214" = type { %"class.WTF::VectorBufferBase.1215" }
%"class.WTF::VectorBufferBase.1215" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1218" = type { %"class.absl::optional_internal::optional_data.1219" }
%"class.absl::optional_internal::optional_data.1219" = type { %"class.absl::optional_internal::optional_data_base.1220" }
%"class.absl::optional_internal::optional_data_base.1220" = type { %"class.absl::optional_internal::optional_data_dtor_base.1221" }
%"class.absl::optional_internal::optional_data_dtor_base.1221" = type { i8, %union.anon.1222 }
%union.anon.1222 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1249 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1250", i64, %"class.WTF::Vector.1252", %"class.WTF::Vector.1257" }
%"class.WTF::RefCounted.1250" = type { %"class.base::RefCounted.1251" }
%"class.base::RefCounted.1251" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1252" = type { %"class.WTF::VectorBuffer.1253" }
%"class.WTF::VectorBuffer.1253" = type { %"class.WTF::VectorBufferBase.1254" }
%"class.WTF::VectorBufferBase.1254" = type { i8*, i32, i32 }
%"class.WTF::Vector.1257" = type { %"class.WTF::VectorBuffer.1258" }
%"class.WTF::VectorBuffer.1258" = type { %"class.WTF::VectorBufferBase.1259" }
%"class.WTF::VectorBufferBase.1259" = type { %"class.std::__1::unique_ptr.1260"*, i32, i32 }
%"class.std::__1::unique_ptr.1260" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1263" }
%"class.std::__1::__tree.1263" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1264", %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"class.blink::Member.1285"*, i32, i32 }
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1097" }
%"class.blink::Member.1287" = type { %"class.blink::MemberBase.1288" }
%"class.blink::MemberBase.1288" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1289" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1290", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.373, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1290" = type { %"class.blink::MemberBase.149" }
%"class.blink::HeapHashMap.1291" = type { %"class.WTF::HashMap.1294" }
%"class.WTF::HashMap.1294" = type { %"class.WTF::HashTable.1295" }
%"class.WTF::HashTable.1295" = type <{ %"struct.WTF::KeyValuePair.1297"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1297" = type opaque
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %class.scoped_refptr.1301*, i32, i32 }
%class.scoped_refptr.1301 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1304" = type { %"class.WTF::HashSet.1307" }
%"class.WTF::HashSet.1307" = type { %"class.WTF::HashTable.1308" }
%"class.WTF::HashTable.1308" = type <{ %"class.blink::Member.1247"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1310" = type { %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.1312" }
%"struct.std::__1::__compressed_pair_elem.1312" = type { %"class.WTF::HashSet.1313"* }
%"class.WTF::HashSet.1313" = type { %"class.WTF::HashTable.1314" }
%"class.WTF::HashTable.1314" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1075 }
%class.scoped_refptr.1075 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1320" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1324" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.156" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::KURL"* }
%"class.blink::Member.168" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.81", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.83, %"class.WTF::Vector.97", %"class.WTF::Vector.97", %"class.blink::Member.13", %"class.blink::Member.102", %"class.blink::HeapHashSet", %"class.blink::Member.2", %"class.WTF::HashSet.110", %"class.WTF::TextPosition", %"class.blink::Member.114", %"class.blink::HeapVector.116", %"class.blink::Member.123" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.83 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.84", %"class.WTF::Vector.86" }
%"class.WTF::RefCounted.84" = type { %"class.base::RefCounted.85" }
%"class.base::RefCounted.85" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.89", %"class.WTF::String" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.104" }
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.108" }
%"class.WTF::HashTable.108" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.16" }
%"class.WTF::HashSet.110" = type { %"class.WTF::HashTable.111" }
%"class.WTF::HashTable.111" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.83, %"class.blink::Member.79", %"class.blink::Member.102" }
%"class.blink::HeapVector.116" = type { %"class.WTF::Vector.119" }
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::Member.102"*, i32, i32 }
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.176 }
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.2", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.13", %"class.blink::Member.13", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.385" }
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.394" = type { %"class.WTF::HashSet.397" }
%"class.WTF::HashSet.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"class.blink::WeakMember.400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.400" = type opaque
%"class.blink::HeapHashSet.401" = type { %"class.WTF::HashSet.404" }
%"class.WTF::HashSet.404" = type { %"class.WTF::HashTable.405" }
%"class.WTF::HashTable.405" = type <{ %"class.blink::WeakMember.407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.407" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.2", i32, i32, i32, %"class.blink::Member.79", %"class.blink::Member.414", %"class.blink::Member.441", %"class.blink::HeapHashMap.443", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.450", %"class.blink::HeapHashSet.450", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.456", %"class.blink::Member.470", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.508", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.672", %"class.blink::Member.678", %"class.blink::HeapHashMap.740", %"class.blink::HeapHashMap.747", %"class.std::__1::unique_ptr.754", i32, %"class.blink::HeapVector.760", %"class.blink::HeapVector.760", %"class.blink::HeapVector.426", %"class.blink::HeapHashSet.768", %"class.blink::HeapHashMap.775", %"class.blink::Member.782", %"class.blink::HeapHashMap.784", %class.scoped_refptr.791, %class.scoped_refptr.792, %"class.blink::Member.636", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.793", %"class.blink::Member.35" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.15", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.418", %"class.blink::HeapVector.426", i8 }>
%"class.blink::HeapVector.418" = type { %"class.WTF::Vector.421" }
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"class.blink::Member.424"*, i32, i32 }
%"class.blink::Member.424" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.437", %"class.blink::Member.439", %"class.blink::Member.439", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.437" = type <{ %"class.blink::Member.439"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.13", %"class.blink::Member.439", %"class.blink::Member.439" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.443" = type { %"class.WTF::HashMap.446" }
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type opaque
%"class.blink::HeapHashSet.450" = type { %"class.WTF::HashSet.453" }
%"class.WTF::HashSet.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"class.blink::Member.15"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.460", %"class.blink::Member.462" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.466", %"class.blink::Member.468" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.997", %"class.blink::Member.462", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.997" = type { %"class.WTF::Vector.1000" }
%"class.WTF::Vector.1000" = type { %"class.WTF::VectorBuffer.1001" }
%"class.WTF::VectorBuffer.1001" = type { %"class.WTF::VectorBufferBase.1002" }
%"class.WTF::VectorBufferBase.1002" = type { %"class.blink::Member.468"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1004, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.137" }>
%class.sk_sp.1004 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1005 }
%union.anon.1005 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.2", %class.scoped_refptr.481, %"class.blink::SelectorFilter", %"class.blink::Member.441", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.474" }
%"class.blink::HeapHashMap.474" = type { %"class.WTF::HashMap.477" }
%"class.WTF::HashMap.477" = type { %"class.WTF::HashTable.478" }
%"class.WTF::HashTable.478" = type <{ %"struct.WTF::KeyValuePair.480"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.480" = type opaque
%class.scoped_refptr.481 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.482", %"class.std::__1::unique_ptr.494" }
%"class.blink::HeapVector.482" = type { %"class.WTF::Vector.485" }
%"class.WTF::Vector.485" = type { %"class.WTF::VectorBuffer.486" }
%"class.WTF::VectorBuffer.486" = type { %"class.WTF::VectorBufferBase.487" }
%"class.WTF::VectorBufferBase.487" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.35", %"class.WTF::Vector.488" }
%"class.WTF::Vector.488" = type { %"class.WTF::VectorBuffer.489" }
%"class.WTF::VectorBuffer.489" = type { %"class.WTF::VectorBufferBase.490", [16 x i8] }
%"class.WTF::VectorBufferBase.490" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.506", i8, [7 x i8] }>
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.530", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.512", %"class.WTF::HashMap.512", %"class.WTF::HashMap.512", %"class.WTF::HashMap.517", %class.scoped_refptr.522, %class.scoped_refptr.529, %class.scoped_refptr.528, %"class.WTF::Vector.97", %"class.WTF::Vector.97", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.512" = type { %"class.WTF::HashTable.513" }
%"class.WTF::HashTable.513" = type <{ %"struct.WTF::KeyValuePair.516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.516" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1572 }
%class.scoped_refptr.1572 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.523", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.525", %"union.blink::InvalidationSet::Backing.526", %"union.blink::InvalidationSet::Backing.527", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.525" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.526" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.527" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"struct.WTF::KeyValuePair.521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.521" = type opaque
%class.scoped_refptr.522 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.528, %class.scoped_refptr.528 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.523", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.525", %"union.blink::InvalidationSet::Backing.526", %"union.blink::InvalidationSet::Backing.527", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.529 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.528 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.534", %"class.blink::HeapHashMap.534", %"class.blink::HeapHashMap.534", %"class.blink::HeapHashMap.534", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::HeapVector.541", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.579", %"class.blink::HeapVector.587", %"class.blink::HeapVector.595", %"class.blink::HeapVector.612", %"class.blink::HeapVector.620", %"class.blink::HeapVector.628", %"class.blink::HeapVector.641", %"class.WTF::Vector.648", i32, %"class.blink::Member.654" }
%"class.blink::HeapHashMap.534" = type { %"class.WTF::HashMap.537" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type { %"class.WTF::AtomicString", %"class.blink::Member.1582" }
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::HeapVector.541"* }
%"class.blink::HeapVector.541" = type { %"class.WTF::Vector.544" }
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { %"class.blink::Member.547"*, i32, i32 }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.551", i64, [4 x i32] }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.44", %"class.blink::Member.574" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.579" = type { %"class.WTF::Vector.582" }
%"class.WTF::Vector.582" = type { %"class.WTF::VectorBuffer.583" }
%"class.WTF::VectorBuffer.583" = type { %"class.WTF::VectorBufferBase.584" }
%"class.WTF::VectorBufferBase.584" = type { %"class.blink::Member.585"*, i32, i32 }
%"class.blink::Member.585" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.44", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.587" = type { %"class.WTF::Vector.590" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.blink::Member.593"*, i32, i32 }
%"class.blink::Member.593" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.44" }
%"class.blink::HeapVector.595" = type { %"class.WTF::Vector.598" }
%"class.WTF::Vector.598" = type { %"class.WTF::VectorBuffer.599" }
%"class.WTF::VectorBuffer.599" = type { %"class.WTF::VectorBufferBase.600" }
%"class.WTF::VectorBufferBase.600" = type { %"class.blink::Member.601"*, i32, i32 }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.603", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.603" = type { %"class.WTF::Vector.606" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { %"class.blink::Member.609"*, i32, i32 }
%"class.blink::Member.609" = type opaque
%"class.blink::HeapVector.612" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::Member.618"*, i32, i32 }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.44" }
%"class.blink::HeapVector.620" = type { %"class.WTF::Vector.623" }
%"class.WTF::Vector.623" = type { %"class.WTF::VectorBuffer.624" }
%"class.WTF::VectorBuffer.624" = type { %"class.WTF::VectorBufferBase.625" }
%"class.WTF::VectorBufferBase.625" = type { %"class.blink::Member.626"*, i32, i32 }
%"class.blink::Member.626" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", i32, [4 x i8] }>
%"class.blink::HeapVector.628" = type { %"class.WTF::Vector.631" }
%"class.WTF::Vector.631" = type { %"class.WTF::VectorBuffer.632" }
%"class.WTF::VectorBuffer.632" = type { %"class.WTF::VectorBufferBase.633" }
%"class.WTF::VectorBufferBase.633" = type { %"class.blink::Member.634"*, i32, i32 }
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636" }
%"class.blink::HeapVector.641" = type { %"class.WTF::Vector.644" }
%"class.WTF::Vector.644" = type { %"class.WTF::VectorBuffer.645" }
%"class.WTF::VectorBuffer.645" = type { %"class.WTF::VectorBufferBase.646" }
%"class.WTF::VectorBufferBase.646" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.551", i32, i32 }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.651, i8, [7 x i8] }>
%class.scoped_refptr.651 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.658", %"class.blink::HeapHashMap.658", %"class.blink::HeapHashMap.658", %"class.blink::HeapHashMap.658" }
%"class.blink::HeapHashMap.658" = type { %"class.WTF::HashMap.661" }
%"class.WTF::HashMap.661" = type { %"class.WTF::HashTable.662" }
%"class.WTF::HashTable.662" = type <{ %"struct.WTF::KeyValuePair.664"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.664" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.665" }
%"class.blink::HeapHashMap.665" = type { %"class.WTF::HashMap.668" }
%"class.WTF::HashMap.668" = type { %"class.WTF::HashTable.669" }
%"class.WTF::HashTable.669" = type <{ %"struct.WTF::KeyValuePair.671"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.671" = type { %"class.blink::Member.21", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1573", %"class.WTF::Vector.1573" }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575" }
%"class.WTF::VectorBufferBase.1575" = type { %class.scoped_refptr.1572*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.13", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.672" = type { %"class.WTF::HashSet.675" }
%"class.WTF::HashSet.675" = type { %"class.WTF::HashTable.676" }
%"class.WTF::HashTable.676" = type <{ %"class.blink::Member.35"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.684", %"class.blink::Member.686", %"class.blink::HeapHashSet.721", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.682" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::WeakMember.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.690", %"class.blink::HeapHashMap.697", %"class.blink::HeapHashMap.704", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%"class.blink::HeapHashMap.697" = type { %"class.WTF::HashMap.700" }
%"class.WTF::HashMap.700" = type { %"class.WTF::HashTable.701" }
%"class.WTF::HashTable.701" = type <{ %"struct.WTF::KeyValuePair.703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.703" = type opaque
%"class.blink::HeapHashMap.704" = type { %"class.WTF::HashMap.707" }
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.710"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.710" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.713", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type <{ %"class.blink::Member.1555", i32, [4 x i8] }>
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", %"class.blink::Member.636", i32, %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::Member.1562", %"class.blink::HeapVector.1564" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1557" }
%"class.blink::WeakMember.1557" = type { %"class.blink::MemberBase.147" }
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type opaque
%"class.blink::HeapVector.1564" = type { %"class.WTF::Vector.1567" }
%"class.WTF::Vector.1567" = type { %"class.WTF::VectorBuffer.1568" }
%"class.WTF::VectorBuffer.1568" = type { %"class.WTF::VectorBufferBase.1569" }
%"class.WTF::VectorBufferBase.1569" = type { %"class.blink::Member.1570"*, i32, i32 }
%"class.blink::Member.1570" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.717", i32, i32 }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::Member.1555" }
%"class.blink::HeapHashSet.721" = type { %"class.WTF::HashSet.724" }
%"class.WTF::HashSet.724" = type { %"class.WTF::HashTable.725" }
%"class.WTF::HashTable.725" = type <{ %"class.blink::WeakMember.727"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.727" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.WTF::HashMap.728", %"class.std::__1::unique_ptr.733" }
%"class.WTF::HashMap.728" = type { %"class.WTF::HashTable.729" }
%"class.WTF::HashTable.729" = type <{ %"struct.WTF::KeyValuePair.732"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.732" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.WTF::Vector.736"* }
%"class.WTF::Vector.736" = type opaque
%"class.blink::HeapHashMap.740" = type { %"class.WTF::HashMap.743" }
%"class.WTF::HashMap.743" = type { %"class.WTF::HashTable.744" }
%"class.WTF::HashTable.744" = type <{ %"struct.WTF::KeyValuePair.746"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.746" = type opaque
%"class.blink::HeapHashMap.747" = type { %"class.WTF::HashMap.750" }
%"class.WTF::HashMap.750" = type { %"class.WTF::HashTable.751" }
%"class.WTF::HashTable.751" = type <{ %"struct.WTF::KeyValuePair.753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.753" = type opaque
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.760" = type { %"class.WTF::Vector.763" }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { %"struct.std::__1::pair.766"*, i32, i32 }
%"struct.std::__1::pair.766" = type opaque
%"class.blink::HeapVector.426" = type { %"class.WTF::Vector.429" }
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.std::__1::pair.432"*, i32, i32 }
%"struct.std::__1::pair.432" = type opaque
%"class.blink::HeapHashSet.768" = type { %"class.WTF::HashSet.771" }
%"class.WTF::HashSet.771" = type { %"class.WTF::HashTable.772" }
%"class.WTF::HashTable.772" = type <{ %"class.blink::WeakMember.774"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.774" = type { %"class.blink::MemberBase.80" }
%"class.blink::HeapHashMap.775" = type { %"class.WTF::HashMap.778" }
%"class.WTF::HashMap.778" = type { %"class.WTF::HashTable.779" }
%"class.WTF::HashTable.779" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type { %"class.WTF::AtomicString", %"class.blink::Member.601" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.784" = type { %"class.WTF::HashMap.787" }
%"class.WTF::HashMap.787" = type { %"class.WTF::HashTable.788" }
%"class.WTF::HashTable.788" = type <{ %"struct.WTF::KeyValuePair.790"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.790" = type opaque
%class.scoped_refptr.791 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.792 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.793" = type { %"class.WTF::HashSet.796" }
%"class.WTF::HashSet.796" = type { %"class.WTF::HashTable.797" }
%"class.WTF::HashTable.797" = type <{ %"class.blink::Member.799"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.799" = type opaque
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.15", %"class.blink::HeapVector.73" }
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.806" = type { %"class.WTF::HashMap.809" }
%"class.WTF::HashMap.809" = type { %"class.WTF::HashTable.810" }
%"class.WTF::HashTable.810" = type <{ %"struct.WTF::KeyValuePair.812"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.812" = type opaque
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.38" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.37 }
%class.scoped_refptr.37 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.42", %"class.blink::Member.44", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.42" = type { %"class.WTF::SingleThreadedBitField.43" }
%"class.WTF::SingleThreadedBitField.43" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.49", %"class.WTF::AtomicString", %"class.WTF::Vector.51" }
%"class.WTF::RefCounted.49" = type { %"class.base::RefCounted.50" }
%"class.base::RefCounted.50" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.51" = type { %"class.WTF::VectorBuffer.52" }
%"class.WTF::VectorBuffer.52" = type { %"class.WTF::VectorBufferBase.53", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.blink::Member.832"*, i32, i32 }
%"class.blink::Member.832" = type opaque
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.840" = type { %"class.WTF::HashSet.843" }
%"class.WTF::HashSet.843" = type { %"class.WTF::HashTable.844" }
%"class.WTF::HashTable.844" = type <{ %"class.blink::WeakMember.846"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.846" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.847", i32, [4 x i8] }>
%"class.WTF::Vector.847" = type { %"class.WTF::VectorBuffer.848" }
%"class.WTF::VectorBuffer.848" = type { %"class.WTF::VectorBufferBase.849" }
%"class.WTF::VectorBufferBase.849" = type { %"struct.std::__1::pair.850"*, i32, i32 }
%"struct.std::__1::pair.850" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.855" = type { %"class.WTF::VectorBuffer.856" }
%"class.WTF::VectorBuffer.856" = type { %"class.WTF::VectorBufferBase.857" }
%"class.WTF::VectorBufferBase.857" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.35"*, i32, i32 }
%"class.blink::HeapVector.866" = type { %"class.WTF::Vector.869" }
%"class.WTF::Vector.869" = type { %"class.WTF::VectorBuffer.870" }
%"class.WTF::VectorBuffer.870" = type { %"class.WTF::VectorBufferBase.871" }
%"class.WTF::VectorBufferBase.871" = type { %"class.blink::Member.872"*, i32, i32 }
%"class.blink::Member.872" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.2" }
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.876" = type { %"class.blink::MemberBase.877" }
%"class.blink::MemberBase.877" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.878" = type { %"class.blink::MemberBase.879" }
%"class.blink::MemberBase.879" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.880" = type { %"class.blink::MemberBase.881" }
%"class.blink::MemberBase.881" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.884" = type { %"class.WTF::HashTable.885" }
%"class.WTF::HashTable.885" = type <{ %"struct.WTF::KeyValuePair.888"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.888" = type opaque
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.891" = type { %"class.blink::MemberBase.892" }
%"class.blink::MemberBase.892" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.893" = type { %"class.blink::MemberBase.894" }
%"class.blink::MemberBase.894" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.895" = type { %"class.blink::MemberBase.896" }
%"class.blink::MemberBase.896" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.382", { i64, i64 } }
%"class.blink::WeakMember.382" = type { %"class.blink::MemberBase.3" }
%"class.blink::HeapHashSet.897" = type { %"class.WTF::HashSet.900" }
%"class.WTF::HashSet.900" = type { %"class.WTF::HashTable.901" }
%"class.WTF::HashTable.901" = type <{ %"class.blink::Member.903"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.903" = type opaque
%"class.blink::Member.904" = type { %"class.blink::MemberBase.905" }
%"class.blink::MemberBase.905" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.910" = type { %"class.blink::MemberBase.911" }
%"class.blink::MemberBase.911" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.912" = type { %"class.blink::MemberBase.913" }
%"class.blink::MemberBase.913" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.110", %"class.WTF::HashSet.110", %"class.WTF::HashSet.110", %"class.WTF::HashSet.110", %"class.WTF::HashSet.110", %"class.WTF::HashSet.110", i32, [4 x i8], %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", %"class.WTF::HashMap.923", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.923" = type { %"class.WTF::HashTable.924" }
%"class.WTF::HashTable.924" = type <{ %"struct.WTF::KeyValuePair.927"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.927" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.939" = type { %"class.WTF::VectorBuffer.940" }
%"class.WTF::VectorBuffer.940" = type { %"class.WTF::VectorBufferBase.941" }
%"class.WTF::VectorBufferBase.941" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.944" = type { %"class.WTF::HashMap.947" }
%"class.WTF::HashMap.947" = type { %"class.WTF::HashTable.948" }
%"class.WTF::HashTable.948" = type <{ %"struct.WTF::KeyValuePair.950"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.950" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.963" = type { %"class.WTF::HashMap.966" }
%"class.WTF::HashMap.966" = type { %"class.WTF::HashTable.967" }
%"class.WTF::HashTable.967" = type <{ %"struct.WTF::KeyValuePair.969"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.969" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.970" }
%"class.blink::HeapHashSet.970" = type { %"class.WTF::HashSet.973" }
%"class.WTF::HashSet.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"class.blink::WeakMember.976"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.976" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.2", %"class.blink::HeapHashSet.986", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.993", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.986" = type { %"class.WTF::HashSet.989" }
%"class.WTF::HashSet.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"class.blink::Member.992"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.992" = type opaque
%"class.blink::HeapTaskRunnerTimer.993" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.980" }
%"class.blink::WeakMember.981" = type { %"class.blink::MemberBase.14" }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"struct.std::__1::array"*, i32, i32 }
%"struct.std::__1::array" = type { [3 x %"class.base::TimeTicks"] }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::FirstMeaningfulPaintDetector"* }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback.1544" }
%"class.base::OnceCallback.1544" = type { %"class.base::internal::CallbackBase" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.1545" }
%"class.blink::PersistentBase.1545" = type { %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.1546" }
%"struct.std::__1::atomic.1546" = type { %"struct.std::__1::__atomic_base.1547" }
%"struct.std::__1::__atomic_base.1547" = type { %"struct.std::__1::__cxx_atomic_impl.1548" }
%"struct.std::__1::__cxx_atomic_impl.1548" = type { %"struct.std::__1::__cxx_atomic_base_impl.1549" }
%"struct.std::__1::__cxx_atomic_base_impl.1549" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type <{ %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.1601", [4 x i8] }>
%"class.std::__1::__tuple_leaf" = type { %"class.blink::CrossThreadWeakPersistent" }
%"class.std::__1::__tuple_leaf.1601" = type { i32 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.1602" }
%"class.blink::PersistentBase.1602" = type { %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::CrossThreadPersistentNodePtr.1603" }
%"class.blink::CrossThreadPersistentNodePtr.1603" = type { %"struct.std::__1::atomic.1546" }

$_ZN3WTF19CrossThreadBindOnceIMN5blink28FirstMeaningfulPaintDetectorEFvNS1_10PaintEventENS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERS3_EEEDaOT_DpOT0_ = comdat any

$_ZN5blink28FirstMeaningfulPaintDetectorD2Ev = comdat any

$_ZN5blink28FirstMeaningfulPaintDetectorD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunOnceEPNS0_13BindStateBaseES6_OS7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunImplIS9_NSt3__15tupleIJSB_S5_EEEJLm0ELm1EEEEvOT_OT0_NSG_16integer_sequenceImJXspT1_EEEEOS6_OS7_ = comdat any

$_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_28FirstMeaningfulPaintDetectorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EEC2IS8_JSA_S4_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink10TraceTraitINS_11PaintTimingEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink28FirstMeaningfulPaintDetectorE = comdat any

@_ZTVN5blink28FirstMeaningfulPaintDetectorE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FirstMeaningfulPaintDetector"*)* @_ZN5blink28FirstMeaningfulPaintDetectorD2Ev to i8*), i8* bitcast (void (%"class.blink::FirstMeaningfulPaintDetector"*)* @_ZN5blink28FirstMeaningfulPaintDetectorD0Ev to i8*)] }, comdat, align 8
@_ZN5blink12_GLOBAL__N_17g_clockE = internal unnamed_addr global %"class.base::TickClock"* null, align 8
@.str = private unnamed_addr constant [30 x i8] c"firstMeaningfulPaintCandidate\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"firstMeaningfulPaint\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4

@_ZN5blink28FirstMeaningfulPaintDetectorC1EPNS_11PaintTimingE = hidden unnamed_addr alias void (%"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::PaintTiming"*), void (%"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::PaintTiming"*)* @_ZN5blink28FirstMeaningfulPaintDetectorC2EPNS_11PaintTimingE

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"class.blink::FirstMeaningfulPaintDetector"* @_ZN5blink28FirstMeaningfulPaintDetector4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(152) %"class.blink::PaintTiming"* @_ZN5blink11PaintTiming4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %0) #9
  %3 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %2, i64 0, i32 13, i32 0, i32 0
  %4 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %3, align 8
  ret %"class.blink::FirstMeaningfulPaintDetector"* %4
}

declare dereferenceable(152) %"class.blink::PaintTiming"* @_ZN5blink11PaintTiming4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetectorC2EPNS_11PaintTimingE(%"class.blink::FirstMeaningfulPaintDetector"* nocapture, %"class.blink::PaintTiming"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink28FirstMeaningfulPaintDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::PaintTiming"* %1, %"class.blink::PaintTiming"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 12, i32 0, i32 0
  %10 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 38, i1 false)
  %11 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** @_ZN5blink12_GLOBAL__N_17g_clockE, align 8
  %13 = icmp eq %"class.base::TickClock"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #9
  %16 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %15, i64 0, i32 0
  store %"class.base::TickClock"* %16, %"class.base::TickClock"** @_ZN5blink12_GLOBAL__N_17g_clockE, align 8
  br label %17

17:                                               ; preds = %2, %14
  ret void
}

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink28FirstMeaningfulPaintDetector11GetDocumentEv(%"class.blink::FirstMeaningfulPaintDetector"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  ret %"class.blink::Document"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector33MarkNextPaintAsMeaningfulIfNeededERKNS_19LayoutObjectCounterEddi(%"class.blink::FirstMeaningfulPaintDetector"* nocapture, %"class.blink::LayoutObjectCounter"* nocapture readonly dereferenceable(4), double, double, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 11
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %44

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutObjectCounter", %"class.blink::LayoutObjectCounter"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 9
  %13 = load i32, i32* %12, align 8
  store i32 %11, i32* %12, align 8
  %14 = icmp eq i32 %4, 0
  br i1 %14, label %44, label %15

15:                                               ; preds = %9
  %16 = sub i32 %11, %13
  %17 = sitofp i32 %4 to double
  %18 = fdiv double %2, %17
  %19 = fcmp ogt double %18, 1.000000e+00
  %20 = select i1 %19, double %18, double 1.000000e+00
  %21 = fdiv double %3, %17
  %22 = fcmp ogt double %21, 1.000000e+00
  %23 = select i1 %22, double %21, double 1.000000e+00
  %24 = uitofp i32 %16 to double
  %25 = fadd double %20, %23
  %26 = fmul double %25, 5.000000e-01
  %27 = fdiv double %24, %26
  %28 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %29 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = tail call i64 @_ZN5blink19FontFaceSetDocument30ApproximateBlankCharacterCountERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %31) #9
  %33 = icmp ugt i64 %32, 200
  %34 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 8
  %35 = load double, double* %34, align 8
  %36 = fadd double %27, %35
  br i1 %33, label %37, label %38

37:                                               ; preds = %15
  store double %36, double* %34, align 8
  br label %44

38:                                               ; preds = %15
  store double 0.000000e+00, double* %34, align 8
  %39 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 7
  %40 = load double, double* %39, align 8
  %41 = fcmp ogt double %36, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 1
  store i8 1, i8* %43, align 8
  store double %36, double* %39, align 8
  br label %44

44:                                               ; preds = %9, %38, %42, %37, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare i64 @_ZN5blink19FontFaceSetDocument30ApproximateBlankCharacterCountERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector11NotifyPaintEv(%"class.blink::FirstMeaningfulPaintDetector"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %5
  %12 = load %"class.base::TickClock"*, %"class.base::TickClock"** @_ZN5blink12_GLOBAL__N_17g_clockE, align 8
  %13 = bitcast %"class.base::TickClock"* %12 to i64 (%"class.base::TickClock"*)***
  %14 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %14, i64 2
  %16 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %15, align 8
  %17 = tail call i64 %16(%"class.base::TickClock"* %12) #9
  %18 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  store i8 0, i8* %2, align 8
  %19 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 11
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 0, i64* %26, align 8
  tail call void @_ZN5blink28FirstMeaningfulPaintDetector30RegisterNotifyPresentationTimeENS_10PaintEventE(%"class.blink::FirstMeaningfulPaintDetector"* %0, i32 2)
  br label %27

27:                                               ; preds = %11, %1, %5, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector30RegisterNotifyPresentationTimeENS_10PaintEventE(%"class.blink::FirstMeaningfulPaintDetector"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  store i32 %1, i32* %3, align 4
  %8 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 13
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  %11 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %11, align 8
  %13 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)* @_ZN5blink28FirstMeaningfulPaintDetector22ReportPresentationTimeENS_10PaintEventENS_13WebSwapResultEN4base9TimeTicksE to i64), i64 0>, <2 x i64>* %5, align 16
  %14 = bitcast %"class.blink::CrossThreadWeakPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0, i32 0
  store %"class.blink::FirstMeaningfulPaintDetector"* %0, %"class.blink::FirstMeaningfulPaintDetector"** %16, align 8, !alias.scope !3
  %17 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %18, align 8, !alias.scope !3
  %19 = ptrtoint %"class.blink::FirstMeaningfulPaintDetector"* %0 to i64
  switch i64 %19, label %20 [
    i64 0, label %39
    i64 -1, label %39
  ]

20:                                               ; preds = %2
  %21 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !3
  %22 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %21, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %22) #9, !noalias !3
  %23 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9, !noalias !3
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8, !noalias !3
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !6

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #9
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %20
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %20 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !3
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8, !noalias !3
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase.1545"**
  store %"class.blink::PersistentBase.1545"* %15, %"class.blink::PersistentBase.1545"** %35, align 8, !noalias !3
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  %37 = ptrtoint %"class.blink::PersistentNode"* %31 to i64
  %38 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %17 to i64*
  store atomic i64 %37, i64* %38 release, align 8, !alias.scope !3
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %22) #9
  br label %39

39:                                               ; preds = %2, %2, %30
  call void @_ZN3WTF19CrossThreadBindOnceIMN5blink28FirstMeaningfulPaintDetectorEFvNS1_10PaintEventENS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERS3_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* nonnull sret %4, { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::CrossThreadWeakPersistent"* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %3)
  call void @_ZN5blink11PaintTiming30RegisterNotifyPresentationTimeEN3WTF23CrossThreadOnceFunctionIFvNS_13WebSwapResultEN4base9TimeTicksEEEE(%"class.blink::PaintTiming"* %12, %"class.WTF::CrossThreadOnceFunction"* nonnull %4) #9
  %40 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #9
  %41 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %17 to i64*
  %42 = load atomic i64, i64* %41 acquire, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %46 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %45, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %46) #9
  %47 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %48 = load atomic i64, i64* %41 monotonic, align 8
  %49 = inttoptr i64 %48 to %"class.blink::PersistentNode"*
  %50 = icmp eq i64 %48, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %47, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::CrossThreadPersistentRegion"* %47 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = inttoptr i64 %48 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %49, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %56, align 8
  store %"class.blink::PersistentNode"* %49, %"class.blink::PersistentNode"** %52, align 8
  br label %57

57:                                               ; preds = %51, %44
  store atomic i64 0, i64* %41 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %46) #9
  br label %58

58:                                               ; preds = %39, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector16NotifyInputEventEv(%"class.blink::FirstMeaningfulPaintDetector"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 2
  store i32 1, i32* %8, align 4
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector15OnNetwork2QuietEv(%"class.blink::FirstMeaningfulPaintDetector"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = icmp eq %"class.blink::Document"* %5, null
  br i1 %6, label %63, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 11
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %63

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %3, i64 0, i32 7, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %63, label %15

15:                                               ; preds = %11
  store i8 1, i8* %8, align 1
  %16 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %63, label %19

19:                                               ; preds = %15
  %20 = load i64, i64* %12, align 8
  %21 = icmp slt i64 %17, %20
  %22 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 12, i32 0, i32 0
  br i1 %21, label %23, label %29

23:                                               ; preds = %19
  store i64 %20, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %3, i64 0, i32 8, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 14
  store i32 2, i32* %28, align 4
  br label %37

29:                                               ; preds = %19
  store i64 %17, i64* %22, align 8
  %30 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 6, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 13
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 14
  store i32 1, i32* %36, align 4
  br label %37

37:                                               ; preds = %29, %35, %23, %27
  %38 = phi i64 [ 0, %27 ], [ %25, %23 ], [ %31, %29 ], [ %31, %35 ]
  %39 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 14
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %63

42:                                               ; preds = %37
  %43 = add i64 %38, -9223372036854775807
  %44 = icmp ult i64 %43, 2
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = sitofp i64 %38 to double
  %47 = fdiv double %46, 1.000000e+06
  br label %51

48:                                               ; preds = %42
  %49 = icmp slt i64 %38, 0
  %50 = select i1 %49, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %51

51:                                               ; preds = %48, %45
  %52 = phi double [ %50, %48 ], [ %47, %45 ]
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %55 = and i32 %54, 294914
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  tail call void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"* %53, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), double %52) #9
  br label %58

58:                                               ; preds = %51, %57
  %59 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %2, align 8
  tail call void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"* %59, i64 %38) #9
  %60 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %2, align 8
  %61 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  tail call void @_ZN5blink11PaintTiming23SetFirstMeaningfulPaintEN4base9TimeTicksENS_28FirstMeaningfulPaintDetector12HadUserInputE(%"class.blink::PaintTiming"* %60, i64 %38, i32 %62) #9
  br label %63

63:                                               ; preds = %37, %58, %1, %7, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector23SetFirstMeaningfulPaintEN4base9TimeTicksE(%"class.blink::FirstMeaningfulPaintDetector"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = add i64 %1, -9223372036854775807
  %4 = icmp ult i64 %3, 2
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = sitofp i64 %1 to double
  %7 = fdiv double %6, 1.000000e+06
  br label %11

8:                                                ; preds = %2
  %9 = icmp slt i64 %1, 0
  %10 = select i1 %9, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi double [ %10, %8 ], [ %7, %5 ]
  %13 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %14 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %18 = and i32 %17, 294914
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %11
  tail call void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"* %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), double %12) #9
  br label %21

21:                                               ; preds = %11, %20
  %22 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %13, align 8
  tail call void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"* %22, i64 %1) #9
  %23 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %13, align 8
  %24 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  tail call void @_ZN5blink11PaintTiming23SetFirstMeaningfulPaintEN4base9TimeTicksENS_28FirstMeaningfulPaintDetector12HadUserInputE(%"class.blink::PaintTiming"* %23, i64 %1, i32 %25) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink28FirstMeaningfulPaintDetector24SeenFirstMeaningfulPaintEv(%"class.blink::FirstMeaningfulPaintDetector"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

declare void @_ZN5blink11PaintTiming30RegisterNotifyPresentationTimeEN3WTF23CrossThreadOnceFunctionIFvNS_13WebSwapResultEN4base9TimeTicksEEEE(%"class.blink::PaintTiming"*, %"class.WTF::CrossThreadOnceFunction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF19CrossThreadBindOnceIMN5blink28FirstMeaningfulPaintDetectorEFvNS1_10PaintEventENS1_13WebSwapResultEN4base9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EERS3_EEEDaOT_DpOT0_(%"class.WTF::CrossThreadOnceFunction"* noalias sret, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadWeakPersistent"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.base::OnceCallback.1544", align 8
  %6 = alloca %"class.base::OnceCallback.1544", align 8
  %7 = alloca %"class.blink::CrossThreadWeakPersistent", align 8
  %8 = alloca i32, align 4
  %9 = bitcast %"class.blink::CrossThreadWeakPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #9, !alias.scope !7
  %11 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !7
  %12 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #9, !noalias !7
  %13 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %13, align 8, !noalias !7
  call void @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.1545"* nonnull %10, %"class.blink::FirstMeaningfulPaintDetector"* %14) #9
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #9
  %15 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #9
  %16 = load i32, i32* %3, align 4
  store i32 %16, i32* %8, align 4
  %17 = call i8* @_Znwm(i64 72) #10, !noalias !10
  %18 = bitcast i8* %17 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EEC2IS8_JSA_S4_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeTicks"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunOnceEPNS0_13BindStateBaseES6_OS7_ to void ()*), { i64, i64 }* dereferenceable(16) %1, %"class.blink::CrossThreadWeakPersistent"* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %8) #9, !noalias !10
  %19 = bitcast %"class.base::OnceCallback.1544"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.base::OnceCallback.1544", %"class.base::OnceCallback.1544"* %6, i64 0, i32 0, i32 0, i32 0
  %21 = ptrtoint i8* %17 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8, !noalias !15
  %22 = getelementptr inbounds %"class.base::OnceCallback.1544", %"class.base::OnceCallback.1544"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.WTF::CrossThreadOnceFunction"* %0 to i64*
  store i64 %21, i64* %23, align 8, !alias.scope !15
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8, !noalias !15
  %24 = getelementptr inbounds %"class.base::OnceCallback.1544", %"class.base::OnceCallback.1544"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #9, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %25 = getelementptr inbounds %"class.base::OnceCallback.1544", %"class.base::OnceCallback.1544"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #9
  %26 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %7, i64 0, i32 0, i32 1
  %27 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %26 to i64*
  %28 = load atomic i64, i64* %27 acquire, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %44, label %30

30:                                               ; preds = %4
  %31 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %32 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %31, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %32) #9
  %33 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %34 = load atomic i64, i64* %27 monotonic, align 8
  %35 = inttoptr i64 %34 to %"class.blink::PersistentNode"*
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %33, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::CrossThreadPersistentRegion"* %33 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %34 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %42, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %38, align 8
  br label %43

43:                                               ; preds = %37, %30
  store atomic i64 0, i64* %27 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %32) #9
  br label %44

44:                                               ; preds = %4, %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector22ReportPresentationTimeENS_10PaintEventENS_13WebSwapResultEN4base9TimeTicksE(%"class.blink::FirstMeaningfulPaintDetector"* nocapture, i32, i32, i64) #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 13
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  tail call void @_ZN5blink11PaintTiming25ReportSwapResultHistogramENS_13WebSwapResultE(%"class.blink::PaintTiming"* %9, i32 %2) #9
  %10 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %3, i64* %10, align 8
  %11 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  %12 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = add i64 %3, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = sitofp i64 %3 to double
  %18 = fdiv double %17, 1.000000e+06
  br label %22

19:                                               ; preds = %4
  %20 = icmp slt i64 %3, 0
  %21 = select i1 %20, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi double [ %21, %19 ], [ %18, %16 ]
  %24 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %25 = and i32 %24, 294914
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  tail call void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"* %13, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), double %23) #9
  br label %28

28:                                               ; preds = %22, %27
  %29 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 10
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  store i8 1, i8* %29, align 4
  br label %36

33:                                               ; preds = %28
  %34 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  %35 = load i64, i64* %10, align 8
  tail call void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"* %34, i64 %35) #9
  br label %36

36:                                               ; preds = %33, %32
  %37 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 14
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %67

40:                                               ; preds = %36
  %41 = load i32, i32* %5, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %67

43:                                               ; preds = %40
  %44 = load i64, i64* %10, align 8
  %45 = add i64 %44, -9223372036854775807
  %46 = icmp ult i64 %45, 2
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = sitofp i64 %44 to double
  %49 = fdiv double %48, 1.000000e+06
  br label %53

50:                                               ; preds = %43
  %51 = icmp slt i64 %44, 0
  %52 = select i1 %51, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %53

53:                                               ; preds = %50, %47
  %54 = phi double [ %52, %50 ], [ %49, %47 ]
  %55 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  %56 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %55, i64 0, i32 0, i32 1, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %59 = and i32 %58, 294914
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %53
  tail call void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"* %57, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), double %54) #9
  br label %62

62:                                               ; preds = %53, %61
  %63 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  tail call void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"* %63, i64 %44) #9
  %64 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %8, align 8
  %65 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  tail call void @_ZN5blink11PaintTiming23SetFirstMeaningfulPaintEN4base9TimeTicksENS_28FirstMeaningfulPaintDetector12HadUserInputE(%"class.blink::PaintTiming"* %64, i64 %44, i32 %66) #9
  br label %67

67:                                               ; preds = %62, %40, %36
  ret void
}

declare void @_ZN5blink11PaintTiming25ReportSwapResultHistogramENS_13WebSwapResultE(%"class.blink::PaintTiming"*, i32) local_unnamed_addr #1

declare void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector26NotifyFirstContentfulPaintEN4base9TimeTicksE(%"class.blink::FirstMeaningfulPaintDetector"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = add i64 %1, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = sitofp i64 %1 to double
  %11 = fdiv double %10, 1.000000e+06
  br label %15

12:                                               ; preds = %6
  %13 = icmp slt i64 %1, 0
  %14 = select i1 %13, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %15

15:                                               ; preds = %12, %9
  %16 = phi double [ %14, %12 ], [ %11, %9 ]
  %17 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4, i32 0, i32 0
  %18 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::PaintTiming", %"class.blink::PaintTiming"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %22 = and i32 %21, 294914
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  tail call void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"* %20, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), double %16) #9
  br label %25

25:                                               ; preds = %15, %24
  %26 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %17, align 8
  tail call void @_ZN5blink11PaintTiming32SetFirstMeaningfulPaintCandidateEN4base9TimeTicksE(%"class.blink::PaintTiming"* %26, i64 %1) #9
  %27 = load %"class.blink::PaintTiming"*, %"class.blink::PaintTiming"** %17, align 8
  %28 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  tail call void @_ZN5blink11PaintTiming23SetFirstMeaningfulPaintEN4base9TimeTicksENS_28FirstMeaningfulPaintDetector12HadUserInputE(%"class.blink::PaintTiming"* %27, i64 %1, i32 %29) #9
  br label %30

30:                                               ; preds = %2, %25
  ret void
}

declare void @_ZN5blink11PaintTiming23SetFirstMeaningfulPaintEN4base9TimeTicksENS_28FirstMeaningfulPaintDetector12HadUserInputE(%"class.blink::PaintTiming"*, i64, i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink28FirstMeaningfulPaintDetector22SetTickClockForTestingEPKN4base9TickClockE(%"class.base::TickClock"*) local_unnamed_addr #4 align 2 {
  store %"class.base::TickClock"* %0, %"class.base::TickClock"** @_ZN5blink12_GLOBAL__N_17g_clockE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink28FirstMeaningfulPaintDetector5TraceEPNS_7VisitorE(%"class.blink::FirstMeaningfulPaintDetector"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11PaintTimingEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28FirstMeaningfulPaintDetectorD2Ev(%"class.blink::FirstMeaningfulPaintDetector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink28FirstMeaningfulPaintDetectorD0Ev(%"class.blink::FirstMeaningfulPaintDetector"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunOnceEPNS0_13BindStateBaseES6_OS7_(%"class.base::internal::BindStateBase"*, i32, %"class.base::TimeTicks"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = bitcast %"class.base::internal::BindStateBase"* %5 to { i64, i64 }*
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.std::__1::tuple"*
  call void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunImplIS9_NSt3__15tupleIJSB_S5_EEEJLm0ELm1EEEEvOT_OT0_NSG_16integer_sequenceImJXspT1_EEEEOS6_OS7_({ i64, i64 }* dereferenceable(16) %6, %"class.std::__1::tuple"* dereferenceable(24) %8, i32* nonnull dereferenceable(4) %4, %"class.base::TimeTicks"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEFvS6_S7_EE7RunImplIS9_NSt3__15tupleIJSB_S5_EEEJLm0ELm1EEEEvOT_OT0_NSG_16integer_sequenceImJXspT1_EEEEOS6_OS7_({ i64, i64 }* dereferenceable(16), %"class.std::__1::tuple"* dereferenceable(24), i32* dereferenceable(4), %"class.base::TimeTicks"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.blink::CrossThreadPersistent", align 8
  %6 = bitcast %"class.blink::CrossThreadPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #9, !alias.scope !18
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9, !noalias !18
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #9, !noalias !18
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %10, align 8, !noalias !18
  call void @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.1602"* nonnull %7, %"class.blink::FirstMeaningfulPaintDetector"* %11) #9
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #9
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %14 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %13, align 8
  %15 = icmp eq %"class.blink::FirstMeaningfulPaintDetector"* %14, null
  br i1 %15, label %41, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.blink::FirstMeaningfulPaintDetector"* %14 to i8*
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  %23 = bitcast i8* %22 to %"class.blink::FirstMeaningfulPaintDetector"*
  %24 = and i64 %19, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %16
  %27 = bitcast i8* %22 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = add i64 %19, -1
  %30 = getelementptr i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)**
  %32 = load void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)*, void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)** %31, align 8
  br label %35

33:                                               ; preds = %16
  %34 = inttoptr i64 %19 to void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)*
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi void (%"class.blink::FirstMeaningfulPaintDetector"*, i32, i32, i64)* [ %32, %26 ], [ %34, %33 ]
  %37 = load i32, i32* %12, align 4
  %38 = load i32, i32* %2, align 4
  %39 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  call void %36(%"class.blink::FirstMeaningfulPaintDetector"* %23, i32 %37, i32 %38, i64 %40) #9
  br label %41

41:                                               ; preds = %4, %35
  %42 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 1
  %43 = bitcast %"class.blink::CrossThreadPersistentNodePtr.1603"* %42 to i64*
  %44 = load atomic i64, i64* %43 acquire, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %41
  %47 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %48 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %47, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %48) #9
  %49 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %50 = load atomic i64, i64* %43 monotonic, align 8
  %51 = inttoptr i64 %50 to %"class.blink::PersistentNode"*
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %49, i64 0, i32 0, i32 0
  %55 = bitcast %"class.blink::CrossThreadPersistentRegion"* %49 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = inttoptr i64 %50 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %51, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %58, align 8
  store %"class.blink::PersistentNode"* %51, %"class.blink::PersistentNode"** %54, align 8
  br label %59

59:                                               ; preds = %53, %46
  store atomic i64 0, i64* %43 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %48) #9
  br label %60

60:                                               ; preds = %41, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret void
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.1602"*, %"class.blink::FirstMeaningfulPaintDetector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.1602", %"class.blink::PersistentBase.1602"* %0, i64 0, i32 0
  store %"class.blink::FirstMeaningfulPaintDetector"* %1, %"class.blink::FirstMeaningfulPaintDetector"** %3, align 8
  %4 = ptrtoint %"class.blink::FirstMeaningfulPaintDetector"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.1602", %"class.blink::PersistentBase.1602"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.1603"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.1602"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !6

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.1602"**
  store %"class.blink::PersistentBase.1602"* %0, %"class.blink::PersistentBase.1602"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.1602", %"class.blink::PersistentBase.1602"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.1603"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::FirstMeaningfulPaintDetector"**
  %5 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #9
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #9
  %7 = icmp eq %"class.blink::FirstMeaningfulPaintDetector"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::FirstMeaningfulPaintDetector"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_28FirstMeaningfulPaintDetectorEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #9
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #9
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_28FirstMeaningfulPaintDetectorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11PaintTimingEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EEC2IS8_JSA_S4_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::CrossThreadWeakPersistent"* dereferenceable(16), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %6, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #9
  %7 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::tuple"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %15 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #9
  %16 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %16 to i64*
  %18 = load atomic i64, i64* %17 acquire, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %5
  %21 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %22 = load atomic i64, i64* %17 monotonic, align 8
  %23 = inttoptr i64 %22 to %"class.blink::PersistentNode"*
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %21, i64 0, i32 0, i32 0
  %27 = bitcast %"class.blink::CrossThreadPersistentRegion"* %21 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %22 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %30, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %26, align 8
  br label %31

31:                                               ; preds = %25, %20
  store atomic i64 0, i64* %17 release, align 8
  br label %32

32:                                               ; preds = %31, %5
  %33 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %3, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadWeakPersistent"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::tuple"* %11 to i64*
  store i64 %35, i64* %36, align 8
  store %"class.blink::FirstMeaningfulPaintDetector"* null, %"class.blink::FirstMeaningfulPaintDetector"** %33, align 8
  %37 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %3, i64 0, i32 0, i32 1
  %38 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  store atomic i64 %39, i64* %17 monotonic, align 8
  store atomic i64 0, i64* %38 monotonic, align 8
  %40 = load atomic i64, i64* %17 acquire, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %32
  %43 = load atomic i64, i64* %17 monotonic, align 8
  %44 = inttoptr i64 %43 to %"class.blink::PersistentNode"*
  %45 = inttoptr i64 %43 to %"class.blink::PersistentBase.1545"**
  store %"class.blink::PersistentBase.1545"* %12, %"class.blink::PersistentBase.1545"** %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  br label %47

47:                                               ; preds = %32, %42
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #9
  %48 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %49 = load i32, i32* %4, align 4
  store i32 %49, i32* %48, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS2_10PaintEventENS2_13WebSwapResultENS_9TimeTicksEEJNS2_25CrossThreadWeakPersistentIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %3
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #9
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #9
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #9
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %22, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::FirstMeaningfulPaintDetector"**
  %6 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %5, align 8
  %7 = icmp eq %"class.blink::FirstMeaningfulPaintDetector"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FirstMeaningfulPaintDetector"**
  %4 = load %"class.blink::FirstMeaningfulPaintDetector"*, %"class.blink::FirstMeaningfulPaintDetector"** %3, align 8
  %5 = icmp eq %"class.blink::FirstMeaningfulPaintDetector"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !6

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FirstMeaningfulPaintDetector", %"class.blink::FirstMeaningfulPaintDetector"* %4, i64 -1, i32 13
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  store %"class.blink::FirstMeaningfulPaintDetector"* null, %"class.blink::FirstMeaningfulPaintDetector"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %28 = bitcast i8* %26 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = inttoptr i64 %29 to %"class.blink::PersistentNode"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %33, align 8
  br label %38

38:                                               ; preds = %25, %32
  store atomic i64 0, i64* %28 release, align 8
  br label %39

39:                                               ; preds = %18, %13, %2, %38
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.1545"*, %"class.blink::FirstMeaningfulPaintDetector"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.1545", %"class.blink::PersistentBase.1545"* %0, i64 0, i32 0
  store %"class.blink::FirstMeaningfulPaintDetector"* %1, %"class.blink::FirstMeaningfulPaintDetector"** %3, align 8
  %4 = ptrtoint %"class.blink::FirstMeaningfulPaintDetector"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.1545", %"class.blink::PersistentBase.1545"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.1545"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !6

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #9
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.1545"**
  store %"class.blink::PersistentBase.1545"* %0, %"class.blink::PersistentBase.1545"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_28FirstMeaningfulPaintDetectorELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.1545", %"class.blink::PersistentBase.1545"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #9
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

declare void @_ZN5blink5probe15PaintTimingImplEPNS_8DocumentEPKcd(%"class.blink::Document"*, i8*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11PaintTimingEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaintTiming"*
  tail call void @_ZNK5blink11PaintTiming5TraceEPNS_7VisitorE(%"class.blink::PaintTiming"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink11PaintTiming5TraceEPNS_7VisitorE(%"class.blink::PaintTiming"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_28FirstMeaningfulPaintDetectorEEENS_25CrossThreadWeakPersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink29WrapCrossThreadWeakPersistentINS_28FirstMeaningfulPaintDetectorEEENS_25CrossThreadWeakPersistentIT_EEPS3_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_28FirstMeaningfulPaintDetectorEEEE4CopyERKS4_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTF28CrossThreadCopierPassThroughIN5blink25CrossThreadWeakPersistentINS1_28FirstMeaningfulPaintDetectorEEEE4CopyERKS4_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink28FirstMeaningfulPaintDetectorEFvNS3_10PaintEventENS3_13WebSwapResultENS_9TimeTicksEEJNS3_25CrossThreadWeakPersistentIS4_EES5_EEEDcOT0_DpOT1_"}
!13 = distinct !{!13, !14, !"_ZN4base8BindOnceIMN5blink28FirstMeaningfulPaintDetectorEFvNS1_10PaintEventENS1_13WebSwapResultENS_9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8BindOnceIMN5blink28FirstMeaningfulPaintDetectorEFvNS1_10PaintEventENS1_13WebSwapResultENS_9TimeTicksEEJNS1_25CrossThreadWeakPersistentIS2_EES3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvN5blink13WebSwapResultEN4base9TimeTicksEEEEDaNS4_12OnceCallbackIT_EE: argument 0"}
!17 = distinct !{!17, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvN5blink13WebSwapResultEN4base9TimeTicksEEEEDaNS4_12OnceCallbackIT_EE"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_28FirstMeaningfulPaintDetectorEEEE6UnwrapERKS4_: argument 0"}
!20 = distinct !{!20, !"_ZN4base16BindUnwrapTraitsIN5blink25CrossThreadWeakPersistentINS1_28FirstMeaningfulPaintDetectorEEEE6UnwrapERKS4_"}
!21 = distinct !{!21, !22, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_28FirstMeaningfulPaintDetectorEEEEEDcOT_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal6UnwrapIN5blink25CrossThreadWeakPersistentINS2_28FirstMeaningfulPaintDetectorEEEEEDcOT_"}
