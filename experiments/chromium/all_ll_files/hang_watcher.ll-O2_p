; ModuleID = '../../base/threading/hang_watcher.cc'
source_filename = "../../base/threading/hang_watcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HangWatcher" = type { %"class.base::DelegateSimpleThread::Delegate", %"class.base::TimeDelta", %"struct.std::__1::atomic.7", [7 x i8], %"class.base::WaitableEvent", %"class.base::Lock", %"class.std::__1::vector", %"class.base::DelegateSimpleThread", %"class.base::RepeatingCallback.27", %"class.base::RepeatingCallback.27", %"class.base::RepeatingCallback.28", %"class.base::Lock", %"struct.std::__1::atomic.7", %"class.base::TickClock"*, %"class.base::MemoryPressureListener", %"struct.std::__1::atomic.30", %"class.base::TimeTicks" }
%"class.base::DelegateSimpleThread::Delegate" = type { i32 (...)** }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.11, i8, [7 x i8] }>
%class.scoped_refptr.11 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.12", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::internal::HangWatchState"* }
%"class.base::internal::HangWatchState" = type <{ %"class.base::internal::HangWatchDeadline", i32, i32, i32, [4 x i8] }>
%"class.base::internal::HangWatchDeadline" = type { %"struct.std::__1::atomic", %"class.base::RepeatingCallback" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.std::__1::unique_ptr"* }
%"class.base::DelegateSimpleThread" = type { %"class.base::SimpleThread.base", %"class.base::DelegateSimpleThread::Delegate"* }
%"class.base::SimpleThread.base" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8 }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.base::SimpleThread::Options" = type <{ i64, i32, i8, [3 x i8] }>
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.base::RepeatingCallback.27" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.28" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback.29", %"class.base::RepeatingCallback.29", %"class.base::Location" }
%"class.base::RepeatingCallback.29" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%"class.base::NoDestructor" = type { [8 x i8] }
%"class.base::WatchHangsInScope" = type <{ i8, [7 x i8], %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.base::IgnoreHangsInScope" = type { i8 }
%"class.base::HangWatcher::WatchStateSnapShot" = type { %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"class.std::__1::__compressed_pair.45" }
%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"struct.base::FeatureParam" = type <{ %"struct.base::Feature"*, i8*, i32, [4 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::debug::ScopedCrashKeyString" = type { %"struct.base::debug::CrashKeyString"* }
%"class.base::SimpleThread" = type <{ %"class.base::PlatformThread::Delegate", %"class.std::__1::basic_string", %"struct.base::SimpleThread::Options", %"class.base::PlatformThreadHandle", %"class.base::WaitableEvent", i32, i8, i8, [2 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.38", [4 x i8] }>
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::ScopedClosureRunner" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::BinaryPredicateProjector" = type { %class.anon*, %"struct.base::identity"*, %"struct.base::identity"* }
%class.anon = type { i8 }
%"struct.base::identity" = type { i8 }
%"struct.std::__1::array" = type { [3 x i32] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::allocator.20"* }
%"class.std::__1::allocator.20" = type { i8 }

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEEEFvS5_EE3RunEPNS0_13BindStateBaseES5_ = comdat any

$_ZN4base8internal9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__113__vector_baseINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE17__destruct_at_endEPS7_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE17__destruct_at_endEPS7_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"EnableHangWatcher\00", align 1
@_ZN4base11HangWatcher18kEnableHangWatcherE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i32 0, i32 0), i32 1 }, align 8
@_ZN4base17WatchHangsInScope21kDefaultHangWatchTimeE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 10000000 }, align 8
@_ZTVN4base11HangWatcherE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcherD2Ev to i8*), i8* bitcast (void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcherD0Ev to i8*), i8* bitcast (void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcher3RunEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"HangWatcher\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"../../base/threading/hang_watcher.cc\00", align 1
@_ZN4base12_GLOBAL__N_110g_instanceE = internal unnamed_addr global %"class.base::HangWatcher"* null, align 8
@_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key = internal unnamed_addr global %"struct.base::debug::CrashKeyString"* null, align 8
@_ZGVZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [35 x i8] c"seconds-since-last-memory-pressure\00", align 1
@_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE20kNoMemoryPressureMsg = internal constant [28 x i8] c"No critical memory pressure\00", align 16
@.str.4 = private unnamed_addr constant [38 x i8] c"HangWatcher.SleepDrift.BrowserProcess\00", align 1
@_ZZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key = internal unnamed_addr global %"struct.base::debug::CrashKeyString"* null, align 8
@_ZGVZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key = internal global i64 0, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"list-of-hung-threads\00", align 1
@_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"threadpool_log_level\00", align 1
@_ZN4baseL19kThreadPoolLogLevelE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN4base11HangWatcher18kEnableHangWatcherE, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i32 0, i32 0), i32 0 }, align 8
@.str.11 = private unnamed_addr constant [20 x i8] c"io_thread_log_level\00", align 1
@_ZN4baseL17kIOThreadLogLevelE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN4base11HangWatcher18kEnableHangWatcherE, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), i32 1 }, align 8
@.str.14 = private unnamed_addr constant [20 x i8] c"ui_thread_log_level\00", align 1
@_ZN4baseL17kUIThreadLogLevelE = internal constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN4base11HangWatcher18kEnableHangWatcherE, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i32 1 }, align 8
@.str.18 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.21 = private unnamed_addr constant [49 x i8] c"HangWatcher.IsThreadHung.BrowserProcess.IOThread\00", align 1
@.str.22 = private unnamed_addr constant [49 x i8] c"HangWatcher.IsThreadHung.BrowserProcess.UIThread\00", align 1
@_ZN4base12_GLOBAL__N_118g_use_hang_watcherE.0.0 = internal unnamed_addr global i8 0, align 1
@_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 = internal unnamed_addr global i32 0, align 4
@_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 = internal unnamed_addr global i32 0, align 4
@_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 = internal unnamed_addr global i32 0, align 4
@_ZZN4base11HangWatcher4WaitEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE = private unnamed_addr constant [3 x i32*] [i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0], align 8

@_ZN4base17WatchHangsInScopeC1ENS_9TimeDeltaE = hidden unnamed_addr alias void (%"class.base::WatchHangsInScope"*, i64), void (%"class.base::WatchHangsInScope"*, i64)* @_ZN4base17WatchHangsInScopeC2ENS_9TimeDeltaE
@_ZN4base17WatchHangsInScopeD1Ev = hidden unnamed_addr alias void (%"class.base::WatchHangsInScope"*), void (%"class.base::WatchHangsInScope"*)* @_ZN4base17WatchHangsInScopeD2Ev
@_ZN4base18IgnoreHangsInScopeC1Ev = hidden unnamed_addr alias void (%"class.base::IgnoreHangsInScope"*), void (%"class.base::IgnoreHangsInScope"*)* @_ZN4base18IgnoreHangsInScopeC2Ev
@_ZN4base18IgnoreHangsInScopeD1Ev = hidden unnamed_addr alias void (%"class.base::IgnoreHangsInScope"*), void (%"class.base::IgnoreHangsInScope"*)* @_ZN4base18IgnoreHangsInScopeD2Ev
@_ZN4base11HangWatcherC1Ev = hidden unnamed_addr alias void (%"class.base::HangWatcher"*), void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcherC2Ev
@_ZN4base11HangWatcherD1Ev = hidden unnamed_addr alias void (%"class.base::HangWatcher"*), void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcherD2Ev
@_ZN4base11HangWatcher18WatchStateSnapShotC1ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE = hidden unnamed_addr alias void (%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.std::__1::vector"*, i64), void (%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.std::__1::vector"*, i64)* @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE
@_ZN4base11HangWatcher18WatchStateSnapShotC1ERKS1_ = hidden unnamed_addr alias void (%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.base::HangWatcher::WatchStateSnapShot"*), void (%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.base::HangWatcher::WatchStateSnapShot"*)* @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKS1_
@_ZN4base11HangWatcher18WatchStateSnapShotD1Ev = hidden unnamed_addr alias void (%"class.base::HangWatcher::WatchStateSnapShot"*), void (%"class.base::HangWatcher::WatchStateSnapShot"*)* @_ZN4base11HangWatcher18WatchStateSnapShotD2Ev
@_ZN4base8internal17HangWatchDeadlineC1Ev = hidden unnamed_addr alias void (%"class.base::internal::HangWatchDeadline"*), void (%"class.base::internal::HangWatchDeadline"*)* @_ZN4base8internal17HangWatchDeadlineC2Ev
@_ZN4base8internal17HangWatchDeadlineD1Ev = hidden unnamed_addr alias void (%"class.base::internal::HangWatchDeadline"*), void (%"class.base::internal::HangWatchDeadline"*)* @_ZN4base8internal17HangWatchDeadlineD2Ev
@_ZN4base8internal14HangWatchStateC1ENS_11HangWatcher10ThreadTypeE = hidden unnamed_addr alias void (%"class.base::internal::HangWatchState"*, i32), void (%"class.base::internal::HangWatchState"*, i32)* @_ZN4base8internal14HangWatchStateC2ENS_11HangWatcher10ThreadTypeE
@_ZN4base8internal14HangWatchStateD1Ev = hidden unnamed_addr alias void (%"class.base::internal::HangWatchState"*), void (%"class.base::internal::HangWatchState"*)* @_ZN4base8internal14HangWatchStateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17WatchHangsInScopeC2ENS_9TimeDeltaE(%"class.base::WatchHangsInScope"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %2
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %13

13:                                               ; preds = %2, %9, %12
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*)) #17
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  store i8 0, i8* %4, align 8
  br label %80

17:                                               ; preds = %13
  %18 = bitcast i8* %14 to i64*
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = and i64 %19, 72057594037927935
  %21 = and i64 %19, 6917529027641081856
  %22 = icmp eq i64 %21, 4611686018427387904
  br i1 %22, label %23, label %38

23:                                               ; preds = %17
  %24 = getelementptr inbounds i8, i8* %14, i64 8
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"**
  %26 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = icmp eq %"class.base::internal::BindStateBase"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = load atomic i64, i64* %18 monotonic, align 8
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %26, i64 0, i32 1
  %31 = bitcast void ()** %30 to i64 (%"class.base::internal::BindStateBase"*)**
  %32 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::internal::BindStateBase"* nonnull %26) #17
  %34 = and i64 %29, -72057594037927936
  %35 = or i64 %33, %34
  store atomic i64 %35, i64* %18 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %28
  %37 = atomicrmw and i64* %18, i64 -4611686018427387905 monotonic
  store i8 1, i8* %6, align 8
  br label %38

38:                                               ; preds = %17, %36
  store i64 %20, i64* %5, align 8
  %39 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %40 = add i64 %1, -9223372036854775807
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %49, label %42

42:                                               ; preds = %38
  %43 = icmp slt i64 %1, 0
  %44 = select i1 %43, i64 -9223372036854775808, i64 9223372036854775807
  %45 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %39, i64 %1) #17
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 %44, i64 %47, !prof !3
  br label %57

49:                                               ; preds = %38
  %50 = add i64 %39, -9223372036854775807
  %51 = icmp ugt i64 %50, 1
  %52 = icmp eq i64 %39, %1
  %53 = or i1 %52, %51
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0)) #17
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  br label %57

57:                                               ; preds = %42, %49, %54
  %58 = phi i64 [ %48, %42 ], [ %1, %49 ], [ %1, %54 ]
  %59 = getelementptr inbounds i8, i8* %14, i64 8
  %60 = bitcast i8* %59 to %"class.base::internal::BindStateBase"**
  %61 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %60, align 8
  %62 = icmp eq %"class.base::internal::BindStateBase"* %61, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %57
  %64 = load atomic i64, i64* %18 monotonic, align 8
  %65 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %61, i64 0, i32 1
  %66 = bitcast void ()** %65 to i64 (%"class.base::internal::BindStateBase"*)**
  %67 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %66, align 8
  %68 = call i64 %67(%"class.base::internal::BindStateBase"* nonnull %61) #17
  %69 = and i64 %64, -72057594037927936
  %70 = or i64 %68, %69
  store atomic i64 %70, i64* %18 monotonic, align 8
  br label %71

71:                                               ; preds = %57, %63
  %72 = load atomic i64, i64* %18 monotonic, align 8
  %73 = and i64 %72, 6917529027641081856
  %74 = and i64 %58, 72057594037927935
  %75 = or i64 %73, %74
  store atomic i64 %75, i64* %18 monotonic, align 8
  %76 = getelementptr inbounds i8, i8* %14, i64 20
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %77, align 4
  br label %80

80:                                               ; preds = %71, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::ThreadLocalPointer"* @_ZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.base::ThreadLocalPointer"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalPointer"*)
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK4base8internal14HangWatchState19GetFlagsAndDeadlineEv(%"class.base::internal::HangWatchState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = and i64 %3, -72057594037927936
  %5 = and i64 %3, 72057594037927935
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4base8internal17HangWatchDeadline9IsFlagSetENS1_4FlagEm(i64, i64) local_unnamed_addr #3 align 2 {
  %3 = and i64 %1, %0
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState35UnsetIgnoreCurrentWatchHangsInScopeEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw and i64* %15, i64 -4611686018427387905 monotonic
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState11SetDeadlineENS_9TimeTicksE(%"class.base::internal::HangWatchState"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %10 = bitcast void ()** %9 to i64 (%"class.base::internal::BindStateBase"*)**
  %11 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::BindStateBase"* nonnull %4) #17
  %13 = and i64 %8, -72057594037927936
  %14 = or i64 %12, %13
  store atomic i64 %14, i64* %7 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = and i64 %17, 6917529027641081856
  %19 = and i64 %1, 72057594037927935
  %20 = or i64 %18, %19
  store atomic i64 %20, i64* %16 monotonic, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState21IncrementNestingLevelEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base17WatchHangsInScopeD2Ev(%"class.base::WatchHangsInScope"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*)) #17
  %10 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %93, label %13

13:                                               ; preds = %8
  %14 = bitcast i8* %9 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp slt i64 %15, 0
  br i1 %16, label %17, label %32

17:                                               ; preds = %13
  %18 = load %"class.base::HangWatcher"*, %"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE, align 8
  %19 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %18, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = and i8 %20, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %18, i64 0, i32 11
  %25 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %24, i64 0, i32 0, i32 0
  %26 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %25) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28, !prof !5

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %24, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %29) #17
  br label %30

30:                                               ; preds = %28, %23
  %31 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %25) #17
  br label %32

32:                                               ; preds = %30, %17, %13
  %33 = getelementptr inbounds i8, i8* %9, i64 20
  %34 = bitcast i8* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %52

37:                                               ; preds = %32
  %38 = getelementptr inbounds i8, i8* %9, i64 8
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"**
  %40 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %39, align 8
  %41 = icmp eq %"class.base::internal::BindStateBase"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %37
  %43 = load atomic i64, i64* %14 monotonic, align 8
  %44 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %40, i64 0, i32 1
  %45 = bitcast void ()** %44 to i64 (%"class.base::internal::BindStateBase"*)**
  %46 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %45, align 8
  %47 = tail call i64 %46(%"class.base::internal::BindStateBase"* nonnull %40) #17
  %48 = and i64 %43, -72057594037927936
  %49 = or i64 %47, %48
  store atomic i64 %49, i64* %14 monotonic, align 8
  br label %50

50:                                               ; preds = %37, %42
  %51 = atomicrmw and i64* %14, i64 -4611686018427387905 monotonic
  br label %71

52:                                               ; preds = %32
  %53 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 3
  %54 = load i8, i8* %53, align 8, !range !4
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %71, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds i8, i8* %9, i64 8
  %58 = bitcast i8* %57 to %"class.base::internal::BindStateBase"**
  %59 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %58, align 8
  %60 = icmp eq %"class.base::internal::BindStateBase"* %59, null
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = load atomic i64, i64* %14 monotonic, align 8
  %63 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %59, i64 0, i32 1
  %64 = bitcast void ()** %63 to i64 (%"class.base::internal::BindStateBase"*)**
  %65 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %64, align 8
  %66 = tail call i64 %65(%"class.base::internal::BindStateBase"* nonnull %59) #17
  %67 = and i64 %62, -72057594037927936
  %68 = or i64 %66, %67
  store atomic i64 %68, i64* %14 monotonic, align 8
  br label %69

69:                                               ; preds = %56, %61
  %70 = atomicrmw or i64* %14, i64 4611686018427387904 monotonic
  br label %71

71:                                               ; preds = %52, %69, %50
  %72 = getelementptr inbounds %"class.base::WatchHangsInScope", %"class.base::WatchHangsInScope"* %0, i64 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds i8, i8* %9, i64 8
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"**
  %76 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %75, align 8
  %77 = icmp eq %"class.base::internal::BindStateBase"* %76, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %71
  %79 = load atomic i64, i64* %14 monotonic, align 8
  %80 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %76, i64 0, i32 1
  %81 = bitcast void ()** %80 to i64 (%"class.base::internal::BindStateBase"*)**
  %82 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %81, align 8
  %83 = tail call i64 %82(%"class.base::internal::BindStateBase"* nonnull %76) #17
  %84 = and i64 %79, -72057594037927936
  %85 = or i64 %83, %84
  store atomic i64 %85, i64* %14 monotonic, align 8
  br label %86

86:                                               ; preds = %71, %78
  %87 = load atomic i64, i64* %14 monotonic, align 8
  %88 = and i64 %87, 6917529027641081856
  %89 = and i64 %73, 72057594037927935
  %90 = or i64 %88, %89
  store atomic i64 %90, i64* %14 monotonic, align 8
  %91 = load i32, i32* %34, align 4
  %92 = add nsw i32 %91, -1
  store i32 %92, i32* %34, align 4
  br label %93

93:                                               ; preds = %8, %86
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14HangWatchState9IsFlagSetENS0_17HangWatchDeadline4FlagE(%"class.base::internal::HangWatchState"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = and i64 %4, %1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.base::HangWatcher"* @_ZN4base11HangWatcher11GetInstanceEv() local_unnamed_addr #5 align 2 {
  %1 = load %"class.base::HangWatcher"*, %"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE, align 8
  ret %"class.base::HangWatcher"* %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher24BlockIfCaptureInProgressEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !5

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #17
  br label %13

13:                                               ; preds = %6, %11
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #17
  br label %15

15:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState33SetIgnoreCurrentWatchHangsInScopeEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw or i64* %15, i64 4611686018427387904 monotonic
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState21DecrementNestingLevelEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, -1
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18IgnoreHangsInScopeC2Ev(%"class.base::IgnoreHangsInScope"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::IgnoreHangsInScope", %"class.base::IgnoreHangsInScope"* %0, i64 0, i32 0
  store i8 1, i8* %2, align 1
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*)) #17
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  store i8 0, i8* %2, align 1
  br label %47

13:                                               ; preds = %9
  %14 = bitcast i8* %10 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = and i64 %15, 2305843009213693952
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %13
  store i8 0, i8* %2, align 1
  br label %47

19:                                               ; preds = %13
  %20 = getelementptr inbounds i8, i8* %10, i64 8
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"**
  %22 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %21, align 8
  %23 = icmp eq %"class.base::internal::BindStateBase"* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = atomicrmw or i64* %14, i64 4611686018427387904 monotonic
  br label %45

26:                                               ; preds = %19
  %27 = load atomic i64, i64* %14 monotonic, align 8
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %22, i64 0, i32 1
  %29 = bitcast void ()** %28 to i64 (%"class.base::internal::BindStateBase"*)**
  %30 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %29, align 8
  %31 = tail call i64 %30(%"class.base::internal::BindStateBase"* nonnull %22) #17
  %32 = and i64 %27, -72057594037927936
  %33 = or i64 %31, %32
  store atomic i64 %33, i64* %14 monotonic, align 8
  %34 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %21, align 8
  %35 = atomicrmw or i64* %14, i64 4611686018427387904 monotonic
  %36 = icmp eq %"class.base::internal::BindStateBase"* %34, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %26
  %38 = load atomic i64, i64* %14 monotonic, align 8
  %39 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %34, i64 0, i32 1
  %40 = bitcast void ()** %39 to i64 (%"class.base::internal::BindStateBase"*)**
  %41 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %40, align 8
  %42 = tail call i64 %41(%"class.base::internal::BindStateBase"* nonnull %34) #17
  %43 = and i64 %38, -72057594037927936
  %44 = or i64 %42, %43
  store atomic i64 %44, i64* %14 monotonic, align 8
  br label %45

45:                                               ; preds = %24, %26, %37
  %46 = atomicrmw or i64* %14, i64 2305843009213693952 monotonic
  br label %47

47:                                               ; preds = %18, %45, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState30SetHasActiveIgnoreHangsInScopeEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw or i64* %15, i64 2305843009213693952 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18IgnoreHangsInScopeD2Ev(%"class.base::IgnoreHangsInScope"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*)) #17
  %10 = icmp eq i8* %9, null
  br i1 %10, label %52, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.base::IgnoreHangsInScope", %"class.base::IgnoreHangsInScope"* %0, i64 0, i32 0
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %52, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %9, i64 20
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %36

20:                                               ; preds = %15
  %21 = getelementptr inbounds i8, i8* %9, i64 8
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"**
  %23 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %22, align 8
  %24 = icmp eq %"class.base::internal::BindStateBase"* %23, null
  %25 = bitcast i8* %9 to i64*
  br i1 %24, label %34, label %26

26:                                               ; preds = %20
  %27 = load atomic i64, i64* %25 monotonic, align 8
  %28 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %23, i64 0, i32 1
  %29 = bitcast void ()** %28 to i64 (%"class.base::internal::BindStateBase"*)**
  %30 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %29, align 8
  %31 = tail call i64 %30(%"class.base::internal::BindStateBase"* nonnull %23) #17
  %32 = and i64 %27, -72057594037927936
  %33 = or i64 %31, %32
  store atomic i64 %33, i64* %25 monotonic, align 8
  br label %34

34:                                               ; preds = %20, %26
  %35 = atomicrmw and i64* %25, i64 -4611686018427387905 monotonic
  br label %36

36:                                               ; preds = %15, %34
  %37 = getelementptr inbounds i8, i8* %9, i64 8
  %38 = bitcast i8* %37 to %"class.base::internal::BindStateBase"**
  %39 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %38, align 8
  %40 = icmp eq %"class.base::internal::BindStateBase"* %39, null
  %41 = bitcast i8* %9 to i64*
  br i1 %40, label %50, label %42

42:                                               ; preds = %36
  %43 = load atomic i64, i64* %41 monotonic, align 8
  %44 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %45 = bitcast void ()** %44 to i64 (%"class.base::internal::BindStateBase"*)**
  %46 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %45, align 8
  %47 = tail call i64 %46(%"class.base::internal::BindStateBase"* nonnull %39) #17
  %48 = and i64 %43, -72057594037927936
  %49 = or i64 %47, %48
  store atomic i64 %49, i64* %41 monotonic, align 8
  br label %50

50:                                               ; preds = %36, %42
  %51 = atomicrmw and i64* %41, i64 -2305843009213693953 monotonic
  br label %52

52:                                               ; preds = %8, %11, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchState32UnsetHasActiveIgnoreHangsInScopeEv(%"class.base::internal::HangWatchState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw and i64* %15, i64 -2305843009213693953 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher22InitializeOnMainThreadEv() local_unnamed_addr #0 align 2 {
  %1 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN4base11HangWatcher18kEnableHangWatcherE) #17
  %2 = zext i1 %1 to i8
  store atomic i8 %2, i8* @_ZN4base12_GLOBAL__N_118g_use_hang_watcherE.0.0 monotonic, align 1
  %3 = load atomic i8, i8* @_ZN4base12_GLOBAL__N_118g_use_hang_watcherE.0.0 monotonic, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %0
  %7 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN4baseL19kThreadPoolLogLevelE to %"struct.base::FeatureParam"*)) #17
  store atomic i32 %7, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 monotonic, align 4
  %8 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN4baseL17kIOThreadLogLevelE to %"struct.base::FeatureParam"*)) #17
  store atomic i32 %8, i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 monotonic, align 4
  %9 = tail call i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"* bitcast ({ %"struct.base::Feature"*, i8*, i32 }* @_ZN4baseL17kUIThreadLogLevelE to %"struct.base::FeatureParam"*)) #17
  store atomic i32 %9, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 monotonic, align 4
  br label %10

10:                                               ; preds = %0, %6
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #4

declare i32 @_ZNK4base12FeatureParamIiLb0EE3GetEv(%"struct.base::FeatureParam"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher32UnitializeOnMainThreadForTestingEv() local_unnamed_addr #2 align 2 {
  store atomic i8 0, i8* @_ZN4base12_GLOBAL__N_118g_use_hang_watcherE.0.0 monotonic, align 1
  store atomic i32 0, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 monotonic, align 4
  store atomic i32 0, i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 monotonic, align 4
  store atomic i32 0, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 monotonic, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher9IsEnabledEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i8, i8* @_ZN4base12_GLOBAL__N_118g_use_hang_watcherE.0.0 monotonic, align 1
  %2 = and i8 %1, 1
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher31IsThreadPoolHangWatchingEnabledEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 monotonic, align 4
  %2 = icmp ne i32 %1, 0
  ret i1 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher29IsIOThreadHangWatchingEnabledEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 monotonic, align 4
  %2 = icmp ne i32 %1, 0
  ret i1 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher29IsUIThreadHangWatchingEnabledEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 monotonic, align 4
  %2 = icmp ne i32 %1, 0
  ret i1 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher23IsCrashReportingEnabledEv() local_unnamed_addr #2 align 2 {
  %1 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 monotonic, align 4
  %2 = icmp eq i32 %1, 2
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 monotonic, align 4
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 monotonic, align 4
  %8 = icmp eq i32 %7, 2
  br label %9

9:                                                ; preds = %6, %3, %0
  %10 = phi i1 [ true, %0 ], [ true, %3 ], [ %8, %6 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcherC2Ev(%"class.base::HangWatcher"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::RepeatingCallback.29", align 8
  %5 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base11HangWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 1, i32 0
  store i64 10000000, i64* %7, align 8
  %8 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %9, i32 1, i32 1) #17
  %10 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #17
  %11 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #17
  %13 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 7
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 11, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i1 false) #17
  %17 = getelementptr inbounds i8, i8* %14, i64 11
  store i8 0, i8* %17, align 1
  call void @_ZN4base20DelegateSimpleThreadC1EPNS0_8DelegateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::DelegateSimpleThread"* %13, %"class.base::DelegateSimpleThread::Delegate"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #17
  %18 = load i8, i8* %16, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  %24 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 11, i32 0
  %26 = bitcast %"class.base::internal::BindStateBase"** %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %25) #17
  %27 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 13
  %29 = call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #17
  %30 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %29, i64 0, i32 0
  store %"class.base::TickClock"* %30, %"class.base::TickClock"** %28, align 8
  %31 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 14
  %32 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #17
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i32 352) #17
  %33 = bitcast %"class.base::RepeatingCallback.29"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  %34 = ptrtoint %"class.base::HangWatcher"* %0 to i64
  %35 = call i8* @_Znwm(i64 56) #18, !noalias !6
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEEEFvS5_EE3RunEPNS0_13BindStateBaseES5_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !6
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::HangWatcher"*, i32)* @_ZN4base11HangWatcher16OnMemoryPressureENS_22MemoryPressureListener19MemoryPressureLevelE to i64), i64 0>, <2 x i64>* %38, align 8, !noalias !6
  %39 = getelementptr inbounds i8, i8* %35, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %34, i64* %40, align 8, !noalias !6
  %41 = bitcast %"class.base::RepeatingCallback.29"* %4 to i8**
  store i8* %35, i8** %41, align 8, !alias.scope !6
  call void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"* %31, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::RepeatingCallback.29"* nonnull dereferenceable(8) %4) #17
  %42 = getelementptr inbounds %"class.base::RepeatingCallback.29", %"class.base::RepeatingCallback.29"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %42) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #17
  %43 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4, i32 1
  store i8 0, i8* %44, align 8
  %45 = bitcast i64* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false)
  store %"class.base::HangWatcher"* %0, %"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE, align 8
  ret void
}

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #4

declare void @_ZN4base20DelegateSimpleThreadC1EPNS0_8DelegateERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::DelegateSimpleThread"*, %"class.base::DelegateSimpleThread::Delegate"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher16OnMemoryPressureENS_22MemoryPressureListener19MemoryPressureLevelE(%"class.base::HangWatcher"* nocapture, i32) #0 align 2 {
  %3 = icmp eq i32 %1, 2
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %6 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %5, i64* %6 monotonic, align 8
  br label %7

7:                                                ; preds = %4, %2
  ret void
}

declare void @_ZN4base22MemoryPressureListenerC1ERKNS_8LocationERKNS_17RepeatingCallbackIFvNS0_19MemoryPressureLevelEEEE(%"class.base::MemoryPressureListener"*, %"class.base::Location"* dereferenceable(32), %"class.base::RepeatingCallback.29"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEv(%"class.base::debug::ScopedCrashKeyString"* noalias sret, %"class.base::HangWatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key) #17
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i32 32) #17
  store %"struct.base::debug::CrashKeyString"* %10, %"struct.base::debug::CrashKeyString"** @_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key) #17
  br label %11

11:                                               ; preds = %6, %9, %2
  %12 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key, align 8
  tail call void @_ZN4base5debug20ScopedCrashKeyStringC1EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"* %0, %"struct.base::debug::CrashKeyString"* %16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE20kNoMemoryPressureMsg, i64 0, i64 0), i64 27) #17
  br label %42

17:                                               ; preds = %11
  %18 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %19 = sub nsw i64 %18, %13
  %20 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEvE9crash_key, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #17
  %22 = add i64 %19, -9223372036854775807
  %23 = icmp ult i64 %22, 2
  %24 = sdiv i64 %19, 1000000
  %25 = select i1 %23, i64 %19, i64 %24
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %3, i64 %25) #17
  %26 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* %21
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = zext i8 %28 to i64
  %36 = select i1 %29, i64 %34, i64 %35
  call void @_ZN4base5debug20ScopedCrashKeyStringC1EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"* %0, %"struct.base::debug::CrashKeyString"* %20, i8* %32, i64 %36) #17
  %37 = load i8, i8* %27, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %17
  %40 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %40) #18
  br label %41

41:                                               ; preds = %17, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #17
  br label %42

42:                                               ; preds = %41, %15
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

declare %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZN4base5debug20ScopedCrashKeyStringC1EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"*, %"struct.base::debug::CrashKeyString"*, i8*, i64) unnamed_addr #4

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcherD2Ev(%"class.base::HangWatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4base11HangWatcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store %"class.base::HangWatcher"* null, %"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE, align 8
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %3 monotonic, align 1
  %4 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %4) #17
  %5 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 7
  %6 = bitcast %"class.base::DelegateSimpleThread"* %5 to %"class.base::SimpleThread"*
  tail call void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"* %6) #17
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 14
  tail call void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"* %7) #17
  %8 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %8) #17
  %9 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %9) #17
  %10 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 9, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %10) #17
  %11 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 8, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %11) #17
  tail call void @_ZN4base20DelegateSimpleThreadD1Ev(%"class.base::DelegateSimpleThread"* %5) #17
  %12 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__vector_base"* %17) #17
  %18 = bitcast %"class.std::__1::vector"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %1, %16
  %21 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %21) #17
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher4StopEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %2 monotonic, align 1
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %3) #17
  %4 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 7
  %5 = bitcast %"class.base::DelegateSimpleThread"* %4 to %"class.base::SimpleThread"*
  tail call void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"* %5) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base22MemoryPressureListenerD1Ev(%"class.base::MemoryPressureListener"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base20DelegateSimpleThreadD1Ev(%"class.base::DelegateSimpleThread"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcherD0Ev(%"class.base::HangWatcher"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4base11HangWatcherD2Ev(%"class.base::HangWatcher"* %0) #17
  %2 = bitcast %"class.base::HangWatcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher5StartEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 7
  %3 = bitcast %"class.base::DelegateSimpleThread"* %2 to %"class.base::SimpleThread"*
  tail call void @_ZN4base12SimpleThread5StartEv(%"class.base::SimpleThread"* %3) #17
  ret void
}

declare void @_ZN4base12SimpleThread5StartEv(%"class.base::SimpleThread"*) local_unnamed_addr #4

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #4

declare void @_ZN4base12SimpleThread4JoinEv(%"class.base::SimpleThread"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base11HangWatcher16IsWatchListEmptyEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !5

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %11 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr"* %10, %12
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #17
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher4WaitEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 13
  %6 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::TimeTicks"* %2 to i8*
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %11 = bitcast %"class.base::TimeDelta"* %3 to i8*
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %14 = bitcast %"class.base::TimeDelta"* %4 to i8*
  %15 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %17, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 16, i32 0, i32 0
  br label %23

23:                                               ; preds = %137, %1
  %24 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %25 = bitcast %"class.base::TickClock"* %24 to i64 (%"class.base::TickClock"*)***
  %26 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %26, i64 2
  %28 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %27, align 8
  %29 = call i64 %28(%"class.base::TickClock"* %24) #17
  %30 = notail call zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"* %6, %"class.base::TimeDelta"* dereferenceable(8) %7) #17
  %31 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %32 = icmp eq %"class.base::internal::BindStateBase"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i64 %29, i64* %10, align 8
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %31, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)*, void (%"class.base::internal::BindStateBase"*, %"class.base::TimeTicks"*)** %35, align 8
  call void %36(%"class.base::internal::BindStateBase"* nonnull %31, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  br label %37

37:                                               ; preds = %23, %33
  %38 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %39 = bitcast %"class.base::TickClock"* %38 to i64 (%"class.base::TickClock"*)***
  %40 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %40, i64 2
  %42 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %41, align 8
  %43 = call i64 %42(%"class.base::TickClock"* %38) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #17
  %44 = sub nsw i64 %43, %29
  store i64 %44, i64* %12, align 8
  %45 = load i64, i64* %13, align 8
  %46 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %45, i64 100000) #17
  %47 = extractvalue { i64, i1 } %46, 1
  %48 = extractvalue { i64, i1 } %46, 0
  %49 = select i1 %47, i64 9223372036854775807, i64 %48, !prof !3
  %50 = icmp sgt i64 %44, %49
  %51 = load atomic i64, i64* @_ZZN4base11HangWatcher4WaitEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %52 = inttoptr i64 %51 to %"class.base::HistogramBase"*
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %37
  %55 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #17
  %56 = ptrtoint %"class.base::HistogramBase"* %55 to i64
  store atomic i64 %56, i64* @_ZZN4base11HangWatcher4WaitEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %57

57:                                               ; preds = %37, %54
  %58 = phi %"class.base::HistogramBase"* [ %52, %37 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #17
  %59 = load i64, i64* %15, align 8
  %60 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %59)
  store i64 %60, i64* %16, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %58, %"class.base::TimeDelta"* nonnull dereferenceable(8) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #17
  br i1 %50, label %61, label %138

61:                                               ; preds = %57
  %62 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %18) #17
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %65, label %64, !prof !5

64:                                               ; preds = %61
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %19) #17
  br label %65

65:                                               ; preds = %61, %64
  %66 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %20, align 8
  %67 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %68 = icmp eq %"class.std::__1::unique_ptr"* %66, %67
  br i1 %68, label %99, label %69

69:                                               ; preds = %65
  %70 = ptrtoint %"class.std::__1::unique_ptr"* %66 to i64
  %71 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 -1
  %72 = ptrtoint %"class.std::__1::unique_ptr"* %71 to i64
  %73 = sub i64 %72, %70
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 3
  %77 = icmp ult i64 %73, 24
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  %79 = sub nsw i64 %75, %76
  br label %102

80:                                               ; preds = %102, %69
  %81 = phi i64 [ undef, %69 ], [ %133, %102 ]
  %82 = phi %"class.std::__1::unique_ptr"* [ %66, %69 ], [ %134, %102 ]
  %83 = phi i64 [ 0, %69 ], [ %133, %102 ]
  %84 = icmp eq i64 %76, 0
  br i1 %84, label %99, label %85

85:                                               ; preds = %80, %85
  %86 = phi %"class.std::__1::unique_ptr"* [ %96, %85 ], [ %82, %80 ]
  %87 = phi i64 [ %95, %85 ], [ %83, %80 ]
  %88 = phi i64 [ %97, %85 ], [ %76, %80 ]
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %89, align 8
  %91 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i64, i64* %91 monotonic, align 8
  %93 = and i64 %92, 72057594037927935
  %94 = icmp ugt i64 %93, %87
  %95 = select i1 %94, i64 %93, i64 %87
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 1
  %97 = add i64 %88, -1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %85, !llvm.loop !11

99:                                               ; preds = %80, %85, %65
  %100 = phi i64 [ 0, %65 ], [ %81, %80 ], [ %95, %85 ]
  store i64 %100, i64* %22, align 8
  %101 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %18) #17
  br i1 %30, label %138, label %137

102:                                              ; preds = %102, %78
  %103 = phi %"class.std::__1::unique_ptr"* [ %66, %78 ], [ %134, %102 ]
  %104 = phi i64 [ 0, %78 ], [ %133, %102 ]
  %105 = phi i64 [ %79, %78 ], [ %135, %102 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %106, align 8
  %108 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i64, i64* %108 monotonic, align 8
  %110 = and i64 %109, 72057594037927935
  %111 = icmp ugt i64 %110, %104
  %112 = select i1 %111, i64 %110, i64 %104
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 1, i32 0, i32 0, i32 0
  %114 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %113, align 8
  %115 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i64, i64* %115 monotonic, align 8
  %117 = and i64 %116, 72057594037927935
  %118 = icmp ugt i64 %117, %112
  %119 = select i1 %118, i64 %117, i64 %112
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 2, i32 0, i32 0, i32 0
  %121 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %120, align 8
  %122 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i64, i64* %122 monotonic, align 8
  %124 = and i64 %123, 72057594037927935
  %125 = icmp ugt i64 %124, %119
  %126 = select i1 %125, i64 %124, i64 %119
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 3, i32 0, i32 0, i32 0
  %128 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %127, align 8
  %129 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %128, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i64, i64* %129 monotonic, align 8
  %131 = and i64 %130, 72057594037927935
  %132 = icmp ugt i64 %131, %126
  %133 = select i1 %132, i64 %131, i64 %126
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %103, i64 4
  %135 = add i64 %105, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %80, label %102

137:                                              ; preds = %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  br label %23

138:                                              ; preds = %57, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #17
  ret void
}

declare zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #4

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #17
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #17
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %26, i8* %27) #17
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #17
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #17
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #17
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal14HangWatchState11GetDeadlineEv(%"class.base::internal::HangWatchState"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = and i64 %3, 72057594037927935
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher3RunEv(%"class.base::HangWatcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %6, %33
  tail call void @_ZN4base11HangWatcher4WaitEv(%"class.base::HangWatcher"* %0)
  %14 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #17
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !5

16:                                               ; preds = %13
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %9) #17
  br label %17

17:                                               ; preds = %13, %16
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr"* %18, %19
  %21 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #17
  br i1 %20, label %33, label %22

22:                                               ; preds = %17
  %23 = load atomic i8, i8* %2 monotonic, align 1
  %24 = and i8 %23, 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %22
  tail call void @_ZN4base11HangWatcher7MonitorEv(%"class.base::HangWatcher"* %0)
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %28 = icmp eq %"class.base::internal::BindStateBase"* %27, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %27, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* nonnull %27) #17
  br label %33

33:                                               ; preds = %26, %22, %29, %17
  %34 = load atomic i8, i8* %2 monotonic, align 1
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %13

37:                                               ; preds = %33, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher7MonitorEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::HangWatcher::WatchStateSnapShot", align 8
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !5

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #17
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %12, %14
  br i1 %15, label %36, label %16

16:                                               ; preds = %9
  %17 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #17
  %18 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %2, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 16, i32 0, i32 0
  %21 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = load i64, i64* %20, align 8
  call void @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE(%"class.base::HangWatcher::WatchStateSnapShot"* nonnull %2, %"class.std::__1::vector"* dereferenceable(24) %10, i64 %22)
  %23 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %18, align 8
  %24 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %19, align 8
  %25 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23, %24
  br i1 %25, label %28, label %26

26:                                               ; preds = %16
  call void @_ZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotE(%"class.base::HangWatcher"* %0, %"class.base::HangWatcher::WatchStateSnapShot"* nonnull dereferenceable(24) %2)
  %27 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %18, align 8
  br label %28

28:                                               ; preds = %16, %26
  %29 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %27, %26 ], [ %23, %16 ]
  %30 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %29 to i64
  %33 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %19 to i64*
  store i64 %32, i64* %33, align 8
  %34 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %29 to i8*
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #17
  br label %36

36:                                               ; preds = %9, %35
  %37 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #17
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher10RecordHangEv() local_unnamed_addr #9 align 2 {
  %1 = alloca i32, align 4
  %2 = notail call zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() #17
  %3 = bitcast i32* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #17
  store i32 509, i32* %1, align 4
  call void @_ZN4base5debug5AliasEPKv(i8* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #17
  ret void
}

declare zeroext i1 @_ZN4base5debug19DumpWithoutCrashingEv() local_unnamed_addr #4

declare void @_ZN4base5debug5AliasEPKv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher22RegisterThreadInternalENS0_10ThreadTypeE(%"class.base::ScopedClosureRunner"* noalias sret, %"class.base::HangWatcher"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 5
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0, i32 0
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %7) #17
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10, !prof !5

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %6, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %11) #17
  br label %12

12:                                               ; preds = %3, %10
  %13 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #17
  %14 = tail call %"class.base::internal::HangWatchState"* @_ZN4base8internal14HangWatchState36CreateHangWatchStateForCurrentThreadENS_11HangWatcher10ThreadTypeE(i32 %2)
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::HangWatchState"* %14, %"class.base::internal::HangWatchState"** %15, align 8
  %16 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 6, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %18, align 8
  %20 = icmp ult %"class.std::__1::unique_ptr"* %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %12
  %22 = ptrtoint %"class.base::internal::HangWatchState"* %14 to i64
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %15, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %17 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 1
  %25 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %26 = bitcast %"class.std::__1::unique_ptr"** %16 to i64*
  store i64 %25, i64* %26, align 8
  br label %29

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"* %28, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4) #17
  br label %29

29:                                               ; preds = %21, %27
  %30 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %15, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %15, align 8
  %31 = icmp eq %"class.base::internal::HangWatchState"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %29
  %33 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %39, !prof !2

35:                                               ; preds = %32
  %36 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %39

39:                                               ; preds = %32, %35, %38
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %40 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %30, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %40) #17
  %41 = bitcast %"class.base::internal::HangWatchState"* %30 to i8*
  call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %29, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #17
  %43 = load i64, i64* bitcast (%"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE to i64*), align 8
  %44 = call i8* @_Znwm(i64 56) #18, !noalias !13
  %45 = bitcast i8* %44 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %45, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #17, !noalias !13
  %46 = getelementptr inbounds i8, i8* %44, i64 32
  %47 = bitcast i8* %46 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.base::HangWatcher"*)* @_ZN4base11HangWatcher16UnregisterThreadEv to i64), i64 0>, <2 x i64>* %47, align 8, !noalias !13
  %48 = getelementptr inbounds i8, i8* %44, i64 48
  %49 = bitcast i8* %48 to i64*
  store i64 %43, i64* %49, align 8, !noalias !13
  %50 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %44, i8** %50, align 8, !alias.scope !13
  call void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"* %0, %"class.base::OnceCallback"* nonnull %5) #17
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #17
  %52 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %7) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::internal::HangWatchState"* @_ZN4base8internal14HangWatchState36CreateHangWatchStateForCurrentThreadENS_11HangWatcher10ThreadTypeE(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #18
  %3 = bitcast i8* %2 to %"class.base::internal::HangWatchState"*
  %4 = bitcast i8* %2 to i64*
  store i64 72057594037927935, i64* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"**
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 16
  %8 = bitcast i8* %7 to i32*
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 20
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %2, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %0, i32* %13, align 8
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !2

16:                                               ; preds = %1
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %20

20:                                               ; preds = %1, %16, %19
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* nonnull %2) #17
  ret %"class.base::internal::HangWatchState"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher16UnregisterThreadEv(%"class.base::HangWatcher"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #17
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !5

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %15

15:                                               ; preds = %8, %11, %14
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*)) #17
  %17 = bitcast i8* %16 to %"class.base::internal::HangWatchState"*
  %18 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %19, align 8
  %21 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr"* %20, %22
  br i1 %23, label %32, label %24

24:                                               ; preds = %15, %29
  %25 = phi %"class.std::__1::unique_ptr"* [ %30, %29 ], [ %20, %15 ]
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %26, align 8
  %28 = icmp eq %"class.base::internal::HangWatchState"* %27, %17
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 1
  %31 = icmp eq %"class.std::__1::unique_ptr"* %30, %22
  br i1 %31, label %32, label %24

32:                                               ; preds = %24, %29, %15
  %33 = phi %"class.std::__1::unique_ptr"* [ %20, %15 ], [ %25, %24 ], [ %22, %29 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr"* %34, %22
  br i1 %35, label %60, label %36

36:                                               ; preds = %32, %56
  %37 = phi %"class.std::__1::unique_ptr"* [ %58, %56 ], [ %33, %32 ]
  %38 = phi %"class.std::__1::unique_ptr"* [ %57, %56 ], [ %34, %32 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq %"class.base::internal::HangWatchState"* %43, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %36
  %47 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %53, !prof !2

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %53

53:                                               ; preds = %52, %49, %46
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %54 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %43, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %54) #17
  %55 = bitcast %"class.base::internal::HangWatchState"* %43 to i8*
  tail call void @_ZdlPv(i8* %55) #18
  br label %56

56:                                               ; preds = %53, %36
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 1
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %59 = icmp eq %"class.std::__1::unique_ptr"* %57, %22
  br i1 %59, label %60, label %36

60:                                               ; preds = %56, %32
  %61 = phi %"class.std::__1::unique_ptr"* [ %33, %32 ], [ %58, %56 ]
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE17__destruct_at_endEPS7_(%"class.std::__1::vector"* %18, %"class.std::__1::unique_ptr"* %61) #17
  %62 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #17
  ret void
}

declare void @_ZN4base19ScopedClosureRunnerC1ENS_12OnceCallbackIFvvEEE(%"class.base::ScopedClosureRunner"*, %"class.base::OnceCallback"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher14RegisterThreadENS0_10ThreadTypeE(%"class.base::ScopedClosureRunner"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = load %"class.base::HangWatcher"*, %"class.base::HangWatcher"** @_ZN4base12_GLOBAL__N_110g_instanceE, align 8
  %4 = icmp eq %"class.base::HangWatcher"* %3, null
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN4base19ScopedClosureRunnerC1Ev(%"class.base::ScopedClosureRunner"* %0) #17
  br label %7

6:                                                ; preds = %2
  tail call void @_ZN4base11HangWatcher22RegisterThreadInternalENS0_10ThreadTypeE(%"class.base::ScopedClosureRunner"* sret %0, %"class.base::HangWatcher"* nonnull %3, i32 %1)
  br label %7

7:                                                ; preds = %6, %5
  ret void
}

declare void @_ZN4base19ScopedClosureRunnerC1Ev(%"class.base::ScopedClosureRunner"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4base11HangWatcher18WatchStateSnapShot18GetHighestDeadlineEv(%"class.base::HangWatcher::WatchStateSnapShot"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %2, align 8
  %4 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3, i64 -1, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE(%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::BinaryPredicateProjector", align 8
  %5 = alloca %class.anon, align 1
  %6 = alloca %"struct.base::identity", align 1
  %7 = alloca %"struct.std::__1::array", align 4
  %8 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %10 = bitcast %"struct.std::__1::array"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #17
  %11 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 0
  %12 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 1
  %13 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 2
  store i32 -1, i32* %11, align 4
  store i32 -1, i32* %12, align 4
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr"* %15, %17
  br i1 %18, label %172, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %20 to i64*
  %23 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i64*
  %24 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %21 to i64*
  %25 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 0
  br label %30

26:                                               ; preds = %154
  %27 = load i32, i32* %11, align 4
  %28 = and i8 %41, 1
  %29 = icmp eq i32 %27, -1
  br i1 %29, label %172, label %159

30:                                               ; preds = %19, %154
  %31 = phi i8 [ 1, %19 ], [ %156, %154 ]
  %32 = phi i8 [ 0, %19 ], [ %41, %154 ]
  %33 = phi i8 [ 0, %19 ], [ %155, %154 ]
  %34 = phi %"class.std::__1::unique_ptr"* [ %15, %19 ], [ %157, %154 ]
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %35, align 8
  %37 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = and i64 %38, 72057594037927935
  %40 = icmp sgt i64 %39, %2
  %41 = select i1 %40, i8 %32, i8 1
  %42 = and i64 %38, 4611686018427387904
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %154

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %36, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %7, i64 0, i32 0, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %52

51:                                               ; preds = %44
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %44
  %53 = phi i32 [ 0, %51 ], [ %49, %44 ]
  %54 = icmp sgt i64 %39, %9
  br i1 %54, label %154, label %55

55:                                               ; preds = %52
  %56 = add nuw nsw i32 %53, 1
  store i32 %56, i32* %48, align 4
  %57 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %35, align 8
  %58 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %57, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [3 x i32*], [3 x i32*]* @switch.table._ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE, i64 0, i64 %60
  %62 = load i32*, i32** %61, align 8
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = icmp sgt i32 %63, 1
  %65 = select i1 %64, i8 1, i8 %33
  %66 = or i64 %38, -9223372036854775808
  %67 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %57, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %67, align 8
  %69 = icmp eq %"class.base::internal::BindStateBase"* %68, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %55
  %71 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i64, i64* %71 monotonic, align 8
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %68, i64 0, i32 1
  %74 = bitcast void ()** %73 to i64 (%"class.base::internal::BindStateBase"*)**
  %75 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %74, align 8
  %76 = tail call i64 %75(%"class.base::internal::BindStateBase"* nonnull %68) #17
  %77 = and i64 %72, -72057594037927936
  %78 = or i64 %76, %77
  store atomic i64 %78, i64* %71 monotonic, align 8
  br label %79

79:                                               ; preds = %55, %70
  %80 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = cmpxchg weak i64* %80, i64 %38, i64 %66 monotonic monotonic
  %82 = extractvalue { i64, i1 } %81, 1
  %83 = xor i1 %82, true
  %84 = and i8 %31, 1
  %85 = icmp eq i8 %84, 0
  %86 = or i1 %85, %83
  br i1 %86, label %154, label %87

87:                                               ; preds = %79
  %88 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %35, align 8
  %89 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %88, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %20, align 8
  %92 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %21, align 8
  %93 = icmp ult %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, %92
  %94 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %92 to i64
  br i1 %93, label %95, label %100

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, i64 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, i64 0, i32 1
  store i32 %90, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, i64 1
  %99 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %98 to i64
  store i64 %99, i64* %22, align 8
  br label %154

100:                                              ; preds = %87
  %101 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91 to i64
  %102 = load i64, i64* %23, align 8
  %103 = sub i64 %101, %102
  %104 = ashr exact i64 %103, 4
  %105 = add nsw i64 %104, 1
  %106 = icmp ugt i64 %105, 1152921504606846975
  br i1 %106, label %107, label %109

107:                                              ; preds = %100
  %108 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %108) #19
  unreachable

109:                                              ; preds = %100
  %110 = sub i64 %94, %102
  %111 = ashr exact i64 %110, 4
  %112 = icmp ult i64 %111, 576460752303423487
  br i1 %112, label %113, label %121

113:                                              ; preds = %109
  %114 = ashr exact i64 %110, 3
  %115 = icmp ult i64 %114, %105
  %116 = select i1 %115, i64 %105, i64 %114
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %113
  %119 = icmp ugt i64 %116, 1152921504606846975
  br i1 %119, label %120, label %121

120:                                              ; preds = %118
  tail call void @abort() #19
  unreachable

121:                                              ; preds = %118, %109
  %122 = phi i64 [ %116, %118 ], [ 1152921504606846975, %109 ]
  %123 = shl i64 %122, 4
  %124 = tail call i8* @_Znwm(i64 %123) #18
  %125 = bitcast i8* %124 to %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*
  br label %126

126:                                              ; preds = %121, %113
  %127 = phi i64 [ %122, %121 ], [ 0, %113 ]
  %128 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %125, %121 ], [ null, %113 ]
  %129 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %128, i64 %104
  %130 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %128, i64 %127
  %131 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %130 to i64
  %132 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %129, i64 0, i32 0, i32 0, i32 0
  store i64 %39, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %128, i64 %104, i32 1
  store i32 %90, i32* %133, align 8
  %134 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %129, i64 1
  %135 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %134 to i64
  %136 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %25, align 8
  %137 = load i64, i64* %22, align 8
  %138 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %136 to i64
  %139 = sub i64 %137, %138
  %140 = ashr exact i64 %139, 4
  %141 = sub nsw i64 0, %140
  %142 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %129, i64 %141
  %143 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %142 to i64
  %144 = icmp sgt i64 %139, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %126
  %146 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %142 to i8*
  %147 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %136 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 %139, i1 false) #17
  %148 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %25, align 8
  br label %149

149:                                              ; preds = %145, %126
  %150 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %136, %126 ], [ %148, %145 ]
  store i64 %143, i64* %23, align 8
  store i64 %135, i64* %22, align 8
  store i64 %131, i64* %24, align 8
  %151 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %150, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %150 to i8*
  tail call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %52, %30, %152, %149, %95, %79
  %155 = phi i8 [ %33, %30 ], [ %33, %52 ], [ %65, %79 ], [ %65, %95 ], [ %65, %149 ], [ %65, %152 ]
  %156 = phi i8 [ %31, %30 ], [ %31, %52 ], [ 0, %79 ], [ %31, %95 ], [ %31, %149 ], [ %31, %152 ]
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 1
  %158 = icmp eq %"class.std::__1::unique_ptr"* %157, %17
  br i1 %158, label %26, label %30

159:                                              ; preds = %26
  %160 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_io_thread_log_levelE.0.0 monotonic, align 4
  %161 = icmp sgt i32 %160, 0
  br i1 %161, label %162, label %172

162:                                              ; preds = %159
  %163 = icmp sgt i32 %27, 0
  %164 = load atomic i64, i64* @_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %165 = inttoptr i64 %164 to %"class.base::HistogramBase"*
  %166 = icmp eq i64 %164, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %162
  %168 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.21, i64 0, i64 0), i32 1) #17
  %169 = ptrtoint %"class.base::HistogramBase"* %168 to i64
  store atomic i64 %169, i64* @_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %170

170:                                              ; preds = %167, %162
  %171 = phi %"class.base::HistogramBase"* [ %165, %162 ], [ %168, %167 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %171, i1 zeroext %163) #17
  br label %172

172:                                              ; preds = %3, %170, %26, %159
  %173 = phi i8 [ %156, %170 ], [ %156, %26 ], [ %156, %159 ], [ 1, %3 ]
  %174 = phi i8 [ %28, %170 ], [ %28, %26 ], [ %28, %159 ], [ 0, %3 ]
  %175 = phi i8 [ %155, %170 ], [ %155, %26 ], [ %155, %159 ], [ 0, %3 ]
  %176 = load i32, i32* %12, align 4
  %177 = icmp eq i32 %176, -1
  br i1 %177, label %208, label %195

178:                                              ; preds = %213
  %179 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %182 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %181 to i64*
  store i64 %180, i64* %182, align 8
  br label %194

183:                                              ; preds = %213
  %184 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 0
  %185 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %184, align 8
  %186 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %187 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %186, align 8
  %188 = getelementptr inbounds %class.anon, %class.anon* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %188) #17
  %189 = getelementptr inbounds %"struct.base::identity", %"struct.base::identity"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %189) #17
  %190 = bitcast %"class.base::internal::BinaryPredicateProjector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #17
  %191 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %4, i64 0, i32 0
  store %class.anon* %5, %class.anon** %191, align 8
  %192 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %4, i64 0, i32 1
  store %"struct.base::identity"* %6, %"struct.base::identity"** %192, align 8
  %193 = getelementptr inbounds %"class.base::internal::BinaryPredicateProjector", %"class.base::internal::BinaryPredicateProjector"* %4, i64 0, i32 2
  store %"struct.base::identity"* %6, %"struct.base::identity"** %193, align 8
  call fastcc void @"_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEvT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %185, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %187, %"class.base::internal::BinaryPredicateProjector"* nonnull dereferenceable(24) %4) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %188) #17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %189) #17
  br label %194

194:                                              ; preds = %183, %178
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #17
  ret void

195:                                              ; preds = %172
  %196 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_121g_ui_thread_log_levelE.0.0 monotonic, align 4
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %198, label %208

198:                                              ; preds = %195
  %199 = icmp sgt i32 %176, 0
  %200 = load atomic i64, i64* @_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %201 = inttoptr i64 %200 to %"class.base::HistogramBase"*
  %202 = icmp eq i64 %200, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22, i64 0, i64 0), i32 1) #17
  %205 = ptrtoint %"class.base::HistogramBase"* %204 to i64
  store atomic i64 %205, i64* @_ZZN4base12_GLOBAL__N_127LogHungThreadCountHistogramENS_11HangWatcher10ThreadTypeEiE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %206

206:                                              ; preds = %203, %198
  %207 = phi %"class.base::HistogramBase"* [ %201, %198 ], [ %204, %203 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %207, i1 zeroext %199) #17
  br label %208

208:                                              ; preds = %206, %195, %172
  %209 = load i32, i32* %13, align 4
  %210 = icmp eq i32 %209, -1
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = load atomic i32, i32* @_ZN4base12_GLOBAL__N_122g_threadpool_log_levelE.0.0 monotonic, align 4
  br label %213

213:                                              ; preds = %211, %208
  %214 = icmp ne i8 %174, 0
  %215 = and i8 %173, 1
  %216 = and i8 %215, %175
  %217 = icmp eq i8 %216, 0
  %218 = or i1 %214, %217
  br i1 %218, label %178, label %183
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal14HangWatchState20SetShouldBlockOnHangEmNS_9TimeTicksE(%"class.base::internal::HangWatchState"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = or i64 %2, %1
  %5 = or i64 %4, -9223372036854775808
  %6 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %13 = bitcast void ()** %12 to i64 (%"class.base::internal::BindStateBase"*)**
  %14 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::internal::BindStateBase"* nonnull %7) #17
  %16 = and i64 %11, -72057594037927936
  %17 = or i64 %15, %16
  store atomic i64 %17, i64* %10 monotonic, align 8
  br label %18

18:                                               ; preds = %3, %9
  %19 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = cmpxchg weak i64* %19, i64 %4, i64 %5 monotonic monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base8internal14HangWatchState11GetThreadIDEv(%"class.base::internal::HangWatchState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKS1_(%"class.base::HangWatcher::WatchStateSnapShot"*, %"class.base::HangWatcher::WatchStateSnapShot"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #17
  %4 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 4
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 1152921504606846975
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #19
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #18
  %18 = bitcast i8* %17 to %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*
  %19 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %18, i64 %10
  %23 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %22, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %23, align 8
  %24 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 4
  %34 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %34, i64 %30, i1 false) #17
  %35 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %18, i64 %33
  %36 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher18WatchStateSnapShotD2Ev(%"class.base::HangWatcher::WatchStateSnapShot"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %2, align 8
  %4 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3 to i64
  %7 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11HangWatcher18WatchStateSnapShot29PrepareHungThreadListCrashKeyEv(%"class.std::__1::basic_string"* noalias sret, %"class.base::HangWatcher::WatchStateSnapShot"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #17
  %7 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %7, align 8
  %9 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %9, align 8
  %11 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8, %10
  br i1 %11, label %54, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %22

22:                                               ; preds = %49, %12
  %23 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %8, %12 ], [ %51, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #17
  %24 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* nonnull sret %4, i32 %25) #17
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %4, i8 signext 124) #17, !noalias !18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* nonnull align 8 %16, i64 24, i1 false) #17
  %26 = load i8, i8* %18, align 1
  %27 = load i64, i64* %5, align 8
  %28 = load i8, i8* %20, align 1
  %29 = load i64, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #17
  %30 = icmp slt i8 %26, 0
  %31 = zext i8 %26 to i64
  %32 = select i1 %30, i64 %27, i64 %31
  %33 = icmp slt i8 %28, 0
  %34 = zext i8 %28 to i64
  %35 = select i1 %33, i64 %29, i64 %34
  %36 = add i64 %35, %32
  %37 = icmp ult i64 %36, 256
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = load i8*, i8** %14, align 8
  %40 = select i1 %33, i8* %39, i8* %13
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %40, i64 %35) #17
  %42 = load i8, i8* %20, align 1
  br label %43

43:                                               ; preds = %22, %38
  %44 = phi i8 [ %42, %38 ], [ %28, %22 ]
  %45 = phi i32 [ 0, %38 ], [ 2, %22 ]
  %46 = icmp slt i8 %44, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %48) #18
  br label %49

49:                                               ; preds = %43, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  %50 = icmp ne i32 %45, 0
  %51 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23, i64 1
  %52 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %51, %10
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %22

54:                                               ; preds = %49, %2
  ret void
}

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4base11HangWatcher18WatchStateSnapShot12IsActionableEv(%"class.base::HangWatcher::WatchStateSnapShot"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %2, align 8
  %4 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %4, align 8
  %6 = icmp ne %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base11HangWatcher32GrabWatchStateSnapshotForTestingEv(%"class.base::HangWatcher::WatchStateSnapShot"* noalias sret, %"class.base::HangWatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %1, i64 0, i32 16, i32 0, i32 0
  %5 = bitcast %"class.base::HangWatcher::WatchStateSnapShot"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  %6 = load i64, i64* %4, align 8
  tail call void @_ZN4base11HangWatcher18WatchStateSnapShotC2ERKNSt3__16vectorINS2_10unique_ptrINS_8internal14HangWatchStateENS2_14default_deleteIS6_EEEENS2_9allocatorIS9_EEEENS_9TimeTicksE(%"class.base::HangWatcher::WatchStateSnapShot"* %0, %"class.std::__1::vector"* dereferenceable(24) %3, i64 %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotE(%"class.base::HangWatcher"*, %"class.base::HangWatcher::WatchStateSnapShot"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::debug::ScopedCrashKeyString", align 8
  %5 = alloca %"class.base::debug::ScopedCrashKeyString", align 8
  %6 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %6 monotonic, align 1
  %7 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 11
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0, i32 0
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %8) #17
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11, !prof !5

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %7, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %12) #17
  br label %13

13:                                               ; preds = %2, %11
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #17
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZNK4base11HangWatcher18WatchStateSnapShot29PrepareHungThreadListCrashKeyEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.base::HangWatcher::WatchStateSnapShot"* %1)
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %25, !prof !2

20:                                               ; preds = %13
  %21 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key) #17
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = call %"struct.base::debug::CrashKeyString"* @_ZN4base5debug22AllocateCrashKeyStringEPKcNS0_12CrashKeySizeE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 256) #17
  store %"struct.base::debug::CrashKeyString"* %24, %"struct.base::debug::CrashKeyString"** @_ZZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key) #17
  br label %25

25:                                               ; preds = %20, %23, %13
  %26 = bitcast %"class.base::debug::ScopedCrashKeyString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #17
  %27 = getelementptr inbounds %"class.base::debug::ScopedCrashKeyString", %"class.base::debug::ScopedCrashKeyString"* %4, i64 0, i32 0
  store %"struct.base::debug::CrashKeyString"* inttoptr (i64 -6148914691236517206 to %"struct.base::debug::CrashKeyString"*), %"struct.base::debug::CrashKeyString"** %27, align 8
  %28 = load %"struct.base::debug::CrashKeyString"*, %"struct.base::debug::CrashKeyString"** @_ZZN4base11HangWatcher21DoDumpWithoutCrashingERKNS0_18WatchStateSnapShotEE9crash_key, align 8
  %29 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i8*, i8** %15, align 8
  %34 = select i1 %32, i8* %33, i8* %14
  %35 = load i64, i64* %16, align 8
  %36 = zext i8 %31 to i64
  %37 = select i1 %32, i64 %35, i64 %36
  call void @_ZN4base5debug20ScopedCrashKeyStringC1EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"* nonnull %4, %"struct.base::debug::CrashKeyString"* %28, i8* %34, i64 %37) #17
  %38 = bitcast %"class.base::debug::ScopedCrashKeyString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #17
  %39 = getelementptr inbounds %"class.base::debug::ScopedCrashKeyString", %"class.base::debug::ScopedCrashKeyString"* %5, i64 0, i32 0
  store %"struct.base::debug::CrashKeyString"* inttoptr (i64 -6148914691236517206 to %"struct.base::debug::CrashKeyString"*), %"struct.base::debug::CrashKeyString"** %39, align 8
  call void @_ZN4base11HangWatcher46GetTimeSinceLastCriticalMemoryPressureCrashKeyEv(%"class.base::debug::ScopedCrashKeyString"* nonnull sret %5, %"class.base::HangWatcher"* %0)
  %40 = getelementptr inbounds %"class.base::HangWatcher::WatchStateSnapShot", %"class.base::HangWatcher::WatchStateSnapShot"* %1, i64 0, i32 0, i32 0, i32 1
  %41 = load %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"** %40, align 8
  %42 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %41, i64 -1, i32 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %44, align 8
  %46 = icmp eq %"class.base::internal::BindStateBase"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %25
  %48 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %45, i64 0, i32 1
  %49 = bitcast void ()** %48 to void (%"class.base::internal::BindStateBase"*)**
  %50 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %49, align 8
  call void %50(%"class.base::internal::BindStateBase"* nonnull %45) #17
  br label %52

51:                                               ; preds = %25
  call void @_ZN4base11HangWatcher10RecordHangEv()
  br label %52

52:                                               ; preds = %51, %47
  %53 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 16, i32 0, i32 0
  store i64 %43, i64* %53, align 8
  store atomic i8 0, i8* %6 monotonic, align 1
  call void @_ZN4base5debug20ScopedCrashKeyStringD1Ev(%"class.base::debug::ScopedCrashKeyString"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #17
  call void @_ZN4base5debug20ScopedCrashKeyStringD1Ev(%"class.base::debug::ScopedCrashKeyString"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #17
  %54 = load i8, i8* %30, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %52
  %57 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #17
  %59 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %8) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5debug20ScopedCrashKeyStringD1Ev(%"class.base::debug::ScopedCrashKeyString"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher32SetAfterMonitorClosureForTestingENS_17RepeatingCallbackIFvvEEE(%"class.base::HangWatcher"*, %"class.base::RepeatingCallback.27"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 8, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.27", %"class.base::RepeatingCallback.27"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher26SetOnHangClosureForTestingENS_17RepeatingCallbackIFvvEEE(%"class.base::HangWatcher"*, %"class.base::RepeatingCallback.27"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 9, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.27", %"class.base::RepeatingCallback.27"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11HangWatcher29SetMonitoringPeriodForTestingENS_9TimeDeltaE(%"class.base::HangWatcher"* nocapture, i64) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 1, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher30SetAfterWaitCallbackForTestingENS_17RepeatingCallbackIFvNS_9TimeTicksEEEE(%"class.base::HangWatcher"*, %"class.base::RepeatingCallback.28"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 10, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.28", %"class.base::RepeatingCallback.28"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher28SignalMonitorEventForTestingEv(%"class.base::HangWatcher"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 4
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base11HangWatcher24StopMonitoringForTestingEv(%"class.base::HangWatcher"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store atomic i8 0, i8* %2 monotonic, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11HangWatcher22SetTickClockForTestingEPKNS_9TickClockE(%"class.base::HangWatcher"* nocapture, %"class.base::TickClock"*) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.base::HangWatcher", %"class.base::HangWatcher"* %0, i64 0, i32 13
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal17HangWatchDeadlineC2Ev(%"class.base::internal::HangWatchDeadline"* nocapture) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 72057594037927935, i64* %2, align 8
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base8internal17HangWatchDeadline3MaxEv() local_unnamed_addr #3 align 2 {
  ret i64 72057594037927935
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadlineD2Ev(%"class.base::internal::HangWatchDeadline"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK4base8internal17HangWatchDeadline19GetFlagsAndDeadlineEv(%"class.base::internal::HangWatchDeadline"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = and i64 %3, -72057594037927936
  %5 = and i64 %3, 72057594037927935
  %6 = insertvalue { i64, i64 } undef, i64 %4, 0
  %7 = insertvalue { i64, i64 } %6, i64 %5, 1
  ret { i64, i64 } %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base8internal17HangWatchDeadline12ExtractFlagsEm(i64) local_unnamed_addr #3 align 2 {
  %2 = and i64 %0, -72057594037927936
  ret i64 %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base8internal17HangWatchDeadline16DeadlineFromBitsEm(i64 returned) local_unnamed_addr #3 align 2 {
  ret i64 %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN4base8internal17HangWatchDeadline15ExtractDeadlineEm(i64) local_unnamed_addr #3 align 2 {
  %2 = and i64 %0, 72057594037927935
  ret i64 %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK4base8internal17HangWatchDeadline11GetDeadlineEv(%"class.base::internal::HangWatchDeadline"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = and i64 %3, 72057594037927935
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline11SetDeadlineENS_9TimeTicksE(%"class.base::internal::HangWatchDeadline"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %10 = bitcast void ()** %9 to i64 (%"class.base::internal::BindStateBase"*)**
  %11 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::BindStateBase"* nonnull %4) #17
  %13 = and i64 %8, -72057594037927936
  %14 = or i64 %12, %13
  store atomic i64 %14, i64* %7 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = and i64 %17, 6917529027641081856
  %19 = and i64 %1, 72057594037927935
  %20 = or i64 %18, %19
  store atomic i64 %20, i64* %16 monotonic, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base8internal17HangWatchDeadline20SwitchBitsForTestingEv(%"class.base::internal::HangWatchDeadline"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to i64 (%"class.base::internal::BindStateBase"*)**
  %8 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %7, align 8
  %9 = tail call i64 %8(%"class.base::internal::BindStateBase"* %5) #17
  %10 = and i64 %3, -72057594037927936
  %11 = or i64 %9, %10
  store atomic i64 %11, i64* %2 monotonic, align 8
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base8internal17HangWatchDeadline20SetShouldBlockOnHangEmNS_9TimeTicksE(%"class.base::internal::HangWatchDeadline"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = or i64 %2, %1
  %5 = or i64 %4, -9223372036854775808
  %6 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %6, align 8
  %8 = icmp eq %"class.base::internal::BindStateBase"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %7, i64 0, i32 1
  %13 = bitcast void ()** %12 to i64 (%"class.base::internal::BindStateBase"*)**
  %14 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %13, align 8
  %15 = tail call i64 %14(%"class.base::internal::BindStateBase"* nonnull %7) #17
  %16 = and i64 %11, -72057594037927936
  %17 = or i64 %15, %16
  store atomic i64 %17, i64* %10 monotonic, align 8
  br label %18

18:                                               ; preds = %3, %9
  %19 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = cmpxchg weak i64* %19, i64 %4, i64 %5 monotonic monotonic
  %21 = extractvalue { i64, i1 } %20, 1
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline30SetHasActiveIgnoreHangsInScopeEv(%"class.base::internal::HangWatchDeadline"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw or i64* %15, i64 2305843009213693952 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline17SetPersistentFlagENS1_4FlagE(%"class.base::internal::HangWatchDeadline"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %10 = bitcast void ()** %9 to i64 (%"class.base::internal::BindStateBase"*)**
  %11 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::BindStateBase"* nonnull %4) #17
  %13 = and i64 %8, -72057594037927936
  %14 = or i64 %12, %13
  store atomic i64 %14, i64* %7 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw or i64* %16, i64 %1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline32UnsetHasActiveIgnoreHangsInScopeEv(%"class.base::internal::HangWatchDeadline"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw and i64* %15, i64 -2305843009213693953 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline19ClearPersistentFlagENS1_4FlagE(%"class.base::internal::HangWatchDeadline"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %3, align 8
  %5 = icmp eq %"class.base::internal::BindStateBase"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %4, i64 0, i32 1
  %10 = bitcast void ()** %9 to i64 (%"class.base::internal::BindStateBase"*)**
  %11 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::internal::BindStateBase"* nonnull %4) #17
  %13 = and i64 %8, -72057594037927936
  %14 = or i64 %12, %13
  store atomic i64 %14, i64* %7 monotonic, align 8
  br label %15

15:                                               ; preds = %2, %6
  %16 = xor i64 %1, -1
  %17 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw and i64* %17, i64 %16 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline33SetIgnoreCurrentWatchHangsInScopeEv(%"class.base::internal::HangWatchDeadline"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw or i64* %15, i64 4611686018427387904 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline35UnsetIgnoreCurrentWatchHangsInScopeEv(%"class.base::internal::HangWatchDeadline"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %2, align 8
  %4 = icmp eq %"class.base::internal::BindStateBase"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %3, i64 0, i32 1
  %9 = bitcast void ()** %8 to i64 (%"class.base::internal::BindStateBase"*)**
  %10 = load i64 (%"class.base::internal::BindStateBase"*)*, i64 (%"class.base::internal::BindStateBase"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::internal::BindStateBase"* nonnull %3) #17
  %12 = and i64 %7, -72057594037927936
  %13 = or i64 %11, %12
  store atomic i64 %13, i64* %6 monotonic, align 8
  br label %14

14:                                               ; preds = %1, %5
  %15 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw and i64* %15, i64 -4611686018427387905 monotonic
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal17HangWatchDeadline9IsFlagSetENS1_4FlagE(%"class.base::internal::HangWatchDeadline"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = and i64 %4, %1
  %6 = icmp ne i64 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline30SetSwitchBitsClosureForTestingENS_17RepeatingCallbackIFmvEEE(%"class.base::internal::HangWatchDeadline"*, %"class.base::RepeatingCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %3, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal17HangWatchDeadline32ResetSwitchBitsClosureForTestingEv(%"class.base::internal::HangWatchDeadline"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchDeadline", %"class.base::internal::HangWatchDeadline"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %2) #17
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchStateC2ENS_11HangWatcher10ThreadTypeE(%"class.base::internal::HangWatchState"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 72057594037927935, i64* %3, align 8
  %4 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %4, align 8
  %5 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #17
  store i32 %6, i32* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 2
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 3
  store i32 %1, i32* %8, align 8
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %2
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %15

15:                                               ; preds = %2, %11, %14
  %16 = bitcast %"class.base::internal::HangWatchState"* %0 to i8*
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* %16) #17
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base8internal14HangWatchStateD2Ev(%"class.base::internal::HangWatchState"*) unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %8

8:                                                ; preds = %1, %4, %7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %9 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %9) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base8internal14HangWatchState14IsOverDeadlineEv(%"class.base::internal::HangWatchState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #17
  %3 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = and i64 %4, 72057594037927935
  %6 = icmp sgt i64 %2, %5
  ret i1 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.base::internal::HangWatchDeadline"* @_ZN4base8internal14HangWatchState30GetHangWatchDeadlineForTestingEv(%"class.base::internal::HangWatchState"* readnone) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %0, i64 0, i32 0
  ret %"class.base::internal::HangWatchDeadline"* %2
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #12

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #12

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #4

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEvT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"class.base::internal::BinaryPredicateProjector"* readnone dereferenceable(24)) unnamed_addr #0 {
  br label %4

4:                                                ; preds = %412, %3
  %5 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %1, %3 ], [ %389, %412 ]
  %6 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %0, %3 ], [ %26, %412 ]
  %7 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5 to i64
  %8 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1
  %9 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8 to i8*
  %11 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  %12 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8 to i8*
  %13 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  %14 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8 to i8*
  %15 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  %16 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8 to i8*
  %18 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  %19 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %8 to i8*
  %21 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  %22 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5 to i64
  br label %23

23:                                               ; preds = %421, %4
  %24 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %6, %4 ], [ %422, %421 ]
  br label %25

25:                                               ; preds = %328, %23
  %26 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %24, %23 ], [ %317, %328 ]
  %27 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i64
  %28 = sub i64 %7, %27
  %29 = ashr exact i64 %28, 4
  switch i64 %29, label %129 [
    i64 0, label %425
    i64 1, label %425
    i64 2, label %30
    i64 3, label %43
    i64 4, label %83
    i64 5, label %88
  ]

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1
  %32 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp slt i64 %35, %33
  br i1 %36, label %37, label %425

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  %41 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 12, i1 false) #17
  store i64 %33, i64* %34, align 8
  %42 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  store i32 %39, i32* %42, align 8
  br label %425

43:                                               ; preds = %25
  %44 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %45 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1
  %46 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %44, i64 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %49, %47
  %51 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %45, i64 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp slt i64 %52, %49
  br i1 %50, label %68, label %54

54:                                               ; preds = %43
  br i1 %53, label %55, label %425

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %44 to i8*
  %59 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 12, i1 false) #17
  store i64 %49, i64* %51, align 8
  %60 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  store i32 %57, i32* %60, align 8
  %61 = load i64, i64* %46, align 8
  %62 = load i64, i64* %48, align 8
  %63 = icmp slt i64 %62, %61
  br i1 %63, label %64, label %425

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %58, i64 12, i1 false) #17
  store i64 %61, i64* %48, align 8
  store i32 %66, i32* %56, align 8
  br label %425

68:                                               ; preds = %43
  %69 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  br i1 %53, label %72, label %75

72:                                               ; preds = %68
  %73 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %73, i64 12, i1 false) #17
  store i64 %47, i64* %51, align 8
  %74 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  store i32 %70, i32* %74, align 8
  br label %425

75:                                               ; preds = %68
  %76 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %76, i64 12, i1 false) #17
  store i64 %47, i64* %48, align 8
  %77 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1, i32 1
  store i32 %70, i32* %77, align 8
  %78 = load i64, i64* %51, align 8
  %79 = icmp slt i64 %78, %47
  br i1 %79, label %80, label %425

80:                                               ; preds = %75
  %81 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %81, i64 12, i1 false) #17
  store i64 %47, i64* %51, align 8
  %82 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  store i32 %70, i32* %82, align 8
  br label %425

83:                                               ; preds = %25
  %84 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %85 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2
  %86 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1
  %87 = tail call fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %84, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %85, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %86, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %425

88:                                               ; preds = %25
  %89 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %90 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2
  %91 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 3
  %92 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1
  %93 = tail call fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %89, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %90, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2) #17
  %94 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91, i64 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %92, i64 0, i32 0, i32 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp slt i64 %97, %95
  br i1 %98, label %99, label %425

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 3, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %91 to i8*
  %103 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 12, i1 false) #17
  store i64 %95, i64* %96, align 8
  %104 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, i64 -1, i32 1
  store i32 %101, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %90, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = load i64, i64* %94, align 8
  %108 = icmp slt i64 %107, %106
  br i1 %108, label %109, label %425

109:                                              ; preds = %99
  %110 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %102, i64 12, i1 false) #17
  store i64 %106, i64* %94, align 8
  store i32 %111, i32* %100, align 8
  %113 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %89, i64 0, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* %105, align 8
  %116 = icmp slt i64 %115, %114
  br i1 %116, label %117, label %425

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %120, i8* align 8 %112, i64 12, i1 false) #17
  store i64 %114, i64* %105, align 8
  store i32 %119, i32* %110, align 8
  %121 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* %113, align 8
  %124 = icmp slt i64 %123, %122
  br i1 %124, label %125, label %425

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %127 = load i32, i32* %126, align 8
  %128 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %120, i64 12, i1 false) #17
  store i64 %122, i64* %113, align 8
  store i32 %127, i32* %118, align 8
  br label %425

129:                                              ; preds = %25
  %130 = icmp slt i64 %28, 496
  br i1 %130, label %131, label %203

131:                                              ; preds = %129
  %132 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2
  %133 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %134 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %133, i64 0, i32 0, i32 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = icmp slt i64 %137, %135
  %139 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %132, i64 0, i32 0, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = icmp slt i64 %140, %137
  br i1 %138, label %155, label %142

142:                                              ; preds = %131
  br i1 %141, label %143, label %169

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %133 to i8*
  %147 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 12, i1 false) #17
  store i64 %137, i64* %139, align 8
  %148 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2, i32 1
  store i32 %145, i32* %148, align 8
  %149 = load i64, i64* %136, align 8
  %150 = icmp slt i64 %149, %135
  br i1 %150, label %151, label %169

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %146, i64 12, i1 false) #17
  store i64 %135, i64* %136, align 8
  store i32 %153, i32* %144, align 8
  br label %169

155:                                              ; preds = %131
  %156 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  br i1 %141, label %159, label %162

159:                                              ; preds = %155
  %160 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %160, i64 12, i1 false) #17
  store i64 %135, i64* %139, align 8
  %161 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2, i32 1
  store i32 %157, i32* %161, align 8
  br label %169

162:                                              ; preds = %155
  %163 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %163, i64 12, i1 false) #17
  store i64 %135, i64* %136, align 8
  %164 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1, i32 1
  store i32 %157, i32* %164, align 8
  %165 = icmp slt i64 %140, %135
  br i1 %165, label %166, label %169

166:                                              ; preds = %162
  %167 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %167, i64 12, i1 false) #17
  store i64 %135, i64* %139, align 8
  %168 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 2, i32 1
  store i32 %157, i32* %168, align 8
  br label %169

169:                                              ; preds = %166, %162, %159, %151, %143, %142
  %170 = phi i64 [ %140, %142 ], [ %137, %143 ], [ %137, %151 ], [ %135, %159 ], [ %140, %162 ], [ %135, %166 ]
  %171 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 3
  %172 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %171, %5
  br i1 %172, label %425, label %173

173:                                              ; preds = %169, %201
  %174 = phi i64 [ %202, %201 ], [ %170, %169 ]
  %175 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %199, %201 ], [ %171, %169 ]
  %176 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %175, %201 ], [ %132, %169 ]
  %177 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %175, i64 0, i32 0, i32 0, i32 0
  %178 = load i64, i64* %177, align 8
  %179 = icmp slt i64 %178, %174
  br i1 %179, label %180, label %198

180:                                              ; preds = %173
  %181 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %175, i64 0, i32 1
  %182 = load i32, i32* %181, align 8
  br label %183

183:                                              ; preds = %189, %180
  %184 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %175, %180 ], [ %185, %189 ]
  %185 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %176, %180 ], [ %190, %189 ]
  %186 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %184 to i8*
  %187 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 12, i1 false) #17
  %188 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %185, %26
  br i1 %188, label %194, label %189

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %185, i64 -1
  %191 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = icmp slt i64 %178, %192
  br i1 %193, label %183, label %194

194:                                              ; preds = %189, %183
  %195 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %26, %183 ], [ %185, %189 ]
  %196 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %195, i64 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %195, i64 0, i32 1
  store i32 %182, i32* %197, align 8
  br label %198

198:                                              ; preds = %194, %173
  %199 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %175, i64 1
  %200 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %199, %5
  br i1 %200, label %425, label %201

201:                                              ; preds = %198
  %202 = load i64, i64* %177, align 8
  br label %173

203:                                              ; preds = %129
  %204 = icmp sgt i64 %28, 15984
  %205 = sdiv i64 %29, 2
  %206 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %205
  br i1 %204, label %207, label %248

207:                                              ; preds = %203
  %208 = sdiv i64 %29, 4
  %209 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %208
  %210 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206, i64 %208
  %211 = tail call fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %209, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %210, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2) #17
  %212 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 8
  %214 = load i64, i64* %16, align 8
  %215 = icmp slt i64 %214, %213
  br i1 %215, label %216, label %279

216:                                              ; preds = %207
  %217 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %210, i64 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %17, i64 12, i1 false) #17
  store i64 %213, i64* %16, align 8
  store i32 %218, i32* %18, align 8
  %220 = add i32 %211, 1
  %221 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206, i64 0, i32 0, i32 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = load i64, i64* %212, align 8
  %224 = icmp slt i64 %223, %222
  br i1 %224, label %225, label %279

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %205, i32 1
  %227 = load i32, i32* %226, align 8
  %228 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %228, i8* align 8 %219, i64 12, i1 false) #17
  store i64 %222, i64* %212, align 8
  store i32 %227, i32* %217, align 8
  %229 = add i32 %211, 2
  %230 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %209, i64 0, i32 0, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = load i64, i64* %221, align 8
  %233 = icmp slt i64 %232, %231
  br i1 %233, label %234, label %279

234:                                              ; preds = %225
  %235 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %208, i32 1
  %236 = load i32, i32* %235, align 8
  %237 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %237, i8* align 8 %228, i64 12, i1 false) #17
  store i64 %231, i64* %221, align 8
  store i32 %236, i32* %226, align 8
  %238 = add i32 %211, 3
  %239 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = load i64, i64* %230, align 8
  %242 = icmp slt i64 %241, %240
  br i1 %242, label %243, label %279

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %246, i8* align 8 %237, i64 12, i1 false) #17
  store i64 %240, i64* %230, align 8
  store i32 %245, i32* %235, align 8
  %247 = add i32 %211, 4
  br label %279

248:                                              ; preds = %203
  %249 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206, i64 0, i32 0, i32 0, i32 0
  %252 = load i64, i64* %251, align 8
  %253 = icmp slt i64 %252, %250
  %254 = load i64, i64* %9, align 8
  %255 = icmp slt i64 %254, %252
  br i1 %253, label %268, label %256

256:                                              ; preds = %248
  br i1 %255, label %257, label %279

257:                                              ; preds = %256
  %258 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %205, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %260, i8* align 8 %10, i64 12, i1 false) #17
  store i64 %252, i64* %9, align 8
  store i32 %259, i32* %11, align 8
  %261 = load i64, i64* %249, align 8
  %262 = load i64, i64* %251, align 8
  %263 = icmp slt i64 %262, %261
  br i1 %263, label %264, label %279

264:                                              ; preds = %257
  %265 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %266 = load i32, i32* %265, align 8
  %267 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %267, i8* align 8 %260, i64 12, i1 false) #17
  store i64 %261, i64* %251, align 8
  store i32 %266, i32* %258, align 8
  br label %279

268:                                              ; preds = %248
  %269 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %270 = load i32, i32* %269, align 8
  %271 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  br i1 %255, label %272, label %273

272:                                              ; preds = %268
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %14, i64 12, i1 false) #17
  store i64 %250, i64* %9, align 8
  store i32 %270, i32* %15, align 8
  br label %279

273:                                              ; preds = %268
  %274 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %274, i64 12, i1 false) #17
  store i64 %250, i64* %251, align 8
  %275 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 %205, i32 1
  store i32 %270, i32* %275, align 8
  %276 = load i64, i64* %9, align 8
  %277 = icmp slt i64 %276, %250
  br i1 %277, label %278, label %279

278:                                              ; preds = %273
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %274, i8* align 8 %12, i64 12, i1 false) #17
  store i64 %250, i64* %9, align 8
  store i32 %270, i32* %13, align 8
  br label %279

279:                                              ; preds = %278, %273, %272, %264, %257, %256, %243, %234, %225, %216, %207
  %280 = phi i32 [ %247, %243 ], [ %238, %234 ], [ %229, %225 ], [ %220, %216 ], [ %211, %207 ], [ 1, %272 ], [ 0, %256 ], [ 2, %264 ], [ 1, %257 ], [ 2, %278 ], [ 1, %273 ]
  %281 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %206, i64 0, i32 0, i32 0, i32 0
  %282 = load i64, i64* %281, align 8
  %283 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 0, i32 0, i32 0
  %284 = load i64, i64* %283, align 8
  %285 = icmp slt i64 %284, %282
  br i1 %285, label %349, label %286

286:                                              ; preds = %279, %337
  %287 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %288, %337 ], [ %8, %279 ]
  %288 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %287, i64 -1
  %289 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %288
  br i1 %289, label %290, label %337

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %292 = load i64, i64* %19, align 8
  %293 = icmp slt i64 %284, %292
  br i1 %293, label %309, label %294

294:                                              ; preds = %290
  %295 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %291, %8
  br i1 %295, label %425, label %296

296:                                              ; preds = %294, %306
  %297 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %307, %306 ], [ %291, %294 ]
  %298 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %297, i64 0, i32 0, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp slt i64 %284, %299
  br i1 %300, label %301, label %306

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %297, i64 0, i32 1
  %303 = load i32, i32* %302, align 8
  %304 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %297 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %304, i8* align 8 %20, i64 12, i1 false) #17
  store i64 %299, i64* %19, align 8
  store i32 %303, i32* %21, align 8
  %305 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %297, i64 1
  br label %309

306:                                              ; preds = %296
  %307 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %297, i64 1
  %308 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %307, %8
  br i1 %308, label %425, label %296

309:                                              ; preds = %301, %290
  %310 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %291, %290 ], [ %305, %301 ]
  %311 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %310, %8
  br i1 %311, label %425, label %312

312:                                              ; preds = %309, %330
  %313 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %321, %330 ], [ %310, %309 ]
  %314 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %324, %330 ], [ %8, %309 ]
  %315 = load i64, i64* %283, align 8
  br label %316

316:                                              ; preds = %316, %312
  %317 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %313, %312 ], [ %321, %316 ]
  %318 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = icmp slt i64 %315, %319
  %321 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %317, i64 1
  br i1 %320, label %322, label %316

322:                                              ; preds = %316, %322
  %323 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %324, %322 ], [ %314, %316 ]
  %324 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %323, i64 -1
  %325 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %324, i64 0, i32 0, i32 0, i32 0
  %326 = load i64, i64* %325, align 8
  %327 = icmp slt i64 %315, %326
  br i1 %327, label %322, label %328

328:                                              ; preds = %322
  %329 = icmp ult %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %317, %324
  br i1 %329, label %330, label %25

330:                                              ; preds = %328
  %331 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %324, i64 0, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %317, i64 0, i32 1
  %333 = load i32, i32* %332, align 8
  %334 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %317 to i8*
  %335 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %324 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 8 %335, i64 12, i1 false) #17
  store i64 %319, i64* %331, align 8
  %336 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %323, i64 -1, i32 1
  store i32 %333, i32* %336, align 8
  br label %312

337:                                              ; preds = %286
  %338 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %288, i64 0, i32 0, i32 0, i32 0
  %339 = load i64, i64* %338, align 8
  %340 = icmp slt i64 %339, %282
  br i1 %340, label %341, label %286

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %288, i64 0, i32 0, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 0, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i8*
  %346 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %288 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %346, i64 12, i1 false) #17
  store i64 %284, i64* %342, align 8
  %347 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %287, i64 -1, i32 1
  store i32 %344, i32* %347, align 8
  %348 = add i32 %280, 1
  br label %349

349:                                              ; preds = %279, %341
  %350 = phi i32 [ %348, %341 ], [ %280, %279 ]
  %351 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %288, %341 ], [ %8, %279 ]
  %352 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26 to i64
  %353 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, i64 1
  %354 = icmp ult %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %353, %351
  br i1 %354, label %355, label %386

355:                                              ; preds = %349, %376
  %356 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %385, %376 ], [ %206, %349 ]
  %357 = phi i32 [ %383, %376 ], [ %350, %349 ]
  %358 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %367, %376 ], [ %353, %349 ]
  %359 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %370, %376 ], [ %351, %349 ]
  %360 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %356, i64 0, i32 0, i32 0, i32 0
  %361 = load i64, i64* %360, align 8
  br label %362

362:                                              ; preds = %362, %355
  %363 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %358, %355 ], [ %367, %362 ]
  %364 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %363, i64 0, i32 0, i32 0, i32 0
  %365 = load i64, i64* %364, align 8
  %366 = icmp slt i64 %365, %361
  %367 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %363, i64 1
  br i1 %366, label %362, label %368

368:                                              ; preds = %362, %368
  %369 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %370, %368 ], [ %359, %362 ]
  %370 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %369, i64 -1
  %371 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %370, i64 0, i32 0, i32 0, i32 0
  %372 = load i64, i64* %371, align 8
  %373 = icmp slt i64 %372, %361
  br i1 %373, label %374, label %368

374:                                              ; preds = %368
  %375 = icmp ugt %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %363, %370
  br i1 %375, label %386, label %376

376:                                              ; preds = %374
  %377 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %370, i64 0, i32 0, i32 0, i32 0
  %378 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %363, i64 0, i32 1
  %379 = load i32, i32* %378, align 8
  %380 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %363 to i8*
  %381 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %370 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %380, i8* align 8 %381, i64 12, i1 false) #17
  store i64 %365, i64* %377, align 8
  %382 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %369, i64 -1, i32 1
  store i32 %379, i32* %382, align 8
  %383 = add i32 %357, 1
  %384 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %356, %363
  %385 = select i1 %384, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %370, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %356
  br label %355

386:                                              ; preds = %374, %349
  %387 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %206, %349 ], [ %356, %374 ]
  %388 = phi i32 [ %350, %349 ], [ %357, %374 ]
  %389 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %353, %349 ], [ %363, %374 ]
  %390 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, %387
  br i1 %390, label %404, label %391

391:                                              ; preds = %386
  %392 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, i64 0, i32 0, i32 0, i32 0
  %393 = load i64, i64* %392, align 8
  %394 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %387, i64 0, i32 0, i32 0, i32 0
  %395 = load i64, i64* %394, align 8
  %396 = icmp slt i64 %395, %393
  br i1 %396, label %397, label %404

397:                                              ; preds = %391
  %398 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, i64 0, i32 1
  %399 = load i32, i32* %398, align 8
  %400 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389 to i8*
  %401 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %387 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %400, i8* align 8 %401, i64 12, i1 false) #17
  store i64 %393, i64* %394, align 8
  %402 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %387, i64 0, i32 1
  store i32 %399, i32* %402, align 8
  %403 = add i32 %388, 1
  br label %404

404:                                              ; preds = %386, %397, %391
  %405 = phi i32 [ %403, %397 ], [ %388, %391 ], [ %388, %386 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %414

407:                                              ; preds = %404
  %408 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEbT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %409 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, i64 1
  %410 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEbT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %409, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br i1 %410, label %411, label %413

411:                                              ; preds = %407
  br i1 %408, label %425, label %412

412:                                              ; preds = %411, %423
  br label %4

413:                                              ; preds = %407
  br i1 %408, label %421, label %414

414:                                              ; preds = %413, %404
  %415 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389 to i64
  %416 = sub i64 %415, %352
  %417 = sub i64 %22, %415
  %418 = icmp slt i64 %416, %417
  br i1 %418, label %419, label %423

419:                                              ; preds = %414
  tail call fastcc void @"_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEvT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %26, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  %420 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, i64 1
  br label %421

421:                                              ; preds = %419, %413
  %422 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %409, %413 ], [ %420, %419 ]
  br label %23

423:                                              ; preds = %414
  %424 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %389, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEvT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %424, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %5, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %412

425:                                              ; preds = %411, %309, %25, %25, %294, %306, %198, %169, %125, %117, %109, %99, %88, %80, %75, %72, %64, %55, %54, %30, %37, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* nocapture, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* nocapture, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* nocapture, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* nocapture, %"class.base::internal::BinaryPredicateProjector"* nocapture readnone dereferenceable(24)) unnamed_addr #0 {
  %6 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, %7
  %11 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %12, %9
  br i1 %10, label %29, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %44

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1 to i8*
  %19 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 12, i1 false) #17
  store i64 %9, i64* %11, align 8
  %20 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2, i64 0, i32 1
  store i32 %17, i32* %20, align 8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* %8, align 8
  %23 = icmp slt i64 %22, %21
  br i1 %23, label %24, label %44

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %18, i64 12, i1 false) #17
  store i64 %21, i64* %8, align 8
  store i32 %26, i32* %16, align 8
  %28 = load i64, i64* %11, align 8
  br label %44

29:                                               ; preds = %5
  %30 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  br i1 %13, label %33, label %36

33:                                               ; preds = %29
  %34 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %34, i64 12, i1 false) #17
  store i64 %7, i64* %11, align 8
  %35 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2, i64 0, i32 1
  store i32 %31, i32* %35, align 8
  br label %44

36:                                               ; preds = %29
  %37 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 8 %37, i64 12, i1 false) #17
  store i64 %7, i64* %8, align 8
  %38 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 0, i32 1
  store i32 %31, i32* %38, align 8
  %39 = load i64, i64* %11, align 8
  %40 = icmp slt i64 %39, %7
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %42, i64 12, i1 false) #17
  store i64 %7, i64* %11, align 8
  %43 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2, i64 0, i32 1
  store i32 %31, i32* %43, align 8
  br label %44

44:                                               ; preds = %14, %15, %24, %33, %36, %41
  %45 = phi i64 [ %7, %33 ], [ %12, %14 ], [ %28, %24 ], [ %9, %15 ], [ %7, %41 ], [ %39, %36 ]
  %46 = phi i32 [ 1, %33 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %36 ]
  %47 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3, i64 0, i32 0, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp slt i64 %48, %45
  br i1 %49, label %50, label %73

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %2 to i8*
  %54 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #17
  store i64 %45, i64* %47, align 8
  %55 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %3, i64 0, i32 1
  store i32 %52, i32* %55, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i64, i64* %8, align 8
  %58 = load i64, i64* %11, align 8
  %59 = icmp slt i64 %58, %57
  br i1 %59, label %60, label %73

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %53, i64 12, i1 false) #17
  store i64 %57, i64* %11, align 8
  store i32 %62, i32* %51, align 8
  %64 = add nuw nsw i32 %46, 2
  %65 = load i64, i64* %6, align 8
  %66 = load i64, i64* %8, align 8
  %67 = icmp slt i64 %66, %65
  br i1 %67, label %68, label %73

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %63, i64 12, i1 false) #17
  store i64 %65, i64* %8, align 8
  store i32 %70, i32* %61, align 8
  %72 = add nuw nsw i32 %46, 3
  br label %73

73:                                               ; preds = %50, %68, %60, %44
  %74 = phi i32 [ %72, %68 ], [ %64, %60 ], [ %56, %50 ], [ %46, %44 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEbT0_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"*, %"class.base::internal::BinaryPredicateProjector"* nocapture readnone dereferenceable(24)) unnamed_addr #0 {
  %4 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1 to i64
  %5 = ptrtoint %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  switch i64 %7, label %107 [
    i64 0, label %187
    i64 1, label %187
    i64 2, label %8
    i64 3, label %21
    i64 4, label %61
    i64 5, label %66
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1
  %10 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp slt i64 %13, %11
  br i1 %14, label %15, label %187

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  %19 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 12, i1 false) #17
  store i64 %11, i64* %12, align 8
  %20 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1, i32 1
  store i32 %17, i32* %20, align 8
  br label %187

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1
  %23 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1
  %24 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %22, i64 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %25
  %29 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23, i64 0, i32 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %27
  br i1 %28, label %46, label %32

32:                                               ; preds = %21
  br i1 %31, label %33, label %187

33:                                               ; preds = %32
  %34 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %22 to i8*
  %37 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 12, i1 false) #17
  store i64 %27, i64* %29, align 8
  %38 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1, i32 1
  store i32 %35, i32* %38, align 8
  %39 = load i64, i64* %24, align 8
  %40 = load i64, i64* %26, align 8
  %41 = icmp slt i64 %40, %39
  br i1 %41, label %42, label %187

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %36, i64 12, i1 false) #17
  store i64 %39, i64* %26, align 8
  store i32 %44, i32* %34, align 8
  br label %187

46:                                               ; preds = %21
  %47 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  br i1 %31, label %50, label %53

50:                                               ; preds = %46
  %51 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %51, i64 12, i1 false) #17
  store i64 %25, i64* %29, align 8
  %52 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1, i32 1
  store i32 %48, i32* %52, align 8
  br label %187

53:                                               ; preds = %46
  %54 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %54, i64 12, i1 false) #17
  store i64 %25, i64* %26, align 8
  %55 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1, i32 1
  store i32 %48, i32* %55, align 8
  %56 = load i64, i64* %29, align 8
  %57 = icmp slt i64 %56, %25
  br i1 %57, label %58, label %187

58:                                               ; preds = %53
  %59 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %23 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %59, i64 12, i1 false) #17
  store i64 %25, i64* %29, align 8
  %60 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1, i32 1
  store i32 %48, i32* %60, align 8
  br label %187

61:                                               ; preds = %3
  %62 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1
  %63 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2
  %64 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1
  %65 = tail call fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %62, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %63, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %64, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2)
  br label %187

66:                                               ; preds = %3
  %67 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1
  %68 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2
  %69 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 3
  %70 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1
  %71 = tail call fastcc i32 @"_ZNSt3__17__sort4IRN4base8internal24BinaryPredicateProjectorIZNS1_11HangWatcher18WatchStateSnapShotC1ERKNS_6vectorINS_10unique_ptrINS2_14HangWatchStateENS_14default_deleteIS8_EEEENS_9allocatorISB_EEEENS1_9TimeTicksEE3$_0NS1_8identityESJ_Lb0EEEPNS5_14WatchStateCopyEEEjT0_SO_SO_SO_T_"(%"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %67, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %68, %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %69, %"class.base::internal::BinaryPredicateProjector"* dereferenceable(24) %2) #17
  %72 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %69, i64 0, i32 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp slt i64 %75, %73
  br i1 %76, label %77, label %187

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 3, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %69 to i8*
  %81 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %70 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 12, i1 false) #17
  store i64 %73, i64* %74, align 8
  %82 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %1, i64 -1, i32 1
  store i32 %79, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %68, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* %72, align 8
  %86 = icmp slt i64 %85, %84
  br i1 %86, label %87, label %187

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %80, i64 12, i1 false) #17
  store i64 %84, i64* %72, align 8
  store i32 %89, i32* %78, align 8
  %91 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %67, i64 0, i32 0, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* %83, align 8
  %94 = icmp slt i64 %93, %92
  br i1 %94, label %95, label %187

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %90, i64 12, i1 false) #17
  store i64 %92, i64* %83, align 8
  store i32 %97, i32* %88, align 8
  %99 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = load i64, i64* %91, align 8
  %102 = icmp slt i64 %101, %100
  br i1 %102, label %103, label %187

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %98, i64 12, i1 false) #17
  store i64 %100, i64* %91, align 8
  store i32 %105, i32* %96, align 8
  br label %187

107:                                              ; preds = %3
  %108 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2
  %109 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1
  %110 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 0, i32 0, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %109, i64 0, i32 0, i32 0, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp slt i64 %113, %111
  %115 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %108, i64 0, i32 0, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = icmp slt i64 %116, %113
  br i1 %114, label %131, label %118

118:                                              ; preds = %107
  br i1 %117, label %119, label %145

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1, i32 1
  %121 = load i32, i32* %120, align 8
  %122 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %109 to i8*
  %123 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 8 %123, i64 12, i1 false) #17
  store i64 %113, i64* %115, align 8
  %124 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2, i32 1
  store i32 %121, i32* %124, align 8
  %125 = load i64, i64* %112, align 8
  %126 = icmp slt i64 %125, %111
  br i1 %126, label %127, label %145

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %122, i64 12, i1 false) #17
  store i64 %111, i64* %112, align 8
  store i32 %129, i32* %120, align 8
  br label %145

131:                                              ; preds = %107
  %132 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0 to i8*
  br i1 %117, label %135, label %138

135:                                              ; preds = %131
  %136 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %136, i64 12, i1 false) #17
  store i64 %111, i64* %115, align 8
  %137 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2, i32 1
  store i32 %133, i32* %137, align 8
  br label %145

138:                                              ; preds = %131
  %139 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %139, i64 12, i1 false) #17
  store i64 %111, i64* %112, align 8
  %140 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 1, i32 1
  store i32 %133, i32* %140, align 8
  %141 = icmp slt i64 %116, %111
  br i1 %141, label %142, label %145

142:                                              ; preds = %138
  %143 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %143, i64 12, i1 false) #17
  store i64 %111, i64* %115, align 8
  %144 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 2, i32 1
  store i32 %133, i32* %144, align 8
  br label %145

145:                                              ; preds = %118, %119, %127, %135, %138, %142
  %146 = phi i64 [ %116, %118 ], [ %113, %119 ], [ %113, %127 ], [ %111, %135 ], [ %116, %138 ], [ %111, %142 ]
  %147 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %0, i64 3
  %148 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %147, %1
  br i1 %148, label %187, label %149

149:                                              ; preds = %145, %181
  %150 = phi i64 [ %183, %181 ], [ %146, %145 ]
  %151 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %179, %181 ], [ %147, %145 ]
  %152 = phi i32 [ %178, %181 ], [ 0, %145 ]
  %153 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %151, %181 ], [ %108, %145 ]
  %154 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %151, i64 0, i32 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp slt i64 %155, %150
  br i1 %156, label %157, label %177

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %151, i64 0, i32 1
  %159 = load i32, i32* %158, align 8
  br label %160

160:                                              ; preds = %166, %157
  %161 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %151, %157 ], [ %162, %166 ]
  %162 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %153, %157 ], [ %167, %166 ]
  %163 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %161 to i8*
  %164 = bitcast %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %162 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %163, i8* align 8 %164, i64 12, i1 false)
  %165 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %162, %0
  br i1 %165, label %171, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %162, i64 -1
  %168 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load i64, i64* %168, align 8
  %170 = icmp slt i64 %155, %169
  br i1 %170, label %160, label %171

171:                                              ; preds = %160, %166
  %172 = phi %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* [ %0, %160 ], [ %162, %166 ]
  %173 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %172, i64 0, i32 0, i32 0, i32 0
  store i64 %155, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %172, i64 0, i32 1
  store i32 %159, i32* %174, align 8
  %175 = add i32 %152, 1
  %176 = icmp eq i32 %175, 8
  br i1 %176, label %184, label %177

177:                                              ; preds = %171, %149
  %178 = phi i32 [ %175, %171 ], [ %152, %149 ]
  %179 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %151, i64 1
  %180 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %179, %1
  br i1 %180, label %187, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %151, i64 0, i32 0, i32 0, i32 0
  %183 = load i64, i64* %182, align 8
  br label %149

184:                                              ; preds = %171
  %185 = getelementptr inbounds %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy", %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %151, i64 1
  %186 = icmp eq %"struct.base::HangWatcher::WatchStateSnapShot::WatchStateCopy"* %185, %1
  br label %187

187:                                              ; preds = %177, %184, %145, %103, %95, %87, %77, %66, %58, %53, %50, %42, %33, %32, %8, %15, %3, %3, %61
  %188 = phi i1 [ true, %61 ], [ true, %3 ], [ true, %3 ], [ true, %15 ], [ true, %8 ], [ true, %32 ], [ true, %33 ], [ true, %42 ], [ true, %50 ], [ true, %53 ], [ true, %58 ], [ true, %66 ], [ true, %77 ], [ true, %87 ], [ true, %95 ], [ true, %103 ], [ true, %145 ], [ %186, %184 ], [ true, %177 ]
  ret i1 %188
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #7

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #13

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEEEFvS5_EE3RunEPNS0_13BindStateBaseES5_(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.base::HangWatcher"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.base::HangWatcher"*, i32)**
  %22 = load void (%"class.base::HangWatcher"*, i32)*, void (%"class.base::HangWatcher"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.base::HangWatcher"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.base::HangWatcher"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.base::HangWatcher"* %13, i32 %1) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE5clearEv(%"class.std::__1::__vector_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr"* %5, %3
  br i1 %6, label %25, label %7

7:                                                ; preds = %1, %23
  %8 = phi %"class.std::__1::unique_ptr"* [ %9, %23 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %10, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %10, align 8
  %12 = icmp eq %"class.base::internal::HangWatchState"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %7
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20, !prof !2

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %20

20:                                               ; preds = %19, %16, %13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %21 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %21) #17
  %22 = bitcast %"class.base::internal::HangWatchState"* %11 to i8*
  tail call void @_ZdlPv(i8* %22) #18
  br label %23

23:                                               ; preds = %20, %7
  %24 = icmp eq %"class.std::__1::unique_ptr"* %9, %3
  br i1 %24, label %25, label %7

25:                                               ; preds = %23, %1
  store %"class.std::__1::unique_ptr"* %3, %"class.std::__1::unique_ptr"** %4, align 8
  ret void
}

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #15 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #19
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 1152921504606846975
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.20"** %10 to %"class.std::__1::__compressed_pair.17"**
  store %"class.std::__1::__compressed_pair.17"* %4, %"class.std::__1::__compressed_pair.17"** %31, align 8
  br label %41

32:                                               ; preds = %23
  %33 = ashr exact i64 %27, 2
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"class.std::__1::unique_ptr"* null, %"class.std::__1::unique_ptr"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.20"** %10 to %"class.std::__1::__compressed_pair.17"**
  store %"class.std::__1::__compressed_pair.17"* %4, %"class.std::__1::__compressed_pair.17"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %32
  %39 = icmp ugt i64 %35, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #19
  unreachable

41:                                               ; preds = %30, %38
  %42 = phi i64 [ 2305843009213693951, %30 ], [ %35, %38 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #18
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr"*
  br label %46

46:                                               ; preds = %32, %41
  %47 = phi i64 [ %42, %41 ], [ 0, %32 ]
  %48 = phi %"class.std::__1::unique_ptr"* [ %45, %41 ], [ null, %32 ]
  store %"class.std::__1::unique_ptr"* %48, %"class.std::__1::unique_ptr"** %6, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %18
  store %"class.std::__1::unique_ptr"* %49, %"class.std::__1::unique_ptr"** %7, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 %47
  store %"class.std::__1::unique_ptr"* %50, %"class.std::__1::unique_ptr"** %9, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %51, align 8
  %54 = bitcast %"class.std::__1::unique_ptr"* %49 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 1
  store %"class.std::__1::unique_ptr"* %55, %"class.std::__1::unique_ptr"** %8, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %56, align 8
  %58 = ptrtoint %"class.std::__1::unique_ptr"* %57 to i64
  %59 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr"* %59, %57
  br i1 %60, label %88, label %61

61:                                               ; preds = %46
  %62 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 -1, i32 0, i32 0, i32 0
  %63 = ptrtoint %"class.base::internal::HangWatchState"** %62 to i64
  %64 = sub i64 %63, %58
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 3
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %83, label %69

69:                                               ; preds = %61, %69
  %70 = phi %"class.std::__1::unique_ptr"* [ %80, %69 ], [ %49, %61 ]
  %71 = phi %"class.std::__1::unique_ptr"* [ %74, %69 ], [ %59, %61 ]
  %72 = phi i64 [ %81, %69 ], [ %67, %61 ]
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %70, i64 -1
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %71, i64 -1
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %79, i64 -1
  store %"class.std::__1::unique_ptr"* %80, %"class.std::__1::unique_ptr"** %7, align 8
  %81 = add i64 %72, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %69, !llvm.loop !21

83:                                               ; preds = %69, %61
  %84 = phi %"class.std::__1::unique_ptr"* [ undef, %61 ], [ %80, %69 ]
  %85 = phi %"class.std::__1::unique_ptr"* [ %49, %61 ], [ %80, %69 ]
  %86 = phi %"class.std::__1::unique_ptr"* [ %59, %61 ], [ %74, %69 ]
  %87 = icmp ult i64 %64, 24
  br i1 %87, label %129, label %93

88:                                               ; preds = %46
  %89 = insertelement <2 x %"class.std::__1::unique_ptr"*> undef, %"class.std::__1::unique_ptr"* %55, i32 0
  %90 = insertelement <2 x %"class.std::__1::unique_ptr"*> %89, %"class.std::__1::unique_ptr"* %50, i32 1
  %91 = ptrtoint <2 x %"class.std::__1::unique_ptr"*> %90 to <2 x i64>
  %92 = ptrtoint %"class.std::__1::unique_ptr"* %59 to i64
  br label %135

93:                                               ; preds = %83, %93
  %94 = phi %"class.std::__1::unique_ptr"* [ %127, %93 ], [ %85, %83 ]
  %95 = phi %"class.std::__1::unique_ptr"* [ %121, %93 ], [ %86, %83 ]
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 -1
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 -1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 -1
  store %"class.std::__1::unique_ptr"* %103, %"class.std::__1::unique_ptr"** %7, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %102, i64 -2
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 -2
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %108, i64* %109, align 8
  %110 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 -1
  store %"class.std::__1::unique_ptr"* %111, %"class.std::__1::unique_ptr"** %7, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 -2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 -3
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -1
  store %"class.std::__1::unique_ptr"* %119, %"class.std::__1::unique_ptr"** %7, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 -2
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 -4
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %122, align 8
  %125 = bitcast %"class.std::__1::unique_ptr"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %7, align 8
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 -1
  store %"class.std::__1::unique_ptr"* %127, %"class.std::__1::unique_ptr"** %7, align 8
  %128 = icmp eq %"class.std::__1::unique_ptr"* %121, %57
  br i1 %128, label %129, label %93

129:                                              ; preds = %93, %83
  %130 = phi %"class.std::__1::unique_ptr"* [ %84, %83 ], [ %127, %93 ]
  %131 = load i64, i64* %15, align 8
  %132 = load i64, i64* %12, align 8
  %133 = bitcast %"class.std::__1::unique_ptr"** %8 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  br label %135

135:                                              ; preds = %88, %129
  %136 = phi i64 [ %92, %88 ], [ %132, %129 ]
  %137 = phi %"class.std::__1::unique_ptr"* [ %49, %88 ], [ %130, %129 ]
  %138 = phi i64 [ %58, %88 ], [ %131, %129 ]
  %139 = phi <2 x i64> [ %91, %88 ], [ %134, %129 ]
  %140 = bitcast %"class.std::__1::unique_ptr"** %8 to i64*
  %141 = bitcast %"class.std::__1::unique_ptr"** %9 to i64*
  %142 = ptrtoint %"class.std::__1::unique_ptr"* %137 to i64
  %143 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  store i64 %142, i64* %15, align 8
  store i64 %138, i64* %143, align 8
  store i64 %136, i64* %140, align 8
  %144 = load i64, i64* %25, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"** %11 to <2 x i64>*
  store <2 x i64> %139, <2 x i64>* %145, align 8
  store i64 %144, i64* %141, align 8
  %146 = bitcast %"struct.std::__1::__split_buffer"* %3 to i64*
  store i64 %138, i64* %146, align 8
  %147 = inttoptr i64 %138 to %"class.std::__1::unique_ptr"*
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE17__destruct_at_endEPS7_(%"struct.std::__1::__split_buffer"* nonnull %3, %"class.std::__1::unique_ptr"* %147) #17
  %148 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %6, align 8
  %149 = icmp eq %"class.std::__1::unique_ptr"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %135
  %151 = bitcast %"class.std::__1::unique_ptr"* %148 to i8*
  call void @_ZdlPv(i8* %151) #18
  br label %152

152:                                              ; preds = %135, %150
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #17
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE17__destruct_at_endEPS7_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, %1
  br i1 %5, label %25, label %6

6:                                                ; preds = %2, %22
  %7 = phi %"class.std::__1::unique_ptr"* [ %23, %22 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 -1
  store %"class.std::__1::unique_ptr"* %8, %"class.std::__1::unique_ptr"** %3, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %9, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %9, align 8
  %11 = icmp eq %"class.base::internal::HangWatchState"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %19

19:                                               ; preds = %18, %15, %12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %20 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #17
  %21 = bitcast %"class.base::internal::HangWatchState"* %10 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %19, %6
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr"* %23, %1
  br i1 %24, label %25, label %6

25:                                               ; preds = %22, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.base::HangWatcher"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.base::HangWatcher"*)**
  %21 = load void (%"class.base::HangWatcher"*)*, void (%"class.base::HangWatcher"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.base::HangWatcher"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.base::HangWatcher"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.base::HangWatcher"* %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4base8internal14HangWatchStateENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE17__destruct_at_endEPS7_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %4, %1
  br i1 %5, label %24, label %6

6:                                                ; preds = %2, %22
  %7 = phi %"class.std::__1::unique_ptr"* [ %8, %22 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 -1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::HangWatchState"*, %"class.base::internal::HangWatchState"** %9, align 8
  store %"class.base::internal::HangWatchState"* null, %"class.base::internal::HangWatchState"** %9, align 8
  %11 = icmp eq %"class.base::internal::HangWatchState"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !2

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  store i64 0, i64* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to i64*), align 8
  tail call void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), void (i8*)* null) #17
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state) #17
  br label %19

19:                                               ; preds = %18, %15, %12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* bitcast (%"class.base::NoDestructor"* @_ZZN4base8internal14HangWatchState33GetHangWatchStateForCurrentThreadEvE16hang_watch_state to %"class.base::ThreadLocalStorage::Slot"*), i8* null) #17
  %20 = getelementptr inbounds %"class.base::internal::HangWatchState", %"class.base::internal::HangWatchState"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %20) #17
  %21 = bitcast %"class.base::internal::HangWatchState"* %10 to i8*
  tail call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %19, %6
  %23 = icmp eq %"class.std::__1::unique_ptr"* %8, %1
  br i1 %23, label %24, label %6

24:                                               ; preds = %22, %2
  store %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"** %3, align 8
  ret void
}

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4SlotC1EPFvPvE(%"class.base::ThreadLocalStorage::Slot"*, void (i8*)*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base13BindRepeatingIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13BindRepeatingIMNS_11HangWatcherEFvNS_22MemoryPressureListener19MemoryPressureLevelEEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMNS_11HangWatcherEFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMNS_11HangWatcherEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMNS_11HangWatcherEFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_S6_"}
!21 = distinct !{!21, !12}
