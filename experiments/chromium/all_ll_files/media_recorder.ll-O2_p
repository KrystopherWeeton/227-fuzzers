; ModuleID = '../../third_party/blink/renderer/modules/mediarecorder/media_recorder.cc'
source_filename = "../../third_party/blink/renderer/modules/mediarecorder/media_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.385", i32, [4 x i8], %"class.std::__1::unique_ptr.523", %"class.std::__1::unique_ptr.523", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.534", %"class.std::__1::unique_ptr.540", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.552", %"class.std::__1::unique_ptr.558", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.565", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.388", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.412", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.443", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.503", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__atomic_base.423" }
%"struct.std::__1::__atomic_base.423" = type { %"struct.std::__1::__cxx_atomic_impl.424" }
%"struct.std::__1::__cxx_atomic_impl.424" = type { %"struct.std::__1::__cxx_atomic_base_impl.425" }
%"struct.std::__1::__cxx_atomic_base_impl.425" = type { i64 }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::Worklist.432"* }
%"class.blink::Worklist.432" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::Worklist.439"* }
%"class.blink::Worklist.439" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.blink::Worklist.446"* }
%"class.blink::Worklist.446" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::Worklist.453"* }
%"class.blink::Worklist.453" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::Worklist.460"* }
%"class.blink::Worklist.460" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::Worklist.467"* }
%"class.blink::Worklist.467" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::Worklist.474"* }
%"class.blink::Worklist.474" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.421" }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.481", %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.496", [4 x i8] }>
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483", %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { i64 }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { float }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.506", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.523" = type { %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { %"struct.std::__1::pair.533"*, i32, i32 }
%"struct.std::__1::pair.533" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.546" }
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.432"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.439"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.446"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.453"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.460"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.569", i64 }
%"class.std::__1::vector.569" = type { %"class.std::__1::__vector_base.570" }
%"class.std::__1::__vector_base.570" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.571" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.564 }
%class.scoped_refptr.564 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.565" = type { %"struct.std::__1::__atomic_base.566" }
%"struct.std::__1::__atomic_base.566" = type { %"struct.std::__1::__cxx_atomic_impl.567" }
%"struct.std::__1::__cxx_atomic_impl.567" = type { %"struct.std::__1::__cxx_atomic_base_impl.568" }
%"struct.std::__1::__cxx_atomic_base_impl.568" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.576", i32, i32, %"class.blink::Persistent.578" }
%"class.WTF::RefCounted.576" = type { %"class.base::RefCounted.577" }
%"class.base::RefCounted.577" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.578" = type { %"class.blink::PersistentBase.579" }
%"class.blink::PersistentBase.579" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.582" }
%"class.blink::HeapHashMap.582" = type { %"class.WTF::HashMap.585" }
%"class.WTF::HashMap.585" = type { %"class.WTF::HashTable.586" }
%"class.WTF::HashTable.586" = type <{ %"struct.WTF::KeyValuePair.588"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.588" = type { %"class.blink::WeakMember.589", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.144" }
%"struct.std::__1::atomic.144" = type { %"struct.std::__1::__atomic_base.145" }
%"struct.std::__1::__atomic_base.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i32 }
%"class.blink::MediaRecorder" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.13", %"class.WTF::String", i32, i32, i32, i8, %"class.std::__1::unique_ptr.15", %"class.blink::Member.26", %"class.blink::HeapVector.251" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::MediaStream"* }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::BlobData"* }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.18", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::MediaRecorderHandler"* }
%"class.blink::MediaRecorderHandler" = type { i8, i32, i32, %"struct.blink::VideoTrackRecorder::CodecProfile", i32, i32, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.35", i8, i8, %"class.blink::Member.40", %"class.blink::HeapVector.46", %"class.blink::HeapVector.46", %"class.blink::Member.200", %"class.WTF::Vector.202", %"class.WTF::Vector.208", %"class.std::__1::unique_ptr.214", %class.scoped_refptr.249 }
%"struct.blink::VideoTrackRecorder::CodecProfile" = type <{ i32, %"class.absl::optional", %"class.absl::optional.30", [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { i32 }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::MediaStreamDescriptor"* }
%"class.blink::MediaStreamDescriptor" = type <{ %"class.blink::Member.44", %"class.WTF::String", i32, [4 x i8], %"class.blink::HeapVector.46", %"class.blink::HeapVector.46", %"class.WTF::Vector.195", i8, [7 x i8] }>
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::MediaStreamDescriptorClient"* }
%"class.blink::MediaStreamDescriptorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.WTF::Vector.195" = type { %"class.WTF::VectorBuffer.196" }
%"class.WTF::VectorBuffer.196" = type { %"class.WTF::VectorBufferBase.197" }
%"class.WTF::VectorBufferBase.197" = type { %"class.blink::WebMediaStreamObserver"**, i32, i32 }
%"class.blink::WebMediaStreamObserver" = type opaque
%"class.blink::HeapVector.46" = type { %"class.WTF::Vector.49" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"class.blink::Member.52"*, i32, i32 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::MediaStreamComponent"* }
%"class.blink::MediaStreamComponent" = type { %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::MediaStreamComponent::AudioSourceProviderImpl", %"class.blink::Member.59", %"class.WTF::String", i32, i8, i8, i32, %"class.blink::MediaConstraints", %"class.std::__1::unique_ptr.188" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::MediaStreamComponent::AudioSourceProviderImpl" = type { %"class.blink::AudioSourceProvider", %"class.blink::WebAudioSourceProvider"*, %"class.WTF::Mutex", %"class.blink::WebVector" }
%"class.blink::AudioSourceProvider" = type { i32 (...)** }
%"class.blink::WebAudioSourceProvider" = type opaque
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { float** }
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::MediaStreamSource"* }
%"class.blink::MediaStreamSource" = type <{ %"class.blink::ThreadState::PrefinalizerRegistration.63", [7 x i8], %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", i8, [3 x i8], i32, i8, [7 x i8], %"class.blink::HeapHashSet.64", %"class.WTF::Mutex", %"class.WTF::HashSet.71", %"class.std::__1::unique_ptr.75", %"class.blink::MediaConstraints", %"struct.blink::MediaStreamSource::Capabilities", %"class.absl::optional.178", %"class.absl::optional.183", %"class.absl::optional.183", [4 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.63" = type { i8 }
%"class.blink::HeapHashSet.64" = type { %"class.WTF::HashSet.67" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"class.blink::WeakMember.70"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.70" = type opaque
%"class.WTF::HashSet.71" = type { %"class.WTF::HashTable.72" }
%"class.WTF::HashTable.72" = type <{ %"class.blink::AudioDestinationConsumer"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioDestinationConsumer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::WebPlatformMediaStreamSource"* }
%"class.blink::WebPlatformMediaStreamSource" = type { i32 (...)**, %"struct.blink::MediaStreamDevice", %"class.base::OnceCallback", %"class.blink::WebPrivatePtr" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional.84", %"class.absl::optional.84", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.101", %"class.absl::optional.138" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.80 }
%union.anon.80 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.89", i32, %"class.absl::optional.96" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.91" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.96" = type { %"class.absl::optional_internal::optional_data.97" }
%"class.absl::optional_internal::optional_data.97" = type { %"class.absl::optional_internal::optional_data_base.98" }
%"class.absl::optional_internal::optional_data_base.98" = type { %"class.absl::optional_internal::optional_data_dtor_base.99" }
%"class.absl::optional_internal::optional_data_dtor_base.99" = type { i8, %union.anon.100 }
%union.anon.100 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.mojo::StructPtr.106" }
%"class.mojo::StructPtr.106" = type { %"class.std::__1::unique_ptr.107" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.110" }
%"class.mojo::StructPtr.110" = type { %"class.std::__1::unique_ptr.111" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.119" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.114" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.122 }
%union.anon.122 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::UnguessableToken" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.144" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"struct.blink::MediaStreamSource::Capabilities" = type { %"class.WTF::Vector.153", %"class.WTF::Vector.153", %"class.WTF::Vector.158", %"class.WTF::Vector.158", %"class.WTF::Vector.163", %"class.WTF::Vector.168", %"class.WTF::Vector.163", %"class.WTF::Vector.163", %"class.WTF::Vector.173", %"class.WTF::Vector.173", %"class.WTF::Vector.173", %"class.WTF::Vector.158", i32, %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.153" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { i32*, i32, i32 }
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.163" = type { %"class.WTF::VectorBuffer.164" }
%"class.WTF::VectorBuffer.164" = type { %"class.WTF::VectorBufferBase.165" }
%"class.WTF::VectorBufferBase.165" = type { i8*, i32, i32 }
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { i32*, i32, i32 }
%"class.WTF::Vector.158" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160" }
%"class.WTF::VectorBufferBase.160" = type { double*, i32, i32 }
%"class.absl::optional.178" = type { %"class.absl::optional_internal::optional_data.179" }
%"class.absl::optional_internal::optional_data.179" = type { %"class.absl::optional_internal::optional_data_base.180" }
%"class.absl::optional_internal::optional_data_base.180" = type { %"class.absl::optional_internal::optional_data_dtor_base.181" }
%"class.absl::optional_internal::optional_data_dtor_base.181" = type { i8, %union.anon.182 }
%union.anon.182 = type { i32 }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { i8 }
%"class.blink::MediaConstraints" = type { %"class.blink::WebPrivatePtr.152" }
%"class.blink::WebPrivatePtr.152" = type { i8* }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::MediaStreamTrackPlatform"* }
%"class.blink::MediaStreamTrackPlatform" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::MediaRecorder"* }
%"class.WTF::Vector.202" = type { %"class.WTF::VectorBuffer.203" }
%"class.WTF::VectorBuffer.203" = type { %"class.WTF::VectorBufferBase.204" }
%"class.WTF::VectorBufferBase.204" = type { %"class.std::__1::unique_ptr.205"*, i32, i32 }
%"class.std::__1::unique_ptr.205" = type opaque
%"class.WTF::Vector.208" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"class.std::__1::unique_ptr.211"*, i32, i32 }
%"class.std::__1::unique_ptr.211" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.media::WebmMuxer"* }
%"class.media::WebmMuxer" = type { i32, i32, i8, i8, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.std::__1::unique_ptr.217", %"class.base::TimeDelta", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.std::__1::unique_ptr.223", %"class.mkvmuxer::Segment", i8, %"class.base::circular_deque", %"class.base::circular_deque" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.base::ElapsedTimer"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.media::WebmMuxer::Delegate"* }
%"class.media::WebmMuxer::Delegate" = type { %"class.mkvmuxer::IMkvWriter", %"class.base::internal::CheckedNumeric", %"class.base::TimeTicks" }
%"class.mkvmuxer::IMkvWriter" = type { i32 (...)** }
%"class.base::internal::CheckedNumeric" = type { %"class.base::internal::CheckedNumericState" }
%"class.base::internal::CheckedNumericState" = type { i8, i64 }
%"class.mkvmuxer::Segment" = type { i32, [4 x i8], %"class.mkvmuxer::Cues", %"class.mkvmuxer::SeekHead", %"class.mkvmuxer::SegmentInfo", %"class.mkvmuxer::Tracks", %"class.mkvmuxer::Chapters", %"class.mkvmuxer::Tags", i32, i8*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, %"class.mkvmuxer::MkvWriter"*, i8, i8*, i64, %"class.mkvmuxer::Cluster"**, i32, i32, i32, i64, i8, %"class.mkvmuxer::Frame"**, i32, i32, i8, i8, i64, i64, [126 x i64], [126 x i64], i64, i64, i32, i8, i8, i8, i8, i8, i32, i64, i64, i32, i32, double, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"*, %"class.mkvmuxer::IMkvWriter"* }
%"class.mkvmuxer::Cues" = type <{ i32, i32, %"class.mkvmuxer::CuePoint"**, i8, [7 x i8] }>
%"class.mkvmuxer::CuePoint" = type <{ i64, i64, i64, i64, i8, [7 x i8] }>
%"class.mkvmuxer::SeekHead" = type { [5 x i32], [5 x i64], i64 }
%"class.mkvmuxer::SegmentInfo" = type { double, i8*, i64, i8*, i64, i64 }
%"class.mkvmuxer::Tracks" = type <{ %"class.mkvmuxer::Track"**, i32, i8, [3 x i8] }>
%"class.mkvmuxer::Track" = type <{ i32 (...)**, i8*, i8*, i8*, i64, i8*, i64, i64, i64, i64, i64, i64, i64, %"class.mkvmuxer::ContentEncoding"**, i32, [4 x i8] }>
%"class.mkvmuxer::ContentEncoding" = type { i64, i8*, i64, i64, i64, %"class.mkvmuxer::ContentEncAESSettings", i64 }
%"class.mkvmuxer::ContentEncAESSettings" = type { i64 }
%"class.mkvmuxer::Chapters" = type { i32, i32, %"class.mkvmuxer::Chapter"* }
%"class.mkvmuxer::Chapter" = type { i8*, i64, i64, i64, %"class.mkvmuxer::Chapter::Display"*, i32, i32 }
%"class.mkvmuxer::Chapter::Display" = type { i8*, i8*, i8* }
%"class.mkvmuxer::Tags" = type { i32, i32, %"class.mkvmuxer::Tag"* }
%"class.mkvmuxer::Tag" = type { %"class.mkvmuxer::Tag::SimpleTag"*, i32, i32 }
%"class.mkvmuxer::Tag::SimpleTag" = type { i8*, i8* }
%"class.mkvmuxer::MkvWriter" = type opaque
%"class.mkvmuxer::Cluster" = type { i32, i8, i8, i8, i64, i64, i64, i64, i64, i8, %"class.std::__1::map", %"class.std::__1::map.237", %"class.mkvmuxer::IMkvWriter"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.229", %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::map.237" = type { %"class.std::__1::__tree.238" }
%"class.std::__1::__tree.238" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.mkvmuxer::Frame" = type <{ i64, i8*, i64, i64, i8, [7 x i8], i8*, i8, [7 x i8], i64, i64, i64, i64, i64, i8, [7 x i8] }>
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"struct.media::WebmMuxer::EncodedFrame"*, i64 }
%"struct.media::WebmMuxer::EncodedFrame" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.base::TimeDelta", i8, [7 x i8] }>
%class.scoped_refptr.249 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.250" }>
%"class.base::RefCountedThreadSafe.250" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::HeapVector.251" = type { %"class.WTF::Vector.254" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::Member.257"*, i32, i32 }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.264", %"class.blink::Member.264", %"class.blink::Member.266", %"class.blink::Member.268", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.259" }
%"class.absl::optional.259" = type { %"class.absl::optional_internal::optional_data.260" }
%"class.absl::optional_internal::optional_data.260" = type { %"class.absl::optional_internal::optional_data_base.261" }
%"class.absl::optional_internal::optional_data_base.261" = type { %"class.absl::optional_internal::optional_data_dtor_base.262" }
%"class.absl::optional_internal::optional_data_dtor_base.262" = type { i8, %union.anon.263 }
%union.anon.263 = type { i64 }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::Event"* }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.329", i32, i8, [3 x i8], %"class.blink::HeapVector.331", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.339", %"class.blink::Member.341", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.350", %"class.blink::Member.356", %"class.blink::Member.358", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.300" }
%"class.WTF::HashTable.300" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.302" }
%"class.blink::Supplementable.302" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.303" }
%"class.blink::HeapHashMap.303" = type { %"class.WTF::HashMap.306" }
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.309" = type { i8*, %"class.blink::Member.675" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.677" }
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.310, %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.318", %"class.blink::Member.324", i32, [4 x i8], %"class.WTF::HashSet.325", i32, i32 }
%class.scoped_refptr.310 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.114", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.311 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.311 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.325" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.331" = type { %"class.WTF::Vector.334" }
%"class.WTF::Vector.334" = type { %"class.WTF::VectorBuffer.335" }
%"class.WTF::VectorBuffer.335" = type { %"class.WTF::VectorBufferBase.336" }
%"class.WTF::VectorBufferBase.336" = type { %"class.blink::Member.337"*, i32, i32 }
%"class.blink::Member.337" = type opaque
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.343", i32, i32 }
%"class.blink::HeapHashMap.343" = type { %"class.WTF::HashMap.346" }
%"class.WTF::HashMap.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"struct.WTF::KeyValuePair.349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.349" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::MediaStream" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextClient", %"class.blink::ActiveScriptWrappable.273", %"class.blink::MediaStreamDescriptorClient", %"class.blink::HeapVector.274", %"class.blink::HeapVector.274", %"class.blink::Member.40", %"class.blink::HeapHashSet.282", %"class.base::OnceCallback.289", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.251", i32, [4 x i8] }>
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.271" }
%"class.blink::WeakMember.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::ActiveScriptWrappable.273" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::HeapVector.274" = type { %"class.WTF::Vector.277" }
%"class.WTF::Vector.277" = type { %"class.WTF::VectorBuffer.278" }
%"class.WTF::VectorBuffer.278" = type { %"class.WTF::VectorBufferBase.279" }
%"class.WTF::VectorBufferBase.279" = type { %"class.blink::Member.280"*, i32, i32 }
%"class.blink::Member.280" = type { %"class.blink::MemberBase.657" }
%"class.blink::MemberBase.657" = type { %"class.blink::MediaStreamTrack"* }
%"class.blink::MediaStreamTrack" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.658", %"class.blink::MediaStreamSource::Observer", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", i32, [4 x i8], %"class.blink::HeapHashSet.660", i8, %"class.blink::Member.52", %"class.blink::Member.666", %"class.blink::WeakMember.271", %"class.blink::HeapHashSet.668" }
%"class.blink::ActiveScriptWrappable.658" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::MediaStreamSource::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.659 }
%class.scoped_refptr.659 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.291", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.292" }
%"struct.std::__1::atomic.292" = type { %"struct.std::__1::__atomic_base.293" }
%"struct.std::__1::__atomic_base.293" = type { %"struct.std::__1::__atomic_base.294" }
%"struct.std::__1::__atomic_base.294" = type { %"struct.std::__1::__cxx_atomic_impl.295" }
%"struct.std::__1::__cxx_atomic_impl.295" = type { %"struct.std::__1::__cxx_atomic_base_impl.296" }
%"struct.std::__1::__cxx_atomic_base_impl.296" = type { i8 }
%"class.blink::HeapHashSet.660" = type { %"class.WTF::HashSet.663" }
%"class.WTF::HashSet.663" = type { %"class.WTF::HashTable.664" }
%"class.WTF::HashTable.664" = type <{ %"class.blink::Member.13"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::ImageCapture"* }
%"class.blink::ImageCapture" = type opaque
%"class.blink::HeapHashSet.668" = type { %"class.WTF::HashSet.671" }
%"class.WTF::HashSet.671" = type { %"class.WTF::HashTable.672" }
%"class.WTF::HashTable.672" = type <{ %"class.blink::WeakMember.674"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.674" = type opaque
%"class.blink::HeapHashSet.282" = type { %"class.WTF::HashSet.285" }
%"class.WTF::HashSet.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ %"class.blink::WeakMember.288"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.288" = type opaque
%"class.base::OnceCallback.289" = type { %"class.base::internal::CallbackBase" }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.297", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.249, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.297" = type { %"class.blink::MemberBase.14" }
%"class.blink::MediaRecorderOptions" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.360" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.360" = type { %"class.v8::TracedReference.361" }
%"class.v8::TracedReference.361" = type { %"class.v8::BasicTracedReference.362" }
%"class.v8::BasicTracedReference.362" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::IntegerToStringConverter" = type <{ [13 x i8], [3 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.713" = type { %"class.WTF::StringAppend", %"class.WTF::String" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.365", i8* }
%"class.WTF::StringAppend.365" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.712" = type { %"class.WTF::StringAppend.713", i8* }
%"class.blink::ContentType" = type { %"class.WTF::String" }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.698", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.710", %"class.WTF::Vector.173" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.701", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.WTF::StringTypeAdapter.725" = type <{ i8*, i32, [4 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.366" }
%"class.base::time_internal::TimeBase.366" = type { i64 }
%"class.base::OnceCallback.384" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::MediaRecorder"*, %"class.blink::PersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.250", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent" }
%"class.blink::IdentifiabilityMetricBuilder" = type { %"class.std::__1::vector.373", %"class.ukm::SourceIdObj" }
%"class.std::__1::vector.373" = type { %"class.std::__1::__vector_base.374" }
%"class.std::__1::__vector_base.374" = type { %"struct.blink::IdentifiableSample"*, %"struct.blink::IdentifiableSample"*, %"class.std::__1::__compressed_pair.375" }
%"struct.blink::IdentifiableSample" = type { %"class.blink::IdentifiableSurface", %"class.blink::IdentifiableToken" }
%"class.blink::IdentifiableSurface" = type { i64 }
%"class.blink::IdentifiableToken" = type { i64 }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.blink::IdentifiableSample"* }
%"class.ukm::SourceIdObj" = type { i64 }
%"class.blink::IdentifiabilityStudySettings" = type <{ %"class.std::__1::unique_ptr.367", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::IdentifiabilityStudySettingsProvider"* }
%"class.blink::IdentifiabilityStudySettingsProvider" = type { i32 (...)** }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.381" }
%"class.base::RefCountedThreadSafe.381" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.380 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.380 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobEvent" = type { %"class.blink::Event", %"class.blink::Member.382", double }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::Blob"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.595, %"class.blink::Member.596", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.595 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.598" }
%"class.blink::Persistent.598" = type { %"class.blink::PersistentBase.599" }
%"class.blink::PersistentBase.599" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.600", %"class.blink::Member.602", %"class.blink::Member.600", %"class.blink::Member.600", %"class.blink::Member.604" }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.603" }
%"class.blink::MemberBase.603" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.608", %"class.blink::Member.610", %"class.blink::Member.602", %"class.blink::Member.612", %"class.blink::Member.612", %"class.blink::Member.636", %"class.blink::Member.638", %"class.blink::Member.640", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.645", %"class.blink::HeapVector.647" }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.610" = type { %"class.blink::MemberBase.611" }
%"class.blink::MemberBase.611" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.616" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { %"class.WTF::AtomicString", %"class.blink::Member.623" }
%"class.blink::Member.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.627", i32, %"class.blink::HeapVector.629" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.629" = type { %"class.WTF::Vector.632" }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"class.blink::Member.627"*, i32, i32 }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.642" }
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::HeapHashMap.644"* }
%"class.blink::HeapHashMap.644" = type opaque
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.647" = type { %"class.WTF::Vector.650" }
%"class.WTF::Vector.650" = type { %"class.WTF::VectorBuffer.651" }
%"class.WTF::VectorBuffer.651" = type { %"class.WTF::VectorBufferBase.652" }
%"class.WTF::VectorBufferBase.652" = type { %"class.blink::Member.653"*, i32, i32 }
%"class.blink::Member.653" = type opaque
%"class.blink::Member.600" = type { %"class.blink::MemberBase.601" }
%"class.blink::MemberBase.601" = type { %"class.blink::Node"* }
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.655", i8, [7 x i8] }>
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::EventListener"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.WTF::StringTypeAdapter.727" = type { %"class.WTF::StringTypeAdapter.728" }
%"class.WTF::StringTypeAdapter.728" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HeapVectorBacking.746" = type { i8 }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink13MediaRecorder18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink13MediaRecorder18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_13MediaRecorderEED0Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_16MediaStreamTrackEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16MediaStreamTrackEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_16MediaStreamTrackEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_INS8_IPKcNS7_6StringEEESA_EESB_EESA_EEEEEPS1_DpOT_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_20MediaRecorderHandlerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_20MediaRecorderHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20MediaRecorderHandlerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20MediaRecorderHandlerEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13MediaRecorderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_13MediaRecorderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13MediaRecorderEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10TraceTraitINS_11MediaStreamEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_13MediaRecorderEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13MediaRecorderE = hidden unnamed_addr constant { [32 x i8*], [7 x i8*], [8 x i8*] } { [32 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZN5blink13MediaRecorderD2Ev to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZN5blink13MediaRecorderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::MediaRecorder"*)* @_ZNK5blink13MediaRecorder18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)* @_ZNK5blink13MediaRecorder5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MediaRecorder"*)* @_ZNK5blink13MediaRecorder18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::MediaRecorder"*)* @_ZNK5blink13MediaRecorder13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)* @_ZNK5blink13MediaRecorder19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZN5blink13MediaRecorder16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)* @_ZN5blink13MediaRecorder9WriteDataEPKcmbd to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*, %"class.WTF::String"*)* @_ZN5blink13MediaRecorder7OnErrorERKN3WTF6StringE to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink13MediaRecorder5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZThn72_N5blink13MediaRecorderD1Ev to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZThn72_N5blink13MediaRecorderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink13MediaRecorder5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZThn80_N5blink13MediaRecorderD1Ev to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZThn80_N5blink13MediaRecorderD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::MediaRecorder"*)* @_ZThn80_N5blink13MediaRecorder16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@.str = private unnamed_addr constant [31 x i8] c"Execution context is detached.\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"No MediaRecorder handler can be created.\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"codecs\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Failed to initialize native MediaRecorder the type provided (\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c") is not supported.\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"The MediaRecorder's state is '\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.7 = private unnamed_addr constant [84 x i8] c"The MediaRecorder cannot start becausethere are no audio or video tracks available.\00", align 1
@.str.8 = private unnamed_addr constant [47 x i8] c"There was an error starting the MediaRecorder.\00", align 1
@_ZN5blink16event_type_names6kPauseE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names7kResumeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18event_target_names14kMediaRecorderE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kStartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names14kDataavailableE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names5kStopE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"ScheduleDispatchEvent\00", align 1
@.str.10 = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/modules/mediarecorder/media_recorder.cc\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.14 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.15 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_13MediaRecorderEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_13MediaRecorderEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [36 x i8] c"Clamping calculated audio bitrate (\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"bps) to the maximum (\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"bps)\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"bps) to the minimum (\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"Clamping calculated video bitrate (\00", align 1
@.str.21 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.22 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.24 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16MediaStreamTrackEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MediaStreamTrack>, WTF::VectorTraits<blink::Member<blink::MediaStreamTrack> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.25 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.26 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.27 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"constant\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"inactive\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"recording\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"paused\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"variable\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink13MediaRecorder18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20MediaRecorderHandlerEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaRecorderHandler]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20MediaRecorderHandlerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20MediaRecorderHandlerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20MediaRecorderHandlerEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.33 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.34 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5EventEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [151 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Event>, WTF::VectorTraits<blink::Member<blink::Event> > >]\00", align 1

@_ZN5blink13MediaRecorderC1EPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::MediaRecorder"*, %"class.blink::ExecutionContext"*, %"class.blink::MediaStream"*, %"class.blink::MediaRecorderOptions"*, %"class.blink::ExceptionState"*), void (%"class.blink::MediaRecorder"*, %"class.blink::ExecutionContext"*, %"class.blink::MediaStream"*, %"class.blink::MediaRecorderOptions"*, %"class.blink::ExceptionState"*)* @_ZN5blink13MediaRecorderC2EPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE
@_ZN5blink13MediaRecorderD1Ev = hidden unnamed_addr alias void (%"class.blink::MediaRecorder"*), void (%"class.blink::MediaRecorder"*)* @_ZN5blink13MediaRecorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaRecorder"* @_ZN5blink13MediaRecorder6CreateEPNS_16ExecutionContextEPNS_11MediaStreamERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.blink::MediaStream"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #6
  %5 = bitcast i8* %4 to %"class.blink::MediaRecorderOptions"*
  tail call void @_ZN5blink20MediaRecorderOptionsC1Ev(%"class.blink::MediaRecorderOptions"* %5) #6
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 168) #6
  %11 = bitcast i8* %10 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderC2EPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE(%"class.blink::MediaRecorder"* %11, %"class.blink::ExecutionContext"* %0, %"class.blink::MediaStream"* %1, %"class.blink::MediaRecorderOptions"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #6
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds i8, i8* %10, i64 72
  %17 = bitcast i8* %16 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %17) #6
  ret %"class.blink::MediaRecorder"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaRecorder"* @_ZN5blink13MediaRecorder6CreateEPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.blink::MediaStream"*, %"class.blink::MediaRecorderOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 168) #6
  %6 = bitcast i8* %5 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderC2EPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE(%"class.blink::MediaRecorder"* %6, %"class.blink::ExecutionContext"* %0, %"class.blink::MediaStream"* %1, %"class.blink::MediaRecorderOptions"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #6
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = getelementptr inbounds i8, i8* %5, i64 72
  %12 = bitcast i8* %11 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %12) #6
  ret %"class.blink::MediaRecorder"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorderC2EPNS_16ExecutionContextEPNS_11MediaStreamEPKNS_20MediaRecorderOptionsERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExecutionContext"*, %"class.blink::MediaStream"*, %"class.blink::MediaRecorderOptions"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::StringAppend.713", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::StringAppend.713", align 8
  %11 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %12 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %13 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %14 = alloca %"class.WTF::StringAppend.713", align 8
  %15 = alloca %"class.blink::HeapVector.274", align 8
  %16 = alloca %"class.blink::HeapVector.274", align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.WTF::StringAppend.712", align 8
  %20 = alloca %"class.WTF::StringAppend.713", align 8
  %21 = alloca %"class.WTF::StringAppend", align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %"class.WTF::StringAppend.712", align 8
  %25 = alloca %"class.WTF::StringAppend.713", align 8
  %26 = alloca %"class.WTF::StringAppend", align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca %"class.WTF::StringAppend.712", align 8
  %30 = alloca %"class.WTF::StringAppend.713", align 8
  %31 = alloca %"class.WTF::StringAppend", align 8
  %32 = alloca %"class.blink::ContentType", align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = alloca %"class.WTF::String", align 8
  %37 = alloca %"class.WTF::StringAppend", align 8
  %38 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %38) #6
  %39 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 1
  %41 = bitcast %"class.blink::EventTargetData"* %40 to i8*
  %42 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261) #6
  %43 = bitcast i8* %42 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %43) #6
  %44 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_13MediaRecorderEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 2
  %46 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %45 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"* %46, %"class.blink::ExecutionContext"* %1, i32 0) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %47 = bitcast i32 (...)*** %44 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %47, align 8
  %48 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::MediaStream"* %2, %"class.blink::MediaStream"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 4
  %50 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 8, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %5
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #6
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %59
  tail call void @llvm.trap() #6
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %5, %54, %69
  %72 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 5
  %73 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 6
  %74 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 9
  %75 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10
  %76 = getelementptr inbounds %"class.blink::Member.26", %"class.blink::Member.26"* %75, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 13
  %78 = bitcast i32* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 13, i1 false)
  %79 = bitcast %"class.std::__1::unique_ptr.15"* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 32, i1 false)
  %80 = load i8, i8* %77, align 4, !range !3
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %71
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %1394

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 1
  %85 = bitcast %"class.blink::MojoBindingContext"* %84 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %86 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %85, align 8
  %87 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %86, i64 6
  %88 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %87, align 8
  %89 = tail call %"class.base::SingleThreadTaskRunner"* %88(%"class.blink::MojoBindingContext"* %84, i8 zeroext 30) #6
  %90 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20MediaRecorderHandlerEEEPhm(i64 168) #6
  %91 = bitcast i8* %90 to %"class.blink::MediaRecorderHandler"*
  tail call void @_ZN5blink20MediaRecorderHandlerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::MediaRecorderHandler"* %91, %"class.base::SingleThreadTaskRunner"* %89) #6
  %92 = getelementptr inbounds i8, i8* %90, i64 -4
  %93 = bitcast i8* %92 to i16*
  %94 = load atomic i16, i16* %93 monotonic, align 2
  %95 = or i16 %94, 1
  store atomic i16 %95, i16* %93 release, align 2
  %96 = ptrtoint i8* %90 to i64
  %97 = bitcast %"class.blink::Member.26"* %75 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  %100 = bitcast i8* %90 to %"class.blink::MediaRecorderHandler"*
  br i1 %99, label %104, label %101

101:                                              ; preds = %83
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #6
  %103 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %76, align 8
  br label %104

104:                                              ; preds = %101, %83
  %105 = phi %"class.blink::MediaRecorderHandler"* [ %103, %101 ], [ %100, %83 ]
  %106 = icmp eq %"class.blink::MediaRecorderHandler"* %105, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %1394

108:                                              ; preds = %104
  %109 = bitcast %"class.blink::HeapVector.274"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #6
  %110 = getelementptr inbounds %"class.blink::HeapVector.274", %"class.blink::HeapVector.274"* %15, i64 0, i32 0
  %111 = getelementptr inbounds %"class.blink::MediaStream", %"class.blink::MediaStream"* %2, i64 0, i32 5, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16MediaStreamTrackEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.277"* nonnull %110, %"class.WTF::Vector.277"* dereferenceable(16) %111) #6
  %112 = getelementptr inbounds %"class.blink::HeapVector.274", %"class.blink::HeapVector.274"* %15, i64 0, i32 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #6
  %115 = bitcast %"class.blink::HeapVector.274"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #6
  %116 = getelementptr inbounds %"class.blink::HeapVector.274", %"class.blink::HeapVector.274"* %16, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::MediaStream", %"class.blink::MediaStream"* %2, i64 0, i32 4, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_16MediaStreamTrackEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.277"* nonnull %116, %"class.WTF::Vector.277"* dereferenceable(16) %117) #6
  %118 = getelementptr inbounds %"class.blink::HeapVector.274", %"class.blink::HeapVector.274"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #6
  %121 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 2
  %122 = load i8, i8* %121, align 1, !range !3
  %123 = icmp ne i8 %122, 0
  br i1 %123, label %124, label %129

124:                                              ; preds = %108
  %125 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 7
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %126, 2147483647
  %128 = select i1 %127, i32 %126, i32 2147483647
  br label %129

129:                                              ; preds = %124, %108
  %130 = phi i32 [ %128, %124 ], [ 0, %108 ]
  %131 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 3
  %132 = load i8, i8* %131, align 2, !range !3
  %133 = icmp eq i8 %132, 0
  %134 = or i1 %114, %133
  br i1 %134, label %140, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 9
  %137 = load i32, i32* %136, align 8
  %138 = icmp ult i32 %137, 2147483647
  %139 = select i1 %138, i32 %137, i32 2147483647
  br label %140

140:                                              ; preds = %135, %129
  %141 = phi i32 [ %139, %135 ], [ 0, %129 ]
  %142 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 1
  %143 = load i8, i8* %142, align 8, !range !3
  %144 = icmp eq i8 %143, 0
  %145 = or i1 %120, %144
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 6
  %148 = load i32, i32* %147, align 8
  %149 = icmp ult i32 %148, 2147483647
  %150 = select i1 %149, i32 %148, i32 2147483647
  br label %151

151:                                              ; preds = %146, %140
  %152 = phi i32 [ %150, %146 ], [ 0, %140 ]
  br i1 %120, label %812, label %153

153:                                              ; preds = %151
  %154 = xor i1 %123, true
  %155 = or i1 %114, %154
  %156 = select i1 %123, i32 %130, i32 %152
  %157 = udiv i32 %130, 10
  %158 = select i1 %155, i32 %156, i32 %157
  %159 = or i8 %143, %122
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %812, label %161

161:                                              ; preds = %153
  %162 = icmp ugt i32 %158, 128000
  br i1 %162, label %163, label %480

163:                                              ; preds = %161
  %164 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #6
  store i32 1, i32* %17, align 4
  %165 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %165) #6
  store i32 2, i32* %18, align 4
  %166 = bitcast %"class.WTF::StringAppend.712"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #6
  %167 = bitcast %"class.WTF::StringAppend.713"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #6
  %168 = bitcast %"class.WTF::StringAppend"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #6
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #6
  %170 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 12
  %171 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 2
  %172 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 32, i1 false) #6
  %173 = urem i32 %158, 10
  %174 = trunc i32 %173 to i8
  %175 = or i8 %174, 48
  store i8 %175, i8* %170, align 4
  %176 = udiv i32 %158, 10
  %177 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 11
  %178 = urem i32 %176, 10
  %179 = trunc i32 %178 to i8
  %180 = or i8 %179, 48
  store i8 %180, i8* %177, align 1
  %181 = udiv i32 %158, 100
  %182 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 10
  store i8* %182, i8** %171, align 8
  %183 = urem i32 %181, 10
  %184 = trunc i32 %183 to i8
  %185 = or i8 %184, 48
  store i8 %185, i8* %182, align 2
  %186 = udiv i32 %158, 1000
  %187 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 9
  store i8* %187, i8** %171, align 8
  %188 = urem i32 %186, 10
  %189 = trunc i32 %188 to i8
  %190 = or i8 %189, 48
  store i8 %190, i8* %187, align 1
  br label %191

191:                                              ; preds = %163, %191
  %192 = phi i32 [ %186, %163 ], [ %194, %191 ]
  %193 = load i8*, i8** %171, align 8
  %194 = udiv i32 %192, 10
  %195 = getelementptr inbounds i8, i8* %193, i64 -1
  store i8* %195, i8** %171, align 8
  %196 = urem i32 %194, 10
  %197 = trunc i32 %196 to i8
  %198 = or i8 %197, 48
  store i8 %198, i8* %195, align 1
  %199 = icmp ugt i32 %192, 99
  br i1 %199, label %191, label %200

200:                                              ; preds = %191
  %201 = bitcast i8** %171 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %12, i64 0, i32 0, i64 13
  %204 = ptrtoint i8* %203 to i64
  %205 = sub i64 %204, %202
  %206 = trunc i64 %205 to i32
  store i32 %206, i32* %172, align 8
  %207 = inttoptr i64 %202 to i8*
  %208 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %207, i32 %206) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #6
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %286, label %210

210:                                              ; preds = %200
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %227

217:                                              ; preds = %210
  %218 = zext i32 %216 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #6
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !2

224:                                              ; preds = %217
  call void @llvm.trap() #6
  unreachable

225:                                              ; preds = %217
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %215, align 4
  br label %227

227:                                              ; preds = %225, %210
  %228 = phi i32 [ %226, %225 ], [ %216, %210 ]
  %229 = load atomic i32, i32* %211 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %242

232:                                              ; preds = %227
  %233 = zext i32 %228 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #6
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %240, !prof !2

239:                                              ; preds = %232
  call void @llvm.trap() #6
  unreachable

240:                                              ; preds = %232
  %241 = trunc i33 %236 to i32
  store i32 %241, i32* %215, align 4
  br label %242

242:                                              ; preds = %240, %227
  %243 = phi i32 [ %241, %240 ], [ %228, %227 ]
  %244 = load atomic i32, i32* %211 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %242
  %248 = add i32 %243, -1
  store i32 %248, i32* %215, align 4
  br label %249

249:                                              ; preds = %247, %242
  %250 = phi i32 [ %248, %247 ], [ %243, %242 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %254

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6
  %253 = load i32, i32* %215, align 4
  br label %254

254:                                              ; preds = %252, %249
  %255 = phi i32 [ %253, %252 ], [ %250, %249 ]
  %256 = load atomic i32, i32* %211 monotonic, align 4, !noalias !4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %269

259:                                              ; preds = %254
  %260 = zext i32 %255 to i33
  %261 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %260, i33 1) #6
  %262 = extractvalue { i33, i1 } %261, 1
  %263 = extractvalue { i33, i1 } %261, 0
  %264 = icmp slt i33 %263, 0
  %265 = or i1 %262, %264
  br i1 %265, label %266, label %267, !prof !2

266:                                              ; preds = %259
  call void @llvm.trap() #6, !noalias !4
  unreachable

267:                                              ; preds = %259
  %268 = trunc i33 %263 to i32
  store i32 %268, i32* %215, align 4, !noalias !4
  br label %269

269:                                              ; preds = %267, %254
  %270 = phi i32 [ %268, %267 ], [ %255, %254 ]
  %271 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.16 to i64), i64* %271, align 8, !alias.scope !4
  %272 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %272, align 8, !alias.scope !4
  %273 = load atomic i32, i32* %211 monotonic, align 4, !noalias !4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %290

276:                                              ; preds = %269
  %277 = zext i32 %270 to i33
  %278 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %277, i33 1) #6
  %279 = extractvalue { i33, i1 } %278, 1
  %280 = extractvalue { i33, i1 } %278, 0
  %281 = icmp slt i33 %280, 0
  %282 = or i1 %279, %281
  br i1 %282, label %283, label %284, !prof !2

283:                                              ; preds = %276
  call void @llvm.trap() #6, !noalias !4
  unreachable

284:                                              ; preds = %276
  %285 = trunc i33 %280 to i32
  store i32 %285, i32* %215, align 4, !noalias !4
  br label %290

286:                                              ; preds = %200
  %287 = bitcast %"class.WTF::StringAppend"* %21 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.16 to i64), i64* %287, align 8, !alias.scope !4
  %288 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %288, align 8, !alias.scope !4
  %289 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8** %289, align 8, !alias.scope !4
  br label %302

290:                                              ; preds = %284, %269
  %291 = phi i32 [ %285, %284 ], [ %270, %269 ]
  %292 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8** %292, align 8, !alias.scope !4
  %293 = load atomic i32, i32* %211 monotonic, align 4, !noalias !4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %298

296:                                              ; preds = %290
  %297 = add i32 %291, -1
  store i32 %297, i32* %215, align 4, !noalias !4
  br label %298

298:                                              ; preds = %296, %290
  %299 = phi i32 [ %297, %296 ], [ %291, %290 ]
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %302

301:                                              ; preds = %298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6, !noalias !4
  br label %302

302:                                              ; preds = %301, %298, %286
  %303 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %303) #6
  %304 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 12
  %305 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 2
  %306 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %303, i8 -86, i64 32, i1 false) #6
  store i8 48, i8* %304, align 4
  %307 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 11
  store i8 48, i8* %307, align 1
  %308 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 10
  store i8 48, i8* %308, align 2
  %309 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 9
  store i8 56, i8* %309, align 1
  %310 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 8
  store i8 50, i8* %310, align 8
  %311 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %11, i64 0, i32 0, i64 7
  store i8* %311, i8** %305, align 8
  store i8 49, i8* %311, align 1
  store i32 6, i32* %306, align 8
  %312 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %311, i32 6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %303) #6
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.713"* nonnull sret %20, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %21, %"class.WTF::StringImpl"* %312) #6
  %313 = bitcast %"class.WTF::StringAppend.713"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %313) #6
  %314 = bitcast %"class.WTF::StringAppend.713"* %20 to i64*
  %315 = load i64, i64* %314, align 8, !noalias !7
  %316 = bitcast %"class.WTF::StringAppend.713"* %10 to i64*
  store i64 %315, i64* %316, align 8, !noalias !7
  %317 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8, !noalias !7
  %319 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %319, align 8, !noalias !7
  %320 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %320, label %338, label %321

321:                                              ; preds = %302
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %338

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  %329 = zext i32 %328 to i33
  %330 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %329, i33 1) #6
  %331 = extractvalue { i33, i1 } %330, 1
  %332 = extractvalue { i33, i1 } %330, 0
  %333 = icmp slt i33 %332, 0
  %334 = or i1 %331, %333
  br i1 %334, label %335, label %336, !prof !2

335:                                              ; preds = %326
  call void @llvm.trap() #6
  unreachable

336:                                              ; preds = %326
  %337 = trunc i33 %332 to i32
  store i32 %337, i32* %327, align 4
  br label %338

338:                                              ; preds = %336, %321, %302
  %339 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %10, i64 0, i32 0, i32 1
  %340 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %20, i64 0, i32 0, i32 1
  %341 = bitcast i8** %340 to i64*
  %342 = load i64, i64* %341, align 8, !noalias !7
  %343 = bitcast i8** %339 to i64*
  store i64 %342, i64* %343, align 8, !noalias !7
  %344 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %20, i64 0, i32 1, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8, !noalias !7
  %346 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %10, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"** %346, align 8, !noalias !7
  %347 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %347, label %365, label %348

348:                                              ; preds = %338
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %365

353:                                              ; preds = %348
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = zext i32 %355 to i33
  %357 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %356, i33 1) #6
  %358 = extractvalue { i33, i1 } %357, 1
  %359 = extractvalue { i33, i1 } %357, 0
  %360 = icmp slt i33 %359, 0
  %361 = or i1 %358, %360
  br i1 %361, label %362, label %363, !prof !2

362:                                              ; preds = %353
  call void @llvm.trap() #6
  unreachable

363:                                              ; preds = %353
  %364 = trunc i33 %359 to i32
  store i32 %364, i32* %354, align 4
  br label %365

365:                                              ; preds = %363, %348, %338
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.712"* nonnull %19, %"class.WTF::StringAppend.713"* nonnull byval(%"class.WTF::StringAppend.713") align 8 %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %313) #6
  %366 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_INS8_IPKcNS7_6StringEEESA_EESB_EESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %18, %"class.WTF::StringAppend.712"* nonnull dereferenceable(40) %19) #6
  %367 = bitcast %"class.blink::ExecutionContext"* %1 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %368 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %367, align 8
  %369 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %368, i64 52
  %370 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %369, align 8
  call void %370(%"class.blink::ExecutionContext"* %1, %"class.blink::ConsoleMessage"* %366, i1 zeroext false) #6
  %371 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %372, null
  br i1 %373, label %387, label %374

374:                                              ; preds = %365
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %372) #6
  br label %387

387:                                              ; preds = %386, %383, %365
  %388 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %404, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %391
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %391
  %401 = phi i32 [ %399, %398 ], [ %397, %391 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %389) #6
  br label %404

404:                                              ; preds = %403, %400, %387
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %420, label %407

407:                                              ; preds = %404
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #6
  br label %420

420:                                              ; preds = %419, %416, %404
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %422 = icmp eq %"class.WTF::StringImpl"* %421, null
  br i1 %422, label %436, label %423

423:                                              ; preds = %420
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %425 = load atomic i32, i32* %424 monotonic, align 4
  %426 = and i32 %425, 2
  %427 = icmp eq i32 %426, 0
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %421, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  br i1 %427, label %430, label %432

430:                                              ; preds = %423
  %431 = add i32 %429, -1
  store i32 %431, i32* %428, align 4
  br label %432

432:                                              ; preds = %430, %423
  %433 = phi i32 [ %431, %430 ], [ %429, %423 ]
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %436

435:                                              ; preds = %432
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %421) #6
  br label %436

436:                                              ; preds = %435, %432, %420
  %437 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %438 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %437, align 8
  %439 = icmp eq %"class.WTF::StringImpl"* %438, null
  br i1 %439, label %453, label %440

440:                                              ; preds = %436
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %442 = load atomic i32, i32* %441 monotonic, align 4
  %443 = and i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %438, i64 0, i32 0
  %446 = load i32, i32* %445, align 4
  br i1 %444, label %447, label %449

447:                                              ; preds = %440
  %448 = add i32 %446, -1
  store i32 %448, i32* %445, align 4
  br label %449

449:                                              ; preds = %447, %440
  %450 = phi i32 [ %448, %447 ], [ %446, %440 ]
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %452, label %453

452:                                              ; preds = %449
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %438) #6
  br label %453

453:                                              ; preds = %452, %449, %436
  br i1 %209, label %479, label %454

454:                                              ; preds = %453
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %468

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6
  %467 = load i32, i32* %459, align 4
  br label %468

468:                                              ; preds = %466, %463
  %469 = phi i32 [ %464, %463 ], [ %467, %466 ]
  %470 = load atomic i32, i32* %455 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %475

473:                                              ; preds = %468
  %474 = add i32 %469, -1
  store i32 %474, i32* %459, align 4
  br label %475

475:                                              ; preds = %473, %468
  %476 = phi i32 [ %474, %473 ], [ %469, %468 ]
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %479

478:                                              ; preds = %475
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #6
  br label %479

479:                                              ; preds = %478, %475, %453
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #6
  br label %812

480:                                              ; preds = %161
  %481 = icmp ult i32 %158, 6000
  br i1 %481, label %482, label %812

482:                                              ; preds = %480
  %483 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %483) #6
  store i32 1, i32* %22, align 4
  %484 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %484) #6
  store i32 2, i32* %23, align 4
  %485 = bitcast %"class.WTF::StringAppend.712"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %485) #6
  %486 = bitcast %"class.WTF::StringAppend.713"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %486) #6
  %487 = bitcast %"class.WTF::StringAppend"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %487) #6
  %488 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %488) #6
  %489 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 12
  %490 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %491 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  %492 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %488, i8 -86, i64 32, i1 false) #6
  store i8* %489, i8** %490, align 8
  %493 = trunc i32 %158 to i16
  %494 = urem i16 %493, 10
  %495 = udiv i16 %493, 10
  %496 = trunc i16 %494 to i8
  %497 = or i8 %496, 48
  store i8 %497, i8* %489, align 4
  %498 = icmp ugt i32 %158, 9
  %499 = ptrtoint i8* %489 to i64
  br i1 %498, label %500, label %536

500:                                              ; preds = %482
  %501 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  store i8* %501, i8** %490, align 8
  %502 = urem i16 %495, 10
  %503 = trunc i16 %502 to i8
  %504 = or i8 %503, 48
  store i8 %504, i8* %501, align 1
  %505 = icmp ugt i32 %158, 99
  %506 = ptrtoint i8* %501 to i64
  br i1 %505, label %507, label %536

507:                                              ; preds = %500
  %508 = udiv i16 %493, 100
  %509 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8* %509, i8** %490, align 8
  %510 = trunc i16 %508 to i8
  %511 = urem i8 %510, 10
  %512 = or i8 %511, 48
  store i8 %512, i8* %509, align 2
  %513 = icmp ugt i16 %493, 999
  br i1 %513, label %514, label %522

514:                                              ; preds = %507
  %515 = udiv i16 %493, 1000
  %516 = zext i16 %515 to i32
  %517 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8* %517, i8** %490, align 8
  %518 = urem i32 %516, 10
  %519 = trunc i32 %518 to i8
  %520 = or i8 %519, 48
  store i8 %520, i8* %517, align 1
  %521 = icmp ugt i16 %493, 9999
  br i1 %521, label %524, label %533

522:                                              ; preds = %507
  %523 = ptrtoint i8* %509 to i64
  br label %536

524:                                              ; preds = %514, %524
  %525 = phi i32 [ %527, %524 ], [ %516, %514 ]
  %526 = load i8*, i8** %490, align 8
  %527 = udiv i32 %525, 10
  %528 = getelementptr inbounds i8, i8* %526, i64 -1
  store i8* %528, i8** %490, align 8
  %529 = urem i32 %527, 10
  %530 = trunc i32 %529 to i8
  %531 = or i8 %530, 48
  store i8 %531, i8* %528, align 1
  %532 = icmp ugt i32 %525, 99
  br i1 %532, label %524, label %533

533:                                              ; preds = %524, %514
  %534 = bitcast i8** %490 to i64*
  %535 = load i64, i64* %534, align 8
  br label %536

536:                                              ; preds = %533, %522, %500, %482
  %537 = phi i64 [ %506, %500 ], [ %499, %482 ], [ %535, %533 ], [ %523, %522 ]
  %538 = ptrtoint i8* %492 to i64
  %539 = sub i64 %538, %537
  %540 = trunc i64 %539 to i32
  store i32 %540, i32* %491, align 8
  %541 = inttoptr i64 %537 to i8*
  %542 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %541, i32 %540) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %488) #6
  %543 = icmp eq %"class.WTF::StringImpl"* %542, null
  br i1 %543, label %620, label %544

544:                                              ; preds = %536
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = load atomic i32, i32* %545 monotonic, align 4
  %547 = and i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  %550 = load i32, i32* %549, align 4
  br i1 %548, label %551, label %561

551:                                              ; preds = %544
  %552 = zext i32 %550 to i33
  %553 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %552, i33 1) #6
  %554 = extractvalue { i33, i1 } %553, 1
  %555 = extractvalue { i33, i1 } %553, 0
  %556 = icmp slt i33 %555, 0
  %557 = or i1 %554, %556
  br i1 %557, label %558, label %559, !prof !2

558:                                              ; preds = %551
  call void @llvm.trap() #6
  unreachable

559:                                              ; preds = %551
  %560 = trunc i33 %555 to i32
  store i32 %560, i32* %549, align 4
  br label %561

561:                                              ; preds = %559, %544
  %562 = phi i32 [ %560, %559 ], [ %550, %544 ]
  %563 = load atomic i32, i32* %545 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %576

566:                                              ; preds = %561
  %567 = zext i32 %562 to i33
  %568 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %567, i33 1) #6
  %569 = extractvalue { i33, i1 } %568, 1
  %570 = extractvalue { i33, i1 } %568, 0
  %571 = icmp slt i33 %570, 0
  %572 = or i1 %569, %571
  br i1 %572, label %573, label %574, !prof !2

573:                                              ; preds = %566
  call void @llvm.trap() #6
  unreachable

574:                                              ; preds = %566
  %575 = trunc i33 %570 to i32
  store i32 %575, i32* %549, align 4
  br label %576

576:                                              ; preds = %574, %561
  %577 = phi i32 [ %575, %574 ], [ %562, %561 ]
  %578 = load atomic i32, i32* %545 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %583

581:                                              ; preds = %576
  %582 = add i32 %577, -1
  store i32 %582, i32* %549, align 4
  br label %583

583:                                              ; preds = %581, %576
  %584 = phi i32 [ %582, %581 ], [ %577, %576 ]
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %588

586:                                              ; preds = %583
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #6
  %587 = load i32, i32* %549, align 4
  br label %588

588:                                              ; preds = %586, %583
  %589 = phi i32 [ %587, %586 ], [ %584, %583 ]
  %590 = load atomic i32, i32* %545 monotonic, align 4, !noalias !10
  %591 = and i32 %590, 2
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %603

593:                                              ; preds = %588
  %594 = zext i32 %589 to i33
  %595 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %594, i33 1) #6
  %596 = extractvalue { i33, i1 } %595, 1
  %597 = extractvalue { i33, i1 } %595, 0
  %598 = icmp slt i33 %597, 0
  %599 = or i1 %596, %598
  br i1 %599, label %600, label %601, !prof !2

600:                                              ; preds = %593
  call void @llvm.trap() #6, !noalias !10
  unreachable

601:                                              ; preds = %593
  %602 = trunc i33 %597 to i32
  store i32 %602, i32* %549, align 4, !noalias !10
  br label %603

603:                                              ; preds = %601, %588
  %604 = phi i32 [ %602, %601 ], [ %589, %588 ]
  %605 = bitcast %"class.WTF::StringAppend"* %26 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.16 to i64), i64* %605, align 8, !alias.scope !10
  %606 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %542, %"class.WTF::StringImpl"** %606, align 8, !alias.scope !10
  %607 = load atomic i32, i32* %545 monotonic, align 4, !noalias !10
  %608 = and i32 %607, 2
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %624

610:                                              ; preds = %603
  %611 = zext i32 %604 to i33
  %612 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %611, i33 1) #6
  %613 = extractvalue { i33, i1 } %612, 1
  %614 = extractvalue { i33, i1 } %612, 0
  %615 = icmp slt i33 %614, 0
  %616 = or i1 %613, %615
  br i1 %616, label %617, label %618, !prof !2

617:                                              ; preds = %610
  call void @llvm.trap() #6, !noalias !10
  unreachable

618:                                              ; preds = %610
  %619 = trunc i33 %614 to i32
  store i32 %619, i32* %549, align 4, !noalias !10
  br label %624

620:                                              ; preds = %536
  %621 = bitcast %"class.WTF::StringAppend"* %26 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.16 to i64), i64* %621, align 8, !alias.scope !10
  %622 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %622, align 8, !alias.scope !10
  %623 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %623, align 8, !alias.scope !10
  br label %636

624:                                              ; preds = %618, %603
  %625 = phi i32 [ %619, %618 ], [ %604, %603 ]
  %626 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %626, align 8, !alias.scope !10
  %627 = load atomic i32, i32* %545 monotonic, align 4, !noalias !10
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %632

630:                                              ; preds = %624
  %631 = add i32 %625, -1
  store i32 %631, i32* %549, align 4, !noalias !10
  br label %632

632:                                              ; preds = %630, %624
  %633 = phi i32 [ %631, %630 ], [ %625, %624 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #6, !noalias !10
  br label %636

636:                                              ; preds = %635, %632, %620
  %637 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %637) #6
  %638 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  %639 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %640 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %637, i8 -86, i64 32, i1 false) #6
  store i8 48, i8* %638, align 4
  %641 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  store i8 48, i8* %641, align 1
  %642 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8 48, i8* %642, align 2
  %643 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %643, i8** %639, align 8
  store i8 54, i8* %643, align 1
  store i32 4, i32* %640, align 8
  %644 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %643, i32 4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %637) #6
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.713"* nonnull sret %25, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %26, %"class.WTF::StringImpl"* %644) #6
  %645 = bitcast %"class.WTF::StringAppend.713"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %645) #6
  %646 = bitcast %"class.WTF::StringAppend.713"* %25 to i64*
  %647 = load i64, i64* %646, align 8, !noalias !13
  %648 = bitcast %"class.WTF::StringAppend.713"* %7 to i64*
  store i64 %647, i64* %648, align 8, !noalias !13
  %649 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %25, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8, !noalias !13
  %651 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %650, %"class.WTF::StringImpl"** %651, align 8, !noalias !13
  %652 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %652, label %670, label %653

653:                                              ; preds = %636
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %658, label %670

658:                                              ; preds = %653
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %660 = load i32, i32* %659, align 4
  %661 = zext i32 %660 to i33
  %662 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %661, i33 1) #6
  %663 = extractvalue { i33, i1 } %662, 1
  %664 = extractvalue { i33, i1 } %662, 0
  %665 = icmp slt i33 %664, 0
  %666 = or i1 %663, %665
  br i1 %666, label %667, label %668, !prof !2

667:                                              ; preds = %658
  call void @llvm.trap() #6
  unreachable

668:                                              ; preds = %658
  %669 = trunc i33 %664 to i32
  store i32 %669, i32* %659, align 4
  br label %670

670:                                              ; preds = %668, %653, %636
  %671 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %7, i64 0, i32 0, i32 1
  %672 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %25, i64 0, i32 0, i32 1
  %673 = bitcast i8** %672 to i64*
  %674 = load i64, i64* %673, align 8, !noalias !13
  %675 = bitcast i8** %671 to i64*
  store i64 %674, i64* %675, align 8, !noalias !13
  %676 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %25, i64 0, i32 1, i32 0, i32 0
  %677 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %676, align 8, !noalias !13
  %678 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %677, %"class.WTF::StringImpl"** %678, align 8, !noalias !13
  %679 = icmp eq %"class.WTF::StringImpl"* %677, null
  br i1 %679, label %697, label %680

680:                                              ; preds = %670
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %677, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = load atomic i32, i32* %681 monotonic, align 4
  %683 = and i32 %682, 2
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %685, label %697

685:                                              ; preds = %680
  %686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %677, i64 0, i32 0
  %687 = load i32, i32* %686, align 4
  %688 = zext i32 %687 to i33
  %689 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %688, i33 1) #6
  %690 = extractvalue { i33, i1 } %689, 1
  %691 = extractvalue { i33, i1 } %689, 0
  %692 = icmp slt i33 %691, 0
  %693 = or i1 %690, %692
  br i1 %693, label %694, label %695, !prof !2

694:                                              ; preds = %685
  call void @llvm.trap() #6
  unreachable

695:                                              ; preds = %685
  %696 = trunc i33 %691 to i32
  store i32 %696, i32* %686, align 4
  br label %697

697:                                              ; preds = %695, %680, %670
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.712"* nonnull %24, %"class.WTF::StringAppend.713"* nonnull byval(%"class.WTF::StringAppend.713") align 8 %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %645) #6
  %698 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_INS8_IPKcNS7_6StringEEESA_EESB_EESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23, %"class.WTF::StringAppend.712"* nonnull dereferenceable(40) %24) #6
  %699 = bitcast %"class.blink::ExecutionContext"* %1 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %700 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %699, align 8
  %701 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %700, i64 52
  %702 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %701, align 8
  call void %702(%"class.blink::ExecutionContext"* %1, %"class.blink::ConsoleMessage"* %698, i1 zeroext false) #6
  %703 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %24, i64 0, i32 0, i32 1, i32 0, i32 0
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %703, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %719, label %706

706:                                              ; preds = %697
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load atomic i32, i32* %707 monotonic, align 4
  %709 = and i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  br i1 %710, label %713, label %715

713:                                              ; preds = %706
  %714 = add i32 %712, -1
  store i32 %714, i32* %711, align 4
  br label %715

715:                                              ; preds = %713, %706
  %716 = phi i32 [ %714, %713 ], [ %712, %706 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %704) #6
  br label %719

719:                                              ; preds = %718, %715, %697
  %720 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %721 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %720, align 8
  %722 = icmp eq %"class.WTF::StringImpl"* %721, null
  br i1 %722, label %736, label %723

723:                                              ; preds = %719
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %725 = load atomic i32, i32* %724 monotonic, align 4
  %726 = and i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %721, i64 0, i32 0
  %729 = load i32, i32* %728, align 4
  br i1 %727, label %730, label %732

730:                                              ; preds = %723
  %731 = add i32 %729, -1
  store i32 %731, i32* %728, align 4
  br label %732

732:                                              ; preds = %730, %723
  %733 = phi i32 [ %731, %730 ], [ %729, %723 ]
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %736

735:                                              ; preds = %732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %721) #6
  br label %736

736:                                              ; preds = %735, %732, %719
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %676, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %736
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #6
  br label %752

752:                                              ; preds = %751, %748, %736
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %768, label %755

755:                                              ; preds = %752
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #6
  br label %768

768:                                              ; preds = %767, %764, %752
  %769 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %770 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %769, align 8
  %771 = icmp eq %"class.WTF::StringImpl"* %770, null
  br i1 %771, label %785, label %772

772:                                              ; preds = %768
  %773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %770, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %774 = load atomic i32, i32* %773 monotonic, align 4
  %775 = and i32 %774, 2
  %776 = icmp eq i32 %775, 0
  %777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %770, i64 0, i32 0
  %778 = load i32, i32* %777, align 4
  br i1 %776, label %779, label %781

779:                                              ; preds = %772
  %780 = add i32 %778, -1
  store i32 %780, i32* %777, align 4
  br label %781

781:                                              ; preds = %779, %772
  %782 = phi i32 [ %780, %779 ], [ %778, %772 ]
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %785

784:                                              ; preds = %781
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %770) #6
  br label %785

785:                                              ; preds = %784, %781, %768
  br i1 %543, label %811, label %786

786:                                              ; preds = %785
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %788 = load atomic i32, i32* %787 monotonic, align 4
  %789 = and i32 %788, 2
  %790 = icmp eq i32 %789, 0
  %791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 0
  %792 = load i32, i32* %791, align 4
  br i1 %790, label %793, label %795

793:                                              ; preds = %786
  %794 = add i32 %792, -1
  store i32 %794, i32* %791, align 4
  br label %795

795:                                              ; preds = %793, %786
  %796 = phi i32 [ %794, %793 ], [ %792, %786 ]
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %798, label %800

798:                                              ; preds = %795
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #6
  %799 = load i32, i32* %791, align 4
  br label %800

800:                                              ; preds = %798, %795
  %801 = phi i32 [ %796, %795 ], [ %799, %798 ]
  %802 = load atomic i32, i32* %787 monotonic, align 4
  %803 = and i32 %802, 2
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %807

805:                                              ; preds = %800
  %806 = add i32 %801, -1
  store i32 %806, i32* %791, align 4
  br label %807

807:                                              ; preds = %805, %800
  %808 = phi i32 [ %806, %805 ], [ %801, %800 ]
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %810, label %811

810:                                              ; preds = %807
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %542) #6
  br label %811

811:                                              ; preds = %810, %807, %785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %487) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %486) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %485) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %484) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %483) #6
  br label %812

812:                                              ; preds = %811, %480, %479, %153, %151
  %813 = phi i32 [ 6000, %811 ], [ %158, %480 ], [ %152, %151 ], [ 128000, %479 ], [ %158, %153 ]
  br i1 %114, label %1152, label %814

814:                                              ; preds = %812
  %815 = load i8, i8* %121, align 1, !range !3
  %816 = icmp ne i8 %815, 0
  %817 = sub nsw i32 %130, %813
  %818 = select i1 %816, i32 %817, i32 %141
  %819 = load i8, i8* %131, align 2, !range !3
  %820 = icmp eq i8 %819, 0
  %821 = icmp slt i32 %818, 100000
  br i1 %820, label %822, label %824

822:                                              ; preds = %814
  %823 = and i1 %816, %821
  br i1 %823, label %825, label %1152

824:                                              ; preds = %814
  br i1 %821, label %825, label %1152

825:                                              ; preds = %824, %822
  %826 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %826) #6
  store i32 1, i32* %27, align 4
  %827 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %827) #6
  store i32 2, i32* %28, align 4
  %828 = bitcast %"class.WTF::StringAppend.712"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %828) #6
  %829 = bitcast %"class.WTF::StringAppend.713"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %829) #6
  %830 = bitcast %"class.WTF::StringAppend"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %830) #6
  %831 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %831) #6
  %832 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  %833 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %834 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %835 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 13
  %836 = icmp slt i32 %818, 0
  %837 = sub i32 0, %818
  %838 = select i1 %836, i32 %837, i32 %818
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %831, i8 -86, i64 32, i1 false) #6
  store i8* %832, i8** %833, align 8
  %839 = urem i32 %838, 10
  %840 = udiv i32 %838, 10
  %841 = trunc i32 %839 to i8
  %842 = or i8 %841, 48
  store i8 %842, i8* %832, align 4
  %843 = icmp ugt i32 %838, 9
  br i1 %843, label %844, label %873

844:                                              ; preds = %825
  %845 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  store i8* %845, i8** %833, align 8
  %846 = urem i32 %840, 10
  %847 = trunc i32 %846 to i8
  %848 = or i8 %847, 48
  store i8 %848, i8* %845, align 1
  %849 = icmp ugt i32 %838, 99
  br i1 %849, label %850, label %873

850:                                              ; preds = %844
  %851 = udiv i32 %838, 100
  %852 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %852, i8** %833, align 8
  %853 = urem i32 %851, 10
  %854 = trunc i32 %853 to i8
  %855 = or i8 %854, 48
  store i8 %855, i8* %852, align 2
  %856 = icmp ugt i32 %838, 999
  br i1 %856, label %857, label %873

857:                                              ; preds = %850
  %858 = udiv i32 %838, 1000
  %859 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %859, i8** %833, align 8
  %860 = urem i32 %858, 10
  %861 = trunc i32 %860 to i8
  %862 = or i8 %861, 48
  store i8 %862, i8* %859, align 1
  %863 = icmp ugt i32 %838, 9999
  br i1 %863, label %864, label %873

864:                                              ; preds = %857, %864
  %865 = phi i32 [ %867, %864 ], [ %858, %857 ]
  %866 = load i8*, i8** %833, align 8
  %867 = udiv i32 %865, 10
  %868 = getelementptr inbounds i8, i8* %866, i64 -1
  store i8* %868, i8** %833, align 8
  %869 = urem i32 %867, 10
  %870 = trunc i32 %869 to i8
  %871 = or i8 %870, 48
  store i8 %871, i8* %868, align 1
  %872 = icmp ugt i32 %865, 99
  br i1 %872, label %864, label %873

873:                                              ; preds = %864, %857, %850, %844, %825
  br i1 %836, label %874, label %877

874:                                              ; preds = %873
  %875 = load i8*, i8** %833, align 8
  %876 = getelementptr inbounds i8, i8* %875, i64 -1
  store i8* %876, i8** %833, align 8
  store i8 45, i8* %876, align 1
  br label %877

877:                                              ; preds = %874, %873
  %878 = bitcast i8** %833 to i64*
  %879 = load i64, i64* %878, align 8
  %880 = ptrtoint i8* %835 to i64
  %881 = sub i64 %880, %879
  %882 = trunc i64 %881 to i32
  store i32 %882, i32* %834, align 8
  %883 = inttoptr i64 %879 to i8*
  %884 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %883, i32 %882) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %831) #6
  %885 = icmp eq %"class.WTF::StringImpl"* %884, null
  br i1 %885, label %962, label %886

886:                                              ; preds = %877
  %887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %888 = load atomic i32, i32* %887 monotonic, align 4
  %889 = and i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 0
  %892 = load i32, i32* %891, align 4
  br i1 %890, label %893, label %903

893:                                              ; preds = %886
  %894 = zext i32 %892 to i33
  %895 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %894, i33 1) #6
  %896 = extractvalue { i33, i1 } %895, 1
  %897 = extractvalue { i33, i1 } %895, 0
  %898 = icmp slt i33 %897, 0
  %899 = or i1 %896, %898
  br i1 %899, label %900, label %901, !prof !2

900:                                              ; preds = %893
  call void @llvm.trap() #6
  unreachable

901:                                              ; preds = %893
  %902 = trunc i33 %897 to i32
  store i32 %902, i32* %891, align 4
  br label %903

903:                                              ; preds = %901, %886
  %904 = phi i32 [ %902, %901 ], [ %892, %886 ]
  %905 = load atomic i32, i32* %887 monotonic, align 4
  %906 = and i32 %905, 2
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %908, label %918

908:                                              ; preds = %903
  %909 = zext i32 %904 to i33
  %910 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %909, i33 1) #6
  %911 = extractvalue { i33, i1 } %910, 1
  %912 = extractvalue { i33, i1 } %910, 0
  %913 = icmp slt i33 %912, 0
  %914 = or i1 %911, %913
  br i1 %914, label %915, label %916, !prof !2

915:                                              ; preds = %908
  call void @llvm.trap() #6
  unreachable

916:                                              ; preds = %908
  %917 = trunc i33 %912 to i32
  store i32 %917, i32* %891, align 4
  br label %918

918:                                              ; preds = %916, %903
  %919 = phi i32 [ %917, %916 ], [ %904, %903 ]
  %920 = load atomic i32, i32* %887 monotonic, align 4
  %921 = and i32 %920, 2
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %925

923:                                              ; preds = %918
  %924 = add i32 %919, -1
  store i32 %924, i32* %891, align 4
  br label %925

925:                                              ; preds = %923, %918
  %926 = phi i32 [ %924, %923 ], [ %919, %918 ]
  %927 = icmp eq i32 %926, 0
  br i1 %927, label %928, label %930

928:                                              ; preds = %925
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #6
  %929 = load i32, i32* %891, align 4
  br label %930

930:                                              ; preds = %928, %925
  %931 = phi i32 [ %929, %928 ], [ %926, %925 ]
  %932 = load atomic i32, i32* %887 monotonic, align 4, !noalias !16
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %935, label %945

935:                                              ; preds = %930
  %936 = zext i32 %931 to i33
  %937 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %936, i33 1) #6
  %938 = extractvalue { i33, i1 } %937, 1
  %939 = extractvalue { i33, i1 } %937, 0
  %940 = icmp slt i33 %939, 0
  %941 = or i1 %938, %940
  br i1 %941, label %942, label %943, !prof !2

942:                                              ; preds = %935
  call void @llvm.trap() #6, !noalias !16
  unreachable

943:                                              ; preds = %935
  %944 = trunc i33 %939 to i32
  store i32 %944, i32* %891, align 4, !noalias !16
  br label %945

945:                                              ; preds = %943, %930
  %946 = phi i32 [ %944, %943 ], [ %931, %930 ]
  %947 = bitcast %"class.WTF::StringAppend"* %31 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.20 to i64), i64* %947, align 8, !alias.scope !16
  %948 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %884, %"class.WTF::StringImpl"** %948, align 8, !alias.scope !16
  %949 = load atomic i32, i32* %887 monotonic, align 4, !noalias !16
  %950 = and i32 %949, 2
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %966

952:                                              ; preds = %945
  %953 = zext i32 %946 to i33
  %954 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %953, i33 1) #6
  %955 = extractvalue { i33, i1 } %954, 1
  %956 = extractvalue { i33, i1 } %954, 0
  %957 = icmp slt i33 %956, 0
  %958 = or i1 %955, %957
  br i1 %958, label %959, label %960, !prof !2

959:                                              ; preds = %952
  call void @llvm.trap() #6, !noalias !16
  unreachable

960:                                              ; preds = %952
  %961 = trunc i33 %956 to i32
  store i32 %961, i32* %891, align 4, !noalias !16
  br label %966

962:                                              ; preds = %877
  %963 = bitcast %"class.WTF::StringAppend"* %31 to i64*
  store i64 ptrtoint ([36 x i8]* @.str.20 to i64), i64* %963, align 8, !alias.scope !16
  %964 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %964, align 8, !alias.scope !16
  %965 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %965, align 8, !alias.scope !16
  br label %978

966:                                              ; preds = %960, %945
  %967 = phi i32 [ %961, %960 ], [ %946, %945 ]
  %968 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8** %968, align 8, !alias.scope !16
  %969 = load atomic i32, i32* %887 monotonic, align 4, !noalias !16
  %970 = and i32 %969, 2
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %974

972:                                              ; preds = %966
  %973 = add i32 %967, -1
  store i32 %973, i32* %891, align 4, !noalias !16
  br label %974

974:                                              ; preds = %972, %966
  %975 = phi i32 [ %973, %972 ], [ %967, %966 ]
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %978

977:                                              ; preds = %974
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #6, !noalias !16
  br label %978

978:                                              ; preds = %977, %974, %962
  %979 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %979) #6
  %980 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 2
  %981 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %979, i8 -86, i64 32, i1 false) #6
  %982 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 8
  %983 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %13, i64 0, i32 0, i64 7
  call void @llvm.memset.p0i8.i64(i8* align 8 %982, i8 48, i64 5, i1 false)
  store i8* %983, i8** %980, align 8
  store i8 49, i8* %983, align 1
  store i32 6, i32* %981, align 8
  %984 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %983, i32 6) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %979) #6
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.713"* nonnull sret %30, %"class.WTF::StringAppend"* nonnull dereferenceable(24) %31, %"class.WTF::StringImpl"* %984) #6
  %985 = bitcast %"class.WTF::StringAppend.713"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %985) #6
  %986 = bitcast %"class.WTF::StringAppend.713"* %30 to i64*
  %987 = load i64, i64* %986, align 8, !noalias !19
  %988 = bitcast %"class.WTF::StringAppend.713"* %14 to i64*
  store i64 %987, i64* %988, align 8, !noalias !19
  %989 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %990 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %989, align 8, !noalias !19
  %991 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %14, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %990, %"class.WTF::StringImpl"** %991, align 8, !noalias !19
  %992 = icmp eq %"class.WTF::StringImpl"* %990, null
  br i1 %992, label %1010, label %993

993:                                              ; preds = %978
  %994 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %990, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %995 = load atomic i32, i32* %994 monotonic, align 4
  %996 = and i32 %995, 2
  %997 = icmp eq i32 %996, 0
  br i1 %997, label %998, label %1010

998:                                              ; preds = %993
  %999 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %990, i64 0, i32 0
  %1000 = load i32, i32* %999, align 4
  %1001 = zext i32 %1000 to i33
  %1002 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1001, i33 1) #6
  %1003 = extractvalue { i33, i1 } %1002, 1
  %1004 = extractvalue { i33, i1 } %1002, 0
  %1005 = icmp slt i33 %1004, 0
  %1006 = or i1 %1003, %1005
  br i1 %1006, label %1007, label %1008, !prof !2

1007:                                             ; preds = %998
  call void @llvm.trap() #6
  unreachable

1008:                                             ; preds = %998
  %1009 = trunc i33 %1004 to i32
  store i32 %1009, i32* %999, align 4
  br label %1010

1010:                                             ; preds = %1008, %993, %978
  %1011 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %14, i64 0, i32 0, i32 1
  %1012 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %30, i64 0, i32 0, i32 1
  %1013 = bitcast i8** %1012 to i64*
  %1014 = load i64, i64* %1013, align 8, !noalias !19
  %1015 = bitcast i8** %1011 to i64*
  store i64 %1014, i64* %1015, align 8, !noalias !19
  %1016 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %30, i64 0, i32 1, i32 0, i32 0
  %1017 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1016, align 8, !noalias !19
  %1018 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %14, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1017, %"class.WTF::StringImpl"** %1018, align 8, !noalias !19
  %1019 = icmp eq %"class.WTF::StringImpl"* %1017, null
  br i1 %1019, label %1037, label %1020

1020:                                             ; preds = %1010
  %1021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = load atomic i32, i32* %1021 monotonic, align 4
  %1023 = and i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  br i1 %1024, label %1025, label %1037

1025:                                             ; preds = %1020
  %1026 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1017, i64 0, i32 0
  %1027 = load i32, i32* %1026, align 4
  %1028 = zext i32 %1027 to i33
  %1029 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1028, i33 1) #6
  %1030 = extractvalue { i33, i1 } %1029, 1
  %1031 = extractvalue { i33, i1 } %1029, 0
  %1032 = icmp slt i33 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %1034, label %1035, !prof !2

1034:                                             ; preds = %1025
  call void @llvm.trap() #6
  unreachable

1035:                                             ; preds = %1025
  %1036 = trunc i33 %1031 to i32
  store i32 %1036, i32* %1026, align 4
  br label %1037

1037:                                             ; preds = %1035, %1020, %1010
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.712"* nonnull %29, %"class.WTF::StringAppend.713"* nonnull byval(%"class.WTF::StringAppend.713") align 8 %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %985) #6
  %1038 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_INS8_IPKcNS7_6StringEEESA_EESB_EESA_EEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %27, i32* nonnull dereferenceable(4) %28, %"class.WTF::StringAppend.712"* nonnull dereferenceable(40) %29) #6
  %1039 = bitcast %"class.blink::ExecutionContext"* %1 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %1040 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %1039, align 8
  %1041 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %1040, i64 52
  %1042 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %1041, align 8
  call void %1042(%"class.blink::ExecutionContext"* %1, %"class.blink::ConsoleMessage"* %1038, i1 zeroext false) #6
  %1043 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %29, i64 0, i32 0, i32 1, i32 0, i32 0
  %1044 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1043, align 8
  %1045 = icmp eq %"class.WTF::StringImpl"* %1044, null
  br i1 %1045, label %1059, label %1046

1046:                                             ; preds = %1037
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1048 = load atomic i32, i32* %1047 monotonic, align 4
  %1049 = and i32 %1048, 2
  %1050 = icmp eq i32 %1049, 0
  %1051 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1044, i64 0, i32 0
  %1052 = load i32, i32* %1051, align 4
  br i1 %1050, label %1053, label %1055

1053:                                             ; preds = %1046
  %1054 = add i32 %1052, -1
  store i32 %1054, i32* %1051, align 4
  br label %1055

1055:                                             ; preds = %1053, %1046
  %1056 = phi i32 [ %1054, %1053 ], [ %1052, %1046 ]
  %1057 = icmp eq i32 %1056, 0
  br i1 %1057, label %1058, label %1059

1058:                                             ; preds = %1055
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1044) #6
  br label %1059

1059:                                             ; preds = %1058, %1055, %1037
  %1060 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1061 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1060, align 8
  %1062 = icmp eq %"class.WTF::StringImpl"* %1061, null
  br i1 %1062, label %1076, label %1063

1063:                                             ; preds = %1059
  %1064 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1061, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1065 = load atomic i32, i32* %1064 monotonic, align 4
  %1066 = and i32 %1065, 2
  %1067 = icmp eq i32 %1066, 0
  %1068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1061, i64 0, i32 0
  %1069 = load i32, i32* %1068, align 4
  br i1 %1067, label %1070, label %1072

1070:                                             ; preds = %1063
  %1071 = add i32 %1069, -1
  store i32 %1071, i32* %1068, align 4
  br label %1072

1072:                                             ; preds = %1070, %1063
  %1073 = phi i32 [ %1071, %1070 ], [ %1069, %1063 ]
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1072
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1061) #6
  br label %1076

1076:                                             ; preds = %1075, %1072, %1059
  %1077 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1016, align 8
  %1078 = icmp eq %"class.WTF::StringImpl"* %1077, null
  br i1 %1078, label %1092, label %1079

1079:                                             ; preds = %1076
  %1080 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1081 = load atomic i32, i32* %1080 monotonic, align 4
  %1082 = and i32 %1081, 2
  %1083 = icmp eq i32 %1082, 0
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1077, i64 0, i32 0
  %1085 = load i32, i32* %1084, align 4
  br i1 %1083, label %1086, label %1088

1086:                                             ; preds = %1079
  %1087 = add i32 %1085, -1
  store i32 %1087, i32* %1084, align 4
  br label %1088

1088:                                             ; preds = %1086, %1079
  %1089 = phi i32 [ %1087, %1086 ], [ %1085, %1079 ]
  %1090 = icmp eq i32 %1089, 0
  br i1 %1090, label %1091, label %1092

1091:                                             ; preds = %1088
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1077) #6
  br label %1092

1092:                                             ; preds = %1091, %1088, %1076
  %1093 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %989, align 8
  %1094 = icmp eq %"class.WTF::StringImpl"* %1093, null
  br i1 %1094, label %1108, label %1095

1095:                                             ; preds = %1092
  %1096 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1097 = load atomic i32, i32* %1096 monotonic, align 4
  %1098 = and i32 %1097, 2
  %1099 = icmp eq i32 %1098, 0
  %1100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 0
  %1101 = load i32, i32* %1100, align 4
  br i1 %1099, label %1102, label %1104

1102:                                             ; preds = %1095
  %1103 = add i32 %1101, -1
  store i32 %1103, i32* %1100, align 4
  br label %1104

1104:                                             ; preds = %1102, %1095
  %1105 = phi i32 [ %1103, %1102 ], [ %1101, %1095 ]
  %1106 = icmp eq i32 %1105, 0
  br i1 %1106, label %1107, label %1108

1107:                                             ; preds = %1104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1093) #6
  br label %1108

1108:                                             ; preds = %1107, %1104, %1092
  %1109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %31, i64 0, i32 0, i32 1, i32 0, i32 0
  %1110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1109, align 8
  %1111 = icmp eq %"class.WTF::StringImpl"* %1110, null
  br i1 %1111, label %1125, label %1112

1112:                                             ; preds = %1108
  %1113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1114 = load atomic i32, i32* %1113 monotonic, align 4
  %1115 = and i32 %1114, 2
  %1116 = icmp eq i32 %1115, 0
  %1117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1110, i64 0, i32 0
  %1118 = load i32, i32* %1117, align 4
  br i1 %1116, label %1119, label %1121

1119:                                             ; preds = %1112
  %1120 = add i32 %1118, -1
  store i32 %1120, i32* %1117, align 4
  br label %1121

1121:                                             ; preds = %1119, %1112
  %1122 = phi i32 [ %1120, %1119 ], [ %1118, %1112 ]
  %1123 = icmp eq i32 %1122, 0
  br i1 %1123, label %1124, label %1125

1124:                                             ; preds = %1121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1110) #6
  br label %1125

1125:                                             ; preds = %1124, %1121, %1108
  br i1 %885, label %1151, label %1126

1126:                                             ; preds = %1125
  %1127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1128 = load atomic i32, i32* %1127 monotonic, align 4
  %1129 = and i32 %1128, 2
  %1130 = icmp eq i32 %1129, 0
  %1131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 0
  %1132 = load i32, i32* %1131, align 4
  br i1 %1130, label %1133, label %1135

1133:                                             ; preds = %1126
  %1134 = add i32 %1132, -1
  store i32 %1134, i32* %1131, align 4
  br label %1135

1135:                                             ; preds = %1133, %1126
  %1136 = phi i32 [ %1134, %1133 ], [ %1132, %1126 ]
  %1137 = icmp eq i32 %1136, 0
  br i1 %1137, label %1138, label %1140

1138:                                             ; preds = %1135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #6
  %1139 = load i32, i32* %1131, align 4
  br label %1140

1140:                                             ; preds = %1138, %1135
  %1141 = phi i32 [ %1136, %1135 ], [ %1139, %1138 ]
  %1142 = load atomic i32, i32* %1127 monotonic, align 4
  %1143 = and i32 %1142, 2
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1147

1145:                                             ; preds = %1140
  %1146 = add i32 %1141, -1
  store i32 %1146, i32* %1131, align 4
  br label %1147

1147:                                             ; preds = %1145, %1140
  %1148 = phi i32 [ %1146, %1145 ], [ %1141, %1140 ]
  %1149 = icmp eq i32 %1148, 0
  br i1 %1149, label %1150, label %1151

1150:                                             ; preds = %1147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #6
  br label %1151

1151:                                             ; preds = %1150, %1147, %1125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %830) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %829) #6
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %828) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %827) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %826) #6
  br label %1152

1152:                                             ; preds = %812, %822, %824, %1151
  %1153 = phi i32 [ 100000, %1151 ], [ %818, %824 ], [ %818, %822 ], [ %141, %812 ]
  store i32 %1153, i32* %73, align 4
  store i32 %813, i32* %72, align 4
  %1154 = bitcast %"class.blink::ContentType"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1154) #6
  %1155 = getelementptr inbounds %"class.blink::ContentType", %"class.blink::ContentType"* %32, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1155, align 8
  call void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %32, %"class.WTF::String"* dereferenceable(8) %49) #6
  %1156 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %76, align 8
  %1157 = getelementptr inbounds %"class.blink::MediaStream", %"class.blink::MediaStream"* %2, i64 0, i32 6, i32 0, i32 0
  %1158 = load %"class.blink::MediaStreamDescriptor"*, %"class.blink::MediaStreamDescriptor"** %1157, align 8
  %1159 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1159) #6
  %1160 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"* nonnull %32) #6
  %1161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1160, %"class.WTF::StringImpl"** %1161, align 8
  %1162 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1162) #6
  %1163 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1163) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #6
  %1164 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType9ParameterERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %32, %"class.WTF::String"* nonnull dereferenceable(8) %35) #6
  %1165 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1164, %"class.WTF::StringImpl"** %1165, align 8
  %1166 = load i32, i32* %72, align 8
  %1167 = load i32, i32* %73, align 4
  %1168 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 5, i32 0, i32 0
  %1169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1168, align 8
  %1170 = icmp eq %"class.WTF::StringImpl"* %1169, null
  br i1 %1170, label %1175, label %1171

1171:                                             ; preds = %1152
  %1172 = getelementptr inbounds %"class.blink::MediaRecorderOptions", %"class.blink::MediaRecorderOptions"* %3, i64 0, i32 5
  %1173 = call i32 @_ZN3WTF32CodeUnitCompareIgnoringASCIICaseERKNS_6StringEPKc(%"class.WTF::String"* dereferenceable(8) %1172, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0)) #6
  %1174 = icmp eq i32 %1173, 0
  br i1 %1174, label %1176, label %1175

1175:                                             ; preds = %1171, %1152
  br label %1176

1176:                                             ; preds = %1171, %1175
  %1177 = phi i32 [ 1, %1175 ], [ 0, %1171 ]
  %1178 = call zeroext i1 @_ZN5blink20MediaRecorderHandler10InitializeEPNS_13MediaRecorderEPNS_21MediaStreamDescriptorERKN3WTF6StringES8_iiNS_18AudioTrackRecorder11BitrateModeE(%"class.blink::MediaRecorderHandler"* %1156, %"class.blink::MediaRecorder"* %0, %"class.blink::MediaStreamDescriptor"* %1158, %"class.WTF::String"* nonnull dereferenceable(8) %33, %"class.WTF::String"* nonnull dereferenceable(8) %34, i32 %1166, i32 %1167, i32 %1177) #6
  %1179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1165, align 8
  %1180 = icmp eq %"class.WTF::StringImpl"* %1179, null
  br i1 %1180, label %1194, label %1181

1181:                                             ; preds = %1176
  %1182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1183 = load atomic i32, i32* %1182 monotonic, align 4
  %1184 = and i32 %1183, 2
  %1185 = icmp eq i32 %1184, 0
  %1186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1179, i64 0, i32 0
  %1187 = load i32, i32* %1186, align 4
  br i1 %1185, label %1188, label %1190

1188:                                             ; preds = %1181
  %1189 = add i32 %1187, -1
  store i32 %1189, i32* %1186, align 4
  br label %1190

1190:                                             ; preds = %1188, %1181
  %1191 = phi i32 [ %1189, %1188 ], [ %1187, %1181 ]
  %1192 = icmp eq i32 %1191, 0
  br i1 %1192, label %1193, label %1194

1193:                                             ; preds = %1190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1179) #6
  br label %1194

1194:                                             ; preds = %1176, %1190, %1193
  %1195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %1196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1195, align 8
  %1197 = icmp eq %"class.WTF::StringImpl"* %1196, null
  br i1 %1197, label %1211, label %1198

1198:                                             ; preds = %1194
  %1199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1200 = load atomic i32, i32* %1199 monotonic, align 4
  %1201 = and i32 %1200, 2
  %1202 = icmp eq i32 %1201, 0
  %1203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1196, i64 0, i32 0
  %1204 = load i32, i32* %1203, align 4
  br i1 %1202, label %1205, label %1207

1205:                                             ; preds = %1198
  %1206 = add i32 %1204, -1
  store i32 %1206, i32* %1203, align 4
  br label %1207

1207:                                             ; preds = %1205, %1198
  %1208 = phi i32 [ %1206, %1205 ], [ %1204, %1198 ]
  %1209 = icmp eq i32 %1208, 0
  br i1 %1209, label %1210, label %1211

1210:                                             ; preds = %1207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1196) #6
  br label %1211

1211:                                             ; preds = %1194, %1207, %1210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1163) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1162) #6
  %1212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1161, align 8
  %1213 = icmp eq %"class.WTF::StringImpl"* %1212, null
  br i1 %1213, label %1227, label %1214

1214:                                             ; preds = %1211
  %1215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1216 = load atomic i32, i32* %1215 monotonic, align 4
  %1217 = and i32 %1216, 2
  %1218 = icmp eq i32 %1217, 0
  %1219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1212, i64 0, i32 0
  %1220 = load i32, i32* %1219, align 4
  br i1 %1218, label %1221, label %1223

1221:                                             ; preds = %1214
  %1222 = add i32 %1220, -1
  store i32 %1222, i32* %1219, align 4
  br label %1223

1223:                                             ; preds = %1221, %1214
  %1224 = phi i32 [ %1222, %1221 ], [ %1220, %1214 ]
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1226, label %1227

1226:                                             ; preds = %1223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1212) #6
  br label %1227

1227:                                             ; preds = %1211, %1223, %1226
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1159) #6
  br i1 %1178, label %1377, label %1228

1228:                                             ; preds = %1227
  %1229 = bitcast %"class.WTF::String"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1229) #6
  %1230 = bitcast %"class.WTF::StringAppend"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1230) #6
  %1231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %1232 = icmp eq %"class.WTF::StringImpl"* %1231, null
  br i1 %1232, label %1308, label %1233

1233:                                             ; preds = %1228
  %1234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1235 = load atomic i32, i32* %1234 monotonic, align 4
  %1236 = and i32 %1235, 2
  %1237 = icmp eq i32 %1236, 0
  %1238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1231, i64 0, i32 0
  %1239 = load i32, i32* %1238, align 4
  br i1 %1237, label %1240, label %1250

1240:                                             ; preds = %1233
  %1241 = zext i32 %1239 to i33
  %1242 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1241, i33 1) #6
  %1243 = extractvalue { i33, i1 } %1242, 1
  %1244 = extractvalue { i33, i1 } %1242, 0
  %1245 = icmp slt i33 %1244, 0
  %1246 = or i1 %1243, %1245
  br i1 %1246, label %1247, label %1248, !prof !2

1247:                                             ; preds = %1240
  call void @llvm.trap() #6
  unreachable

1248:                                             ; preds = %1240
  %1249 = trunc i33 %1244 to i32
  store i32 %1249, i32* %1238, align 4
  br label %1250

1250:                                             ; preds = %1248, %1233
  %1251 = phi i32 [ %1249, %1248 ], [ %1239, %1233 ]
  %1252 = load atomic i32, i32* %1234 monotonic, align 4
  %1253 = and i32 %1252, 2
  %1254 = icmp eq i32 %1253, 0
  br i1 %1254, label %1255, label %1265

1255:                                             ; preds = %1250
  %1256 = zext i32 %1251 to i33
  %1257 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1256, i33 1) #6
  %1258 = extractvalue { i33, i1 } %1257, 1
  %1259 = extractvalue { i33, i1 } %1257, 0
  %1260 = icmp slt i33 %1259, 0
  %1261 = or i1 %1258, %1260
  br i1 %1261, label %1262, label %1263, !prof !2

1262:                                             ; preds = %1255
  call void @llvm.trap() #6
  unreachable

1263:                                             ; preds = %1255
  %1264 = trunc i33 %1259 to i32
  store i32 %1264, i32* %1238, align 4
  br label %1265

1265:                                             ; preds = %1263, %1250
  %1266 = phi i32 [ %1264, %1263 ], [ %1251, %1250 ]
  %1267 = load atomic i32, i32* %1234 monotonic, align 4
  %1268 = and i32 %1267, 2
  %1269 = icmp eq i32 %1268, 0
  br i1 %1269, label %1270, label %1272

1270:                                             ; preds = %1265
  %1271 = add i32 %1266, -1
  store i32 %1271, i32* %1238, align 4
  br label %1272

1272:                                             ; preds = %1270, %1265
  %1273 = phi i32 [ %1271, %1270 ], [ %1266, %1265 ]
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1275, label %1276

1275:                                             ; preds = %1272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1231) #6
  br label %1276

1276:                                             ; preds = %1272, %1275
  %1277 = load atomic i32, i32* %1234 monotonic, align 4, !noalias !22
  %1278 = and i32 %1277, 2
  %1279 = icmp eq i32 %1278, 0
  %1280 = load i32, i32* %1238, align 4
  br i1 %1279, label %1281, label %1291

1281:                                             ; preds = %1276
  %1282 = zext i32 %1280 to i33
  %1283 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1282, i33 1) #6
  %1284 = extractvalue { i33, i1 } %1283, 1
  %1285 = extractvalue { i33, i1 } %1283, 0
  %1286 = icmp slt i33 %1285, 0
  %1287 = or i1 %1284, %1286
  br i1 %1287, label %1288, label %1289, !prof !2

1288:                                             ; preds = %1281
  call void @llvm.trap() #6, !noalias !22
  unreachable

1289:                                             ; preds = %1281
  %1290 = trunc i33 %1285 to i32
  store i32 %1290, i32* %1238, align 4, !noalias !22
  br label %1291

1291:                                             ; preds = %1276, %1289
  %1292 = phi i32 [ %1290, %1289 ], [ %1280, %1276 ]
  %1293 = bitcast %"class.WTF::StringAppend"* %37 to i64*
  store i64 ptrtoint ([62 x i8]* @.str.3 to i64), i64* %1293, align 8, !alias.scope !22
  %1294 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1231, %"class.WTF::StringImpl"** %1294, align 8, !alias.scope !22
  %1295 = load atomic i32, i32* %1234 monotonic, align 4, !noalias !22
  %1296 = and i32 %1295, 2
  %1297 = icmp eq i32 %1296, 0
  br i1 %1297, label %1298, label %1312

1298:                                             ; preds = %1291
  %1299 = zext i32 %1292 to i33
  %1300 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1299, i33 1) #6
  %1301 = extractvalue { i33, i1 } %1300, 1
  %1302 = extractvalue { i33, i1 } %1300, 0
  %1303 = icmp slt i33 %1302, 0
  %1304 = or i1 %1301, %1303
  br i1 %1304, label %1305, label %1306, !prof !2

1305:                                             ; preds = %1298
  call void @llvm.trap() #6, !noalias !22
  unreachable

1306:                                             ; preds = %1298
  %1307 = trunc i33 %1302 to i32
  store i32 %1307, i32* %1238, align 4, !noalias !22
  br label %1312

1308:                                             ; preds = %1228
  %1309 = bitcast %"class.WTF::StringAppend"* %37 to i64*
  store i64 ptrtoint ([62 x i8]* @.str.3 to i64), i64* %1309, align 8, !alias.scope !22
  %1310 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1310, align 8, !alias.scope !22
  %1311 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8** %1311, align 8, !alias.scope !22
  br label %1324

1312:                                             ; preds = %1306, %1291
  %1313 = phi i32 [ %1307, %1306 ], [ %1292, %1291 ]
  %1314 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8** %1314, align 8, !alias.scope !22
  %1315 = load atomic i32, i32* %1234 monotonic, align 4, !noalias !22
  %1316 = and i32 %1315, 2
  %1317 = icmp eq i32 %1316, 0
  br i1 %1317, label %1318, label %1320

1318:                                             ; preds = %1312
  %1319 = add i32 %1313, -1
  store i32 %1319, i32* %1238, align 4, !noalias !22
  br label %1320

1320:                                             ; preds = %1318, %1312
  %1321 = phi i32 [ %1319, %1318 ], [ %1313, %1312 ]
  %1322 = icmp eq i32 %1321, 0
  br i1 %1322, label %1323, label %1324

1323:                                             ; preds = %1320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1231) #6, !noalias !22
  br label %1324

1324:                                             ; preds = %1308, %1320, %1323
  %1325 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %37)
  %1326 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1325, %"class.WTF::StringImpl"** %1326, align 8
  %1327 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %1328 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %1327, align 8
  %1329 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %1328, align 8
  call void %1329(%"class.blink::ExceptionState"* %4, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %36) #6
  %1330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1326, align 8
  %1331 = icmp eq %"class.WTF::StringImpl"* %1330, null
  br i1 %1331, label %1345, label %1332

1332:                                             ; preds = %1324
  %1333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1334 = load atomic i32, i32* %1333 monotonic, align 4
  %1335 = and i32 %1334, 2
  %1336 = icmp eq i32 %1335, 0
  %1337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1330, i64 0, i32 0
  %1338 = load i32, i32* %1337, align 4
  br i1 %1336, label %1339, label %1341

1339:                                             ; preds = %1332
  %1340 = add i32 %1338, -1
  store i32 %1340, i32* %1337, align 4
  br label %1341

1341:                                             ; preds = %1339, %1332
  %1342 = phi i32 [ %1340, %1339 ], [ %1338, %1332 ]
  %1343 = icmp eq i32 %1342, 0
  br i1 %1343, label %1344, label %1345

1344:                                             ; preds = %1341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1330) #6
  br label %1345

1345:                                             ; preds = %1324, %1341, %1344
  %1346 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %37, i64 0, i32 0, i32 1, i32 0, i32 0
  %1347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1346, align 8
  %1348 = icmp eq %"class.WTF::StringImpl"* %1347, null
  br i1 %1348, label %1362, label %1349

1349:                                             ; preds = %1345
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1351 = load atomic i32, i32* %1350 monotonic, align 4
  %1352 = and i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  %1354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 0
  %1355 = load i32, i32* %1354, align 4
  br i1 %1353, label %1356, label %1358

1356:                                             ; preds = %1349
  %1357 = add i32 %1355, -1
  store i32 %1357, i32* %1354, align 4
  br label %1358

1358:                                             ; preds = %1356, %1349
  %1359 = phi i32 [ %1357, %1356 ], [ %1355, %1349 ]
  %1360 = icmp eq i32 %1359, 0
  br i1 %1360, label %1361, label %1362

1361:                                             ; preds = %1358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1347) #6
  br label %1362

1362:                                             ; preds = %1345, %1358, %1361
  br i1 %1232, label %1376, label %1363

1363:                                             ; preds = %1362
  %1364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1365 = load atomic i32, i32* %1364 monotonic, align 4
  %1366 = and i32 %1365, 2
  %1367 = icmp eq i32 %1366, 0
  %1368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1231, i64 0, i32 0
  %1369 = load i32, i32* %1368, align 4
  br i1 %1367, label %1370, label %1372

1370:                                             ; preds = %1363
  %1371 = add i32 %1369, -1
  store i32 %1371, i32* %1368, align 4
  br label %1372

1372:                                             ; preds = %1370, %1363
  %1373 = phi i32 [ %1371, %1370 ], [ %1369, %1363 ]
  %1374 = icmp eq i32 %1373, 0
  br i1 %1374, label %1375, label %1376

1375:                                             ; preds = %1372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1231) #6
  br label %1376

1376:                                             ; preds = %1362, %1372, %1375
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1230) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1229) #6
  br label %1377

1377:                                             ; preds = %1227, %1376
  %1378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1155, align 8
  %1379 = icmp eq %"class.WTF::StringImpl"* %1378, null
  br i1 %1379, label %1393, label %1380

1380:                                             ; preds = %1377
  %1381 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1378, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1382 = load atomic i32, i32* %1381 monotonic, align 4
  %1383 = and i32 %1382, 2
  %1384 = icmp eq i32 %1383, 0
  %1385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1378, i64 0, i32 0
  %1386 = load i32, i32* %1385, align 4
  br i1 %1384, label %1387, label %1389

1387:                                             ; preds = %1380
  %1388 = add i32 %1386, -1
  store i32 %1388, i32* %1385, align 4
  br label %1389

1389:                                             ; preds = %1387, %1380
  %1390 = phi i32 [ %1388, %1387 ], [ %1386, %1380 ]
  %1391 = icmp eq i32 %1390, 0
  br i1 %1391, label %1392, label %1393

1392:                                             ; preds = %1389
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1378) #6
  br label %1393

1393:                                             ; preds = %1377, %1389, %1392
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1154) #6
  br label %1394

1394:                                             ; preds = %1393, %107, %82
  ret void
}

declare void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*, i32) unnamed_addr #2

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN5blink20MediaRecorderHandler10InitializeEPNS_13MediaRecorderEPNS_21MediaStreamDescriptorERKN3WTF6StringES8_iiNS_18AudioTrackRecorder11BitrateModeE(%"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorder"*, %"class.blink::MediaStreamDescriptor"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink11ContentType9ParameterERKN3WTF6StringE(%"class.blink::ContentType"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.725"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #6
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i8* %8) #6
  %9 = bitcast %"class.WTF::StringTypeAdapter.725"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #6
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %2, i8* %11) #6
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #6
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #6
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #6
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #6
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #6
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #6
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #6
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #6
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #6
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [32 x i8*], [7 x i8*], [8 x i8*] }, { [32 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink13MediaRecorderE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %5, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %5, align 8
  %7 = icmp eq %"class.blink::BlobData"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %6) #6
  %9 = bitcast %"class.blink::BlobData"* %6 to i8*
  tail call void @free(i8* %9) #6
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #6
  br label %27

27:                                               ; preds = %10, %23, %26
  %28 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %28) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %29 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 1
  %30 = bitcast %"class.blink::EventTargetData"* %29 to i8*
  %31 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261) #6
  %32 = bitcast i8* %31 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %32) #6
  %33 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %33) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink13MediaRecorderD1Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 1
  %3 = bitcast i32* %2 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink13MediaRecorderD1Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorderD0Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink13MediaRecorderD0Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 1
  %3 = bitcast i32* %2 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink13MediaRecorderD0Ev(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorderD2Ev(%"class.blink::MediaRecorder"* %3) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13MediaRecorder5stateEv(%"class.blink::MediaRecorder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  switch i32 %4, label %9 [
    i32 0, label %6
    i32 1, label %7
    i32 2, label %8
  ]

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #6
  br label %11

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i64 9) #6
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i64 6) #6
  br label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  br label %11

11:                                               ; preds = %6, %7, %8, %9
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13MediaRecorder16audioBitrateModeEv(%"class.blink::MediaRecorder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %3, align 8
  %5 = tail call i32 @_ZN5blink20MediaRecorderHandler16AudioBitrateModeEv(%"class.blink::MediaRecorderHandler"* %4) #6
  %6 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6)
  switch i32 %5, label %9 [
    i32 0, label %7
    i32 1, label %8
  ]

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 8) #6
  br label %11

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i64 8) #6
  br label %11

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  br label %11

11:                                               ; preds = %7, %8, %9
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6)
  ret %"class.WTF::StringImpl"* %13
}

declare i32 @_ZN5blink20MediaRecorderHandler16AudioBitrateModeEv(%"class.blink::MediaRecorderHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder5startERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13MediaRecorder5startEiRNS_14ExceptionStateE(%"class.blink::MediaRecorder"* %0, i32 2147483647, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder5startEiRNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringAppend", align 8
  %7 = alloca %"class.blink::HeapVector.274", align 8
  %8 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %9, i64 10
  %11 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %10, align 8
  %12 = tail call %"class.blink::ExecutionContext"* %11(%"class.blink::MediaRecorder"* %0) #6
  %13 = icmp eq %"class.blink::ExecutionContext"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %8, align 8
  %16 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %15, i64 10
  %17 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %16, align 8
  %18 = tail call %"class.blink::ExecutionContext"* %17(%"class.blink::MediaRecorder"* %0) #6
  %19 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 0, i32 13
  %20 = load i8, i8* %19, align 4, !range !3
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %14, %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %208

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %195, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  %29 = bitcast %"class.WTF::StringAppend"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  switch i32 %25, label %33 [
    i32 2, label %32
    i32 1, label %31
  ]

31:                                               ; preds = %27
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i64 9) #6
  br label %35

32:                                               ; preds = %27
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i64 6) #6
  br label %35

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  br label %35

35:                                               ; preds = %31, %32, %33
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %114, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %56

46:                                               ; preds = %39
  %47 = zext i32 %45 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #6
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #6
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %44, align 4
  br label %56

56:                                               ; preds = %54, %39
  %57 = phi i32 [ %55, %54 ], [ %45, %39 ]
  %58 = load atomic i32, i32* %40 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %56
  %62 = zext i32 %57 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #6
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  call void @llvm.trap() #6
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %44, align 4
  br label %71

71:                                               ; preds = %69, %56
  %72 = phi i32 [ %70, %69 ], [ %57, %56 ]
  %73 = load atomic i32, i32* %40 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %71
  %77 = add i32 %72, -1
  store i32 %77, i32* %44, align 4
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i32 [ %77, %76 ], [ %72, %71 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #6
  br label %82

82:                                               ; preds = %78, %81
  %83 = load atomic i32, i32* %40 monotonic, align 4, !noalias !25
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = load i32, i32* %44, align 4
  br i1 %85, label %87, label %97

87:                                               ; preds = %82
  %88 = zext i32 %86 to i33
  %89 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %88, i33 1) #6
  %90 = extractvalue { i33, i1 } %89, 1
  %91 = extractvalue { i33, i1 } %89, 0
  %92 = icmp slt i33 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %94, label %95, !prof !2

94:                                               ; preds = %87
  call void @llvm.trap() #6, !noalias !25
  unreachable

95:                                               ; preds = %87
  %96 = trunc i33 %91 to i32
  store i32 %96, i32* %44, align 4, !noalias !25
  br label %97

97:                                               ; preds = %82, %95
  %98 = phi i32 [ %96, %95 ], [ %86, %82 ]
  %99 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %99, align 8, !alias.scope !25
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %100, align 8, !alias.scope !25
  %101 = load atomic i32, i32* %40 monotonic, align 4, !noalias !25
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %118

104:                                              ; preds = %97
  %105 = zext i32 %98 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #6
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %104
  call void @llvm.trap() #6, !noalias !25
  unreachable

112:                                              ; preds = %104
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %44, align 4, !noalias !25
  br label %118

114:                                              ; preds = %35
  %115 = bitcast %"class.WTF::StringAppend"* %6 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %115, align 8, !alias.scope !25
  %116 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %116, align 8, !alias.scope !25
  %117 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %117, align 8, !alias.scope !25
  br label %130

118:                                              ; preds = %112, %97
  %119 = phi i32 [ %113, %112 ], [ %98, %97 ]
  %120 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %120, align 8, !alias.scope !25
  %121 = load atomic i32, i32* %40 monotonic, align 4, !noalias !25
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %118
  %125 = add i32 %119, -1
  store i32 %125, i32* %44, align 4, !noalias !25
  br label %126

126:                                              ; preds = %124, %118
  %127 = phi i32 [ %125, %124 ], [ %119, %118 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #6, !noalias !25
  br label %130

130:                                              ; preds = %114, %126, %129
  %131 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %6)
  %132 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %132, align 8
  %133 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %134 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %133, align 8
  %135 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %134, align 8
  call void %135(%"class.blink::ExceptionState"* %2, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #6
  br label %151

151:                                              ; preds = %130, %147, %150
  %152 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #6
  br label %168

168:                                              ; preds = %151, %164, %167
  br i1 %38, label %194, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #6
  %182 = load i32, i32* %174, align 4
  br label %183

183:                                              ; preds = %178, %181
  %184 = phi i32 [ %179, %178 ], [ %182, %181 ]
  %185 = load atomic i32, i32* %170 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %183
  %189 = add i32 %184, -1
  store i32 %189, i32* %174, align 4
  br label %190

190:                                              ; preds = %188, %183
  %191 = phi i32 [ %189, %188 ], [ %184, %183 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #6
  br label %194

194:                                              ; preds = %168, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %208

195:                                              ; preds = %23
  %196 = bitcast %"class.blink::HeapVector.274"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %196) #6
  %197 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 3, i32 0, i32 0
  %198 = load %"class.blink::MediaStream"*, %"class.blink::MediaStream"** %197, align 8
  call void @_ZN5blink11MediaStream9getTracksEv(%"class.blink::HeapVector.274"* nonnull sret %7, %"class.blink::MediaStream"* %198) #6
  %199 = getelementptr inbounds %"class.blink::HeapVector.274", %"class.blink::HeapVector.274"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %196) #6
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 28, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %208

203:                                              ; preds = %195
  store i32 1, i32* %24, align 8
  %204 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %205 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %204, align 8
  %206 = call zeroext i1 @_ZN5blink20MediaRecorderHandler5StartEi(%"class.blink::MediaRecorderHandler"* %205, i32 %1) #6
  br i1 %206, label %208, label %207

207:                                              ; preds = %203
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 28, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i64 0, i64 0)) #6
  br label %208

208:                                              ; preds = %22, %194, %202, %207, %203
  ret void
}

declare void @_ZN5blink11MediaStream9getTracksEv(%"class.blink::HeapVector.274"* sret, %"class.blink::MediaStream"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20MediaRecorderHandler5StartEi(%"class.blink::MediaRecorderHandler"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder4stopERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %7, i64 10
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* %9(%"class.blink::MediaRecorder"* %0) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %13, i64 10
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %14, align 8
  %16 = tail call %"class.blink::ExecutionContext"* %15(%"class.blink::MediaRecorder"* %0) #6
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 13
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %12, %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %189

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %188

25:                                               ; preds = %21
  %26 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #6
  %28 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #6
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %107, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #6
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #6
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %47, %32
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = load atomic i32, i32* %33 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %49
  %55 = zext i32 %50 to i33
  %56 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #6
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %54
  call void @llvm.trap() #6
  unreachable

62:                                               ; preds = %54
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %37, align 4
  br label %64

64:                                               ; preds = %62, %49
  %65 = phi i32 [ %63, %62 ], [ %50, %49 ]
  %66 = load atomic i32, i32* %33 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  %70 = add i32 %65, -1
  store i32 %70, i32* %37, align 4
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i32 [ %70, %69 ], [ %65, %64 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  br label %75

75:                                               ; preds = %71, %74
  %76 = load atomic i32, i32* %33 monotonic, align 4, !noalias !28
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = load i32, i32* %37, align 4
  br i1 %78, label %80, label %90

80:                                               ; preds = %75
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #6
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #6, !noalias !28
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %37, align 4, !noalias !28
  br label %90

90:                                               ; preds = %75, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %75 ]
  %92 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %92, align 8, !alias.scope !28
  %93 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %93, align 8, !alias.scope !28
  %94 = load atomic i32, i32* %33 monotonic, align 4, !noalias !28
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %111

97:                                               ; preds = %90
  %98 = zext i32 %91 to i33
  %99 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #6
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %97
  call void @llvm.trap() #6, !noalias !28
  unreachable

105:                                              ; preds = %97
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %37, align 4, !noalias !28
  br label %111

107:                                              ; preds = %25
  %108 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %108, align 8, !alias.scope !28
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %109, align 8, !alias.scope !28
  %110 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %110, align 8, !alias.scope !28
  br label %123

111:                                              ; preds = %105, %90
  %112 = phi i32 [ %106, %105 ], [ %91, %90 ]
  %113 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %113, align 8, !alias.scope !28
  %114 = load atomic i32, i32* %33 monotonic, align 4, !noalias !28
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %111
  %118 = add i32 %112, -1
  store i32 %118, i32* %37, align 4, !noalias !28
  br label %119

119:                                              ; preds = %117, %111
  %120 = phi i32 [ %118, %117 ], [ %112, %111 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6, !noalias !28
  br label %123

123:                                              ; preds = %107, %119, %122
  %124 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %125, align 8
  %126 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %127 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %126, align 8
  %128 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %127, align 8
  call void %128(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #6
  br label %144

144:                                              ; preds = %123, %140, %143
  %145 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %145, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #6
  br label %161

161:                                              ; preds = %144, %157, %160
  br i1 %31, label %187, label %162

162:                                              ; preds = %161
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %176

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  %175 = load i32, i32* %167, align 4
  br label %176

176:                                              ; preds = %171, %174
  %177 = phi i32 [ %172, %171 ], [ %175, %174 ]
  %178 = load atomic i32, i32* %163 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %176
  %182 = add i32 %177, -1
  store i32 %182, i32* %167, align 4
  br label %183

183:                                              ; preds = %181, %176
  %184 = phi i32 [ %182, %181 ], [ %177, %176 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  br label %187

187:                                              ; preds = %161, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br label %189

188:                                              ; preds = %21
  tail call void @_ZN5blink13MediaRecorder13StopRecordingEv(%"class.blink::MediaRecorder"* %0)
  br label %189

189:                                              ; preds = %188, %187, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder13StopRecordingEv(%"class.blink::MediaRecorder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %8 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %7, align 8
  %9 = icmp eq %"class.blink::MediaRecorderHandler"* %8, null
  br i1 %9, label %28, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 8
  store i8 0, i8* %11, align 4
  store i32 0, i32* %3, align 8
  tail call void @_ZN5blink20MediaRecorderHandler4StopEv(%"class.blink::MediaRecorderHandler"* nonnull %8) #6
  %12 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #6
  %13 = tail call i64 @_ZN4base4Time3NowEv() #6
  %14 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %2) #6
  %16 = fmul double %15, 1.000000e+03
  %17 = bitcast %"class.blink::MediaRecorder"* %0 to void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)***
  %18 = load void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)**, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)** %18, i64 28
  %20 = load void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)** %19, align 8
  call void %20(%"class.blink::MediaRecorder"* %0, i8* null, i64 0, i1 zeroext true, double %16) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #6
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kStopE, align 8
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %23 = bitcast i8* %22 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %23, %"class.WTF::AtomicString"* dereferenceable(8) %21, i32 1, i32 1, i32 1) #6
  %24 = getelementptr inbounds i8, i8* %22, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %23)
  br label %28

28:                                               ; preds = %6, %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder5pauseERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %7, i64 10
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* %9(%"class.blink::MediaRecorder"* %0) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %13, i64 10
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %14, align 8
  %16 = tail call %"class.blink::ExecutionContext"* %15(%"class.blink::MediaRecorder"* %0) #6
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 13
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %12, %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %197

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %187 [
    i32 0, label %24
    i32 2, label %197
  ]

24:                                               ; preds = %21
  %25 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #6
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #6
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  call void @llvm.trap() #6
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #6
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %53
  call void @llvm.trap() #6
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %74

74:                                               ; preds = %70, %73
  %75 = load atomic i32, i32* %32 monotonic, align 4, !noalias !31
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %36, align 4
  br i1 %77, label %79, label %89

79:                                               ; preds = %74
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #6
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  call void @llvm.trap() #6, !noalias !31
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %36, align 4, !noalias !31
  br label %89

89:                                               ; preds = %74, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %74 ]
  %91 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %91, align 8, !alias.scope !31
  %92 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %92, align 8, !alias.scope !31
  %93 = load atomic i32, i32* %32 monotonic, align 4, !noalias !31
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %89
  %97 = zext i32 %90 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #6
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %96
  call void @llvm.trap() #6, !noalias !31
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %36, align 4, !noalias !31
  br label %110

106:                                              ; preds = %24
  %107 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %107, align 8, !alias.scope !31
  %108 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8, !alias.scope !31
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %109, align 8, !alias.scope !31
  br label %122

110:                                              ; preds = %104, %89
  %111 = phi i32 [ %105, %104 ], [ %90, %89 ]
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %112, align 8, !alias.scope !31
  %113 = load atomic i32, i32* %32 monotonic, align 4, !noalias !31
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = add i32 %111, -1
  store i32 %117, i32* %36, align 4, !noalias !31
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi i32 [ %117, %116 ], [ %111, %110 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6, !noalias !31
  br label %122

122:                                              ; preds = %106, %118, %121
  %123 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %126 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %125, align 8
  %127 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %126, align 8
  call void %127(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #6
  br label %143

143:                                              ; preds = %122, %139, %142
  %144 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #6
  br label %160

160:                                              ; preds = %143, %156, %159
  br i1 %30, label %186, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  %174 = load i32, i32* %166, align 4
  br label %175

175:                                              ; preds = %170, %173
  %176 = phi i32 [ %171, %170 ], [ %174, %173 ]
  %177 = load atomic i32, i32* %162 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %175
  %181 = add i32 %176, -1
  store i32 %181, i32* %166, align 4
  br label %182

182:                                              ; preds = %180, %175
  %183 = phi i32 [ %181, %180 ], [ %176, %175 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %186

186:                                              ; preds = %160, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %197

187:                                              ; preds = %21
  store i32 2, i32* %22, align 8
  %188 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %189 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %188, align 8
  tail call void @_ZN5blink20MediaRecorderHandler5PauseEv(%"class.blink::MediaRecorderHandler"* %189) #6
  %190 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kPauseE, align 8
  %191 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %192 = bitcast i8* %191 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %192, %"class.WTF::AtomicString"* dereferenceable(8) %190, i32 1, i32 1, i32 1) #6
  %193 = getelementptr inbounds i8, i8* %191, i64 -4
  %194 = bitcast i8* %193 to i16*
  %195 = load atomic i16, i16* %194 monotonic, align 2
  %196 = or i16 %195, 1
  store atomic i16 %196, i16* %194 release, align 2
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %192)
  br label %197

197:                                              ; preds = %21, %187, %186, %20
  ret void
}

declare void @_ZN5blink20MediaRecorderHandler5PauseEv(%"class.blink::MediaRecorderHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"*, %"class.blink::Event"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Event"*, align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback.384", align 8
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to { i64, i64 }*
  %8 = alloca %"class.blink::Persistent", align 8
  store %"class.blink::Event"* %1, %"class.blink::Event"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0
  %10 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %30, label %15, !prof !2

15:                                               ; preds = %2
  %16 = ptrtoint %"class.blink::Event"* %1 to i64
  %17 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %9, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %17, align 8
  %19 = zext i32 %11 to i64
  %20 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %18, i64 %19
  %21 = bitcast %"class.blink::Member.257"* %20 to i64*
  store atomic i64 %16, i64* %21 monotonic, align 8
  %22 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = bitcast %"class.blink::Event"* %1 to i8*
  %26 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #6
  br label %27

27:                                               ; preds = %24, %15
  %28 = load i32, i32* %10, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %10, align 4
  br label %32

30:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.254"* %9, %"class.blink::Event"** nonnull dereferenceable(8) %3) #6
  %31 = load i32, i32* %10, align 4
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi i32 [ %29, %27 ], [ %31, %30 ]
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %120

35:                                               ; preds = %32
  %36 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %37 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %37, i64 10
  %39 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %38, align 8
  %40 = call %"class.blink::ExecutionContext"* %39(%"class.blink::MediaRecorder"* %0) #6
  %41 = icmp eq %"class.blink::ExecutionContext"* %40, null
  br i1 %41, label %120, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %40, i64 0, i32 1
  %44 = bitcast %"class.blink::MojoBindingContext"* %43 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %45 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %44, align 8
  %46 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %45, i64 6
  %47 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %46, align 8
  %48 = call %"class.base::SingleThreadTaskRunner"* %47(%"class.blink::MojoBindingContext"* %43, i8 zeroext 1) #6
  %49 = bitcast %"class.base::SingleThreadTaskRunner"* %48 to %"class.base::TaskRunner"*
  %50 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.10, i64 0, i64 0), i32 472) #6
  %51 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #6
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaRecorder"*)* @_ZN5blink13MediaRecorder22DispatchScheduledEventEv to i64), i64 0>, <2 x i64>* %6, align 16
  %52 = bitcast %"class.blink::Persistent"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #6
  %53 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %8, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %8, i64 0, i32 0, i32 0
  store %"class.blink::MediaRecorder"* %0, %"class.blink::MediaRecorder"** %54, align 8, !alias.scope !34
  %55 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8, !alias.scope !34
  %56 = ptrtoint %"class.blink::MediaRecorder"* %0 to i64
  switch i64 %56, label %57 [
    i64 0, label %83
    i64 -1, label %83
  ]

57:                                               ; preds = %42
  %58 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !34
  %59 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %58, i64 0, i32 1
  %60 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %59) #6, !noalias !34
  %61 = icmp eq i8* %60, null
  br i1 %61, label %62, label %64, !prof !2

62:                                               ; preds = %57
  %63 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %59, i8* %63) #6
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i8* [ %63, %62 ], [ %60, %57 ]
  %66 = bitcast i8* %65 to %"class.blink::ThreadState"**
  %67 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %66, align 8, !noalias !34
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %68, align 8, !noalias !34
  %70 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8, !noalias !34
  %72 = icmp eq %"class.blink::PersistentNode"* %71, null
  br i1 %72, label %73, label %76, !prof !2

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %69, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %74) #6
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %70, align 8
  br label %76

76:                                               ; preds = %73, %64
  %77 = phi %"class.blink::PersistentNode"* [ %75, %73 ], [ %71, %64 ]
  %78 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !34
  %80 = bitcast %"class.blink::PersistentRegion"* %69 to i64*
  store i64 %79, i64* %80, align 8, !noalias !34
  %81 = bitcast %"class.blink::PersistentNode"* %77 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %53, %"class.blink::PersistentBase"** %81, align 8, !noalias !34
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13MediaRecorderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %55, align 8, !alias.scope !34
  br label %83

83:                                               ; preds = %42, %42, %76
  %84 = call i8* @_Znwm(i64 64) #13, !noalias !37
  %85 = bitcast i8* %84 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13MediaRecorderEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %7, %"class.blink::Persistent"* nonnull dereferenceable(16) %8) #6, !noalias !37
  %86 = bitcast %"class.base::OnceCallback.384"* %5 to i8**
  store i8* %84, i8** %86, align 8, !alias.scope !37
  %87 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %49, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback.384"* nonnull %5) #6
  %88 = getelementptr inbounds %"class.base::OnceCallback.384", %"class.base::OnceCallback.384"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #6
  %89 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %90 = icmp eq %"class.blink::PersistentNode"* %89, null
  br i1 %90, label %110, label %91

91:                                               ; preds = %83
  %92 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %93 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %92, i64 0, i32 1
  %94 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %93) #6
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %98, !prof !2

96:                                               ; preds = %91
  %97 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %93, i8* %97) #6
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i8* [ %97, %96 ], [ %94, %91 ]
  %100 = bitcast i8* %99 to %"class.blink::ThreadState"**
  %101 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %102, align 8
  %104 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %55, align 8
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %103, i64 0, i32 0, i32 0
  %106 = bitcast %"class.blink::PersistentRegion"* %103 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::PersistentNode"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %104, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %109, align 8
  store %"class.blink::PersistentNode"* %104, %"class.blink::PersistentNode"** %105, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %55, align 8
  br label %110

110:                                              ; preds = %83, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #6
  %111 = icmp eq %"class.base::SingleThreadTaskRunner"* %48, null
  br i1 %111, label %120, label %112

112:                                              ; preds = %110
  %113 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %48, i64 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.base::RefCountedThreadSafe.250", %"class.base::RefCountedThreadSafe.250"* %113, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw sub i32* %114, i32 1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.base::RefCountedThreadSafe.250", %"class.base::RefCountedThreadSafe.250"* %113, i64 -2
  %119 = bitcast %"class.base::RefCountedThreadSafe.250"* %118 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %119) #6
  br label %120

120:                                              ; preds = %117, %112, %110, %35, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder6resumeERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %7, i64 10
  %9 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %8, align 8
  %10 = tail call %"class.blink::ExecutionContext"* %9(%"class.blink::MediaRecorder"* %0) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %6, align 8
  %14 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %13, i64 10
  %15 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %14, align 8
  %16 = tail call %"class.blink::ExecutionContext"* %15(%"class.blink::MediaRecorder"* %0) #6
  %17 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %16, i64 0, i32 13
  %18 = load i8, i8* %17, align 4, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %12, %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %197

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %187 [
    i32 0, label %24
    i32 1, label %197
  ]

24:                                               ; preds = %21
  %25 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #6
  %26 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #6
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #6
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %106, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #6
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  call void @llvm.trap() #6
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #6
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %53
  call void @llvm.trap() #6
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %74

74:                                               ; preds = %70, %73
  %75 = load atomic i32, i32* %32 monotonic, align 4, !noalias !44
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %36, align 4
  br i1 %77, label %79, label %89

79:                                               ; preds = %74
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #6
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  call void @llvm.trap() #6, !noalias !44
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %36, align 4, !noalias !44
  br label %89

89:                                               ; preds = %74, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %74 ]
  %91 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %91, align 8, !alias.scope !44
  %92 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %92, align 8, !alias.scope !44
  %93 = load atomic i32, i32* %32 monotonic, align 4, !noalias !44
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %110

96:                                               ; preds = %89
  %97 = zext i32 %90 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #6
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %96
  call void @llvm.trap() #6, !noalias !44
  unreachable

104:                                              ; preds = %96
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %36, align 4, !noalias !44
  br label %110

106:                                              ; preds = %24
  %107 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %107, align 8, !alias.scope !44
  %108 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %108, align 8, !alias.scope !44
  %109 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %109, align 8, !alias.scope !44
  br label %122

110:                                              ; preds = %104, %89
  %111 = phi i32 [ %105, %104 ], [ %90, %89 ]
  %112 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %112, align 8, !alias.scope !44
  %113 = load atomic i32, i32* %32 monotonic, align 4, !noalias !44
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = add i32 %111, -1
  store i32 %117, i32* %36, align 4, !noalias !44
  br label %118

118:                                              ; preds = %116, %110
  %119 = phi i32 [ %117, %116 ], [ %111, %110 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6, !noalias !44
  br label %122

122:                                              ; preds = %106, %118, %121
  %123 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %124, align 8
  %125 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %126 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %125, align 8
  %127 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %126, align 8
  call void %127(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #6
  br label %143

143:                                              ; preds = %122, %139, %142
  %144 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #6
  br label %160

160:                                              ; preds = %143, %156, %159
  br i1 %30, label %186, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  %174 = load i32, i32* %166, align 4
  br label %175

175:                                              ; preds = %170, %173
  %176 = phi i32 [ %171, %170 ], [ %174, %173 ]
  %177 = load atomic i32, i32* %162 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %175
  %181 = add i32 %176, -1
  store i32 %181, i32* %166, align 4
  br label %182

182:                                              ; preds = %180, %175
  %183 = phi i32 [ %181, %180 ], [ %176, %175 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %186

186:                                              ; preds = %160, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #6
  br label %197

187:                                              ; preds = %21
  store i32 1, i32* %22, align 8
  %188 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %189 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %188, align 8
  tail call void @_ZN5blink20MediaRecorderHandler6ResumeEv(%"class.blink::MediaRecorderHandler"* %189) #6
  %190 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kResumeE, align 8
  %191 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %192 = bitcast i8* %191 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %192, %"class.WTF::AtomicString"* dereferenceable(8) %190, i32 1, i32 1, i32 1) #6
  %193 = getelementptr inbounds i8, i8* %191, i64 -4
  %194 = bitcast i8* %193 to i16*
  %195 = load atomic i16, i16* %194 monotonic, align 2
  %196 = or i16 %195, 1
  store atomic i16 %196, i16* %194 release, align 2
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %192)
  br label %197

197:                                              ; preds = %21, %187, %186, %20
  ret void
}

declare void @_ZN5blink20MediaRecorderHandler6ResumeEv(%"class.blink::MediaRecorderHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder11requestDataERNS_14ExceptionStateE(%"class.blink::MediaRecorder"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.base::Time", align 8
  %7 = bitcast %"class.blink::MediaRecorder"* %0 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %8 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %8, i64 10
  %10 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %9, align 8
  %11 = tail call %"class.blink::ExecutionContext"* %10(%"class.blink::MediaRecorder"* %0) #6
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %7, align 8
  %15 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %14, i64 10
  %16 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %15, align 8
  %17 = tail call %"class.blink::ExecutionContext"* %16(%"class.blink::MediaRecorder"* %0) #6
  %18 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %17, i64 0, i32 13
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %13, %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 35, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #6
  br label %199

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %189

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #6
  %29 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i64 8) #6
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %108, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %50

40:                                               ; preds = %33
  %41 = zext i32 %39 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #6
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %40
  call void @llvm.trap() #6
  unreachable

48:                                               ; preds = %40
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %38, align 4
  br label %50

50:                                               ; preds = %48, %33
  %51 = phi i32 [ %49, %48 ], [ %39, %33 ]
  %52 = load atomic i32, i32* %34 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %65

55:                                               ; preds = %50
  %56 = zext i32 %51 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #6
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %55
  call void @llvm.trap() #6
  unreachable

63:                                               ; preds = %55
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %38, align 4
  br label %65

65:                                               ; preds = %63, %50
  %66 = phi i32 [ %64, %63 ], [ %51, %50 ]
  %67 = load atomic i32, i32* %34 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = add i32 %66, -1
  store i32 %71, i32* %38, align 4
  br label %72

72:                                               ; preds = %70, %65
  %73 = phi i32 [ %71, %70 ], [ %66, %65 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6
  br label %76

76:                                               ; preds = %72, %75
  %77 = load atomic i32, i32* %34 monotonic, align 4, !noalias !47
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = load i32, i32* %38, align 4
  br i1 %79, label %81, label %91

81:                                               ; preds = %76
  %82 = zext i32 %80 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #6
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %81
  call void @llvm.trap() #6, !noalias !47
  unreachable

89:                                               ; preds = %81
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %38, align 4, !noalias !47
  br label %91

91:                                               ; preds = %76, %89
  %92 = phi i32 [ %90, %89 ], [ %80, %76 ]
  %93 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %93, align 8, !alias.scope !47
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %94, align 8, !alias.scope !47
  %95 = load atomic i32, i32* %34 monotonic, align 4, !noalias !47
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %91
  %99 = zext i32 %92 to i33
  %100 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #6
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %98
  call void @llvm.trap() #6, !noalias !47
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %38, align 4, !noalias !47
  br label %112

108:                                              ; preds = %26
  %109 = bitcast %"class.WTF::StringAppend"* %5 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.5 to i64), i64* %109, align 8, !alias.scope !47
  %110 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %110, align 8, !alias.scope !47
  %111 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %111, align 8, !alias.scope !47
  br label %124

112:                                              ; preds = %106, %91
  %113 = phi i32 [ %107, %106 ], [ %92, %91 ]
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8** %114, align 8, !alias.scope !47
  %115 = load atomic i32, i32* %34 monotonic, align 4, !noalias !47
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %112
  %119 = add i32 %113, -1
  store i32 %119, i32* %38, align 4, !noalias !47
  br label %120

120:                                              ; preds = %118, %112
  %121 = phi i32 [ %119, %118 ], [ %113, %112 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6, !noalias !47
  br label %124

124:                                              ; preds = %108, %120, %123
  %125 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %128 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %127, align 8
  %129 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %128, align 8
  call void %129(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #6
  br label %145

145:                                              ; preds = %124, %141, %144
  %146 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #6
  br label %162

162:                                              ; preds = %145, %158, %161
  br i1 %32, label %188, label %163

163:                                              ; preds = %162
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6
  %176 = load i32, i32* %168, align 4
  br label %177

177:                                              ; preds = %172, %175
  %178 = phi i32 [ %173, %172 ], [ %176, %175 ]
  %179 = load atomic i32, i32* %164 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = add i32 %178, -1
  store i32 %183, i32* %168, align 4
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i32 [ %183, %182 ], [ %178, %177 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #6
  br label %188

188:                                              ; preds = %162, %184, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %199

189:                                              ; preds = %22
  %190 = bitcast %"class.base::Time"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #6
  %191 = tail call i64 @_ZN4base4Time3NowEv() #6
  %192 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %6, i64 0, i32 0, i32 0
  store i64 %191, i64* %192, align 8
  %193 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %6) #6
  %194 = fmul double %193, 1.000000e+03
  %195 = bitcast %"class.blink::MediaRecorder"* %0 to void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)***
  %196 = load void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)**, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)** %196, i64 28
  %198 = load void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)*, void (%"class.blink::MediaRecorder"*, i8*, i64, i1, double)** %197, align 8
  call void %198(%"class.blink::MediaRecorder"* %0, i8* null, i64 0, i1 zeroext true, double %194) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #6
  br label %199

199:                                              ; preds = %189, %188, %21
  ret void
}

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13MediaRecorder15isTypeSupportedEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ContentType", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::IdentifiabilityMetricBuilder", align 8
  %8 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 1
  %9 = bitcast %"class.blink::MojoBindingContext"* %8 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %10 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %9, align 8
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %10, i64 6
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %11, align 8
  %13 = tail call %"class.base::SingleThreadTaskRunner"* %12(%"class.blink::MojoBindingContext"* %8, i8 zeroext 30) #6
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_20MediaRecorderHandlerEEEPhm(i64 168) #6
  %15 = bitcast i8* %14 to %"class.blink::MediaRecorderHandler"*
  tail call void @_ZN5blink20MediaRecorderHandlerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::MediaRecorderHandler"* %15, %"class.base::SingleThreadTaskRunner"* %13) #6
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = icmp eq i8* %14, null
  br i1 %20, label %117, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::ContentType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  %23 = getelementptr inbounds %"class.blink::ContentType", %"class.blink::ContentType"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %23, align 8
  call void @_ZN5blink11ContentTypeC1ERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %1) #6
  %24 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType7GetTypeEv(%"class.blink::ContentType"* nonnull %3) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  %27 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i64 6) #6
  %29 = call %"class.WTF::StringImpl"* @_ZNK5blink11ContentType9ParameterERKN3WTF6StringE(%"class.blink::ContentType"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %6) #6
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = call zeroext i1 @_ZN5blink20MediaRecorderHandler18CanSupportMimeTypeERKN3WTF6StringES4_(%"class.blink::MediaRecorderHandler"* nonnull %15, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #6
  br label %47

47:                                               ; preds = %21, %43, %46
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #6
  br label %64

64:                                               ; preds = %47, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #6
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  %81 = call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #6
  %82 = call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings12ShouldSampleENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %81, i64 9) #6
  br i1 %82, label %83, label %100

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::IdentifiabilityMetricBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #6
  %85 = bitcast %"class.blink::ExecutionContext"* %0 to i64 (%"class.blink::ExecutionContext"*)***
  %86 = load i64 (%"class.blink::ExecutionContext"*)**, i64 (%"class.blink::ExecutionContext"*)*** %85, align 8
  %87 = getelementptr inbounds i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %86, i64 45
  %88 = load i64 (%"class.blink::ExecutionContext"*)*, i64 (%"class.blink::ExecutionContext"*)** %87, align 8
  %89 = call i64 %88(%"class.blink::ExecutionContext"* %0) #6
  call void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %7, i64 %89) #6
  %90 = call i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #6
  %91 = shl i64 %90, 8
  %92 = or i64 %91, 9
  %93 = zext i1 %31 to i64
  %94 = call dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %7, i64 %92, i64 %93) #6
  %95 = bitcast %"class.blink::ExecutionContext"* %0 to %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)***
  %96 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)**, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %96, i64 44
  %98 = load %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)*, %"class.ukm::UkmRecorder"* (%"class.blink::ExecutionContext"*)** %97, align 8
  %99 = call %"class.ukm::UkmRecorder"* %98(%"class.blink::ExecutionContext"* %0) #6
  call void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"* %94, %"class.ukm::UkmRecorder"* %99) #6
  call void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #6
  br label %100

100:                                              ; preds = %83, %80
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #6
  br label %116

116:                                              ; preds = %100, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  br label %117

117:                                              ; preds = %2, %116
  %118 = phi i1 [ %31, %116 ], [ false, %2 ]
  ret i1 %118
}

declare zeroext i1 @_ZN5blink20MediaRecorderHandler18CanSupportMimeTypeERKN3WTF6StringES4_(%"class.blink::MediaRecorderHandler"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings12ShouldSampleENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"*, i64) local_unnamed_addr #2

declare dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"*, i64, i64) local_unnamed_addr #2

declare i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13MediaRecorder13InterfaceNameEv(%"class.blink::MediaRecorder"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names14kMediaRecorderE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink13MediaRecorder19GetExecutionContextEv(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #6
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder16ContextDestroyedEv(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Time", align 8
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %3, align 8
  %5 = icmp eq %"class.blink::BlobData"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* nonnull %4) #6
  %8 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %3, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %3, align 8
  %9 = tail call noalias i8* @malloc(i64 88) #6
  %10 = bitcast i8* %9 to %"class.blink::BlobDataHandle"*
  tail call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %10, %"class.blink::BlobData"* %8, i64 %7) #6
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #6
  %12 = bitcast i8* %11 to %"class.blink::Blob"*
  tail call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %12, %"class.blink::BlobDataHandle"* %10) #6
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = bitcast %"class.base::Time"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  %18 = tail call i64 @_ZN4base4Time3NowEv() #6
  %19 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %2, i64 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %2) #6
  %21 = fmul double %20, 1.000000e+03
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kDataavailableE, align 8
  %23 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #6
  %24 = bitcast i8* %23 to %"class.blink::BlobEvent"*
  call void @_ZN5blink9BlobEventC1ERKN3WTF12AtomicStringEPNS_4BlobEd(%"class.blink::BlobEvent"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %22, %"class.blink::Blob"* %12, double %21) #6
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = bitcast i8* %23 to %"class.blink::Event"*
  call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %29) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %30

30:                                               ; preds = %1, %6
  %31 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  store i32 0, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 3, i32 0
  %33 = bitcast %"class.blink::MemberBase.14"* %32 to i64*
  store atomic i64 0, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10
  %35 = getelementptr inbounds %"class.blink::Member.26", %"class.blink::Member.26"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %35, align 8
  call void @_ZN5blink20MediaRecorderHandler4StopEv(%"class.blink::MediaRecorderHandler"* %36) #6
  %37 = bitcast %"class.blink::Member.26"* %34 to i64*
  store atomic i64 0, i64* %37 monotonic, align 8
  ret void
}

declare i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder15CreateBlobEventEPNS_4BlobEd(%"class.blink::MediaRecorder"*, %"class.blink::Blob"*, double) local_unnamed_addr #0 align 2 {
  %4 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kDataavailableE, align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #6
  %6 = bitcast i8* %5 to %"class.blink::BlobEvent"*
  tail call void @_ZN5blink9BlobEventC1ERKN3WTF12AtomicStringEPNS_4BlobEd(%"class.blink::BlobEvent"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %4, %"class.blink::Blob"* %1, double %2) #6
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %5 to %"class.blink::Event"*
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %11)
  ret void
}

declare void @_ZN5blink20MediaRecorderHandler4StopEv(%"class.blink::MediaRecorderHandler"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink13MediaRecorder16ContextDestroyedEv(%"class.blink::MediaRecorder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::MediaRecorder"*
  tail call void @_ZN5blink13MediaRecorder16ContextDestroyedEv(%"class.blink::MediaRecorder"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder9WriteDataEPKcmbd(%"class.blink::MediaRecorder"*, i8*, i64, i1 zeroext, double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  %9 = icmp ne i64 %2, 0
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %42

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10, i32 0, i32 0
  %13 = load %"class.blink::MediaRecorderHandler"*, %"class.blink::MediaRecorderHandler"** %12, align 8
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink20MediaRecorderHandler14ActualMimeTypeEv(%"class.blink::MediaRecorderHandler"* %13) #6
  %15 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %16 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 4
  %17 = bitcast %"class.WTF::String"* %16 to i64*
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %15, i64* %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #6
  br label %34

34:                                               ; preds = %33, %30, %11
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kStartE, align 8
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %37 = bitcast i8* %36 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %37, %"class.WTF::AtomicString"* dereferenceable(8) %35, i32 1, i32 1, i32 1) #6
  %38 = getelementptr inbounds i8, i8* %36, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %37)
  store i8 1, i8* %6, align 4
  br label %42

42:                                               ; preds = %5, %34
  %43 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 9
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.15"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  %46 = icmp eq %"class.blink::BlobData"* %45, null
  br i1 %46, label %47, label %61

47:                                               ; preds = %42
  %48 = tail call noalias i8* @malloc(i64 48) #6
  %49 = bitcast i8* %48 to %"class.blink::BlobData"*
  tail call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %49, i32 1) #6
  %50 = ptrtoint i8* %48 to i64
  %51 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.15"* %43 to i64*
  store i64 %50, i64* %52, align 8
  %53 = icmp eq %"class.blink::BlobData"* %51, null
  %54 = bitcast i8* %48 to %"class.blink::BlobData"*
  br i1 %53, label %58, label %55

55:                                               ; preds = %47
  tail call void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"* nonnull %51) #6
  %56 = bitcast %"class.blink::BlobData"* %51 to i8*
  tail call void @free(i8* %56) #6
  %57 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  br label %58

58:                                               ; preds = %55, %47
  %59 = phi %"class.blink::BlobData"* [ %57, %55 ], [ %54, %47 ]
  %60 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 4
  tail call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %59, %"class.WTF::String"* dereferenceable(8) %60) #6
  br label %61

61:                                               ; preds = %42, %58
  %62 = icmp eq i8* %1, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  tail call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %64, i8* nonnull %1, i64 %2) #6
  br label %65

65:                                               ; preds = %61, %63
  br i1 %3, label %66, label %86

66:                                               ; preds = %65
  %67 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  %68 = tail call i64 @_ZNK5blink8BlobData6lengthEv(%"class.blink::BlobData"* %67) #6
  %69 = load %"class.blink::BlobData"*, %"class.blink::BlobData"** %44, align 8
  store %"class.blink::BlobData"* null, %"class.blink::BlobData"** %44, align 8
  %70 = tail call noalias i8* @malloc(i64 88) #6
  %71 = bitcast i8* %70 to %"class.blink::BlobDataHandle"*
  tail call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %71, %"class.blink::BlobData"* %69, i64 %68) #6
  %72 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #6
  %73 = bitcast i8* %72 to %"class.blink::Blob"*
  tail call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %73, %"class.blink::BlobDataHandle"* %71) #6
  %74 = getelementptr inbounds i8, i8* %72, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names14kDataavailableE, align 8
  %79 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 120) #6
  %80 = bitcast i8* %79 to %"class.blink::BlobEvent"*
  tail call void @_ZN5blink9BlobEventC1ERKN3WTF12AtomicStringEPNS_4BlobEd(%"class.blink::BlobEvent"* %80, %"class.WTF::AtomicString"* dereferenceable(8) %78, %"class.blink::Blob"* %73, double %4) #6
  %81 = getelementptr inbounds i8, i8* %79, i64 -4
  %82 = bitcast i8* %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = or i16 %83, 1
  store atomic i16 %84, i16* %82 release, align 2
  %85 = bitcast i8* %79 to %"class.blink::Event"*
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %85) #6
  br label %86

86:                                               ; preds = %65, %66
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink20MediaRecorderHandler14ActualMimeTypeEv(%"class.blink::MediaRecorderHandler"*) local_unnamed_addr #2

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder7OnErrorERKN3WTF6StringE(%"class.blink::MediaRecorder"*, %"class.WTF::String"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13MediaRecorder13StopRecordingEv(%"class.blink::MediaRecorder"* %0)
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #6
  %5 = bitcast i8* %4 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %3, i32 1, i32 1, i32 1) #6
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink13MediaRecorder21ScheduleDispatchEventEPNS_5EventE(%"class.blink::MediaRecorder"* %0, %"class.blink::Event"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder16OnAllTracksEndedEv(%"class.blink::MediaRecorder"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink13MediaRecorder13StopRecordingEv(%"class.blink::MediaRecorder"* %0)
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.384"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13MediaRecorder22DispatchScheduledEventEv(%"class.blink::MediaRecorder"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0
  %3 = bitcast %"class.WTF::Vector.254"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  store i32 0, i32* %6, align 4
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = inttoptr i64 %4 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #6
  br label %13

13:                                               ; preds = %10, %1
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.WTF::Vector.254"* %2 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #6
  br label %20

20:                                               ; preds = %13, %16
  %21 = inttoptr i64 %4 to %"class.blink::Member.257"*
  %22 = zext i32 %7 to i64
  %23 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %21, i64 %22
  %24 = icmp eq i32 %7, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0
  br label %28

27:                                               ; preds = %28, %20
  ret void

28:                                               ; preds = %25, %28
  %29 = phi %"class.blink::Member.257"* [ %21, %25 ], [ %33, %28 ]
  %30 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.blink::Event"*, %"class.blink::Event"** %30, align 8
  %32 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %26, %"class.blink::Event"* dereferenceable(104) %31) #6
  %33 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %29, i64 1
  %34 = icmp eq %"class.blink::Member.257"* %33, %23
  br i1 %34, label %27, label %28
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13MediaRecorder5TraceEPNS_7VisitorE(%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.13"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MediaStreamEE5TraceEPNS_7VisitorEPKv) #6
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 10
  %15 = bitcast %"class.blink::Member.26"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to %"class.blink::MediaRecorderHandler"*
  %20 = getelementptr inbounds %"class.blink::MediaRecorderHandler", %"class.blink::MediaRecorderHandler"* %19, i64 0, i32 0
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* %20, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20MediaRecorderHandlerEE5TraceEPNS_7VisitorEPKv) #6
  br label %25

25:                                               ; preds = %13, %18
  %26 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 11
  %27 = bitcast %"class.blink::HeapVector.251"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  %30 = bitcast %"class.blink::HeapVector.251"* %26 to i8**
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %32 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %32, i64 11
  %34 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8** %30) #6
  br i1 %29, label %41, label %35

35:                                               ; preds = %25
  %36 = inttoptr i64 %28 to i8*
  %37 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %38 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, i64 5
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %39, align 8
  tail call void %40(%"class.blink::Visitor"* %1, i8* nonnull %36, i8* nonnull %36, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %41

41:                                               ; preds = %25, %35
  %42 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 1
  %43 = bitcast %"class.blink::EventTargetData"* %42 to i8*
  %44 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261) #6
  %45 = bitcast i8* %44 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %45, %"class.blink::Visitor"* %1) #6
  %46 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %46, %"class.blink::Visitor"* %1) #6
  %47 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 2
  %48 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %47 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %48, %"class.blink::Visitor"* %1) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #6
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #6
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink13MediaRecorder5TraceEPNS_7VisitorE(%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 1
  %4 = bitcast i32* %3 to %"class.blink::MediaRecorder"*
  tail call void @_ZNK5blink13MediaRecorder5TraceEPNS_7VisitorE(%"class.blink::MediaRecorder"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink13MediaRecorder5TraceEPNS_7VisitorE(%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 -1, i32 2, i32 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to %"class.blink::MediaRecorder"*
  tail call void @_ZNK5blink13MediaRecorder5TraceEPNS_7VisitorE(%"class.blink::MediaRecorder"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13MediaRecorder18HasPendingActivityEv(%"class.blink::MediaRecorder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MediaRecorder", %"class.blink::MediaRecorder"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #6
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13MediaRecorder18GetWrapperTypeInfoEv(%"class.blink::MediaRecorder"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13MediaRecorder18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::MediaRecorder"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)**, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)*, %"class.blink::ExecutionContext"* (%"class.blink::MediaRecorder"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::MediaRecorder"* %3) #6
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #6
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_13MediaRecorderEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 7
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i32*
  %4 = load i32, i32* %3, align 8
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare void @_ZN5blink20MediaRecorderOptionsC1Ev(%"class.blink::MediaRecorderOptions"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #6

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.15, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #6
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_13MediaRecorderEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.713"* noalias sret, %"class.WTF::StringAppend"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #6
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #6
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #6
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #6
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.713"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.713"* %0, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #6
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_16MediaStreamTrackEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.277"*, %"class.WTF::Vector.277"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.280"* null, %"class.blink::Member.280"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16MediaStreamTrackEEEEEmm(i64 %9) #6
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #6
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.277"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.280"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #6
  %22 = load %"class.blink::Member.280"*, %"class.blink::Member.280"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.280"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.277", %"class.WTF::Vector.277"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.280"*, %"class.blink::Member.280"** %28, align 8
  %30 = icmp ne %"class.blink::Member.280"* %24, null
  %31 = icmp ne %"class.blink::Member.280"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !50

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.280"* %24 to i8*
  %37 = bitcast %"class.blink::Member.280"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #6
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.280"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.280"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.280", %"class.blink::Member.280"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_16MediaStreamTrackEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.22, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.24, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_16MediaStreamTrackEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.280"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.280", %"class.blink::Member.280"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.280"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16MediaStreamTrackEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_16MediaStreamTrackEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16MediaStreamTrackEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaStreamTrack"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaStreamTrack"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaStreamTrack"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelEN3WTF12StringAppendINS8_INS8_INS8_IPKcNS7_6StringEEESA_EESB_EESA_EEEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::StringAppend.712"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #6
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.712"* %2)
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = tail call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #6
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %12) #6
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #6
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  %29 = getelementptr inbounds i8, i8* %5, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.712"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #6
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.725"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #6
  %14 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #6
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i8* %15) #6
  %16 = bitcast %"class.WTF::StringTypeAdapter.725"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #6
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %2, i8* %18) #6
  %19 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #6
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.712"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #6
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.712"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #6
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #6
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #6
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.712"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #6
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.712"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #6
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #6
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #6
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #6
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.712"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.725", %"class.WTF::StringTypeAdapter.725"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %14) #6
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.713"* %9) #6
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.713"* %9) #6
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #6
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #6
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #6
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #6
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.712"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.727", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.727"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #6
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.727"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %10, i8* %1) #6
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #6
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.728"* nonnull %30, i8* %33) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.713"* %5) #6
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %36) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.712"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.727", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.727"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #6
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.727"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %10, i16* %1) #6
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %10) #6
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.728"* nonnull %30, i16* %33) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #6
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.713"* %5) #6
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i16* %36) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #6
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.713"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #6
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %8) #6
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #6
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #6
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #6
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.725", %"class.WTF::StringTypeAdapter.725"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %14) #6
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.365"* %9) #6
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.365"* %9) #6
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %25, i8* %26) #6
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #6
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #6
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #6
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %41, i8* %42) #6
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #6
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #6
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.365"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.725", %"class.WTF::StringTypeAdapter.725"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.365", %"class.WTF::StringAppend.365"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.725"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %4, i8* %13) #6
  %14 = getelementptr inbounds %"class.WTF::StringAppend.365", %"class.WTF::StringAppend.365"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #6
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0), i8* %30, i8* %31) #6
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #6
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #6
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.27, i64 0, i64 0), i8* %45, i8* %46) #6
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.26, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #6
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #6
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.725"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.728"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.727", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.725"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.725"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %5, i8* %10) #6
  %11 = bitcast %"class.WTF::StringTypeAdapter.725"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.725", %"class.WTF::StringTypeAdapter.725"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #6
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i8* %14) #6
  %15 = bitcast %"class.WTF::StringTypeAdapter.727"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #6
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.727"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i8* %1) #6
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.728"* nonnull %34, i8* %37) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.365"* %6) #6
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.725"* nonnull %5, i8* %40) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.725"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.728"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.727", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.725", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.725"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.725"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %5, i8* %10) #6
  %11 = bitcast %"class.WTF::StringTypeAdapter.725"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.725", %"class.WTF::StringTypeAdapter.725"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #6
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i8* %14) #6
  %15 = bitcast %"class.WTF::StringTypeAdapter.727"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #6
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.727"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.725"* nonnull %3, i16* %1) #6
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.727", %"class.WTF::StringTypeAdapter.727"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.728"* nonnull %34, i16* %37) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.365"* %6) #6
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.725"* nonnull %5, i16* %40) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.712"*, %"class.WTF::StringAppend.713"* byval(%"class.WTF::StringAppend.713") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.713"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.712"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #6
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #6
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #6
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #6
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.712", %"class.WTF::StringAppend.712"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #6
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #6
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.713"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.713"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #6
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #6
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.713", %"class.WTF::StringAppend.713"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #6
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #6
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #6
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #6
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZN3WTF32CodeUnitCompareIgnoringASCIICaseERKNS_6StringEPKc(%"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"*, i64) unnamed_addr #2

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink8BlobDataD1Ev(%"class.blink::BlobData"*) unnamed_addr #3

declare void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

declare void @_ZN5blink20MediaRecorderHandlerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::MediaRecorderHandler"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_20MediaRecorderHandlerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20MediaRecorderHandlerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20MediaRecorderHandlerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20MediaRecorderHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaRecorderHandler"*
  tail call void @_ZNK5blink20MediaRecorderHandler5TraceEPNS_7VisitorE(%"class.blink::MediaRecorderHandler"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20MediaRecorderHandlerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::MediaRecorderHandler"*
  tail call void @_ZN5blink20MediaRecorderHandlerD1Ev(%"class.blink::MediaRecorderHandler"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20MediaRecorderHandlerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink20MediaRecorderHandler5TraceEPNS_7VisitorE(%"class.blink::MediaRecorderHandler"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20MediaRecorderHandlerD1Ev(%"class.blink::MediaRecorderHandler"*) unnamed_addr #3

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

declare void @_ZN5blink9BlobEventC1ERKN3WTF12AtomicStringEPNS_4BlobEd(%"class.blink::BlobEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Blob"*, double) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.254"*, %"class.blink::Event"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.254"* %0, i32 %14) #6
  %15 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %16, i64 %18
  %20 = bitcast %"class.blink::Event"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.257"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #6
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.254"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !50

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %8, align 8
  %10 = icmp eq %"class.blink::Member.257"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64 %11) #6
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.746"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #6
  %16 = ptrtoint %"class.blink::HeapVectorBacking.746"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.254"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.746", %"class.blink::HeapVectorBacking.746"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %8, align 8
  %26 = icmp eq %"class.blink::Member.257"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.257"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #6
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #6
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #6
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.33, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.34, i64 0, i64 0)) #6
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #6
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.254"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5EventEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.254"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.254"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.254"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #6
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #6
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64 %14) #6
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.746"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #6
  %18 = ptrtoint %"class.blink::HeapVectorBacking.746"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.257"*, %"class.blink::Member.257"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.746"* %17, null
  %23 = icmp ne %"class.blink::Member.257"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.257"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !50

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.254"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.746", %"class.blink::HeapVectorBacking.746"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #6
  %33 = bitcast %"class.WTF::Vector.254"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #6
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #6
  %42 = bitcast %"class.WTF::Vector.254"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.254", %"class.WTF::Vector.254"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.746", %"class.blink::HeapVectorBacking.746"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #6
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5EventEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.21, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.22, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.746"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.24, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.746"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.746"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #6
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5EventEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.257"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.257", %"class.blink::Member.257"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.257"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5EventEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5EventEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Event"*
  %4 = bitcast i8* %1 to void (%"class.blink::Event"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Event"*, %"class.blink::Visitor"*)**, void (%"class.blink::Event"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Event"*, %"class.blink::Visitor"*)*, void (%"class.blink::Event"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Event"*, %"class.blink::Visitor"*)*, void (%"class.blink::Event"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Event"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13MediaRecorderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::MediaRecorder"**
  %5 = load %"class.blink::MediaRecorder"*, %"class.blink::MediaRecorder"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::MediaRecorder"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MediaRecorder"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13MediaRecorderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13MediaRecorderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaRecorder"*
  %4 = bitcast i8* %1 to void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)**, void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)*, void (%"class.blink::MediaRecorder"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MediaRecorder"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13MediaRecorderEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::MediaRecorder"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::MediaRecorder"*)**
  %21 = load void (%"class.blink::MediaRecorder"*)*, void (%"class.blink::MediaRecorder"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::MediaRecorder"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::MediaRecorder"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::MediaRecorder"* %12) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #6
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #6
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #6
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #6
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %11, %"class.blink::PersistentBase"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13MediaRecorderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13MediaRecorderEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #6
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #6
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MediaStreamEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaStream"*
  tail call void @_ZNK5blink11MediaStream5TraceEPNS_7VisitorE(%"class.blink::MediaStream"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink11MediaStream5TraceEPNS_7VisitorE(%"class.blink::MediaStream"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!27 = distinct !{!27, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!30 = distinct !{!30, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!33 = distinct !{!33, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink22WrapPersistentInternalINS_13MediaRecorderEEENS_10PersistentIT_EEPS3_: argument 0"}
!36 = distinct !{!36, !"_ZN5blink22WrapPersistentInternalINS_13MediaRecorderEEENS_10PersistentIT_EEPS3_"}
!37 = !{!38, !40, !42}
!38 = distinct !{!38, !39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13MediaRecorderEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!39 = distinct !{!39, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13MediaRecorderEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!40 = distinct !{!40, !41, !"_ZN4base8BindOnceIMN5blink13MediaRecorderEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8BindOnceIMN5blink13MediaRecorderEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!42 = distinct !{!42, !43, !"_ZN3WTF4BindIMN5blink13MediaRecorderEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF4BindIMN5blink13MediaRecorderEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!46 = distinct !{!46, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!50 = !{!"branch_weights", i32 2000, i32 1}
