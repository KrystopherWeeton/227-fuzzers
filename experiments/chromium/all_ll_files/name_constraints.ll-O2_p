; ModuleID = '../../net/cert/internal/name_constraints.cc'
source_filename = "../../net/cert/internal/name_constraints.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::NameConstraints" = type { %"struct.net::GeneralNames", %"struct.net::GeneralNames", i32, [4 x i8] }
%"struct.net::GeneralNames" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.8", %"class.std::__1::vector.15", %"class.std::__1::vector", i32, [4 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.3" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.net::IPAddress"*, %"class.net::IPAddress"*, %"class.std::__1::__compressed_pair.10" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.net::IPAddress"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.17" }
%"struct.std::__1::pair" = type { %"class.net::IPAddress", i32 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::der::Input"*, %"class.net::der::Input"*, %"class.std::__1::__compressed_pair" }
%"class.net::der::Input" = type { i8*, i64 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::der::Input"* }
%"class.net::CertErrors" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.net::CertError"*, %"struct.net::CertError"*, %"class.std::__1::__compressed_pair.33" }
%"struct.net::CertError" = type { i32, i8*, %"class.std::__1::unique_ptr.27" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::CertErrorParams"* }
%"class.net::CertErrorParams" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.net::CertError"* }
%"class.net::der::Parser" = type { %struct.cbs_st, i64 }
%struct.cbs_st = type { i8*, i64 }

@_ZN3net11cert_errors28kTooManyNameConstraintChecksE = external local_unnamed_addr constant i8*, align 8
@_ZN3net11cert_errors30kNotPermittedByNameConstraintsE = external local_unnamed_addr constant i8*, align 8
@_ZN3net25kFailedParsingGeneralNameE = external local_unnamed_addr constant i8*, align 8

@_ZN3net15NameConstraintsD1Ev = hidden unnamed_addr alias void (%"class.net::NameConstraints"*), void (%"class.net::NameConstraints"*)* @_ZN3net15NameConstraintsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15NameConstraintsD2Ev(%"class.net::NameConstraints"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1
  tail call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* %2) #8
  %3 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0
  tail call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::NameConstraints"* @_ZN3net15NameConstraints6CreateERKNS_3der5InputEbPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), i1 zeroext, %"class.net::CertErrors"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 504) #9
  %5 = bitcast i8* %4 to %"class.net::NameConstraints"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 0, i64 504, i1 false)
  %6 = bitcast i8* %4 to %"struct.net::GeneralNames"*
  tail call void @_ZN3net12GeneralNamesC1Ev(%"struct.net::GeneralNames"* nonnull %6) #8
  %7 = getelementptr inbounds i8, i8* %4, i64 248
  %8 = bitcast i8* %7 to %"struct.net::GeneralNames"*
  tail call void @_ZN3net12GeneralNamesC1Ev(%"struct.net::GeneralNames"* %8) #8
  %9 = getelementptr inbounds i8, i8* %4, i64 496
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = ptrtoint i8* %4 to i64
  %12 = tail call zeroext i1 @_ZN3net15NameConstraints5ParseERKNS_3der5InputEbPNS_10CertErrorsE(%"class.net::NameConstraints"* nonnull %5, %"class.net::der::Input"* dereferenceable(16) %0, i1 zeroext %1, %"class.net::CertErrors"* %2)
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  tail call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* %8) #8
  tail call void @_ZN3net12GeneralNamesD1Ev(%"struct.net::GeneralNames"* nonnull %6) #8
  tail call void @_ZdlPv(i8* nonnull %4) #9
  br label %14

14:                                               ; preds = %3, %13
  %15 = phi i64 [ 0, %13 ], [ %11, %3 ]
  %16 = inttoptr i64 %15 to %"class.net::NameConstraints"*
  ret %"class.net::NameConstraints"* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15NameConstraints5ParseERKNS_3der5InputEbPNS_10CertErrorsE(%"class.net::NameConstraints"*, %"class.net::der::Input"* dereferenceable(16), i1 zeroext, %"class.net::CertErrors"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Parser", align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.net::der::Input", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.net::der::Input", align 8
  %11 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = bitcast %"class.net::der::Parser"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Input"* dereferenceable(16) %1) #8
  %13 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = bitcast %"class.net::der::Parser"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %6) #8
  %15 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Parser"* nonnull %6) #8
  br i1 %15, label %16, label %66

16:                                               ; preds = %4
  %17 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #8
  br i1 %17, label %66, label %18

18:                                               ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #8
  store i8 0, i8* %7, align 1
  %19 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  %20 = bitcast %"class.net::der::Input"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %8) #8
  %21 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 0) #8
  %22 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %6, i32 %21, %"class.net::der::Input"* nonnull %8, i8* nonnull %7) #8
  br i1 %22, label %23, label %64

23:                                               ; preds = %18
  %24 = load i8, i8* %7, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0
  %28 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_120ParseGeneralSubtreesERKNS_3der5InputEPNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %8, %"struct.net::GeneralNames"* %27, %"class.net::CertErrors"* %3)
  br i1 %28, label %29, label %64

29:                                               ; preds = %23, %26
  %30 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %31 = load i32, i32* %30, align 8
  %32 = select i1 %2, i32 511, i32 148
  %33 = and i32 %31, %32
  %34 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = or i32 %35, %33
  store i32 %36, i32* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %37 = bitcast %"class.net::der::Input"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #8
  %38 = bitcast %"class.net::der::Input"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %10) #8
  %39 = call i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext 1) #8
  %40 = call zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"* nonnull %6, i32 %39, %"class.net::der::Input"* nonnull %10, i8* nonnull %9) #8
  br i1 %40, label %41, label %62

41:                                               ; preds = %29
  %42 = load i8, i8* %9, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1
  %46 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_120ParseGeneralSubtreesERKNS_3der5InputEPNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %10, %"struct.net::GeneralNames"* %45, %"class.net::CertErrors"* %3)
  br i1 %46, label %47, label %62

47:                                               ; preds = %44
  %48 = load i8, i8* %9, align 1
  br label %49

49:                                               ; preds = %47, %41
  %50 = phi i8 [ %48, %47 ], [ 0, %41 ]
  %51 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 10
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, %32
  %54 = load i32, i32* %34, align 8
  %55 = or i32 %54, %53
  store i32 %55, i32* %34, align 8
  %56 = load i8, i8* %7, align 1, !range !2
  %57 = or i8 %50, %56
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %49
  %60 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %6) #8
  %61 = xor i1 %60, true
  br label %62

62:                                               ; preds = %59, %49, %44, %29
  %63 = phi i1 [ false, %29 ], [ false, %44 ], [ false, %49 ], [ %61, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  br label %64

64:                                               ; preds = %26, %18, %62
  %65 = phi i1 [ %63, %62 ], [ false, %18 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #8
  br label %66

66:                                               ; preds = %16, %4, %64
  %67 = phi i1 [ %65, %64 ], [ false, %4 ], [ false, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  ret i1 %67
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"* dereferenceable(16)) unnamed_addr #4

declare void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"*) unnamed_addr #4

declare zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"*, %"class.net::der::Parser"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"*) local_unnamed_addr #4

declare void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"*) unnamed_addr #4

declare zeroext i1 @_ZN3net3der6Parser15ReadOptionalTagEjPNS0_5InputEPb(%"class.net::der::Parser"*, i32, %"class.net::der::Input"*, i8*) local_unnamed_addr #4

declare i32 @_ZN3net3der26ContextSpecificConstructedEh(i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_120ParseGeneralSubtreesERKNS_3der5InputEPNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), %"struct.net::GeneralNames"*, %"class.net::CertErrors"*) unnamed_addr #0 {
  %4 = alloca %"class.net::der::Parser", align 8
  %5 = alloca %"class.net::der::Parser", align 8
  %6 = alloca %"class.net::der::Input", align 8
  %7 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = bitcast %"class.net::der::Parser"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1ERKNS0_5InputE(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Input"* dereferenceable(16) %0) #8
  %9 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %9, label %10, label %31

10:                                               ; preds = %3
  %11 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %11, label %12, label %31

12:                                               ; preds = %10
  %13 = bitcast %"class.net::der::Parser"* %5 to i8*
  %14 = bitcast %"class.net::der::Input"* %6 to i8*
  %15 = bitcast %"class.net::der::Parser"* %5 to i8*
  %16 = bitcast %"class.net::der::Input"* %6 to i8*
  br label %17

17:                                               ; preds = %12, %29
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN3net3der6ParserC1Ev(%"class.net::der::Parser"* nonnull %5) #8
  %18 = call zeroext i1 @_ZN3net3der6Parser12ReadSequenceEPS1_(%"class.net::der::Parser"* nonnull %4, %"class.net::der::Parser"* nonnull %5) #8
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  br label %31

20:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  call void @_ZN3net3der5InputC1Ev(%"class.net::der::Input"* nonnull %6) #8
  %21 = call zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"* nonnull %5, %"class.net::der::Input"* nonnull %6) #8
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  %23 = call zeroext i1 @_ZN3net16ParseGeneralNameERKNS_3der5InputENS_12GeneralNames29ParseGeneralNameIPAddressTypeEPS4_PNS_10CertErrorsE(%"class.net::der::Input"* nonnull dereferenceable(16) %6, i32 1, %"struct.net::GeneralNames"* %1, %"class.net::CertErrors"* %2) #8
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = load i8*, i8** @_ZN3net25kFailedParsingGeneralNameE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %2, i8* %25) #8
  br label %28

26:                                               ; preds = %22
  %27 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %5) #8
  br i1 %27, label %28, label %29

28:                                               ; preds = %20, %26, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  br label %31

29:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  %30 = call zeroext i1 @_ZN3net3der6Parser7HasMoreEv(%"class.net::der::Parser"* nonnull %4) #8
  br i1 %30, label %17, label %31

31:                                               ; preds = %29, %10, %28, %19, %3
  %32 = phi i1 [ false, %3 ], [ false, %19 ], [ false, %28 ], [ true, %10 ], [ true, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net15NameConstraints15IsPermittedCertERKNS_3der5InputEPKNS_12GeneralNamesEPNS_10CertErrorsE(%"class.net::NameConstraints"* readonly, %"class.net::der::Input"* dereferenceable(16), %"struct.net::GeneralNames"* readonly, %"class.net::CertErrors"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = icmp ne %"struct.net::GeneralNames"* %2, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %9 = bitcast %"class.net::der::Input"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4
  %12 = bitcast %"class.std::__1::vector"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %15 = bitcast %"class.net::der::Input"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4
  %18 = bitcast %"class.std::__1::vector"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %10, %13
  %21 = ashr exact i64 %20, 4
  %22 = sub i64 %16, %19
  %23 = ashr exact i64 %22, 4
  %24 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %23) #8
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 -1, i64 %26, !prof !3
  br label %136

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 2, i32 0, i32 1
  %31 = bitcast %"class.base::BasicStringPiece"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.1"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %32, %34
  %36 = ashr exact i64 %35, 4
  %37 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %39 = bitcast %"class.base::BasicStringPiece"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.1"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 4
  %45 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %47 = bitcast %"class.base::BasicStringPiece"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.1"* %45 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = ashr exact i64 %51, 4
  %53 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %44, i64 %52) #8
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 -1, i64 %55, !prof !3
  %57 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %36, i64 %56) #8
  %58 = extractvalue { i64, i1 } %57, 1
  %59 = extractvalue { i64, i1 } %57, 0
  %60 = select i1 %58, i64 -1, i64 %59, !prof !3
  %61 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 4
  %62 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 4, i32 0, i32 1
  %63 = bitcast %"class.net::der::Input"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.std::__1::vector"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = ashr exact i64 %67, 4
  %69 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4
  %70 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %71 = bitcast %"class.net::der::Input"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::vector"* %69 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = sub i64 %72, %74
  %76 = ashr exact i64 %75, 4
  %77 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4
  %78 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %79 = bitcast %"class.net::der::Input"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.std::__1::vector"* %77 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = sub i64 %80, %82
  %84 = ashr exact i64 %83, 4
  %85 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %76, i64 %84) #8
  %86 = extractvalue { i64, i1 } %85, 1
  %87 = extractvalue { i64, i1 } %85, 0
  %88 = select i1 %86, i64 -1, i64 %87
  %89 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %68, i64 %88) #8
  %90 = extractvalue { i64, i1 } %89, 1
  %91 = extractvalue { i64, i1 } %89, 0
  %92 = select i1 %90, i64 -1, i64 %91, !prof !3
  %93 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %60, i64 %92) #8
  %94 = extractvalue { i64, i1 } %93, 1
  %95 = extractvalue { i64, i1 } %93, 0
  %96 = select i1 %94, i64 -1, i64 %95, !prof !3
  %97 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 7
  %98 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 7, i32 0, i32 1
  %99 = bitcast %"class.net::IPAddress"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.8"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = sdiv exact i64 %103, 17
  %105 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8
  %106 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8, i32 0, i32 1
  %107 = bitcast %"struct.std::__1::pair"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector.15"* %105 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = sdiv exact i64 %111, 24
  %113 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8
  %114 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8, i32 0, i32 1
  %115 = bitcast %"struct.std::__1::pair"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.std::__1::vector.15"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %116, %118
  %120 = sdiv exact i64 %119, 24
  %121 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %112, i64 %120) #8
  %122 = extractvalue { i64, i1 } %121, 1
  %123 = extractvalue { i64, i1 } %121, 0
  %124 = select i1 %122, i64 -1, i64 %123, !prof !3
  %125 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %104, i64 %124) #8
  %126 = extractvalue { i64, i1 } %125, 1
  %127 = extractvalue { i64, i1 } %125, 0
  %128 = select i1 %126, i64 -1, i64 %127, !prof !3
  %129 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %96, i64 %128) #8
  %130 = extractvalue { i64, i1 } %129, 1
  %131 = extractvalue { i64, i1 } %129, 0
  %132 = select i1 %130, i64 -1, i64 %131, !prof !3
  %133 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %142, label %136

136:                                              ; preds = %7, %28
  %137 = phi i64 [ %27, %7 ], [ %88, %28 ]
  %138 = phi i64 [ 0, %7 ], [ %132, %28 ]
  %139 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %138, i64 %137) #8
  %140 = extractvalue { i64, i1 } %139, 1
  %141 = extractvalue { i64, i1 } %139, 0
  br i1 %140, label %145, label %142

142:                                              ; preds = %136, %28
  %143 = phi i64 [ %132, %28 ], [ %141, %136 ]
  %144 = icmp ugt i64 %143, 1048576
  br i1 %144, label %145, label %147

145:                                              ; preds = %136, %142
  %146 = load i8*, i8** @_ZN3net11cert_errors28kTooManyNameConstraintChecksE, align 8
  tail call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %146) #8
  br label %352

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 2
  %149 = load i32, i32* %148, align 8
  br i1 %6, label %150, label %304

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 10
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %149, -149
  %154 = and i32 %153, %152
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  tail call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %157) #8
  br label %352

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 2, i32 0, i32 0
  %160 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %159, align 8
  %161 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 2, i32 0, i32 1
  %162 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %161, align 8
  %163 = icmp eq %"class.base::BasicStringPiece"* %160, %162
  br i1 %163, label %212, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %166 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %167 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %168 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %169 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  br label %170

170:                                              ; preds = %164, %207
  %171 = phi %"class.base::BasicStringPiece"* [ %160, %164 ], [ %208, %207 ]
  %172 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %171, i64 0, i32 0
  %173 = load i8*, i8** %172, align 8
  %174 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %171, i64 0, i32 1
  %175 = load i64, i64* %174, align 8
  %176 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %165, align 8
  %177 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %166, align 8
  %178 = icmp eq %"class.base::BasicStringPiece"* %176, %177
  br i1 %178, label %189, label %181

179:                                              ; preds = %181
  %180 = icmp eq %"class.base::BasicStringPiece"* %188, %177
  br i1 %180, label %189, label %181

181:                                              ; preds = %170, %179
  %182 = phi %"class.base::BasicStringPiece"* [ %188, %179 ], [ %176, %170 ]
  %183 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %182, i64 0, i32 0
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %182, i64 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114DNSNameMatchesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS0_17WildcardMatchTypeE(i8* %173, i64 %175, i8* %184, i64 %186, i32 0) #8
  %188 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %182, i64 1
  br i1 %187, label %210, label %179

189:                                              ; preds = %179, %170
  %190 = load i32, i32* %167, align 8
  %191 = and i32 %190, 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %207, label %193

193:                                              ; preds = %189
  %194 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %168, align 8
  %195 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %169, align 8
  %196 = icmp eq %"class.base::BasicStringPiece"* %194, %195
  br i1 %196, label %210, label %199

197:                                              ; preds = %199
  %198 = icmp eq %"class.base::BasicStringPiece"* %206, %195
  br i1 %198, label %210, label %199

199:                                              ; preds = %193, %197
  %200 = phi %"class.base::BasicStringPiece"* [ %206, %197 ], [ %194, %193 ]
  %201 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %200, i64 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %200, i64 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114DNSNameMatchesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS0_17WildcardMatchTypeE(i8* %173, i64 %175, i8* %202, i64 %204, i32 1) #8
  %206 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %200, i64 1
  br i1 %205, label %207, label %197

207:                                              ; preds = %199, %189
  %208 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %171, i64 1
  %209 = icmp eq %"class.base::BasicStringPiece"* %208, %162
  br i1 %209, label %212, label %170

210:                                              ; preds = %193, %181, %197
  %211 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  tail call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %211) #8
  br label %352

212:                                              ; preds = %207, %158
  %213 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 4, i32 0, i32 0
  %214 = load %"class.net::der::Input"*, %"class.net::der::Input"** %213, align 8
  %215 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 4, i32 0, i32 1
  %216 = load %"class.net::der::Input"*, %"class.net::der::Input"** %215, align 8
  %217 = icmp eq %"class.net::der::Input"* %214, %216
  br i1 %217, label %254, label %218

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %220 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %221 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %222 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %223 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  br label %224

224:                                              ; preds = %218, %249
  %225 = phi %"class.net::der::Input"* [ %214, %218 ], [ %250, %249 ]
  %226 = load %"class.net::der::Input"*, %"class.net::der::Input"** %219, align 8
  %227 = load %"class.net::der::Input"*, %"class.net::der::Input"** %220, align 8
  %228 = icmp eq %"class.net::der::Input"* %226, %227
  br i1 %228, label %235, label %231

229:                                              ; preds = %231
  %230 = icmp eq %"class.net::der::Input"* %234, %227
  br i1 %230, label %235, label %231

231:                                              ; preds = %224, %229
  %232 = phi %"class.net::der::Input"* [ %234, %229 ], [ %226, %224 ]
  %233 = tail call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %225, %"class.net::der::Input"* dereferenceable(16) %232) #8
  %234 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %232, i64 1
  br i1 %233, label %252, label %229

235:                                              ; preds = %229, %224
  %236 = load i32, i32* %221, align 8
  %237 = and i32 %236, 16
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %249, label %239

239:                                              ; preds = %235
  %240 = load %"class.net::der::Input"*, %"class.net::der::Input"** %222, align 8
  %241 = load %"class.net::der::Input"*, %"class.net::der::Input"** %223, align 8
  %242 = icmp eq %"class.net::der::Input"* %240, %241
  br i1 %242, label %252, label %245

243:                                              ; preds = %245
  %244 = icmp eq %"class.net::der::Input"* %248, %241
  br i1 %244, label %252, label %245

245:                                              ; preds = %239, %243
  %246 = phi %"class.net::der::Input"* [ %248, %243 ], [ %240, %239 ]
  %247 = tail call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %225, %"class.net::der::Input"* dereferenceable(16) %246) #8
  %248 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %246, i64 1
  br i1 %247, label %249, label %243

249:                                              ; preds = %245, %235
  %250 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %225, i64 1
  %251 = icmp eq %"class.net::der::Input"* %250, %216
  br i1 %251, label %254, label %224

252:                                              ; preds = %239, %231, %243
  %253 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  tail call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %253) #8
  br label %352

254:                                              ; preds = %249, %212
  %255 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 7, i32 0, i32 0
  %256 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %255, align 8
  %257 = getelementptr inbounds %"struct.net::GeneralNames", %"struct.net::GeneralNames"* %2, i64 0, i32 7, i32 0, i32 1
  %258 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %257, align 8
  %259 = icmp eq %"class.net::IPAddress"* %256, %258
  br i1 %259, label %317, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8, i32 0, i32 0
  %262 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8, i32 0, i32 1
  %263 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %264 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8, i32 0, i32 0
  %265 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8, i32 0, i32 1
  br label %266

266:                                              ; preds = %260, %299
  %267 = phi %"class.net::IPAddress"* [ %256, %260 ], [ %300, %299 ]
  %268 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %261, align 8
  %269 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %262, align 8
  %270 = icmp eq %"struct.std::__1::pair"* %268, %269
  br i1 %270, label %281, label %273

271:                                              ; preds = %273
  %272 = icmp eq %"struct.std::__1::pair"* %280, %269
  br i1 %272, label %281, label %273

273:                                              ; preds = %266, %271
  %274 = phi %"struct.std::__1::pair"* [ %280, %271 ], [ %268, %266 ]
  %275 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 0, i32 0
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i64
  %279 = tail call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17) %267, %"class.net::IPAddress"* dereferenceable(17) %275, i64 %278) #8
  %280 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %274, i64 1
  br i1 %279, label %302, label %271

281:                                              ; preds = %271, %266
  %282 = load i32, i32* %263, align 8
  %283 = trunc i32 %282 to i8
  %284 = icmp slt i8 %283, 0
  br i1 %284, label %285, label %299

285:                                              ; preds = %281
  %286 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %264, align 8
  %287 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %265, align 8
  %288 = icmp eq %"struct.std::__1::pair"* %286, %287
  br i1 %288, label %302, label %291

289:                                              ; preds = %291
  %290 = icmp eq %"struct.std::__1::pair"* %298, %287
  br i1 %290, label %302, label %291

291:                                              ; preds = %285, %289
  %292 = phi %"struct.std::__1::pair"* [ %298, %289 ], [ %286, %285 ]
  %293 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 0, i32 0
  %294 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 0, i32 1
  %295 = load i32, i32* %294, align 4
  %296 = zext i32 %295 to i64
  %297 = tail call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17) %267, %"class.net::IPAddress"* dereferenceable(17) %293, i64 %296) #8
  %298 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %292, i64 1
  br i1 %297, label %299, label %289

299:                                              ; preds = %291, %281
  %300 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %267, i64 1
  %301 = icmp eq %"class.net::IPAddress"* %300, %258
  br i1 %301, label %317, label %266

302:                                              ; preds = %285, %273, %289
  %303 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  tail call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %303) #8
  br label %352

304:                                              ; preds = %147
  %305 = and i32 %149, 2
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %321, label %307

307:                                              ; preds = %304
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %308 = call zeroext i1 @_ZN3net24NameContainsEmailAddressERKNS_3der5InputEPb(%"class.net::der::Input"* dereferenceable(16) %1, i8* nonnull %5) #8
  br i1 %308, label %311, label %309

309:                                              ; preds = %307
  %310 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %310) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %352

311:                                              ; preds = %307
  %312 = load i8, i8* %5, align 1, !range !2
  %313 = icmp eq i8 %312, 0
  br i1 %313, label %316, label %314

314:                                              ; preds = %311
  %315 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %315) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %352

316:                                              ; preds = %311
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %321

317:                                              ; preds = %299, %254
  %318 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %1, i64 0, i32 1
  %319 = load i64, i64* %318, align 8
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %352, label %321

321:                                              ; preds = %304, %316, %317
  %322 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %323 = load %"class.net::der::Input"*, %"class.net::der::Input"** %322, align 8
  %324 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %325 = load %"class.net::der::Input"*, %"class.net::der::Input"** %324, align 8
  %326 = icmp eq %"class.net::der::Input"* %323, %325
  br i1 %326, label %333, label %329

327:                                              ; preds = %329
  %328 = icmp eq %"class.net::der::Input"* %332, %325
  br i1 %328, label %333, label %329

329:                                              ; preds = %321, %327
  %330 = phi %"class.net::der::Input"* [ %332, %327 ], [ %323, %321 ]
  %331 = call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %330) #8
  %332 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %330, i64 1
  br i1 %331, label %350, label %327

333:                                              ; preds = %327, %321
  %334 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %335 = load i32, i32* %334, align 8
  %336 = and i32 %335, 16
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %352, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %340 = load %"class.net::der::Input"*, %"class.net::der::Input"** %339, align 8
  %341 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %342 = load %"class.net::der::Input"*, %"class.net::der::Input"** %341, align 8
  %343 = icmp eq %"class.net::der::Input"* %340, %342
  br i1 %343, label %350, label %346

344:                                              ; preds = %346
  %345 = icmp eq %"class.net::der::Input"* %349, %342
  br i1 %345, label %350, label %346

346:                                              ; preds = %338, %344
  %347 = phi %"class.net::der::Input"* [ %349, %344 ], [ %340, %338 ]
  %348 = call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %347) #8
  %349 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %347, i64 1
  br i1 %348, label %352, label %344

350:                                              ; preds = %329, %344, %338
  %351 = load i8*, i8** @_ZN3net11cert_errors30kNotPermittedByNameConstraintsE, align 8
  call void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"* %3, i8* %351) #8
  br label %352

352:                                              ; preds = %346, %333, %302, %252, %210, %317, %309, %314, %350, %156, %145
  ret void
}

declare void @_ZN3net10CertErrors8AddErrorEPKv(%"class.net::CertErrors"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15NameConstraints18IsPermittedDNSNameEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::NameConstraints"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %5 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %4, align 8
  %6 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %7 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %6, align 8
  %8 = icmp eq %"class.base::BasicStringPiece"* %5, %7
  br i1 %8, label %19, label %11

9:                                                ; preds = %11
  %10 = icmp eq %"class.base::BasicStringPiece"* %18, %7
  br i1 %10, label %19, label %11

11:                                               ; preds = %3, %9
  %12 = phi %"class.base::BasicStringPiece"* [ %18, %9 ], [ %5, %3 ]
  %13 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114DNSNameMatchesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS0_17WildcardMatchTypeE(i8* %1, i64 %2, i8* %14, i64 %16, i32 0)
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %12, i64 1
  br i1 %17, label %40, label %9

19:                                               ; preds = %9, %3
  %20 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %25, align 8
  %27 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %28 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %27, align 8
  %29 = icmp eq %"class.base::BasicStringPiece"* %26, %28
  br i1 %29, label %40, label %32

30:                                               ; preds = %32
  %31 = icmp eq %"class.base::BasicStringPiece"* %39, %28
  br i1 %31, label %40, label %32

32:                                               ; preds = %24, %30
  %33 = phi %"class.base::BasicStringPiece"* [ %39, %30 ], [ %26, %24 ]
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = tail call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114DNSNameMatchesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS0_17WildcardMatchTypeE(i8* %1, i64 %2, i8* %35, i64 %37, i32 1)
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %33, i64 1
  br i1 %38, label %40, label %30

40:                                               ; preds = %11, %30, %32, %24, %19
  %41 = phi i1 [ true, %19 ], [ false, %24 ], [ false, %30 ], [ true, %32 ], [ false, %11 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15NameConstraints24IsPermittedDirectoryNameERKNS_3der5InputE(%"class.net::NameConstraints"* nocapture readonly, %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 0
  %4 = load %"class.net::der::Input"*, %"class.net::der::Input"** %3, align 8
  %5 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 4, i32 0, i32 1
  %6 = load %"class.net::der::Input"*, %"class.net::der::Input"** %5, align 8
  %7 = icmp eq %"class.net::der::Input"* %4, %6
  br i1 %7, label %14, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"class.net::der::Input"* %13, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"class.net::der::Input"* [ %13, %8 ], [ %4, %2 ]
  %12 = tail call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %11) #8
  %13 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %11, i64 1
  br i1 %12, label %31, label %8

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 16
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %21 = load %"class.net::der::Input"*, %"class.net::der::Input"** %20, align 8
  %22 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %23 = load %"class.net::der::Input"*, %"class.net::der::Input"** %22, align 8
  %24 = icmp eq %"class.net::der::Input"* %21, %23
  br i1 %24, label %31, label %27

25:                                               ; preds = %27
  %26 = icmp eq %"class.net::der::Input"* %30, %23
  br i1 %26, label %31, label %27

27:                                               ; preds = %19, %25
  %28 = phi %"class.net::der::Input"* [ %30, %25 ], [ %21, %19 ]
  %29 = tail call zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16) %1, %"class.net::der::Input"* dereferenceable(16) %28) #8
  %30 = getelementptr inbounds %"class.net::der::Input", %"class.net::der::Input"* %28, i64 1
  br i1 %29, label %31, label %25

31:                                               ; preds = %10, %25, %27, %19, %14
  %32 = phi i1 [ true, %14 ], [ false, %19 ], [ false, %25 ], [ true, %27 ], [ false, %10 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net15NameConstraints13IsPermittedIPERKNS_9IPAddressE(%"class.net::NameConstraints"* nocapture readonly, %"class.net::IPAddress"* dereferenceable(17)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 1, i32 8, i32 0, i32 1
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  br i1 %7, label %18, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.std::__1::pair"* %17, %6
  br i1 %9, label %18, label %10

10:                                               ; preds = %2, %8
  %11 = phi %"struct.std::__1::pair"* [ %17, %8 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = tail call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17) %1, %"class.net::IPAddress"* dereferenceable(17) %12, i64 %15) #8
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %11, i64 1
  br i1 %16, label %39, label %8

18:                                               ; preds = %8, %2
  %19 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 10
  %20 = load i32, i32* %19, align 8
  %21 = trunc i32 %20 to i8
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8, i32 0, i32 0
  %25 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %24, align 8
  %26 = getelementptr inbounds %"class.net::NameConstraints", %"class.net::NameConstraints"* %0, i64 0, i32 0, i32 8, i32 0, i32 1
  %27 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %26, align 8
  %28 = icmp eq %"struct.std::__1::pair"* %25, %27
  br i1 %28, label %39, label %31

29:                                               ; preds = %31
  %30 = icmp eq %"struct.std::__1::pair"* %38, %27
  br i1 %30, label %39, label %31

31:                                               ; preds = %23, %29
  %32 = phi %"struct.std::__1::pair"* [ %38, %29 ], [ %25, %23 ]
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = tail call zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17) %1, %"class.net::IPAddress"* dereferenceable(17) %33, i64 %36) #8
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  br i1 %37, label %39, label %29

39:                                               ; preds = %10, %29, %31, %23, %18
  %40 = phi i1 [ true, %18 ], [ false, %23 ], [ false, %29 ], [ true, %31 ], [ false, %10 ]
  ret i1 %40
}

declare zeroext i1 @_ZN3net24NameContainsEmailAddressERKNS_3der5InputEPb(%"class.net::der::Input"* dereferenceable(16), i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_114DNSNameMatchesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_NS0_17WildcardMatchTypeE(i8*, i64, i8*, i64, i32) unnamed_addr #0 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %0, i8** %8, align 8
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %1, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  store i8* %2, i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 %3, i64* %11, align 8
  %12 = icmp eq i64 %3, 0
  br i1 %12, label %96, label %13

13:                                               ; preds = %5
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %26, label %15

15:                                               ; preds = %13
  %16 = getelementptr inbounds i8, i8* %0, i64 %1
  %17 = getelementptr inbounds i8, i8* %16, i64 -1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 46
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1)
  %21 = load i64, i64* %11, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %34, label %23

23:                                               ; preds = %15, %20
  %24 = phi i64 [ %21, %20 ], [ %3, %15 ]
  %25 = load i8*, i8** %10, align 8
  br label %26

26:                                               ; preds = %23, %13
  %27 = phi i8* [ %25, %23 ], [ %2, %13 ]
  %28 = phi i64 [ %24, %23 ], [ %3, %13 ]
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = getelementptr inbounds i8, i8* %29, i64 -1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 46
  br i1 %32, label %33, label %34

33:                                               ; preds = %26
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* nonnull %7, i64 1)
  br label %34

34:                                               ; preds = %20, %33, %26
  %35 = icmp eq i32 %4, 0
  %36 = load i64, i64* %9, align 8
  %37 = icmp ugt i64 %36, 2
  %38 = and i1 %35, %37
  br i1 %38, label %39, label %68

39:                                               ; preds = %34
  %40 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 0) #8
  %41 = load i8, i8* %40, align 1
  %42 = icmp eq i8 %41, 42
  br i1 %42, label %43, label %68

43:                                               ; preds = %39
  %44 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1) #8
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 46
  br i1 %46, label %47, label %68

47:                                               ; preds = %43
  %48 = load i64, i64* %11, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = load i8*, i8** %10, align 8
  %52 = call i8* @memchr(i8* %51, i32 46, i64 %48) #8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %68, label %54

54:                                               ; preds = %50
  %55 = ptrtoint i8* %52 to i64
  %56 = ptrtoint i8* %51 to i64
  %57 = sub i64 %55, %56
  %58 = icmp eq i64 %57, -1
  br i1 %58, label %68, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds i8, i8* %52, i64 1
  %61 = xor i64 %57, -1
  %62 = add i64 %48, %61
  %63 = load i8*, i8** %8, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 2
  %65 = load i64, i64* %9, align 8
  %66 = add i64 %65, -2
  %67 = call zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %64, i64 %66, i8* %60, i64 %62) #8
  br i1 %67, label %96, label %68

68:                                               ; preds = %59, %47, %50, %54, %43, %39, %34
  %69 = load i8*, i8** %8, align 8
  %70 = load i64, i64* %9, align 8
  %71 = load i8*, i8** %10, align 8
  %72 = load i64, i64* %11, align 8
  %73 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %69, i64 %70, i8* %71, i64 %72, i32 1) #8
  br i1 %73, label %74, label %96

74:                                               ; preds = %68
  %75 = load i64, i64* %9, align 8
  %76 = load i64, i64* %11, align 8
  %77 = icmp eq i64 %75, %76
  br i1 %77, label %96, label %78

78:                                               ; preds = %74
  %79 = icmp eq i64 %76, 0
  br i1 %79, label %85, label %80

80:                                               ; preds = %78
  %81 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %7, i64 0) #8
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 46
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %7, i64 1)
  br label %85

85:                                               ; preds = %84, %80, %78
  %86 = load i64, i64* %9, align 8
  %87 = load i64, i64* %11, align 8
  %88 = icmp ugt i64 %86, %87
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = xor i64 %87, -1
  %91 = add i64 %86, %90
  %92 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 %91) #8
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 46
  br i1 %94, label %96, label %95

95:                                               ; preds = %89, %85
  br label %96

96:                                               ; preds = %59, %89, %74, %68, %5, %95
  %97 = phi i1 [ false, %95 ], [ true, %5 ], [ false, %68 ], [ true, %74 ], [ true, %89 ], [ true, %59 ]
  ret i1 %97
}

declare zeroext i1 @_ZN3net19VerifyNameInSubtreeERKNS_3der5InputES3_(%"class.net::der::Input"* dereferenceable(16), %"class.net::der::Input"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZN3net22IPAddressMatchesPrefixERKNS_9IPAddressES2_m(%"class.net::IPAddress"* dereferenceable(17), %"class.net::IPAddress"* dereferenceable(17), i64) local_unnamed_addr #4

declare void @_ZN3net12GeneralNamesC1Ev(%"struct.net::GeneralNames"*) unnamed_addr #4

declare zeroext i1 @_ZN3net3der6Parser10ReadRawTLVEPNS0_5InputE(%"class.net::der::Parser"*, %"class.net::der::Input"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3net16ParseGeneralNameERKNS_3der5InputENS_12GeneralNames29ParseGeneralNameIPAddressTypeEPS4_PNS_10CertErrorsE(%"class.net::der::Input"* dereferenceable(16), i32, %"struct.net::GeneralNames"*, %"class.net::CertErrors"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare zeroext i1 @_ZN4base26EqualsCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
