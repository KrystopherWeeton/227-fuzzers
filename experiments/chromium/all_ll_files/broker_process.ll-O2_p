; ModuleID = '../../sandbox/linux/syscall_broker/broker_process.cc'
source_filename = "../../sandbox/linux/syscall_broker/broker_process.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.sandbox::syscall_broker::BrokerProcess" = type { i8, i32, i32, i8, i8, %"class.std::__1::bitset", %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.std::__1::unique_ptr" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.sandbox::syscall_broker::BrokerPermissionList" = type { i32, %"class.std::__1::vector", %"class.sandbox::syscall_broker::BrokerFilePermission"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"* }
%"class.sandbox::syscall_broker::BrokerFilePermission" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.sandbox::syscall_broker::BrokerClient"* }
%"class.sandbox::syscall_broker::BrokerClient" = type <{ %"class.sandbox::syscall_broker::SyscallDispatcher", %"class.sandbox::syscall_broker::BrokerPermissionList"*, %"class.base::ScopedGeneric", %"class.std::__1::bitset", i8, [7 x i8] }>
%"class.sandbox::syscall_broker::SyscallDispatcher" = type { i32 (...)** }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.siginfo_t = type { i32, i32, i32, i32, %union.anon.9 }
%union.anon.9 = type { %struct.anon.13, [80 x i8] }
%struct.anon.13 = type { i32, i32, i32, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sandbox::syscall_broker::BrokerHost" = type { %"class.sandbox::syscall_broker::BrokerPermissionList"*, %"class.std::__1::bitset", %"class.base::ScopedGeneric" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEC2EOS3_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@.str = private unnamed_addr constant [53 x i8] c"../../sandbox/linux/syscall_broker/broker_process.cc\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"0 == kill(broker_pid_, SIGKILL)\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"0 == ret\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"std::move(broker_process_init_callback).Run()\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"!initialized_\00", align 1
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN7sandbox14syscall_broker13BrokerProcessC1EiRKNSt3__16bitsetILm10EEERKNS2_6vectorINS0_20BrokerFilePermissionENS2_9allocatorIS8_EEEENS1_10BrokerTypeEbb = hidden unnamed_addr alias void (%"class.sandbox::syscall_broker::BrokerProcess"*, i32, %"class.std::__1::bitset"*, %"class.std::__1::vector"*, i32, i1, i1), void (%"class.sandbox::syscall_broker::BrokerProcess"*, i32, %"class.std::__1::bitset"*, %"class.std::__1::vector"*, i32, i1, i1)* @_ZN7sandbox14syscall_broker13BrokerProcessC2EiRKNSt3__16bitsetILm10EEERKNS2_6vectorINS0_20BrokerFilePermissionENS2_9allocatorIS8_EEEENS1_10BrokerTypeEbb
@_ZN7sandbox14syscall_broker13BrokerProcessD1Ev = hidden unnamed_addr alias void (%"class.sandbox::syscall_broker::BrokerProcess"*), void (%"class.sandbox::syscall_broker::BrokerProcess"*)* @_ZN7sandbox14syscall_broker13BrokerProcessD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox14syscall_broker13BrokerProcessC2EiRKNSt3__16bitsetILm10EEERKNS2_6vectorINS0_20BrokerFilePermissionENS2_9allocatorIS8_EEEENS1_10BrokerTypeEbb(%"class.sandbox::syscall_broker::BrokerProcess"*, i32, %"class.std::__1::bitset"* nocapture readonly dereferenceable(8), %"class.std::__1::vector"* dereferenceable(24), i32, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = zext i1 %5 to i8
  %9 = zext i1 %6 to i8
  %10 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 1
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 2
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 3
  store i8 %8, i8* %13, align 4
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 4
  store i8 %9, i8* %14, align 1
  %15 = getelementptr inbounds %"class.std::__1::bitset", %"class.std::__1::bitset"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 6
  tail call void @_ZN7sandbox14syscall_broker20BrokerPermissionListC1EiRKNSt3__16vectorINS0_20BrokerFilePermissionENS2_9allocatorIS4_EEEE(%"class.sandbox::syscall_broker::BrokerPermissionList"* %18, i32 %1, %"class.std::__1::vector"* dereferenceable(24) %3) #10
  %19 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 7
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 0, i64* %20, align 8
  ret void
}

declare void @_ZN7sandbox14syscall_broker20BrokerPermissionListC1EiRKNSt3__16vectorINS0_20BrokerFilePermissionENS2_9allocatorIS4_EEEE(%"class.sandbox::syscall_broker::BrokerPermissionList"*, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox14syscall_broker13BrokerProcessD2Ev(%"class.sandbox::syscall_broker::BrokerProcess"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %struct.siginfo_t, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %38, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %10 = load %"class.sandbox::syscall_broker::BrokerClient"*, %"class.sandbox::syscall_broker::BrokerClient"** %9, align 8
  %11 = icmp eq %"class.sandbox::syscall_broker::BrokerClient"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  store %"class.sandbox::syscall_broker::BrokerClient"* null, %"class.sandbox::syscall_broker::BrokerClient"** %9, align 8
  %13 = bitcast %"class.sandbox::syscall_broker::BrokerClient"* %10 to void (%"class.sandbox::syscall_broker::BrokerClient"*)***
  %14 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)**, void (%"class.sandbox::syscall_broker::BrokerClient"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %14, i64 10
  %16 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %15, align 8
  tail call void %16(%"class.sandbox::syscall_broker::BrokerClient"* nonnull %10) #10
  br label %17

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = tail call i32 @kill(i32 %19, i32 9) #10
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError6PCheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %17, %22
  %26 = bitcast %struct.siginfo_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 128, i1 false)
  br label %27

27:                                               ; preds = %30, %25
  %28 = load i32, i32* %18, align 4
  %29 = call i32 @waitid(i32 1, i32 %28, %struct.siginfo_t* nonnull %3, i32 4) #10
  switch i32 %29, label %34 [
    i32 -1, label %30
    i32 0, label %37
  ]

30:                                               ; preds = %27
  %31 = tail call i32* @__errno_location() #11
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %27, label %34

34:                                               ; preds = %27, %30
  %35 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  call void @_ZN7logging10CheckError6PCheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0)) #10
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %37

37:                                               ; preds = %27, %34
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %26) #10
  br label %38

38:                                               ; preds = %1, %37
  %39 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %40 = load %"class.sandbox::syscall_broker::BrokerClient"*, %"class.sandbox::syscall_broker::BrokerClient"** %39, align 8
  store %"class.sandbox::syscall_broker::BrokerClient"* null, %"class.sandbox::syscall_broker::BrokerClient"** %39, align 8
  %41 = icmp eq %"class.sandbox::syscall_broker::BrokerClient"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.sandbox::syscall_broker::BrokerClient"* %40 to void (%"class.sandbox::syscall_broker::BrokerClient"*)***
  %44 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)**, void (%"class.sandbox::syscall_broker::BrokerClient"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %44, i64 10
  %46 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %45, align 8
  call void %46(%"class.sandbox::syscall_broker::BrokerClient"* nonnull %40) #10
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 6
  call void @_ZN7sandbox14syscall_broker20BrokerPermissionListD1Ev(%"class.sandbox::syscall_broker::BrokerPermissionList"* %48) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox14syscall_broker13BrokerProcess12CloseChannelEv(%"class.sandbox::syscall_broker::BrokerProcess"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.sandbox::syscall_broker::BrokerClient"*, %"class.sandbox::syscall_broker::BrokerClient"** %2, align 8
  store %"class.sandbox::syscall_broker::BrokerClient"* null, %"class.sandbox::syscall_broker::BrokerClient"** %2, align 8
  %4 = icmp eq %"class.sandbox::syscall_broker::BrokerClient"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.sandbox::syscall_broker::BrokerClient"* %3 to void (%"class.sandbox::syscall_broker::BrokerClient"*)***
  %7 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)**, void (%"class.sandbox::syscall_broker::BrokerClient"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %7, i64 10
  %9 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %8, align 8
  tail call void %9(%"class.sandbox::syscall_broker::BrokerClient"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare i32 @kill(i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN7logging10CheckError6PCheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @waitid(i32, i32, %struct.siginfo_t*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7sandbox14syscall_broker20BrokerPermissionListD1Ev(%"class.sandbox::syscall_broker::BrokerPermissionList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker13BrokerProcess21ForkSignalBasedBrokerEN4base12OnceCallbackIFbvEEE(%"class.sandbox::syscall_broker::BrokerProcess"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::ScopedGeneric", align 8
  %5 = alloca %"class.base::ScopedGeneric", align 8
  %6 = alloca %"class.base::ScopedGeneric", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.sandbox::syscall_broker::BrokerHost", align 8
  %9 = alloca %"class.base::ScopedGeneric", align 8
  %10 = bitcast %"class.base::ScopedGeneric"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %5, i64 0, i32 2
  %14 = bitcast %"class.base::ScopedGeneric"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 -1, i32* %12, align 8
  store i8 0, i8* %13, align 4
  %15 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  %19 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  store i32 -1, i32* %17, align 8
  store i8 0, i8* %18, align 4
  call void @_ZN7sandbox14syscall_broker13BrokerChannel10CreatePairEPN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEES7_(%"class.base::ScopedGeneric"* nonnull %5, %"class.base::ScopedGeneric"* nonnull %6) #10
  %20 = call i32 @fork() #10
  switch i32 %20, label %21 [
    i32 -1, label %85
    i32 0, label %60
  ]

21:                                               ; preds = %2
  %22 = load i32, i32* %12, align 8
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %5, i32 %22) #10
  %25 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %25) #10
  store i32 -1, i32* %12, align 8
  br label %26

26:                                               ; preds = %21, %24
  store i32 -1, i32* %12, align 8
  %27 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 1
  store i32 %20, i32* %27, align 4
  %28 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 6
  %29 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 3
  %31 = bitcast %"class.base::ScopedGeneric"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31)
  %32 = call i8* @_Znwm(i64 48) #12
  %33 = bitcast i8* %32 to %"class.sandbox::syscall_broker::BrokerClient"*
  %34 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 0, i32 1
  %36 = load i32, i32* %17, align 8
  store i32 -1, i32* %17, align 8
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %35, i64 0, i32 0
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 0, i32 2
  store i8 0, i8* %40, align 4
  br label %44

41:                                               ; preds = %26
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %36) #10
  %42 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %35, i64 0, i32 0
  store i32 %36, i32* %42, align 8
  %43 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 0, i32 2
  store i8 0, i8* %43, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %4, i32 %36) #10
  br label %44

44:                                               ; preds = %38, %41
  %45 = load i8, i8* %30, align 1, !range !2
  %46 = icmp ne i8 %45, 0
  call void @_ZN7sandbox14syscall_broker12BrokerClientC1ERKNS0_20BrokerPermissionListEN4base13ScopedGenericIiNS5_8internal19ScopedFDCloseTraitsEEERKNSt3__16bitsetILm10EEEb(%"class.sandbox::syscall_broker::BrokerClient"* nonnull %33, %"class.sandbox::syscall_broker::BrokerPermissionList"* dereferenceable(48) %28, %"class.base::ScopedGeneric"* nonnull %4, %"class.std::__1::bitset"* dereferenceable(8) %29, i1 zeroext %46) #10
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31)
  %47 = ptrtoint i8* %32 to i64
  %48 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.sandbox::syscall_broker::BrokerClient"*, %"class.sandbox::syscall_broker::BrokerClient"** %49, align 8
  %51 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 %47, i64* %51, align 8
  %52 = icmp eq %"class.sandbox::syscall_broker::BrokerClient"* %50, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %44
  %54 = bitcast %"class.sandbox::syscall_broker::BrokerClient"* %50 to void (%"class.sandbox::syscall_broker::BrokerClient"*)***
  %55 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)**, void (%"class.sandbox::syscall_broker::BrokerClient"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %55, i64 10
  %57 = load void (%"class.sandbox::syscall_broker::BrokerClient"*)*, void (%"class.sandbox::syscall_broker::BrokerClient"*)** %56, align 8
  call void %57(%"class.sandbox::syscall_broker::BrokerClient"* nonnull %50) #10
  br label %58

58:                                               ; preds = %53, %44
  %59 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 0
  store i8 1, i8* %59, align 8
  br label %85

60:                                               ; preds = %2
  %61 = load i32, i32* %17, align 8
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %65, label %63

63:                                               ; preds = %60
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %61) #10
  %64 = load i32, i32* %17, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %64) #10
  store i32 -1, i32* %17, align 8
  br label %65

65:                                               ; preds = %60, %63
  store i32 -1, i32* %17, align 8
  %66 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #10
  %67 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %69, i64* %70, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %67, align 8
  %71 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %72 = inttoptr i64 %69 to %"class.base::internal::BindStateBase"*
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %74 = bitcast void ()** %73 to i1 (%"class.base::internal::BindStateBase"*)**
  %75 = load i1 (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*)** %74, align 8
  %76 = call zeroext i1 %75(%"class.base::internal::BindStateBase"* %72) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #10
  br i1 %76, label %80, label %77

77:                                               ; preds = %65
  %78 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 90, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0)) #10
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #10
  br label %80

80:                                               ; preds = %65, %77
  %81 = bitcast %"class.sandbox::syscall_broker::BrokerHost"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #10
  %82 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 6
  %83 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5
  %84 = bitcast %"class.sandbox::syscall_broker::BrokerHost"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 -86, i64 32, i1 false)
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEC2EOS3_(%"class.base::ScopedGeneric"* nonnull %9, %"class.base::ScopedGeneric"* nonnull dereferenceable(16) %5)
  call void @_ZN7sandbox14syscall_broker10BrokerHostC1ERKNS0_20BrokerPermissionListERKNSt3__16bitsetILm10EEEN4base13ScopedGenericIiNSA_8internal19ScopedFDCloseTraitsEEE(%"class.sandbox::syscall_broker::BrokerHost"* nonnull %8, %"class.sandbox::syscall_broker::BrokerPermissionList"* dereferenceable(48) %82, %"class.std::__1::bitset"* dereferenceable(8) %83, %"class.base::ScopedGeneric"* nonnull %9) #10
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %9) #10
  call void @_ZN7sandbox14syscall_broker10BrokerHost21LoopAndHandleRequestsEv(%"class.sandbox::syscall_broker::BrokerHost"* nonnull %8) #10
  call void @_exit(i32 1) #13
  unreachable

85:                                               ; preds = %2, %58
  %86 = phi i1 [ true, %58 ], [ false, %2 ]
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #10
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  ret i1 %86
}

declare void @_ZN7sandbox14syscall_broker13BrokerChannel10CreatePairEPN4base13ScopedGenericIiNS2_8internal19ScopedFDCloseTraitsEEES7_(%"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @fork() local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEC2EOS3_(%"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 -1, i32* %5, align 8
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %4, i64 0, i32 0
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %10, align 4
  br label %14

11:                                               ; preds = %2
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %6) #10
  %12 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %4, i64 0, i32 0
  store i32 %6, i32* %12, align 4
  %13 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  store i8 0, i8* %13, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %6) #10
  br label %14

14:                                               ; preds = %8, %11
  ret void
}

declare void @_ZN7sandbox14syscall_broker10BrokerHostC1ERKNS0_20BrokerPermissionListERKNSt3__16bitsetILm10EEEN4base13ScopedGenericIiNSA_8internal19ScopedFDCloseTraitsEEE(%"class.sandbox::syscall_broker::BrokerHost"*, %"class.sandbox::syscall_broker::BrokerPermissionList"* dereferenceable(48), %"class.std::__1::bitset"* dereferenceable(8), %"class.base::ScopedGeneric"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i64 44) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #10
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #10
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

declare void @_ZN7sandbox14syscall_broker10BrokerHost21LoopAndHandleRequestsEv(%"class.sandbox::syscall_broker::BrokerHost"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_exit(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7sandbox14syscall_broker13BrokerProcess4InitEN4base12OnceCallbackIFbvEEE(%"class.sandbox::syscall_broker::BrokerProcess"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0)) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = call zeroext i1 @_ZN7sandbox14syscall_broker13BrokerProcess21ForkSignalBasedBrokerEN4base12OnceCallbackIFbvEEE(%"class.sandbox::syscall_broker::BrokerProcess"* %0, %"class.base::OnceCallback"* nonnull %4)
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret i1 %16
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7sandbox14syscall_broker13BrokerProcess16IsSyscallAllowedEi(%"class.sandbox::syscall_broker::BrokerProcess"* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = tail call zeroext i1 @_ZNK7sandbox14syscall_broker13BrokerProcess19IsSyscallBrokerableEib(%"class.sandbox::syscall_broker::BrokerProcess"* %0, i32 %1, i1 zeroext %5)
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7sandbox14syscall_broker13BrokerProcess19IsSyscallBrokerableEib(%"class.sandbox::syscall_broker::BrokerProcess"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #7 align 2 {
  switch i32 %1, label %61 [
    i32 21, label %4
    i32 269, label %4
    i32 83, label %10
    i32 258, label %10
    i32 2, label %16
    i32 257, label %16
    i32 89, label %22
    i32 267, label %22
    i32 82, label %28
    i32 264, label %28
    i32 316, label %28
    i32 84, label %34
    i32 4, label %40
    i32 6, label %40
    i32 262, label %40
    i32 87, label %46
    i32 263, label %52
  ]

4:                                                ; preds = %3, %3
  br i1 %2, label %5, label %61

5:                                                ; preds = %4
  %6 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 2
  %9 = icmp ne i64 %8, 0
  br label %61

10:                                               ; preds = %3, %3
  br i1 %2, label %11, label %61

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 4
  %15 = icmp ne i64 %14, 0
  br label %61

16:                                               ; preds = %3, %3
  br i1 %2, label %17, label %61

17:                                               ; preds = %16
  %18 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 8
  %21 = icmp ne i64 %20, 0
  br label %61

22:                                               ; preds = %3, %3
  br i1 %2, label %23, label %61

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 16
  %27 = icmp ne i64 %26, 0
  br label %61

28:                                               ; preds = %3, %3, %3
  br i1 %2, label %29, label %61

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 32
  %33 = icmp ne i64 %32, 0
  br label %61

34:                                               ; preds = %3
  br i1 %2, label %35, label %61

35:                                               ; preds = %34
  %36 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 64
  %39 = icmp ne i64 %38, 0
  br label %61

40:                                               ; preds = %3, %3, %3
  br i1 %2, label %41, label %61

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i8
  %45 = icmp slt i8 %44, 0
  br label %61

46:                                               ; preds = %3
  br i1 %2, label %47, label %61

47:                                               ; preds = %46
  %48 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 512
  %51 = icmp ne i64 %50, 0
  br label %61

52:                                               ; preds = %3
  br i1 %2, label %53, label %61

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerProcess", %"class.sandbox::syscall_broker::BrokerProcess"* %0, i64 0, i32 5, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = and i64 %55, 64
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = and i64 %55, 512
  %60 = icmp ne i64 %59, 0
  br label %61

61:                                               ; preds = %53, %3, %52, %58, %46, %47, %40, %41, %34, %35, %28, %29, %22, %23, %16, %17, %10, %11, %4, %5
  %62 = phi i1 [ true, %4 ], [ %9, %5 ], [ true, %10 ], [ %15, %11 ], [ true, %16 ], [ %21, %17 ], [ true, %22 ], [ %27, %23 ], [ true, %28 ], [ %33, %29 ], [ true, %34 ], [ %39, %35 ], [ true, %40 ], [ %45, %41 ], [ true, %46 ], [ %51, %47 ], [ true, %53 ], [ true, %52 ], [ %60, %58 ], [ false, %3 ]
  ret i1 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #10
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN7sandbox14syscall_broker12BrokerClientC1ERKNS0_20BrokerPermissionListEN4base13ScopedGenericIiNS5_8internal19ScopedFDCloseTraitsEEERKNSt3__16bitsetILm10EEEb(%"class.sandbox::syscall_broker::BrokerClient"*, %"class.sandbox::syscall_broker::BrokerPermissionList"* dereferenceable(48), %"class.base::ScopedGeneric"*, %"class.std::__1::bitset"* dereferenceable(8), i1 zeroext) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
