; ModuleID = '../../third_party/skia/src/core/SkAnnotation.cpp'
source_filename = "../../third_party/skia/src/core/SkAnnotation.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.0, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.0 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkData = type opaque
%struct.SkPoint = type { float, float }

@.str = private unnamed_addr constant [20 x i8] c"SkAnnotationKey_URL\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"SkAnnotationKey_Define_Named_Dest\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"SkAnnotationKey_Link_Named_Dest\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN16SkAnnotationKeys7URL_KeyEv() local_unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN16SkAnnotationKeys21Define_Named_Dest_KeyEv() local_unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN16SkAnnotationKeys19Link_Named_Dest_KeyEv() local_unnamed_addr #0 align 2 {
  ret i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z21SkAnnotateRectWithURLP8SkCanvasRK6SkRectP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkData*) local_unnamed_addr #1 {
  %4 = icmp eq %class.SkData* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %class.SkData* nonnull %2) #4
  br label %6

6:                                                ; preds = %3, %5
  ret void
}

declare void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z26SkAnnotateNamedDestinationP8SkCanvasRK7SkPointP6SkData(%class.SkCanvas*, %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkData*) local_unnamed_addr #1 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = icmp eq %class.SkData* %2, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = bitcast %struct.SkPoint* %1 to <2 x float>*
  %10 = load <2 x float>, <2 x float>* %9, align 4
  %11 = fadd <2 x float> %10, zeroinitializer
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %10, <2 x float>* %12, align 8
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %11, <2 x float>* %13, align 8
  call void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* %0, %struct.SkRect* nonnull dereferenceable(16) %7, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), %class.SkData* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  br label %14

14:                                               ; preds = %3, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z27SkAnnotateLinkToDestinationP8SkCanvasRK6SkRectP6SkData(%class.SkCanvas*, %struct.SkRect* dereferenceable(16), %class.SkData*) local_unnamed_addr #1 {
  %4 = icmp eq %class.SkData* %2, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void @_ZN8SkCanvas14drawAnnotationERK6SkRectPKcP6SkData(%class.SkCanvas* %0, %struct.SkRect* dereferenceable(16) %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), %class.SkData* nonnull %2) #4
  br label %6

6:                                                ; preds = %3, %5
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
