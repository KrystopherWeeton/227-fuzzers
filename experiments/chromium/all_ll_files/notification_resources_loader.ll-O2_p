; ModuleID = '../../third_party/blink/renderer/modules/notifications/notification_resources_loader.cc'
source_filename = "../../third_party/blink/renderer/modules/notifications/notification_resources_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.183", i32, [4 x i8], %"class.std::__1::unique_ptr.321", %"class.std::__1::unique_ptr.321", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.338", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.363", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.276", %"class.std::__1::unique_ptr.301", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__cxx_atomic_impl.222" }
%"struct.std::__1::__cxx_atomic_impl.222" = type { %"struct.std::__1::__cxx_atomic_base_impl.223" }
%"struct.std::__1::__cxx_atomic_base_impl.223" = type { i64 }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::Worklist.230"* }
%"class.blink::Worklist.230" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::Worklist.244"* }
%"class.blink::Worklist.244" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::Worklist.251"* }
%"class.blink::Worklist.251" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist.258"* }
%"class.blink::Worklist.258" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::Worklist.265"* }
%"class.blink::Worklist.265" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::Worklist.272"* }
%"class.blink::Worklist.272" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.219" }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.279", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.295", [4 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { i64 }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { float }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.304", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.313" }
%"class.WTF::Vector.313" = type { %"class.WTF::VectorBuffer.314" }
%"class.WTF::VectorBuffer.314" = type { %"class.WTF::VectorBufferBase.315" }
%"class.WTF::VectorBufferBase.315" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.321" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"struct.std::__1::pair.331"*, i32, i32 }
%"struct.std::__1::pair.331" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.344" }
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.230"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.237"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.244"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.251"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.258"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.393", i64 }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.395" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.362 }
%class.scoped_refptr.362 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.363" = type { %"struct.std::__1::__atomic_base.364" }
%"struct.std::__1::__atomic_base.364" = type { %"struct.std::__1::__cxx_atomic_impl.365" }
%"struct.std::__1::__cxx_atomic_impl.365" = type { %"struct.std::__1::__cxx_atomic_base_impl.366" }
%"struct.std::__1::__cxx_atomic_base_impl.366" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NotificationResourcesLoader" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration", i8, %"class.base::OnceCallback", i32, %"class.blink::HeapVector", %class.SkBitmap, %class.SkBitmap, %class.SkBitmap, %"class.WTF::Vector.25" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ThreadedIconLoader"* }
%"class.blink::ThreadedIconLoader" = type <{ %"class.blink::ThreadableLoaderClient", %"class.blink::Member.5", %class.scoped_refptr.7, %"class.absl::optional", [4 x i8], %class.SkBitmap, %"class.base::OnceCallback.23", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.blink::ThreadableLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ThreadableLoader"* }
%"class.blink::ThreadableLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::Member.382", %"class.blink::Member.384", %"class.blink::Member.386", %"struct.blink::ResourceLoaderOptions", i32, [4 x i8], %"class.base::TimeDelta", %"class.blink::HeapTaskRunnerTimer", %"class.base::TimeTicks", %"class.blink::RawResourceClientStateChecker", [4 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.32", [7 x i8], %"class.blink::Member.33", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.32" = type { i8 }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.37", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.74", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.372", %"class.blink::ResourceResponse", %class.scoped_refptr.7, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.50", i8, %"class.absl::optional.59", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.48" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.50" = type { %"class.absl::optional_internal::optional_data.51" }
%"class.absl::optional_internal::optional_data.51" = type { %"class.absl::optional_internal::optional_data_base.52" }
%"class.absl::optional_internal::optional_data_base.52" = type { %"class.absl::optional_internal::optional_data_dtor_base.53" }
%"class.absl::optional_internal::optional_data_dtor_base.53" = type { i8, [7 x i8], %union.anon.54 }
%union.anon.54 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.57 }
%union.anon.57 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.43" }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.64", %"class.WTF::Vector.69" }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { i32*, i32, i32 }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.74" = type { %"class.WTF::VectorBuffer.75" }
%"class.WTF::VectorBuffer.75" = type { %"class.WTF::VectorBufferBase.76" }
%"class.WTF::VectorBufferBase.76" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.168" }
%"class.WTF::HashMap.168" = type { %"class.WTF::HashTable.169" }
%"class.WTF::HashTable.169" = type <{ %"struct.WTF::KeyValuePair.171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.171" = type <{ %"class.blink::WeakMember.467", i32, [4 x i8] }>
%"class.blink::WeakMember.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.32", [7 x i8], %"class.blink::Member.33", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.174" }
%"class.WTF::HashTable.174" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.131" }
%"class.base::time_internal::TimeBase.131" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.371 }
%class.scoped_refptr.371 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.82, %class.scoped_refptr.82, %class.scoped_refptr.82, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.85, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.95", %"class.absl::optional.100", %"class.absl::optional.110", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.120", %"class.absl::optional.110", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.110", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.120", %"class.absl::optional.125", i8, %class.scoped_refptr.130 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.77" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.82 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.400", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.77", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.82 }
%"class.WTF::RefCounted.400" = type { %"class.base::RefCounted.401" }
%"class.base::RefCounted.401" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.85 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.86", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.93, i8, %"class.url::Origin" }
%"class.base::RefCounted.86" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.42 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.87"*, %"class.std::__1::unique_ptr.87"*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::unique_ptr.87"* }
%class.scoped_refptr.93 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.94", [4 x i8] }>
%"class.base::RefCountedThreadSafe.94" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.105", %"class.WTF::Vector.69", %"class.WTF::String" }
%"class.WTF::Vector.105" = type { %"class.WTF::VectorBuffer.106" }
%"class.WTF::VectorBuffer.106" = type { %"class.WTF::VectorBufferBase.107" }
%"class.WTF::VectorBufferBase.107" = type { %class.scoped_refptr.82*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.115", %"class.absl::optional.115" }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %"class.base::TimeDelta" }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.130 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.459", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.459" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.460" }
%"class.std::__1::vector.460" = type { %"class.std::__1::__vector_base.461" }
%"class.std::__1::__vector_base.461" = type { i32*, i32*, %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { i32* }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.132", %class.scoped_refptr.147, %class.scoped_refptr.148, %"struct.blink::CacheControlHeader", %"class.absl::optional.115", %"class.absl::optional.149", %"class.absl::optional.149", %"class.absl::optional.149", i64, %"class.blink::KURL", %"class.WTF::Vector.154", %"class.WTF::String", %"class.WTF::Vector.69", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.120", %"class.WTF::Vector.69", %"class.blink::KURL", %"class.absl::optional.159" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.132" = type { %"class.absl::optional_internal::optional_data.133" }
%"class.absl::optional_internal::optional_data.133" = type { %"class.absl::optional_internal::optional_data_base.134" }
%"class.absl::optional_internal::optional_data_base.134" = type { %"class.absl::optional_internal::optional_data_dtor_base.135" }
%"class.absl::optional_internal::optional_data_dtor_base.135" = type { i8, %union.anon.136 }
%union.anon.136 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.69", %"class.WTF::String", i64, i64, %"class.WTF::Vector.137", %"class.WTF::Vector.142" }
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.142" = type { %"class.WTF::VectorBuffer.143" }
%"class.WTF::VectorBuffer.143" = type { %"class.WTF::VectorBufferBase.144" }
%"class.WTF::VectorBufferBase.144" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.147 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.148 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.149" = type { %"class.absl::optional_internal::optional_data.150" }
%"class.absl::optional_internal::optional_data.150" = type { %"class.absl::optional_internal::optional_data_base.151" }
%"class.absl::optional_internal::optional_data_base.151" = type { %"class.absl::optional_internal::optional_data_dtor_base.152" }
%"class.absl::optional_internal::optional_data_dtor_base.152" = type { i8, %union.anon.153 }
%union.anon.153 = type { %"class.base::Time" }
%"class.WTF::Vector.154" = type { %"class.WTF::VectorBuffer.155" }
%"class.WTF::VectorBuffer.155" = type { %"class.WTF::VectorBufferBase.156" }
%"class.WTF::VectorBufferBase.156" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, %union.anon.163 }
%union.anon.163 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::ThreadableLoaderClient"* }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.176", i8, i8, %class.scoped_refptr.180, %class.scoped_refptr.367, %class.scoped_refptr.369 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type opaque
%class.scoped_refptr.180 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.181", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.181" = type { %"class.base::RefCounted.182" }
%"class.base::RefCounted.182" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.367 = type { %"class.base::RefCountedData.368"* }
%"class.base::RefCountedData.368" = type opaque
%class.scoped_refptr.369 = type { %"class.base::RefCountedData.370"* }
%"class.base::RefCountedData.370" = type opaque
%"class.base::TimeDelta" = type { i64 }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.392", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.388, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.388 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.389" }>
%"class.base::RefCountedThreadSafe.389" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.390 }
%class.scoped_refptr.390 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.391", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.blink::WeakMember.392" = type { %"class.blink::MemberBase.6" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%class.scoped_refptr.7 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.8", %"class.WTF::Vector.11" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { i8*, i32, i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback.23" = type { %"class.base::internal::CallbackBase" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.22 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.22 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %class.SkBitmap*, i32, i32 }
%"class.blink::mojom::blink::NotificationData" = type { %"class.WTF::String", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.absl::optional.402", double, i8, i8, i8, %"class.absl::optional.412", %"class.absl::optional.422", %"class.absl::optional.149" }
%"class.absl::optional.402" = type { %"class.absl::optional_internal::optional_data.403" }
%"class.absl::optional_internal::optional_data.403" = type { %"class.absl::optional_internal::optional_data_base.404" }
%"class.absl::optional_internal::optional_data_base.404" = type { %"class.absl::optional_internal::optional_data_dtor_base.405" }
%"class.absl::optional_internal::optional_data_dtor_base.405" = type { i8, %union.anon.406 }
%union.anon.406 = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { i32*, i32, i32 }
%"class.absl::optional.412" = type { %"class.absl::optional_internal::optional_data.413" }
%"class.absl::optional_internal::optional_data.413" = type { %"class.absl::optional_internal::optional_data_base.414" }
%"class.absl::optional_internal::optional_data_base.414" = type { %"class.absl::optional_internal::optional_data_dtor_base.415" }
%"class.absl::optional_internal::optional_data_dtor_base.415" = type { i8, %union.anon.416 }
%union.anon.416 = type { %"class.WTF::Vector.417" }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { i8*, i32, i32 }
%"class.absl::optional.422" = type { %"class.absl::optional_internal::optional_data.423" }
%"class.absl::optional_internal::optional_data.423" = type { %"class.absl::optional_internal::optional_data_base.424" }
%"class.absl::optional_internal::optional_data_base.424" = type { %"class.absl::optional_internal::optional_data_dtor_base.425" }
%"class.absl::optional_internal::optional_data_dtor_base.425" = type { i8, %union.anon.426 }
%union.anon.426 = type { %"class.WTF::Vector.427" }
%"class.WTF::Vector.427" = type { %"class.WTF::VectorBuffer.428" }
%"class.WTF::VectorBuffer.428" = type { %"class.WTF::VectorBufferBase.429" }
%"class.WTF::VectorBufferBase.429" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.430" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::mojom::blink::NotificationAction"* }
%"class.blink::mojom::blink::NotificationAction" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.438" }
%"class.blink::PersistentBase.438" = type { %"class.blink::NotificationResourcesLoader"*, %"class.blink::PersistentNodePtr.439" }
%"class.blink::PersistentNodePtr.439" = type { %"class.blink::PersistentNode"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.452, %"class.mojo::PendingRemote.453" }
%class.scoped_refptr.452 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.453" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr.440" = type { %"class.std::__1::unique_ptr.441" }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::mojom::blink::NotificationResources"* }
%"class.blink::mojom::blink::NotificationResources" = type { %class.SkBitmap, %class.SkBitmap, %class.SkBitmap, %"class.absl::optional.444" }
%"class.absl::optional.444" = type { %"class.absl::optional_internal::optional_data.445" }
%"class.absl::optional_internal::optional_data.445" = type { %"class.absl::optional_internal::optional_data_base.446" }
%"class.absl::optional_internal::optional_data_base.446" = type { %"class.absl::optional_internal::optional_data_dtor_base.447" }
%"class.absl::optional_internal::optional_data_dtor_base.447" = type { i8, %union.anon.448 }
%union.anon.448 = type { %"class.WTF::Vector.25" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_27NotificationResourcesLoaderEEC2EPS2_ = comdat any

$_ZN5blink27NotificationResourcesLoader18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d = comdat any

$_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm = comdat any

$_ZNK3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18NotificationActionEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18ThreadedIconLoaderEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink27NotificationResourcesLoaderE = hidden unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::NotificationResourcesLoader"*, %"class.blink::Visitor"*)* @_ZNK5blink27NotificationResourcesLoader5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkBitmap]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18ThreadedIconLoaderEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadedIconLoader]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18ThreadedIconLoaderE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18ThreadedIconLoaderEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ThreadedIconLoader>, WTF::VectorTraits<blink::Member<blink::ThreadedIconLoader> > >]\00", align 1

@_ZN5blink27NotificationResourcesLoaderC1EN4base12OnceCallbackIFvPS0_EEE = hidden unnamed_addr alias void (%"class.blink::NotificationResourcesLoader"*, %"class.base::OnceCallback"*), void (%"class.blink::NotificationResourcesLoader"*, %"class.base::OnceCallback"*)* @_ZN5blink27NotificationResourcesLoaderC2EN4base12OnceCallbackIFvPS0_EEE
@_ZN5blink27NotificationResourcesLoaderD1Ev = hidden unnamed_addr alias void (%"class.blink::NotificationResourcesLoader"*), void (%"class.blink::NotificationResourcesLoader"*)* @_ZN5blink27NotificationResourcesLoaderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoaderC2EN4base12OnceCallbackIFvPS0_EEE(%"class.blink::NotificationResourcesLoader"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink27NotificationResourcesLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 1
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_27NotificationResourcesLoaderEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %4, %"class.blink::NotificationResourcesLoader"* %0)
  %5 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5
  %13 = bitcast %"class.blink::HeapVector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 6
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %14) #9
  %15 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 7
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %15) #9
  %16 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 8
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %16) #9
  %17 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9
  %18 = bitcast %"class.WTF::Vector.25"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_27NotificationResourcesLoaderEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::NotificationResourcesLoader"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::NotificationResourcesLoader"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #9
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #9
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.331"*, %"struct.std::__1::pair.331"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.331"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink27NotificationResourcesLoader18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoaderD2Ev(%"class.blink::NotificationResourcesLoader"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink27NotificationResourcesLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.SkBitmap*, %class.SkBitmap** %4, align 8
  %6 = icmp eq %class.SkBitmap* %5, null
  br i1 %6, label %24, label %7, !prof !3

7:                                                ; preds = %1
  %8 = bitcast %class.SkBitmap* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 %13
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %class.SkBitmap* [ %17, %15 ], [ %5, %12 ]
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %16) #9
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 1
  %18 = icmp eq %class.SkBitmap* %17, %14
  br i1 %18, label %19, label %15

19:                                               ; preds = %15
  store i32 0, i32* %9, align 4
  %20 = bitcast %"class.WTF::Vector.25"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #9
  store %class.SkBitmap* null, %class.SkBitmap** %4, align 8
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 8
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %25) #9
  %26 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 7
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %26) #9
  %27 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 6
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %27) #9
  %28 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %28) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoader5StartEPNS_16ExecutionContextERKNS_5mojom5blink16NotificationDataE(%"class.blink::NotificationResourcesLoader"*, %"class.blink::ExecutionContext"*, %"class.blink::mojom::blink::NotificationData"* dereferenceable(480)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Size"*
  %6 = alloca %"class.base::OnceCallback.23", align 8
  %7 = alloca %"class.blink::WeakPersistent", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Size"*
  %10 = alloca %"class.base::OnceCallback.23", align 8
  %11 = alloca %"class.blink::WeakPersistent", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.gfx::Size"*
  %14 = alloca %"class.base::OnceCallback.23", align 8
  %15 = alloca %"class.blink::WeakPersistent", align 8
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"class.gfx::Size"*
  %18 = alloca %"class.base::OnceCallback.23", align 8
  %19 = alloca %"class.blink::WeakPersistent", align 8
  %20 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 2
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = select i1 %23, i32 0, i32 %25
  %27 = add i32 %26, 3
  %28 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 4
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 5
  %30 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  store i64 3865470568200, i64* %4, align 8
  %31 = bitcast %"class.blink::WeakPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %7, i64 0, i32 0, i32 0
  store %"class.blink::NotificationResourcesLoader"* %0, %"class.blink::NotificationResourcesLoader"** %33, align 8, !alias.scope !5
  %34 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8, !alias.scope !5
  %35 = ptrtoint %"class.blink::NotificationResourcesLoader"* %0 to i64
  switch i64 %35, label %36 [
    i64 0, label %62
    i64 -1, label %62
  ]

36:                                               ; preds = %3
  %37 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !5
  %38 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %37, i64 0, i32 1
  %39 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %38) #9, !noalias !5
  %40 = icmp eq i8* %39, null
  br i1 %40, label %41, label %43, !prof !2

41:                                               ; preds = %36
  %42 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %38, i8* %42) #9
  br label %43

43:                                               ; preds = %41, %36
  %44 = phi i8* [ %42, %41 ], [ %39, %36 ]
  %45 = bitcast i8* %44 to %"class.blink::ThreadState"**
  %46 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %45, align 8, !noalias !5
  %47 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %47, align 8, !noalias !5
  %49 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8, !noalias !5
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %55, !prof !2

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %48, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %53) #9
  %54 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %49, align 8
  br label %55

55:                                               ; preds = %52, %43
  %56 = phi %"class.blink::PersistentNode"* [ %54, %52 ], [ %50, %43 ]
  %57 = bitcast %"class.blink::PersistentNode"* %56 to i64*
  %58 = load i64, i64* %57, align 8, !noalias !5
  %59 = bitcast %"class.blink::PersistentRegion"* %48 to i64*
  store i64 %58, i64* %59, align 8, !noalias !5
  %60 = bitcast %"class.blink::PersistentNode"* %56 to %"class.blink::PersistentBase.438"**
  store %"class.blink::PersistentBase.438"* %32, %"class.blink::PersistentBase.438"** %60, align 8, !noalias !5
  %61 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %56, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %61, align 8
  store %"class.blink::PersistentNode"* %56, %"class.blink::PersistentNode"** %34, align 8, !alias.scope !5
  br label %62

62:                                               ; preds = %3, %3, %55
  %63 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 6
  %64 = ptrtoint %class.SkBitmap* %63 to i64
  %65 = call i8* @_Znwm(i64 72) #10, !noalias !8
  %66 = bitcast i8* %65 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %66, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !8
  %67 = getelementptr inbounds i8, i8* %65, i64 32
  %68 = bitcast i8* %67 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)* @_ZN5blink27NotificationResourcesLoader11DidLoadIconEP8SkBitmapS1_d to i64), i64 0>, <2 x i64>* %68, align 8, !noalias !8
  %69 = getelementptr inbounds i8, i8* %65, i64 48
  %70 = bitcast %"class.blink::WeakPersistent"* %7 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %65, i64 56
  %74 = bitcast i8* %73 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  switch i64 %71, label %75 [
    i64 0, label %101
    i64 -1, label %101
  ]

75:                                               ; preds = %62
  %76 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %77 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %76, i64 0, i32 1
  %78 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %77) #9
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %82, !prof !2

80:                                               ; preds = %75
  %81 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %77, i8* %81) #9
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i8* [ %81, %80 ], [ %78, %75 ]
  %84 = bitcast i8* %83 to %"class.blink::ThreadState"**
  %85 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  %87 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %88, align 8
  %90 = icmp eq %"class.blink::PersistentNode"* %89, null
  br i1 %90, label %91, label %94, !prof !2

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %92) #9
  %93 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %88, align 8
  br label %94

94:                                               ; preds = %91, %82
  %95 = phi %"class.blink::PersistentNode"* [ %93, %91 ], [ %89, %82 ]
  %96 = bitcast %"class.blink::PersistentNode"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::PersistentRegion"* %87 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %95, i64 0, i32 0
  store i8* %69, i8** %99, align 8
  %100 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %95, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %100, align 8
  store %"class.blink::PersistentNode"* %95, %"class.blink::PersistentNode"** %74, align 8
  br label %101

101:                                              ; preds = %62, %62, %94
  %102 = getelementptr inbounds i8, i8* %65, i64 64
  %103 = bitcast i8* %102 to i64*
  store i64 %64, i64* %103, align 8
  %104 = bitcast %"class.base::OnceCallback.23"* %6 to i8**
  store i8* %65, i8** %104, align 8, !alias.scope !8
  call void @_ZN5blink27NotificationResourcesLoader8LoadIconEPNS_16ExecutionContextERKNS_4KURLERKN3gfx4SizeEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::NotificationResourcesLoader"* %0, %"class.blink::ExecutionContext"* %1, %"class.blink::KURL"* dereferenceable(112) %29, %"class.gfx::Size"* nonnull dereferenceable(8) %5, %"class.base::OnceCallback.23"* nonnull %6)
  %105 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %105) #9
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %127, label %108

108:                                              ; preds = %101
  %109 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %110 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %109, i64 0, i32 1
  %111 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %110) #9
  %112 = icmp eq i8* %111, null
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %108
  %114 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %110, i8* %114) #9
  br label %115

115:                                              ; preds = %113, %108
  %116 = phi i8* [ %114, %113 ], [ %111, %108 ]
  %117 = bitcast i8* %116 to %"class.blink::ThreadState"**
  %118 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %118, i64 0, i32 4, i32 0, i32 0, i32 0
  %120 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %119, align 8
  %121 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %34, align 8
  %122 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %120, i64 0, i32 0, i32 0
  %123 = bitcast %"class.blink::PersistentRegion"* %120 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::PersistentNode"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %121, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %126, align 8
  store %"class.blink::PersistentNode"* %121, %"class.blink::PersistentNode"** %122, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %34, align 8
  br label %127

127:                                              ; preds = %101, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %128 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 6
  %129 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #9
  store i64 1374389535040, i64* %8, align 8
  %130 = bitcast %"class.blink::WeakPersistent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #9
  %131 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %11, i64 0, i32 0
  %132 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %11, i64 0, i32 0, i32 0
  store %"class.blink::NotificationResourcesLoader"* %0, %"class.blink::NotificationResourcesLoader"** %132, align 8, !alias.scope !15
  %133 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %133, align 8, !alias.scope !15
  switch i64 %35, label %134 [
    i64 0, label %160
    i64 -1, label %160
  ]

134:                                              ; preds = %127
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !15
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #9, !noalias !15
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #9
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8, !noalias !15
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8, !noalias !15
  %147 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %147, align 8, !noalias !15
  %149 = icmp eq %"class.blink::PersistentNode"* %148, null
  br i1 %149, label %150, label %153, !prof !2

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %151) #9
  %152 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %147, align 8
  br label %153

153:                                              ; preds = %150, %141
  %154 = phi %"class.blink::PersistentNode"* [ %152, %150 ], [ %148, %141 ]
  %155 = bitcast %"class.blink::PersistentNode"* %154 to i64*
  %156 = load i64, i64* %155, align 8, !noalias !15
  %157 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  store i64 %156, i64* %157, align 8, !noalias !15
  %158 = bitcast %"class.blink::PersistentNode"* %154 to %"class.blink::PersistentBase.438"**
  store %"class.blink::PersistentBase.438"* %131, %"class.blink::PersistentBase.438"** %158, align 8, !noalias !15
  %159 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %154, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %159, align 8
  store %"class.blink::PersistentNode"* %154, %"class.blink::PersistentNode"** %133, align 8, !alias.scope !15
  br label %160

160:                                              ; preds = %127, %127, %153
  %161 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 7
  %162 = ptrtoint %class.SkBitmap* %161 to i64
  %163 = call i8* @_Znwm(i64 72) #10, !noalias !18
  %164 = bitcast i8* %163 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %164, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !18
  %165 = getelementptr inbounds i8, i8* %163, i64 32
  %166 = bitcast i8* %165 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)* @_ZN5blink27NotificationResourcesLoader11DidLoadIconEP8SkBitmapS1_d to i64), i64 0>, <2 x i64>* %166, align 8, !noalias !18
  %167 = getelementptr inbounds i8, i8* %163, i64 48
  %168 = bitcast %"class.blink::WeakPersistent"* %11 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast i8* %167 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds i8, i8* %163, i64 56
  %172 = bitcast i8* %171 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %172, align 8
  switch i64 %169, label %173 [
    i64 0, label %199
    i64 -1, label %199
  ]

173:                                              ; preds = %160
  %174 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %175 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %174, i64 0, i32 1
  %176 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %175) #9
  %177 = icmp eq i8* %176, null
  br i1 %177, label %178, label %180, !prof !2

178:                                              ; preds = %173
  %179 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %175, i8* %179) #9
  br label %180

180:                                              ; preds = %178, %173
  %181 = phi i8* [ %179, %178 ], [ %176, %173 ]
  %182 = bitcast i8* %181 to %"class.blink::ThreadState"**
  %183 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %183, i64 0, i32 4, i32 0, i32 0, i32 0
  %185 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %185, i64 0, i32 0, i32 0
  %187 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %186, align 8
  %188 = icmp eq %"class.blink::PersistentNode"* %187, null
  br i1 %188, label %189, label %192, !prof !2

189:                                              ; preds = %180
  %190 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %185, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %190) #9
  %191 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %186, align 8
  br label %192

192:                                              ; preds = %189, %180
  %193 = phi %"class.blink::PersistentNode"* [ %191, %189 ], [ %187, %180 ]
  %194 = bitcast %"class.blink::PersistentNode"* %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.blink::PersistentRegion"* %185 to i64*
  store i64 %195, i64* %196, align 8
  %197 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %193, i64 0, i32 0
  store i8* %167, i8** %197, align 8
  %198 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %193, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %198, align 8
  store %"class.blink::PersistentNode"* %193, %"class.blink::PersistentNode"** %172, align 8
  br label %199

199:                                              ; preds = %160, %160, %192
  %200 = getelementptr inbounds i8, i8* %163, i64 64
  %201 = bitcast i8* %200 to i64*
  store i64 %162, i64* %201, align 8
  %202 = bitcast %"class.base::OnceCallback.23"* %10 to i8**
  store i8* %163, i8** %202, align 8, !alias.scope !18
  call void @_ZN5blink27NotificationResourcesLoader8LoadIconEPNS_16ExecutionContextERKNS_4KURLERKN3gfx4SizeEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::NotificationResourcesLoader"* %0, %"class.blink::ExecutionContext"* %1, %"class.blink::KURL"* dereferenceable(112) %128, %"class.gfx::Size"* nonnull dereferenceable(8) %9, %"class.base::OnceCallback.23"* nonnull %10)
  %203 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %203) #9
  %204 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %133, align 8
  %205 = icmp eq %"class.blink::PersistentNode"* %204, null
  br i1 %205, label %225, label %206

206:                                              ; preds = %199
  %207 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %208 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %207, i64 0, i32 1
  %209 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %208) #9
  %210 = icmp eq i8* %209, null
  br i1 %210, label %211, label %213, !prof !2

211:                                              ; preds = %206
  %212 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %208, i8* %212) #9
  br label %213

213:                                              ; preds = %211, %206
  %214 = phi i8* [ %212, %211 ], [ %209, %206 ]
  %215 = bitcast i8* %214 to %"class.blink::ThreadState"**
  %216 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %215, align 8
  %217 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %216, i64 0, i32 4, i32 0, i32 0, i32 0
  %218 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %217, align 8
  %219 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %133, align 8
  %220 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %218, i64 0, i32 0, i32 0
  %221 = bitcast %"class.blink::PersistentRegion"* %218 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = bitcast %"class.blink::PersistentNode"* %219 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %219, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %224, align 8
  store %"class.blink::PersistentNode"* %219, %"class.blink::PersistentNode"** %220, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %133, align 8
  br label %225

225:                                              ; preds = %199, %213
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #9
  %226 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 7
  %227 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #9
  store i64 412316860512, i64* %12, align 8
  %228 = bitcast %"class.blink::WeakPersistent"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %228) #9
  %229 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0
  %230 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0, i32 0
  store %"class.blink::NotificationResourcesLoader"* %0, %"class.blink::NotificationResourcesLoader"** %230, align 8, !alias.scope !25
  %231 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %231, align 8, !alias.scope !25
  switch i64 %35, label %232 [
    i64 0, label %258
    i64 -1, label %258
  ]

232:                                              ; preds = %225
  %233 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !25
  %234 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %233, i64 0, i32 1
  %235 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %234) #9, !noalias !25
  %236 = icmp eq i8* %235, null
  br i1 %236, label %237, label %239, !prof !2

237:                                              ; preds = %232
  %238 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %234, i8* %238) #9
  br label %239

239:                                              ; preds = %237, %232
  %240 = phi i8* [ %238, %237 ], [ %235, %232 ]
  %241 = bitcast i8* %240 to %"class.blink::ThreadState"**
  %242 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %241, align 8, !noalias !25
  %243 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %242, i64 0, i32 4, i32 0, i32 0, i32 0
  %244 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %243, align 8, !noalias !25
  %245 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %245, align 8, !noalias !25
  %247 = icmp eq %"class.blink::PersistentNode"* %246, null
  br i1 %247, label %248, label %251, !prof !2

248:                                              ; preds = %239
  %249 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %244, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %249) #9
  %250 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %245, align 8
  br label %251

251:                                              ; preds = %248, %239
  %252 = phi %"class.blink::PersistentNode"* [ %250, %248 ], [ %246, %239 ]
  %253 = bitcast %"class.blink::PersistentNode"* %252 to i64*
  %254 = load i64, i64* %253, align 8, !noalias !25
  %255 = bitcast %"class.blink::PersistentRegion"* %244 to i64*
  store i64 %254, i64* %255, align 8, !noalias !25
  %256 = bitcast %"class.blink::PersistentNode"* %252 to %"class.blink::PersistentBase.438"**
  store %"class.blink::PersistentBase.438"* %229, %"class.blink::PersistentBase.438"** %256, align 8, !noalias !25
  %257 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %252, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %257, align 8
  store %"class.blink::PersistentNode"* %252, %"class.blink::PersistentNode"** %231, align 8, !alias.scope !25
  br label %258

258:                                              ; preds = %225, %225, %251
  %259 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 8
  %260 = ptrtoint %class.SkBitmap* %259 to i64
  %261 = call i8* @_Znwm(i64 72) #10, !noalias !28
  %262 = bitcast i8* %261 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %262, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !28
  %263 = getelementptr inbounds i8, i8* %261, i64 32
  %264 = bitcast i8* %263 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)* @_ZN5blink27NotificationResourcesLoader11DidLoadIconEP8SkBitmapS1_d to i64), i64 0>, <2 x i64>* %264, align 8, !noalias !28
  %265 = getelementptr inbounds i8, i8* %261, i64 48
  %266 = bitcast %"class.blink::WeakPersistent"* %15 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast i8* %265 to i64*
  store i64 %267, i64* %268, align 8
  %269 = getelementptr inbounds i8, i8* %261, i64 56
  %270 = bitcast i8* %269 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %270, align 8
  switch i64 %267, label %271 [
    i64 0, label %297
    i64 -1, label %297
  ]

271:                                              ; preds = %258
  %272 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %273 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %272, i64 0, i32 1
  %274 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %273) #9
  %275 = icmp eq i8* %274, null
  br i1 %275, label %276, label %278, !prof !2

276:                                              ; preds = %271
  %277 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %273, i8* %277) #9
  br label %278

278:                                              ; preds = %276, %271
  %279 = phi i8* [ %277, %276 ], [ %274, %271 ]
  %280 = bitcast i8* %279 to %"class.blink::ThreadState"**
  %281 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %281, i64 0, i32 4, i32 0, i32 0, i32 0
  %283 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %282, align 8
  %284 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %283, i64 0, i32 0, i32 0
  %285 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %284, align 8
  %286 = icmp eq %"class.blink::PersistentNode"* %285, null
  br i1 %286, label %287, label %290, !prof !2

287:                                              ; preds = %278
  %288 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %283, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %288) #9
  %289 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %284, align 8
  br label %290

290:                                              ; preds = %287, %278
  %291 = phi %"class.blink::PersistentNode"* [ %289, %287 ], [ %285, %278 ]
  %292 = bitcast %"class.blink::PersistentNode"* %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.blink::PersistentRegion"* %283 to i64*
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %291, i64 0, i32 0
  store i8* %265, i8** %295, align 8
  %296 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %291, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %296, align 8
  store %"class.blink::PersistentNode"* %291, %"class.blink::PersistentNode"** %270, align 8
  br label %297

297:                                              ; preds = %258, %258, %290
  %298 = getelementptr inbounds i8, i8* %261, i64 64
  %299 = bitcast i8* %298 to i64*
  store i64 %260, i64* %299, align 8
  %300 = bitcast %"class.base::OnceCallback.23"* %14 to i8**
  store i8* %261, i8** %300, align 8, !alias.scope !28
  call void @_ZN5blink27NotificationResourcesLoader8LoadIconEPNS_16ExecutionContextERKNS_4KURLERKN3gfx4SizeEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::NotificationResourcesLoader"* %0, %"class.blink::ExecutionContext"* %1, %"class.blink::KURL"* dereferenceable(112) %226, %"class.gfx::Size"* nonnull dereferenceable(8) %13, %"class.base::OnceCallback.23"* nonnull %14)
  %301 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %14, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %301) #9
  %302 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %231, align 8
  %303 = icmp eq %"class.blink::PersistentNode"* %302, null
  br i1 %303, label %323, label %304

304:                                              ; preds = %297
  %305 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %306 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %305, i64 0, i32 1
  %307 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %306) #9
  %308 = icmp eq i8* %307, null
  br i1 %308, label %309, label %311, !prof !2

309:                                              ; preds = %304
  %310 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %306, i8* %310) #9
  br label %311

311:                                              ; preds = %309, %304
  %312 = phi i8* [ %310, %309 ], [ %307, %304 ]
  %313 = bitcast i8* %312 to %"class.blink::ThreadState"**
  %314 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %313, align 8
  %315 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %314, i64 0, i32 4, i32 0, i32 0, i32 0
  %316 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %315, align 8
  %317 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %231, align 8
  %318 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %316, i64 0, i32 0, i32 0
  %319 = bitcast %"class.blink::PersistentRegion"* %316 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.blink::PersistentNode"* %317 to i64*
  store i64 %320, i64* %321, align 8
  %322 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %317, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %322, align 8
  store %"class.blink::PersistentNode"* %317, %"class.blink::PersistentNode"** %318, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %231, align 8
  br label %323

323:                                              ; preds = %297, %311
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #9
  %324 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9
  %325 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %326 = load i32, i32* %325, align 8
  %327 = icmp ult i32 %326, %26
  br i1 %327, label %328, label %350

328:                                              ; preds = %323
  %329 = lshr i32 %326, 2
  %330 = add nuw i32 %326, 1
  %331 = add i32 %330, %329
  %332 = icmp ugt i32 %331, 4
  %333 = select i1 %332, i32 %331, i32 4
  %334 = icmp ugt i32 %333, %26
  %335 = select i1 %334, i32 %333, i32 %26
  %336 = icmp ult i32 %326, %335
  br i1 %336, label %337, label %350, !prof !3

337:                                              ; preds = %328
  %338 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %324, i64 0, i32 0, i32 0, i32 0
  %339 = load %class.SkBitmap*, %class.SkBitmap** %338, align 8
  %340 = icmp eq %class.SkBitmap* %339, null
  br i1 %340, label %341, label %349

341:                                              ; preds = %337
  %342 = zext i32 %335 to i64
  %343 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %342) #9
  %344 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %343, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #9
  %345 = ptrtoint i8* %344 to i64
  %346 = bitcast %"class.WTF::Vector.25"* %324 to i64*
  store atomic i64 %345, i64* %346 monotonic, align 8
  %347 = udiv i64 %343, 56
  %348 = trunc i64 %347 to i32
  store i32 %348, i32* %325, align 8
  br label %350

349:                                              ; preds = %337
  call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.25"* %324, i32 %335) #9
  br label %350

350:                                              ; preds = %349, %341, %328, %323
  %351 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %324, i64 0, i32 0, i32 0, i32 0
  %352 = load %class.SkBitmap*, %class.SkBitmap** %351, align 8
  %353 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %354 = load i32, i32* %353, align 4
  %355 = zext i32 %26 to i64
  %356 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %352, i64 %355
  %357 = icmp eq i32 %354, %26
  br i1 %357, label %365, label %358

358:                                              ; preds = %350
  %359 = zext i32 %354 to i64
  %360 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %352, i64 %359
  br label %361

361:                                              ; preds = %361, %358
  %362 = phi %class.SkBitmap* [ %363, %361 ], [ %360, %358 ]
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %362) #9
  %363 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %362, i64 1
  %364 = icmp eq %class.SkBitmap* %363, %356
  br i1 %364, label %365, label %361

365:                                              ; preds = %361, %350
  store i32 %26, i32* %353, align 4
  %366 = icmp eq i32 %26, 0
  br i1 %366, label %377, label %367

367:                                              ; preds = %365
  %368 = getelementptr inbounds %"class.blink::mojom::blink::NotificationData", %"class.blink::mojom::blink::NotificationData"* %2, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %369 = bitcast i64* %16 to i8*
  %370 = bitcast %"class.blink::WeakPersistent"* %19 to i8*
  %371 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %19, i64 0, i32 0
  %372 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %19, i64 0, i32 0, i32 0
  %373 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %19, i64 0, i32 0, i32 1, i32 0
  %374 = bitcast %"class.blink::WeakPersistent"* %19 to i64*
  %375 = bitcast %"class.base::OnceCallback.23"* %18 to i8**
  %376 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %18, i64 0, i32 0
  br label %378

377:                                              ; preds = %476, %365
  ret void

378:                                              ; preds = %476, %367
  %379 = phi i32 [ 0, %367 ], [ %477, %476 ]
  %380 = load i8, i8* %21, align 8, !range !4
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %378
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11
  unreachable

383:                                              ; preds = %378
  %384 = call dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18NotificationActionEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.427"* %368, i32 %379) #9
  %385 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %384, i64 0, i32 0, i32 0, i32 0, i32 0
  %386 = load %"class.blink::mojom::blink::NotificationAction"*, %"class.blink::mojom::blink::NotificationAction"** %385, align 8
  %387 = getelementptr inbounds %"class.blink::mojom::blink::NotificationAction", %"class.blink::mojom::blink::NotificationAction"* %386, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %369) #9
  store i64 549755814016, i64* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %370) #9
  store %"class.blink::NotificationResourcesLoader"* %0, %"class.blink::NotificationResourcesLoader"** %372, align 8, !alias.scope !35
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %373, align 8, !alias.scope !35
  switch i64 %35, label %388 [
    i64 0, label %414
    i64 -1, label %414
  ]

388:                                              ; preds = %383
  %389 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !35
  %390 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %389, i64 0, i32 1
  %391 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %390) #9, !noalias !35
  %392 = icmp eq i8* %391, null
  br i1 %392, label %393, label %395, !prof !2

393:                                              ; preds = %388
  %394 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %390, i8* %394) #9
  br label %395

395:                                              ; preds = %393, %388
  %396 = phi i8* [ %394, %393 ], [ %391, %388 ]
  %397 = bitcast i8* %396 to %"class.blink::ThreadState"**
  %398 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %397, align 8, !noalias !35
  %399 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %398, i64 0, i32 4, i32 0, i32 0, i32 0
  %400 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %399, align 8, !noalias !35
  %401 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %400, i64 0, i32 0, i32 0
  %402 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %401, align 8, !noalias !35
  %403 = icmp eq %"class.blink::PersistentNode"* %402, null
  br i1 %403, label %404, label %407, !prof !2

404:                                              ; preds = %395
  %405 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %400, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %405) #9
  %406 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %401, align 8
  br label %407

407:                                              ; preds = %404, %395
  %408 = phi %"class.blink::PersistentNode"* [ %406, %404 ], [ %402, %395 ]
  %409 = bitcast %"class.blink::PersistentNode"* %408 to i64*
  %410 = load i64, i64* %409, align 8, !noalias !35
  %411 = bitcast %"class.blink::PersistentRegion"* %400 to i64*
  store i64 %410, i64* %411, align 8, !noalias !35
  %412 = bitcast %"class.blink::PersistentNode"* %408 to %"class.blink::PersistentBase.438"**
  store %"class.blink::PersistentBase.438"* %371, %"class.blink::PersistentBase.438"** %412, align 8, !noalias !35
  %413 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %408, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %413, align 8
  store %"class.blink::PersistentNode"* %408, %"class.blink::PersistentNode"** %373, align 8, !alias.scope !35
  br label %414

414:                                              ; preds = %383, %383, %407
  %415 = call dereferenceable(56) %class.SkBitmap* @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"* %324, i32 %379) #9
  %416 = ptrtoint %class.SkBitmap* %415 to i64
  %417 = call i8* @_Znwm(i64 72) #10, !noalias !38
  %418 = bitcast i8* %417 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %418, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !38
  %419 = getelementptr inbounds i8, i8* %417, i64 32
  %420 = bitcast i8* %419 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)* @_ZN5blink27NotificationResourcesLoader11DidLoadIconEP8SkBitmapS1_d to i64), i64 0>, <2 x i64>* %420, align 8, !noalias !38
  %421 = getelementptr inbounds i8, i8* %417, i64 48
  %422 = load i64, i64* %374, align 8
  %423 = bitcast i8* %421 to i64*
  store i64 %422, i64* %423, align 8
  %424 = getelementptr inbounds i8, i8* %417, i64 56
  %425 = bitcast i8* %424 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %425, align 8
  switch i64 %422, label %426 [
    i64 0, label %452
    i64 -1, label %452
  ]

426:                                              ; preds = %414
  %427 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %428 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %427, i64 0, i32 1
  %429 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %428) #9
  %430 = icmp eq i8* %429, null
  br i1 %430, label %431, label %433, !prof !2

431:                                              ; preds = %426
  %432 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %428, i8* %432) #9
  br label %433

433:                                              ; preds = %431, %426
  %434 = phi i8* [ %432, %431 ], [ %429, %426 ]
  %435 = bitcast i8* %434 to %"class.blink::ThreadState"**
  %436 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %435, align 8
  %437 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %436, i64 0, i32 4, i32 0, i32 0, i32 0
  %438 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %438, i64 0, i32 0, i32 0
  %440 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %439, align 8
  %441 = icmp eq %"class.blink::PersistentNode"* %440, null
  br i1 %441, label %442, label %445, !prof !2

442:                                              ; preds = %433
  %443 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %438, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %443) #9
  %444 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %439, align 8
  br label %445

445:                                              ; preds = %442, %433
  %446 = phi %"class.blink::PersistentNode"* [ %444, %442 ], [ %440, %433 ]
  %447 = bitcast %"class.blink::PersistentNode"* %446 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = bitcast %"class.blink::PersistentRegion"* %438 to i64*
  store i64 %448, i64* %449, align 8
  %450 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %446, i64 0, i32 0
  store i8* %421, i8** %450, align 8
  %451 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %446, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %451, align 8
  store %"class.blink::PersistentNode"* %446, %"class.blink::PersistentNode"** %425, align 8
  br label %452

452:                                              ; preds = %414, %414, %445
  %453 = getelementptr inbounds i8, i8* %417, i64 64
  %454 = bitcast i8* %453 to i64*
  store i64 %416, i64* %454, align 8
  store i8* %417, i8** %375, align 8, !alias.scope !38
  call void @_ZN5blink27NotificationResourcesLoader8LoadIconEPNS_16ExecutionContextERKNS_4KURLERKN3gfx4SizeEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::NotificationResourcesLoader"* %0, %"class.blink::ExecutionContext"* %1, %"class.blink::KURL"* dereferenceable(112) %387, %"class.gfx::Size"* nonnull dereferenceable(8) %17, %"class.base::OnceCallback.23"* nonnull %18)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %376) #9
  %455 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %373, align 8
  %456 = icmp eq %"class.blink::PersistentNode"* %455, null
  br i1 %456, label %476, label %457

457:                                              ; preds = %452
  %458 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %459 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %458, i64 0, i32 1
  %460 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %459) #9
  %461 = icmp eq i8* %460, null
  br i1 %461, label %462, label %464, !prof !2

462:                                              ; preds = %457
  %463 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %459, i8* %463) #9
  br label %464

464:                                              ; preds = %462, %457
  %465 = phi i8* [ %463, %462 ], [ %460, %457 ]
  %466 = bitcast i8* %465 to %"class.blink::ThreadState"**
  %467 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %466, align 8
  %468 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %467, i64 0, i32 4, i32 0, i32 0, i32 0
  %469 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %468, align 8
  %470 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %373, align 8
  %471 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %469, i64 0, i32 0, i32 0
  %472 = bitcast %"class.blink::PersistentRegion"* %469 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = bitcast %"class.blink::PersistentNode"* %470 to i64*
  store i64 %473, i64* %474, align 8
  %475 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %470, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %475, align 8
  store %"class.blink::PersistentNode"* %470, %"class.blink::PersistentNode"** %471, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %373, align 8
  br label %476

476:                                              ; preds = %452, %464
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %370) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %369) #9
  %477 = add nuw i32 %379, 1
  %478 = icmp eq i32 %477, %26
  br i1 %478, label %377, label %378
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoader8LoadIconEPNS_16ExecutionContextERKNS_4KURLERKN3gfx4SizeEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::NotificationResourcesLoader"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL"* dereferenceable(112), %"class.gfx::Size"* nocapture readonly dereferenceable(8), %"class.base::OnceCallback.23"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.23", align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = alloca %"class.blink::ResourceRequest", align 8
  %9 = alloca %"class.blink::ThreadedIconLoader"*, align 8
  %10 = alloca %"class.absl::optional", align 4
  %11 = alloca %"class.base::OnceCallback.23", align 8
  %12 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %2) #9
  br i1 %12, label %17, label %13

13:                                               ; preds = %5
  %14 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %2) #9
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %2) #9
  br i1 %16, label %28, label %17

17:                                               ; preds = %15, %13, %5
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %7) #9
  %18 = bitcast %"class.base::OnceCallback.23"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %4, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback.23"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback.23"* %6 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %6, i64 0, i32 0
  %24 = inttoptr i64 %21 to %"class.base::internal::BindStateBase"*
  %25 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %24, i64 0, i32 1
  %26 = bitcast void ()** %25 to void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)**
  %27 = load void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)*, void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)** %26, align 8
  call void %27(%"class.base::internal::BindStateBase"* %24, %class.SkBitmap* nonnull dereferenceable(56) %7, double -1.000000e+00) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #9
  br label %78

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %8, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %29) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %2) #9
  %30 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %8, i64 0, i32 0
  %31 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %8, i64 0, i32 0, i32 15
  store i32 14, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %8, i64 0, i32 0, i32 16
  store i32 8, i32* %32, align 4
  call void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"* nonnull %30, i32 2, i32 0) #9
  call void @_ZN5blink19ResourceRequestHead18SetTimeoutIntervalEN4base9TimeDeltaE(%"class.blink::ResourceRequestHead"* nonnull %30, i64 90000000) #9
  %33 = bitcast %"class.blink::ThreadedIconLoader"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  store %"class.blink::ThreadedIconLoader"* inttoptr (i64 -6148914691236517206 to %"class.blink::ThreadedIconLoader"*), %"class.blink::ThreadedIconLoader"** %9, align 8
  %34 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm(i64 120) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 120, i1 false) #9
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18ThreadedIconLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds i8, i8* %34, i64 40
  %38 = bitcast i8* %37 to %class.SkBitmap*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 17, i1 false) #9
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %38) #9
  %39 = getelementptr inbounds i8, i8* %34, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 17, i1 false) #9
  %40 = getelementptr inbounds i8, i8* %34, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = bitcast %"class.blink::ThreadedIconLoader"** %9 to i8**
  store i8* %34, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0
  %46 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %65, label %51, !prof !2

51:                                               ; preds = %28
  %52 = ptrtoint i8* %34 to i64
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %45, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.blink::Member"*, %"class.blink::Member"** %53, align 8
  %55 = zext i32 %47 to i64
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %54, i64 %55
  %57 = bitcast %"class.blink::Member"* %56 to i64*
  store atomic i64 %52, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %51
  %61 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #9
  br label %62

62:                                               ; preds = %60, %51
  %63 = load i32, i32* %46, align 4
  %64 = add i32 %63, 1
  store i32 %64, i32* %46, align 4
  br label %66

65:                                               ; preds = %28
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"* %45, %"class.blink::ThreadedIconLoader"** nonnull dereferenceable(8) %9) #9
  br label %66

66:                                               ; preds = %62, %65
  %67 = load %"class.blink::ThreadedIconLoader"*, %"class.blink::ThreadedIconLoader"** %9, align 8
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %68) #9
  store i8 1, i8* %68, align 4
  %69 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %70 = bitcast %"class.gfx::Size"* %3 to i64*
  %71 = bitcast %"class.gfx::Size"* %69 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 4
  %73 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %4, i64 0, i32 0, i32 0, i32 0
  %74 = bitcast %"class.base::OnceCallback.23"* %4 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.base::OnceCallback.23"* %11 to i64*
  store i64 %75, i64* %76, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %73, align 8
  call void @_ZN5blink18ThreadedIconLoader5StartEPNS_16ExecutionContextERKNS_19ResourceRequestHeadERKN4absl8optionalIN3gfx4SizeEEEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::ThreadedIconLoader"* %67, %"class.blink::ExecutionContext"* %1, %"class.blink::ResourceRequestHead"* nonnull dereferenceable(1016) %30, %"class.absl::optional"* nonnull dereferenceable(12) %10, %"class.base::OnceCallback.23"* nonnull %11) #9
  %77 = getelementptr inbounds %"class.base::OnceCallback.23", %"class.base::OnceCallback.23"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %77) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %68) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %29) #9
  br label %78

78:                                               ; preds = %66, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoader11DidLoadIconEP8SkBitmapS1_d(%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double) #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %1, %class.SkBitmap* dereferenceable(56) %2) #9
  %7 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, -1
  store i32 %9, i32* %7, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %37

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Member"*, %"class.blink::Member"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %11, %19
  %20 = phi %"class.blink::Member"* [ %23, %19 ], [ %13, %11 ]
  %21 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::ThreadedIconLoader"*, %"class.blink::ThreadedIconLoader"** %21, align 8
  tail call void @_ZN5blink18ThreadedIconLoader4StopEv(%"class.blink::ThreadedIconLoader"* %22) #9
  %23 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %20, i64 1
  %24 = icmp eq %"class.blink::Member"* %23, %17
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %11
  %26 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 3
  %27 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.base::OnceCallback"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %28, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %33 = inttoptr i64 %30 to %"class.base::internal::BindStateBase"*
  %34 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %33, i64 0, i32 1
  %35 = bitcast void ()** %34 to void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)**
  %36 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)** %35, align 8
  tail call void %36(%"class.base::internal::BindStateBase"* %33, %"class.blink::NotificationResourcesLoader"* %0) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %37

37:                                               ; preds = %4, %25
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27NotificationResourcesLoader12GetResourcesEv(%"class.mojo::StructPtr.440"* noalias nocapture sret, %"class.blink::NotificationResourcesLoader"*) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 192) #10, !noalias !45
  %4 = bitcast i8* %3 to %"class.blink::mojom::blink::NotificationResources"*
  tail call void @_ZN5blink5mojom5blink21NotificationResourcesC1Ev(%"class.blink::mojom::blink::NotificationResources"* nonnull %4) #9, !noalias !45
  %5 = ptrtoint i8* %3 to i64
  %6 = bitcast %"class.mojo::StructPtr.440"* %0 to i64*
  store i64 %5, i64* %6, align 8, !alias.scope !45
  %7 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 6
  %8 = bitcast i8* %3 to %class.SkBitmap*
  %9 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %8, %class.SkBitmap* dereferenceable(56) %7) #9
  %10 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 7
  %11 = getelementptr inbounds i8, i8* %3, i64 56
  %12 = bitcast i8* %11 to %class.SkBitmap*
  %13 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %12, %class.SkBitmap* dereferenceable(56) %10) #9
  %14 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 8
  %15 = getelementptr inbounds i8, i8* %3, i64 112
  %16 = bitcast i8* %15 to %class.SkBitmap*
  %17 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %16, %class.SkBitmap* dereferenceable(56) %14) #9
  %18 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 9
  %19 = getelementptr inbounds i8, i8* %3, i64 168
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds i8, i8* %3, i64 176
  br i1 %21, label %26, label %23

23:                                               ; preds = %2
  %24 = bitcast i8* %22 to %"class.WTF::Vector.25"*
  %25 = tail call dereferenceable(16) %"class.WTF::Vector.25"* @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.25"* %24, %"class.WTF::Vector.25"* dereferenceable(16) %18) #9
  br label %60

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = bitcast i8* %22 to %class.SkBitmap**
  store %class.SkBitmap* null, %class.SkBitmap** %29, align 8
  %30 = getelementptr inbounds i8, i8* %3, i64 184
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 8
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %26
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %34) #9
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #9
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast i8* %22 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = udiv i64 %35, 56
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %31, align 8
  %41 = bitcast i8* %36 to %class.SkBitmap*
  br label %42

42:                                               ; preds = %33, %26
  %43 = phi %class.SkBitmap* [ null, %26 ], [ %41, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %1, i64 0, i32 9, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds i8, i8* %3, i64 188
  %47 = bitcast i8* %46 to i32*
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %18, i64 0, i32 0, i32 0, i32 0
  %49 = load %class.SkBitmap*, %class.SkBitmap** %48, align 8
  %50 = zext i32 %45 to i64
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %49, i64 %50
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %59, label %53

53:                                               ; preds = %42, %53
  %54 = phi %class.SkBitmap* [ %56, %53 ], [ %43, %42 ]
  %55 = phi %class.SkBitmap* [ %57, %53 ], [ %49, %42 ]
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %54, %class.SkBitmap* dereferenceable(56) %55) #9
  %56 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %54, i64 1
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %55, i64 1
  %58 = icmp eq %class.SkBitmap* %57, %51
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %42
  store i8 1, i8* %19, align 8
  br label %60

60:                                               ; preds = %23, %59
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoader4StopEv(%"class.blink::NotificationResourcesLoader"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::Member"*, %"class.blink::Member"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %"class.blink::Member"* [ %14, %10 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadedIconLoader"*, %"class.blink::ThreadedIconLoader"** %12, align 8
  tail call void @_ZN5blink18ThreadedIconLoader4StopEv(%"class.blink::ThreadedIconLoader"* %13) #9
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %11, i64 1
  %15 = icmp eq %"class.blink::Member"* %14, %7
  br i1 %15, label %9, label %10
}

declare void @_ZN5blink18ThreadedIconLoader4StopEv(%"class.blink::ThreadedIconLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27NotificationResourcesLoader5TraceEPNS_7VisitorE(%"class.blink::NotificationResourcesLoader"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #9
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"*, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead18SetTimeoutIntervalEN4base9TimeDeltaE(%"class.blink::ResourceRequestHead"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink18ThreadedIconLoader5StartEPNS_16ExecutionContextERKNS_19ResourceRequestHeadERKN4absl8optionalIN3gfx4SizeEEEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::ThreadedIconLoader"*, %"class.blink::ExecutionContext"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016), %"class.absl::optional"* dereferenceable(12), %"class.base::OnceCallback.23"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27NotificationResourcesLoader16DidFinishRequestEv(%"class.blink::NotificationResourcesLoader"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add nsw i32 %4, -1
  store i32 %5, i32* %3, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %33

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %7, %15
  %16 = phi %"class.blink::Member"* [ %19, %15 ], [ %9, %7 ]
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::ThreadedIconLoader"*, %"class.blink::ThreadedIconLoader"** %17, align 8
  tail call void @_ZN5blink18ThreadedIconLoader4StopEv(%"class.blink::ThreadedIconLoader"* %18) #9
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 1
  %20 = icmp eq %"class.blink::Member"* %19, %13
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %7
  %22 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %0, i64 0, i32 3
  %23 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.base::OnceCallback"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %26, i64* %27, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %24, align 8
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %29 = inttoptr i64 %26 to %"class.base::internal::BindStateBase"*
  %30 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %29, i64 0, i32 1
  %31 = bitcast void ()** %30 to void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)**
  %32 = load void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)*, void (%"class.base::internal::BindStateBase"*, %"class.blink::NotificationResourcesLoader"*)** %31, align 8
  tail call void %32(%"class.base::internal::BindStateBase"* %29, %"class.blink::NotificationResourcesLoader"* %0) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %33

33:                                               ; preds = %1, %21
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink27NotificationResourcesLoader18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %38, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %38

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 32
  %24 = bitcast i8* %23 to %"class.blink::Member"**
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %24, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 44
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %22, %32
  %33 = phi %"class.blink::Member"* [ %36, %32 ], [ %25, %22 ]
  %34 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.blink::ThreadedIconLoader"*, %"class.blink::ThreadedIconLoader"** %34, align 8
  tail call void @_ZN5blink18ThreadedIconLoader4StopEv(%"class.blink::ThreadedIconLoader"* %35) #9
  %36 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %33, i64 1
  %37 = icmp eq %"class.blink::Member"* %36, %30
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %16, %11, %2, %22
  %39 = phi i1 [ false, %16 ], [ true, %22 ], [ false, %2 ], [ false, %11 ], [ true, %32 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.331"*, %"struct.std::__1::pair.331"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #9
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #9
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #9
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.331"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.331"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.331"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !3

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.331"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.331"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.331"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.331"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #9
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.331"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !3

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.331"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #9
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.331"*, %"struct.std::__1::pair.331"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.331"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.331"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.331"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !3

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.331", %"struct.std::__1::pair.331"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.331"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.331"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.331"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.331"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #9
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.331"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_27NotificationResourcesLoaderELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::NotificationResourcesLoader"**
  %4 = load %"class.blink::NotificationResourcesLoader"*, %"class.blink::NotificationResourcesLoader"** %3, align 8
  %5 = icmp eq %"class.blink::NotificationResourcesLoader"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::NotificationResourcesLoader", %"class.blink::NotificationResourcesLoader"* %4, i64 -1, i32 9, i32 0, i32 0, i32 1
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::NotificationResourcesLoader"* null, %"class.blink::NotificationResourcesLoader"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEFvS5_dEE7RunOnceEPNS0_13BindStateBaseEOS5_d(%"class.base::internal::BindStateBase"*, %class.SkBitmap* dereferenceable(56), double) #0 comdat align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %class.SkBitmap**
  %8 = load %class.SkBitmap*, %class.SkBitmap** %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.blink::NotificationResourcesLoader"**
  %10 = load %"class.blink::NotificationResourcesLoader"*, %"class.blink::NotificationResourcesLoader"** %9, align 8
  %11 = icmp eq %"class.blink::NotificationResourcesLoader"* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %14 = bitcast %"class.blink::NotificationResourcesLoader"* %10 to i8*
  %15 = bitcast %"class.base::internal::BindStateBase"* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %20) #9
  %21 = getelementptr inbounds i8, i8* %14, i64 %19
  %22 = bitcast i8* %21 to %"class.blink::NotificationResourcesLoader"*
  %23 = and i64 %16, 1
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %12
  %26 = bitcast i8* %21 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = add i64 %16, -1
  %29 = getelementptr i8, i8* %27, i64 %28
  %30 = bitcast i8* %29 to void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)**
  %31 = load void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)*, void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)** %30, align 8
  br label %34

32:                                               ; preds = %12
  %33 = inttoptr i64 %16 to void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)*
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi void (%"class.blink::NotificationResourcesLoader"*, %class.SkBitmap*, %class.SkBitmap*, double)* [ %31, %25 ], [ %33, %32 ]
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* nonnull %4, %class.SkBitmap* dereferenceable(56) %1) #9
  call void %35(%"class.blink::NotificationResourcesLoader"* %22, %class.SkBitmap* %8, %class.SkBitmap* nonnull %4, double %2) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %20) #9
  br label %36

36:                                               ; preds = %3, %34
  ret void
}

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS4_dEJNS2_14WeakPersistentIS3_EEN3WTF17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::NotificationResourcesLoader"**
  %6 = load %"class.blink::NotificationResourcesLoader"*, %"class.blink::NotificationResourcesLoader"** %5, align 8
  %7 = icmp eq %"class.blink::NotificationResourcesLoader"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.25"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkBitmap*, %class.SkBitmap** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %class.SkBitmap* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %class.SkBitmap* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %16, %class.SkBitmap* dereferenceable(56) %15) #9
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %15) #9
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 1
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %15, i64 1
  %19 = icmp eq %class.SkBitmap* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %class.SkBitmap* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #9
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %23) #9
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #9
  %26 = udiv i64 %24, 56
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkBitmap*, %class.SkBitmap** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %class.SkBitmap* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %class.SkBitmap*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %class.SkBitmap* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %class.SkBitmap* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %41, %class.SkBitmap* dereferenceable(56) %40) #9
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %40) #9
  %42 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %41, i64 1
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %40, i64 1
  %44 = icmp eq %class.SkBitmap* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.25"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #9
  %50 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 38310473
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 38310473) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 56
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18NotificationActionEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.427"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.427", %"class.WTF::Vector.427"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.427", %"class.WTF::Vector.427"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 %25
  ret %"class.mojo::StructPtr"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %class.SkBitmap* @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.25"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.SkBitmap*, %class.SkBitmap** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %24, i64 %25
  ret %class.SkBitmap* %26
}

declare void @_ZN5blink5mojom5blink21NotificationResourcesC1Ev(%"class.blink::mojom::blink::NotificationResources"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.25"* @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.25"*, %"class.WTF::Vector.25"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.25"* %1, %0
  br i1 %3, label %107, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %22

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.SkBitmap*, %class.SkBitmap** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 %15
  br label %17

17:                                               ; preds = %17, %10
  %18 = phi %class.SkBitmap* [ %19, %17 ], [ %16, %10 ]
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %18) #9
  %19 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %18, i64 1
  %20 = icmp eq %class.SkBitmap* %19, %14
  br i1 %20, label %21, label %17

21:                                               ; preds = %17
  store i32 %8, i32* %5, align 4
  br label %65

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp ugt i32 %8, %24
  br i1 %25, label %26, label %63

26:                                               ; preds = %22
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %26
  %29 = icmp eq i32 %6, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.SkBitmap*, %class.SkBitmap** %31, align 8
  %33 = zext i32 %6 to i64
  %34 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %32, i64 %33
  br label %35

35:                                               ; preds = %35, %30
  %36 = phi %class.SkBitmap* [ %37, %35 ], [ %32, %30 ]
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %36) #9
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %36, i64 1
  %38 = icmp eq %class.SkBitmap* %37, %34
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  store i32 0, i32* %5, align 4
  br label %40

40:                                               ; preds = %39, %28
  %41 = bitcast %"class.WTF::Vector.25"* %0 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 0, i64* %43 monotonic, align 8
  store i32 0, i32* %23, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #9
  %44 = load i32, i32* %7, align 4
  %45 = load i32, i32* %23, align 8
  br label %46

46:                                               ; preds = %26, %40
  %47 = phi i32 [ 0, %26 ], [ %45, %40 ]
  %48 = phi i32 [ %8, %26 ], [ %44, %40 ]
  %49 = icmp ult i32 %47, %48
  br i1 %49, label %50, label %63, !prof !3

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %class.SkBitmap*, %class.SkBitmap** %51, align 8
  %53 = icmp eq %class.SkBitmap* %52, null
  br i1 %53, label %54, label %62

54:                                               ; preds = %50
  %55 = zext i32 %48 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %55) #9
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #9
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.25"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 56
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %23, align 8
  br label %63

62:                                               ; preds = %50
  tail call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.25"* %0, i32 %48) #9
  br label %63

63:                                               ; preds = %22, %46, %54, %62
  %64 = load i32, i32* %5, align 4
  br label %65

65:                                               ; preds = %63, %21
  %66 = phi i32 [ %64, %63 ], [ %8, %21 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %1, i64 0, i32 0, i32 0, i32 0
  %68 = load %class.SkBitmap*, %class.SkBitmap** %67, align 8
  %69 = zext i32 %66 to i64
  %70 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %68, i64 %69
  %71 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = load %class.SkBitmap*, %class.SkBitmap** %71, align 8
  %73 = icmp eq i32 %66, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %74
  %75 = phi %class.SkBitmap* [ %79, %74 ], [ %72, %65 ]
  %76 = phi %class.SkBitmap* [ %78, %74 ], [ %68, %65 ]
  %77 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %75, %class.SkBitmap* dereferenceable(56) %76) #9
  %78 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %76, i64 1
  %79 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %75, i64 1
  %80 = icmp eq %class.SkBitmap* %78, %70
  br i1 %80, label %81, label %74

81:                                               ; preds = %74
  %82 = load %class.SkBitmap*, %class.SkBitmap** %67, align 8
  %83 = load i32, i32* %5, align 4
  %84 = load %class.SkBitmap*, %class.SkBitmap** %71, align 8
  br label %85

85:                                               ; preds = %81, %65
  %86 = phi %class.SkBitmap* [ %84, %81 ], [ %72, %65 ]
  %87 = phi i32 [ %83, %81 ], [ 0, %65 ]
  %88 = phi %class.SkBitmap* [ %82, %81 ], [ %68, %65 ]
  %89 = zext i32 %87 to i64
  %90 = load i32, i32* %7, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %88, i64 %91
  %93 = icmp eq i32 %87, %90
  br i1 %93, label %105, label %94

94:                                               ; preds = %85
  %95 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %86, i64 %89
  %96 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %88, i64 %89
  br label %97

97:                                               ; preds = %94, %97
  %98 = phi %class.SkBitmap* [ %100, %97 ], [ %95, %94 ]
  %99 = phi %class.SkBitmap* [ %101, %97 ], [ %96, %94 ]
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %98, %class.SkBitmap* dereferenceable(56) %99) #9
  %100 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %98, i64 1
  %101 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %99, i64 1
  %102 = icmp eq %class.SkBitmap* %101, %92
  br i1 %102, label %103, label %97

103:                                              ; preds = %97
  %104 = load i32, i32* %7, align 4
  br label %105

105:                                              ; preds = %103, %85
  %106 = phi i32 [ %104, %103 ], [ %87, %85 ]
  store i32 %106, i32* %5, align 4
  br label %107

107:                                              ; preds = %2, %105
  ret %"class.WTF::Vector.25"* %0
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ThreadedIconLoader"*
  tail call void @_ZNK5blink18ThreadedIconLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadedIconLoader"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink18ThreadedIconLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadedIconLoader"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.43"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.43"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18ThreadedIconLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18ThreadedIconLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 96
  %4 = bitcast i8* %3 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #9
  %5 = getelementptr inbounds i8, i8* %0, i64 40
  %6 = bitcast i8* %5 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %6) #9
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to %"class.WTF::SharedBuffer"**
  %9 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %8, align 8
  %10 = icmp eq %"class.WTF::SharedBuffer"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #9
  %13 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %9) #9
  %17 = bitcast %"class.WTF::SharedBuffer"* %9 to i8*
  tail call void @free(i8* %17) #9
  br label %18

18:                                               ; preds = %1, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.43"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::ThreadedIconLoader"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #9
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::ThreadedIconLoader"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18ThreadedIconLoaderEEEEEmm(i64 %11) #9
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #9
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #9
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #9
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #9
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_18ThreadedIconLoaderEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #9
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #9
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18ThreadedIconLoaderEEEEEmm(i64 %14) #9
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #9
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #9
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #9
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #9
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_18ThreadedIconLoaderEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.43"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.43"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_18ThreadedIconLoaderEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_18ThreadedIconLoaderEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_"}
!8 = !{!9, !11, !13}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!13 = distinct !{!13, !14, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!17 = distinct !{!17, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_"}
!18 = !{!19, !21, !23}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!23 = distinct !{!23, !24, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!27 = distinct !{!27, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_"}
!28 = !{!29, !31, !33}
!29 = distinct !{!29, !30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!31 = distinct !{!31, !32, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!33 = distinct !{!33, !34, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!37 = distinct !{!37, !"_ZN5blink18WrapWeakPersistentINS_27NotificationResourcesLoaderEEENS_14WeakPersistentIT_EEPS3_"}
!38 = !{!39, !41, !43}
!39 = distinct !{!39, !40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS5_dEJNS3_14WeakPersistentIS4_EEN3WTF17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!41 = distinct !{!41, !42, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!42 = distinct !{!42, !"_ZN4base8BindOnceIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EEN3WTF17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!43 = distinct !{!43, !44, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZN3WTF4BindIMN5blink27NotificationResourcesLoaderEFvP8SkBitmapS3_dEJNS1_14WeakPersistentIS2_EENS_17UnretainedWrapperIS3_EEEFvS3_dEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN5blink5mojom5blink21NotificationResources3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZN5blink5mojom5blink21NotificationResources3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
