; ModuleID = '../../ppapi/utility/threading/simple_thread.cc'
source_filename = "../../ppapi/utility/threading/simple_thread.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.pp::SimpleThread" = type { %"class.pp::InstanceHandle", [4 x i8], %"class.pp::MessageLoop", i64, i64 }
%"class.pp::InstanceHandle" = type { i32 }
%"class.pp::MessageLoop" = type { %"class.pp::Resource.base", [4 x i8] }
%"class.pp::Resource.base" = type <{ i32 (...)**, i32 }>
%"class.pp::Resource" = type <{ i32 (...)**, i32, [4 x i8] }>
%union.pthread_attr_t = type { i64, [48 x i8] }

@_ZN2pp12SimpleThreadC1ERKNS_14InstanceHandleE = hidden unnamed_addr alias void (%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"*), void (%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"*)* @_ZN2pp12SimpleThreadC2ERKNS_14InstanceHandleE
@_ZN2pp12SimpleThreadC1ERKNS_14InstanceHandleEm = hidden unnamed_addr alias void (%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"*, i64), void (%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"*, i64)* @_ZN2pp12SimpleThreadC2ERKNS_14InstanceHandleEm
@_ZN2pp12SimpleThreadD1Ev = hidden unnamed_addr alias void (%"class.pp::SimpleThread"*), void (%"class.pp::SimpleThread"*)* @_ZN2pp12SimpleThreadD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp12SimpleThreadC2ERKNS_14InstanceHandleE(%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pp::InstanceHandle", %"class.pp::InstanceHandle"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 0, i32 0
  %5 = load i32, i32* %3, align 4
  store i32 %5, i32* %4, align 8
  %6 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  tail call void @_ZN2pp11MessageLoopC1ERKNS_14InstanceHandleE(%"class.pp::MessageLoop"* %6, %"class.pp::InstanceHandle"* dereferenceable(4) %1) #6
  %7 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 3
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN2pp11MessageLoopC1ERKNS_14InstanceHandleE(%"class.pp::MessageLoop"*, %"class.pp::InstanceHandle"* dereferenceable(4)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp12SimpleThreadC2ERKNS_14InstanceHandleEm(%"class.pp::SimpleThread"*, %"class.pp::InstanceHandle"* dereferenceable(4), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.pp::InstanceHandle", %"class.pp::InstanceHandle"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %4, align 4
  store i32 %6, i32* %5, align 8
  %7 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  tail call void @_ZN2pp11MessageLoopC1ERKNS_14InstanceHandleE(%"class.pp::MessageLoop"* %7, %"class.pp::InstanceHandle"* dereferenceable(4) %1) #6
  %8 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 3
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 4
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2pp12SimpleThreadD2Ev(%"class.pp::SimpleThread"*) unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  %8 = tail call i32 @_ZN2pp11MessageLoop8PostQuitEb(%"class.pp::MessageLoop"* %7, i1 zeroext true) #6
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %10 = load i64, i64* %3, align 8
  %11 = call i32 @pthread_join(i64 %10, i8** nonnull %2) #6
  store i64 0, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  br label %12

12:                                               ; preds = %1, %6
  %13 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  %14 = bitcast %"class.pp::MessageLoop"* %13 to %"class.pp::Resource"*
  call void @_ZN2pp8ResourceD2Ev(%"class.pp::Resource"* %14) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2pp12SimpleThread4JoinEv(%"class.pp::SimpleThread"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8*, align 8
  %3 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  %8 = tail call i32 @_ZN2pp11MessageLoop8PostQuitEb(%"class.pp::MessageLoop"* %7, i1 zeroext true) #6
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %10 = load i64, i64* %3, align 8
  %11 = call i32 @pthread_join(i64 %10, i8** nonnull %2) #6
  store i64 0, i64* %3, align 8
  %12 = icmp eq i32 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6
  br label %13

13:                                               ; preds = %1, %6
  %14 = phi i1 [ %12, %6 ], [ false, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind
declare void @_ZN2pp8ResourceD2Ev(%"class.pp::Resource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2pp12SimpleThread5StartEv(%"class.pp::SimpleThread"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN2pp12SimpleThread17StartWithFunctionEPFvRNS_11MessageLoopEPvES3_(%"class.pp::SimpleThread"* %0, void (%"class.pp::MessageLoop"*, i8*)* null, i8* null)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2pp12SimpleThread17StartWithFunctionEPFvRNS_11MessageLoopEPvES3_(%"class.pp::SimpleThread"*, void (%"class.pp::MessageLoop"*, i8*)*, i8*) local_unnamed_addr #0 align 2 {
  %4 = alloca %union.pthread_attr_t, align 8
  %5 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %33

8:                                                ; preds = %3
  %9 = tail call i8* @_Znwm(i64 32) #7
  %10 = bitcast i8* %9 to %"class.pp::MessageLoop"*
  tail call void @_ZN2pp11MessageLoopC1Ev(%"class.pp::MessageLoop"* nonnull %10) #6
  %11 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 2
  %12 = bitcast i8* %9 to %"class.pp::Resource"*
  %13 = bitcast %"class.pp::MessageLoop"* %11 to %"class.pp::Resource"*
  %14 = tail call dereferenceable(16) %"class.pp::Resource"* @_ZN2pp8ResourceaSERKS0_(%"class.pp::Resource"* nonnull %12, %"class.pp::Resource"* dereferenceable(16) %13) #6
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to void (%"class.pp::MessageLoop"*, i8*)**
  store void (%"class.pp::MessageLoop"*, i8*)* %1, void (%"class.pp::MessageLoop"*, i8*)** %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 24
  %18 = bitcast i8* %17 to i8**
  store i8* %2, i8** %18, align 8
  %19 = bitcast %union.pthread_attr_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  %20 = call i32 @pthread_attr_init(%union.pthread_attr_t* nonnull %4) #6
  %21 = getelementptr inbounds %"class.pp::SimpleThread", %"class.pp::SimpleThread"* %0, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %8
  %25 = call i32 @pthread_attr_setstacksize(%union.pthread_attr_t* nonnull %4, i64 %22) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24, %8
  %28 = call i32 @pthread_create(i64* %5, %union.pthread_attr_t* nonnull %4, i8* (i8*)* nonnull @_ZN2pp12_GLOBAL__N_19RunThreadEPv, i8* nonnull %9) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %24, %27
  call void @_ZN2pp8ResourceD2Ev(%"class.pp::Resource"* nonnull %12) #6
  call void @_ZdlPv(i8* nonnull %9) #7
  br label %31

31:                                               ; preds = %27, %30
  %32 = phi i1 [ false, %30 ], [ true, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #6
  br label %33

33:                                               ; preds = %3, %31
  %34 = phi i1 [ %32, %31 ], [ false, %3 ]
  ret i1 %34
}

declare i32 @_ZN2pp11MessageLoop8PostQuitEb(%"class.pp::MessageLoop"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare i32 @pthread_join(i64, i8**) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind
declare i32 @pthread_attr_init(%union.pthread_attr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_attr_setstacksize(%union.pthread_attr_t*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_create(i64*, %union.pthread_attr_t*, i8* (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias i8* @_ZN2pp12_GLOBAL__N_19RunThreadEPv(i8*) #0 {
  %2 = bitcast i8* %0 to %"class.pp::MessageLoop"*
  %3 = tail call i32 @_ZN2pp11MessageLoop21AttachToCurrentThreadEv(%"class.pp::MessageLoop"* %2) #6
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = bitcast i8* %4 to void (%"class.pp::MessageLoop"*, i8*)**
  %6 = load void (%"class.pp::MessageLoop"*, i8*)*, void (%"class.pp::MessageLoop"*, i8*)** %5, align 8
  %7 = icmp eq void (%"class.pp::MessageLoop"*, i8*)* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %0, i64 24
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void %6(%"class.pp::MessageLoop"* dereferenceable(16) %2, i8* %11) #6
  br label %14

12:                                               ; preds = %1
  %13 = tail call i32 @_ZN2pp11MessageLoop3RunEv(%"class.pp::MessageLoop"* %2) #6
  br label %14

14:                                               ; preds = %12, %8
  %15 = icmp eq i8* %0, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = bitcast i8* %0 to %"class.pp::Resource"*
  tail call void @_ZN2pp8ResourceD2Ev(%"class.pp::Resource"* nonnull %17) #6
  tail call void @_ZdlPv(i8* nonnull %0) #7
  br label %18

18:                                               ; preds = %16, %14
  ret i8* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN2pp11MessageLoopC1Ev(%"class.pp::MessageLoop"*) unnamed_addr #1

declare dereferenceable(16) %"class.pp::Resource"* @_ZN2pp8ResourceaSERKS0_(%"class.pp::Resource"*, %"class.pp::Resource"* dereferenceable(16)) local_unnamed_addr #1

declare i32 @_ZN2pp11MessageLoop21AttachToCurrentThreadEv(%"class.pp::MessageLoop"*) local_unnamed_addr #1

declare i32 @_ZN2pp11MessageLoop3RunEv(%"class.pp::MessageLoop"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
