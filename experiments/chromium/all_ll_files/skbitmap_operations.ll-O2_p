; ModuleID = '../../ui/gfx/skbitmap_operations.cc'
source_filename = "../../ui/gfx/skbitmap_operations.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.color_utils::HSL" = type { double, double, double }
%class.SkPaint = type <{ %class.sk_sp.17, %class.sk_sp.18, %class.sk_sp.19, %class.sk_sp.20, %class.sk_sp.21, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.17 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.18 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.19 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.20 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.21 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.8 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.9 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" }
%class.sk_sp.22 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.23" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.gfx::ShadowValue"* }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"struct.SkImageFilters::CropRect" = type { %struct.SkRect }

$_ZNK3gfx6InsetsngEv = comdat any

$_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_ = comdat any

@.str = private unnamed_addr constant [38 x i8] c"image.colorType() == kN32_SkColorType\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"../../ui/gfx/skbitmap_operations.cc\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"first.width() == second.width()\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"first.height() == second.height()\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"first.colorType() == kN32_SkColorType\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"second.colorType() == kN32_SkColorType\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"rgb.width() == alpha.width()\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"rgb.height() == alpha.height()\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"rgb.colorType() == kN32_SkColorType\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"alpha.colorType() == kN32_SkColorType\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"mask.colorType() == kN32_SkColorType\00", align 1
@.str.11 = private unnamed_addr constant [39 x i8] c"bitmap.colorType() == kN32_SkColorType\00", align 1
@_ZN12_GLOBAL__N_18HSLShift15kLineProcessorsE = internal unnamed_addr constant [2 x [3 x [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*]]] [[3 x [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*]] [[3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift12LineProcCopyERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSnopLdecERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSnopLincERKN11color_utils3HSLEPKjPji], [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLnopERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLdecERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLincERKN11color_utils3HSLEPKjPji], [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji]], [3 x [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*]] [[3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji], [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji], [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*] [void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)* @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji]]], align 16
@.str.12 = private unnamed_addr constant [39 x i8] c"source.colorType() == kN32_SkColorType\00", align 1
@__const._ZN18SkBitmapOperations16CreateDropShadowERK8SkBitmapRKNSt3__16vectorIN3gfx11ShadowValueENS3_9allocatorIS6_EEEE.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.17 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.18 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.19 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.20 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.21 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN18SkBitmapOperations6RotateERK8SkBitmapNS_14RotationAmountE.canvas = private unnamed_addr constant { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkDeque { i8* inttoptr (i64 -6148914691236517206 to i8*), i8* inttoptr (i64 -6148914691236517206 to i8*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), %"struct.SkDeque::Block"* inttoptr (i64 -6148914691236517206 to %"struct.SkDeque::Block"*), i64 -6148914691236517206, i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %"class.SkCanvas::MCRec"* inttoptr (i64 -6148914691236517206 to %"class.SkCanvas::MCRec"*), %class.sk_sp.8 { %class.SkMarkerStack* inttoptr (i64 -6148914691236517206 to %class.SkMarkerStack*) }, [384 x i64] [i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206], %class.sk_sp.9 { %class.SkBaseDevice* inttoptr (i64 -6148914691236517206 to %class.SkBaseDevice*) }, %class.SkSurfaceProps { i32 -1431655766, i32 -1431655766 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.SkRasterHandleAllocator* inttoptr (i64 -6148914691236517206 to %class.SkRasterHandleAllocator*) } } }, %class.SkSurface_Base* inttoptr (i64 -6148914691236517206 to %class.SkSurface_Base*), %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.std::__1::unique_ptr.11" { %"class.std::__1::__compressed_pair.12" { %"struct.std::__1::__compressed_pair_elem.13" { %class.SkGlyphRunBuilder* inttoptr (i64 -6148914691236517206 to %class.SkGlyphRunBuilder*) } } } }, align 8
@_ZN4skifL11kNoCropRectE = internal unnamed_addr constant %struct.SkRect { float 0xFFF0000000000000, float 0xFFF0000000000000, float 0x7FF0000000000000, float 0x7FF0000000000000 }, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations20CreateInvertedBitmapERK8SkBitmap(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %10 = load %class.SkPixelRef*, %class.SkPixelRef** %9, align 8
  %11 = icmp eq %class.SkPixelRef* %10, null
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %90

21:                                               ; preds = %2, %16
  %22 = phi i32 [ 0, %16 ], [ %13, %2 ]
  %23 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 %22, i32* %5, align 4
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 6, i32* %6, align 4
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp eq i32 %22, 6
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %30, align 8
  br label %36

31:                                               ; preds = %21
  %32 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %25, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %33 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %26, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i8* %32, i8* %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %29, %31
  %37 = phi i8* [ %35, %31 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %37, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 32, %"class.logging::CheckOpResult"* nonnull %4) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %43 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #9
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %47 = load i32, i32* %46, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %8, i32 %45, i32 %47, i1 zeroext false) #9
  %48 = load i32, i32* %46, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %42
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 1
  %55 = load i32, i32* %44, align 4
  br label %57

56:                                               ; preds = %74, %42
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %8) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %43) #9
  br label %90

57:                                               ; preds = %50, %74
  %58 = phi i32 [ %48, %50 ], [ %75, %74 ]
  %59 = phi i32 [ %55, %50 ], [ %76, %74 ]
  %60 = phi i64 [ 0, %50 ], [ %77, %74 ]
  %61 = load i8*, i8** %51, align 8
  %62 = load i64, i64* %52, align 8
  %63 = mul i64 %62, %60
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = load i8*, i8** %53, align 8
  %67 = load i64, i64* %54, align 8
  %68 = mul i64 %67, %60
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = bitcast i8* %69 to i32*
  %71 = icmp sgt i32 %59, 0
  br i1 %71, label %80, label %74

72:                                               ; preds = %80
  %73 = load i32, i32* %46, align 4
  br label %74

74:                                               ; preds = %72, %57
  %75 = phi i32 [ %73, %72 ], [ %58, %57 ]
  %76 = phi i32 [ %87, %72 ], [ %59, %57 ]
  %77 = add nuw nsw i64 %60, 1
  %78 = sext i32 %75 to i64
  %79 = icmp slt i64 %77, %78
  br i1 %79, label %57, label %56

80:                                               ; preds = %57, %80
  %81 = phi i64 [ %86, %80 ], [ 0, %57 ]
  %82 = getelementptr inbounds i32, i32* %65, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = xor i32 %83, 16777215
  %85 = getelementptr inbounds i32, i32* %70, i64 %81
  store i32 %84, i32* %85, align 4
  %86 = add nuw nsw i64 %81, 1
  %87 = load i32, i32* %44, align 4
  %88 = sext i32 %87 to i64
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %80, label %72

90:                                               ; preds = %56, %20
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

declare void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap*, i32, i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations19CreateBlendedBitmapERK8SkBitmapS2_d(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), %class.SkBitmap* dereferenceable(56), double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = alloca %"class.logging::CheckOpResult", align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %"class.logging::CheckError", align 8
  %21 = alloca %class.SkBitmap, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = icmp eq i32 %25, %27
  br i1 %29, label %30, label %31

30:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* null, i8** %23, align 8
  br label %40

31:                                               ; preds = %4
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %25) #9
  %33 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %27) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %32, i8* %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* %35, i8** %23, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 56, %"class.logging::CheckOpResult"* nonnull %9) #9
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #9
  br label %40

40:                                               ; preds = %30, %31, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %41 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %42, align 8
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = icmp eq i32 %44, %46
  br i1 %48, label %49, label %50

49:                                               ; preds = %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  store i8* null, i8** %42, align 8
  br label %59

50:                                               ; preds = %40
  %51 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %44) #9
  %52 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %46) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %51, i8* %52) #9
  %53 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  store i8* %54, i8** %42, align 8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 57, %"class.logging::CheckOpResult"* nonnull %11) #9
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  br label %59

59:                                               ; preds = %49, %50, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  %60 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #9
  %61 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %61, align 8
  %62 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #9
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %14, align 4
  %65 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #9
  store i32 6, i32* %15, align 4
  %66 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = icmp eq i32 %64, 6
  br i1 %67, label %68, label %70

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* null, i8** %69, align 8
  br label %75

70:                                               ; preds = %59
  %71 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %62, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %72 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %65, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0), i8* %71, i8* %72) #9
  %73 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %68, %70
  %76 = phi i8* [ %74, %70 ], [ null, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  store i8* %76, i8** %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #9
  %77 = icmp eq i8* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %75
  %79 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 58, %"class.logging::CheckOpResult"* nonnull %13) #9
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  br label %81

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #9
  %82 = bitcast %"class.logging::CheckOpResult"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #9
  %83 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %17, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %83, align 8
  %84 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #9
  %85 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %18, align 4
  %87 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87) #9
  store i32 6, i32* %19, align 4
  %88 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = icmp eq i32 %86, 6
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* null, i8** %91, align 8
  br label %97

92:                                               ; preds = %81
  %93 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %84, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %94 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %87, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %8, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0), i8* %93, i8* %94) #9
  %95 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %90, %92
  %98 = phi i8* [ %96, %92 ], [ null, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  store i8* %98, i8** %83, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #9
  %99 = icmp eq i8* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.logging::CheckError"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %20, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 59, %"class.logging::CheckOpResult"* nonnull %17) #9
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %20) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #9
  br label %103

103:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #9
  %104 = fcmp olt double %3, 0x3F70101010101010
  br i1 %104, label %105, label %106

105:                                              ; preds = %103
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %206

106:                                              ; preds = %103
  %107 = fcmp ogt double %3, 0x3FEFDFDFDFDFDFE0
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %2) #9
  br label %206

109:                                              ; preds = %106
  %110 = bitcast %class.SkBitmap* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %110) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %21) #9
  %111 = load i32, i32* %24, align 4
  %112 = load i32, i32* %43, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %21, i32 %111, i32 %112, i1 zeroext false) #9
  %113 = fsub double 1.000000e+00, %3
  %114 = load i32, i32* %43, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %124

116:                                              ; preds = %109
  %117 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %118 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %119 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %120 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %121 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %21, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %21, i64 0, i32 1, i32 1
  %123 = load i32, i32* %24, align 4
  br label %125

124:                                              ; preds = %147, %109
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %21) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %110) #9
  br label %206

125:                                              ; preds = %116, %147
  %126 = phi i32 [ %114, %116 ], [ %148, %147 ]
  %127 = phi i32 [ %123, %116 ], [ %149, %147 ]
  %128 = phi i64 [ 0, %116 ], [ %150, %147 ]
  %129 = load i8*, i8** %117, align 8
  %130 = load i64, i64* %118, align 8
  %131 = mul i64 %130, %128
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = bitcast i8* %132 to i32*
  %134 = load i8*, i8** %119, align 8
  %135 = load i64, i64* %120, align 8
  %136 = mul i64 %135, %128
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  %138 = bitcast i8* %137 to i32*
  %139 = load i8*, i8** %121, align 8
  %140 = load i64, i64* %122, align 8
  %141 = mul i64 %140, %128
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = bitcast i8* %142 to i32*
  %144 = icmp sgt i32 %127, 0
  br i1 %144, label %153, label %147

145:                                              ; preds = %153
  %146 = load i32, i32* %43, align 4
  br label %147

147:                                              ; preds = %145, %125
  %148 = phi i32 [ %146, %145 ], [ %126, %125 ]
  %149 = phi i32 [ %203, %145 ], [ %127, %125 ]
  %150 = add nuw nsw i64 %128, 1
  %151 = sext i32 %148 to i64
  %152 = icmp slt i64 %150, %151
  br i1 %152, label %125, label %124

153:                                              ; preds = %125, %153
  %154 = phi i64 [ %202, %153 ], [ 0, %125 ]
  %155 = getelementptr inbounds i32, i32* %133, i64 %154
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds i32, i32* %138, i64 %154
  %158 = load i32, i32* %157, align 4
  %159 = lshr i32 %156, 24
  %160 = uitofp i32 %159 to double
  %161 = fmul double %113, %160
  %162 = lshr i32 %158, 24
  %163 = uitofp i32 %162 to double
  %164 = fmul double %163, %3
  %165 = fadd double %161, %164
  %166 = fptosi double %165 to i32
  %167 = lshr i32 %156, 16
  %168 = and i32 %167, 255
  %169 = uitofp i32 %168 to double
  %170 = fmul double %113, %169
  %171 = lshr i32 %158, 16
  %172 = and i32 %171, 255
  %173 = uitofp i32 %172 to double
  %174 = fmul double %173, %3
  %175 = fadd double %170, %174
  %176 = fptosi double %175 to i32
  %177 = lshr i32 %156, 8
  %178 = and i32 %177, 255
  %179 = uitofp i32 %178 to double
  %180 = fmul double %113, %179
  %181 = lshr i32 %158, 8
  %182 = and i32 %181, 255
  %183 = uitofp i32 %182 to double
  %184 = fmul double %183, %3
  %185 = fadd double %180, %184
  %186 = fptosi double %185 to i32
  %187 = and i32 %156, 255
  %188 = uitofp i32 %187 to double
  %189 = fmul double %113, %188
  %190 = and i32 %158, 255
  %191 = uitofp i32 %190 to double
  %192 = fmul double %191, %3
  %193 = fadd double %189, %192
  %194 = fptosi double %193 to i32
  %195 = shl i32 %166, 24
  %196 = shl i32 %176, 16
  %197 = shl i32 %186, 8
  %198 = or i32 %195, %194
  %199 = or i32 %198, %196
  %200 = or i32 %199, %197
  %201 = getelementptr inbounds i32, i32* %143, i64 %154
  store i32 %200, i32* %201, align 4
  %202 = add nuw nsw i64 %154, 1
  %203 = load i32, i32* %24, align 4
  %204 = sext i32 %203 to i64
  %205 = icmp slt i64 %202, %204
  br i1 %205, label %153, label %145

206:                                              ; preds = %124, %108, %105
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations18CreateMaskedBitmapERK8SkBitmapS2_(%class.SkBitmap* noalias sret, %class.SkBitmap* nocapture readonly dereferenceable(56), %class.SkBitmap* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.logging::CheckOpResult", align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %21, align 8
  %22 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp eq i32 %23, %25
  br i1 %27, label %28, label %29

28:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %21, align 8
  br label %38

29:                                               ; preds = %3
  %30 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %23) #9
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %25) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* %30, i8* %31) #9
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %21, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 102, %"class.logging::CheckOpResult"* nonnull %8) #9
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %39 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = icmp eq i32 %42, %44
  br i1 %46, label %47, label %48

47:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  store i8* null, i8** %40, align 8
  br label %57

48:                                               ; preds = %38
  %49 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %42) #9
  %50 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %44) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* %49, i8* %50) #9
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %48
  %55 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 103, %"class.logging::CheckOpResult"* nonnull %10) #9
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #9
  br label %57

57:                                               ; preds = %47, %48, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  %58 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #9
  %59 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %59, align 8
  %60 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %60) #9
  %61 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %13, align 4
  %63 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #9
  store i32 6, i32* %14, align 4
  %64 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = icmp eq i32 %62, 6
  br i1 %65, label %66, label %68

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* null, i8** %67, align 8
  br label %73

68:                                               ; preds = %57
  %69 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %60, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %70 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %63, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i8* %69, i8* %70) #9
  %71 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %66, %68
  %74 = phi i8* [ %72, %68 ], [ null, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  store i8* %74, i8** %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #9
  %75 = icmp eq i8* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 104, %"class.logging::CheckOpResult"* nonnull %12) #9
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #9
  br label %79

79:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #9
  %80 = bitcast %"class.logging::CheckOpResult"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %16, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %81, align 8
  %82 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #9
  %83 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %17, align 4
  %85 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %85) #9
  store i32 6, i32* %18, align 4
  %86 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = icmp eq i32 %84, 6
  br i1 %87, label %88, label %90

88:                                               ; preds = %79
  %89 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* null, i8** %89, align 8
  br label %95

90:                                               ; preds = %79
  %91 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %82, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %92 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %85, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i8* %91, i8* %92) #9
  %93 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %88, %90
  %96 = phi i8* [ %94, %90 ], [ null, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  store i8* %96, i8** %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %85) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #9
  %97 = icmp eq i8* %96, null
  br i1 %97, label %101, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.logging::CheckError"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 105, %"class.logging::CheckOpResult"* nonnull %16) #9
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #9
  br label %101

101:                                              ; preds = %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %102 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #9
  %103 = load i32, i32* %22, align 4
  %104 = load i32, i32* %41, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %0, i32 %103, i32 %104, i1 zeroext false) #9
  %105 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %108, label %167

108:                                              ; preds = %101
  %109 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %110 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %111 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %112 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %113 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %114 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %115 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %116 = load i32, i32* %115, align 8
  br label %117

117:                                              ; preds = %108, %139
  %118 = phi i32 [ %106, %108 ], [ %140, %139 ]
  %119 = phi i32 [ %116, %108 ], [ %141, %139 ]
  %120 = phi i64 [ 0, %108 ], [ %142, %139 ]
  %121 = load i8*, i8** %109, align 8
  %122 = load i64, i64* %110, align 8
  %123 = mul i64 %122, %120
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = bitcast i8* %124 to i32*
  %126 = load i8*, i8** %111, align 8
  %127 = load i64, i64* %112, align 8
  %128 = mul i64 %127, %120
  %129 = getelementptr inbounds i8, i8* %126, i64 %128
  %130 = bitcast i8* %129 to i32*
  %131 = load i8*, i8** %113, align 8
  %132 = load i64, i64* %114, align 8
  %133 = mul i64 %132, %120
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = bitcast i8* %134 to i32*
  %136 = icmp sgt i32 %119, 0
  br i1 %136, label %145, label %139

137:                                              ; preds = %145
  %138 = load i32, i32* %105, align 4
  br label %139

139:                                              ; preds = %137, %117
  %140 = phi i32 [ %138, %137 ], [ %118, %117 ]
  %141 = phi i32 [ %164, %137 ], [ %119, %117 ]
  %142 = add nuw nsw i64 %120, 1
  %143 = sext i32 %140 to i64
  %144 = icmp slt i64 %142, %143
  br i1 %144, label %117, label %167

145:                                              ; preds = %117, %145
  %146 = phi i64 [ %163, %145 ], [ 0, %117 ]
  %147 = getelementptr inbounds i32, i32* %130, i64 %146
  %148 = load i32, i32* %147, align 4
  %149 = lshr i32 %148, 24
  %150 = add nuw nsw i32 %149, 1
  %151 = getelementptr inbounds i32, i32* %125, i64 %146
  %152 = load i32, i32* %151, align 4
  %153 = and i32 %152, 16711935
  %154 = mul i32 %153, %150
  %155 = lshr i32 %154, 8
  %156 = lshr i32 %152, 8
  %157 = and i32 %156, 16711935
  %158 = mul i32 %157, %150
  %159 = and i32 %155, 16711935
  %160 = and i32 %158, -16711936
  %161 = or i32 %159, %160
  %162 = getelementptr inbounds i32, i32* %135, i64 %146
  store i32 %161, i32* %162, align 4
  %163 = add nuw nsw i64 %146, 1
  %164 = load i32, i32* %115, align 8
  %165 = sext i32 %164 to i64
  %166 = icmp slt i64 %163, %165
  br i1 %166, label %145, label %137

167:                                              ; preds = %139, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations22CreateButtonBackgroundEjRK8SkBitmapS2_(%class.SkBitmap* noalias sret, i32, %class.SkBitmap* nocapture readonly dereferenceable(56), %class.SkBitmap* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %17 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %8, align 4
  %20 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 6, i32* %9, align 4
  %21 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp eq i32 %19, 6
  br i1 %22, label %23, label %25

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* null, i8** %24, align 8
  br label %30

25:                                               ; preds = %4
  %26 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %27 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %20, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %23, %25
  %31 = phi i8* [ %29, %25 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %31, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 129, %"class.logging::CheckOpResult"* nonnull %7) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %37 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %38, align 8
  %39 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #9
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %12, align 4
  %42 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #9
  store i32 6, i32* %13, align 4
  %43 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = icmp eq i32 %41, 6
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* null, i8** %46, align 8
  br label %52

47:                                               ; preds = %36
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %39, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %49 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i8* %48, i8* %49) #9
  %50 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %45, %47
  %53 = phi i8* [ %51, %47 ], [ null, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  store i8* %53, i8** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #9
  %54 = icmp eq i8* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 130, %"class.logging::CheckOpResult"* nonnull %11) #9
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %58

58:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %59 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #9
  %60 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 2, i32 1, i32 1
  %63 = load i32, i32* %62, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %0, i32 %61, i32 %63, i1 zeroext false) #9
  %64 = lshr i32 %1, 24
  %65 = uitofp i32 %64 to double
  %66 = lshr i32 %1, 16
  %67 = and i32 %66, 255
  %68 = uitofp i32 %67 to double
  %69 = fdiv double %65, 2.550000e+02
  %70 = fmul double %69, %68
  %71 = lshr i32 %1, 8
  %72 = and i32 %71, 255
  %73 = uitofp i32 %72 to double
  %74 = fmul double %69, %73
  %75 = and i32 %1, 255
  %76 = uitofp i32 %75 to double
  %77 = fmul double %69, %76
  %78 = load i32, i32* %62, align 4
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %178

80:                                               ; preds = %58
  %81 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %83 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 1
  %84 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 0
  %85 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 1
  %86 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 0
  %87 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %3, i64 0, i32 1, i32 1
  %88 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %2, i64 0, i32 1, i32 2, i32 1, i32 0
  %89 = load i32, i32* %60, align 4
  br label %90

90:                                               ; preds = %80, %116
  %91 = phi i32 [ %78, %80 ], [ %117, %116 ]
  %92 = phi i32 [ %89, %80 ], [ %118, %116 ]
  %93 = phi i64 [ 0, %80 ], [ %119, %116 ]
  %94 = load i8*, i8** %81, align 8
  %95 = load i64, i64* %82, align 8
  %96 = mul i64 %95, %93
  %97 = getelementptr inbounds i8, i8* %94, i64 %96
  %98 = bitcast i8* %97 to i32*
  %99 = load i32, i32* %83, align 4
  %100 = trunc i64 %93 to i32
  %101 = srem i32 %100, %99
  %102 = load i8*, i8** %84, align 8
  %103 = zext i32 %101 to i64
  %104 = load i64, i64* %85, align 8
  %105 = mul i64 %104, %103
  %106 = getelementptr inbounds i8, i8* %102, i64 %105
  %107 = bitcast i8* %106 to i32*
  %108 = load i8*, i8** %86, align 8
  %109 = load i64, i64* %87, align 8
  %110 = mul i64 %109, %93
  %111 = getelementptr inbounds i8, i8* %108, i64 %110
  %112 = bitcast i8* %111 to i32*
  %113 = icmp sgt i32 %92, 0
  br i1 %113, label %122, label %116

114:                                              ; preds = %122
  %115 = load i32, i32* %62, align 4
  br label %116

116:                                              ; preds = %114, %90
  %117 = phi i32 [ %115, %114 ], [ %91, %90 ]
  %118 = phi i32 [ %175, %114 ], [ %92, %90 ]
  %119 = add nuw nsw i64 %93, 1
  %120 = sext i32 %117 to i64
  %121 = icmp slt i64 %119, %120
  br i1 %121, label %90, label %178

122:                                              ; preds = %90, %122
  %123 = phi i64 [ %174, %122 ], [ 0, %90 ]
  %124 = load i32, i32* %88, align 4
  %125 = trunc i64 %123 to i32
  %126 = srem i32 %125, %124
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i32, i32* %107, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = lshr i32 %129, 24
  %131 = uitofp i32 %130 to double
  %132 = lshr i32 %129, 16
  %133 = and i32 %132, 255
  %134 = uitofp i32 %133 to double
  %135 = lshr i32 %129, 8
  %136 = and i32 %135, 255
  %137 = uitofp i32 %136 to double
  %138 = and i32 %129, 255
  %139 = uitofp i32 %138 to double
  %140 = fdiv double %131, 2.550000e+02
  %141 = fsub double 1.000000e+00, %140
  %142 = getelementptr inbounds i32, i32* %112, i64 %123
  %143 = load i32, i32* %142, align 4
  %144 = lshr i32 %143, 24
  %145 = uitofp i32 %144 to double
  %146 = fdiv double %145, 2.550000e+02
  %147 = fadd double %65, %131
  %148 = fcmp olt double %147, 2.550000e+02
  %149 = select i1 %148, double %147, double 2.550000e+02
  %150 = fmul double %146, %149
  %151 = fptosi double %150 to i32
  %152 = fmul double %70, %141
  %153 = fmul double %140, %134
  %154 = fadd double %153, %152
  %155 = fmul double %146, %154
  %156 = fptosi double %155 to i32
  %157 = fmul double %74, %141
  %158 = fmul double %140, %137
  %159 = fadd double %158, %157
  %160 = fmul double %146, %159
  %161 = fptosi double %160 to i32
  %162 = fmul double %77, %141
  %163 = fmul double %140, %139
  %164 = fadd double %163, %162
  %165 = fmul double %146, %164
  %166 = fptosi double %165 to i32
  %167 = shl i32 %151, 24
  %168 = shl i32 %156, 16
  %169 = shl i32 %161, 8
  %170 = or i32 %167, %166
  %171 = or i32 %170, %168
  %172 = or i32 %171, %169
  %173 = getelementptr inbounds i32, i32* %98, i64 %123
  store i32 %172, i32* %173, align 4
  %174 = add nuw nsw i64 %123, 1
  %175 = load i32, i32* %60, align 4
  %176 = sext i32 %175 to i64
  %177 = icmp slt i64 %174, %176
  br i1 %177, label %122, label %114

178:                                              ; preds = %116, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations22CreateHSLShiftedBitmapERK8SkBitmapRKN11color_utils3HSLE(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), %"struct.color_utils::HSL"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %11 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %12 = icmp eq %class.SkPixelRef* %11, null
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %12, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %102

22:                                               ; preds = %3, %17
  %23 = phi i32 [ 0, %17 ], [ %14, %3 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 %23, i32* %6, align 4
  %27 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #9
  store i32 6, i32* %7, align 4
  %28 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = icmp eq i32 %23, 6
  br i1 %29, label %30, label %32

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* null, i8** %31, align 8
  br label %37

32:                                               ; preds = %22
  %33 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %26, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %34 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %27, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i8* %33, i8* %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %30, %32
  %38 = phi i8* [ %36, %32 ], [ null, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* %38, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 484, %"class.logging::CheckOpResult"* nonnull %5) #9
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %43

43:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %44 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %2, i64 0, i32 0
  %45 = load double, double* %44, align 8
  %46 = fcmp oge double %45, 0.000000e+00
  %47 = fcmp ole double %45, 1.000000e+00
  %48 = and i1 %47, %46
  %49 = zext i1 %48 to i64
  %50 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %2, i64 0, i32 1
  %51 = load double, double* %50, align 8
  %52 = fcmp ult double %51, 0.000000e+00
  %53 = fcmp ugt double %51, 4.995000e-01
  %54 = or i1 %52, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %43
  %56 = fcmp ult double %51, 5.005000e-01
  br i1 %56, label %58, label %57

57:                                               ; preds = %55
  br label %58

58:                                               ; preds = %43, %55, %57
  %59 = phi i64 [ 2, %57 ], [ 0, %55 ], [ 1, %43 ]
  %60 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %2, i64 0, i32 2
  %61 = load double, double* %60, align 8
  %62 = fcmp ult double %61, 0.000000e+00
  %63 = fcmp ugt double %61, 4.995000e-01
  %64 = or i1 %62, %63
  br i1 %64, label %65, label %68

65:                                               ; preds = %58
  %66 = fcmp ult double %61, 5.005000e-01
  br i1 %66, label %68, label %67

67:                                               ; preds = %65
  br label %68

68:                                               ; preds = %58, %65, %67
  %69 = phi i64 [ 2, %67 ], [ 0, %65 ], [ 1, %58 ]
  %70 = getelementptr inbounds [2 x [3 x [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*]]], [2 x [3 x [3 x void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*]]]* @_ZN12_GLOBAL__N_18HSLShift15kLineProcessorsE, i64 0, i64 %49, i64 %59, i64 %69
  %71 = load void (%"struct.color_utils::HSL"*, i32*, i32*, i32)*, void (%"struct.color_utils::HSL"*, i32*, i32*, i32)** %70, align 8
  %72 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %72) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #9
  %73 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %76 = load i32, i32* %75, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %9, i32 %74, i32 %76, i1 zeroext false) #9
  %77 = load i32, i32* %75, align 4
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %68
  %80 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %81 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %82 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 0
  %83 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 1
  br label %85

84:                                               ; preds = %85, %68
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %9) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %72) #9
  br label %102

85:                                               ; preds = %79, %85
  %86 = phi i64 [ 0, %79 ], [ %98, %85 ]
  %87 = load i8*, i8** %80, align 8
  %88 = load i64, i64* %81, align 8
  %89 = mul i64 %88, %86
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = bitcast i8* %90 to i32*
  %92 = load i8*, i8** %82, align 8
  %93 = load i64, i64* %83, align 8
  %94 = mul i64 %93, %86
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = bitcast i8* %95 to i32*
  %97 = load i32, i32* %73, align 4
  call void %71(%"struct.color_utils::HSL"* dereferenceable(24) %2, i32* %91, i32* %96, i32 %97) #9
  %98 = add nuw nsw i64 %86, 1
  %99 = load i32, i32* %75, align 4
  %100 = sext i32 %99 to i64
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %85, label %84

102:                                              ; preds = %84, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations17CreateTiledBitmapERK8SkBitmapiiii(%class.SkBitmap* noalias sret, %class.SkBitmap* nocapture readonly dereferenceable(56), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %14 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #9
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  store i32 %16, i32* %9, align 4
  %17 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  store i32 6, i32* %10, align 4
  %18 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp eq i32 %16, 6
  br i1 %19, label %20, label %22

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* null, i8** %21, align 8
  br label %27

22:                                               ; preds = %6
  %23 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %14, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %24 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i8* %23, i8* %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %20, %22
  %28 = phi i8* [ %26, %22 ], [ null, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %28, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #9
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 530, %"class.logging::CheckOpResult"* nonnull %8) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #9
  br label %33

33:                                               ; preds = %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %34 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #9
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %0, i32 %4, i32 %5, i1 zeroext false) #9
  %35 = icmp sgt i32 %5, 0
  br i1 %35, label %36, label %88

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %38 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 0
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %0, i64 0, i32 1, i32 1
  %42 = icmp sgt i32 %4, 0
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %44 = zext i32 %5 to i64
  %45 = zext i32 %4 to i64
  br label %46

46:                                               ; preds = %68, %36
  %47 = phi i64 [ 0, %36 ], [ %69, %68 ]
  %48 = trunc i64 %47 to i32
  %49 = add nsw i32 %48, %3
  %50 = load i32, i32* %37, align 4
  %51 = srem i32 %49, %50
  br label %52

52:                                               ; preds = %52, %46
  %53 = phi i32 [ %51, %46 ], [ %55, %52 ]
  %54 = icmp slt i32 %53, 0
  %55 = add nsw i32 %53, %50
  br i1 %54, label %52, label %56

56:                                               ; preds = %52
  %57 = load i8*, i8** %38, align 8
  %58 = sext i32 %53 to i64
  %59 = load i64, i64* %39, align 8
  %60 = mul i64 %59, %58
  %61 = getelementptr inbounds i8, i8* %57, i64 %60
  %62 = bitcast i8* %61 to i32*
  %63 = load i8*, i8** %40, align 8
  %64 = load i64, i64* %41, align 8
  %65 = mul i64 %64, %47
  %66 = getelementptr inbounds i8, i8* %63, i64 %65
  %67 = bitcast i8* %66 to i32*
  br i1 %42, label %71, label %68

68:                                               ; preds = %81, %56
  %69 = add nuw nsw i64 %47, 1
  %70 = icmp eq i64 %69, %44
  br i1 %70, label %88, label %46

71:                                               ; preds = %56, %81
  %72 = phi i64 [ %86, %81 ], [ 0, %56 ]
  %73 = trunc i64 %72 to i32
  %74 = add nsw i32 %73, %2
  %75 = load i32, i32* %43, align 4
  %76 = srem i32 %74, %75
  br label %77

77:                                               ; preds = %77, %71
  %78 = phi i32 [ %76, %71 ], [ %80, %77 ]
  %79 = icmp slt i32 %78, 0
  %80 = add nsw i32 %78, %75
  br i1 %79, label %77, label %81

81:                                               ; preds = %77
  %82 = sext i32 %78 to i64
  %83 = getelementptr inbounds i32, i32* %62, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32, i32* %67, i64 %72
  store i32 %84, i32* %85, align 4
  %86 = add nuw nsw i64 %72, 1
  %87 = icmp eq i64 %86, %45
  br i1 %87, label %68, label %71

88:                                               ; preds = %68, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations24DownsampleByTwoUntilSizeERK8SkBitmapii(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkBitmap, align 8
  %6 = alloca %class.SkBitmap, align 8
  %7 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, %2
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sle i32 %12, %3
  %14 = or i32 %3, %2
  %15 = icmp slt i32 %14, 0
  %16 = or i1 %15, %13
  br i1 %16, label %17, label %18

17:                                               ; preds = %4, %10
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %41

18:                                               ; preds = %10
  %19 = bitcast %class.SkBitmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %5, %class.SkBitmap* dereferenceable(56) %1) #9
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2, i32 1, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = shl nsw i32 %2, 1
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %40, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %5, i64 0, i32 1, i32 2, i32 1, i32 1
  %26 = shl nsw i32 %3, 1
  %27 = bitcast %class.SkBitmap* %6 to i8*
  br label %28

28:                                               ; preds = %24, %36
  %29 = phi i32 [ %21, %24 ], [ %38, %36 ]
  %30 = load i32, i32* %25, align 4
  %31 = icmp sge i32 %30, %26
  %32 = icmp sgt i32 %29, 1
  %33 = and i1 %32, %31
  %34 = icmp sgt i32 %30, 1
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %40

36:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %27) #9
  call void @_ZN18SkBitmapOperations15DownsampleByTwoERK8SkBitmap(%class.SkBitmap* nonnull sret %6, %class.SkBitmap* nonnull dereferenceable(56) %5)
  %37 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* nonnull %5, %class.SkBitmap* nonnull dereferenceable(56) %6) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %27) #9
  %38 = load i32, i32* %20, align 8
  %39 = icmp slt i32 %38, %22
  br i1 %39, label %40, label %28

40:                                               ; preds = %36, %28, %18
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %5) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #9
  br label %41

41:                                               ; preds = %40, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations15DownsampleByTwoERK8SkBitmap(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %10 = load %class.SkPixelRef*, %class.SkPixelRef** %9, align 8
  %11 = icmp eq %class.SkPixelRef* %10, null
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %148

21:                                               ; preds = %2, %16
  %22 = phi i32 [ 0, %16 ], [ %13, %2 ]
  %23 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 %22, i32* %5, align 4
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 6, i32* %6, align 4
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp eq i32 %22, 6
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %30, align 8
  br label %36

31:                                               ; preds = %21
  %32 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %25, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %33 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %26, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i8* %32, i8* %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %29, %31
  %37 = phi i8* [ %35, %31 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %37, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 575, %"class.logging::CheckOpResult"* nonnull %4) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 2
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 2
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %42
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %148

51:                                               ; preds = %46
  %52 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #9
  %53 = load i32, i32* %43, align 4
  %54 = add nsw i32 %53, 1
  %55 = sdiv i32 %54, 2
  %56 = load i32, i32* %47, align 4
  %57 = add nsw i32 %56, 1
  %58 = sdiv i32 %57, 2
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %8, i32 %55, i32 %58, i1 zeroext false) #9
  %59 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = load i32, i32* %43, align 4
  %62 = add nsw i32 %61, -1
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 2, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %72

66:                                               ; preds = %51
  %67 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %68 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %69 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %70 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 1
  %71 = icmp sgt i32 %60, 0
  br label %73

72:                                               ; preds = %101, %51
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %8) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #9
  br label %148

73:                                               ; preds = %66, %101
  %74 = phi i32 [ %64, %66 ], [ %102, %101 ]
  %75 = phi i64 [ 0, %66 ], [ %103, %101 ]
  %76 = load i8*, i8** %67, align 8
  %77 = shl i64 %75, 33
  %78 = ashr exact i64 %77, 32
  %79 = load i64, i64* %68, align 8
  %80 = mul i64 %79, %78
  %81 = getelementptr inbounds i8, i8* %76, i64 %80
  %82 = bitcast i8* %81 to i32*
  %83 = trunc i64 %75 to i32
  %84 = shl i32 %83, 1
  %85 = or i32 %84, 1
  br i1 %71, label %86, label %101

86:                                               ; preds = %73
  %87 = load i8*, i8** %69, align 8
  %88 = load i64, i64* %70, align 8
  %89 = mul i64 %88, %75
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %47, align 4
  %93 = icmp slt i32 %85, %92
  %94 = sext i32 %85 to i64
  %95 = mul i64 %79, %94
  %96 = getelementptr inbounds i8, i8* %76, i64 %95
  %97 = bitcast i8* %96 to i32*
  %98 = select i1 %93, i32* %97, i32* %82
  br label %106

99:                                               ; preds = %106
  %100 = load i32, i32* %63, align 4
  br label %101

101:                                              ; preds = %99, %73
  %102 = phi i32 [ %100, %99 ], [ %74, %73 ]
  %103 = add nuw nsw i64 %75, 1
  %104 = sext i32 %102 to i64
  %105 = icmp slt i64 %103, %104
  br i1 %105, label %73, label %72

106:                                              ; preds = %106, %86
  %107 = phi i32 [ %146, %106 ], [ 0, %86 ]
  %108 = phi i32* [ %143, %106 ], [ %91, %86 ]
  %109 = phi i32* [ %145, %106 ], [ %98, %86 ]
  %110 = phi i32* [ %144, %106 ], [ %82, %86 ]
  %111 = shl nuw i32 %107, 1
  %112 = icmp slt i32 %111, %62
  %113 = load i32, i32* %110, align 4
  %114 = lshr i32 %113, 8
  %115 = and i32 %114, 16711935
  %116 = and i32 %113, 16711935
  %117 = zext i1 %112 to i64
  %118 = getelementptr inbounds i32, i32* %110, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = lshr i32 %119, 8
  %121 = and i32 %120, 16711935
  %122 = add nuw nsw i32 %121, %115
  %123 = and i32 %119, 16711935
  %124 = add nuw nsw i32 %123, %116
  %125 = load i32, i32* %109, align 4
  %126 = lshr i32 %125, 8
  %127 = and i32 %126, 16711935
  %128 = add nuw nsw i32 %122, %127
  %129 = and i32 %125, 16711935
  %130 = add nuw nsw i32 %124, %129
  %131 = getelementptr inbounds i32, i32* %109, i64 %117
  %132 = load i32, i32* %131, align 4
  %133 = lshr i32 %132, 8
  %134 = and i32 %133, 16711935
  %135 = add nuw nsw i32 %128, %134
  %136 = and i32 %132, 16711935
  %137 = add nuw nsw i32 %130, %136
  %138 = lshr i32 %137, 2
  %139 = and i32 %138, 16711935
  %140 = shl i32 %135, 6
  %141 = and i32 %140, -16711936
  %142 = or i32 %141, %139
  %143 = getelementptr inbounds i32, i32* %108, i64 1
  store i32 %142, i32* %108, align 4
  %144 = getelementptr inbounds i32, i32* %110, i64 2
  %145 = getelementptr inbounds i32, i32* %109, i64 2
  %146 = add nuw nsw i32 %107, 1
  %147 = icmp eq i32 %146, %60
  br i1 %147, label %99, label %106

148:                                              ; preds = %72, %50, %20
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations13UnPreMultiplyERK8SkBitmap(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %11 = load %class.SkPixelRef*, %class.SkPixelRef** %10, align 8
  %12 = icmp eq %class.SkPixelRef* %11, null
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = and i1 %12, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %128

22:                                               ; preds = %2, %17
  %23 = phi i32 [ 0, %17 ], [ %14, %2 ]
  %24 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  %27 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  store i32 %23, i32* %5, align 4
  %28 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #9
  store i32 6, i32* %6, align 4
  %29 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp eq i32 %23, 6
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %32, align 8
  br label %38

33:                                               ; preds = %22
  %34 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %26, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %35 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %31, %33
  %39 = phi i8* [ %37, %33 ], [ null, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %39, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  %40 = icmp eq i8* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 642, %"class.logging::CheckOpResult"* nonnull %4) #9
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  br label %44

44:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %45 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %128

49:                                               ; preds = %44
  %50 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #9
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1
  %52 = bitcast %struct.SkISize* %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !2
  %54 = load i32, i32* %27, align 8, !noalias !5
  %55 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0
  %56 = load %class.SkColorSpace*, %class.SkColorSpace** %55, align 8, !noalias !8
  %57 = icmp eq %class.SkColorSpace* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 1 monotonic, !noalias !8
  br label %61

61:                                               ; preds = %49, %58
  %62 = ptrtoint %class.SkColorSpace* %56 to i64
  %63 = zext i32 %54 to i64
  %64 = or i64 %63, 12884901888
  %65 = bitcast %struct.SkImageInfo* %8 to i64*
  store i64 %62, i64* %65, align 8, !alias.scope !11
  %66 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %67 = bitcast i32* %66 to i64*
  store i64 %64, i64* %67, align 8, !alias.scope !11
  %68 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 1
  %69 = bitcast %struct.SkISize* %68 to i64*
  store i64 %53, i64* %69, align 8, !alias.scope !11
  %70 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #9
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %9, %struct.SkImageInfo* nonnull dereferenceable(24) %8) #9
  %71 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 2, i32 1, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %61
  %75 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 2, i32 1, i32 0
  %76 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %77 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %78 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 1
  %80 = load i32, i32* %75, align 8
  br label %81

81:                                               ; preds = %74, %99
  %82 = phi i32 [ %72, %74 ], [ %100, %99 ]
  %83 = phi i32 [ %80, %74 ], [ %101, %99 ]
  %84 = phi i64 [ 0, %74 ], [ %102, %99 ]
  %85 = icmp sgt i32 %83, 0
  br i1 %85, label %105, label %99

86:                                               ; preds = %99, %61
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %9) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %70) #9
  %87 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %88 = load %class.SkColorSpace*, %class.SkColorSpace** %87, align 8
  %89 = icmp eq %class.SkColorSpace* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = bitcast %class.SkColorSpace* %88 to i8*
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %86, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #9
  br label %128

97:                                               ; preds = %105
  %98 = load i32, i32* %71, align 4
  br label %99

99:                                               ; preds = %97, %81
  %100 = phi i32 [ %98, %97 ], [ %82, %81 ]
  %101 = phi i32 [ %125, %97 ], [ %83, %81 ]
  %102 = add nuw nsw i64 %84, 1
  %103 = sext i32 %100 to i64
  %104 = icmp slt i64 %102, %103
  br i1 %104, label %81, label %86

105:                                              ; preds = %81, %105
  %106 = phi i64 [ %124, %105 ], [ 0, %81 ]
  %107 = load i8*, i8** %76, align 8
  %108 = load i64, i64* %77, align 8
  %109 = mul i64 %108, %84
  %110 = getelementptr inbounds i8, i8* %107, i64 %109
  %111 = trunc i64 %106 to i32
  %112 = shl i32 %111, 2
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %110, i64 %113
  %115 = bitcast i8* %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = load i8*, i8** %78, align 8
  %118 = load i64, i64* %79, align 8
  %119 = mul i64 %118, %84
  %120 = getelementptr inbounds i8, i8* %117, i64 %119
  %121 = getelementptr inbounds i8, i8* %120, i64 %113
  %122 = bitcast i8* %121 to i32*
  %123 = call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %116) #9
  store i32 %123, i32* %122, align 4
  %124 = add nuw nsw i64 %106, 1
  %125 = load i32, i32* %75, align 8
  %126 = sext i32 %125 to i64
  %127 = icmp slt i64 %124, %126
  br i1 %127, label %105, label %97

128:                                              ; preds = %96, %48, %21
  ret void
}

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations22CreateTransposedBitmapERK8SkBitmap(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %class.SkBitmap, align 8
  %9 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %10 = load %class.SkPixelRef*, %class.SkPixelRef** %9, align 8
  %11 = icmp eq %class.SkPixelRef* %10, null
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %11, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %16
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %93

21:                                               ; preds = %2, %16
  %22 = phi i32 [ 0, %16 ], [ %13, %2 ]
  %23 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %24, align 8
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  store i32 %22, i32* %5, align 4
  %26 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #9
  store i32 6, i32* %6, align 4
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp eq i32 %22, 6
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* null, i8** %30, align 8
  br label %36

31:                                               ; preds = %21
  %32 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %25, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %33 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %26, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i8* %32, i8* %33) #9
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %29, %31
  %37 = phi i8* [ %35, %31 ], [ null, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %37, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 668, %"class.logging::CheckOpResult"* nonnull %4) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %43 = bitcast %class.SkBitmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %43) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %8) #9
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %8, i32 %45, i32 %47, i1 zeroext false) #9
  %48 = load i32, i32* %44, align 4
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %42
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 1
  %53 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 0, i32 1, i32 1
  %55 = load i32, i32* %46, align 4
  br label %57

56:                                               ; preds = %73, %42
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %8) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %43) #9
  br label %93

57:                                               ; preds = %50, %73
  %58 = phi i32 [ %48, %50 ], [ %74, %73 ]
  %59 = phi i32 [ %55, %50 ], [ %75, %73 ]
  %60 = phi i64 [ 0, %50 ], [ %76, %73 ]
  %61 = load i8*, i8** %51, align 8
  %62 = load i64, i64* %52, align 8
  %63 = mul i64 %62, %60
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = bitcast i8* %64 to i32*
  %66 = icmp sgt i32 %59, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %57
  %68 = trunc i64 %60 to i32
  %69 = shl i32 %68, 2
  %70 = sext i32 %69 to i64
  br label %79

71:                                               ; preds = %79
  %72 = load i32, i32* %44, align 4
  br label %73

73:                                               ; preds = %71, %57
  %74 = phi i32 [ %72, %71 ], [ %58, %57 ]
  %75 = phi i32 [ %90, %71 ], [ %59, %57 ]
  %76 = add nuw nsw i64 %60, 1
  %77 = sext i32 %74 to i64
  %78 = icmp slt i64 %76, %77
  br i1 %78, label %57, label %56

79:                                               ; preds = %67, %79
  %80 = phi i64 [ 0, %67 ], [ %89, %79 ]
  %81 = load i8*, i8** %53, align 8
  %82 = load i64, i64* %54, align 8
  %83 = mul i64 %82, %80
  %84 = getelementptr inbounds i8, i8* %81, i64 %70
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = bitcast i8* %85 to i32*
  %87 = getelementptr inbounds i32, i32* %65, i64 %80
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %86, align 4
  %89 = add nuw nsw i64 %80, 1
  %90 = load i32, i32* %46, align 4
  %91 = sext i32 %90 to i64
  %92 = icmp slt i64 %89, %91
  br i1 %92, label %79, label %71

93:                                               ; preds = %56, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations15CreateColorMaskERK8SkBitmapj(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %class.SkCanvas, align 8
  %10 = alloca %class.SkSurfaceProps, align 4
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca %class.sk_sp.20, align 8
  %13 = alloca %class.sk_sp.22, align 8
  %14 = alloca %struct.SkSamplingOptions, align 4
  %15 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %6, align 4
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 6, i32* %7, align 4
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp eq i32 %19, 6
  br i1 %22, label %23, label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* null, i8** %24, align 8
  br label %30

25:                                               ; preds = %3
  %26 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %27 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %20, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i8* %26, i8* %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %23, %25
  %31 = phi i8* [ %29, %25 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %31, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 687, %"class.logging::CheckOpResult"* nonnull %5) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %37 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #9
  %38 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %41 = load i32, i32* %40, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %0, i32 %39, i32 %41, i1 zeroext false) #9
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* %0, i32 0) #9
  %42 = bitcast %class.SkCanvas* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %42) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" }* @__const._ZN18SkBitmapOperations6RotateERK8SkBitmapNS_14RotationAmountE.canvas to i8*), i64 3232, i1 false)
  %43 = bitcast %class.SkSurfaceProps* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %10) #9
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %9, %class.SkBitmap* dereferenceable(56) %0, %class.SkSurfaceProps* nonnull dereferenceable(8) %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  %44 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %44) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 bitcast (%class.SkPaint* @__const._ZN18SkBitmapOperations16CreateDropShadowERK8SkBitmapRKNSt3__16vectorIN3gfx11ShadowValueENS3_9allocatorIS6_EEEE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #9
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.20* nonnull sret %12, i32 %2, i32 5) #9
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* nonnull %11, %class.sk_sp.20* nonnull %12) #9
  %45 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %12, i64 0, i32 0
  %46 = load %class.SkColorFilter*, %class.SkColorFilter** %45, align 8
  %47 = icmp eq %class.SkColorFilter* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %46, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkColorFilter* %46 to %class.SkRefCntBase*
  %54 = bitcast %class.SkColorFilter* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  call void %57(%class.SkRefCntBase* nonnull %53) #9
  br label %58

58:                                               ; preds = %36, %48, %52
  %59 = bitcast %class.sk_sp.22* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.22* nonnull sret %13, %class.SkBitmap* %1) #9
  %60 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %60) #9
  %61 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %13, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %60, i8 0, i64 20, i1 false)
  %62 = load %class.SkImage*, %class.SkImage** %61, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %9, %class.SkImage* %62, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %14, %class.SkPaint* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %60) #9
  %63 = load %class.SkImage*, %class.SkImage** %61, align 8
  %64 = icmp eq %class.SkImage* %63, null
  br i1 %64, label %75, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %class.SkImage, %class.SkImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = bitcast %class.SkImage* %63 to %class.SkRefCntBase*
  %71 = bitcast %class.SkImage* %63 to void (%class.SkRefCntBase*)***
  %72 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, i64 2
  %74 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, align 8
  call void %74(%class.SkRefCntBase* nonnull %70) #9
  br label %75

75:                                               ; preds = %58, %65, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %44) #9
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %42) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.20*) local_unnamed_addr #1

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.20* sret, i32, i32) local_unnamed_addr #1

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.22* sret, %class.SkBitmap*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkCanvasD1Ev(%class.SkCanvas*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations16CreateDropShadowERK8SkBitmapRKNSt3__16vectorIN3gfx11ShadowValueENS3_9allocatorIS6_EEEE(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkSamplingOptions, align 4
  %5 = alloca %class.sk_sp.21, align 8
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Insets"*
  %14 = alloca %class.SkCanvas, align 8
  %15 = alloca %class.SkSurfaceProps, align 4
  %16 = alloca %class.SkPaint, align 8
  %17 = alloca %class.SkBitmap, align 8
  %18 = alloca %class.sk_sp.21, align 8
  %19 = alloca %"struct.SkImageFilters::CropRect", align 4
  %20 = alloca %class.sk_sp.22, align 8
  %21 = alloca %class.sk_sp.22, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #9
  %25 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  store i32 %26, i32* %9, align 4
  %27 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #9
  store i32 6, i32* %10, align 4
  %28 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = icmp eq i32 %26, 6
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* null, i8** %31, align 8
  br label %37

32:                                               ; preds = %3
  %33 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %24, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %34 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %27, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.11, i64 0, i64 0), i8* %33, i8* %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %30, %32
  %38 = phi i8* [ %36, %32 ], [ null, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* %38, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #9
  %39 = icmp eq i8* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 705, %"class.logging::CheckOpResult"* nonnull %8) #9
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %43

43:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %44 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  %45 = call { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24) %2) #9
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %47 = extractvalue { i64, i64 } %45, 0
  store i64 %47, i64* %46, align 8
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %49 = extractvalue { i64, i64 } %45, 1
  store i64 %49, i64* %48, align 8
  %50 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %13)
  %51 = extractvalue { i64, i64 } %50, 0
  %52 = trunc i64 %51 to i32
  %53 = lshr i64 %51, 32
  %54 = trunc i64 %53 to i32
  %55 = extractvalue { i64, i64 } %50, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  %56 = bitcast %class.SkBitmap* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %0) #9
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = lshr i64 %55, 32
  %60 = trunc i64 %59 to i32
  %61 = add nsw i32 %60, %54
  %62 = add nsw i32 %61, %58
  %63 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = trunc i64 %55 to i32
  %66 = add nsw i32 %65, %52
  %67 = add nsw i32 %66, %64
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* %0, i32 %62, i32 %67, i1 zeroext false) #9
  call void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap* %0, i32 0) #9
  %68 = bitcast %class.SkCanvas* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %68) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" }* @__const._ZN18SkBitmapOperations6RotateERK8SkBitmapNS_14RotationAmountE.canvas to i8*), i64 3232, i1 false)
  %69 = bitcast %class.SkSurfaceProps* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #9
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %15) #9
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %14, %class.SkBitmap* dereferenceable(56) %0, %class.SkSurfaceProps* nonnull dereferenceable(8) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #9
  %70 = sitofp i32 %54 to float
  %71 = sitofp i32 %52 to float
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %14, float %70, float %71) #9
  %72 = bitcast %class.SkPaint* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %72) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 bitcast (%class.SkPaint* @__const._ZN18SkBitmapOperations16CreateDropShadowERK8SkBitmapRKNSt3__16vectorIN3gfx11ShadowValueENS3_9allocatorIS6_EEEE.paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %16) #9
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %74 = bitcast %"class.gfx::ShadowValue"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector"* %2 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %75, %77
  br i1 %78, label %89, label %79

79:                                               ; preds = %43
  %80 = bitcast %class.SkBitmap* %17 to i8*
  %81 = bitcast %"struct.SkImageFilters::CropRect"* %19 to i8*
  %82 = bitcast %class.sk_sp.21* %5 to i8*
  %83 = bitcast %class.sk_sp.21* %5 to i64*
  %84 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %5, i64 0, i32 0
  %85 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %18, i64 0, i32 0
  %86 = bitcast %class.sk_sp.22* %20 to i8*
  %87 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %20, i64 0, i32 0
  %88 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  br label %107

89:                                               ; preds = %163, %43
  %90 = bitcast %class.sk_sp.22* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.22* nonnull sret %21, %class.SkBitmap* %1) #9
  %91 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %21, i64 0, i32 0
  %92 = load %class.SkImage*, %class.SkImage** %91, align 8
  %93 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %93) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %93, i8 0, i64 20, i1 false) #9
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %14, %class.SkImage* %92, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %4, %class.SkPaint* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %93) #9
  %94 = load %class.SkImage*, %class.SkImage** %91, align 8
  %95 = icmp eq %class.SkImage* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %class.SkImage, %class.SkImage* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %class.SkImage* %94 to %class.SkRefCntBase*
  %102 = bitcast %class.SkImage* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #9
  br label %106

106:                                              ; preds = %89, %96, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %16) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %72) #9
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %68) #9
  ret void

107:                                              ; preds = %79, %163
  %108 = phi i64 [ %77, %79 ], [ %166, %163 ]
  %109 = phi i64 [ 0, %79 ], [ %164, %163 ]
  %110 = inttoptr i64 %108 to %"class.gfx::ShadowValue"*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %80) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 56, i1 false)
  %111 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %110, i64 %109, i32 2
  %112 = load i32, i32* %111, align 8
  call void @_ZN18SkBitmapOperations15CreateColorMaskERK8SkBitmapj(%class.SkBitmap* nonnull sret %17, %class.SkBitmap* dereferenceable(56) %1, i32 %112)
  %113 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %110, i64 %109, i32 1
  %114 = load double, double* %113, align 8
  %115 = fmul double %114, 5.000000e-01
  %116 = fptrunc double %115 to float
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %81, i8* align 4 bitcast (%struct.SkRect* @_ZN4skifL11kNoCropRectE to i8*), i64 16, i1 false) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  store i64 0, i64* %83, align 8, !noalias !14
  call void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp.21* nonnull sret %18, float %116, float %116, i32 3, %class.sk_sp.21* nonnull %5, %"struct.SkImageFilters::CropRect"* nonnull dereferenceable(16) %19) #9
  %117 = load %class.SkImageFilter*, %class.SkImageFilter** %84, align 8, !noalias !14
  %118 = icmp eq %class.SkImageFilter* %117, null
  br i1 %118, label %129, label %119

119:                                              ; preds = %107
  %120 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %117, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = atomicrmw add i32* %120, i32 -1 acq_rel
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = bitcast %class.SkImageFilter* %117 to %class.SkRefCntBase*
  %125 = bitcast %class.SkImageFilter* %117 to void (%class.SkRefCntBase*)***
  %126 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %125, align 8
  %127 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, i64 2
  %128 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, align 8
  call void %128(%class.SkRefCntBase* nonnull %124) #9
  br label %129

129:                                              ; preds = %107, %119, %123
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  call void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint* nonnull %16, %class.sk_sp.21* nonnull %18) #9
  %130 = load %class.SkImageFilter*, %class.SkImageFilter** %85, align 8
  %131 = icmp eq %class.SkImageFilter* %130, null
  br i1 %131, label %142, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %class.SkImageFilter, %class.SkImageFilter* %130, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 -1 acq_rel
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %142

136:                                              ; preds = %132
  %137 = bitcast %class.SkImageFilter* %130 to %class.SkRefCntBase*
  %138 = bitcast %class.SkImageFilter* %130 to void (%class.SkRefCntBase*)***
  %139 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %138, align 8
  %140 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, i64 2
  %141 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %140, align 8
  call void %141(%class.SkRefCntBase* nonnull %137) #9
  br label %142

142:                                              ; preds = %136, %132, %129
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  %143 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* nonnull %14, %struct.SkRect* null, %class.SkPaint* nonnull %16) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.22* nonnull sret %20, %class.SkBitmap* nonnull %17) #9
  %144 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %110, i64 %109, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = sitofp i32 %145 to float
  %147 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %110, i64 %109, i32 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = sitofp i32 %148 to float
  %150 = load %class.SkImage*, %class.SkImage** %87, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %88) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %88, i8 0, i64 20, i1 false) #9
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %14, %class.SkImage* %150, float %146, float %149, %struct.SkSamplingOptions* nonnull dereferenceable(20) %6, %class.SkPaint* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %88) #9
  %151 = load %class.SkImage*, %class.SkImage** %87, align 8
  %152 = icmp eq %class.SkImage* %151, null
  br i1 %152, label %163, label %153

153:                                              ; preds = %142
  %154 = getelementptr inbounds %class.SkImage, %class.SkImage* %151, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 -1 acq_rel
  %156 = icmp eq i32 %155, 1
  br i1 %156, label %157, label %163

157:                                              ; preds = %153
  %158 = bitcast %class.SkImage* %151 to %class.SkRefCntBase*
  %159 = bitcast %class.SkImage* %151 to void (%class.SkRefCntBase*)***
  %160 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %159, align 8
  %161 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %160, i64 2
  %162 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, align 8
  call void %162(%class.SkRefCntBase* nonnull %158) #9
  br label %163

163:                                              ; preds = %142, %153, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #9
  call void @_ZN8SkCanvas7restoreEv(%class.SkCanvas* nonnull %14) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %17) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %80) #9
  %164 = add nuw i64 %109, 1
  %165 = load i64, i64* %74, align 8
  %166 = load i64, i64* %76, align 8
  %167 = sub i64 %165, %166
  %168 = sdiv exact i64 %167, 24
  %169 = icmp ult i64 %164, %168
  br i1 %169, label %107, label %89
}

declare { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i1 @llvm.is.constant.i32(i32 %3) #9
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sub i32 0, %3
  %7 = icmp eq i32 %6, -2147483648
  %8 = select i1 %7, i32 2147483647, i32 %6
  br label %14

9:                                                ; preds = %1
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %3) #9
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 2147483647, i32 %12
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i32 [ %8, %5 ], [ %13, %9 ]
  %16 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = tail call i1 @llvm.is.constant.i32(i32 %17) #9
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = sub i32 0, %17
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %14
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %17) #9
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i1 @llvm.is.constant.i32(i32 %31) #9
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = sub i32 0, %31
  %35 = icmp eq i32 %34, -2147483648
  %36 = select i1 %35, i32 2147483647, i32 %34
  br label %42

37:                                               ; preds = %28
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %31) #9
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 2147483647, i32 %40
  br label %42

42:                                               ; preds = %33, %37
  %43 = phi i32 [ %36, %33 ], [ %41, %37 ]
  %44 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = tail call i1 @llvm.is.constant.i32(i32 %45) #9
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = sub i32 0, %45
  %49 = icmp eq i32 %48, -2147483648
  %50 = select i1 %49, i32 2147483647, i32 %48
  br label %56

51:                                               ; preds = %42
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %45) #9
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 2147483647, i32 %54
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi i32 [ %50, %47 ], [ %55, %51 ]
  %58 = icmp sgt i32 %15, 0
  %59 = icmp sgt i32 %43, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %15
  %62 = icmp ult i32 %61, %43
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %56
  %65 = and i32 %43, %15
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %15
  %68 = icmp sgt i32 %67, %43
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %43
  br label %71

71:                                               ; preds = %64, %56
  %72 = phi i32 [ %70, %64 ], [ %61, %56 ]
  %73 = icmp sgt i32 %29, 0
  %74 = icmp sgt i32 %57, 0
  %75 = and i1 %73, %74
  %76 = sub nuw nsw i32 2147483647, %29
  %77 = icmp ult i32 %76, %57
  %78 = and i1 %77, %75
  br i1 %78, label %86, label %79

79:                                               ; preds = %71
  %80 = and i32 %57, %29
  %81 = icmp slt i32 %80, 0
  %82 = sub nsw i32 -2147483648, %29
  %83 = icmp sgt i32 %82, %57
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %57
  br label %86

86:                                               ; preds = %71, %79
  %87 = phi i32 [ %85, %79 ], [ %76, %71 ]
  %88 = zext i32 %29 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %15 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } undef, i64 %91, 0
  %93 = zext i32 %87 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %72 to i64
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } %92, i64 %96, 1
  ret { i64, i64 } %97
}

declare void @_ZN8SkCanvas9translateEff(%class.SkCanvas*, float, float) local_unnamed_addr #1

declare void @_ZN7SkPaint14setImageFilterE5sk_spI13SkImageFilterE(%class.SkPaint*, %class.sk_sp.21*) local_unnamed_addr #1

declare i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN8SkCanvas7restoreEv(%class.SkCanvas*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SkBitmapOperations6RotateERK8SkBitmapNS_14RotationAmountE(%class.SkBitmap* noalias sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %struct.SkSamplingOptions, align 4
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %class.SkBitmap, align 8
  %12 = alloca %class.SkCanvas, align 8
  %13 = alloca %class.SkSurfaceProps, align 4
  %14 = alloca %class.sk_sp.22, align 8
  %15 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 0, i32 0
  %16 = load %class.SkPixelRef*, %class.SkPixelRef** %15, align 8
  %17 = icmp eq %class.SkPixelRef* %16, null
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %21 = and i1 %17, %20
  br i1 %21, label %22, label %27

22:                                               ; preds = %3
  %23 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %0, %class.SkBitmap* dereferenceable(56) %1) #9
  br label %109

27:                                               ; preds = %3, %22
  %28 = phi i32 [ 0, %22 ], [ %19, %3 ]
  %29 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %30, align 8
  %31 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #9
  store i32 %28, i32* %8, align 4
  %32 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #9
  store i32 6, i32* %9, align 4
  %33 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = icmp eq i32 %28, 6
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* null, i8** %36, align 8
  br label %42

37:                                               ; preds = %27
  %38 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %31, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  %39 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %32, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i8* %38, i8* %39) #9
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %35, %37
  %43 = phi i8* [ %41, %37 ], [ null, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  store i8* %43, i8** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #9
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 747, %"class.logging::CheckOpResult"* nonnull %7) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  %49 = bitcast %class.SkBitmap* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %49) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %11) #9
  switch i32 %2, label %65 [
    i32 0, label %50
    i32 1, label %53
    i32 2, label %56
  ]

50:                                               ; preds = %48
  %51 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %52 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  br label %59

53:                                               ; preds = %48
  %54 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %55 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  br label %59

56:                                               ; preds = %48
  %57 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %58 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  br label %59

59:                                               ; preds = %50, %53, %56
  %60 = phi i32* [ %58, %56 ], [ %55, %53 ], [ %52, %50 ]
  %61 = phi i32* [ %57, %56 ], [ %54, %53 ], [ %51, %50 ]
  %62 = phi float [ 2.700000e+02, %56 ], [ 1.800000e+02, %53 ], [ 9.000000e+01, %50 ]
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %60, align 4
  call void @_ZN8SkBitmap14allocN32PixelsEiib(%class.SkBitmap* nonnull %11, i32 %63, i32 %64, i1 zeroext false) #9
  br label %65

65:                                               ; preds = %59, %48
  %66 = phi float [ 0.000000e+00, %48 ], [ %62, %59 ]
  %67 = bitcast %class.SkCanvas* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 3232, i8* nonnull %67) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 8 bitcast ({ i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.8, [384 x i64], %class.sk_sp.9, %class.SkSurfaceProps, i32, [4 x i8], %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.11" }* @__const._ZN18SkBitmapOperations6RotateERK8SkBitmapNS_14RotationAmountE.canvas to i8*), i64 3232, i1 false)
  %68 = bitcast %class.SkSurfaceProps* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %13) #9
  call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %12, %class.SkBitmap* nonnull dereferenceable(56) %11, %class.SkSurfaceProps* nonnull dereferenceable(8) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  %69 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f*
  %70 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  %71 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #9
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %73 = extractvalue { <2 x float>, <2 x float> } %71, 0
  store <2 x float> %73, <2 x float>* %72, align 8
  %74 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %75 = extractvalue { <2 x float>, <2 x float> } %71, 1
  store <2 x float> %75, <2 x float>* %74, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* nonnull %12, %struct.SkRGBA4f* nonnull dereferenceable(16) %69, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  %76 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 2, i32 1, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = sitofp i32 %77 to float
  %79 = fmul float %78, 5.000000e-01
  %80 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %11, i64 0, i32 1, i32 2, i32 1, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  %83 = fmul float %82, 5.000000e-01
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %12, float %79, float %83) #9
  call void @_ZN8SkCanvas6rotateEf(%class.SkCanvas* nonnull %12, float %66) #9
  %84 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  %87 = fmul float %86, -5.000000e-01
  %88 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %1, i64 0, i32 1, i32 2, i32 1, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sitofp i32 %89 to float
  %91 = fmul float %90, -5.000000e-01
  call void @_ZN8SkCanvas9translateEff(%class.SkCanvas* nonnull %12, float %87, float %91) #9
  %92 = bitcast %class.sk_sp.22* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #9
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.22* nonnull sret %14, %class.SkBitmap* %1) #9
  %93 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %14, i64 0, i32 0
  %94 = load %class.SkImage*, %class.SkImage** %93, align 8
  %95 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %95) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %95, i8 0, i64 20, i1 false) #9
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* nonnull %12, %class.SkImage* %94, float 0.000000e+00, float 0.000000e+00, %struct.SkSamplingOptions* nonnull dereferenceable(20) %6, %class.SkPaint* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %95) #9
  %96 = load %class.SkImage*, %class.SkImage** %93, align 8
  %97 = icmp eq %class.SkImage* %96, null
  br i1 %97, label %108, label %98

98:                                               ; preds = %65
  %99 = getelementptr inbounds %class.SkImage, %class.SkImage* %96, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %class.SkImage* %96 to %class.SkRefCntBase*
  %104 = bitcast %class.SkImage* %96 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #9
  br label %108

108:                                              ; preds = %65, %98, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #9
  call void @_ZN8SkCanvas5flushEv(%class.SkCanvas* nonnull %12) #9
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %0, %class.SkBitmap* nonnull dereferenceable(56) %11) #9
  call void @_ZN8SkCanvasD1Ev(%class.SkCanvas* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 3232, i8* nonnull %67) #9
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %49) #9
  br label %109

109:                                              ; preds = %108, %26
  ret void
}

declare void @_ZN8SkCanvas6rotateEf(%class.SkCanvas*, float) local_unnamed_addr #1

declare void @_ZN8SkCanvas5flushEv(%class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrI11SkColorTypeEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS2_14remove_pointerIS4_E4typeEEE5valueEPcE4typeES6_ENUlRNS2_13basic_ostreamIcNS2_11char_traitsIcEEEEPKvE_8__invokeESH_SJ_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift12LineProcCopyERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readnone dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #0 {
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = sext i32 %3 to i64
  %8 = shl nsw i64 %7, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 %8, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSnopLdecERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readonly dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #5 {
  %5 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 2
  %6 = load double, double* %5, align 8
  %7 = fmul double %6, 2.000000e+00
  %8 = fmul double %7, 6.553600e+04
  %9 = fptoui double %8 to i32
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %53

11:                                               ; preds = %4
  %12 = zext i32 %3 to i64
  %13 = icmp ult i32 %3, 4
  br i1 %13, label %14, label %16

14:                                               ; preds = %51, %16, %11
  %15 = phi i64 [ 0, %16 ], [ 0, %11 ], [ %23, %51 ]
  br label %54

16:                                               ; preds = %11
  %17 = getelementptr i32, i32* %2, i64 %12
  %18 = getelementptr i32, i32* %1, i64 %12
  %19 = icmp ugt i32* %18, %2
  %20 = icmp ugt i32* %17, %1
  %21 = and i1 %19, %20
  br i1 %21, label %14, label %22

22:                                               ; preds = %16
  %23 = and i64 %12, 4294967292
  %24 = insertelement <4 x i32> undef, i32 %9, i32 0
  %25 = shufflevector <4 x i32> %24, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %26

26:                                               ; preds = %26, %22
  %27 = phi i64 [ 0, %22 ], [ %49, %26 ]
  %28 = getelementptr inbounds i32, i32* %1, i64 %27
  %29 = bitcast i32* %28 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 4, !alias.scope !17
  %31 = and <4 x i32> %30, <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>
  %32 = lshr <4 x i32> %30, <i32 16, i32 16, i32 16, i32 16>
  %33 = and <4 x i32> %32, <i32 255, i32 255, i32 255, i32 255>
  %34 = lshr <4 x i32> %30, <i32 8, i32 8, i32 8, i32 8>
  %35 = and <4 x i32> %34, <i32 255, i32 255, i32 255, i32 255>
  %36 = and <4 x i32> %30, <i32 255, i32 255, i32 255, i32 255>
  %37 = mul <4 x i32> %33, %25
  %38 = and <4 x i32> %37, <i32 -65536, i32 -65536, i32 -65536, i32 -65536>
  %39 = mul <4 x i32> %35, %25
  %40 = lshr <4 x i32> %39, <i32 16, i32 16, i32 16, i32 16>
  %41 = mul <4 x i32> %36, %25
  %42 = lshr <4 x i32> %41, <i32 16, i32 16, i32 16, i32 16>
  %43 = shl nuw nsw <4 x i32> %40, <i32 8, i32 8, i32 8, i32 8>
  %44 = or <4 x i32> %42, %31
  %45 = or <4 x i32> %44, %38
  %46 = or <4 x i32> %45, %43
  %47 = getelementptr inbounds i32, i32* %2, i64 %27
  %48 = bitcast i32* %47 to <4 x i32>*
  store <4 x i32> %46, <4 x i32>* %48, align 4, !alias.scope !20, !noalias !17
  %49 = add i64 %27, 4
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %51, label %26, !llvm.loop !22

51:                                               ; preds = %26
  %52 = icmp eq i64 %23, %12
  br i1 %52, label %53, label %14

53:                                               ; preds = %54, %51, %4
  ret void

54:                                               ; preds = %14, %54
  %55 = phi i64 [ %75, %54 ], [ %15, %14 ]
  %56 = getelementptr inbounds i32, i32* %1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = and i32 %57, -16777216
  %59 = lshr i32 %57, 16
  %60 = and i32 %59, 255
  %61 = lshr i32 %57, 8
  %62 = and i32 %61, 255
  %63 = and i32 %57, 255
  %64 = mul i32 %60, %9
  %65 = and i32 %64, -65536
  %66 = mul i32 %62, %9
  %67 = lshr i32 %66, 16
  %68 = mul i32 %63, %9
  %69 = lshr i32 %68, 16
  %70 = shl nuw nsw i32 %67, 8
  %71 = or i32 %69, %58
  %72 = or i32 %71, %65
  %73 = or i32 %72, %70
  %74 = getelementptr inbounds i32, i32* %2, i64 %55
  store i32 %73, i32* %74, align 4
  %75 = add nuw nsw i64 %55, 1
  %76 = icmp eq i64 %75, %12
  br i1 %76, label %53, label %54, !llvm.loop !24
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSnopLincERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readonly dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #5 {
  %5 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 2
  %6 = load double, double* %5, align 8
  %7 = fadd double %6, -5.000000e-01
  %8 = fmul double %7, 2.000000e+00
  %9 = fmul double %8, 6.553600e+04
  %10 = fptoui double %9 to i32
  %11 = icmp sgt i32 %3, 0
  br i1 %11, label %12, label %62

12:                                               ; preds = %4
  %13 = zext i32 %3 to i64
  %14 = icmp ult i32 %3, 4
  br i1 %14, label %15, label %17

15:                                               ; preds = %60, %17, %12
  %16 = phi i64 [ 0, %17 ], [ 0, %12 ], [ %24, %60 ]
  br label %63

17:                                               ; preds = %12
  %18 = getelementptr i32, i32* %2, i64 %13
  %19 = getelementptr i32, i32* %1, i64 %13
  %20 = icmp ugt i32* %19, %2
  %21 = icmp ugt i32* %18, %1
  %22 = and i1 %20, %21
  br i1 %22, label %15, label %23

23:                                               ; preds = %17
  %24 = and i64 %13, 4294967292
  %25 = insertelement <4 x i32> undef, i32 %10, i32 0
  %26 = shufflevector <4 x i32> %25, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %27

27:                                               ; preds = %27, %23
  %28 = phi i64 [ 0, %23 ], [ %58, %27 ]
  %29 = getelementptr inbounds i32, i32* %1, i64 %28
  %30 = bitcast i32* %29 to <4 x i32>*
  %31 = load <4 x i32>, <4 x i32>* %30, align 4, !alias.scope !25
  %32 = lshr <4 x i32> %31, <i32 24, i32 24, i32 24, i32 24>
  %33 = lshr <4 x i32> %31, <i32 16, i32 16, i32 16, i32 16>
  %34 = and <4 x i32> %33, <i32 255, i32 255, i32 255, i32 255>
  %35 = lshr <4 x i32> %31, <i32 8, i32 8, i32 8, i32 8>
  %36 = and <4 x i32> %35, <i32 255, i32 255, i32 255, i32 255>
  %37 = and <4 x i32> %31, <i32 255, i32 255, i32 255, i32 255>
  %38 = sub nsw <4 x i32> %32, %34
  %39 = mul <4 x i32> %38, %26
  %40 = sub nsw <4 x i32> %32, %36
  %41 = mul <4 x i32> %40, %26
  %42 = lshr <4 x i32> %41, <i32 16, i32 16, i32 16, i32 16>
  %43 = add nuw nsw <4 x i32> %42, %36
  %44 = sub nsw <4 x i32> %32, %37
  %45 = mul <4 x i32> %44, %26
  %46 = lshr <4 x i32> %45, <i32 16, i32 16, i32 16, i32 16>
  %47 = add nuw nsw <4 x i32> %46, %37
  %48 = and <4 x i32> %31, <i32 -16777216, i32 -16777216, i32 -16777216, i32 -16777216>
  %49 = shl nuw nsw <4 x i32> %34, <i32 16, i32 16, i32 16, i32 16>
  %50 = add <4 x i32> %39, %49
  %51 = and <4 x i32> %50, <i32 -65536, i32 -65536, i32 -65536, i32 -65536>
  %52 = shl nuw nsw <4 x i32> %43, <i32 8, i32 8, i32 8, i32 8>
  %53 = or <4 x i32> %47, %48
  %54 = or <4 x i32> %53, %51
  %55 = or <4 x i32> %54, %52
  %56 = getelementptr inbounds i32, i32* %2, i64 %28
  %57 = bitcast i32* %56 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %57, align 4, !alias.scope !28, !noalias !25
  %58 = add i64 %28, 4
  %59 = icmp eq i64 %58, %24
  br i1 %59, label %60, label %27, !llvm.loop !30

60:                                               ; preds = %27
  %61 = icmp eq i64 %24, %13
  br i1 %61, label %62, label %15

62:                                               ; preds = %63, %60, %4
  ret void

63:                                               ; preds = %15, %63
  %64 = phi i64 [ %92, %63 ], [ %16, %15 ]
  %65 = getelementptr inbounds i32, i32* %1, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = lshr i32 %66, 24
  %68 = lshr i32 %66, 16
  %69 = and i32 %68, 255
  %70 = lshr i32 %66, 8
  %71 = and i32 %70, 255
  %72 = and i32 %66, 255
  %73 = sub nsw i32 %67, %69
  %74 = mul i32 %73, %10
  %75 = sub nsw i32 %67, %71
  %76 = mul i32 %75, %10
  %77 = lshr i32 %76, 16
  %78 = add nuw nsw i32 %77, %71
  %79 = sub nsw i32 %67, %72
  %80 = mul i32 %79, %10
  %81 = lshr i32 %80, 16
  %82 = add nuw nsw i32 %81, %72
  %83 = and i32 %66, -16777216
  %84 = shl nuw nsw i32 %69, 16
  %85 = add i32 %74, %84
  %86 = and i32 %85, -65536
  %87 = shl nuw nsw i32 %78, 8
  %88 = or i32 %82, %83
  %89 = or i32 %88, %86
  %90 = or i32 %89, %87
  %91 = getelementptr inbounds i32, i32* %2, i64 %64
  store i32 %90, i32* %91, align 4
  %92 = add nuw nsw i64 %64, 1
  %93 = icmp eq i64 %92, %13
  br i1 %93, label %62, label %63, !llvm.loop !31
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLnopERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readonly dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 1
  %9 = load double, double* %8, align 8
  %10 = fmul double %9, 2.000000e+00
  %11 = fmul double %10, 6.553600e+04
  %12 = fptosi double %11 to i32
  %13 = icmp sgt i32 %3, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %4
  %15 = bitcast i32* %5 to i8*
  %16 = bitcast i32* %6 to i8*
  %17 = bitcast i32* %7 to i8*
  %18 = zext i32 %3 to i64
  br label %20

19:                                               ; preds = %20, %4
  ret void

20:                                               ; preds = %20, %14
  %21 = phi i64 [ 0, %14 ], [ %61, %20 ]
  %22 = getelementptr inbounds i32, i32* %1, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, -16777216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %25 = lshr i32 %23, 16
  %26 = and i32 %25, 255
  store i32 %26, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %27 = lshr i32 %23, 8
  %28 = and i32 %27, 255
  store i32 %28, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %29 = and i32 %23, 255
  store i32 %29, i32* %7, align 4
  %30 = icmp ugt i32 %26, %28
  %31 = select i1 %30, i32 %26, i32 %28
  %32 = select i1 %30, i32 %28, i32 %26
  %33 = select i1 %30, i32* %6, i32* %5
  %34 = icmp ult i32 %31, %29
  %35 = select i1 %34, i32 %29, i32 %31
  %36 = icmp ult i32 %29, %32
  %37 = select i1 %36, i32* %7, i32* %33
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, %35
  %40 = shl nsw i32 %39, 15
  %41 = mul nsw i32 %39, %12
  %42 = sdiv i32 %41, -2
  %43 = mul nsw i32 %26, %12
  %44 = add nsw i32 %40, %43
  %45 = add i32 %44, %42
  %46 = sdiv i32 %45, 65536
  %47 = mul nsw i32 %28, %12
  %48 = add nsw i32 %40, %47
  %49 = add i32 %48, %42
  %50 = sdiv i32 %49, 65536
  %51 = mul nsw i32 %29, %12
  %52 = add nsw i32 %40, %51
  %53 = add i32 %52, %42
  %54 = sdiv i32 %53, 65536
  %55 = shl nsw i32 %46, 16
  %56 = shl nsw i32 %50, 8
  %57 = or i32 %54, %24
  %58 = or i32 %57, %55
  %59 = or i32 %58, %56
  %60 = getelementptr inbounds i32, i32* %2, i64 %21
  store i32 %59, i32* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  %61 = add nuw nsw i64 %21, 1
  %62 = icmp eq i64 %61, %18
  br i1 %62, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLdecERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readonly dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 2
  %9 = load double, double* %8, align 8
  %10 = fmul double %9, 2.000000e+00
  %11 = fmul double %10, 1.024000e+03
  %12 = fptosi double %11 to i32
  %13 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 1
  %14 = load double, double* %13, align 8
  %15 = fmul double %14, 2.000000e+00
  %16 = fmul double %15, 1.024000e+03
  %17 = fptosi double %16 to i32
  %18 = icmp sgt i32 %3, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %4
  %20 = bitcast i32* %5 to i8*
  %21 = bitcast i32* %6 to i8*
  %22 = bitcast i32* %7 to i8*
  %23 = zext i32 %3 to i64
  br label %25

24:                                               ; preds = %25, %4
  ret void

25:                                               ; preds = %25, %19
  %26 = phi i64 [ 0, %19 ], [ %69, %25 ]
  %27 = getelementptr inbounds i32, i32* %1, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -16777216
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20)
  %30 = lshr i32 %28, 16
  %31 = and i32 %30, 255
  store i32 %31, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  %32 = lshr i32 %28, 8
  %33 = and i32 %32, 255
  store i32 %33, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  %34 = and i32 %28, 255
  store i32 %34, i32* %7, align 4
  %35 = icmp ugt i32 %31, %33
  %36 = select i1 %35, i32 %31, i32 %33
  %37 = select i1 %35, i32 %33, i32 %31
  %38 = select i1 %35, i32* %6, i32* %5
  %39 = icmp ult i32 %36, %34
  %40 = select i1 %39, i32 %34, i32 %36
  %41 = icmp ult i32 %34, %37
  %42 = select i1 %41, i32* %7, i32* %38
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %40
  %45 = shl nsw i32 %44, 9
  %46 = mul nsw i32 %44, %17
  %47 = sdiv i32 %46, -2
  %48 = mul nsw i32 %31, %17
  %49 = add nsw i32 %45, %48
  %50 = add i32 %49, %47
  %51 = mul nsw i32 %50, %12
  %52 = sdiv i32 %51, 1048576
  %53 = mul nsw i32 %33, %17
  %54 = add nsw i32 %45, %53
  %55 = add i32 %54, %47
  %56 = mul nsw i32 %55, %12
  %57 = sdiv i32 %56, 1048576
  %58 = mul nsw i32 %34, %17
  %59 = add nsw i32 %45, %58
  %60 = add i32 %59, %47
  %61 = mul nsw i32 %60, %12
  %62 = sdiv i32 %61, 1048576
  %63 = shl nsw i32 %52, 16
  %64 = shl nsw i32 %57, 8
  %65 = or i32 %62, %29
  %66 = or i32 %65, %63
  %67 = or i32 %66, %64
  %68 = getelementptr inbounds i32, i32* %2, i64 %26
  store i32 %67, i32* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20)
  %69 = add nuw nsw i64 %26, 1
  %70 = icmp eq i64 %69, %23
  br i1 %70, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift20LineProcHnopSdecLincERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* nocapture readonly dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 2
  %9 = load double, double* %8, align 8
  %10 = fadd double %9, -5.000000e-01
  %11 = fmul double %10, 2.000000e+00
  %12 = fmul double %11, 1.024000e+03
  %13 = fptosi double %12 to i32
  %14 = getelementptr inbounds %"struct.color_utils::HSL", %"struct.color_utils::HSL"* %0, i64 0, i32 1
  %15 = load double, double* %14, align 8
  %16 = fmul double %15, 2.000000e+00
  %17 = fmul double %16, 1.024000e+03
  %18 = fptosi double %17 to i32
  %19 = icmp sgt i32 %3, 0
  br i1 %19, label %20, label %25

20:                                               ; preds = %4
  %21 = bitcast i32* %5 to i8*
  %22 = bitcast i32* %6 to i8*
  %23 = bitcast i32* %7 to i8*
  %24 = zext i32 %3 to i64
  br label %26

25:                                               ; preds = %26, %4
  ret void

26:                                               ; preds = %26, %20
  %27 = phi i64 [ 0, %20 ], [ %81, %26 ]
  %28 = getelementptr inbounds i32, i32* %1, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = lshr i32 %29, 24
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21)
  %31 = lshr i32 %29, 16
  %32 = and i32 %31, 255
  store i32 %32, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  %33 = lshr i32 %29, 8
  %34 = and i32 %33, 255
  store i32 %34, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23)
  %35 = and i32 %29, 255
  store i32 %35, i32* %7, align 4
  %36 = icmp ugt i32 %32, %34
  %37 = select i1 %36, i32 %32, i32 %34
  %38 = select i1 %36, i32 %34, i32 %32
  %39 = select i1 %36, i32* %6, i32* %5
  %40 = icmp ult i32 %37, %35
  %41 = select i1 %40, i32 %35, i32 %37
  %42 = icmp ult i32 %35, %38
  %43 = select i1 %42, i32* %7, i32* %39
  %44 = load i32, i32* %43, align 4
  %45 = add nsw i32 %44, %41
  %46 = shl nsw i32 %45, 9
  %47 = mul nsw i32 %45, %18
  %48 = sdiv i32 %47, -2
  %49 = mul nsw i32 %32, %18
  %50 = add nsw i32 %46, %49
  %51 = add i32 %50, %48
  %52 = mul nsw i32 %34, %18
  %53 = add nsw i32 %46, %52
  %54 = add i32 %53, %48
  %55 = mul nsw i32 %35, %18
  %56 = add nsw i32 %46, %55
  %57 = add i32 %56, %48
  %58 = shl i32 %51, 10
  %59 = shl nuw nsw i32 %30, 10
  %60 = sub nsw i32 %59, %51
  %61 = mul nsw i32 %60, %13
  %62 = add nsw i32 %61, %58
  %63 = sdiv i32 %62, 1048576
  %64 = shl i32 %54, 10
  %65 = sub nsw i32 %59, %54
  %66 = mul nsw i32 %65, %13
  %67 = add nsw i32 %66, %64
  %68 = sdiv i32 %67, 1048576
  %69 = shl i32 %57, 10
  %70 = sub nsw i32 %59, %57
  %71 = mul nsw i32 %70, %13
  %72 = add nsw i32 %71, %69
  %73 = sdiv i32 %72, 1048576
  %74 = and i32 %29, -16777216
  %75 = shl nsw i32 %63, 16
  %76 = shl nsw i32 %68, 8
  %77 = or i32 %73, %74
  %78 = or i32 %77, %75
  %79 = or i32 %78, %76
  %80 = getelementptr inbounds i32, i32* %2, i64 %27
  store i32 %79, i32* %80, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21)
  %81 = add nuw nsw i64 %27, 1
  %82 = icmp eq i64 %81, %24
  br i1 %82, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_18HSLShift15LineProcDefaultERKN11color_utils3HSLEPKjPji(%"struct.color_utils::HSL"* dereferenceable(24), i32* nocapture readonly, i32* nocapture, i32) #0 {
  %5 = icmp sgt i32 %3, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = zext i32 %3 to i64
  br label %9

8:                                                ; preds = %9, %4
  ret void

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %17, %9 ]
  %11 = getelementptr inbounds i32, i32* %1, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = tail call i32 @_ZN15SkUnPreMultiply14PMColorToColorEj(i32 %12) #9
  %14 = tail call i32 @_ZN11color_utils8HSLShiftEjRKNS_3HSLE(i32 %13, %"struct.color_utils::HSL"* dereferenceable(24) %0) #9
  %15 = tail call i32 @_Z18SkPreMultiplyColorj(i32 %14) #9
  %16 = getelementptr inbounds i32, i32* %2, i64 %10
  store i32 %15, i32* %16, align 4
  %17 = add nuw nsw i64 %10, 1
  %18 = icmp eq i64 %17, %7
  br i1 %18, label %8, label %9
}

declare i32 @_Z18SkPreMultiplyColorj(i32) local_unnamed_addr #1

declare i32 @_ZN11color_utils8HSLShiftEjRKNS_3HSLE(i32, %"struct.color_utils::HSL"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK8SkBitmap10eraseColorEj(%class.SkBitmap*, i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #8

declare void @_ZN14SkImageFilters4BlurEff10SkTileMode5sk_spI13SkImageFilterERKNS_8CropRectE(%class.sk_sp.21* sret, float, float, i32, %class.sk_sp.21*, %"struct.SkImageFilters::CropRect"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!4 = distinct !{!4, !"_ZNK11SkImageInfo13makeAlphaTypeE11SkAlphaType"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType: argument 0"}
!7 = distinct !{!7, !"_ZNK11SkColorInfo13makeAlphaTypeE11SkAlphaType"}
!8 = !{!9, !6, !3}
!9 = distinct !{!9, !10, !"_ZNK11SkColorInfo13refColorSpaceEv: argument 0"}
!10 = distinct !{!10, !"_ZNK11SkColorInfo13refColorSpaceEv"}
!11 = !{!12, !3}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeE7SkISizeO11SkColorInfo"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE: argument 0"}
!16 = distinct !{!16, !"_ZN14SkImageFilters4BlurEff5sk_spI13SkImageFilterERKNS_8CropRectE"}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.isvectorized", i32 1}
!24 = distinct !{!24, !23}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !23}
!31 = distinct !{!31, !23}
