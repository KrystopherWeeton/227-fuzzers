; ModuleID = '../../components/language/core/browser/language_usage_metrics.cc'
source_filename = "../../components/language/core/browser/language_usage_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.5", [4 x i8] }>
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.base::StringTokenizerT" = type <{ i8*, i8*, i8*, i8*, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.language::UrlLanguageHistogram" = type { %class.KeyedService, %class.PrefService* }
%class.KeyedService = type { i32 (...)** }
%class.PrefService = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"class.std::__1::__compressed_pair.15" }
%"struct.language::UrlLanguageHistogram::LanguageInfo" = type <{ %"class.std::__1::basic_string", float, [4 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.language::UrlLanguageHistogram::LanguageInfo"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv = comdat any

$_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [35 x i8] c"LanguageUsage.AcceptLanguage.Count\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"LanguageUsage.AcceptLanguage\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"LanguageUsage.MostFrequentPageLanguages\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"LanguageUsage.ApplicationLanguage\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-_\00", align 1
@_ZZN8language20LanguageUsageMetrics21RecordAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8language20LanguageUsageMetrics21RecordAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::set", align 8
  %4 = bitcast %"class.std::__1::set"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6
  %5 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %5, align 8
  call void @_ZN8language20LanguageUsageMetrics20ParseAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_3setIiNS3_4lessIiEENS3_9allocatorIiEEEE(i8* %0, i64 %1, %"class.std::__1::set"* nonnull %3)
  %10 = load atomic i64, i64* @_ZZN8language20LanguageUsageMetrics21RecordAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #6
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN8language20LanguageUsageMetrics21RecordAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %2, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %2 ], [ %14, %13 ]
  %18 = load i64, i64* %7, align 8
  %19 = trunc i64 %18 to i32
  %20 = bitcast %"class.base::HistogramBase"* %17 to void (%"class.base::HistogramBase"*, i32)***
  %21 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %21, i64 6
  %23 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %22, align 8
  call void %23(%"class.base::HistogramBase"* %17, i32 %19) #6
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %5, align 8
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %24, %8
  br i1 %25, label %26, label %30

26:                                               ; preds = %62, %16
  %27 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %28, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* nonnull %27, %"class.std::__1::__tree_node"* %29) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6
  ret void

30:                                               ; preds = %16, %62
  %31 = phi %"class.std::__1::__tree_end_node"* [ %63, %62 ], [ %24, %16 ]
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node"*
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %32, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 %34) #6
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 1, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %46

38:                                               ; preds = %30
  %39 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node_base"*
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %31, i64 2
  %41 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_end_node"**
  %42 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 0, i32 0
  %44 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node_base"* %44, %39
  br i1 %45, label %62, label %53

46:                                               ; preds = %30, %46
  %47 = phi %"class.std::__1::__tree_node_base"* [ %49, %46 ], [ %36, %30 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %46

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %47, i64 0, i32 0
  br label %62

53:                                               ; preds = %38, %53
  %54 = phi %"class.std::__1::__tree_end_node"** [ %57, %53 ], [ %41, %38 ]
  %55 = bitcast %"class.std::__1::__tree_end_node"** %54 to %"class.std::__1::__tree_node_base"**
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %56, i64 0, i32 2
  %58 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %60, %56
  br i1 %61, label %62, label %53

62:                                               ; preds = %53, %38, %51
  %63 = phi %"class.std::__1::__tree_end_node"* [ %52, %51 ], [ %42, %38 ], [ %58, %53 ]
  %64 = icmp eq %"class.std::__1::__tree_end_node"* %63, %8
  br i1 %64, label %26, label %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8language20LanguageUsageMetrics20ParseAcceptLanguagesEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_3setIiNS3_4lessIiEENS3_9allocatorIiEEEE(i8*, i64, %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::StringTokenizerT", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #6
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %12, align 8
  %13 = bitcast %"class.base::StringTokenizerT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 96, i1 false)
  %14 = getelementptr inbounds i8, i8* %0, i64 %1
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 1, i8* %17, align 1
  store i8 44, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 1
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 4
  %20 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %21 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #6
  store i8* %0, i8** %21, align 8
  %24 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 1
  store i8* %0, i8** %24, align 8
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 2
  store i8* %0, i8** %25, align 8
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 3
  store i8* %14, i8** %26, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 8 %15, i64 24, i1 false) #6
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 6
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 7
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 9
  store i32 0, i32* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %34 = bitcast i8** %25 to i64*
  %35 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::set"* %2 to i64*
  br label %37

37:                                               ; preds = %113, %3
  %38 = phi i32 [ %116, %113 ], [ 0, %3 ]
  %39 = phi i64 [ %115, %113 ], [ 0, %3 ]
  %40 = phi i8 [ %114, %113 ], [ 0, %3 ]
  %41 = icmp slt i8 %40, 0
  %42 = zext i8 %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  %44 = icmp eq i64 %43, 0
  %45 = icmp eq i32 %38, 0
  %46 = and i1 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #6
  br i1 %48, label %51, label %117

49:                                               ; preds = %37
  %50 = call zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT"* nonnull %4) #6
  br i1 %50, label %51, label %117

51:                                               ; preds = %47, %49
  %52 = load i8*, i8** %24, align 8
  %53 = load i64, i64* %34, align 8
  %54 = ptrtoint i8* %52 to i64
  %55 = sub i64 %53, %54
  %56 = call i32 @_ZN8language20LanguageUsageMetrics14ToLanguageCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %52, i64 %55)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %113, label %58

58:                                               ; preds = %51
  %59 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %60 = icmp eq %"class.std::__1::__tree_node"* %59, null
  br i1 %60, label %87, label %61

61:                                               ; preds = %58, %83
  %62 = phi %"class.std::__1::__tree_node"* [ %86, %83 ], [ %59, %58 ]
  %63 = phi %"class.std::__1::__tree_node_base"** [ %85, %83 ], [ %35, %58 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %56, %65
  br i1 %66, label %67, label %73

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %83

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %87

73:                                               ; preds = %61
  %74 = icmp slt i32 %65, %56
  br i1 %74, label %75, label %81

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 1
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node_base"* %77, null
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %87

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %62, i64 0, i32 0, i32 0
  br label %87

83:                                               ; preds = %75, %67
  %84 = phi %"class.std::__1::__tree_node_base"* [ %69, %67 ], [ %77, %75 ]
  %85 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %76, %75 ]
  %86 = bitcast %"class.std::__1::__tree_node_base"* %84 to %"class.std::__1::__tree_node"*
  br label %61

87:                                               ; preds = %58, %81, %79, %71
  %88 = phi %"class.std::__1::__tree_end_node"* [ %72, %71 ], [ %80, %79 ], [ %82, %81 ], [ %7, %58 ]
  %89 = phi %"class.std::__1::__tree_node_base"** [ %68, %71 ], [ %76, %79 ], [ %63, %81 ], [ %12, %58 ]
  %90 = bitcast %"class.std::__1::__tree_node_base"** %89 to %"class.std::__1::__tree_node"**
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %90, align 8
  %92 = icmp eq %"class.std::__1::__tree_node"* %91, null
  br i1 %92, label %93, label %113

93:                                               ; preds = %87
  %94 = call i8* @_Znwm(i64 32) #7, !noalias !2
  %95 = getelementptr inbounds i8, i8* %94, i64 28
  %96 = bitcast i8* %95 to i32*
  store i32 %56, i32* %96, align 4, !noalias !2
  %97 = bitcast i8* %94 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds i8, i8* %94, i64 16
  %99 = bitcast i8* %98 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %88, %"class.std::__1::__tree_end_node"** %99, align 8
  %100 = bitcast %"class.std::__1::__tree_node_base"** %89 to i8**
  store i8* %94, i8** %100, align 8
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %93
  %106 = ptrtoint %"class.std::__1::__tree_node_base"* %103 to i64
  store i64 %106, i64* %36, align 8
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  br label %108

108:                                              ; preds = %105, %93
  %109 = phi %"class.std::__1::__tree_node_base"* [ %97, %93 ], [ %107, %105 ]
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %110, %"class.std::__1::__tree_node_base"* %109) #6
  %111 = load i64, i64* %10, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %10, align 8
  br label %113

113:                                              ; preds = %108, %87, %51
  %114 = load i8, i8* %32, align 1
  %115 = load i64, i64* %33, align 8
  %116 = load i32, i32* %27, align 8
  br label %37

117:                                              ; preds = %47, %49
  %118 = load i8, i8* %32, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZdlPv(i8* %122) #7
  br label %123

123:                                              ; preds = %120, %117
  %124 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  call void @_ZdlPv(i8* %130) #7
  br label %131

131:                                              ; preds = %123, %128
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %13) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base18UmaHistogramSparseEPKci(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8language20LanguageUsageMetrics19RecordPageLanguagesERKNS_20UrlLanguageHistogramE(%"class.language::UrlLanguageHistogram"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #6
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZNK8language20UrlLanguageHistogram15GetTopLanguagesEv(%"class.std::__1::vector"* nonnull sret %2, %"class.language::UrlLanguageHistogram"* %0) #6
  %7 = load %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"struct.language::UrlLanguageHistogram::LanguageInfo"** %4, align 8
  %8 = load %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"struct.language::UrlLanguageHistogram::LanguageInfo"** %5, align 8
  %9 = icmp eq %"struct.language::UrlLanguageHistogram::LanguageInfo"* %7, %8
  br i1 %9, label %12, label %37

10:                                               ; preds = %58
  %11 = load %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"struct.language::UrlLanguageHistogram::LanguageInfo"** %4, align 8
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi %"struct.language::UrlLanguageHistogram::LanguageInfo"* [ %11, %10 ], [ %7, %1 ]
  %14 = icmp eq %"struct.language::UrlLanguageHistogram::LanguageInfo"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %12
  %16 = bitcast %"struct.language::UrlLanguageHistogram::LanguageInfo"* %13 to i8*
  %17 = load %"struct.language::UrlLanguageHistogram::LanguageInfo"*, %"struct.language::UrlLanguageHistogram::LanguageInfo"** %5, align 8
  %18 = icmp eq %"struct.language::UrlLanguageHistogram::LanguageInfo"* %17, %13
  br i1 %18, label %34, label %19

19:                                               ; preds = %15, %29
  %20 = phi %"struct.language::UrlLanguageHistogram::LanguageInfo"* [ %21, %29 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %20, i64 -1
  %22 = bitcast %"struct.language::UrlLanguageHistogram::LanguageInfo"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #7
  br label %29

29:                                               ; preds = %26, %19
  %30 = icmp eq %"struct.language::UrlLanguageHistogram::LanguageInfo"* %21, %13
  br i1 %30, label %31, label %19

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %2 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %15
  %35 = phi i8* [ %33, %31 ], [ %16, %15 ]
  store %"struct.language::UrlLanguageHistogram::LanguageInfo"* %13, %"struct.language::UrlLanguageHistogram::LanguageInfo"** %5, align 8
  call void @_ZdlPv(i8* %35) #7
  br label %36

36:                                               ; preds = %12, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #6
  ret void

37:                                               ; preds = %1, %58
  %38 = phi %"struct.language::UrlLanguageHistogram::LanguageInfo"* [ %59, %58 ], [ %7, %1 ]
  %39 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38, i64 0, i32 1
  %40 = load float, float* %39, align 8
  %41 = fcmp olt float %40, 0x3FA99999A0000000
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = bitcast %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38 to i8*
  %50 = select i1 %46, i8* %48, i8* %49
  %51 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %45 to i64
  %54 = select i1 %46, i64 %52, i64 %53
  %55 = call i32 @_ZN8language20LanguageUsageMetrics14ToLanguageCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %50, i64 %54)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %42
  call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i32 %55) #6
  br label %58

58:                                               ; preds = %57, %42, %37
  %59 = getelementptr inbounds %"struct.language::UrlLanguageHistogram::LanguageInfo", %"struct.language::UrlLanguageHistogram::LanguageInfo"* %38, i64 1
  %60 = icmp eq %"struct.language::UrlLanguageHistogram::LanguageInfo"* %59, %8
  br i1 %60, label %10, label %37
}

declare void @_ZNK8language20UrlLanguageHistogram15GetTopLanguagesEv(%"class.std::__1::vector"* sret, %"class.language::UrlLanguageHistogram"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8language20LanguageUsageMetrics14ToLanguageCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %10 = tail call i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8* %0, i64 %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2, i64 0) #6
  %11 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %3, i64 0, i64 %10)
  %12 = extractvalue { i8*, i64 } %11, 0
  store i8* %12, i8** %8, align 8
  %13 = extractvalue { i8*, i64 } %11, 1
  store i64 %13, i64* %9, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %2, %29
  %16 = phi i64 [ %34, %29 ], [ 0, %2 ]
  %17 = phi i32 [ %33, %29 ], [ 0, %2 ]
  %18 = icmp eq i64 %16, 4
  br i1 %18, label %37, label %19

19:                                               ; preds = %15
  %20 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %4, i64 %16) #6
  %21 = load i8, i8* %20, align 1
  %22 = add i8 %21, -65
  %23 = icmp ult i8 %22, 26
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = add nuw nsw i8 %21, 32
  br label %29

26:                                               ; preds = %19
  %27 = add i8 %21, -97
  %28 = icmp ugt i8 %27, 25
  br i1 %28, label %37, label %29

29:                                               ; preds = %24, %26
  %30 = phi i8 [ %25, %24 ], [ %21, %26 ]
  %31 = shl i32 %17, 8
  %32 = sext i8 %30 to i32
  %33 = add nsw i32 %31, %32
  %34 = add nuw nsw i64 %16, 1
  %35 = load i64, i64* %9, align 8
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %15, label %37

37:                                               ; preds = %29, %15, %26, %2
  %38 = phi i32 [ 0, %2 ], [ 0, %26 ], [ 0, %15 ], [ %33, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #6
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8language20LanguageUsageMetrics25RecordApplicationLanguageEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN8language20LanguageUsageMetrics14ToLanguageCodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %0, i64 %1)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN4base18UmaHistogramSparseEPKci(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i32 %3) #6
  br label %6

6:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN4base8internal13find_first_ofENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_m(i8*, i64, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #6
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #6
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE12QuickGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = inttoptr i64 %5 to i8*
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, %8
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  br label %16

15:                                               ; preds = %32, %1
  store i8 1, i8* %2, align 4
  br label %59

16:                                               ; preds = %12, %32
  %17 = phi i8* [ %8, %12 ], [ %34, %32 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  store i8* %18, i8** %3, align 8
  %19 = load i8, i8* %17, align 1
  %20 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %19, i64 0) #6
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %22, label %32

22:                                               ; preds = %16
  %23 = load i32, i32* %14, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %22
  %26 = load i8*, i8** %6, align 8
  %27 = load i8, i8* %26, align 1
  switch i8 %27, label %28 [
    i8 32, label %32
    i8 13, label %32
    i8 10, label %32
    i8 9, label %32
    i8 12, label %32
  ]

28:                                               ; preds = %25, %22
  %29 = load i8*, i8** %3, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = icmp eq i8* %29, %30
  br i1 %31, label %59, label %37

32:                                               ; preds = %25, %25, %25, %25, %25, %16
  %33 = load i64, i64* %4, align 8
  store i64 %33, i64* %7, align 8
  %34 = inttoptr i64 %33 to i8*
  %35 = load i8*, i8** %9, align 8
  %36 = icmp eq i8* %35, %34
  br i1 %36, label %15, label %16

37:                                               ; preds = %28, %50
  %38 = phi i8* [ %51, %50 ], [ %29, %28 ]
  %39 = load i8, i8* %38, align 1
  %40 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %13, i8 signext %39, i64 0) #6
  %41 = icmp eq i64 %40, -1
  br i1 %41, label %42, label %59

42:                                               ; preds = %37
  %43 = load i8*, i8** %3, align 8
  %44 = load i32, i32* %14, align 8
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = load i8, i8* %43, align 1
  %48 = add i8 %47, -9
  %49 = icmp ult i8 %48, 24
  br i1 %49, label %54, label %50

50:                                               ; preds = %54, %46, %42
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %51, i8** %3, align 8
  %52 = load i8*, i8** %9, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %59, label %37

54:                                               ; preds = %46
  %55 = zext i8 %48 to i32
  %56 = lshr i32 8388635, %55
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %50, label %59

59:                                               ; preds = %15, %28, %37, %50, %54
  %60 = phi i1 [ true, %54 ], [ false, %15 ], [ true, %28 ], [ true, %37 ], [ true, %50 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base16StringTokenizerTINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKcE11FullGetNextEv(%"class.base::StringTokenizerT"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 2
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 3
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  %7 = ptrtoint i8* %3 to i64
  br i1 %6, label %22, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %22

12:                                               ; preds = %8, %16
  %13 = phi i64 [ %19, %16 ], [ %7, %8 ]
  %14 = phi i8* [ %17, %16 ], [ %3, %8 ]
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %22 [
    i8 32, label %16
    i8 13, label %16
    i8 10, label %16
    i8 9, label %16
    i8 12, label %16
  ]

16:                                               ; preds = %12, %12, %12, %12, %12
  %17 = getelementptr inbounds i8, i8* %14, i64 1
  store i8* %17, i8** %2, align 8
  %18 = icmp eq i8* %17, %5
  %19 = ptrtoint i8* %17 to i64
  br i1 %18, label %20, label %12

20:                                               ; preds = %16
  %21 = ptrtoint i8* %17 to i64
  br label %22

22:                                               ; preds = %12, %20, %8, %1
  %23 = phi i64 [ %7, %8 ], [ %7, %1 ], [ %21, %20 ], [ %13, %12 ]
  %24 = phi i8* [ %3, %8 ], [ %3, %1 ], [ %5, %20 ], [ %14, %12 ]
  %25 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 9
  %31 = getelementptr inbounds %"class.base::StringTokenizerT", %"class.base::StringTokenizerT"* %0, i64 0, i32 5
  %32 = load i8, i8* %26, align 4, !range !5
  %33 = icmp eq i8 %32, 0
  br label %34

34:                                               ; preds = %111, %22
  %35 = phi i8* [ %5, %22 ], [ %104, %111 ]
  %36 = phi i64 [ %23, %22 ], [ %116, %111 ]
  %37 = phi i8* [ %24, %22 ], [ %112, %111 ]
  %38 = phi i1 [ %33, %22 ], [ false, %111 ]
  %39 = phi i8 [ 0, %22 ], [ %106, %111 ]
  %40 = phi i8 [ 0, %22 ], [ %107, %111 ]
  %41 = phi i8 [ 0, %22 ], [ %108, %111 ]
  br i1 %38, label %103, label %42

42:                                               ; preds = %34
  store i8 0, i8* %26, align 4
  store i64 %36, i64* %28, align 8
  %43 = inttoptr i64 %36 to i8*
  %44 = icmp eq i8* %35, %43
  br i1 %44, label %89, label %45

45:                                               ; preds = %42, %74
  %46 = phi i8* [ %75, %74 ], [ %35, %42 ]
  %47 = phi i8* [ %80, %74 ], [ %37, %42 ]
  %48 = phi i8* [ %80, %74 ], [ %43, %42 ]
  %49 = phi i8 [ %79, %74 ], [ %41, %42 ]
  %50 = phi i8 [ %78, %74 ], [ %40, %42 ]
  %51 = phi i8 [ %77, %74 ], [ %39, %42 ]
  %52 = load i8, i8* %48, align 1
  %53 = icmp eq i8 %49, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %45
  %55 = icmp eq i8 %50, 0
  br i1 %55, label %56, label %74

56:                                               ; preds = %54
  %57 = icmp eq i8 %52, 92
  br i1 %57, label %74, label %58

58:                                               ; preds = %56
  %59 = icmp eq i8 %51, %52
  %60 = select i1 %59, i8 0, i8 %49
  br label %74

61:                                               ; preds = %45
  %62 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %29, i8 signext %52, i64 0) #6
  %63 = icmp eq i64 %62, -1
  br i1 %63, label %64, label %82

64:                                               ; preds = %61
  %65 = load i32, i32* %30, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  switch i8 %52, label %68 [
    i8 32, label %82
    i8 13, label %82
    i8 10, label %82
    i8 9, label %82
    i8 12, label %82
  ]

68:                                               ; preds = %67, %64
  %69 = tail call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %31, i8 signext %52, i64 0) #6
  %70 = icmp ne i64 %69, -1
  %71 = zext i1 %70 to i8
  %72 = load i8*, i8** %2, align 8
  %73 = load i8*, i8** %4, align 8
  br label %74

74:                                               ; preds = %58, %68, %54, %56
  %75 = phi i8* [ %46, %56 ], [ %46, %54 ], [ %73, %68 ], [ %46, %58 ]
  %76 = phi i8* [ %47, %56 ], [ %47, %54 ], [ %72, %68 ], [ %47, %58 ]
  %77 = phi i8 [ %51, %56 ], [ %51, %54 ], [ %52, %68 ], [ %51, %58 ]
  %78 = phi i8 [ 1, %56 ], [ 0, %54 ], [ %50, %68 ], [ 0, %58 ]
  %79 = phi i8 [ %49, %56 ], [ %49, %54 ], [ %71, %68 ], [ %60, %58 ]
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  store i8* %80, i8** %2, align 8
  %81 = icmp eq i8* %80, %75
  br i1 %81, label %82, label %45

82:                                               ; preds = %67, %67, %67, %67, %67, %61, %74
  %83 = phi i8 [ %77, %74 ], [ %51, %61 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ], [ %51, %67 ]
  %84 = phi i8 [ %78, %74 ], [ %50, %61 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ], [ %50, %67 ]
  %85 = phi i8 [ %79, %74 ], [ 0, %61 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ], [ 0, %67 ]
  %86 = load i8*, i8** %27, align 8
  %87 = load i8*, i8** %2, align 8
  %88 = ptrtoint i8* %87 to i64
  br label %89

89:                                               ; preds = %82, %42
  %90 = phi i64 [ %36, %42 ], [ %88, %82 ]
  %91 = phi i8* [ %37, %42 ], [ %87, %82 ]
  %92 = phi i8* [ %35, %42 ], [ %86, %82 ]
  %93 = phi i8 [ %39, %42 ], [ %83, %82 ]
  %94 = phi i8 [ %40, %42 ], [ %84, %82 ]
  %95 = phi i8 [ %41, %42 ], [ %85, %82 ]
  %96 = icmp eq i8* %92, %91
  br i1 %96, label %97, label %117

97:                                               ; preds = %89
  %98 = load i32, i32* %25, align 8
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %117

101:                                              ; preds = %97
  %102 = load i8*, i8** %4, align 8
  br label %103

103:                                              ; preds = %101, %34
  %104 = phi i8* [ %35, %34 ], [ %102, %101 ]
  %105 = phi i64 [ %36, %34 ], [ %90, %101 ]
  %106 = phi i8 [ %39, %34 ], [ %93, %101 ]
  %107 = phi i8 [ %40, %34 ], [ %94, %101 ]
  %108 = phi i8 [ %41, %34 ], [ %95, %101 ]
  store i8 1, i8* %26, align 4
  store i64 %105, i64* %28, align 8
  %109 = inttoptr i64 %105 to i8*
  %110 = icmp eq i8* %104, %109
  br i1 %110, label %117, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  store i8* %112, i8** %2, align 8
  %113 = load i32, i32* %25, align 8
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 0
  %116 = ptrtoint i8* %112 to i64
  br i1 %115, label %34, label %117

117:                                              ; preds = %111, %103, %89, %97
  %118 = phi i1 [ true, %97 ], [ true, %89 ], [ false, %103 ], [ true, %111 ]
  ret i1 %118
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
