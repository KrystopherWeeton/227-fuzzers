; ModuleID = '../../native_client/src/trusted/service_runtime/elf_util.c'
source_filename = "../../native_client/src/trusted/service_runtime/elf_util.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClPhdrChecks = type { i32, i32, i32, i32, i32 }
%struct.NaClDescEffector = type { %struct.NaClDescEffectorVtbl* }
%struct.NaClDescEffectorVtbl = type { void (%struct.NaClDescEffector*, i64, i64)* }
%struct.NaClElfImage = type { %struct.Elf32_Ehdr, [128 x %struct.Elf32_Phdr], [128 x i32] }
%struct.Elf32_Ehdr = type { [16 x i8], i16, i16, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16 }
%struct.Elf32_Phdr = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.NaClElfImageInfo = type { i64, i64, i64, i64, i64, i64 }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.anon = type { %struct.Elf64_Ehdr }
%struct.Elf64_Ehdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.Elf64_Phdr = type { i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.0, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.0 = type { i64 }
%union.anon.1 = type { i64 }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClAppThread = type opaque
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDynamicRegion = type { i64, i64, i32, i32 }
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type { i32, i64, i8*, i64, i64, i64, i64, i64, i64 }
%struct.NaClPerfCounter = type { [128 x i8], i32, [16 x %struct.nacl_abi_timeval], [16 x [20 x i8]] }
%struct.nacl_abi_timeval = type { i64, i32 }

@.str = private unnamed_addr constant [5 x i8] c"\7FELF\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"bad elf magic\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"bad elf class\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"non executable\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"bad machine: %x\0A\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"bad elf version: %x\0A\00", align 1
@.str.6 = private unnamed_addr constant [48 x i8] c"Looking at segment %d, type 0x%x, p_flags 0x%x\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Ignoring empty segment\0A\00", align 1
@nacl_phdr_check_data = internal unnamed_addr constant [13 x %struct.NaClPhdrChecks] [%struct.NaClPhdrChecks { i32 6, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 1, i32 5, i32 1, i32 1, i32 131072 }, %struct.NaClPhdrChecks { i32 1, i32 4, i32 2, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 1, i32 6, i32 3, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 7, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 1685382481, i32 6, i32 0, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 2, i32 6, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 2, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 3, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 4, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 1685382480, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 1685382482, i32 4, i32 4, i32 0, i32 0 }, %struct.NaClPhdrChecks { i32 0, i32 4, i32 4, i32 0, i32 0 }], align 16
@.str.8 = private unnamed_addr constant [50 x i8] c"Segment %d is of unexpected type 0x%x, flag 0x%x\0A\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"Matched nacl_phdr_check_data[%lu]\0A\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Segment %d is a type that has been seen\0A\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"Ignoring\0A\00", align 1
@.str.12 = private unnamed_addr constant [58 x i8] c"Segment %d: bad virtual address: 0x%08x, expected 0x%08x\0A\00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"Segment %d: virtual address (0x%08x) too low\0A\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"Segment %d: p_memsz caused integer overflow\0A\00", align 1
@.str.15 = private unnamed_addr constant [39 x i8] c"Segment %d: too large, ends at 0x%08x\0A\00", align 1
@.str.16 = private unnamed_addr constant [61 x i8] c"Segment %d: file size 0x%08x larger than memory size 0x%08x\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"could not load elf headers\0A\00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"ELFCLASS64 file header fields overflow 32 bits\0A\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"ELFCLASS64 file e_ehsize != %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"too many prog headers\0A\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"bad prog headers size\0A\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c" ehdr64.e_phentsize = 0x%x\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"  sizeof(Elf64_Phdr) = 0x%lx\0A\00", align 1
@.str.24 = private unnamed_addr constant [29 x i8] c"cannot load tp prog headers\0A\00", align 1
@.str.25 = private unnamed_addr constant [51 x i8] c"ELFCLASS64 program header fields overflow 32 bits\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c" image.ehdr.e_phentsize = 0x%x\0A\00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"  sizeof image.phdrs[0] = 0x%lx\0A\00", align 1
@.str.28 = private unnamed_addr constant [51 x i8] c"=================================================\0A\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"Elf Program headers\0A\00", align 1
@.str.30 = private unnamed_addr constant [52 x i8] c"==================================================\0A\00", align 1
@.str.31 = private unnamed_addr constant [38 x i8] c"no enough memory for image meta data\0A\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"loading segment %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [34 x i8] c"zero-sized segment.  ignoring...\0A\00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"parameter error should have been detected already\0A\00", align 1
@.str.35 = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"../../native_client/src/trusted/service_runtime/elf_util.c\00", align 1
@.str.37 = private unnamed_addr constant [25 x i8] c"kNaClBadAddress != paddr\00", align 1
@.str.38 = private unnamed_addr constant [51 x i8] c"NaClElfImageLoad: checking descriptor mmap safety\0A\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"NaClElfImageLoad: safe-for-mmap\0A\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"ELF_LOAD_BYPASS_DESCRIPTOR_SAFETY_CHECK\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"WARNING: BYPASSING DESCRIPTOR SAFETY CHECK\0A\00", align 1
@.str.42 = private unnamed_addr constant [63 x i8] c"PReading %d (0x%x) bytes to address 0x%lx, position %d (0x%x)\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"load failure segment %d\00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"NaClElfImageLoadDynamically: malloc failed\0A\00", align 1
@.str.45 = private unnamed_addr constant [58 x i8] c"NaClElfImageLoadDynamically: failed to read code segment\0A\00", align 1
@.str.46 = private unnamed_addr constant [58 x i8] c"NaClElfImageLoadDynamically: failed to load code segment\0A\00", align 1
@.str.47 = private unnamed_addr constant [57 x i8] c"NaClElfImageLoadDynamically: failed to map data segment\0A\00", align 1
@.str.48 = private unnamed_addr constant [58 x i8] c"NaClElfImageLoadDynamically: failed to read data segment\0A\00", align 1
@.str.49 = private unnamed_addr constant [72 x i8] c"NaClElfImageLoadDynamically: failed to mprotect read-only data segment\0A\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"Elf header\0A\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"e_ident+1 = %.3s\0A\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"e_type = %#x\0A\00", align 1
@.str.53 = private unnamed_addr constant [17 x i8] c"e_machine = %#x\0A\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"e_version = %#x\0A\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"e_entry = %#x\0A\00", align 1
@.str.56 = private unnamed_addr constant [15 x i8] c"e_phoff = %#x\0A\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"e_shoff = %#x\0A\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"e_flags = %#x\0A\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"e_ehsize = %#x\0A\00", align 1
@.str.60 = private unnamed_addr constant [19 x i8] c"e_phentsize = %#x\0A\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"e_phnum = %#x\0A\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"e_shentsize = %#x\0A\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"e_shnum = %#x\0A\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"e_shstrndx = %#x\0A\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"sizeof(Elf32_Ehdr) = 0x%x\0A\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"%s: %x\0A\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"p_type\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"p_offset\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"p_vaddr\00", align 1
@.str.70 = private unnamed_addr constant [8 x i8] c"p_paddr\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"p_filesz\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"p_memsz\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"p_flags\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c" (%s %s %s)\0A\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"PF_R\00", align 1
@.str.76 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"PF_W\00", align 1
@.str.78 = private unnamed_addr constant [5 x i8] c"PF_X\00", align 1
@.str.79 = private unnamed_addr constant [8 x i8] c"p_align\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.81 = private unnamed_addr constant [22 x i8] c"NaClElfFileMapSegment\00", align 1
@.str.82 = private unnamed_addr constant [76 x i8] c"NaClElfFileMapSegment: checking segment flags 0x%x to determine map checks\0A\00", align 1
@.str.83 = private unnamed_addr constant [63 x i8] c"NaClElfFileMapSegment: text segment and file is safe for mmap\0A\00", align 1
@.str.84 = private unnamed_addr constant [51 x i8] c"NaClElfFileMapSegment: not supported type, got %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [47 x i8] c"NaClElfFileMapSegment: mapping for validation\0A\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"PreMap\00", align 1
@.str.87 = private unnamed_addr constant [15 x i8] c"MapForValidate\00", align 1
@.str.88 = private unnamed_addr constant [80 x i8] c"NaClElfFileMapSegment: Could not make scratch mapping, falling back to reading\0A\00", align 1
@.str.89 = private unnamed_addr constant [59 x i8] c"segment_size == nap->static_text_end - NACL_TRAMPOLINE_END\00", align 1
@.str.90 = private unnamed_addr constant [33 x i8] c"ELF_LOAD_FORCE_VALIDATION_STATUS\00", align 1
@.str.91 = private unnamed_addr constant [15 x i8] c"ValidateMapped\00", align 1
@.str.92 = private unnamed_addr constant [44 x i8] c"NaClElfFileMapSegment: validator_status %d\0A\00", align 1
@.str.93 = private unnamed_addr constant [155 x i8] c"NaClElfFileMapSegment: readonly_text validation for mmap failed.  Will retry validation allowing HALT stubbing out of unsupported instruction extensions.\0A\00", align 1
@.str.94 = private unnamed_addr constant [48 x i8] c"NaClElfFileMapSegment: mapping into code space\0A\00", align 1
@.str.95 = private unnamed_addr constant [50 x i8] c"NaClElfFileMapSegment: EXERCISING MMAP LOAD PATH\0A\00", align 1
@.str.96 = private unnamed_addr constant [46 x i8] c"NaClElfFileMapSegment: unexpected p_flags %d\0A\00", align 1
@.str.97 = private unnamed_addr constant [35 x i8] c"NaClElfFileMapSegment: pread tail\0A\00", align 1
@.str.98 = private unnamed_addr constant [11 x i8] c"PRead tail\00", align 1
@.str.99 = private unnamed_addr constant [55 x i8] c"NaClElfFileMapSegment: pread load of page tail failed\0A\00", align 1
@.str.100 = private unnamed_addr constant [122 x i8] c"NaClElfFileMapSegment: no pages to map, probably because the segment was a partial page, so it was processed by reading.\0A\00", align 1
@.str.101 = private unnamed_addr constant [87 x i8] c"NaClElfFileMapSegment: mapping %lu (0x%lx) bytes to address 0x%lx, position %d (0x%x)\0A\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"MapFinal\00", align 1
@.str.103 = private unnamed_addr constant [65 x i8] c"NaClElfFileMapSegment: map to 0x%lx (prot %x) failed: got 0x%lx\0A\00", align 1
@NaClDescEffectorTrustedMemStruct = external constant %struct.NaClDescEffector, align 8
@.str.104 = private unnamed_addr constant [50 x i8] c"NaClUserToSys: uaddr 0x%08lx, addr space %d bits\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClElfImageValidateElfHeader(%struct.NaClElfImage* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 0, i64 0
  %3 = tail call i32 @bcmp(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4)
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %27

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 0, i64 4
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %27

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 1
  %13 = load i16, i16* %12, align 4
  %14 = icmp eq i16 %13, 2
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)) #7
  br label %27

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 2
  %18 = load i16, i16* %17, align 2
  %19 = icmp eq i16 %18, 62
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = zext i16 %18 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i32 %21) #7
  br label %27

22:                                               ; preds = %16
  %23 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 %24) #7
  br label %27

27:                                               ; preds = %22, %26, %20, %15, %10, %5
  %28 = phi i32 [ 11, %5 ], [ 12, %10 ], [ 15, %15 ], [ 16, %20 ], [ 17, %26 ], [ 0, %22 ]
  ret i32 %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClElfImageValidateProgramHeaders(%struct.NaClElfImage* nocapture, i8 zeroext, %struct.NaClElfImageInfo* nocapture) local_unnamed_addr #0 {
  %4 = alloca [13 x i32], align 16
  %5 = bitcast [13 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %5) #7
  %6 = bitcast %struct.NaClElfImageInfo* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  %7 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 5
  store i64 131072, i64* %7, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 0, i64 52, i1 false)
  %8 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 10
  %9 = load i16, i16* %8, align 4
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %129, label %11

11:                                               ; preds = %3
  %12 = zext i8 %1 to i64
  %13 = shl i64 1, %12
  %14 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 1
  %15 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 2
  %16 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 0
  %17 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 3
  %18 = getelementptr inbounds %struct.NaClElfImageInfo, %struct.NaClElfImageInfo* %2, i64 0, i32 4
  br label %19

19:                                               ; preds = %11, %122
  %20 = phi i64 [ 0, %11 ], [ %123, %122 ]
  %21 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = trunc i64 %20 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.6, i64 0, i64 0), i32 %25, i32 %22, i32 %24) #7
  %26 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %19
  %30 = load i32, i32* %21, align 4
  switch i32 %30, label %35 [
    i32 6, label %32
    i32 1, label %134
    i32 7, label %143
    i32 1685382481, label %146
    i32 2, label %149
    i32 3, label %155
    i32 4, label %158
    i32 1685382480, label %161
    i32 1685382482, label %164
    i32 0, label %167
  ]

31:                                               ; preds = %19
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #7
  br label %122

32:                                               ; preds = %29
  %33 = load i32, i32* %23, align 4
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %38, label %35

35:                                               ; preds = %29, %140, %32, %143, %152, %146, %155, %158, %161, %164, %167
  %36 = trunc i64 %20 to i32
  %37 = load i32, i32* %23, align 4
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.8, i64 0, i64 0), i32 %36, i32 %30, i32 %37) #7
  br label %127

38:                                               ; preds = %32, %134, %137, %140, %143, %146, %149, %152, %155, %158, %161, %164, %167
  %39 = phi i64 [ 0, %32 ], [ 1, %134 ], [ 2, %137 ], [ 3, %140 ], [ 4, %143 ], [ 5, %146 ], [ 6, %149 ], [ 7, %152 ], [ 8, %155 ], [ 9, %158 ], [ 10, %161 ], [ 11, %164 ], [ 12, %167 ]
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i64 %39) #7
  %40 = getelementptr inbounds [13 x i32], [13 x i32]* %4, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %38
  %44 = trunc i64 %20 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0), i32 %44) #7
  br label %127

45:                                               ; preds = %38
  store i32 1, i32* %40, align 4
  %46 = getelementptr inbounds [13 x %struct.NaClPhdrChecks], [13 x %struct.NaClPhdrChecks]* @nacl_phdr_check_data, i64 0, i64 %39, i32 2
  %47 = lshr i64 8145, %39
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %122

51:                                               ; preds = %45
  %52 = getelementptr inbounds [13 x %struct.NaClPhdrChecks], [13 x %struct.NaClPhdrChecks]* @nacl_phdr_check_data, i64 0, i64 %39, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i64 %39, 1
  %55 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 2
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %61

57:                                               ; preds = %51
  %58 = icmp eq i32 %53, %56
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = trunc i64 %20 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.12, i64 0, i64 0), i32 %60, i32 %56, i32 %53) #7
  br label %127

61:                                               ; preds = %51, %57
  %62 = phi i32 [ %53, %57 ], [ %56, %51 ]
  %63 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 2
  %64 = icmp ult i32 %62, 131072
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = trunc i64 %20 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0), i32 %66, i32 %62) #7
  br label %127

67:                                               ; preds = %61
  %68 = zext i32 %62 to i64
  %69 = icmp ugt i64 %13, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = load i32, i32* %26, align 4
  br label %77

72:                                               ; preds = %67
  %73 = sub i64 %13, %68
  %74 = load i32, i32* %26, align 4
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %77, label %84

77:                                               ; preds = %72, %70
  %78 = phi i32 [ %71, %70 ], [ %74, %72 ]
  %79 = trunc i64 %20 to i32
  %80 = add i32 %78, %62
  %81 = icmp ult i32 %80, %62
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i32 %79) #7
  br label %127

83:                                               ; preds = %77
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.15, i64 0, i64 0), i32 %79, i32 %80) #7
  br label %127

84:                                               ; preds = %72
  %85 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %20, i32 4
  %86 = load i32, i32* %85, align 4
  %87 = icmp ugt i32 %86, %74
  br i1 %87, label %88, label %90

88:                                               ; preds = %84
  %89 = trunc i64 %20 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.16, i64 0, i64 0), i32 %89, i32 %86, i32 %74) #7
  br label %127

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 2, i64 %20
  store i32 1, i32* %91, align 4
  %92 = load i64, i64* %7, align 8
  %93 = load i32, i32* %63, align 4
  %94 = load i32, i32* %26, align 4
  %95 = add i32 %94, %93
  %96 = zext i32 %95 to i64
  %97 = icmp ult i64 %92, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  store i64 %96, i64* %7, align 8
  br label %99

99:                                               ; preds = %98, %90
  %100 = load i32, i32* %46, align 4
  switch i32 %100, label %122 [
    i32 3, label %115
    i32 1, label %101
    i32 2, label %108
  ]

101:                                              ; preds = %99
  %102 = load i32, i32* %26, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %127, label %104

104:                                              ; preds = %101
  %105 = load i32, i32* %85, align 4
  %106 = add i32 %105, 131072
  %107 = zext i32 %106 to i64
  store i64 %107, i64* %16, align 8
  br label %122

108:                                              ; preds = %99
  %109 = load i32, i32* %63, align 4
  %110 = zext i32 %109 to i64
  store i64 %110, i64* %14, align 8
  %111 = load i32, i32* %63, align 4
  %112 = load i32, i32* %26, align 4
  %113 = add i32 %112, %111
  %114 = zext i32 %113 to i64
  store i64 %114, i64* %15, align 8
  br label %122

115:                                              ; preds = %99
  %116 = load i32, i32* %63, align 4
  %117 = zext i32 %116 to i64
  store i64 %117, i64* %17, align 8
  %118 = load i32, i32* %63, align 4
  %119 = load i32, i32* %26, align 4
  %120 = add i32 %119, %118
  %121 = zext i32 %120 to i64
  store i64 %121, i64* %18, align 8
  br label %122

122:                                              ; preds = %104, %108, %115, %99, %50, %31
  %123 = add nuw nsw i64 %20, 1
  %124 = load i16, i16* %8, align 4
  %125 = zext i16 %124 to i64
  %126 = icmp ult i64 %123, %125
  br i1 %126, label %19, label %129

127:                                              ; preds = %101, %129, %82, %83, %88, %65, %59, %43, %35
  %128 = phi i32 [ 54, %35 ], [ 52, %43 ], [ 53, %59 ], [ 51, %65 ], [ 56, %88 ], [ 51, %83 ], [ 51, %82 ], [ %133, %129 ], [ 33, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %5) #7
  ret i32 %128

129:                                              ; preds = %122, %3
  %130 = getelementptr inbounds [13 x i32], [13 x i32]* %4, i64 0, i64 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  %133 = select i1 %132, i32 55, i32 0
  br label %127

134:                                              ; preds = %29
  %135 = load i32, i32* %23, align 4
  %136 = icmp eq i32 %135, 5
  br i1 %136, label %38, label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %23, align 4
  %139 = icmp eq i32 %138, 4
  br i1 %139, label %38, label %140

140:                                              ; preds = %137
  %141 = load i32, i32* %23, align 4
  %142 = icmp eq i32 %141, 6
  br i1 %142, label %38, label %35

143:                                              ; preds = %29
  %144 = load i32, i32* %23, align 4
  %145 = icmp eq i32 %144, 4
  br i1 %145, label %38, label %35

146:                                              ; preds = %29
  %147 = load i32, i32* %23, align 4
  %148 = icmp eq i32 %147, 6
  br i1 %148, label %38, label %35

149:                                              ; preds = %29
  %150 = load i32, i32* %23, align 4
  %151 = icmp eq i32 %150, 6
  br i1 %151, label %38, label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %23, align 4
  %154 = icmp eq i32 %153, 4
  br i1 %154, label %38, label %35

155:                                              ; preds = %29
  %156 = load i32, i32* %23, align 4
  %157 = icmp eq i32 %156, 4
  br i1 %157, label %38, label %35

158:                                              ; preds = %29
  %159 = load i32, i32* %23, align 4
  %160 = icmp eq i32 %159, 4
  br i1 %160, label %38, label %35

161:                                              ; preds = %29
  %162 = load i32, i32* %23, align 4
  %163 = icmp eq i32 %162, 4
  br i1 %163, label %38, label %35

164:                                              ; preds = %29
  %165 = load i32, i32* %23, align 4
  %166 = icmp eq i32 %165, 4
  br i1 %166, label %38, label %35

167:                                              ; preds = %29
  %168 = load i32, i32* %23, align 4
  %169 = icmp eq i32 %168, 4
  br i1 %169, label %38, label %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.NaClElfImage* @NaClElfImageNew(%struct.NaClDesc*, i32* nocapture) local_unnamed_addr #0 {
  %3 = alloca %struct.NaClElfImage, align 4
  %4 = alloca %union.anon, align 8
  %5 = alloca [128 x %struct.Elf64_Phdr], align 16
  %6 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4660, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 -86, i64 4148, i1 false)
  %7 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 64, i1 false)
  %8 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 2, i64 0
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 512, i1 false)
  %10 = bitcast %struct.NaClDesc* %0 to %struct.NaClDescVtbl**
  %11 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %10, align 8
  %12 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %11, i64 0, i32 5
  %13 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %12, align 8
  %14 = call i64 %13(%struct.NaClDesc* %0, i8* nonnull %7, i64 64, i64 0) #7
  %15 = icmp eq i64 %14, 64
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  store i32 8, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0)) #7
  br label %260

17:                                               ; preds = %2
  %18 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 0, i64 4
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %21, label %73

21:                                               ; preds = %17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* nonnull align 8 %7, i64 16, i1 false)
  %22 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 0, i64 4
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 1
  %24 = load i16, i16* %23, align 8
  %25 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 1
  store i16 %24, i16* %25, align 4
  %26 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 2
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 2
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 3
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %33, 4294967295
  br i1 %34, label %43, label %35

35:                                               ; preds = %21
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ugt i64 %37, 4294967295
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = icmp ugt i64 %41, 4294967295
  br i1 %42, label %43, label %44

43:                                               ; preds = %39, %35, %21
  store i32 61, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0)) #7
  br label %260

44:                                               ; preds = %39
  %45 = trunc i64 %33 to i32
  %46 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 4
  store i32 %45, i32* %46, align 4
  %47 = trunc i64 %37 to i32
  %48 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 5
  store i32 %47, i32* %48, align 4
  %49 = trunc i64 %41 to i32
  %50 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 6
  store i32 %49, i32* %50, align 4
  %51 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 7
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 7
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 8
  %55 = load i16, i16* %54, align 4
  %56 = icmp eq i16 %55, 64
  br i1 %56, label %58, label %57

57:                                               ; preds = %44
  store i32 60, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0), i32 64) #7
  br label %260

58:                                               ; preds = %44
  %59 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 8
  store i16 52, i16* %59, align 4
  %60 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 9
  store i16 32, i16* %60, align 2
  %61 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 10
  %62 = load i16, i16* %61, align 8
  %63 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 10
  store i16 %62, i16* %63, align 4
  %64 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 11
  %65 = load i16, i16* %64, align 2
  %66 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 11
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 12
  %68 = load i16, i16* %67, align 4
  %69 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 12
  store i16 %68, i16* %69, align 4
  %70 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 13
  %71 = load i16, i16* %70, align 2
  %72 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 13
  store i16 %71, i16* %72, align 2
  br label %74

73:                                               ; preds = %17
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* nonnull align 8 %7, i64 52, i1 false)
  br label %74

74:                                               ; preds = %73, %58
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28, i64 0, i64 0)) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0)) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i64 0, i64 0)) #7
  %75 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 0, i64 1
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i64 0, i64 0), i8* %75) #7
  %76 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 1
  %77 = load i16, i16* %76, align 4
  %78 = zext i16 %77 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0), i32 %78) #7
  %79 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 2
  %80 = load i16, i16* %79, align 2
  %81 = zext i16 %80 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.53, i64 0, i64 0), i32 %81) #7
  %82 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 3
  %83 = load i32, i32* %82, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0), i32 %83) #7
  %84 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 4
  %85 = load i32, i32* %84, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %85) #7
  %86 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 5
  %87 = load i32, i32* %86, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.56, i64 0, i64 0), i32 %87) #7
  %88 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 6
  %89 = load i32, i32* %88, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i64 0, i64 0), i32 %89) #7
  %90 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 7
  %91 = load i32, i32* %90, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0), i32 %91) #7
  %92 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 8
  %93 = load i16, i16* %92, align 4
  %94 = zext i16 %93 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i32 %94) #7
  %95 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 9
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.60, i64 0, i64 0), i32 %97) #7
  %98 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 10
  %99 = load i16, i16* %98, align 4
  %100 = zext i16 %99 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0), i32 %100) #7
  %101 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 11
  %102 = load i16, i16* %101, align 2
  %103 = zext i16 %102 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i32 %103) #7
  %104 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 12
  %105 = load i16, i16* %104, align 4
  %106 = zext i16 %105 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i64 0, i64 0), i32 %106) #7
  %107 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 0, i32 13
  %108 = load i16, i16* %107, align 2
  %109 = zext i16 %108 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.64, i64 0, i64 0), i32 %109) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i32 52) #7
  %110 = call i32 @NaClElfImageValidateElfHeader(%struct.NaClElfImage* nonnull %3)
  store i32 %110, i32* %1, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %260

112:                                              ; preds = %74
  %113 = load i16, i16* %98, align 4
  %114 = icmp ugt i16 %113, 128
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  store i32 9, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0)) #7
  br label %260

116:                                              ; preds = %112
  %117 = load i8, i8* %18, align 4
  %118 = icmp eq i8 %117, 2
  br i1 %118, label %119, label %195

119:                                              ; preds = %116
  %120 = bitcast [128 x %struct.Elf64_Phdr]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 7168, i8* nonnull %120) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %120, i8 -86, i64 7168, i1 false)
  %121 = getelementptr inbounds %union.anon, %union.anon* %4, i64 0, i32 0, i32 9
  %122 = load i16, i16* %121, align 2
  %123 = icmp eq i16 %122, 56
  br i1 %123, label %127, label %124

124:                                              ; preds = %119
  store i32 10, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #7
  %125 = load i16, i16* %121, align 2
  %126 = zext i16 %125 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i32 %126) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), i64 56) #7
  call void @llvm.lifetime.end.p0i8(i64 7168, i8* nonnull %120) #7
  br label %260

127:                                              ; preds = %119
  %128 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %10, align 8
  %129 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %128, i64 0, i32 5
  %130 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %129, align 8
  %131 = zext i16 %113 to i64
  %132 = mul nuw nsw i64 %131, 56
  %133 = load i32, i32* %86, align 4
  %134 = zext i32 %133 to i64
  %135 = call i64 %130(%struct.NaClDesc* %0, i8* nonnull %120, i64 %132, i64 %134) #7
  %136 = icmp ult i64 %135, -65536
  br i1 %136, label %137, label %146

137:                                              ; preds = %127
  %138 = load i16, i16* %98, align 4
  %139 = zext i16 %138 to i64
  %140 = mul nuw nsw i64 %139, 56
  %141 = icmp eq i64 %135, %140
  br i1 %141, label %142, label %146

142:                                              ; preds = %137
  %143 = icmp eq i16 %138, 0
  br i1 %143, label %194, label %144

144:                                              ; preds = %142
  %145 = zext i16 %138 to i64
  br label %147

146:                                              ; preds = %137, %127
  store i32 8, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 7168, i8* nonnull %120) #7
  br label %260

147:                                              ; preds = %173, %144
  %148 = phi i64 [ 0, %144 ], [ %192, %173 ]
  %149 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = icmp ugt i64 %150, 4294967295
  br i1 %151, label %172, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 3
  %154 = load i64, i64* %153, align 8
  %155 = icmp ugt i64 %154, 4294967295
  br i1 %155, label %172, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 4
  %158 = load i64, i64* %157, align 8
  %159 = icmp ugt i64 %158, 4294967295
  br i1 %159, label %172, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 5
  %162 = load i64, i64* %161, align 8
  %163 = icmp ugt i64 %162, 4294967295
  br i1 %163, label %172, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 6
  %166 = load i64, i64* %165, align 8
  %167 = icmp ugt i64 %166, 4294967295
  br i1 %167, label %172, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 7
  %170 = load i64, i64* %169, align 8
  %171 = icmp ugt i64 %170, 4294967295
  br i1 %171, label %172, label %173

172:                                              ; preds = %168, %164, %160, %156, %152, %147
  store i32 62, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.25, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 7168, i8* nonnull %120) #7
  br label %260

173:                                              ; preds = %168
  %174 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 0
  %175 = load i32, i32* %174, align 8
  %176 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 0
  store i32 %175, i32* %176, align 4
  %177 = trunc i64 %150 to i32
  %178 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 1
  store i32 %177, i32* %178, align 4
  %179 = trunc i64 %154 to i32
  %180 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 2
  store i32 %179, i32* %180, align 4
  %181 = trunc i64 %158 to i32
  %182 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 3
  store i32 %181, i32* %182, align 4
  %183 = trunc i64 %162 to i32
  %184 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 4
  store i32 %183, i32* %184, align 4
  %185 = trunc i64 %166 to i32
  %186 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 5
  store i32 %185, i32* %186, align 4
  %187 = getelementptr inbounds [128 x %struct.Elf64_Phdr], [128 x %struct.Elf64_Phdr]* %5, i64 0, i64 %148, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 6
  store i32 %188, i32* %189, align 4
  %190 = trunc i64 %170 to i32
  %191 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %148, i32 7
  store i32 %190, i32* %191, align 4
  %192 = add nuw nsw i64 %148, 1
  %193 = icmp eq i64 %192, %145
  br i1 %193, label %194, label %147

194:                                              ; preds = %173, %142
  call void @llvm.lifetime.end.p0i8(i64 7168, i8* nonnull %120) #7
  br label %219

195:                                              ; preds = %116
  %196 = load i16, i16* %95, align 2
  %197 = icmp eq i16 %196, 32
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  store i32 10, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #7
  %199 = load i16, i16* %95, align 2
  %200 = zext i16 %199 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i64 0, i64 0), i32 %200) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), i64 32) #7
  br label %260

201:                                              ; preds = %195
  %202 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %10, align 8
  %203 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %202, i64 0, i32 5
  %204 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %203, align 8
  %205 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 0
  %206 = bitcast %struct.Elf32_Phdr* %205 to i8*
  %207 = zext i16 %113 to i64
  %208 = shl nuw nsw i64 %207, 5
  %209 = load i32, i32* %86, align 4
  %210 = zext i32 %209 to i64
  %211 = call i64 %204(%struct.NaClDesc* %0, i8* %206, i64 %208, i64 %210) #7
  %212 = icmp ult i64 %211, -65536
  br i1 %212, label %213, label %218

213:                                              ; preds = %201
  %214 = load i16, i16* %98, align 4
  %215 = zext i16 %214 to i64
  %216 = shl nuw nsw i64 %215, 5
  %217 = icmp eq i64 %211, %216
  br i1 %217, label %219, label %218

218:                                              ; preds = %213, %201
  store i32 8, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0)) #7
  br label %260

219:                                              ; preds = %194, %213
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.28, i64 0, i64 0)) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0)) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30, i64 0, i64 0)) #7
  %220 = load i16, i16* %98, align 4
  %221 = icmp eq i16 %220, 0
  br i1 %221, label %254, label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %250, %222 ], [ 0, %219 ]
  %224 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 0
  %225 = load i32, i32* %224, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i32 %225) #7
  %226 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 1
  %227 = load i32, i32* %226, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i64 0, i64 0), i32 %227) #7
  %228 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 2
  %229 = load i32, i32* %228, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i32 %229) #7
  %230 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 3
  %231 = load i32, i32* %230, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.70, i64 0, i64 0), i32 %231) #7
  %232 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 4
  %233 = load i32, i32* %232, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i32 %233) #7
  %234 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 5
  %235 = load i32, i32* %234, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i32 %235) #7
  %236 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 6
  %237 = load i32, i32* %236, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), i32 %237) #7
  %238 = load i32, i32* %236, align 4
  %239 = and i32 %238, 4
  %240 = icmp eq i32 %239, 0
  %241 = select i1 %240, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i64 0, i64 0)
  %242 = and i32 %238, 2
  %243 = icmp eq i32 %242, 0
  %244 = select i1 %243, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0)
  %245 = and i32 %238, 1
  %246 = icmp eq i32 %245, 0
  %247 = select i1 %246, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.78, i64 0, i64 0)
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0), i8* %241, i8* %244, i8* %247) #7
  %248 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %3, i64 0, i32 1, i64 %223, i32 7
  %249 = load i32, i32* %248, align 4
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.79, i64 0, i64 0), i32 %249) #7
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i64 0, i64 0)) #7
  %250 = add nuw nsw i64 %223, 1
  %251 = load i16, i16* %98, align 4
  %252 = zext i16 %251 to i64
  %253 = icmp ult i64 %250, %252
  br i1 %253, label %222, label %254

254:                                              ; preds = %222, %219
  %255 = call noalias i8* @malloc(i64 4660) #7
  %256 = icmp eq i8* %255, null
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  store i32 20, i32* %1, align 4
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.31, i64 0, i64 0)) #7
  br label %260

258:                                              ; preds = %254
  %259 = bitcast i8* %255 to %struct.NaClElfImage*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %6, i64 4660, i1 false)
  store i32 0, i32* %1, align 4
  br label %260

260:                                              ; preds = %172, %146, %124, %74, %258, %257, %218, %198, %115, %57, %43, %16
  %261 = phi %struct.NaClElfImage* [ null, %16 ], [ null, %43 ], [ null, %57 ], [ null, %115 ], [ null, %257 ], [ %259, %258 ], [ null, %198 ], [ null, %218 ], [ null, %74 ], [ null, %124 ], [ null, %146 ], [ null, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 4660, i8* nonnull %6) #7
  ret %struct.NaClElfImage* %261
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClElfImageLoad(%struct.NaClElfImage* nocapture readonly, %struct.NaClDesc*, %struct.NaClApp* nocapture) local_unnamed_addr #0 {
  %4 = alloca %struct.NaClValidationMetadata, align 8
  %5 = alloca %struct.NaClPerfCounter, align 8
  %6 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 10
  %7 = load i16, i16* %6, align 4
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %190, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 0
  %11 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 3
  %12 = bitcast %struct.NaClValidationMetadata* %4 to i8*
  %13 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %5, i64 0, i32 0, i64 0
  %14 = bitcast %struct.NaClDesc* %1 to %struct.NaClDescVtbl**
  %15 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 7
  %16 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 64
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 46
  %18 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 40
  %19 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 41
  %20 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 16
  %21 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %2, i64 0, i32 25
  br label %22

22:                                               ; preds = %9, %185
  %23 = phi i64 [ 0, %9 ], [ %186, %185 ]
  %24 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %23, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, -65536
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %23, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, %25
  %31 = sub i32 %30, %26
  %32 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 2, i64 %23
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %185, label %35

35:                                               ; preds = %22
  %36 = trunc i64 %23 to i32
  call void (i32, i8*, ...) @NaClLog(i32 2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), i32 %36) #7
  %37 = load i32, i32* %28, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.33, i64 0, i64 0)) #7
  br label %185

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %23, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, %37
  %44 = zext i32 %43 to i64
  %45 = icmp ult i32 %43, %42
  br i1 %45, label %46, label %47

46:                                               ; preds = %40
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %47

47:                                               ; preds = %46, %40
  %48 = load i8, i8* %10, align 8
  %49 = zext i8 %48 to i64
  %50 = lshr i64 %44, %49
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i64 0, i64 0)) #7
  br label %53

53:                                               ; preds = %47, %52
  %54 = load i32, i32* %41, align 4
  %55 = and i32 %54, -65536
  %56 = zext i32 %55 to i64
  %57 = icmp eq i32 %55, 0
  br i1 %57, label %67, label %58

58:                                               ; preds = %53
  %59 = load i8, i8* %10, align 8
  %60 = zext i8 %59 to i64
  %61 = lshr i64 %56, %60
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %58
  %64 = load i64, i64* %11, align 8
  %65 = add i64 %64, %56
  %66 = icmp eq i64 %65, -1
  br i1 %66, label %67, label %68

67:                                               ; preds = %53, %58, %63
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 823, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.37, i64 0, i64 0)) #7
  br label %68

68:                                               ; preds = %63, %67
  %69 = phi i64 [ %65, %63 ], [ -1, %67 ]
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.38, i64 0, i64 0)) #7
  %70 = call i32 @NaClDescIsSafeForMmap(%struct.NaClDesc* %1) #7
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0)) #7
  br label %79

73:                                               ; preds = %68
  %74 = call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)) #7
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = zext i32 %31 to i64
  br label %171

78:                                               ; preds = %73
  call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0)) #7
  br label %79

79:                                               ; preds = %72, %78
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0)) #7
  %80 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %23, i32 6
  %81 = load i32, i32* %80, align 4
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %12) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 72, i1 false) #7
  call void @llvm.lifetime.start.p0i8(i64 712, i8* nonnull %13) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 712, i1 false) #7
  call void @NaClPerfCounterCtor(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.81, i64 0, i64 0)) #7
  %82 = zext i32 %31 to i64
  %83 = add nuw nsw i64 %82, 65535
  %84 = and i64 %83, 8589869056
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.82, i64 0, i64 0), i32 %81) #7
  switch i32 %81, label %133 [
    i32 5, label %85
    i32 6, label %134
    i32 4, label %152
  ]

85:                                               ; preds = %79
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.83, i64 0, i64 0)) #7
  %86 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %14, align 8
  %87 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %86, i64 0, i32 37
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.84, i64 0, i64 0), i32 %88) #7
  br label %170

91:                                               ; preds = %85
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.85, i64 0, i64 0)) #7
  %92 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0)) #7
  %93 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %5) #7
  %94 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %14, align 8
  %95 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %94, i64 0, i32 1
  %96 = load i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)** %95, align 8
  %97 = call i64 %96(%struct.NaClDesc* %1, %struct.NaClDescEffector* nonnull @NaClDescEffectorTrustedMemStruct, i8* null, i64 %84, i32 1, i32 2, i64 %27) #7
  %98 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.87, i64 0, i64 0)) #7
  %99 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %5) #7
  %100 = icmp ult i64 %97, -65536
  br i1 %100, label %102, label %101

101:                                              ; preds = %91
  call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.88, i64 0, i64 0)) #7
  br label %170

102:                                              ; preds = %91
  call void @NaClMetadataFromNaClDescCtor(%struct.NaClValidationMetadata* nonnull %4, %struct.NaClDesc* %1) #7
  %103 = load i64, i64* %15, align 8
  %104 = add i64 %103, -131072
  %105 = icmp eq i64 %104, %82
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 640, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.89, i64 0, i64 0)) #7
  br label %107

107:                                              ; preds = %106, %102
  %108 = call i32 @NaClFaultInjectionFaultP(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.90, i64 0, i64 0)) #7
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %114, label %110

110:                                              ; preds = %107
  %111 = call i64 @NaClFaultInjectionValue() #7
  %112 = trunc i64 %111 to i32
  %113 = inttoptr i64 %97 to i8*
  br label %125

114:                                              ; preds = %107
  %115 = load %struct.NaClValidatorInterface*, %struct.NaClValidatorInterface** %16, align 8
  %116 = getelementptr inbounds %struct.NaClValidatorInterface, %struct.NaClValidatorInterface* %115, i64 0, i32 3
  %117 = load i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)** %116, align 8
  %118 = inttoptr i64 %97 to i8*
  %119 = load i32, i32* %17, align 8
  %120 = icmp ne i32 %119, 0
  %121 = zext i1 %120 to i32
  %122 = load %struct.NaClCPUFeaturesAbstract*, %struct.NaClCPUFeaturesAbstract** %18, align 8
  %123 = load %struct.NaClValidationCache*, %struct.NaClValidationCache** %19, align 8
  %124 = call i32 %117(i64 %56, i8* %118, i64 %82, i32 0, i32 %121, i32 1, %struct.NaClCPUFeaturesAbstract* %122, %struct.NaClValidationMetadata* nonnull %4, %struct.NaClValidationCache* %123) #7
  br label %125

125:                                              ; preds = %114, %110
  %126 = phi i8* [ %118, %114 ], [ %113, %110 ]
  %127 = phi i32 [ %124, %114 ], [ %112, %110 ]
  %128 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.91, i64 0, i64 0)) #7
  %129 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %5) #7
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.92, i64 0, i64 0), i32 %127) #7
  call void @NaClMetadataDtor(%struct.NaClValidationMetadata* nonnull %4) #7
  call void @NaClHostDescUnmapUnsafe(i8* %126, i64 %84) #7
  %130 = icmp eq i32 %127, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %125
  call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.93, i64 0, i64 0)) #7
  br label %170

132:                                              ; preds = %125
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.94, i64 0, i64 0)) #7
  call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.95, i64 0, i64 0)) #7
  store i32 1, i32* %20, align 4
  br label %134

133:                                              ; preds = %79
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.96, i64 0, i64 0), i32 %81) #7
  br label %134

134:                                              ; preds = %133, %132, %79
  %135 = phi i32 [ 0, %133 ], [ 5, %132 ], [ 3, %79 ]
  %136 = icmp eq i64 %84, %82
  br i1 %136, label %152, label %137

137:                                              ; preds = %134
  %138 = add nsw i64 %84, -65536
  %139 = sub nsw i64 %82, %138
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.97, i64 0, i64 0)) #7
  %140 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %14, align 8
  %141 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %140, i64 0, i32 5
  %142 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %141, align 8
  %143 = add i64 %69, %138
  %144 = inttoptr i64 %143 to i8*
  %145 = add nsw i64 %138, %27
  %146 = call i64 %142(%struct.NaClDesc* %1, i8* %144, i64 %139, i64 %145) #7
  %147 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.98, i64 0, i64 0)) #7
  %148 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %5) #7
  %149 = icmp ult i64 %146, -65536
  %150 = icmp eq i64 %146, %139
  %151 = and i1 %149, %150
  br i1 %151, label %152, label %169

152:                                              ; preds = %137, %134, %79
  %153 = phi i32 [ %135, %134 ], [ 1, %79 ], [ %135, %137 ]
  %154 = phi i64 [ %82, %134 ], [ %84, %79 ], [ %138, %137 ]
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %152
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.100, i64 0, i64 0)) #7
  br label %184

157:                                              ; preds = %152
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.101, i64 0, i64 0), i64 %154, i64 %154, i64 %69, i32 %26, i32 %26) #7
  %158 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %14, align 8
  %159 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %158, i64 0, i32 1
  %160 = load i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)** %159, align 8
  %161 = load %struct.NaClDescEffector*, %struct.NaClDescEffector** %21, align 8
  %162 = inttoptr i64 %69 to i8*
  %163 = call i64 %160(%struct.NaClDesc* %1, %struct.NaClDescEffector* %161, i8* %162, i64 %154, i32 %153, i32 18, i64 %27) #7
  %164 = call i32 @NaClPerfCounterMark(%struct.NaClPerfCounter* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i64 0, i64 0)) #7
  %165 = call i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter* nonnull %5) #7
  %166 = icmp eq i64 %163, %69
  br i1 %166, label %168, label %167

167:                                              ; preds = %157
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.103, i64 0, i64 0), i64 %69, i32 %153, i64 %163) #7
  br label %168

168:                                              ; preds = %167, %157
  call void @NaClFileMappingForValgrind(i64 %69, i64 %154, i64 %27) #7
  br label %184

169:                                              ; preds = %137
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.99, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #7
  br label %190

170:                                              ; preds = %131, %101, %90
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #7
  br label %171

171:                                              ; preds = %76, %170
  %172 = phi i64 [ %77, %76 ], [ %82, %170 ]
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.42, i64 0, i64 0), i32 %31, i32 %31, i64 %69, i32 %26, i32 %26) #7
  %173 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %14, align 8
  %174 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %173, i64 0, i32 5
  %175 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %174, align 8
  %176 = inttoptr i64 %69 to i8*
  %177 = call i64 %175(%struct.NaClDesc* %1, i8* %176, i64 %172, i64 %27) #7
  %178 = icmp ult i64 %177, -65536
  %179 = icmp eq i64 %177, %172
  %180 = and i1 %178, %179
  br i1 %180, label %183, label %181

181:                                              ; preds = %171
  %182 = trunc i64 %23 to i32
  call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0), i32 %182) #7
  br label %190

183:                                              ; preds = %171
  call void @NaClFileMappingForValgrind(i64 %69, i64 %172, i64 %27) #7
  br label %185

184:                                              ; preds = %168, %156
  call void @llvm.lifetime.end.p0i8(i64 712, i8* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %12) #7
  br label %185

185:                                              ; preds = %22, %183, %39, %184
  %186 = add nuw nsw i64 %23, 1
  %187 = load i16, i16* %6, align 4
  %188 = zext i16 %187 to i64
  %189 = icmp ult i64 %186, %188
  br i1 %189, label %22, label %190

190:                                              ; preds = %185, %3, %169, %181
  %191 = phi i32 [ 56, %181 ], [ 56, %169 ], [ 0, %3 ], [ 0, %185 ]
  ret i32 %191
}

declare i32 @NaClDescIsSafeForMmap(%struct.NaClDesc*) local_unnamed_addr #2

declare i32 @NaClFaultInjectionFaultP(i8*) local_unnamed_addr #2

declare void @NaClFileMappingForValgrind(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClElfImageLoadDynamically(%struct.NaClElfImage* nocapture readonly, %struct.NaClApp*, %struct.NaClDesc*, %struct.NaClValidationMetadata*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 10
  %6 = load i16, i16* %5, align 4
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %111, label %8

8:                                                ; preds = %4
  %9 = bitcast %struct.NaClDesc* %2 to %struct.NaClDescVtbl**
  %10 = icmp eq %struct.NaClValidationMetadata* %3, null
  %11 = getelementptr inbounds %struct.NaClValidationMetadata, %struct.NaClValidationMetadata* %3, i64 0, i32 1
  %12 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %1, i64 0, i32 0
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %1, i64 0, i32 3
  %14 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %1, i64 0, i32 23
  br label %15

15:                                               ; preds = %8, %106
  %16 = phi i64 [ 0, %8 ], [ %107, %106 ]
  %17 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -65536
  %20 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -65536
  %23 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = add i32 %24, %21
  %26 = sub i32 %25, %22
  %27 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %21, %22
  %30 = add i32 %29, %28
  %31 = icmp ugt i32 %26, %30
  br i1 %31, label %111, label %32

32:                                               ; preds = %15
  %33 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %106

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 1, i64 %16, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %36
  %42 = zext i32 %26 to i64
  %43 = tail call noalias i8* @malloc(i64 %42) #7
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0)) #7
  br label %111

46:                                               ; preds = %41
  %47 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %48 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %47, i64 0, i32 5
  %49 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %48, align 8
  %50 = zext i32 %22 to i64
  %51 = tail call i64 %49(%struct.NaClDesc* %2, i8* nonnull %43, i64 %42, i64 %50) #7
  %52 = icmp ult i64 %51, -65536
  %53 = icmp eq i64 %51, %42
  %54 = and i1 %52, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %46
  tail call void @free(i8* nonnull %43) #7
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.45, i64 0, i64 0)) #7
  br label %111

56:                                               ; preds = %46
  br i1 %10, label %58, label %57

57:                                               ; preds = %56
  store i64 %50, i64* %11, align 8
  br label %58

58:                                               ; preds = %56, %57
  %59 = tail call i32 @NaClTextDyncodeCreate(%struct.NaClApp* %1, i32 %19, i8* nonnull %43, i32 %26, %struct.NaClValidationMetadata* %3) #7
  tail call void @free(i8* nonnull %43) #7
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %106, label %61

61:                                               ; preds = %58
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.46, i64 0, i64 0)) #7
  br label %111

62:                                               ; preds = %36
  %63 = zext i32 %19 to i64
  %64 = icmp eq i32 %19, 0
  %65 = load i8, i8* %12, align 8
  br i1 %64, label %70, label %66

66:                                               ; preds = %62
  %67 = zext i8 %65 to i64
  %68 = lshr i64 %63, %67
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %66, %62
  %71 = zext i8 %65 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.104, i64 0, i64 0), i64 %63, i32 %71) #7
  br label %72

72:                                               ; preds = %66, %70
  %73 = load i64, i64* %13, align 8
  %74 = add i64 %73, %63
  %75 = inttoptr i64 %74 to i8*
  %76 = zext i32 %30 to i64
  %77 = add nuw nsw i64 %76, 65535
  %78 = and i64 %77, 8589869056
  %79 = inttoptr i64 %63 to i8*
  %80 = tail call i32 @NaClSysMmapIntern(%struct.NaClApp* %1, i8* %79, i64 %78, i32 3, i32 34, i32 -1, i64 0) #7
  %81 = icmp eq i32 %19, %80
  br i1 %81, label %83, label %82

82:                                               ; preds = %72
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.47, i64 0, i64 0)) #7
  br label %111

83:                                               ; preds = %72
  %84 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %85 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %84, i64 0, i32 5
  %86 = load i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)** %85, align 8
  %87 = zext i32 %26 to i64
  %88 = zext i32 %22 to i64
  %89 = tail call i64 %86(%struct.NaClDesc* %2, i8* %75, i64 %87, i64 %88) #7
  %90 = icmp ult i64 %89, -65536
  %91 = icmp eq i64 %89, %87
  %92 = and i1 %90, %91
  br i1 %92, label %94, label %93

93:                                               ; preds = %83
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.48, i64 0, i64 0)) #7
  br label %111

94:                                               ; preds = %83
  %95 = load i32, i32* %37, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %106

98:                                               ; preds = %94
  %99 = tail call i32 @NaClMprotect(i8* %75, i64 %78, i32 1) #7
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %98
  %102 = lshr exact i32 %19, 12
  %103 = zext i32 %102 to i64
  %104 = lshr exact i64 %78, 12
  tail call void @NaClVmmapAddWithOverwrite(%struct.NaClVmmap* %14, i64 %103, i64 %104, i32 1, i32 2, %struct.NaClDesc* null, i64 0, i64 0) #7
  br label %106

105:                                              ; preds = %98
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.49, i64 0, i64 0)) #7
  br label %111

106:                                              ; preds = %32, %101, %94, %58
  %107 = add nuw nsw i64 %16, 1
  %108 = load i16, i16* %5, align 4
  %109 = zext i16 %108 to i64
  %110 = icmp ult i64 %107, %109
  br i1 %110, label %15, label %111

111:                                              ; preds = %106, %15, %4, %105, %93, %82, %61, %55, %45
  %112 = phi i32 [ 32, %61 ], [ 8, %55 ], [ 20, %45 ], [ 36, %105 ], [ 8, %93 ], [ 32, %82 ], [ 0, %4 ], [ 0, %106 ], [ 32, %15 ]
  ret i32 %112
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare i32 @NaClTextDyncodeCreate(%struct.NaClApp*, i32, i8*, i32, %struct.NaClValidationMetadata*) local_unnamed_addr #2

declare i32 @NaClSysMmapIntern(%struct.NaClApp*, i8*, i64, i32, i32, i32, i64) local_unnamed_addr #2

declare i32 @NaClMprotect(i8*, i64, i32) local_unnamed_addr #2

declare void @NaClVmmapAddWithOverwrite(%struct.NaClVmmap*, i64, i64, i32, i32, %struct.NaClDesc*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClElfImageDelete(%struct.NaClElfImage* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @free(i8* %2) #7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @NaClElfImageGetEntryPoint(%struct.NaClElfImage* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.NaClElfImage, %struct.NaClElfImage* %0, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  ret i64 %4
}

declare void @NaClPerfCounterCtor(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #2

declare i32 @NaClPerfCounterMark(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #2

declare i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter*) local_unnamed_addr #2

declare void @NaClMetadataFromNaClDescCtor(%struct.NaClValidationMetadata*, %struct.NaClDesc*) local_unnamed_addr #2

declare i64 @NaClFaultInjectionValue() local_unnamed_addr #2

declare void @NaClMetadataDtor(%struct.NaClValidationMetadata*) local_unnamed_addr #2

declare void @NaClHostDescUnmapUnsafe(i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
