; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/drawing_recorder.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/drawing_recorder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DrawingRecorder" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.312", [4 x i8] }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"class.absl::optional.312" = type { %"class.absl::optional_internal::optional_data.313" }
%"class.absl::optional_internal::optional_data.313" = type { %"class.absl::optional_internal::optional_data_base.314" }
%"class.absl::optional_internal::optional_data_base.314" = type { %"class.absl::optional_internal::optional_data_dtor_base.315" }
%"class.absl::optional_internal::optional_data_dtor_base.315" = type { i8, %union.anon.316 }
%union.anon.316 = type { i32 }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.94", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.277", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr, %class.scoped_refptr, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.75", i32, i32, i32, [4 x i8], %"class.WTF::HashMap", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.0" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.50", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.3, %class.scoped_refptr.4, %class.scoped_refptr.5 }
%class.scoped_refptr.3 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.16", i8, i8, %class.scoped_refptr.3, i32, i32 }
%"class.WTF::RefCounted.16" = type { %"class.base::RefCounted.17" }
%"class.base::RefCounted.17" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.4 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.335" }
%"class.blink::PaintPropertyNode.335" = type { %"class.WTF::RefCounted.336", i8, i8, %class.scoped_refptr.4, i32, i32 }
%"class.WTF::RefCounted.336" = type { %"class.base::RefCounted.337" }
%"class.base::RefCounted.337" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.5 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.332" }
%"class.blink::PaintPropertyNode.332" = type { %"class.WTF::RefCounted.333", i8, i8, %class.scoped_refptr.5, i32, i32 }
%"class.WTF::RefCounted.333" = type { %"class.base::RefCounted.334" }
%"class.base::RefCounted.334" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.6", %"class.WTF::Vector.11", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.11" = type { %"class.WTF::VectorBuffer.12" }
%"class.WTF::VectorBuffer.12" = type { %"class.WTF::VectorBufferBase.13" }
%"class.WTF::VectorBufferBase.13" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.29" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.22, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.23", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.18" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.22 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.317", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.317" = type { %"class.WTF::RefCounted.318", i8, i8, %class.scoped_refptr.22, i32, i32 }
%"class.WTF::RefCounted.318" = type { %"class.base::RefCounted.319" }
%"class.base::RefCounted.319" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.320" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.320" = type { %"class.absl::optional_internal::optional_data.321" }
%"class.absl::optional_internal::optional_data.321" = type { %"class.absl::optional_internal::optional_data_base.322" }
%"class.absl::optional_internal::optional_data_base.322" = type { %"class.absl::optional_internal::optional_data_dtor_base.323" }
%"class.absl::optional_internal::optional_data_dtor_base.323" = type { i8, %union.anon.324 }
%union.anon.324 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.325", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.327" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [3 x i8], %union.anon }
%union.anon = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.0"*, %"class.absl::optional.58", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.65", %"class.WTF::Vector.70" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67", [128 x i8] }
%"class.WTF::VectorBufferBase.67" = type { i32*, i32, i32 }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72", [128 x i8] }
%"class.WTF::VectorBufferBase.72" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.84", %"class.WTF::Vector.89" }
%"class.WTF::HashMap.84" = type { %"class.WTF::HashTable.85" }
%"class.WTF::HashTable.85" = type <{ %"struct.WTF::KeyValuePair.88"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.88" = type opaque
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.std::__1::unique_ptr.97"*, i32, i32 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp, %class.sk_sp.105, %class.sk_sp.153, %class.sk_sp.154, %class.sk_sp.155, %class.sk_sp.156, i32, float, float, i32, %union.anon.163, [4 x i8] }>
%class.sk_sp = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.100" }>
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i32 }
%class.sk_sp.105 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.106", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.118, i32, %"class.absl::optional.129", %"class.std::__1::vector.134", %"class.std::__1::vector.141", %class.sk_sp.148, %class.sk_sp.111, i32, [4 x i8] }>
%"class.absl::optional.106" = type { %"class.absl::optional_internal::optional_data.107" }
%"class.absl::optional_internal::optional_data.107" = type { %"class.absl::optional_internal::optional_data_base.108" }
%"class.absl::optional_internal::optional_data_base.108" = type { %"class.absl::optional_internal::optional_data_dtor_base.109" }
%"class.absl::optional_internal::optional_data_dtor_base.109" = type { i8, %union.anon.110 }
%union.anon.110 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.111, %class.sk_sp.118, %"class.gfx::Rect", i32, %class.sk_sp.123, %class.sk_sp.127, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.111, %class.scoped_refptr.128 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.123 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.112, i32, i32 }
%class.sk_sp.112 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.100" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.113" }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.124" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.127 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.128 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.100" }
%class.sk_sp.118 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.119", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { i8* }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { i32*, i32*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i32* }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { float*, float*, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { float* }
%class.sk_sp.148 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.149", [7 x i8] }>
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i8 }
%class.sk_sp.111 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.153 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.154 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.155 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.156 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.157, i32, %"class.absl::optional.158", i8, i32 }
%class.sk_sp.157 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %struct.SkRect }
%union.anon.163 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.169, %"class.std::__1::unique_ptr.250" }
%class.scoped_refptr.169 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type <{ %"class.base::RefCountedThreadSafe.170", [4 x i8], %"class.cc::RTree", %"class.cc::DiscardableImageMap", %"class.cc::PaintOpBuffer", %"class.std::__1::vector.229", %"class.std::__1::vector.236", %"class.std::__1::vector.243", i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe.170" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<unsigned long>::Branch", %"class.std::__1::vector.171", i8, [7 x i8] }>
%"struct.cc::RTree<unsigned long>::Branch" = type { %"struct.cc::RTree<unsigned long>::Node"*, i64, %"class.gfx::Rect" }
%"struct.cc::RTree<unsigned long>::Node" = type opaque
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.cc::RTree<unsigned long>::Node"*, %"struct.cc::RTree<unsigned long>::Node"*, %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.cc::RTree<unsigned long>::Node"* }
%"class.cc::DiscardableImageMap" = type { %"class.base::flat_map", %"class.std::__1::vector.185", %"class.base::flat_map.192", i8, i8, [6 x i8], %"class.cc::RTree.202", %"class.std::__1::vector.221" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.178" }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.180" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"*, %"class.std::__1::__compressed_pair.187" }
%"struct.cc::DiscardableImageMap::AnimatedImageMetadata" = type { i32, i32, %"class.std::__1::vector", i32, i32 }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.cc::DiscardableImageMap::AnimatedImageMetadata"* }
%"class.base::flat_map.192" = type { %"class.base::internal::flat_tree.193" }
%"class.base::internal::flat_tree.193" = type { %"class.std::__1::vector.194" }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.std::__1::pair.196"*, %"struct.std::__1::pair.196"*, %"class.std::__1::__compressed_pair.197" }
%"struct.std::__1::pair.196" = type { i32, i32 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.std::__1::pair.196"* }
%"class.cc::RTree.202" = type <{ i64, %"struct.cc::RTree<cc::DrawImage>::Branch", %"class.std::__1::vector.213", i8, [7 x i8] }>
%"struct.cc::RTree<cc::DrawImage>::Branch" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.cc::DrawImage", %"class.gfx::Rect" }
%"struct.cc::RTree<cc::DrawImage>::Node" = type opaque
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.203", %"class.absl::optional.208", float, [4 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional.203" = type { %"class.absl::optional_internal::optional_data.204" }
%"class.absl::optional_internal::optional_data.204" = type { %"class.absl::optional_internal::optional_data_base.205" }
%"class.absl::optional_internal::optional_data_base.205" = type { %"class.absl::optional_internal::optional_data_dtor_base.206" }
%"class.absl::optional_internal::optional_data_dtor_base.206" = type { i8, %union.anon.207 }
%union.anon.207 = type { i64 }
%"class.absl::optional.208" = type { %"class.absl::optional_internal::optional_data.209" }
%"class.absl::optional_internal::optional_data.209" = type { %"class.absl::optional_internal::optional_data_base.210" }
%"class.absl::optional_internal::optional_data_base.210" = type { %"class.absl::optional_internal::optional_data_dtor_base.211" }
%"class.absl::optional_internal::optional_data_dtor_base.211" = type { i8, %union.anon.212 }
%union.anon.212 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.cc::RTree<cc::DrawImage>::Node"*, %"struct.cc::RTree<cc::DrawImage>::Node"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.cc::RTree<cc::DrawImage>::Node"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"struct.std::__1::pair.223"*, %"struct.std::__1::pair.223"*, %"class.std::__1::__compressed_pair.224" }
%"struct.std::__1::pair.223" = type opaque
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.std::__1::pair.223"* }
%"class.std::__1::vector.229" = type { %"class.std::__1::__vector_base.230" }
%"class.std::__1::__vector_base.230" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.gfx::Rect"* }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { i64*, i64*, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { i64* }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"struct.cc::DisplayItemList::PairedBeginInfo"*, %"class.std::__1::__compressed_pair.245" }
%"struct.cc::DisplayItemList::PairedBeginInfo" = type { i64, i64 }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.cc::DisplayItemList::PairedBeginInfo"* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.253", %struct.SkRect }
%"class.absl::optional.253" = type { %"class.absl::optional_internal::optional_data.254" }
%"class.absl::optional_internal::optional_data.254" = type { %"class.absl::optional_internal::optional_data_base.255" }
%"class.absl::optional_internal::optional_data_base.255" = type { %"class.absl::optional_internal::optional_data_dtor_base.256" }
%"class.absl::optional_internal::optional_data_dtor_base.256" = type { i8, %union.anon.257 }
%union.anon.257 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.258, [384 x i64], %class.sk_sp.259, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.260", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.266" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.258 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.259 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.298", %"class.std::__1::unique_ptr.303" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.292", %class.sk_sp.154 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.298" = type { %"class.absl::optional_internal::optional_data.299" }
%"class.absl::optional_internal::optional_data.299" = type { %"class.absl::optional_internal::optional_data_base.300" }
%"class.absl::optional_internal::optional_data_base.300" = type { %"class.absl::optional_internal::optional_data_dtor_base.301" }
%"class.absl::optional_internal::optional_data_dtor_base.301" = type { i8, %union.anon.302 }
%union.anon.302 = type { i32 }
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.100", [4 x i8] }>
%"class.blink::DisplayItem" = type <{ %"class.blink::DisplayItemClient"*, %"class.blink::IntRect", i32, i16, [2 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.341 }
%union.anon.341 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink15DisplayItemList16AllocateItemSlotEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm = comdat any

$_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DisplayItemList::ItemSlot]\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink15DrawingRecorderC1ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE = hidden unnamed_addr alias void (%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect"*), void (%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect"*)* @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE
@_ZN5blink15DrawingRecorderD1Ev = hidden unnamed_addr alias void (%"class.blink::DrawingRecorder"*), void (%"class.blink::DrawingRecorder"*)* @_ZN5blink15DrawingRecorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* nocapture, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::FloatRect", align 4
  %7 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 0
  store %"class.blink::GraphicsContext"* %1, %"class.blink::GraphicsContext"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 1
  store %"class.blink::DisplayItemClient"* %2, %"class.blink::DisplayItemClient"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 2
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 3
  %11 = bitcast %"class.blink::IntRect"* %10 to i8*
  %12 = bitcast %"class.blink::IntRect"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.absl::optional.312", %"class.absl::optional.312"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  tail call void @_ZN5blink15GraphicsContext20SetInDrawingRecorderEb(%"class.blink::GraphicsContext"* %1, i1 zeroext true) #4
  %15 = bitcast %"class.blink::FloatRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #4
  %16 = bitcast %"class.blink::FloatRect"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 16, i1 false)
  call void @_ZN5blink15GraphicsContext14BeginRecordingERKNS_9FloatRectE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %6) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #4
  %17 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %1, i64 0, i32 10
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %5
  %21 = bitcast %"class.blink::DisplayItemClient"* %2 to i32 (%"class.blink::DisplayItemClient"*)***
  %22 = load i32 (%"class.blink::DisplayItemClient"*)**, i32 (%"class.blink::DisplayItemClient"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::DisplayItemClient"*)*, i32 (%"class.blink::DisplayItemClient"*)** %22, i64 3
  %24 = load i32 (%"class.blink::DisplayItemClient"*)*, i32 (%"class.blink::DisplayItemClient"*)** %23, align 8
  %25 = call i32 %24(%"class.blink::DisplayItemClient"* %2) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %33, label %27

27:                                               ; preds = %20
  %28 = call i32 @_ZNK5blink15GraphicsContext12GetDOMNodeIdEv(%"class.blink::GraphicsContext"* %1) #4
  %29 = bitcast %"class.absl::optional.312"* %13 to i64*
  %30 = zext i32 %28 to i64
  %31 = shl nuw i64 %30, 32
  %32 = or i64 %31, 1
  store i64 %32, i64* %29, align 4
  call void @_ZN5blink15GraphicsContext12SetDOMNodeIdEi(%"class.blink::GraphicsContext"* %1, i32 %25) #4
  br label %33

33:                                               ; preds = %5, %27, %20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5blink15GraphicsContext20SetInDrawingRecorderEb(%"class.blink::GraphicsContext"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext14BeginRecordingERKNS_9FloatRectE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink15GraphicsContext12GetDOMNodeIdEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #2

declare void @_ZN5blink15GraphicsContext12SetDOMNodeIdEi(%"class.blink::GraphicsContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15DrawingRecorderD2Ev(%"class.blink::DrawingRecorder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.118, align 8
  %3 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 0
  %8 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  tail call void @_ZN5blink15GraphicsContext12SetDOMNodeIdEi(%"class.blink::GraphicsContext"* %8, i32 %10) #4
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 0
  %13 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %12, align 8
  tail call void @_ZN5blink15GraphicsContext20SetInDrawingRecorderEb(%"class.blink::GraphicsContext"* %13, i1 zeroext false) #4
  %14 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %12, align 8
  %15 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %14, i64 0, i32 1
  %16 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 1
  %18 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::DrawingRecorder", %"class.blink::DrawingRecorder"* %0, i64 0, i32 3
  %21 = bitcast %class.sk_sp.118* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN5blink15GraphicsContext12EndRecordingEv(%class.sk_sp.118* nonnull sret %2, %"class.blink::GraphicsContext"* %14) #4
  %22 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %16, i64 0, i32 2, i32 0
  %23 = load %"class.blink::PaintArtifact"*, %"class.blink::PaintArtifact"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::PaintArtifact", %"class.blink::PaintArtifact"* %23, i64 0, i32 2
  %25 = call %"struct.blink::DisplayItemList::ItemSlot"* @_ZN5blink15DisplayItemList16AllocateItemSlotEv(%"class.blink::DisplayItemList"* %24) #4
  %26 = load i32, i32* %19, align 4
  %27 = getelementptr inbounds %class.sk_sp.118, %class.sk_sp.118* %2, i64 0, i32 0
  %28 = bitcast %class.sk_sp.118* %2 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %27, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %11
  %32 = inttoptr i64 %29 to %"class.cc::PaintOpBuffer"*
  %33 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %32, i64 0, i32 5
  %34 = load i64, i64* %33, align 8
  %35 = icmp ne i64 %34, 0
  %36 = zext i1 %35 to i16
  %37 = shl nuw nsw i16 %36, 10
  br label %38

38:                                               ; preds = %31, %11
  %39 = phi i16 [ 0, %11 ], [ %37, %31 ]
  %40 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %25 to %"class.blink::DisplayItemClient"**
  store %"class.blink::DisplayItemClient"* %18, %"class.blink::DisplayItemClient"** %40, align 8
  %41 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %25, i64 0, i32 0, i64 8
  %42 = bitcast %"class.blink::IntRect"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %42, i64 16, i1 false) #4
  %43 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %25, i64 0, i32 0, i64 24
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %25, i64 0, i32 0, i64 28
  %46 = bitcast i8* %45 to i16*
  %47 = trunc i32 %26 to i16
  %48 = load i16, i16* %46, align 4
  %49 = and i16 %47, 255
  %50 = and i16 %48, -256
  %51 = or i16 %50, %49
  store i16 %51, i16* %46, align 4
  %52 = bitcast %"class.blink::DisplayItemClient"* %18 to i8 (%"class.blink::DisplayItemClient"*)***
  %53 = load i8 (%"class.blink::DisplayItemClient"*)**, i8 (%"class.blink::DisplayItemClient"*)*** %52, align 8
  %54 = getelementptr inbounds i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %53, i64 4
  %55 = load i8 (%"class.blink::DisplayItemClient"*)*, i8 (%"class.blink::DisplayItemClient"*)** %54, align 8
  %56 = call zeroext i8 %55(%"class.blink::DisplayItemClient"* %18) #4
  %57 = load i16, i16* %46, align 4
  %58 = and i8 %56, 3
  %59 = zext i8 %58 to i16
  %60 = shl nuw nsw i16 %59, 8
  %61 = and i16 %57, -1793
  %62 = or i16 %61, %39
  %63 = or i16 %62, %60
  store i16 %63, i16* %46, align 4
  %64 = getelementptr inbounds %"class.blink::DisplayItemClient", %"class.blink::DisplayItemClient"* %18, i64 0, i32 1
  %65 = load i8, i8* %64, align 8
  %66 = icmp ne i8 %65, 20
  %67 = zext i1 %66 to i16
  %68 = shl nuw nsw i16 %67, 11
  %69 = and i16 %63, -30721
  %70 = or i16 %69, %68
  %71 = or i16 %70, 4096
  store i16 %71, i16* %46, align 4
  %72 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %25, i64 0, i32 0, i64 32
  %73 = and i16 %39, 1024
  %74 = icmp eq i16 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %38
  %76 = bitcast i8* %72 to i64*
  store i64 %29, i64* %76, align 8
  br label %90

77:                                               ; preds = %38
  %78 = bitcast i8* %72 to %"class.cc::PaintOpBuffer"**
  store %"class.cc::PaintOpBuffer"* null, %"class.cc::PaintOpBuffer"** %78, align 8
  br i1 %30, label %90, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %29 to %"class.cc::PaintOpBuffer"*
  %81 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %90

84:                                               ; preds = %79
  %85 = inttoptr i64 %29 to %class.SkRefCntBase*
  %86 = inttoptr i64 %29 to void (%class.SkRefCntBase*)***
  %87 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %86, align 8
  %88 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, i64 2
  %89 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, align 8
  call void %89(%class.SkRefCntBase* nonnull %85) #4
  br label %90

90:                                               ; preds = %75, %77, %79, %84
  %91 = bitcast %"struct.blink::DisplayItemList::ItemSlot"* %25 to %"class.blink::DisplayItem"*
  %92 = getelementptr inbounds %"class.blink::PaintController", %"class.blink::PaintController"* %16, i64 0, i32 19
  %93 = load i32, i32* %92, align 8
  store i32 %93, i32* %44, align 8
  call void @_ZN5blink15PaintController14ProcessNewItemERNS_11DisplayItemE(%"class.blink::PaintController"* %16, %"class.blink::DisplayItem"* dereferenceable(32) %91) #4
  %94 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %27, align 8
  %95 = icmp eq %"class.cc::PaintOpBuffer"* %94, null
  br i1 %95, label %106, label %96

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %94, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %106

100:                                              ; preds = %96
  %101 = bitcast %"class.cc::PaintOpBuffer"* %94 to %class.SkRefCntBase*
  %102 = bitcast %"class.cc::PaintOpBuffer"* %94 to void (%class.SkRefCntBase*)***
  %103 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %102, align 8
  %104 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, i64 2
  %105 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %104, align 8
  call void %105(%class.SkRefCntBase* nonnull %101) #4
  br label %106

106:                                              ; preds = %90, %96, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  ret void
}

declare void @_ZN5blink15GraphicsContext12EndRecordingEv(%class.sk_sp.118* sret, %"class.blink::GraphicsContext"*) local_unnamed_addr #2

declare void @_ZN5blink15PaintController14ProcessNewItemERNS_11DisplayItemE(%"class.blink::PaintController"*, %"class.blink::DisplayItem"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::DisplayItemList::ItemSlot"* @_ZN5blink15DisplayItemList16AllocateItemSlotEv(%"class.blink::DisplayItemList"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  br label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ult i32 %13, %11
  br i1 %14, label %15, label %45, !prof !3

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  %18 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %17, null
  %19 = zext i32 %11 to i64
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64 %19) #4
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv, i64 0, i64 0)) #4
  br i1 %18, label %22, label %27

22:                                               ; preds = %15
  %23 = ptrtoint i8* %21 to i64
  %24 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = udiv i64 %20, 40
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %12, align 8
  br label %45

27:                                               ; preds = %15
  %28 = udiv i64 %20, 40
  %29 = ptrtoint i8* %21 to i64
  %30 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  %31 = icmp ne i8* %21, null
  %32 = icmp ne %"struct.blink::DisplayItemList::ItemSlot"* %30, null
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %40, !prof !3

34:                                               ; preds = %27
  %35 = load i32, i32* %3, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %30, i64 0, i32 0, i64 0
  %38 = mul nuw nsw i64 %36, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %37, i64 %38, i1 false) #4
  %39 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %16, align 8
  br label %40

40:                                               ; preds = %34, %27
  %41 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %30, %27 ], [ %39, %34 ]
  %42 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %41, i64 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #4
  %43 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %29, i64* %43 monotonic, align 8
  %44 = trunc i64 %28 to i32
  store i32 %44, i32* %12, align 8
  br label %45

45:                                               ; preds = %6, %40, %22, %9
  %46 = phi i32 [ %8, %6 ], [ %44, %40 ], [ %26, %22 ], [ %13, %9 ]
  %47 = load i32, i32* %3, align 4
  %48 = add i32 %47, 1
  %49 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = icmp ult i32 %46, %48
  br i1 %50, label %51, label %90

51:                                               ; preds = %45
  %52 = lshr i32 %46, 2
  %53 = add nuw i32 %46, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %48
  %58 = select i1 %57, i32 %56, i32 %48
  %59 = icmp ult i32 %46, %58
  br i1 %59, label %60, label %90, !prof !3

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  %63 = icmp eq %"struct.blink::DisplayItemList::ItemSlot"* %62, null
  %64 = zext i32 %58 to i64
  %65 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64 %64) #4
  %66 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %65, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15DisplayItemList8ItemSlotEEEPKcv, i64 0, i64 0)) #4
  br i1 %63, label %67, label %72

67:                                               ; preds = %60
  %68 = ptrtoint i8* %66 to i64
  %69 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = udiv i64 %65, 40
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %49, align 8
  br label %90

72:                                               ; preds = %60
  %73 = udiv i64 %65, 40
  %74 = ptrtoint i8* %66 to i64
  %75 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  %76 = icmp ne i8* %66, null
  %77 = icmp ne %"struct.blink::DisplayItemList::ItemSlot"* %75, null
  %78 = and i1 %76, %77
  br i1 %78, label %79, label %85, !prof !3

79:                                               ; preds = %72
  %80 = load i32, i32* %3, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %75, i64 0, i32 0, i64 0
  %83 = mul nuw nsw i64 %81, 40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 8 %82, i64 %83, i1 false) #4
  %84 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %61, align 8
  br label %85

85:                                               ; preds = %79, %72
  %86 = phi %"struct.blink::DisplayItemList::ItemSlot"* [ %75, %72 ], [ %84, %79 ]
  %87 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %86, i64 0, i32 0, i64 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #4
  %88 = bitcast %"class.blink::DisplayItemList"* %0 to i64*
  store atomic i64 %74, i64* %88 monotonic, align 8
  %89 = trunc i64 %73 to i32
  store i32 %89, i32* %49, align 8
  br label %90

90:                                               ; preds = %45, %51, %67, %85
  %91 = getelementptr inbounds %"class.blink::DisplayItemList", %"class.blink::DisplayItemList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %91, align 8
  %93 = load i32, i32* %3, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %92, i64 %94
  %96 = zext i32 %48 to i64
  %97 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %92, i64 %96
  %98 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %95, i64 0, i32 0, i64 0
  %99 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %97 to i64
  %100 = ptrtoint %"struct.blink::DisplayItemList::ItemSlot"* %95 to i64
  %101 = sub i64 %99, %100
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 %101, i1 false) #4
  store i32 %48, i32* %3, align 4
  %102 = tail call dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %47) #4
  %103 = load i32, i32* %3, align 4
  %104 = add i32 %103, -1
  %105 = tail call dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %2, i32 %104) #4
  ret %"struct.blink::DisplayItemList::ItemSlot"* %105
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink15DisplayItemList8ItemSlotEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.blink::DisplayItemList::ItemSlot"* @_ZN3WTF6VectorIN5blink15DisplayItemList8ItemSlotELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #4
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #4
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #4
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #4
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::DisplayItemList::ItemSlot"*, %"struct.blink::DisplayItemList::ItemSlot"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::DisplayItemList::ItemSlot", %"struct.blink::DisplayItemList::ItemSlot"* %24, i64 %25
  ret %"struct.blink::DisplayItemList::ItemSlot"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
