; ModuleID = '../../third_party/blink/renderer/core/style/shadow_list.cc'
source_filename = "../../third_party/blink/renderer/core/style/shadow_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ShadowList" = type { %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase", [28 x i8] }>
%"class.WTF::VectorBufferBase" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::FloatRectOutsets" = type { float, float, float, float }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink10ShadowList28RectOutsetsIncludingOriginalEv(%"class.blink::ShadowList"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.blink::FloatRectOutsets"*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRectOutsets"*
  %6 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #3
  %7 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %1
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %16 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  br label %28

18:                                               ; preds = %37
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %20 = load <2 x float>, <2 x float>* %19, align 8
  %21 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %22 = load <2 x float>, <2 x float>* %21, align 8
  br label %23

23:                                               ; preds = %18, %1
  %24 = phi <2 x float> [ %22, %18 ], [ zeroinitializer, %1 ]
  %25 = phi <2 x float> [ %20, %18 ], [ zeroinitializer, %1 ]
  %26 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %25, 0
  %27 = insertvalue { <2 x float>, <2 x float> } %26, <2 x float> %24, 1
  ret { <2 x float>, <2 x float> } %27

28:                                               ; preds = %14, %37
  %29 = phi %"class.blink::ShadowData"* [ %8, %14 ], [ %38, %37 ]
  %30 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %29, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #3
  %34 = call { <2 x float>, <2 x float> } @_ZNK5blink10ShadowData11RectOutsetsEv(%"class.blink::ShadowData"* %29) #3
  %35 = extractvalue { <2 x float>, <2 x float> } %34, 0
  store <2 x float> %35, <2 x float>* %16, align 8
  %36 = extractvalue { <2 x float>, <2 x float> } %34, 1
  store <2 x float> %36, <2 x float>* %17, align 8
  call void @_ZN5blink16FloatRectOutsets5UniteERKS0_(%"class.blink::FloatRectOutsets"* nonnull %3, %"class.blink::FloatRectOutsets"* nonnull dereferenceable(16) %5) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #3
  br label %37

37:                                               ; preds = %28, %33
  %38 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %29, i64 1
  %39 = icmp eq %"class.blink::ShadowData"* %38, %12
  br i1 %39, label %18, label %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink16FloatRectOutsets5UniteERKS0_(%"class.blink::FloatRectOutsets"*, %"class.blink::FloatRectOutsets"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink10ShadowData11RectOutsetsEv(%"class.blink::ShadowData"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink10ShadowList19AdjustRectForShadowERNS_9FloatRectE(%"class.blink::ShadowList"* nocapture readonly, %"class.blink::FloatRect"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRectOutsets"*
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRectOutsets"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #3
  %8 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %36, label %15

15:                                               ; preds = %2
  %16 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %18 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  br label %24

19:                                               ; preds = %33
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %21 = load <2 x float>, <2 x float>* %20, align 8
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %23 = load <2 x float>, <2 x float>* %22, align 8
  br label %36

24:                                               ; preds = %33, %15
  %25 = phi %"class.blink::ShadowData"* [ %9, %15 ], [ %34, %33 ]
  %26 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #3
  %30 = call { <2 x float>, <2 x float> } @_ZNK5blink10ShadowData11RectOutsetsEv(%"class.blink::ShadowData"* %25) #3
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 0
  store <2 x float> %31, <2 x float>* %17, align 8
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 1
  store <2 x float> %32, <2 x float>* %18, align 8
  call void @_ZN5blink16FloatRectOutsets5UniteERKS0_(%"class.blink::FloatRectOutsets"* nonnull %6, %"class.blink::FloatRectOutsets"* nonnull dereferenceable(16) %7) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #3
  br label %33

33:                                               ; preds = %29, %24
  %34 = getelementptr inbounds %"class.blink::ShadowData", %"class.blink::ShadowData"* %25, i64 1
  %35 = icmp eq %"class.blink::ShadowData"* %34, %13
  br i1 %35, label %19, label %24

36:                                               ; preds = %2, %19
  %37 = phi <2 x float> [ %23, %19 ], [ zeroinitializer, %2 ]
  %38 = phi <2 x float> [ %21, %19 ], [ zeroinitializer, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  %39 = extractelement <2 x float> %37, i32 1
  %40 = extractelement <2 x float> %38, i32 0
  %41 = extractelement <2 x float> %38, i32 1
  %42 = fadd float %39, %41
  %43 = extractelement <2 x float> %37, i32 0
  %44 = fadd float %43, %40
  %45 = bitcast %"class.blink::FloatRect"* %1 to <4 x float>*
  %46 = load <4 x float>, <4 x float>* %45, align 4
  %47 = insertelement <4 x float> undef, float %39, i32 0
  %48 = insertelement <4 x float> %47, float %40, i32 1
  %49 = insertelement <4 x float> %48, float %42, i32 2
  %50 = insertelement <4 x float> %49, float %44, i32 3
  %51 = fsub <4 x float> %46, %50
  %52 = fadd <4 x float> %46, %50
  %53 = shufflevector <4 x float> %51, <4 x float> %52, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %54 = bitcast %"class.blink::FloatRect"* %1 to <4 x float>*
  store <4 x float> %53, <4 x float>* %54, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
