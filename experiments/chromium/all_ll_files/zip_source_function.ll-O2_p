; ModuleID = '../../third_party/libzip/src/lib/zip_source_function.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_function.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @zip_source_function(%struct.zip*, i64 (i8*, i8*, i64, i32)*, i8*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.zip* %0, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  %6 = tail call noalias i8* @malloc(i64 80) #5
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.zip, %struct.zip* %0, i64 0, i32 2
  tail call void @zip_error_set(%struct.zip_error* %9, i32 14, i32 0) #5
  br label %30

10:                                               ; preds = %5
  %11 = getelementptr inbounds i8, i8* %6, i64 48
  %12 = getelementptr inbounds i8, i8* %6, i64 64
  %13 = bitcast i8* %12 to %struct.zip**
  store %struct.zip* null, %struct.zip** %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 72
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 9, i1 false) #5
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 24
  %17 = bitcast i8* %16 to %struct.zip_error*
  tail call void @zip_error_init(%struct.zip_error* %17) #5
  %18 = getelementptr inbounds i8, i8* %6, i64 76
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %6, i64 77
  store i8 0, i8* %19, align 1
  %20 = bitcast i8* %6 to %struct.zip_source*
  %21 = getelementptr inbounds i8, i8* %6, i64 8
  %22 = bitcast i8* %21 to i64 (i8*, i8*, i64, i32)**
  store i64 (i8*, i8*, i64, i32)* %1, i64 (i8*, i8*, i64, i32)** %22, align 8
  %23 = getelementptr inbounds i8, i8* %6, i64 16
  %24 = bitcast i8* %23 to i8**
  store i8* %2, i8** %24, align 8
  %25 = tail call i64 %1(i8* %2, i8* null, i64 0, i32 14) #5
  %26 = getelementptr inbounds i8, i8* %6, i64 40
  %27 = bitcast i8* %26 to i64*
  %28 = icmp slt i64 %25, 0
  %29 = select i1 %28, i64 63, i64 %25
  store i64 %29, i64* %27, align 8
  br label %30

30:                                               ; preds = %10, %8, %3
  %31 = phi %struct.zip_source* [ null, %3 ], [ %20, %10 ], [ null, %8 ]
  ret %struct.zip_source* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @zip_source_function_create(i64 (i8*, i8*, i64, i32)*, i8*, %struct.zip_error*) local_unnamed_addr #0 {
  %4 = tail call noalias i8* @malloc(i64 80) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @zip_error_set(%struct.zip_error* %2, i32 14, i32 0) #5
  br label %27

7:                                                ; preds = %3
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = getelementptr inbounds i8, i8* %4, i64 64
  %10 = bitcast i8* %9 to %struct.zip**
  store %struct.zip* null, %struct.zip** %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 72
  %12 = bitcast i8* %11 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 9, i1 false) #5
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 24
  %14 = bitcast i8* %13 to %struct.zip_error*
  tail call void @zip_error_init(%struct.zip_error* %14) #5
  %15 = getelementptr inbounds i8, i8* %4, i64 76
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds i8, i8* %4, i64 77
  store i8 0, i8* %16, align 1
  %17 = bitcast i8* %4 to %struct.zip_source*
  %18 = getelementptr inbounds i8, i8* %4, i64 8
  %19 = bitcast i8* %18 to i64 (i8*, i8*, i64, i32)**
  store i64 (i8*, i8*, i64, i32)* %0, i64 (i8*, i8*, i64, i32)** %19, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 16
  %21 = bitcast i8* %20 to i8**
  store i8* %1, i8** %21, align 8
  %22 = tail call i64 %0(i8* %1, i8* null, i64 0, i32 14) #5
  %23 = getelementptr inbounds i8, i8* %4, i64 40
  %24 = bitcast i8* %23 to i64*
  %25 = icmp slt i64 %22, 0
  %26 = select i1 %25, i64 63, i64 %22
  store i64 %26, i64* %24, align 8
  br label %27

27:                                               ; preds = %6, %7
  %28 = phi %struct.zip_source* [ %17, %7 ], [ null, %6 ]
  ret %struct.zip_source* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.zip_source* @_zip_source_new(%struct.zip_error*) local_unnamed_addr #0 {
  %2 = tail call noalias i8* @malloc(i64 80) #5
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @zip_error_set(%struct.zip_error* %0, i32 14, i32 0) #5
  br label %16

5:                                                ; preds = %1
  %6 = bitcast i8* %2 to %struct.zip_source*
  %7 = getelementptr inbounds i8, i8* %2, i64 48
  %8 = getelementptr inbounds i8, i8* %2, i64 64
  %9 = bitcast i8* %8 to %struct.zip**
  store %struct.zip* null, %struct.zip** %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 72
  %11 = bitcast i8* %10 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 9, i1 false)
  store i32 1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 24
  %13 = bitcast i8* %12 to %struct.zip_error*
  tail call void @zip_error_init(%struct.zip_error* %13) #5
  %14 = getelementptr inbounds i8, i8* %2, i64 76
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds i8, i8* %2, i64 77
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %5, %4
  %17 = phi %struct.zip_source* [ null, %4 ], [ %6, %5 ]
  ret %struct.zip_source* %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @zip_source_keep(%struct.zip_source* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 9
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #3

declare void @zip_error_init(%struct.zip_error*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
