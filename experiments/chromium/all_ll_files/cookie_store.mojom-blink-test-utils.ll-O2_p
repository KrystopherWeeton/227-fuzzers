; ModuleID = 'gen/third_party/blink/public/mojom/cookie_store/cookie_store.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/cookie_store/cookie_store.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::CookieStoreAsyncWaiter" = type { %"class.blink::mojom::blink::CookieStore"* }
%"class.blink::mojom::blink::CookieStore" = type { i32 (...)** }
%"class.blink::mojom::blink::CookieStoreInterceptorForTesting" = type { %"class.blink::mojom::blink::CookieStore" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::mojom::blink::CookieChangeSubscription"* }
%"class.blink::mojom::blink::CookieChangeSubscription" = type { %"class.blink::KURL", i32, %"class.WTF::String" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.blink::KURL"* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.base::OnceCallback.14" = type { %"class.base::internal::CallbackBase" }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.25, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.18", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.18" = type { %"class.std::__1::__vector_base.19" }
%"class.std::__1::__vector_base.19" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.20" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.25 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.26" }>
%"class.base::RefCountedThreadSafe.26" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.28", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.28" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.29" }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__cxx_atomic_impl.32" }
%"struct.std::__1::__cxx_atomic_impl.32" = type { %"struct.std::__1::__cxx_atomic_base_impl.33" }
%"struct.std::__1::__cxx_atomic_base_impl.33" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink5mojom5blink11CookieStoreD2Ev = comdat any

$_ZN5blink5mojom5blink32CookieStoreInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [17 x i8] c"AddSubscriptions\00", align 1
@.str.1 = private unnamed_addr constant [87 x i8] c"gen/third_party/blink/public/mojom/cookie_store/cookie_store.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"RemoveSubscriptions\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"GetSubscriptions\00", align 1
@_ZTVN5blink5mojom5blink32CookieStoreInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::CookieStore"*)* @_ZN5blink5mojom5blink11CookieStoreD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)* @_ZN5blink5mojom5blink32CookieStoreInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.base::OnceCallback.14"*)* @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting16GetSubscriptionsElN4base12OnceCallbackIFvN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEbEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink22CookieStoreAsyncWaiterC1EPNS1_11CookieStoreE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CookieStoreAsyncWaiter"*, %"class.blink::mojom::blink::CookieStore"*), void (%"class.blink::mojom::blink::CookieStoreAsyncWaiter"*, %"class.blink::mojom::blink::CookieStore"*)* @_ZN5blink5mojom5blink22CookieStoreAsyncWaiterC2EPNS1_11CookieStoreE
@_ZN5blink5mojom5blink22CookieStoreAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CookieStoreAsyncWaiter"*), void (%"class.blink::mojom::blink::CookieStoreAsyncWaiter"*)* @_ZN5blink5mojom5blink22CookieStoreAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.WTF::Vector"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)**, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %8, i64 5
  %10 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::CookieStore"* %10(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %2 to i64*
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::CookieStore"* %11 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %27 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %27, i64 2
  %29 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::CookieStore"* %11, i64 %1, %"class.WTF::Vector"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr"* %32, null
  br i1 %33, label %56, label %34, !prof !2

34:                                               ; preds = %4
  %35 = bitcast %"class.mojo::StructPtr"* %32 to i8*
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 %39
  br label %41

41:                                               ; preds = %48, %38
  %42 = phi %"class.mojo::StructPtr"* [ %49, %48 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::mojom::blink::CookieChangeSubscription"*, %"class.blink::mojom::blink::CookieChangeSubscription"** %43, align 8
  store %"class.blink::mojom::blink::CookieChangeSubscription"* null, %"class.blink::mojom::blink::CookieChangeSubscription"** %43, align 8
  %45 = icmp eq %"class.blink::mojom::blink::CookieChangeSubscription"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"* nonnull %44) #10
  %47 = getelementptr inbounds %"class.blink::mojom::blink::CookieChangeSubscription", %"class.blink::mojom::blink::CookieChangeSubscription"* %44, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 1
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %13, align 4
  %52 = bitcast %"class.WTF::Vector"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %31, align 8
  br label %56

56:                                               ; preds = %4, %54
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.WTF::Vector"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = bitcast %"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)**, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %8, i64 5
  %10 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::CookieStore"* %10(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0) #10
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector"* %2 to i64*
  %15 = bitcast %"class.WTF::Vector"* %5 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector"* %5 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::CookieStore"* %11 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %27 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %27, i64 3
  %29 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::CookieStore"* %11, i64 %1, %"class.WTF::Vector"* nonnull %5, %"class.base::OnceCallback"* nonnull %6) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #10
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %31, align 8
  %33 = icmp eq %"class.mojo::StructPtr"* %32, null
  br i1 %33, label %56, label %34, !prof !2

34:                                               ; preds = %4
  %35 = bitcast %"class.mojo::StructPtr"* %32 to i8*
  %36 = load i32, i32* %13, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38, !prof !3

38:                                               ; preds = %34
  %39 = zext i32 %36 to i64
  %40 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 %39
  br label %41

41:                                               ; preds = %48, %38
  %42 = phi %"class.mojo::StructPtr"* [ %49, %48 ], [ %32, %38 ]
  %43 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::mojom::blink::CookieChangeSubscription"*, %"class.blink::mojom::blink::CookieChangeSubscription"** %43, align 8
  store %"class.blink::mojom::blink::CookieChangeSubscription"* null, %"class.blink::mojom::blink::CookieChangeSubscription"** %43, align 8
  %45 = icmp eq %"class.blink::mojom::blink::CookieChangeSubscription"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  call void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"* nonnull %44) #10
  %47 = getelementptr inbounds %"class.blink::mojom::blink::CookieChangeSubscription", %"class.blink::mojom::blink::CookieChangeSubscription"* %44, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %42, i64 1
  %50 = icmp eq %"class.mojo::StructPtr"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %13, align 4
  %52 = bitcast %"class.WTF::Vector"* %5 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %31, align 8
  br label %56

56:                                               ; preds = %4, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink32CookieStoreInterceptorForTesting16GetSubscriptionsElN4base12OnceCallbackIFvN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEbEEE(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*, i64, %"class.base::OnceCallback.14"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.14", align 8
  %5 = bitcast %"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)**, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %6, i64 5
  %8 = load %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)*, %"class.blink::mojom::blink::CookieStore"* (%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::CookieStore"* %8(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.14"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.14"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::CookieStore"* %9 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)***
  %15 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::CookieStore"* %9, i64 %1, %"class.base::OnceCallback.14"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink22CookieStoreAsyncWaiterC2EPNS1_11CookieStoreE(%"class.blink::mojom::blink::CookieStoreAsyncWaiter"* nocapture, %"class.blink::mojom::blink::CookieStore"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::CookieStoreAsyncWaiter", %"class.blink::mojom::blink::CookieStoreAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::CookieStore"* %1, %"class.blink::mojom::blink::CookieStore"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink22CookieStoreAsyncWaiterD2Ev(%"class.blink::mojom::blink::CookieStoreAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEPb(%"class.blink::mojom::blink::CookieStoreAsyncWaiter"* nocapture readonly, i64, %"class.WTF::Vector"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i8* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CookieStoreAsyncWaiter", %"class.blink::mojom::blink::CookieStoreAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::CookieStore"*, %"class.blink::mojom::blink::CookieStore"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector"* %2 to i64*
  %16 = bitcast %"class.WTF::Vector"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 8
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %21, align 4
  %23 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %24 = call i8* @_Znwm(i64 56) #11, !noalias !4
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !4
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !4
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8, !noalias !4
  %30 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !4
  %31 = bitcast %"class.blink::mojom::blink::CookieStore"* %12 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %32 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %32, i64 2
  %34 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CookieStore"* %12, i64 %1, %"class.WTF::Vector"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %36, align 8
  %38 = icmp eq %"class.mojo::StructPtr"* %37, null
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %4
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i8*
  %41 = load i32, i32* %14, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43, !prof !3

43:                                               ; preds = %39
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 %44
  br label %46

46:                                               ; preds = %53, %43
  %47 = phi %"class.mojo::StructPtr"* [ %54, %53 ], [ %37, %43 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::CookieChangeSubscription"*, %"class.blink::mojom::blink::CookieChangeSubscription"** %48, align 8
  store %"class.blink::mojom::blink::CookieChangeSubscription"* null, %"class.blink::mojom::blink::CookieChangeSubscription"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::CookieChangeSubscription"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"* nonnull %49) #10
  %52 = getelementptr inbounds %"class.blink::mojom::blink::CookieChangeSubscription", %"class.blink::mojom::blink::CookieChangeSubscription"* %49, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 1
  %55 = icmp eq %"class.mojo::StructPtr"* %54, %45
  br i1 %55, label %56, label %46

56:                                               ; preds = %53
  store i32 0, i32* %14, align 4
  %57 = bitcast %"class.WTF::Vector"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %39
  %60 = phi i8* [ %58, %56 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %36, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1, i64 0, i64 0), i32 61) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEPb(%"class.blink::mojom::blink::CookieStoreAsyncWaiter"* nocapture readonly, i64, %"class.WTF::Vector"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.WTF::Vector", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint i8* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CookieStoreAsyncWaiter", %"class.blink::mojom::blink::CookieStoreAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::CookieStore"*, %"class.blink::mojom::blink::CookieStore"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector"* %2 to i64*
  %16 = bitcast %"class.WTF::Vector"* %6 to i64*
  store i64 0, i64* %16, align 8
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.WTF::Vector"* %6 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 8
  store i32 0, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %14, align 4
  store i32 0, i32* %21, align 4
  %23 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %24 = call i8* @_Znwm(i64 56) #11, !noalias !9
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !9
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !9
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8, !noalias !9
  %30 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !9
  %31 = bitcast %"class.blink::mojom::blink::CookieStore"* %12 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)***
  %32 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %32, i64 3
  %34 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.WTF::Vector"*, %"class.base::OnceCallback"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::CookieStore"* %12, i64 %1, %"class.WTF::Vector"* nonnull %6, %"class.base::OnceCallback"* nonnull %7) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %36, align 8
  %38 = icmp eq %"class.mojo::StructPtr"* %37, null
  br i1 %38, label %61, label %39, !prof !2

39:                                               ; preds = %4
  %40 = bitcast %"class.mojo::StructPtr"* %37 to i8*
  %41 = load i32, i32* %14, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %59, label %43, !prof !3

43:                                               ; preds = %39
  %44 = zext i32 %41 to i64
  %45 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %37, i64 %44
  br label %46

46:                                               ; preds = %53, %43
  %47 = phi %"class.mojo::StructPtr"* [ %54, %53 ], [ %37, %43 ]
  %48 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::mojom::blink::CookieChangeSubscription"*, %"class.blink::mojom::blink::CookieChangeSubscription"** %48, align 8
  store %"class.blink::mojom::blink::CookieChangeSubscription"* null, %"class.blink::mojom::blink::CookieChangeSubscription"** %48, align 8
  %50 = icmp eq %"class.blink::mojom::blink::CookieChangeSubscription"* %49, null
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  call void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"* nonnull %49) #10
  %52 = getelementptr inbounds %"class.blink::mojom::blink::CookieChangeSubscription", %"class.blink::mojom::blink::CookieChangeSubscription"* %49, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %51, %46
  %54 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %47, i64 1
  %55 = icmp eq %"class.mojo::StructPtr"* %54, %45
  br i1 %55, label %56, label %46

56:                                               ; preds = %53
  store i32 0, i32* %14, align 4
  %57 = bitcast %"class.WTF::Vector"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %39
  %60 = phi i8* [ %58, %56 ], [ %40, %39 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %36, align 8
  br label %61

61:                                               ; preds = %4, %59
  %62 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1, i64 0, i64 0), i32 76) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS1_24CookieChangeSubscriptionEEELj0ENS3_18PartitionAllocatorEEEPb(%"class.blink::mojom::blink::CookieStoreAsyncWaiter"* nocapture readonly, i64, %"class.WTF::Vector"*, i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.14", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint %"class.WTF::Vector"* %2 to i64
  %9 = ptrtoint i8* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::CookieStoreAsyncWaiter", %"class.blink::mojom::blink::CookieStoreAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::CookieStore"*, %"class.blink::mojom::blink::CookieStore"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !14
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopESF_SG_EEEFvSE_bEE7RunOnceEPNS0_13BindStateBaseEOSE_b" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopESE_SF_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !14
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !14
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !14
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !14
  %22 = bitcast %"class.base::OnceCallback.14"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !14
  %23 = bitcast %"class.blink::mojom::blink::CookieStore"* %12 to void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)***
  %24 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)**, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)** %24, i64 4
  %26 = load void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)*, void (%"class.blink::mojom::blink::CookieStore"*, i64, %"class.base::OnceCallback.14"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::CookieStore"* %12, i64 %1, %"class.base::OnceCallback.14"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback.14", %"class.base::OnceCallback.14"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.1, i64 0, i64 0), i32 95) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink11CookieStoreD2Ev(%"class.blink::mojom::blink::CookieStore"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink32CookieStoreInterceptorForTestingD0Ev(%"class.blink::mojom::blink::CookieStoreInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopESF_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopESE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopESF_SG_EEEFvSE_bEE7RunOnceEPNS0_13BindStateBaseEOSE_b"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector"* nocapture dereferenceable(16), i1 zeroext) #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to %"class.WTF::Vector"**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to i8**
  %11 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %12 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %8, align 8
  %13 = load i8*, i8** %10, align 8
  %14 = bitcast %"class.WTF::Vector"* %1 to i64*
  %15 = load i64, i64* %14, align 8
  store atomic i64 0, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 0, i32* %18, align 4
  %20 = bitcast %"class.WTF::Vector"* %12 to i64*
  %21 = load i64, i64* %20, align 8
  store atomic i64 %15, i64* %20 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 %17, i32* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  store i32 %19, i32* %23, align 4
  store i8 %4, i8* %13, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %11) #10
  %25 = inttoptr i64 %21 to %"class.mojo::StructPtr"*
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %44, label %27, !prof !2

27:                                               ; preds = %3
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %42, label %29, !prof !3

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %25, i64 %30
  br label %32

32:                                               ; preds = %39, %29
  %33 = phi %"class.mojo::StructPtr"* [ %40, %39 ], [ %25, %29 ]
  %34 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::mojom::blink::CookieChangeSubscription"*, %"class.blink::mojom::blink::CookieChangeSubscription"** %34, align 8
  store %"class.blink::mojom::blink::CookieChangeSubscription"* null, %"class.blink::mojom::blink::CookieChangeSubscription"** %34, align 8
  %36 = icmp eq %"class.blink::mojom::blink::CookieChangeSubscription"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  tail call void @_ZN5blink5mojom5blink24CookieChangeSubscriptionD1Ev(%"class.blink::mojom::blink::CookieChangeSubscription"* nonnull %35) #10
  %38 = getelementptr inbounds %"class.blink::mojom::blink::CookieChangeSubscription", %"class.blink::mojom::blink::CookieChangeSubscription"* %35, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 1
  %41 = icmp eq %"class.mojo::StructPtr"* %40, %31
  br i1 %41, label %42, label %32

42:                                               ; preds = %39, %27
  %43 = inttoptr i64 %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  br label %44

44:                                               ; preds = %3, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS4_24CookieChangeSubscriptionEEELj0ENS6_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopESE_SF_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!7 = distinct !{!7, !8, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter16AddSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_0JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopERSF_EEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter19RemoveSubscriptionsElN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_1JPNS_7RunLoopERSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSL_DpOSM_"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopERSF_RSG_EEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS5_24CookieChangeSubscriptionEEELj0ENS7_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopERSF_RSG_EEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopERSD_RSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink5mojom5blink22CookieStoreAsyncWaiter16GetSubscriptionsElPN3WTF6VectorIN4mojo9StructPtrINS3_24CookieChangeSubscriptionEEELj0ENS5_18PartitionAllocatorEEEPbE3$_2JPNS_7RunLoopERSD_RSE_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSN_DpOSO_"}
