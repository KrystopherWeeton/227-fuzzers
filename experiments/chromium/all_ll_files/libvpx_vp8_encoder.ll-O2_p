; ModuleID = '../../third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VideoBitrateAllocator" = type { i32 (...)** }
%union.anon.25 = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::FieldTrialParameter" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.webrtc::FieldTrialParameterInterface.base" = type <{ i32 (...)**, %"class.std::__1::vector.13", %"class.std::__1::basic_string", i8 }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.webrtc::FieldTrialParameterInterface"**, %"class.webrtc::FieldTrialParameterInterface"**, %"class.std::__1::__compressed_pair.15" }
%"class.webrtc::FieldTrialParameterInterface" = type <{ i32 (...)**, %"class.std::__1::vector.13", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.webrtc::FieldTrialParameterInterface"** }
%union.anon.30 = type { %"class.webrtc::DataSize" }
%"class.webrtc::DataSize" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%union.anon.35 = type { double }
%"class.std::__1::vector.55" = type { i64*, i64, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::LibvpxVp8Encoder" = type { %"class.webrtc::VideoEncoder", %"class.std::__1::unique_ptr.4", %"class.webrtc::CpuSpeedExperiment", %"class.webrtc::RateControlSettings", %"class.webrtc::EncodedImageCallback"*, %"class.webrtc::VideoCodec", i8, i64, i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::vector.48", %"class.std::__1::vector.55", %"class.std::__1::vector.55", %"class.std::__1::vector.61", %"class.std::__1::vector.68", %"class.std::__1::vector.75", %"class.std::__1::vector.136", %"class.std::__1::vector.144", %"class.std::__1::vector.151", %"class.std::__1::vector.169", %"struct.webrtc::LibvpxVp8Encoder::VariableFramerateExperiment", %"class.webrtc::FramerateController", i32, %"class.webrtc::FecControllerOverride"*, %"class.webrtc::LibvpxVp8EncoderInfoSettings" }
%"class.webrtc::VideoEncoder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.webrtc::LibvpxInterface"* }
%"class.webrtc::CpuSpeedExperiment" = type { %"class.std::__1::vector", %"class.webrtc::FieldTrialOptional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::CpuSpeedExperiment::Config"*, %"struct.webrtc::CpuSpeedExperiment::Config"*, %"class.std::__1::__compressed_pair.10" }
%"struct.webrtc::CpuSpeedExperiment::Config" = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.webrtc::CpuSpeedExperiment::Config"* }
%"class.webrtc::FieldTrialOptional" = type { %"class.webrtc::FieldTrialParameterInterface.base", %"class.absl::optional", [4 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%"class.webrtc::RateControlSettings" = type { %"struct.webrtc::CongestionWindowConfig", %"struct.webrtc::VideoRateControlConfig" }
%"struct.webrtc::CongestionWindowConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.26", i8, [7 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%"struct.webrtc::VideoRateControlConfig" = type <{ %"class.absl::optional.31", i8, [3 x i8], %"class.absl::optional", %"class.absl::optional", i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%"class.webrtc::EncodedImageCallback" = type { i32 (...)** }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.webrtc::Vp8FrameBufferControllerFactory"* }
%"class.webrtc::Vp8FrameBufferControllerFactory" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.webrtc::Vp8FrameBufferController"* }
%"class.webrtc::Vp8FrameBufferController" = type { i32 (...)** }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"class.std::__1::__compressed_pair.50" }
%"struct.webrtc::VideoEncoder::ResolutionBitrateLimits" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { i32*, i32*, %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i32* }
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %struct.vpx_image*, %struct.vpx_image*, %"class.std::__1::__compressed_pair.70" }
%struct.vpx_image = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8*], [4 x i32], i32, i8*, i8*, i32, i32, i8* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %struct.vpx_image* }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"*, %"class.std::__1::__compressed_pair.131" }
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr", i64, i32, %"class.absl::optional", [4 x i8], %"class.std::__1::map", %"class.absl::optional.84", %"class.absl::optional.94", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.89" }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { i16 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.99" }
%"class.rtc::scoped_refptr.99" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector.101" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.101" = type { %"class.std::__1::__vector_base.102" }
%"class.std::__1::__vector_base.102" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.126" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.103", i32, %"class.absl::optional.110", %"class.absl::optional.115", %"class.absl::optional.120", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { i32*, i32*, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { i32* }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { i8 }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, %union.anon.119 }
%union.anon.119 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.120" }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase.125" }
%"class.webrtc::rtc_units_impl::UnitBase.125" = type { i64 }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.webrtc::RtpPacketInfo"* }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.webrtc::EncodedImage"* }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx*, %"class.std::__1::__compressed_pair.139" }
%struct.vpx_codec_ctx = type { i8*, %struct.vpx_codec_iface*, i32, i8*, i64, %union.anon.138, %struct.vpx_codec_priv* }
%struct.vpx_codec_iface = type opaque
%union.anon.138 = type { %struct.vpx_codec_dec_cfg* }
%struct.vpx_codec_dec_cfg = type opaque
%struct.vpx_codec_priv = type opaque
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %struct.vpx_codec_ctx* }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg*, %"class.std::__1::__compressed_pair.146" }
%struct.vpx_codec_enc_cfg = type { i32, i32, i32, i32, i32, i32, i32, %struct.vpx_rational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vpx_fixed_buf, %struct.vpx_fixed_buf, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32], [5 x i32], i32, [5 x i32], [5 x i32], i32, [16 x i32], [12 x i32], i32 }
%struct.vpx_rational = type { i32, i32 }
%struct.vpx_fixed_buf = type { i8*, i64 }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %struct.vpx_codec_enc_cfg* }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.webrtc::Vp8EncoderConfig"*, %"struct.webrtc::Vp8EncoderConfig"*, %"class.std::__1::__compressed_pair.164" }
%"struct.webrtc::Vp8EncoderConfig" = type <{ %"class.absl::optional.153", %"class.absl::optional.159", %"class.absl::optional.159", %"class.absl::optional.159", i8, [3 x i8] }>
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig" }
%"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig" = type { i32, %"struct.std::__1::array", %"struct.std::__1::array", i32, %"struct.std::__1::array.158" }
%"struct.std::__1::array" = type { [5 x i32] }
%"struct.std::__1::array.158" = type { [16 x i32] }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, %union.anon.163 }
%union.anon.163 = type { i32 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.webrtc::Vp8EncoderConfig"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %struct.vpx_rational*, %struct.vpx_rational*, %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %struct.vpx_rational* }
%"struct.webrtc::LibvpxVp8Encoder::VariableFramerateExperiment" = type { i8, float, i32, i32 }
%"class.webrtc::FramerateController" = type { %"class.absl::optional.176", %"class.absl::optional.159", i32, %"class.webrtc::RateStatistics" }
%"class.absl::optional.176" = type { %"class.absl::optional_internal::optional_data.177" }
%"class.absl::optional_internal::optional_data.177" = type { %"class.absl::optional_internal::optional_data_base.178" }
%"class.absl::optional_internal::optional_data_base.178" = type { %"class.absl::optional_internal::optional_data_dtor_base.179" }
%"class.absl::optional_internal::optional_data_dtor_base.179" = type { i8, %union.anon.180 }
%union.anon.180 = type { float }
%"class.webrtc::RateStatistics" = type { %"class.std::__1::deque", i64, i64, i8, i32, float, i64, i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.186" }
%"struct.std::__1::__split_buffer" = type { %"struct.webrtc::RateStatistics::Bucket"**, %"struct.webrtc::RateStatistics::Bucket"**, %"struct.webrtc::RateStatistics::Bucket"**, %"class.std::__1::__compressed_pair.181" }
%"struct.webrtc::RateStatistics::Bucket" = type { i64, i32, i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.webrtc::RateStatistics::Bucket"** }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"class.webrtc::FecControllerOverride" = type { i32 (...)** }
%"class.webrtc::LibvpxVp8EncoderInfoSettings" = type { %"class.webrtc::EncoderInfoSettings" }
%"class.webrtc::EncoderInfoSettings" = type { i32 (...)**, %"class.webrtc::FieldTrialOptional", %"class.webrtc::FieldTrialFlag", %"class.std::__1::vector.48" }
%"class.webrtc::FieldTrialFlag" = type { %"class.webrtc::FieldTrialParameterInterface.base", i8, [6 x i8] }
%"class.webrtc::LibvpxInterface" = type { i32 (...)** }
%"struct.webrtc::VP8Encoder::Settings" = type { %"class.std::__1::unique_ptr.36", %"class.std::__1::vector.48" }
%"struct.webrtc::Vp8FrameConfig" = type <{ i8, [3 x i8], i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::FieldTrialParameter.203" = type { %"class.webrtc::FieldTrialParameterInterface.base", double }
%"class.webrtc::FieldTrialParameter.297" = type { %"class.webrtc::FieldTrialParameterInterface.base", i32 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::VideoEncoder::RateControlParameters" = type { i32 (...)**, %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation", double, %"class.webrtc::DataRate" }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional.159"]], i8, [3 x i8] }>
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit.196" }
%"class.webrtc::rtc_units_impl::RelativeUnit.196" = type { %"class.webrtc::rtc_units_impl::UnitBase.197" }
%"class.webrtc::rtc_units_impl::UnitBase.197" = type { i64 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.webrtc::VideoEncoder::LossNotification" = type { i32, i32, %"class.absl::optional.198", %"class.absl::optional.198" }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { i8 }
%"struct.webrtc::VideoEncoder::Settings" = type { %"struct.webrtc::VideoEncoder::Capabilities", i32, i64 }
%"struct.webrtc::VideoEncoder::Capabilities" = type { i8 }
%"class.webrtc::Vp8TemporalLayersFactory" = type { %"class.webrtc::Vp8FrameBufferControllerFactory" }
%"class.webrtc::SimulcastRateAllocator" = type <{ %"class.webrtc::VideoBitrateAllocator", %"class.webrtc::VideoCodec", %"class.webrtc::StableTargetRateExperiment", %"class.webrtc::RateControlSettings", %"class.std::__1::vector.55", i8, [7 x i8] }>
%"class.webrtc::StableTargetRateExperiment" = type { %"class.webrtc::FieldTrialParameter", %"class.webrtc::FieldTrialParameter.203", %"class.webrtc::FieldTrialParameter.203" }
%"struct.webrtc::VideoBitrateAllocationParameters" = type { %"class.webrtc::DataRate", %"class.webrtc::DataRate", double }
%"struct.webrtc::VideoCodecVP8" = type { i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr.204", i32, i64, i64, i32, %"class.absl::optional.84", %"class.absl::optional", %"class.absl::optional.205", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.210" }
%"class.rtc::scoped_refptr.204" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.absl::optional.205" = type { %"class.absl::optional_internal::optional_data.206" }
%"class.absl::optional_internal::optional_data.206" = type { %"class.absl::optional_internal::optional_data_base.207" }
%"class.absl::optional_internal::optional_data_base.207" = type { %"class.absl::optional_internal::optional_data_dtor_base.208" }
%"class.absl::optional_internal::optional_data_dtor_base.208" = type { i8, %union.anon.209 }
%union.anon.209 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.absl::optional.210" = type { %"class.absl::optional_internal::optional_data.211" }
%"class.absl::optional_internal::optional_data.211" = type { %"class.absl::optional_internal::optional_data_base.212" }
%"class.absl::optional_internal::optional_data_base.212" = type { %"class.absl::optional_internal::optional_data_dtor_base.213" }
%"class.absl::optional_internal::optional_data_dtor_base.213" = type { i8, %union.anon.214 }
%union.anon.214 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { i32*, i32*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i32* }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"*, %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.rtc::scoped_refptr.204"* }
%"class.absl::InlinedVector.287" = type { %"class.absl::inlined_vector_internal::Storage.288" }
%"class.absl::inlined_vector_internal::Storage.288" = type { %"class.absl::container_internal::CompressedTuple.289", %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" }
%"class.absl::container_internal::CompressedTuple.289" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.290" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.290" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.236" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated", [8 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated" = type { i32*, i64 }
%"class.rtc::scoped_refptr.295" = type { %"class.webrtc::I420BufferInterface"* }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"struct.webrtc::CodecSpecificInfo" = type { i32, %"union.webrtc::CodecSpecificInfoUnion", i8, %"class.absl::optional.229", %"class.absl::optional.249" }
%"union.webrtc::CodecSpecificInfoUnion" = type { %"struct.webrtc::CodecSpecificInfoVP9" }
%"struct.webrtc::CodecSpecificInfoVP9" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i8, [8 x i16], [8 x i16], %"struct.webrtc::GofInfoVP9", i8, [3 x i8], i8 }
%"struct.webrtc::GofInfoVP9" = type { i64, [255 x i8], [255 x i8], [255 x i8], [255 x [3 x i8]], i16 }
%"class.absl::optional.229" = type { %"class.absl::optional_internal::optional_data.230" }
%"class.absl::optional_internal::optional_data.230" = type { %"class.absl::optional_internal::optional_data_base.231" }
%"class.absl::optional_internal::optional_data_base.231" = type { %"class.absl::optional_internal::optional_data_dtor_base.232" }
%"class.absl::optional_internal::optional_data_dtor_base.232" = type { i8, %union.anon.233 }
%union.anon.233 = type { %"struct.webrtc::GenericFrameInfo" }
%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.242", %"class.std::__1::vector.55", %"class.std::__1::bitset" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.237", %"class.absl::InlinedVector.237" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.237" = type { %"class.absl::inlined_vector_internal::Storage.238" }
%"class.absl::inlined_vector_internal::Storage.238" = type { %"class.absl::container_internal::CompressedTuple.239", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.239" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.240" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.240" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.242" = type { %"class.absl::inlined_vector_internal::Storage.243" }
%"class.absl::inlined_vector_internal::Storage.243" = type { %"class.absl::container_internal::CompressedTuple.244", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.244" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.245" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"struct.webrtc::FrameDependencyStructure" }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector.254", %"class.absl::InlinedVector.256", %"class.std::__1::vector.263" }
%"class.absl::InlinedVector.254" = type { %"class.absl::inlined_vector_internal::Storage.255" }
%"class.absl::inlined_vector_internal::Storage.255" = type { %"class.absl::container_internal::CompressedTuple.239", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.256" = type { %"class.absl::inlined_vector_internal::Storage.257" }
%"class.absl::inlined_vector_internal::Storage.257" = type { %"class.absl::container_internal::CompressedTuple.258", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.258" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.259" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.259" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"class.rtc::scoped_refptr.272" = type { %"class.webrtc::EncodedImageBuffer"* }
%"class.webrtc::EncodedImageBuffer" = type { %"class.webrtc::EncodedImageBufferInterface", i64, i8* }
%struct.vpx_codec_cx_pkt = type { i32, %union.anon.270 }
%union.anon.270 = type { %struct.anon.271, [40 x i8] }
%struct.anon.271 = type { i8*, i64, i64, i64, i32, i32, [5 x i32], [5 x i32], [5 x i8] }
%"struct.webrtc::VideoEncoder::EncoderInfo" = type { %"struct.webrtc::VideoEncoder::ScalingSettings", i32, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, [5 x %"class.absl::InlinedVector.280"], %"class.std::__1::vector.48", i8, %"class.absl::InlinedVector.287" }
%"struct.webrtc::VideoEncoder::ScalingSettings" = type { %"class.absl::optional.275", i32 }
%"class.absl::optional.275" = type { %"class.absl::optional_internal::optional_data.276" }
%"class.absl::optional_internal::optional_data.276" = type { %"class.absl::optional_internal::optional_data_base.277" }
%"class.absl::optional_internal::optional_data_base.277" = type { %"class.absl::optional_internal::optional_data_dtor_base.278" }
%"class.absl::optional_internal::optional_data_dtor_base.278" = type { i8, %union.anon.279 }
%union.anon.279 = type { %"struct.webrtc::VideoEncoder::QpThresholds" }
%"struct.webrtc::VideoEncoder::QpThresholds" = type { i32, i32 }
%"class.absl::InlinedVector.280" = type { %"class.absl::inlined_vector_internal::Storage.281" }
%"class.absl::inlined_vector_internal::Storage.281" = type { %"class.absl::container_internal::CompressedTuple.282", %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" }
%"class.absl::container_internal::CompressedTuple.282" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.283" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.236" }
%"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" = type { i8*, i64 }
%"class.webrtc::NV12BufferInterface" = type { %"class.webrtc::BiplanarYuv8Buffer" }
%"class.webrtc::BiplanarYuv8Buffer" = type { %"class.webrtc::BiplanarYuvBuffer" }
%"class.webrtc::BiplanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignEmRKi = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb = comdat any

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNK6webrtc16Vp8EncoderConfig19TemporalLayerConfigneERKS1_ = comdat any

$_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI13vpx_codec_ctxNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI17vpx_codec_enc_cfgNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN6webrtc16Vp8EncoderConfigENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI12vpx_rationalNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorI9vpx_imageNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m = comdat any

$_ZNSt3__16vectorIN6webrtc12VideoEncoder23ResolutionBitrateLimitsENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIN6webrtc16VideoFrameBuffer4TypeELm5ENSt3__19allocatorIS4_EEE6AssignINS0_20IteratorValueAdapterIS7_PKS4_EEEEvT_m = comdat any

$_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJRKhEEERhDpOT_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_ = comdat any

$_ZNSt3__16vectorIN3rtc13scoped_refptrIN6webrtc16VideoFrameBufferEEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = comdat any

@_ZTVN6webrtc16LibvpxVp8EncoderE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*)* @_ZN6webrtc16LibvpxVp8EncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*)* @_ZN6webrtc16LibvpxVp8EncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc16LibvpxVp8Encoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc16LibvpxVp8Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc16LibvpxVp8Encoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Encoder"*)* @_ZN6webrtc16LibvpxVp8Encoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.215"*)* @_ZN6webrtc16LibvpxVp8Encoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS4_9allocatorIS6_EEEE to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc16LibvpxVp8Encoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*, float)* @_ZN6webrtc16LibvpxVp8Encoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*, i64)* @_ZN6webrtc16LibvpxVp8Encoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::LibvpxVp8Encoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc16LibvpxVp8Encoder18OnLossNotificationERKNS_12VideoEncoder16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::LibvpxVp8Encoder"*)* @_ZNK6webrtc16LibvpxVp8Encoder14GetEncoderInfoEv to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"WebRTC-VP8VariableFramerateScreenshare\00", align 1
@.str.1 = private unnamed_addr constant [79 x i8] c"../../third_party/webrtc/modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"SetRates() while not initialize\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Encoder in error state.\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"Unsupported framerate (must be >= 1.0): \00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"Error configuring codec, error code: \00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c", details: \00", align 1
@_ZN6webrtc12_GLOBAL__N_128kVp8ForcePartitionResilienceE = internal constant [36 x i8] c"WebRTC-VP8-ForcePartitionResilience\00", align 16
@.str.7 = private unnamed_addr constant [35 x i8] c"Overriding g_error_resilient from \00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@__const._ZN6webrtc16LibvpxVp8Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE.init_allocator = private unnamed_addr constant <{ %"class.webrtc::VideoBitrateAllocator", { i32, i16, i16, i32, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8], [3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], [5 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], i32, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, [4 x i8], { i64, i16, [6 x i8] }, i8, [3 x i8], { { i32, i8, i8, i8, [1 x i8], i32, i8, i8, i8, i8, i32 } }, %"class.std::__1::basic_string" }, { %"class.webrtc::FieldTrialParameter", { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double }, { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } }, { <{ { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [7 x i8], %union.anon.30 } } } }, i8, [7 x i8] }>, <{ { { { { i8, [7 x i8], %union.anon.35 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }> }, %"class.std::__1::vector.55", i8, [7 x i8] }> <{ %"class.webrtc::VideoBitrateAllocator" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**) }, { i32, i16, i16, i32, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8], [3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], [5 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], i32, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, [4 x i8], { i64, i16, [6 x i8] }, i8, [3 x i8], { { i32, i8, i8, i8, [1 x i8], i32, i8, i8, i8, i8, i32 } }, %"class.std::__1::basic_string" } { i32 -1431655766, i16 -21846, i16 -21846, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", [3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }] [{ i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }], [5 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }] [{ i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }], i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", { { { { i8, [3 x i8], %union.anon.25 } } } } { { { { i8, [3 x i8], %union.anon.25 } } } { { { i8, [3 x i8], %union.anon.25 } } { { i8, [3 x i8], %union.anon.25 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.25 { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA", { i64, i16, [6 x i8] } { i64 -6148914691236517206, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, i8 -86, [3 x i8] c"\AA\AA\AA", { { i32, i8, i8, i8, [1 x i8], i32, i8, i8, i8, i8, i32 } } { { i32, i8, i8, i8, [1 x i8], i32, i8, i8, i8, i8, i32 } { i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766 } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { %"class.webrtc::FieldTrialParameter", { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double }, { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } } { %"class.webrtc::FieldTrialParameter" { %"class.webrtc::FieldTrialParameterInterface.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.13" { %"class.std::__1::__vector_base.14" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**) } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86 }>, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }, { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } { %"class.webrtc::FieldTrialParameterInterface.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.13" { %"class.std::__1::__vector_base.14" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**) } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF }, { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } { %"class.webrtc::FieldTrialParameterInterface.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.13" { %"class.std::__1::__vector_base.14" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**) } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF } }, { <{ { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [7 x i8], %union.anon.30 } } } }, i8, [7 x i8] }>, <{ { { { { i8, [7 x i8], %union.anon.35 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }> } { <{ { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [7 x i8], %union.anon.30 } } } }, i8, [7 x i8] }> <{ { { { { i8, [3 x i8], %union.anon.25 } } } } { { { { i8, [3 x i8], %union.anon.25 } } } { { { i8, [3 x i8], %union.anon.25 } } { { i8, [3 x i8], %union.anon.25 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.25 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } } { { { { i8, [3 x i8], %union.anon.25 } } } { { { i8, [3 x i8], %union.anon.25 } } { { i8, [3 x i8], %union.anon.25 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.25 { i32 -1431655766 } } } } }, { { { { i8, [7 x i8], %union.anon.30 } } } } { { { { i8, [7 x i8], %union.anon.30 } } } { { { i8, [7 x i8], %union.anon.30 } } { { i8, [7 x i8], %union.anon.30 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.30 { %"class.webrtc::DataSize" { %"class.webrtc::rtc_units_impl::RelativeUnit" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, <{ { { { { i8, [7 x i8], %union.anon.35 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }> <{ { { { { i8, [7 x i8], %union.anon.35 } } } } { { { { i8, [7 x i8], %union.anon.35 } } } { { { i8, [7 x i8], %union.anon.35 } } { { i8, [7 x i8], %union.anon.35 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.35 { double 0xFFFFFFFFFFFFFFFF } } } } }, i8 -86, [3 x i8] c"\AA\AA\AA", { { { { i8, [3 x i8], %union.anon.25 } } } } { { { { i8, [3 x i8], %union.anon.25 } } } { { { i8, [3 x i8], %union.anon.25 } } { { i8, [3 x i8], %union.anon.25 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.25 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } } { { { { i8, [3 x i8], %union.anon.25 } } } { { { i8, [3 x i8], %union.anon.25 } } { { i8, [3 x i8], %union.anon.25 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.25 { i32 -1431655766 } } } } }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [3 x i8] c"\AA\AA\AA" }> }, %"class.std::__1::vector.55" { i64* inttoptr (i64 -6148914691236517206 to i64*), i64 -6148914691236517206, %"class.std::__1::__compressed_pair.56" { %"struct.std::__1::__compressed_pair_elem.57" { i64 -6148914691236517206 } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@.str.9 = private unnamed_addr constant [51 x i8] c"encoded_pos + pkt->data.frame.sz <= buffer->size()\00", align 1
@_ZZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168 = internal unnamed_addr global i8* null, align 8
@_ZGVZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168 = internal global i64 0, align 8
@.str.10 = private unnamed_addr constant [7 x i8] c"webrtc\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"EncodedFrameSize\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"libvpx\00", align 1
@.ref.tmp = private constant [2 x i32] [i32 1, i32 5], align 4
@_ZN6webrtc12VideoEncoder11EncoderInfo21kMaxFramerateFractionE = external constant i8, align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"Updating vp8 encoder pixel format to \00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"NV12\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"I420\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Failed to convert \00", align 1
@.str.19 = private unnamed_addr constant [36 x i8] c" image to I420. Can't encode frame.\00", align 1
@.str.20 = private unnamed_addr constant [120 x i8] c"converted_buffer->type() == VideoFrameBuffer::Type::kI420 || converted_buffer->type() == VideoFrameBuffer::Type::kI420A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Failed to map scaled \00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c" image to \00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c". Can't encode frame.\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"When scaling \00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c", the image was unexpectedly converted to \00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c" instead of \00", align 1
@__const._ZN6webrtc16LibvpxVp8Encoder28ParseVariableFramerateConfigENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE.framerate_limit = private unnamed_addr constant { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } { %"class.webrtc::FieldTrialParameterInterface.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %"class.std::__1::vector.13" { %"class.std::__1::__vector_base.14" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**), %"class.std::__1::__compressed_pair.15" { %"struct.std::__1::__compressed_pair_elem.16" { %"class.webrtc::FieldTrialParameterInterface"** inttoptr (i64 -6148914691236517206 to %"class.webrtc::FieldTrialParameterInterface"**) } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.20" { %"struct.std::__1::__compressed_pair_elem.21" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF }, align 8
@.str.28 = private unnamed_addr constant [8 x i8] c"min_fps\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"min_qp\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"undershoot\00", align 1
@_ZTVN6webrtc24Vp8TemporalLayersFactoryE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.31 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\05\05\00", comdat, align 1
@_ZTVN6webrtc19FieldTrialParameterIdEE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN6webrtc19FieldTrialParameterIiEE = external unnamed_addr constant { [6 x i8*] }, align 8

@_ZN6webrtc16LibvpxVp8EncoderC1ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE = hidden unnamed_addr alias void (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::LibvpxInterface"*, %"struct.webrtc::VP8Encoder::Settings"*), void (%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::LibvpxInterface"*, %"struct.webrtc::VP8Encoder::Settings"*)* @_ZN6webrtc16LibvpxVp8EncoderC2ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE
@_ZN6webrtc16LibvpxVp8EncoderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::LibvpxVp8Encoder"*), void (%"class.webrtc::LibvpxVp8Encoder"*)* @_ZN6webrtc16LibvpxVp8EncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoEncoder"* @_ZN6webrtc10VP8Encoder6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.webrtc::VP8Encoder::Settings", align 8
  %2 = tail call %"class.webrtc::LibvpxInterface"* @_ZN6webrtc15LibvpxInterface6CreateEv() #19
  %3 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3)
  %4 = tail call i8* @_Znwm(i64 1216) #20
  %5 = bitcast i8* %4 to %"class.webrtc::LibvpxVp8Encoder"*
  %6 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false)
  call void @_ZN6webrtc16LibvpxVp8EncoderC2ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE(%"class.webrtc::LibvpxVp8Encoder"* nonnull %5, %"class.webrtc::LibvpxInterface"* %2, %"struct.webrtc::VP8Encoder::Settings"* nonnull %1) #19
  %7 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %7, align 8
  %9 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %0
  %11 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %11 to i64*
  %13 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %8 to i64
  store i64 %13, i64* %12, align 8
  %14 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #20
  br label %15

15:                                               ; preds = %10, %0
  %16 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::Vp8FrameBufferControllerFactory"** %16, align 8
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %16, align 8
  %18 = icmp eq %"class.webrtc::Vp8FrameBufferControllerFactory"* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.webrtc::Vp8FrameBufferControllerFactory"* %17 to void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)***
  %21 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)**, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %21, i64 1
  %23 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %22, align 8
  tail call void %23(%"class.webrtc::Vp8FrameBufferControllerFactory"* nonnull %17) #19
  br label %24

24:                                               ; preds = %15, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3)
  %25 = bitcast i8* %4 to %"class.webrtc::VideoEncoder"*
  ret %"class.webrtc::VideoEncoder"* %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.webrtc::LibvpxInterface"* @_ZN6webrtc15LibvpxInterface6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoEncoder"* @_ZN6webrtc10VP8Encoder6CreateENS0_8SettingsE(%"struct.webrtc::VP8Encoder::Settings"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.webrtc::VP8Encoder::Settings", align 16
  %3 = tail call %"class.webrtc::LibvpxInterface"* @_ZN6webrtc15LibvpxInterface6CreateEv() #19
  %4 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4)
  %5 = tail call i8* @_Znwm(i64 1216) #20
  %6 = bitcast i8* %5 to %"class.webrtc::LibvpxVp8Encoder"*
  %7 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %0, i64 0, i32 1
  %9 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %0 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %7, align 8
  %11 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %2 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 16
  %12 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %12 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %13 to <2 x i64>*
  store <2 x i64> %15, <2 x i64>* %16, align 8
  %17 = bitcast %"class.std::__1::vector.48"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #19
  call void @_ZN6webrtc16LibvpxVp8EncoderC2ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE(%"class.webrtc::LibvpxVp8Encoder"* nonnull %6, %"class.webrtc::LibvpxInterface"* %3, %"struct.webrtc::VP8Encoder::Settings"* nonnull %2) #19
  %18 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 0
  %19 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %18, align 8
  %20 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %1
  %22 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %13 to i64*
  %23 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %19 to i64
  store i64 %23, i64* %22, align 8
  %24 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %19 to i8*
  tail call void @_ZdlPv(i8* %24) #20
  br label %25

25:                                               ; preds = %21, %1
  %26 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::Vp8FrameBufferControllerFactory"** %26, align 16
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %26, align 16
  %28 = icmp eq %"class.webrtc::Vp8FrameBufferControllerFactory"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.webrtc::Vp8FrameBufferControllerFactory"* %27 to void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)***
  %31 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)**, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %31, i64 1
  %33 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %32, align 8
  tail call void %33(%"class.webrtc::Vp8FrameBufferControllerFactory"* nonnull %27) #19
  br label %34

34:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4)
  %35 = bitcast i8* %5 to %"class.webrtc::VideoEncoder"*
  ret %"class.webrtc::VideoEncoder"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoEncoder"* @_ZN6webrtc10VP8Encoder6CreateENSt3__110unique_ptrINS_31Vp8FrameBufferControllerFactoryENS1_14default_deleteIS3_EEEE(%"class.webrtc::Vp8FrameBufferControllerFactory"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.webrtc::VP8Encoder::Settings", align 8
  %3 = ptrtoint %"class.webrtc::Vp8FrameBufferControllerFactory"* %0 to i64
  %4 = tail call %"class.webrtc::LibvpxInterface"* @_ZN6webrtc15LibvpxInterface6CreateEv() #19
  %5 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5)
  %6 = tail call i8* @_Znwm(i64 1216) #20
  %7 = bitcast i8* %6 to %"class.webrtc::LibvpxVp8Encoder"*
  %8 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %2 to i64*
  store i64 %3, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector.48"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  call void @_ZN6webrtc16LibvpxVp8EncoderC2ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE(%"class.webrtc::LibvpxVp8Encoder"* nonnull %7, %"class.webrtc::LibvpxInterface"* %4, %"struct.webrtc::VP8Encoder::Settings"* nonnull %2) #19
  %11 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %11, align 8
  %13 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 1
  %16 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %15 to i64*
  %17 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %12 to i64
  store i64 %17, i64* %16, align 8
  %18 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #20
  br label %19

19:                                               ; preds = %14, %1
  %20 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::Vp8FrameBufferControllerFactory"** %20, align 8
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %20, align 8
  %22 = icmp eq %"class.webrtc::Vp8FrameBufferControllerFactory"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.webrtc::Vp8FrameBufferControllerFactory"* %21 to void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)***
  %25 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)**, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %25, i64 1
  %27 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %26, align 8
  tail call void %27(%"class.webrtc::Vp8FrameBufferControllerFactory"* nonnull %21) #19
  br label %28

28:                                               ; preds = %23, %19
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5)
  %29 = bitcast i8* %6 to %"class.webrtc::VideoEncoder"*
  ret %"class.webrtc::VideoEncoder"* %29
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN6webrtc16LibvpxVp8Encoder11EncodeFlagsERKNS_14Vp8FrameConfigE(%"struct.webrtc::Vp8FrameConfig"* nocapture readonly dereferenceable(32)) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::Vp8FrameConfig", %"struct.webrtc::Vp8FrameConfig"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = shl i32 %3, 16
  %5 = and i32 %4, 65536
  %6 = xor i32 %5, 65536
  %7 = zext i32 %6 to i64
  %8 = and i32 %3, 2
  %9 = icmp eq i32 %8, 0
  %10 = or i64 %7, 262144
  %11 = select i1 %9, i64 %10, i64 %7
  %12 = getelementptr inbounds %"struct.webrtc::Vp8FrameConfig", %"struct.webrtc::Vp8FrameConfig"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = or i64 %11, 131072
  %17 = select i1 %15, i64 %16, i64 %11
  %18 = and i32 %13, 2
  %19 = icmp eq i32 %18, 0
  %20 = or i64 %17, 4194304
  %21 = select i1 %19, i64 %20, i64 %17
  %22 = getelementptr inbounds %"struct.webrtc::Vp8FrameConfig", %"struct.webrtc::Vp8FrameConfig"* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = or i64 %21, 2097152
  %27 = select i1 %25, i64 %26, i64 %21
  %28 = and i32 %23, 2
  %29 = icmp eq i32 %28, 0
  %30 = or i64 %27, 8388608
  %31 = select i1 %29, i64 %30, i64 %27
  %32 = getelementptr inbounds %"struct.webrtc::Vp8FrameConfig", %"struct.webrtc::Vp8FrameConfig"* %0, i64 0, i32 8
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = or i64 %31, 1048576
  %36 = select i1 %34, i64 %31, i64 %35
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8EncoderC2ENSt3__110unique_ptrINS_15LibvpxInterfaceENS1_14default_deleteIS3_EEEENS_10VP8Encoder8SettingsE(%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::LibvpxInterface"*, %"struct.webrtc::VP8Encoder::Settings"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = ptrtoint %"class.webrtc::LibvpxInterface"* %1 to i64
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6webrtc16LibvpxVp8EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.4"* %7 to i64*
  store i64 %5, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc18CpuSpeedExperimentC1Ev(%"class.webrtc::CpuSpeedExperiment"* %9) #19
  %10 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc19RateControlSettings20ParseFromFieldTrialsEv(%"class.webrtc::RateControlSettings"* sret %10) #19
  %11 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"* %12) #19
  %13 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 6
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 7
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 9
  %17 = bitcast i32* %15 to <4 x i32>*
  store <4 x i32> <i32 56, i32 -6, i32 0, i32 0>, <4 x i32>* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 12
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 13
  %20 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.webrtc::VP8Encoder::Settings"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.36"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14
  %25 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 15
  %26 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1
  %27 = bitcast %"class.std::__1::vector.48"* %26 to i64*
  %28 = bitcast %"class.std::__1::unique_ptr.42"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false)
  %29 = load i64, i64* %27, align 8
  %30 = bitcast %"class.std::__1::vector.48"* %25 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 1
  %32 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 15, i32 0, i32 1
  %35 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.webrtc::VP8Encoder::Settings", %"struct.webrtc::VP8Encoder::Settings"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.48"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #19
  %42 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16
  %43 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 1
  %44 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 2, i32 0, i32 0
  %45 = tail call i8* @_Znwm(i64 8) #20
  %46 = bitcast %"class.std::__1::vector.55"* %42 to i8**
  store i8* %45, i8** %46, align 8
  store i64 1, i64* %44, align 8
  store i64 3, i64* %43, align 8
  %47 = bitcast i8* %45 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17
  %49 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18
  %50 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19
  %51 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20
  %52 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %53 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22
  %54 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23
  %55 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24
  %56 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25
  %57 = bitcast %"class.std::__1::vector.55"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 192, i1 false)
  %58 = tail call i8* @_Znwm(i64 48) #20
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast i64* %60 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %61, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 38, i1 false) #19
  %62 = getelementptr inbounds i8, i8* %58, i64 38
  store i8 0, i8* %62, align 1
  %63 = call { i64, i64 } @_ZN6webrtc16LibvpxVp8Encoder28ParseVariableFramerateConfigENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull %4)
  %64 = bitcast %"struct.webrtc::LibvpxVp8Encoder::VariableFramerateExperiment"* %56 to i64*
  %65 = extractvalue { i64, i64 } %63, 0
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25, i32 2
  %67 = bitcast i32* %66 to i64*
  %68 = extractvalue { i64, i64 } %63, 1
  store i64 %68, i64* %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = lshr i64 %65, 32
  %74 = trunc i64 %73 to i32
  %75 = bitcast i32 %74 to float
  br i1 %72, label %76, label %80

76:                                               ; preds = %3
  %77 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %77) #20
  %78 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25, i32 1
  %79 = load float, float* %78, align 4
  br label %80

80:                                               ; preds = %3, %76
  %81 = phi float [ %75, %3 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 26
  call void @_ZN6webrtc19FramerateControllerC1Ef(%"class.webrtc::FramerateController"* %82, float %81) #19
  %83 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 27
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 28
  store %"class.webrtc::FecControllerOverride"* null, %"class.webrtc::FecControllerOverride"** %84, align 8
  %85 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 29
  call void @_ZN6webrtc28LibvpxVp8EncoderInfoSettingsC1Ev(%"class.webrtc::LibvpxVp8EncoderInfoSettings"* %85) #19
  %86 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %struct.vpx_image** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = bitcast %"class.std::__1::vector.68"* %50 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = sub i64 %88, %90
  %92 = sdiv exact i64 %91, 136
  %93 = icmp ult i64 %92, 3
  br i1 %93, label %94, label %117

94:                                               ; preds = %80
  %95 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 1
  %96 = bitcast %struct.vpx_image** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %97, %90
  %99 = sdiv exact i64 %98, 136
  %100 = call i8* @_Znwm(i64 408) #20
  %101 = bitcast i8* %100 to %struct.vpx_image*
  %102 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %101, i64 %99
  %103 = ptrtoint %struct.vpx_image* %102 to i64
  %104 = getelementptr inbounds i8, i8* %100, i64 408
  %105 = ptrtoint i8* %104 to i64
  %106 = sdiv exact i64 %98, -136
  %107 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %102, i64 %106
  %108 = ptrtoint %struct.vpx_image* %107 to i64
  %109 = icmp sgt i64 %98, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %94
  %111 = bitcast %struct.vpx_image* %107 to i8*
  %112 = inttoptr i64 %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 %98, i1 false) #19
  br label %113

113:                                              ; preds = %110, %94
  store i64 %108, i64* %89, align 8
  store i64 %103, i64* %96, align 8
  store i64 %105, i64* %87, align 8
  %114 = icmp eq i64 %90, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %90 to i8*
  call void @_ZdlPv(i8* %116) #20
  br label %117

117:                                              ; preds = %80, %113, %115
  call void @_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.75"* %51, i64 3)
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.55"* %48, i64 3)
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignEmRKi(%"class.std::__1::vector.61"* %49, i64 3, i32* dereferenceable(4) %16)
  %118 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 2, i32 0, i32 0
  %119 = bitcast %struct.vpx_codec_ctx** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector.136"* %52 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %120, %122
  %124 = sdiv exact i64 %123, 56
  %125 = icmp ult i64 %124, 3
  br i1 %125, label %126, label %149

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %128 = bitcast %struct.vpx_codec_ctx** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %129, %122
  %131 = sdiv exact i64 %130, 56
  %132 = call i8* @_Znwm(i64 168) #20
  %133 = bitcast i8* %132 to %struct.vpx_codec_ctx*
  %134 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %133, i64 %131
  %135 = ptrtoint %struct.vpx_codec_ctx* %134 to i64
  %136 = getelementptr inbounds i8, i8* %132, i64 168
  %137 = ptrtoint i8* %136 to i64
  %138 = sdiv exact i64 %130, -56
  %139 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %134, i64 %138
  %140 = ptrtoint %struct.vpx_codec_ctx* %139 to i64
  %141 = icmp sgt i64 %130, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %126
  %143 = bitcast %struct.vpx_codec_ctx* %139 to i8*
  %144 = inttoptr i64 %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 %130, i1 false) #19
  br label %145

145:                                              ; preds = %142, %126
  store i64 %140, i64* %121, align 8
  store i64 %135, i64* %128, align 8
  store i64 %137, i64* %119, align 8
  %146 = icmp eq i64 %122, 0
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = inttoptr i64 %122 to i8*
  call void @_ZdlPv(i8* %148) #20
  br label %149

149:                                              ; preds = %117, %145, %147
  %150 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %151 = bitcast %struct.vpx_codec_enc_cfg** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.std::__1::vector.144"* %53 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = sub i64 %152, %154
  %156 = sdiv exact i64 %155, 384
  %157 = icmp ult i64 %156, 3
  br i1 %157, label %158, label %181

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 1
  %160 = bitcast %struct.vpx_codec_enc_cfg** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = sub i64 %161, %154
  %163 = sdiv exact i64 %162, 384
  %164 = call i8* @_Znwm(i64 1152) #20
  %165 = bitcast i8* %164 to %struct.vpx_codec_enc_cfg*
  %166 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %165, i64 %163
  %167 = ptrtoint %struct.vpx_codec_enc_cfg* %166 to i64
  %168 = getelementptr inbounds i8, i8* %164, i64 1152
  %169 = ptrtoint i8* %168 to i64
  %170 = sdiv exact i64 %162, -384
  %171 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %166, i64 %170
  %172 = ptrtoint %struct.vpx_codec_enc_cfg* %171 to i64
  %173 = icmp sgt i64 %162, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %158
  %175 = bitcast %struct.vpx_codec_enc_cfg* %171 to i8*
  %176 = inttoptr i64 %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 %162, i1 false) #19
  br label %177

177:                                              ; preds = %174, %158
  store i64 %172, i64* %153, align 8
  store i64 %167, i64* %160, align 8
  store i64 %169, i64* %151, align 8
  %178 = icmp eq i64 %154, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %177
  %180 = inttoptr i64 %154 to i8*
  call void @_ZdlPv(i8* %180) #20
  br label %181

181:                                              ; preds = %149, %177, %179
  %182 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 2, i32 0, i32 0
  %183 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"class.std::__1::vector.151"* %54 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %184, %186
  %188 = sdiv exact i64 %187, 144
  %189 = icmp ult i64 %188, 3
  %190 = inttoptr i64 %186 to %"struct.webrtc::Vp8EncoderConfig"*
  br i1 %189, label %191, label %214

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 1
  %193 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %194, %186
  %196 = sdiv exact i64 %195, 144
  %197 = call i8* @_Znwm(i64 432) #20
  %198 = bitcast i8* %197 to %"struct.webrtc::Vp8EncoderConfig"*
  %199 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %198, i64 %196
  %200 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %199 to i64
  %201 = getelementptr inbounds i8, i8* %197, i64 432
  %202 = ptrtoint i8* %201 to i64
  %203 = sdiv exact i64 %195, -144
  %204 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %199, i64 %203
  %205 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %204 to i64
  %206 = icmp sgt i64 %195, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %191
  %208 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %209, i64 %195, i1 false) #19
  br label %210

210:                                              ; preds = %207, %191
  store i64 %205, i64* %185, align 8
  store i64 %200, i64* %193, align 8
  store i64 %202, i64* %183, align 8
  %211 = icmp eq i64 %186, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %190, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %213) #20
  br label %214

214:                                              ; preds = %181, %210, %212
  %215 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 2, i32 0, i32 0
  %216 = bitcast %struct.vpx_rational** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"class.std::__1::vector.169"* %55 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %217, %219
  %221 = ashr exact i64 %220, 3
  %222 = icmp ult i64 %221, 3
  br i1 %222, label %223, label %243

223:                                              ; preds = %214
  %224 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 1
  %225 = bitcast %struct.vpx_rational** %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %226, %219
  %228 = ashr exact i64 %227, 3
  %229 = call i8* @_Znwm(i64 24) #20
  %230 = bitcast i8* %229 to %struct.vpx_rational*
  %231 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %230, i64 %228
  %232 = ptrtoint %struct.vpx_rational* %231 to i64
  %233 = getelementptr inbounds i8, i8* %229, i64 24
  %234 = ptrtoint i8* %233 to i64
  %235 = ptrtoint i8* %229 to i64
  %236 = icmp sgt i64 %227, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %223
  %238 = inttoptr i64 %219 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %229, i8* align 4 %238, i64 %227, i1 false) #19
  br label %239

239:                                              ; preds = %237, %223
  store i64 %235, i64* %218, align 8
  store i64 %232, i64* %225, align 8
  store i64 %234, i64* %216, align 8
  %240 = icmp eq i64 %219, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %239
  %242 = inttoptr i64 %219 to i8*
  call void @_ZdlPv(i8* %242) #20
  br label %243

243:                                              ; preds = %241, %239, %214
  ret void
}

declare void @_ZN6webrtc18CpuSpeedExperimentC1Ev(%"class.webrtc::CpuSpeedExperiment"*) unnamed_addr #2

declare void @_ZN6webrtc19RateControlSettings20ParseFromFieldTrialsEv(%"class.webrtc::RateControlSettings"* sret) local_unnamed_addr #2

declare void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN6webrtc16LibvpxVp8Encoder28ParseVariableFramerateConfigENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.webrtc::FieldTrialFlag", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.webrtc::FieldTrialParameter.203", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.webrtc::FieldTrialParameter.297", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.webrtc::FieldTrialParameter.297", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca [4 x %"class.webrtc::FieldTrialParameterInterface"*], align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = bitcast %"class.webrtc::FieldTrialFlag"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 64, i1 false)
  %16 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 8, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  store i64 7234307546238118212, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to i8*
  store i8 0, i8* %20, align 8
  call void @_ZN6webrtc14FieldTrialFlagC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialFlag"* nonnull %5, %"class.std::__1::basic_string"* nonnull %6) #19
  %21 = load i8, i8* %17, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %25) #20
  br label %26

26:                                               ; preds = %1, %23
  %27 = bitcast %"class.webrtc::FieldTrialParameter.203"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %27) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast ({ %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double }* @__const._ZN6webrtc16LibvpxVp8Encoder28ParseVariableFramerateConfigENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE.framerate_limit to i8*), i64 72, i1 false)
  %28 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 7, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i64 7, i1 false) #19
  %31 = getelementptr inbounds i8, i8* %30, i64 7
  store i8 0, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32)
  %33 = bitcast %"class.webrtc::FieldTrialParameter.203"* %7 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %30, i64 24, i1 false) #19
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* nonnull %33, %"class.std::__1::basic_string"* nonnull %4) #19
  %34 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #20
  br label %41

41:                                               ; preds = %38, %26
  %42 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.203", %"class.webrtc::FieldTrialParameter.203"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc19FieldTrialParameterIdEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.203", %"class.webrtc::FieldTrialParameter.203"* %7, i64 0, i32 1
  store double 5.000000e+00, double* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32)
  %44 = bitcast %"class.webrtc::FieldTrialParameter.297"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %44) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 64, i1 false)
  %45 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 6, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i64 6, i1 false) #19
  %48 = getelementptr inbounds i8, i8* %47, i64 6
  store i8 0, i8* %48, align 2
  %49 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49)
  %50 = bitcast %"class.webrtc::FieldTrialParameter.297"* %9 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %49, i8* nonnull align 8 %47, i64 24, i1 false) #19
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* nonnull %50, %"class.std::__1::basic_string"* nonnull %3) #19
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %41
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #20
  br label %58

58:                                               ; preds = %55, %41
  %59 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.297", %"class.webrtc::FieldTrialParameter.297"* %9, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc19FieldTrialParameterIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  %60 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.297", %"class.webrtc::FieldTrialParameter.297"* %9, i64 0, i32 1
  store i32 15, i32* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49)
  %61 = bitcast %"class.webrtc::FieldTrialParameter.297"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %61) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 64, i1 false)
  %62 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  store i8 10, i8* %63, align 1
  %64 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i64 10, i1 false) #19
  %65 = getelementptr inbounds i8, i8* %64, i64 10
  store i8 0, i8* %65, align 2
  %66 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66)
  %67 = bitcast %"class.webrtc::FieldTrialParameter.297"* %11 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 8 %64, i64 24, i1 false) #19
  call void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"* nonnull %67, %"class.std::__1::basic_string"* nonnull %2) #19
  %68 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %58
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #20
  br label %75

75:                                               ; preds = %72, %58
  %76 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.297", %"class.webrtc::FieldTrialParameter.297"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc19FieldTrialParameterIiEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %77 = getelementptr inbounds %"class.webrtc::FieldTrialParameter.297", %"class.webrtc::FieldTrialParameter.297"* %11, i64 0, i32 1
  store i32 30, i32* %77, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66)
  %78 = bitcast [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %78) #19
  %79 = getelementptr inbounds [4 x %"class.webrtc::FieldTrialParameterInterface"*], [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13, i64 0, i64 0
  %80 = bitcast [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13 to %"class.webrtc::FieldTrialFlag"**
  store %"class.webrtc::FieldTrialFlag"* %5, %"class.webrtc::FieldTrialFlag"** %80, align 8
  %81 = getelementptr inbounds [4 x %"class.webrtc::FieldTrialParameterInterface"*], [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13, i64 0, i64 1
  %82 = bitcast %"class.webrtc::FieldTrialParameterInterface"** %81 to %"class.webrtc::FieldTrialParameter.203"**
  store %"class.webrtc::FieldTrialParameter.203"* %7, %"class.webrtc::FieldTrialParameter.203"** %82, align 8
  %83 = getelementptr inbounds [4 x %"class.webrtc::FieldTrialParameterInterface"*], [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13, i64 0, i64 2
  %84 = bitcast %"class.webrtc::FieldTrialParameterInterface"** %83 to %"class.webrtc::FieldTrialParameter.297"**
  store %"class.webrtc::FieldTrialParameter.297"* %9, %"class.webrtc::FieldTrialParameter.297"** %84, align 8
  %85 = getelementptr inbounds [4 x %"class.webrtc::FieldTrialParameterInterface"*], [4 x %"class.webrtc::FieldTrialParameterInterface"*]* %13, i64 0, i64 3
  %86 = bitcast %"class.webrtc::FieldTrialParameterInterface"** %85 to %"class.webrtc::FieldTrialParameter.297"**
  store %"class.webrtc::FieldTrialParameter.297"* %11, %"class.webrtc::FieldTrialParameter.297"** %86, align 8
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %14, %"class.std::__1::basic_string"* dereferenceable(24) %0) #19
  call void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"** nonnull %79, i64 4, %"class.std::__1::basic_string"* nonnull %14) #19
  %87 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %75
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #20
  br label %94

94:                                               ; preds = %75, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %78) #19
  %95 = call zeroext i1 @_ZNK6webrtc14FieldTrialFlag3GetEv(%"class.webrtc::FieldTrialFlag"* nonnull %5) #19
  %96 = xor i1 %95, true
  %97 = load double, double* %43, align 8
  %98 = fptrunc double %97 to float
  %99 = bitcast float %98 to i32
  %100 = load i32, i32* %60, align 4
  %101 = zext i32 %100 to i64
  %102 = load i32, i32* %77, align 4
  %103 = zext i32 %102 to i64
  %104 = shl nuw i64 %103, 32
  %105 = or i64 %104, %101
  call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* nonnull %67) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %61) #19
  call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* nonnull %50) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %44) #19
  call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %27) #19
  %106 = bitcast %"class.webrtc::FieldTrialFlag"* %5 to %"class.webrtc::FieldTrialParameterInterface"*
  call void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"* nonnull %106) #19
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #19
  %107 = zext i1 %96 to i64
  %108 = zext i32 %99 to i64
  %109 = shl nuw i64 %108, 32
  %110 = or i64 %109, %107
  %111 = or i64 %110, 2863311360
  %112 = insertvalue { i64, i64 } undef, i64 %111, 0
  %113 = insertvalue { i64, i64 } %112, i64 %105, 1
  ret { i64, i64 } %113
}

declare void @_ZN6webrtc19FramerateControllerC1Ef(%"class.webrtc::FramerateController"*, float) unnamed_addr #2

declare void @_ZN6webrtc28LibvpxVp8EncoderInfoSettingsC1Ev(%"class.webrtc::LibvpxVp8EncoderInfoSettings"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.75"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.webrtc::EncodedImage"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.75"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 272
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.webrtc::EncodedImage"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.webrtc::EncodedImage"** %13 to i64*
  %15 = icmp ugt i64 %1, 67818912035696880
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #21
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 272
  %21 = mul i64 %1, 272
  %22 = tail call i8* @_Znwm(i64 %21) #20
  %23 = bitcast i8* %22 to %"class.webrtc::EncodedImage"*
  %24 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %23, i64 %20
  %25 = ptrtoint %"class.webrtc::EncodedImage"* %24 to i64
  %26 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %23, i64 %1
  %27 = ptrtoint %"class.webrtc::EncodedImage"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.webrtc::EncodedImage"*
  %29 = icmp eq %"class.webrtc::EncodedImage"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.webrtc::EncodedImage"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.webrtc::EncodedImage"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %31, i64 -1
  %34 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %32, i64 -1
  tail call void @_ZN6webrtc12EncodedImageC1EOS0_(%"class.webrtc::EncodedImage"* %33, %"class.webrtc::EncodedImage"* dereferenceable(272) %34) #19
  %35 = icmp eq %"class.webrtc::EncodedImage"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.webrtc::EncodedImage"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.webrtc::EncodedImage"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.webrtc::EncodedImage"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.webrtc::EncodedImage"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.webrtc::EncodedImage"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.webrtc::EncodedImage"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %48, i64 -1
  tail call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* %49) #19
  %50 = icmp eq %"class.webrtc::EncodedImage"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.55"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.55", align 16
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 6
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %49

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.55"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #19
  %12 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %3, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #19
  %14 = icmp slt i64 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector.55"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #21
  unreachable

17:                                               ; preds = %10
  %18 = add nsw i64 %1, -1
  %19 = lshr i64 %18, 6
  %20 = add nuw nsw i64 %19, 1
  %21 = shl nuw nsw i64 %20, 3
  %22 = tail call i8* @_Znwm(i64 %21) #20
  %23 = bitcast %"class.std::__1::vector.55"* %3 to i8**
  store i8* %22, i8** %23, align 16
  store i64 0, i64* %12, align 8
  store i64 %20, i64* %13, align 16
  %24 = bitcast %"class.std::__1::vector.55"* %0 to i64*
  %25 = load i64, i64* %24, align 8, !noalias !3
  %26 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %25, i64* %26, align 8, !alias.scope !3
  %27 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 0, i32* %27, align 8, !alias.scope !3
  %28 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8, !noalias !8
  %30 = inttoptr i64 %25 to i64*
  %31 = lshr i64 %29, 6
  %32 = getelementptr inbounds i64, i64* %30, i64 %31
  %33 = trunc i64 %29 to i32
  %34 = and i32 %33, 63
  %35 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 0
  store i64* %32, i64** %35, align 8, !alias.scope !11
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %34, i32* %36, align 8, !alias.scope !11
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.55"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5)
  %37 = load i64, i64* %24, align 8
  %38 = bitcast %"class.std::__1::vector.55"* %3 to i64*
  %39 = bitcast %"class.std::__1::vector.55"* %3 to <2 x i64>*
  %40 = load <2 x i64>, <2 x i64>* %39, align 16
  store i64 %37, i64* %38, align 16
  %41 = load i64, i64* %28, align 8
  %42 = bitcast %"class.std::__1::vector.55"* %0 to <2 x i64>*
  store <2 x i64> %40, <2 x i64>* %42, align 8
  store i64 %41, i64* %12, align 8
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %13, align 16
  store i64 %44, i64* %6, align 8
  store i64 %43, i64* %13, align 16
  %45 = icmp eq i64 %37, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %17
  %47 = inttoptr i64 %37 to i8*
  call void @_ZdlPv(i8* %47) #20
  br label %48

48:                                               ; preds = %17, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #19
  br label %49

49:                                               ; preds = %48, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignEmRKi(%"class.std::__1::vector.61"*, i64, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i32* %2 to i8*
  %5 = bitcast i32* %2 to i8*
  %6 = bitcast i32* %2 to i8*
  %7 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.61"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %250, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i32*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %11
  %22 = ashr exact i64 %21, 2
  %23 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 0
  %24 = icmp ult i64 %22, %1
  %25 = select i1 %24, i64 %22, i64 %1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %126, label %27

27:                                               ; preds = %15
  %28 = icmp ult i64 %25, 8
  br i1 %28, label %86, label %29

29:                                               ; preds = %27
  %30 = getelementptr i32, i32* %16, i64 %25
  %31 = getelementptr i8, i8* %6, i64 1
  %32 = icmp ugt i8* %31, %17
  %33 = icmp ugt i32* %30, %2
  %34 = and i1 %32, %33
  br i1 %34, label %86, label %35

35:                                               ; preds = %29
  %36 = and i64 %25, -8
  %37 = getelementptr i32, i32* %16, i64 %36
  %38 = sub i64 %25, %36
  %39 = add i64 %36, -8
  %40 = lshr exact i64 %39, 3
  %41 = add nuw nsw i64 %40, 1
  %42 = and i64 %41, 1
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %35
  %45 = sub nuw nsw i64 %41, %42
  %46 = load i32, i32* %2, align 4, !alias.scope !14
  %47 = insertelement <4 x i32> undef, i32 %46, i32 0
  %48 = shufflevector <4 x i32> %47, <4 x i32> undef, <4 x i32> zeroinitializer
  %49 = insertelement <4 x i32> undef, i32 %46, i32 0
  %50 = shufflevector <4 x i32> %49, <4 x i32> undef, <4 x i32> zeroinitializer
  %51 = load i32, i32* %2, align 4, !alias.scope !14
  %52 = insertelement <4 x i32> undef, i32 %51, i32 0
  %53 = shufflevector <4 x i32> %52, <4 x i32> undef, <4 x i32> zeroinitializer
  %54 = insertelement <4 x i32> undef, i32 %51, i32 0
  %55 = shufflevector <4 x i32> %54, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %56

56:                                               ; preds = %56, %44
  %57 = phi i64 [ 0, %44 ], [ %68, %56 ]
  %58 = phi i64 [ %45, %44 ], [ %69, %56 ]
  %59 = getelementptr i32, i32* %16, i64 %57
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> %48, <4 x i32>* %60, align 4, !alias.scope !17, !noalias !14
  %61 = getelementptr i32, i32* %59, i64 4
  %62 = bitcast i32* %61 to <4 x i32>*
  store <4 x i32> %50, <4 x i32>* %62, align 4, !alias.scope !17, !noalias !14
  %63 = or i64 %57, 8
  %64 = getelementptr i32, i32* %16, i64 %63
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> %53, <4 x i32>* %65, align 4, !alias.scope !17, !noalias !14
  %66 = getelementptr i32, i32* %64, i64 4
  %67 = bitcast i32* %66 to <4 x i32>*
  store <4 x i32> %55, <4 x i32>* %67, align 4, !alias.scope !17, !noalias !14
  %68 = add i64 %57, 16
  %69 = add i64 %58, -2
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %56, !llvm.loop !19

71:                                               ; preds = %56, %35
  %72 = phi i64 [ 0, %35 ], [ %68, %56 ]
  %73 = icmp eq i64 %42, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = getelementptr i32, i32* %16, i64 %72
  %76 = load i32, i32* %2, align 4, !alias.scope !14
  %77 = insertelement <4 x i32> undef, i32 %76, i32 0
  %78 = shufflevector <4 x i32> %77, <4 x i32> undef, <4 x i32> zeroinitializer
  %79 = insertelement <4 x i32> undef, i32 %76, i32 0
  %80 = shufflevector <4 x i32> %79, <4 x i32> undef, <4 x i32> zeroinitializer
  %81 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !17, !noalias !14
  %82 = getelementptr i32, i32* %75, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %83, align 4, !alias.scope !17, !noalias !14
  br label %84

84:                                               ; preds = %71, %74
  %85 = icmp eq i64 %25, %36
  br i1 %85, label %126, label %86

86:                                               ; preds = %84, %29, %27
  %87 = phi i32* [ %16, %29 ], [ %16, %27 ], [ %37, %84 ]
  %88 = phi i64 [ %25, %29 ], [ %25, %27 ], [ %38, %84 ]
  %89 = add i64 %88, -1
  %90 = and i64 %88, 7
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %101, label %92

92:                                               ; preds = %86, %92
  %93 = phi i32* [ %97, %92 ], [ %87, %86 ]
  %94 = phi i64 [ %98, %92 ], [ %88, %86 ]
  %95 = phi i64 [ %99, %92 ], [ %90, %86 ]
  %96 = load i32, i32* %2, align 4
  store i32 %96, i32* %93, align 4
  %97 = getelementptr inbounds i32, i32* %93, i64 1
  %98 = add i64 %94, -1
  %99 = add i64 %95, -1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %92, !llvm.loop !21

101:                                              ; preds = %92, %86
  %102 = phi i32* [ %87, %86 ], [ %97, %92 ]
  %103 = phi i64 [ %88, %86 ], [ %98, %92 ]
  %104 = icmp ult i64 %89, 7
  br i1 %104, label %126, label %105

105:                                              ; preds = %101, %105
  %106 = phi i32* [ %123, %105 ], [ %102, %101 ]
  %107 = phi i64 [ %124, %105 ], [ %103, %101 ]
  %108 = load i32, i32* %2, align 4
  store i32 %108, i32* %106, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 1
  %110 = load i32, i32* %2, align 4
  store i32 %110, i32* %109, align 4
  %111 = getelementptr inbounds i32, i32* %106, i64 2
  %112 = load i32, i32* %2, align 4
  store i32 %112, i32* %111, align 4
  %113 = getelementptr inbounds i32, i32* %106, i64 3
  %114 = load i32, i32* %2, align 4
  store i32 %114, i32* %113, align 4
  %115 = getelementptr inbounds i32, i32* %106, i64 4
  %116 = load i32, i32* %2, align 4
  store i32 %116, i32* %115, align 4
  %117 = getelementptr inbounds i32, i32* %106, i64 5
  %118 = load i32, i32* %2, align 4
  store i32 %118, i32* %117, align 4
  %119 = getelementptr inbounds i32, i32* %106, i64 6
  %120 = load i32, i32* %2, align 4
  store i32 %120, i32* %119, align 4
  %121 = getelementptr inbounds i32, i32* %106, i64 7
  %122 = load i32, i32* %2, align 4
  store i32 %122, i32* %121, align 4
  %123 = getelementptr inbounds i32, i32* %106, i64 8
  %124 = add i64 %107, -8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %105, !llvm.loop !23

126:                                              ; preds = %101, %105, %84, %15
  br i1 %24, label %127, label %247

127:                                              ; preds = %126
  %128 = sub i64 %1, %22
  %129 = load i64, i64* %19, align 8
  %130 = inttoptr i64 %129 to i32*
  %131 = inttoptr i64 %129 to i8*
  %132 = getelementptr inbounds i32, i32* %130, i64 %128
  %133 = icmp eq i64 %128, 0
  br i1 %133, label %245, label %134

134:                                              ; preds = %127
  %135 = shl i64 %1, 2
  %136 = add i64 %135, -4
  %137 = sub i64 %136, %21
  %138 = lshr i64 %137, 2
  %139 = add nuw nsw i64 %138, 1
  %140 = icmp ult i64 %139, 8
  br i1 %140, label %141, label %163

141:                                              ; preds = %222, %163, %134
  %142 = phi i32* [ %130, %163 ], [ %130, %134 ], [ %176, %222 ]
  %143 = ptrtoint i32* %142 to i64
  %144 = xor i64 %22, -1
  %145 = add i64 %144, %1
  %146 = getelementptr i32, i32* %130, i64 %145
  %147 = ptrtoint i32* %146 to i64
  %148 = sub i64 %147, %143
  %149 = lshr i64 %148, 2
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 7
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %160, label %153

153:                                              ; preds = %141, %153
  %154 = phi i32* [ %157, %153 ], [ %142, %141 ]
  %155 = phi i64 [ %158, %153 ], [ %151, %141 ]
  %156 = load i32, i32* %2, align 4
  store i32 %156, i32* %154, align 4
  %157 = getelementptr inbounds i32, i32* %154, i64 1
  %158 = add i64 %155, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %153, !llvm.loop !24

160:                                              ; preds = %153, %141
  %161 = phi i32* [ %142, %141 ], [ %157, %153 ]
  %162 = icmp ult i64 %148, 28
  br i1 %162, label %224, label %226

163:                                              ; preds = %134
  %164 = shl i64 %1, 2
  %165 = add i64 %164, -4
  %166 = sub i64 %165, %21
  %167 = lshr i64 %166, 2
  %168 = add nuw nsw i64 %167, 1
  %169 = getelementptr i32, i32* %130, i64 %168
  %170 = getelementptr i8, i8* %5, i64 1
  %171 = icmp ugt i8* %170, %131
  %172 = icmp ugt i32* %169, %2
  %173 = and i1 %171, %172
  br i1 %173, label %141, label %174

174:                                              ; preds = %163
  %175 = and i64 %139, 9223372036854775800
  %176 = getelementptr i32, i32* %130, i64 %175
  %177 = add nsw i64 %175, -8
  %178 = lshr exact i64 %177, 3
  %179 = add nuw nsw i64 %178, 1
  %180 = and i64 %179, 1
  %181 = icmp eq i64 %177, 0
  br i1 %181, label %209, label %182

182:                                              ; preds = %174
  %183 = sub nuw nsw i64 %179, %180
  %184 = load i32, i32* %2, align 4, !alias.scope !25
  %185 = insertelement <4 x i32> undef, i32 %184, i32 0
  %186 = shufflevector <4 x i32> %185, <4 x i32> undef, <4 x i32> zeroinitializer
  %187 = insertelement <4 x i32> undef, i32 %184, i32 0
  %188 = shufflevector <4 x i32> %187, <4 x i32> undef, <4 x i32> zeroinitializer
  %189 = load i32, i32* %2, align 4, !alias.scope !25
  %190 = insertelement <4 x i32> undef, i32 %189, i32 0
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> zeroinitializer
  %192 = insertelement <4 x i32> undef, i32 %189, i32 0
  %193 = shufflevector <4 x i32> %192, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %194

194:                                              ; preds = %194, %182
  %195 = phi i64 [ 0, %182 ], [ %206, %194 ]
  %196 = phi i64 [ %183, %182 ], [ %207, %194 ]
  %197 = getelementptr i32, i32* %130, i64 %195
  %198 = bitcast i32* %197 to <4 x i32>*
  store <4 x i32> %186, <4 x i32>* %198, align 4, !alias.scope !28, !noalias !25
  %199 = getelementptr i32, i32* %197, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  store <4 x i32> %188, <4 x i32>* %200, align 4, !alias.scope !28, !noalias !25
  %201 = or i64 %195, 8
  %202 = getelementptr i32, i32* %130, i64 %201
  %203 = bitcast i32* %202 to <4 x i32>*
  store <4 x i32> %191, <4 x i32>* %203, align 4, !alias.scope !28, !noalias !25
  %204 = getelementptr i32, i32* %202, i64 4
  %205 = bitcast i32* %204 to <4 x i32>*
  store <4 x i32> %193, <4 x i32>* %205, align 4, !alias.scope !28, !noalias !25
  %206 = add i64 %195, 16
  %207 = add i64 %196, -2
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %209, label %194, !llvm.loop !30

209:                                              ; preds = %194, %174
  %210 = phi i64 [ 0, %174 ], [ %206, %194 ]
  %211 = icmp eq i64 %180, 0
  br i1 %211, label %222, label %212

212:                                              ; preds = %209
  %213 = getelementptr i32, i32* %130, i64 %210
  %214 = load i32, i32* %2, align 4, !alias.scope !25
  %215 = insertelement <4 x i32> undef, i32 %214, i32 0
  %216 = shufflevector <4 x i32> %215, <4 x i32> undef, <4 x i32> zeroinitializer
  %217 = insertelement <4 x i32> undef, i32 %214, i32 0
  %218 = shufflevector <4 x i32> %217, <4 x i32> undef, <4 x i32> zeroinitializer
  %219 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %219, align 4, !alias.scope !28, !noalias !25
  %220 = getelementptr i32, i32* %213, i64 4
  %221 = bitcast i32* %220 to <4 x i32>*
  store <4 x i32> %218, <4 x i32>* %221, align 4, !alias.scope !28, !noalias !25
  br label %222

222:                                              ; preds = %209, %212
  %223 = icmp eq i64 %139, %175
  br i1 %223, label %224, label %141

224:                                              ; preds = %160, %226, %222
  %225 = ptrtoint i32* %132 to i64
  br label %245

226:                                              ; preds = %160, %226
  %227 = phi i32* [ %243, %226 ], [ %161, %160 ]
  %228 = load i32, i32* %2, align 4
  store i32 %228, i32* %227, align 4
  %229 = getelementptr inbounds i32, i32* %227, i64 1
  %230 = load i32, i32* %2, align 4
  store i32 %230, i32* %229, align 4
  %231 = getelementptr inbounds i32, i32* %227, i64 2
  %232 = load i32, i32* %2, align 4
  store i32 %232, i32* %231, align 4
  %233 = getelementptr inbounds i32, i32* %227, i64 3
  %234 = load i32, i32* %2, align 4
  store i32 %234, i32* %233, align 4
  %235 = getelementptr inbounds i32, i32* %227, i64 4
  %236 = load i32, i32* %2, align 4
  store i32 %236, i32* %235, align 4
  %237 = getelementptr inbounds i32, i32* %227, i64 5
  %238 = load i32, i32* %2, align 4
  store i32 %238, i32* %237, align 4
  %239 = getelementptr inbounds i32, i32* %227, i64 6
  %240 = load i32, i32* %2, align 4
  store i32 %240, i32* %239, align 4
  %241 = getelementptr inbounds i32, i32* %227, i64 7
  %242 = load i32, i32* %2, align 4
  store i32 %242, i32* %241, align 4
  %243 = getelementptr inbounds i32, i32* %227, i64 8
  %244 = icmp eq i32* %243, %132
  br i1 %244, label %224, label %226, !llvm.loop !31

245:                                              ; preds = %127, %224
  %246 = phi i64 [ %225, %224 ], [ %129, %127 ]
  store i64 %246, i64* %19, align 8
  br label %389

247:                                              ; preds = %126
  %248 = load i32*, i32** %23, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %1
  store i32* %249, i32** %18, align 8
  br label %389

250:                                              ; preds = %3
  %251 = icmp eq i64 %11, 0
  br i1 %251, label %257, label %252

252:                                              ; preds = %250
  %253 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %254 = bitcast i32** %253 to i64*
  store i64 %11, i64* %254, align 8
  %255 = inttoptr i64 %11 to i8*
  tail call void @_ZdlPv(i8* %255) #20
  %256 = bitcast %"class.std::__1::vector.61"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 24, i1 false) #19
  br label %257

257:                                              ; preds = %250, %252
  %258 = phi i64 [ %9, %250 ], [ 0, %252 ]
  %259 = icmp ugt i64 %1, 4611686018427387903
  br i1 %259, label %260, label %262

260:                                              ; preds = %257
  %261 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %261) #21
  unreachable

262:                                              ; preds = %257
  %263 = ashr exact i64 %258, 2
  %264 = icmp ult i64 %263, 2305843009213693951
  br i1 %264, label %265, label %272

265:                                              ; preds = %262
  %266 = ashr exact i64 %258, 1
  %267 = icmp ult i64 %266, %1
  br i1 %267, label %272, label %268

268:                                              ; preds = %265
  %269 = icmp ugt i64 %266, 4611686018427387903
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %271) #21
  unreachable

272:                                              ; preds = %265, %262, %268
  %273 = phi i64 [ %266, %268 ], [ 4611686018427387903, %262 ], [ %1, %265 ]
  %274 = shl i64 %273, 2
  %275 = tail call i8* @_Znwm(i64 %274) #20
  %276 = bitcast i8* %275 to i32*
  %277 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %278 = bitcast i32** %277 to i8**
  store i8* %275, i8** %278, align 8
  %279 = bitcast %"class.std::__1::vector.61"* %0 to i8**
  store i8* %275, i8** %279, align 8
  %280 = getelementptr inbounds i32, i32* %276, i64 %273
  store i32* %280, i32** %7, align 8
  %281 = getelementptr inbounds i32, i32* %276, i64 %1
  %282 = shl nsw i64 %1, 2
  %283 = add i64 %282, -4
  %284 = lshr exact i64 %283, 2
  %285 = add nuw nsw i64 %284, 1
  %286 = icmp ult i64 %285, 8
  br i1 %286, label %345, label %287

287:                                              ; preds = %272
  %288 = shl nsw i64 %1, 2
  %289 = getelementptr i8, i8* %275, i64 %288
  %290 = getelementptr i8, i8* %4, i64 1
  %291 = bitcast i32* %2 to i8*
  %292 = icmp ult i8* %275, %290
  %293 = icmp ugt i8* %289, %291
  %294 = and i1 %292, %293
  br i1 %294, label %345, label %295

295:                                              ; preds = %287
  %296 = and i64 %285, 9223372036854775800
  %297 = getelementptr i32, i32* %276, i64 %296
  %298 = add nsw i64 %296, -8
  %299 = lshr exact i64 %298, 3
  %300 = add nuw nsw i64 %299, 1
  %301 = and i64 %300, 1
  %302 = icmp eq i64 %298, 0
  br i1 %302, label %330, label %303

303:                                              ; preds = %295
  %304 = sub nuw nsw i64 %300, %301
  %305 = load i32, i32* %2, align 4, !alias.scope !32
  %306 = insertelement <4 x i32> undef, i32 %305, i32 0
  %307 = shufflevector <4 x i32> %306, <4 x i32> undef, <4 x i32> zeroinitializer
  %308 = insertelement <4 x i32> undef, i32 %305, i32 0
  %309 = shufflevector <4 x i32> %308, <4 x i32> undef, <4 x i32> zeroinitializer
  %310 = load i32, i32* %2, align 4, !alias.scope !32
  %311 = insertelement <4 x i32> undef, i32 %310, i32 0
  %312 = shufflevector <4 x i32> %311, <4 x i32> undef, <4 x i32> zeroinitializer
  %313 = insertelement <4 x i32> undef, i32 %310, i32 0
  %314 = shufflevector <4 x i32> %313, <4 x i32> undef, <4 x i32> zeroinitializer
  br label %315

315:                                              ; preds = %315, %303
  %316 = phi i64 [ 0, %303 ], [ %327, %315 ]
  %317 = phi i64 [ %304, %303 ], [ %328, %315 ]
  %318 = getelementptr i32, i32* %276, i64 %316
  %319 = bitcast i32* %318 to <4 x i32>*
  store <4 x i32> %307, <4 x i32>* %319, align 4, !alias.scope !35, !noalias !32
  %320 = getelementptr i32, i32* %318, i64 4
  %321 = bitcast i32* %320 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %321, align 4, !alias.scope !35, !noalias !32
  %322 = or i64 %316, 8
  %323 = getelementptr i32, i32* %276, i64 %322
  %324 = bitcast i32* %323 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %324, align 4, !alias.scope !35, !noalias !32
  %325 = getelementptr i32, i32* %323, i64 4
  %326 = bitcast i32* %325 to <4 x i32>*
  store <4 x i32> %314, <4 x i32>* %326, align 4, !alias.scope !35, !noalias !32
  %327 = add i64 %316, 16
  %328 = add i64 %317, -2
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %315, !llvm.loop !37

330:                                              ; preds = %315, %295
  %331 = phi i64 [ 0, %295 ], [ %327, %315 ]
  %332 = icmp eq i64 %301, 0
  br i1 %332, label %343, label %333

333:                                              ; preds = %330
  %334 = getelementptr i32, i32* %276, i64 %331
  %335 = load i32, i32* %2, align 4, !alias.scope !32
  %336 = insertelement <4 x i32> undef, i32 %335, i32 0
  %337 = shufflevector <4 x i32> %336, <4 x i32> undef, <4 x i32> zeroinitializer
  %338 = insertelement <4 x i32> undef, i32 %335, i32 0
  %339 = shufflevector <4 x i32> %338, <4 x i32> undef, <4 x i32> zeroinitializer
  %340 = bitcast i32* %334 to <4 x i32>*
  store <4 x i32> %337, <4 x i32>* %340, align 4, !alias.scope !35, !noalias !32
  %341 = getelementptr i32, i32* %334, i64 4
  %342 = bitcast i32* %341 to <4 x i32>*
  store <4 x i32> %339, <4 x i32>* %342, align 4, !alias.scope !35, !noalias !32
  br label %343

343:                                              ; preds = %330, %333
  %344 = icmp eq i64 %285, %296
  br i1 %344, label %386, label %345

345:                                              ; preds = %343, %287, %272
  %346 = phi i32* [ %276, %287 ], [ %276, %272 ], [ %297, %343 ]
  %347 = ptrtoint i32* %346 to i64
  %348 = shl nsw i64 %1, 2
  %349 = add i64 %348, -4
  %350 = sub i64 %349, %347
  %351 = getelementptr i8, i8* %275, i64 %350
  %352 = ptrtoint i8* %351 to i64
  %353 = lshr i64 %352, 2
  %354 = add nuw nsw i64 %353, 1
  %355 = and i64 %354, 7
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %364, label %357

357:                                              ; preds = %345, %357
  %358 = phi i32* [ %361, %357 ], [ %346, %345 ]
  %359 = phi i64 [ %362, %357 ], [ %355, %345 ]
  %360 = load i32, i32* %2, align 4
  store i32 %360, i32* %358, align 4
  %361 = getelementptr inbounds i32, i32* %358, i64 1
  %362 = add i64 %359, -1
  %363 = icmp eq i64 %362, 0
  br i1 %363, label %364, label %357, !llvm.loop !38

364:                                              ; preds = %357, %345
  %365 = phi i32* [ %346, %345 ], [ %361, %357 ]
  %366 = icmp ult i8* %351, inttoptr (i64 28 to i8*)
  br i1 %366, label %386, label %367

367:                                              ; preds = %364, %367
  %368 = phi i32* [ %384, %367 ], [ %365, %364 ]
  %369 = load i32, i32* %2, align 4
  store i32 %369, i32* %368, align 4
  %370 = getelementptr inbounds i32, i32* %368, i64 1
  %371 = load i32, i32* %2, align 4
  store i32 %371, i32* %370, align 4
  %372 = getelementptr inbounds i32, i32* %368, i64 2
  %373 = load i32, i32* %2, align 4
  store i32 %373, i32* %372, align 4
  %374 = getelementptr inbounds i32, i32* %368, i64 3
  %375 = load i32, i32* %2, align 4
  store i32 %375, i32* %374, align 4
  %376 = getelementptr inbounds i32, i32* %368, i64 4
  %377 = load i32, i32* %2, align 4
  store i32 %377, i32* %376, align 4
  %378 = getelementptr inbounds i32, i32* %368, i64 5
  %379 = load i32, i32* %2, align 4
  store i32 %379, i32* %378, align 4
  %380 = getelementptr inbounds i32, i32* %368, i64 6
  %381 = load i32, i32* %2, align 4
  store i32 %381, i32* %380, align 4
  %382 = getelementptr inbounds i32, i32* %368, i64 7
  %383 = load i32, i32* %2, align 4
  store i32 %383, i32* %382, align 4
  %384 = getelementptr inbounds i32, i32* %368, i64 8
  %385 = icmp eq i32* %384, %281
  br i1 %385, label %386, label %367, !llvm.loop !39

386:                                              ; preds = %364, %367, %343
  %387 = bitcast i32** %277 to i64*
  %388 = ptrtoint i32* %281 to i64
  store i64 %388, i64* %387, align 8
  br label %389

389:                                              ; preds = %245, %247, %386
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8EncoderD2Ev(%"class.webrtc::LibvpxVp8Encoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6webrtc16LibvpxVp8EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call i32 @_ZN6webrtc16LibvpxVp8Encoder7ReleaseEv(%"class.webrtc::LibvpxVp8Encoder"* %0)
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 29, i32 0
  tail call void @_ZN6webrtc19EncoderInfoSettingsD2Ev(%"class.webrtc::EncoderInfoSettings"* %4) #19
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 26, i32 3
  tail call void @_ZN6webrtc14RateStatisticsD1Ev(%"class.webrtc::RateStatistics"* %5) #19
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 0
  %7 = load %struct.vpx_rational*, %struct.vpx_rational** %6, align 8
  %8 = icmp eq %struct.vpx_rational* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = ptrtoint %struct.vpx_rational* %7 to i64
  %11 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 1
  %12 = bitcast %struct.vpx_rational** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast %struct.vpx_rational* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #20
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 0
  %16 = load %"struct.webrtc::Vp8EncoderConfig"*, %"struct.webrtc::Vp8EncoderConfig"** %15, align 8
  %17 = icmp eq %"struct.webrtc::Vp8EncoderConfig"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %16 to i64
  %20 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 1
  %21 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %22) #20
  br label %23

23:                                               ; preds = %14, %18
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %25 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %24, align 8
  %26 = icmp eq %struct.vpx_codec_enc_cfg* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = ptrtoint %struct.vpx_codec_enc_cfg* %25 to i64
  %29 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 1
  %30 = bitcast %struct.vpx_codec_enc_cfg** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %struct.vpx_codec_enc_cfg* %25 to i8*
  tail call void @_ZdlPv(i8* %31) #20
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 0
  %34 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %33, align 8
  %35 = icmp eq %struct.vpx_codec_ctx* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %struct.vpx_codec_ctx* %34 to i64
  %38 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %39 = bitcast %struct.vpx_codec_ctx** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %struct.vpx_codec_ctx* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #20
  br label %41

41:                                               ; preds = %32, %36
  %42 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20
  %43 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %43, align 8
  %45 = icmp eq %"class.webrtc::EncodedImage"* %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.webrtc::EncodedImage"* %44 to i8*
  %48 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 1
  %49 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %48, align 8
  %50 = icmp eq %"class.webrtc::EncodedImage"* %49, %44
  br i1 %50, label %58, label %51

51:                                               ; preds = %46, %51
  %52 = phi %"class.webrtc::EncodedImage"* [ %53, %51 ], [ %49, %46 ]
  %53 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %52, i64 -1
  tail call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* %53) #19
  %54 = icmp eq %"class.webrtc::EncodedImage"* %53, %44
  br i1 %54, label %55, label %51

55:                                               ; preds = %51
  %56 = bitcast %"class.std::__1::vector.75"* %42 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %46
  %59 = phi i8* [ %57, %55 ], [ %47, %46 ]
  store %"class.webrtc::EncodedImage"* %44, %"class.webrtc::EncodedImage"** %48, align 8
  tail call void @_ZdlPv(i8* %59) #20
  br label %60

60:                                               ; preds = %41, %58
  %61 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 0
  %62 = load %struct.vpx_image*, %struct.vpx_image** %61, align 8
  %63 = icmp eq %struct.vpx_image* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = ptrtoint %struct.vpx_image* %62 to i64
  %66 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 1
  %67 = bitcast %struct.vpx_image** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast %struct.vpx_image* %62 to i8*
  tail call void @_ZdlPv(i8* %68) #20
  br label %69

69:                                               ; preds = %60, %64
  %70 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = icmp eq i32* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %69
  %74 = ptrtoint i32* %71 to i64
  %75 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18, i32 0, i32 1
  %76 = bitcast i32** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = bitcast i32* %71 to i8*
  tail call void @_ZdlPv(i8* %77) #20
  br label %78

78:                                               ; preds = %69, %73
  %79 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = bitcast i64* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #20
  br label %84

84:                                               ; preds = %78, %82
  %85 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 0
  %86 = load i64*, i64** %85, align 8
  %87 = icmp eq i64* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %84
  %89 = bitcast i64* %86 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %84, %88
  %91 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 15, i32 0, i32 0
  %92 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %91, align 8
  %93 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %92 to i64
  %96 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 15, i32 0, i32 1
  %97 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %92 to i8*
  tail call void @_ZdlPv(i8* %98) #20
  br label %99

99:                                               ; preds = %90, %94
  %100 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %101 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %100, align 8
  store %"class.webrtc::Vp8FrameBufferController"* null, %"class.webrtc::Vp8FrameBufferController"** %100, align 8
  %102 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.webrtc::Vp8FrameBufferController"* %101 to void (%"class.webrtc::Vp8FrameBufferController"*)***
  %105 = load void (%"class.webrtc::Vp8FrameBufferController"*)**, void (%"class.webrtc::Vp8FrameBufferController"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %105, i64 1
  %107 = load void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %106, align 8
  tail call void %107(%"class.webrtc::Vp8FrameBufferController"* nonnull %101) #19
  br label %108

108:                                              ; preds = %99, %103
  %109 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %110 = load %"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::Vp8FrameBufferControllerFactory"** %109, align 8
  store %"class.webrtc::Vp8FrameBufferControllerFactory"* null, %"class.webrtc::Vp8FrameBufferControllerFactory"** %109, align 8
  %111 = icmp eq %"class.webrtc::Vp8FrameBufferControllerFactory"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = bitcast %"class.webrtc::Vp8FrameBufferControllerFactory"* %110 to void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)***
  %114 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)**, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %114, i64 1
  %116 = load void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)*, void (%"class.webrtc::Vp8FrameBufferControllerFactory"*)** %115, align 8
  tail call void %116(%"class.webrtc::Vp8FrameBufferControllerFactory"* nonnull %110) #19
  br label %117

117:                                              ; preds = %108, %112
  %118 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 18
  %119 = bitcast %"class.std::__1::basic_string"* %118 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @_ZdlPv(i8* %125) #20
  br label %126

126:                                              ; preds = %117, %123
  %127 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc19RateControlSettingsD1Ev(%"class.webrtc::RateControlSettings"* %127) #19
  %128 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc18CpuSpeedExperimentD1Ev(%"class.webrtc::CpuSpeedExperiment"* %128) #19
  %129 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %129, align 8
  store %"class.webrtc::LibvpxInterface"* null, %"class.webrtc::LibvpxInterface"** %129, align 8
  %131 = icmp eq %"class.webrtc::LibvpxInterface"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %126
  %133 = bitcast %"class.webrtc::LibvpxInterface"* %130 to void (%"class.webrtc::LibvpxInterface"*)***
  %134 = load void (%"class.webrtc::LibvpxInterface"*)**, void (%"class.webrtc::LibvpxInterface"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.webrtc::LibvpxInterface"*)*, void (%"class.webrtc::LibvpxInterface"*)** %134, i64 1
  %136 = load void (%"class.webrtc::LibvpxInterface"*)*, void (%"class.webrtc::LibvpxInterface"*)** %135, align 8
  tail call void %136(%"class.webrtc::LibvpxInterface"* nonnull %130) #19
  br label %137

137:                                              ; preds = %126, %132
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc19EncoderInfoSettingsD2Ev(%"class.webrtc::EncoderInfoSettings"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc19RateControlSettingsD1Ev(%"class.webrtc::RateControlSettings"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc18CpuSpeedExperimentD1Ev(%"class.webrtc::CpuSpeedExperiment"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8EncoderD0Ev(%"class.webrtc::LibvpxVp8Encoder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc16LibvpxVp8EncoderD2Ev(%"class.webrtc::LibvpxVp8Encoder"* %0) #19
  %2 = bitcast %"class.webrtc::LibvpxVp8Encoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #20
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder7ReleaseEv(%"class.webrtc::LibvpxVp8Encoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 0
  %3 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 1
  %5 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %4, align 8
  %6 = icmp eq %"class.webrtc::EncodedImage"* %5, %3
  br i1 %6, label %11, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.webrtc::EncodedImage"* [ %9, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 -1
  tail call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* %9) #19
  %10 = icmp eq %"class.webrtc::EncodedImage"* %9, %3
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %1
  store %"class.webrtc::EncodedImage"* %3, %"class.webrtc::EncodedImage"** %4, align 8
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %17 = bitcast %"class.std::__1::vector.136"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  br label %44

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %21 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 0
  %23 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %22, align 8
  %24 = icmp eq %struct.vpx_codec_ctx* %21, %23
  %25 = ptrtoint %struct.vpx_codec_ctx* %23 to i64
  br i1 %24, label %44, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %26, %28
  %29 = phi i32 [ 0, %26 ], [ %39, %28 ]
  %30 = phi %struct.vpx_codec_ctx* [ %21, %26 ], [ %32, %28 ]
  %31 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %27, align 8
  %32 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %30, i64 -1
  %33 = bitcast %"class.webrtc::LibvpxInterface"* %31 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)***
  %34 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)** %34, i64 9
  %36 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)** %35, align 8
  %37 = tail call i32 %36(%"class.webrtc::LibvpxInterface"* %31, %struct.vpx_codec_ctx* %32) #19
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i32 %29, i32 -3
  %40 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %22, align 8
  %41 = icmp eq %struct.vpx_codec_ctx* %32, %40
  br i1 %41, label %42, label %28

42:                                               ; preds = %28
  %43 = ptrtoint %struct.vpx_codec_ctx* %40 to i64
  br label %44

44:                                               ; preds = %15, %42, %19
  %45 = phi i64 [ %18, %15 ], [ %25, %19 ], [ %43, %42 ]
  %46 = phi i32 [ 0, %15 ], [ 0, %19 ], [ %39, %42 ]
  %47 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %48 = bitcast %struct.vpx_codec_ctx** %47 to i64*
  store i64 %45, i64* %48, align 8
  %49 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22
  %50 = bitcast %"class.std::__1::vector.144"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 1
  %53 = bitcast %struct.vpx_codec_enc_cfg** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23
  %55 = bitcast %"class.std::__1::vector.151"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 1
  %58 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 1
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18
  %61 = bitcast %"class.std::__1::vector.61"* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 1
  %66 = load %struct.vpx_image*, %struct.vpx_image** %65, align 8
  %67 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 0
  %68 = load %struct.vpx_image*, %struct.vpx_image** %67, align 8
  %69 = icmp eq %struct.vpx_image* %66, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %85

72:                                               ; preds = %85, %44
  %73 = phi %struct.vpx_image* [ %68, %44 ], [ %93, %85 ]
  %74 = ptrtoint %struct.vpx_image* %73 to i64
  %75 = bitcast %struct.vpx_image** %65 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %77 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %76, align 8
  store %"class.webrtc::Vp8FrameBufferController"* null, %"class.webrtc::Vp8FrameBufferController"** %76, align 8
  %78 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %72
  %80 = bitcast %"class.webrtc::Vp8FrameBufferController"* %77 to void (%"class.webrtc::Vp8FrameBufferController"*)***
  %81 = load void (%"class.webrtc::Vp8FrameBufferController"*)**, void (%"class.webrtc::Vp8FrameBufferController"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %81, i64 1
  %83 = load void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %82, align 8
  tail call void %83(%"class.webrtc::Vp8FrameBufferController"* nonnull %77) #19
  br label %84

84:                                               ; preds = %72, %79
  store i8 0, i8* %12, align 8
  ret i32 %46

85:                                               ; preds = %70, %85
  %86 = phi %struct.vpx_image* [ %66, %70 ], [ %88, %85 ]
  %87 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %71, align 8
  %88 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %86, i64 -1
  %89 = bitcast %"class.webrtc::LibvpxInterface"* %87 to void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)***
  %90 = load void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)**, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)** %90, i64 4
  %92 = load void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)** %91, align 8
  tail call void %92(%"class.webrtc::LibvpxInterface"* %87, %struct.vpx_image* %88) #19
  %93 = load %struct.vpx_image*, %struct.vpx_image** %67, align 8
  %94 = icmp eq %struct.vpx_image* %88, %93
  br i1 %94, label %72, label %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::LibvpxVp8Encoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.std::__1::vector.103", align 8
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %12) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 321, i32 2, i32 0, i32 0) #19
  %13 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %14 = bitcast %"class.std::__1::basic_ostringstream"* %13 to %"class.std::__1::basic_ostream"*
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i64 31) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %12) #19
  br label %248

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %18 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %17, i64 0, i32 0, i32 0
  %19 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %18, align 8
  %20 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %19, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = ptrtoint %struct.vpx_codec_ctx* %19 to i64
  br i1 %22, label %29, label %24

24:                                               ; preds = %16
  %25 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 326, i32 2, i32 0, i32 0) #19
  %26 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %26 to %"class.std::__1::basic_ostream"*
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i64 23) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #19
  br label %248

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %1, i64 0, i32 3
  %31 = load double, double* %30, align 8
  %32 = fcmp olt double %31, 1.000000e+00
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %34) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 331, i32 2, i32 0, i32 0) #19
  %35 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %36 = bitcast %"class.std::__1::basic_ostringstream"* %35 to %"class.std::__1::basic_ostream"*
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i64 40) #19
  %38 = load double, double* %30, align 8
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"* %37, double %38) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %34) #19
  br label %248

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %1, i64 0, i32 2
  %42 = getelementptr inbounds %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation"* %41, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %83

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %47 = bitcast %struct.vpx_codec_ctx** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %23
  %50 = sdiv exact i64 %49, 56
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %248

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %55 = and i64 %50, 4294967295
  %56 = and i64 %50, 1
  %57 = icmp eq i64 %55, 1
  br i1 %57, label %236, label %58

58:                                               ; preds = %53
  %59 = sub nsw i64 %55, %56
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %80, %60 ]
  %62 = phi i64 [ %59, %58 ], [ %81, %60 ]
  %63 = lshr i64 %61, 6
  %64 = and i64 %61, 62
  %65 = shl i64 1, %64
  %66 = load i64*, i64** %54, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 %63
  %68 = xor i64 %65, -1
  %69 = load i64, i64* %67, align 8
  %70 = and i64 %69, %68
  store i64 %70, i64* %67, align 8
  %71 = lshr i64 %61, 6
  %72 = and i64 %61, 62
  %73 = or i64 %72, 1
  %74 = shl i64 1, %73
  %75 = load i64*, i64** %54, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 %71
  %77 = xor i64 %74, -1
  %78 = load i64, i64* %76, align 8
  %79 = and i64 %78, %77
  store i64 %79, i64* %76, align 8
  %80 = add nuw nsw i64 %61, 2
  %81 = add i64 %62, -2
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %236, label %60

83:                                               ; preds = %40
  %84 = fadd double %31, 5.000000e-01
  %85 = fptoui double %84 to i32
  %86 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  store i32 %85, i32* %86, align 4
  %87 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %88 = bitcast %struct.vpx_codec_ctx** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector.136"* %17 to i64*
  %91 = sub i64 %89, %23
  %92 = sdiv exact i64 %91, 56
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %94, label %113

94:                                               ; preds = %83
  %95 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 3
  %96 = tail call zeroext i1 @_ZNK6webrtc19RateControlSettings24Vp8BoostBaseLayerQualityEv(%"class.webrtc::RateControlSettings"* %95) #19
  %97 = load double, double* %30, align 8
  %98 = fcmp ogt double %97, 2.000000e+01
  %99 = and i1 %96, %98
  br i1 %99, label %103, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 8
  %102 = load i32, i32* %101, align 8
  br label %103

103:                                              ; preds = %94, %100
  %104 = phi i32 [ %102, %100 ], [ 45, %94 ]
  %105 = load i64, i64* %88, align 8
  %106 = load i64, i64* %90, align 8
  %107 = sub i64 %105, %106
  %108 = sdiv exact i64 %107, 56
  %109 = add nsw i64 %108, -1
  %110 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %111 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %110, align 8
  %112 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %111, i64 %109, i32 22
  store i32 %104, i32* %112, align 8
  br label %113

113:                                              ; preds = %103, %83
  %114 = load i64, i64* %88, align 8
  %115 = load i64, i64* %90, align 8
  %116 = sub i64 %114, %115
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %248, label %118

118:                                              ; preds = %113
  %119 = sdiv exact i64 %116, 56
  %120 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %121 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %122 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 0
  %123 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::vector.103"* %6 to i8*
  %125 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %6, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %6, i64 0, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  %128 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  %130 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %131 = bitcast %"class.std::__1::basic_ostringstream"* %130 to %"class.std::__1::basic_ostream"*
  br label %132

132:                                              ; preds = %118, %229
  %133 = phi i64 [ %119, %118 ], [ %234, %229 ]
  %134 = phi i64 [ 0, %118 ], [ %230, %229 ]
  %135 = xor i64 %134, -1
  %136 = add i64 %133, %135
  %137 = call i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"* %41, i64 %136) #19
  %138 = udiv i32 %137, 1000
  %139 = icmp ugt i32 %137, 999
  br i1 %139, label %149, label %140

140:                                              ; preds = %132
  %141 = load i64, i64* %88, align 8
  %142 = load i64, i64* %90, align 8
  %143 = sub i64 %141, %142
  %144 = sdiv exact i64 %143, 56
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %168, label %146

146:                                              ; preds = %140
  %147 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %120, align 8
  %148 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %147, i64 %134, i32 20
  store i32 %138, i32* %148, align 8
  br label %202

149:                                              ; preds = %132
  %150 = shl i64 %136, 32
  %151 = ashr exact i64 %150, 32
  %152 = load i64*, i64** %121, align 8
  %153 = lshr i64 %151, 6
  %154 = getelementptr inbounds i64, i64* %152, i64 %153
  %155 = and i64 %151, 63
  %156 = shl i64 1, %155
  %157 = load i64, i64* %154, align 8
  %158 = and i64 %157, %156
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %181

160:                                              ; preds = %149
  %161 = load i64*, i64** %122, align 8
  %162 = getelementptr inbounds i64, i64* %161, i64 %153
  %163 = load i64, i64* %162, align 8
  %164 = or i64 %163, %156
  store i64 %164, i64* %162, align 8
  %165 = load i64*, i64** %121, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 %153
  %167 = load i64, i64* %166, align 8
  br label %181

168:                                              ; preds = %140
  %169 = shl i64 %136, 32
  %170 = ashr exact i64 %169, 32
  %171 = lshr i64 %170, 6
  %172 = and i64 %170, 63
  %173 = shl i64 1, %172
  %174 = load i64*, i64** %121, align 8
  %175 = getelementptr inbounds i64, i64* %174, i64 %171
  %176 = xor i64 %173, -1
  %177 = load i64, i64* %175, align 8
  %178 = and i64 %177, %176
  store i64 %178, i64* %175, align 8
  %179 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %120, align 8
  %180 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %179, i64 %134, i32 20
  store i32 %138, i32* %180, align 8
  br label %202

181:                                              ; preds = %149, %160
  %182 = phi i64 [ %167, %160 ], [ %157, %149 ]
  %183 = phi i64* [ %165, %160 ], [ %152, %149 ]
  %184 = getelementptr inbounds i64, i64* %183, i64 %153
  %185 = or i64 %182, %156
  store i64 %185, i64* %184, align 8
  %186 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %120, align 8
  %187 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %186, i64 %134, i32 20
  store i32 %138, i32* %187, align 8
  %188 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %123, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #19
  call void @_ZNK6webrtc22VideoBitrateAllocation26GetTemporalLayerAllocationEm(%"class.std::__1::vector.103"* nonnull sret %6, %"class.webrtc::VideoBitrateAllocation"* %41, i64 %136) #19
  %189 = load double, double* %30, align 8
  %190 = fadd double %189, 5.000000e-01
  %191 = fptosi double %190 to i32
  %192 = bitcast %"class.webrtc::Vp8FrameBufferController"* %188 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)***
  %193 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*** %192, align 8
  %194 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %193, i64 5
  %195 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %194, align 8
  call void %195(%"class.webrtc::Vp8FrameBufferController"* %188, i64 %136, %"class.std::__1::vector.103"* nonnull dereferenceable(24) %6, i32 %191) #19
  %196 = load i32*, i32** %125, align 8
  %197 = icmp eq i32* %196, null
  br i1 %197, label %201, label %198

198:                                              ; preds = %181
  %199 = ptrtoint i32* %196 to i64
  store i64 %199, i64* %127, align 8
  %200 = bitcast i32* %196 to i8*
  call void @_ZdlPv(i8* %200) #20
  br label %201

201:                                              ; preds = %181, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #19
  br label %202

202:                                              ; preds = %168, %146, %201
  %203 = call zeroext i1 @_ZN6webrtc16LibvpxVp8Encoder22UpdateVpxConfigurationEm(%"class.webrtc::LibvpxVp8Encoder"* %0, i64 %136)
  %204 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %128, align 8
  %205 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %18, align 8
  %206 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %205, i64 %134
  %207 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %120, align 8
  %208 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %207, i64 %134
  %209 = bitcast %"class.webrtc::LibvpxInterface"* %204 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)***
  %210 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*** %209, align 8
  %211 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)** %210, i64 5
  %212 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)** %211, align 8
  %213 = call i32 %212(%"class.webrtc::LibvpxInterface"* %204, %struct.vpx_codec_ctx* %206, %struct.vpx_codec_enc_cfg* %208) #19
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %229, label %215

215:                                              ; preds = %202
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %129) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 383, i32 2, i32 0, i32 0) #19
  %216 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37) #19
  %217 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %216, i32 %213) #19
  %218 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %217, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #19
  %219 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %128, align 8
  %220 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %18, align 8
  %221 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %220, i64 %134
  %222 = bitcast %"class.webrtc::LibvpxInterface"* %219 to i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)***
  %223 = load i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)**, i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*** %222, align 8
  %224 = getelementptr inbounds i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*, i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)** %223, i64 25
  %225 = load i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)*, i8* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*)** %224, align 8
  %226 = call i8* %225(%"class.webrtc::LibvpxInterface"* %219, %struct.vpx_codec_ctx* %221) #19
  %227 = call i64 @strlen(i8* %226) #19
  %228 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %218, i8* %226, i64 %227) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %129) #19
  br label %229

229:                                              ; preds = %202, %215
  %230 = add nuw i64 %134, 1
  %231 = load i64, i64* %88, align 8
  %232 = load i64, i64* %90, align 8
  %233 = sub i64 %231, %232
  %234 = sdiv exact i64 %233, 56
  %235 = icmp ult i64 %230, %234
  br i1 %235, label %132, label %248

236:                                              ; preds = %60, %53
  %237 = phi i64 [ 0, %53 ], [ %80, %60 ]
  %238 = icmp eq i64 %56, 0
  br i1 %238, label %248, label %239

239:                                              ; preds = %236
  %240 = lshr i64 %237, 6
  %241 = and i64 %237, 63
  %242 = shl i64 1, %241
  %243 = load i64*, i64** %54, align 8
  %244 = getelementptr inbounds i64, i64* %243, i64 %240
  %245 = xor i64 %242, -1
  %246 = load i64, i64* %244, align 8
  %247 = and i64 %246, %245
  store i64 %247, i64* %244, align 8
  br label %248

248:                                              ; preds = %229, %239, %236, %113, %45, %11, %24, %33
  ret void
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEd(%"class.std::__1::basic_ostream"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder14SetStreamStateEbi(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %2 to i64
  br i1 %1, label %5, label %27

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = lshr i64 %4, 6
  %9 = getelementptr inbounds i64, i64* %7, i64 %8
  %10 = and i64 %4, 63
  %11 = shl i64 1, %10
  %12 = load i64, i64* %9, align 8
  %13 = and i64 %12, %11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 %8
  %19 = load i64, i64* %18, align 8
  %20 = or i64 %19, %11
  store i64 %20, i64* %18, align 8
  br label %21

21:                                               ; preds = %5, %15
  %22 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %8
  %25 = load i64, i64* %24, align 8
  %26 = or i64 %25, %11
  br label %37

27:                                               ; preds = %3
  %28 = lshr i64 %4, 6
  %29 = and i64 %4, 63
  %30 = shl i64 1, %29
  %31 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %32 = load i64*, i64** %31, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 %28
  %34 = xor i64 %30, -1
  %35 = load i64, i64* %33, align 8
  %36 = and i64 %35, %34
  br label %37

37:                                               ; preds = %21, %27
  %38 = phi i64* [ %33, %27 ], [ %24, %21 ]
  %39 = phi i64 [ %36, %27 ], [ %26, %21 ]
  store i64 %39, i64* %38, align 8
  ret void
}

declare zeroext i1 @_ZNK6webrtc19RateControlSettings24Vp8BoostBaseLayerQualityEv(%"class.webrtc::RateControlSettings"*) local_unnamed_addr #2

declare i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"*, i64) local_unnamed_addr #2

declare void @_ZNK6webrtc22VideoBitrateAllocation26GetTemporalLayerAllocationEm(%"class.std::__1::vector.103"* sret, %"class.webrtc::VideoBitrateAllocation"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc16LibvpxVp8Encoder22UpdateVpxConfigurationEm(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.webrtc::Vp8EncoderConfig", align 4
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 1
  %6 = bitcast %struct.vpx_codec_enc_cfg** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.144"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 384
  %12 = xor i64 %1, -1
  %13 = add i64 %11, %12
  %14 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 0
  %15 = load %"struct.webrtc::Vp8EncoderConfig"*, %"struct.webrtc::Vp8EncoderConfig"** %14, align 8
  %16 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13
  %17 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %17) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 -86, i64 144, i1 false)
  %18 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %19 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %18, align 8
  %20 = bitcast %"class.webrtc::Vp8FrameBufferController"* %19 to void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)***
  %21 = load void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)**, void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)*** %20, align 8
  %22 = getelementptr inbounds void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)*, void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)** %21, i64 6
  %23 = load void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)*, void (%"struct.webrtc::Vp8EncoderConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64)** %22, align 8
  call void %23(%"struct.webrtc::Vp8EncoderConfig"* nonnull sret %3, %"class.webrtc::Vp8FrameBufferController"* %19, i64 %1) #19
  %24 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 4
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* nonnull align 4 %17, i64 141, i1 false)
  br label %162

29:                                               ; preds = %2
  %30 = load i8, i8* %17, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = call zeroext i1 @_ZNK6webrtc16Vp8EncoderConfig19TemporalLayerConfigneERKS1_(%"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %37, %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* dereferenceable(112) %38) #19
  br i1 %39, label %40, label %41

40:                                               ; preds = %36, %32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* nonnull align 4 %17, i64 116, i1 false) #19
  br label %41

41:                                               ; preds = %40, %36, %29
  %42 = phi i1 [ true, %40 ], [ false, %36 ], [ false, %29 ]
  %43 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 1
  %45 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  br i1 %57, label %62, label %58

58:                                               ; preds = %52, %48
  %59 = bitcast %"class.absl::optional.159"* %43 to i64*
  %60 = bitcast %"class.absl::optional.159"* %44 to i64*
  %61 = load i64, i64* %59, align 4
  store i64 %61, i64* %60, align 4
  br label %62

62:                                               ; preds = %58, %52, %41
  %63 = phi i1 [ true, %58 ], [ false, %52 ], [ false, %41 ]
  %64 = or i1 %42, %63
  %65 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 2
  %66 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 2
  %67 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %84, label %80

80:                                               ; preds = %74, %70
  %81 = bitcast %"class.absl::optional.159"* %65 to i64*
  %82 = bitcast %"class.absl::optional.159"* %66 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %84

84:                                               ; preds = %80, %74, %62
  %85 = phi i1 [ true, %80 ], [ false, %74 ], [ false, %62 ]
  %86 = or i1 %64, %85
  %87 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 3
  %88 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 3
  %89 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %106, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.absl::optional.159", %"class.absl::optional.159"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8, i8* %93, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %98, %100
  br i1 %101, label %106, label %102

102:                                              ; preds = %96, %92
  %103 = bitcast %"class.absl::optional.159"* %87 to i64*
  %104 = bitcast %"class.absl::optional.159"* %88 to i64*
  %105 = load i64, i64* %103, align 4
  store i64 %105, i64* %104, align 4
  br label %106

106:                                              ; preds = %84, %96, %102
  %107 = phi i1 [ true, %102 ], [ false, %96 ], [ false, %84 ]
  %108 = or i1 %86, %107
  %109 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %4, i64 0, i32 0, i32 0
  %110 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %109, align 8
  %111 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %133, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 38
  store i32 %116, i32* %117, align 8
  %118 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i64 0
  %119 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 39, i64 0
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %118 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 20, i1 false) #19
  %122 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %123 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 40, i64 0
  %124 = bitcast i32* %123 to i8*
  %125 = bitcast %"struct.std::__1::array"* %122 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %124, i8* align 4 %125, i64 20, i1 false) #19
  %126 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 41
  store i32 %127, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %130 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 42, i64 0
  %131 = bitcast i32* %130 to i8*
  %132 = bitcast %"struct.std::__1::array.158"* %129 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %132, i64 64, i1 false) #19
  br label %138

133:                                              ; preds = %106
  %134 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 38
  store i32 1, i32* %134, align 8
  %135 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 40, i64 0
  store i32 1, i32* %135, align 8
  %136 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 41
  store i32 1, i32* %136, align 4
  %137 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 42, i64 0
  store i32 0, i32* %137, align 8
  br label %138

138:                                              ; preds = %133, %114
  %139 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 1, i32 0, i32 0, i32 0, i32 0
  %140 = load i8, i8* %139, align 4, !range !2
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %146, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 20
  store i32 %144, i32* %145, align 8
  br label %146

146:                                              ; preds = %142, %138
  %147 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 0
  %148 = load i8, i8* %147, align 4, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 22
  store i32 %152, i32* %153, align 8
  br label %154

154:                                              ; preds = %150, %146
  %155 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 0
  %156 = load i8, i8* %155, align 4, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %15, i64 %13, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %110, i64 %13, i32 8
  store i32 %160, i32* %161, align 4
  br label %162

162:                                              ; preds = %158, %154, %27
  %163 = phi i1 [ true, %27 ], [ %108, %154 ], [ %108, %158 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %17) #19
  ret i1 %163
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder22OnPacketLossRateUpdateEf(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %3, align 8
  %5 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.webrtc::Vp8FrameBufferController"* %4 to void (%"class.webrtc::Vp8FrameBufferController"*, float)***
  %8 = load void (%"class.webrtc::Vp8FrameBufferController"*, float)**, void (%"class.webrtc::Vp8FrameBufferController"*, float)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, float)*, void (%"class.webrtc::Vp8FrameBufferController"*, float)** %8, i64 10
  %10 = load void (%"class.webrtc::Vp8FrameBufferController"*, float)*, void (%"class.webrtc::Vp8FrameBufferController"*, float)** %9, align 8
  tail call void %10(%"class.webrtc::Vp8FrameBufferController"* nonnull %4, float %1) #19
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder11OnRttUpdateEl(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %3, align 8
  %5 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.webrtc::Vp8FrameBufferController"* %4 to void (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %8 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64)** %8, i64 11
  %10 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64)** %9, align 8
  tail call void %10(%"class.webrtc::Vp8FrameBufferController"* nonnull %4, i64 %1) #19
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder18OnLossNotificationERKNS_12VideoEncoder16LossNotificationE(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, %"struct.webrtc::VideoEncoder::LossNotification"* dereferenceable(12)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %3, align 8
  %5 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.webrtc::Vp8FrameBufferController"* %4 to void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)***
  %8 = load void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)**, void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*, void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)** %8, i64 12
  %10 = load void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)*, void (%"class.webrtc::Vp8FrameBufferController"*, %"struct.webrtc::VideoEncoder::LossNotification"*)** %9, align 8
  tail call void %10(%"class.webrtc::Vp8FrameBufferController"* nonnull %4, %"struct.webrtc::VideoEncoder::LossNotification"* dereferenceable(12) %1) #19
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc16LibvpxVp8Encoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE(%"class.webrtc::LibvpxVp8Encoder"* nocapture, %"class.webrtc::FecControllerOverride"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 28
  store %"class.webrtc::FecControllerOverride"* %1, %"class.webrtc::FecControllerOverride"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE(%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.webrtc::Vp8TemporalLayersFactory", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.webrtc::SimulcastRateAllocator", align 8
  %7 = alloca %"class.webrtc::VideoBitrateAllocation", align 4
  %8 = alloca %"struct.webrtc::VideoBitrateAllocationParameters", align 8
  %9 = alloca %"class.std::__1::vector.103", align 8
  %10 = alloca %"class.std::__1::vector.103", align 8
  %11 = alloca %"class.std::__1::vector.103", align 8
  %12 = icmp eq %"class.webrtc::VideoCodec"* %1, null
  br i1 %12, label %919, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %919, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %23, %19
  br i1 %24, label %919, label %25

25:                                               ; preds = %17, %21
  %26 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 1
  %27 = load i16, i16* %26, align 4
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %919, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 2
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 0
  br i1 %32, label %919, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.webrtc::VideoEncoder::Settings", %"struct.webrtc::VideoEncoder::Settings"* %2, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %35, 1
  br i1 %36, label %919, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 12
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 9
  %40 = load i8, i8* %39, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %60, label %44

42:                                               ; preds = %54
  %43 = icmp eq i8 %55, 0
  br i1 %43, label %60, label %65

44:                                               ; preds = %37, %54
  %45 = phi i8 [ %55, %54 ], [ %40, %37 ]
  %46 = phi i32 [ %56, %54 ], [ 0, %37 ]
  %47 = phi i64 [ %57, %54 ], [ 0, %37 ]
  %48 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %47, i32 8
  %49 = load i8, i8* %48, align 4, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = add nsw i32 %46, 1
  store i32 %52, i32* %38, align 8
  %53 = load i8, i8* %39, align 8
  br label %54

54:                                               ; preds = %44, %51
  %55 = phi i8 [ %45, %44 ], [ %53, %51 ]
  %56 = phi i32 [ %46, %44 ], [ %52, %51 ]
  %57 = add nuw nsw i64 %47, 1
  %58 = zext i8 %55 to i64
  %59 = icmp ult i64 %57, %58
  br i1 %59, label %44, label %42

60:                                               ; preds = %37, %42
  %61 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 7
  %62 = load i8, i8* %61, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  store i32 1, i32* %38, align 8
  br label %65

65:                                               ; preds = %60, %64, %42
  %66 = tail call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %1) #19
  %67 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %66, i64 0, i32 3
  %68 = load i8, i8* %67, align 2, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = load i32, i32* %38, align 8
  %72 = icmp sgt i32 %71, 1
  br i1 %72, label %919, label %73

73:                                               ; preds = %65, %70
  %74 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19
  %75 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %74, i64 0, i32 0, i32 0
  %76 = load %struct.vpx_image*, %struct.vpx_image** %75, align 8
  %77 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 1
  %78 = load %struct.vpx_image*, %struct.vpx_image** %77, align 8
  %79 = icmp eq %struct.vpx_image* %76, %78
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %76, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  br label %83

83:                                               ; preds = %73, %80
  %84 = phi i32 [ %82, %80 ], [ 258, %73 ]
  %85 = bitcast %"class.webrtc::LibvpxVp8Encoder"* %0 to i32 (%"class.webrtc::LibvpxVp8Encoder"*)***
  %86 = load i32 (%"class.webrtc::LibvpxVp8Encoder"*)**, i32 (%"class.webrtc::LibvpxVp8Encoder"*)*** %85, align 8
  %87 = getelementptr inbounds i32 (%"class.webrtc::LibvpxVp8Encoder"*)*, i32 (%"class.webrtc::LibvpxVp8Encoder"*)** %86, i64 6
  %88 = load i32 (%"class.webrtc::LibvpxVp8Encoder"*)*, i32 (%"class.webrtc::LibvpxVp8Encoder"*)** %87, align 8
  %89 = tail call i32 %88(%"class.webrtc::LibvpxVp8Encoder"* %0) #19
  %90 = icmp slt i32 %89, 0
  br i1 %90, label %919, label %91

91:                                               ; preds = %83
  %92 = tail call i32 @_ZN6webrtc16SimulcastUtility24NumberOfSimulcastStreamsERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %1) #19
  %93 = icmp sgt i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = tail call zeroext i1 @_ZN6webrtc16SimulcastUtility24ValidSimulcastParametersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376) %1, i32 %92) #19
  br i1 %95, label %96, label %919

96:                                               ; preds = %94, %91
  %97 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  %98 = load %"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::Vp8FrameBufferControllerFactory"** %97, align 8
  %99 = icmp eq %"class.webrtc::Vp8FrameBufferControllerFactory"* %98, null
  br i1 %99, label %119, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 28
  %102 = load %"class.webrtc::FecControllerOverride"*, %"class.webrtc::FecControllerOverride"** %101, align 8
  %103 = bitcast %"class.webrtc::Vp8FrameBufferControllerFactory"* %98 to %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)***
  %104 = load %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)**, %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)*, %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)** %104, i64 3
  %106 = load %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)*, %"class.webrtc::Vp8FrameBufferController"* (%"class.webrtc::Vp8FrameBufferControllerFactory"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*, %"class.webrtc::FecControllerOverride"*)** %105, align 8
  %107 = tail call %"class.webrtc::Vp8FrameBufferController"* %106(%"class.webrtc::Vp8FrameBufferControllerFactory"* nonnull %98, %"class.webrtc::VideoCodec"* dereferenceable(376) %1, %"struct.webrtc::VideoEncoder::Settings"* dereferenceable(16) %2, %"class.webrtc::FecControllerOverride"* %102) #19
  %108 = ptrtoint %"class.webrtc::Vp8FrameBufferController"* %107 to i64
  %109 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %110, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.42"* %109 to i64*
  store i64 %108, i64* %112, align 8
  %113 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %111, null
  br i1 %113, label %137, label %114

114:                                              ; preds = %100
  %115 = bitcast %"class.webrtc::Vp8FrameBufferController"* %111 to void (%"class.webrtc::Vp8FrameBufferController"*)***
  %116 = load void (%"class.webrtc::Vp8FrameBufferController"*)**, void (%"class.webrtc::Vp8FrameBufferController"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %116, i64 1
  %118 = load void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %117, align 8
  tail call void %118(%"class.webrtc::Vp8FrameBufferController"* nonnull %111) #19
  br label %137

119:                                              ; preds = %96
  %120 = bitcast %"class.webrtc::Vp8TemporalLayersFactory"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #19
  %121 = getelementptr inbounds %"class.webrtc::Vp8TemporalLayersFactory", %"class.webrtc::Vp8TemporalLayersFactory"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc24Vp8TemporalLayersFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %121, align 8
  %122 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 28
  %123 = load %"class.webrtc::FecControllerOverride"*, %"class.webrtc::FecControllerOverride"** %122, align 8
  %124 = call %"class.webrtc::Vp8FrameBufferController"* @_ZN6webrtc24Vp8TemporalLayersFactory6CreateERKNS_10VideoCodecERKNS_12VideoEncoder8SettingsEPNS_21FecControllerOverrideE(%"class.webrtc::Vp8TemporalLayersFactory"* nonnull %4, %"class.webrtc::VideoCodec"* dereferenceable(376) %1, %"struct.webrtc::VideoEncoder::Settings"* dereferenceable(16) %2, %"class.webrtc::FecControllerOverride"* %123) #19
  %125 = ptrtoint %"class.webrtc::Vp8FrameBufferController"* %124 to i64
  %126 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.42"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %127, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.42"* %126 to i64*
  store i64 %125, i64* %129, align 8
  %130 = icmp eq %"class.webrtc::Vp8FrameBufferController"* %128, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %119
  %132 = bitcast %"class.webrtc::Vp8FrameBufferController"* %128 to void (%"class.webrtc::Vp8FrameBufferController"*)***
  %133 = load void (%"class.webrtc::Vp8FrameBufferController"*)**, void (%"class.webrtc::Vp8FrameBufferController"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %133, i64 1
  %135 = load void (%"class.webrtc::Vp8FrameBufferController"*)*, void (%"class.webrtc::Vp8FrameBufferController"*)** %134, align 8
  call void %135(%"class.webrtc::Vp8FrameBufferController"* nonnull %128) #19
  br label %136

136:                                              ; preds = %131, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #19
  br label %137

137:                                              ; preds = %100, %114, %136
  %138 = load i32, i32* %34, align 4
  %139 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 10
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 7
  store i64 0, i64* %140, align 8
  %141 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  %142 = bitcast %"class.webrtc::VideoCodec"* %141 to i8*
  %143 = bitcast %"class.webrtc::VideoCodec"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 8 %143, i64 352, i1 false) #19
  %144 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 18
  %145 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18
  %146 = icmp eq %"class.webrtc::VideoCodec"* %141, %1
  br i1 %146, label %176, label %147

147:                                              ; preds = %137
  %148 = bitcast %"class.std::__1::basic_string"* %144 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %149 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %148, i64 0, i32 1, i32 0
  %150 = load i8, i8* %149, align 1
  %151 = icmp slt i8 %150, 0
  %152 = bitcast %"class.std::__1::basic_string"* %145 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %151, label %166, label %156

156:                                              ; preds = %147
  br i1 %155, label %160, label %157

157:                                              ; preds = %156
  %158 = bitcast %"class.std::__1::basic_string"* %144 to i8*
  %159 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 24, i1 false) #19
  br label %176

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %164 = load i64, i64* %163, align 8
  %165 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %144, i8* %162, i64 %164) #19
  br label %176

166:                                              ; preds = %147
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %145, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.std::__1::basic_string"* %145 to i8*
  %172 = zext i8 %154 to i64
  %173 = select i1 %155, i8* %168, i8* %171
  %174 = select i1 %155, i64 %170, i64 %172
  %175 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %144, i8* %173, i64 %174) #19
  br label %176

176:                                              ; preds = %137, %157, %160, %166
  %177 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 9
  %178 = load i8, i8* %177, align 8
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %187

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 1
  %182 = load i16, i16* %181, align 4
  %183 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 10, i64 0, i32 0
  store i16 %182, i16* %183, align 4
  %184 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 2
  %185 = load i16, i16* %184, align 2
  %186 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 10, i64 0, i32 1
  store i16 %185, i16* %186, align 2
  br label %187

187:                                              ; preds = %180, %176
  %188 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20
  %189 = sext i32 %92 to i64
  %190 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 1
  %191 = bitcast %"class.webrtc::EncodedImage"** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector.75"* %188 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = sdiv exact i64 %195, 272
  %197 = icmp ult i64 %196, %189
  %198 = inttoptr i64 %194 to %"class.webrtc::EncodedImage"*
  %199 = inttoptr i64 %192 to %"class.webrtc::EncodedImage"*
  br i1 %197, label %200, label %202

200:                                              ; preds = %187
  %201 = sub nsw i64 %189, %196
  call void @_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.75"* %188, i64 %201) #19
  br label %212

202:                                              ; preds = %187
  %203 = icmp ugt i64 %196, %189
  br i1 %203, label %204, label %212

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %198, i64 %189
  %206 = icmp eq %"class.webrtc::EncodedImage"* %205, %199
  br i1 %206, label %211, label %207

207:                                              ; preds = %204, %207
  %208 = phi %"class.webrtc::EncodedImage"* [ %209, %207 ], [ %199, %204 ]
  %209 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %208, i64 -1
  call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* %209) #19
  %210 = icmp eq %"class.webrtc::EncodedImage"* %209, %205
  br i1 %210, label %211, label %207

211:                                              ; preds = %207, %204
  store %"class.webrtc::EncodedImage"* %205, %"class.webrtc::EncodedImage"** %190, align 8
  br label %212

212:                                              ; preds = %200, %202, %211
  %213 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %214 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %215 = bitcast %struct.vpx_codec_ctx** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.std::__1::vector.136"* %213 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = sub i64 %216, %218
  %220 = sdiv exact i64 %219, 56
  %221 = icmp ult i64 %220, %189
  %222 = inttoptr i64 %218 to %struct.vpx_codec_ctx*
  br i1 %221, label %223, label %225

223:                                              ; preds = %212
  %224 = sub nsw i64 %189, %220
  call void @_ZNSt3__16vectorI13vpx_codec_ctxNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.136"* %213, i64 %224) #19
  br label %229

225:                                              ; preds = %212
  %226 = icmp ugt i64 %220, %189
  br i1 %226, label %227, label %229

227:                                              ; preds = %225
  %228 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %222, i64 %189
  store %struct.vpx_codec_ctx* %228, %struct.vpx_codec_ctx** %214, align 8
  br label %229

229:                                              ; preds = %223, %225, %227
  %230 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22
  %231 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 1
  %232 = bitcast %struct.vpx_codec_enc_cfg** %231 to i64*
  %233 = load i64, i64* %232, align 8
  %234 = bitcast %"class.std::__1::vector.144"* %230 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = sub i64 %233, %235
  %237 = sdiv exact i64 %236, 384
  %238 = icmp ult i64 %237, %189
  %239 = inttoptr i64 %235 to %struct.vpx_codec_enc_cfg*
  br i1 %238, label %240, label %242

240:                                              ; preds = %229
  %241 = sub nsw i64 %189, %237
  call void @_ZNSt3__16vectorI17vpx_codec_enc_cfgNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.144"* %230, i64 %241) #19
  br label %246

242:                                              ; preds = %229
  %243 = icmp ugt i64 %237, %189
  br i1 %243, label %244, label %246

244:                                              ; preds = %242
  %245 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %239, i64 %189
  store %struct.vpx_codec_enc_cfg* %245, %struct.vpx_codec_enc_cfg** %231, align 8
  br label %246

246:                                              ; preds = %240, %242, %244
  %247 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23
  %248 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 23, i32 0, i32 1
  %249 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.std::__1::vector.151"* %247 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %250, %252
  %254 = sdiv exact i64 %253, 144
  %255 = icmp ult i64 %254, %189
  %256 = inttoptr i64 %252 to %"struct.webrtc::Vp8EncoderConfig"*
  br i1 %255, label %257, label %259

257:                                              ; preds = %246
  %258 = sub nsw i64 %189, %254
  call void @_ZNSt3__16vectorIN6webrtc16Vp8EncoderConfigENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.151"* %247, i64 %258) #19
  br label %263

259:                                              ; preds = %246
  %260 = icmp ugt i64 %254, %189
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %256, i64 %189
  store %"struct.webrtc::Vp8EncoderConfig"* %262, %"struct.webrtc::Vp8EncoderConfig"** %248, align 8
  br label %263

263:                                              ; preds = %257, %259, %261
  %264 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24
  %265 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 1
  %266 = bitcast %struct.vpx_rational** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.std::__1::vector.169"* %264 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = ashr exact i64 %270, 3
  %272 = icmp ult i64 %271, %189
  %273 = inttoptr i64 %269 to %struct.vpx_rational*
  br i1 %272, label %274, label %276

274:                                              ; preds = %263
  %275 = sub nsw i64 %189, %271
  call void @_ZNSt3__16vectorI12vpx_rationalNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.169"* %264, i64 %275) #19
  br label %280

276:                                              ; preds = %263
  %277 = icmp ugt i64 %271, %189
  br i1 %277, label %278, label %280

278:                                              ; preds = %276
  %279 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %273, i64 %189
  store %struct.vpx_rational* %279, %struct.vpx_rational** %265, align 8
  br label %280

280:                                              ; preds = %274, %276, %278
  %281 = bitcast %struct.vpx_image** %77 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.std::__1::vector.68"* %74 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = sub i64 %282, %284
  %286 = sdiv exact i64 %285, 136
  %287 = icmp ult i64 %286, %189
  %288 = inttoptr i64 %284 to %struct.vpx_image*
  br i1 %287, label %289, label %291

289:                                              ; preds = %280
  %290 = sub nsw i64 %189, %286
  call void @_ZNSt3__16vectorI9vpx_imageNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.68"* %74, i64 %290) #19
  br label %295

291:                                              ; preds = %280
  %292 = icmp ugt i64 %286, %189
  br i1 %292, label %293, label %295

293:                                              ; preds = %291
  %294 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %288, i64 %189
  store %struct.vpx_image* %294, %struct.vpx_image** %77, align 8
  br label %295

295:                                              ; preds = %289, %291, %293
  %296 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.55"* %296, i64 %189, i1 zeroext false)
  %297 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %296, i64 0, i32 0
  %298 = load i64*, i64** %297, align 8
  %299 = load i64, i64* %298, align 8
  %300 = or i64 %299, 1
  store i64 %300, i64* %298, align 8
  %301 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18
  %302 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18, i32 0, i32 1
  %303 = bitcast i32** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.std::__1::vector.61"* %301 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = sub i64 %304, %306
  %308 = ashr exact i64 %307, 2
  %309 = icmp ult i64 %308, %189
  %310 = inttoptr i64 %306 to i32*
  br i1 %309, label %311, label %313

311:                                              ; preds = %295
  %312 = sub nsw i64 %189, %308
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.61"* %301, i64 %312) #19
  br label %317

313:                                              ; preds = %295
  %314 = icmp ugt i64 %308, %189
  br i1 %314, label %315, label %317

315:                                              ; preds = %313
  %316 = getelementptr inbounds i32, i32* %310, i64 %189
  store i32* %316, i32** %302, align 8
  br label %317

317:                                              ; preds = %311, %313, %315
  %318 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16
  %319 = bitcast %"class.std::__1::vector.55"* %318 to i64*
  %320 = load i64, i64* %319, align 8, !noalias !40
  %321 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 1
  %322 = load i64, i64* %321, align 8, !noalias !41
  %323 = inttoptr i64 %320 to i64*
  %324 = lshr i64 %322, 6
  %325 = getelementptr inbounds i64, i64* %323, i64 %324
  %326 = and i64 %322, 63
  %327 = ptrtoint i64* %325 to i64
  %328 = sub i64 %327, %320
  %329 = shl i64 %328, 3
  %330 = add i64 %329, %326
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %345, label %332

332:                                              ; preds = %317
  %333 = inttoptr i64 %320 to i8*
  %334 = lshr i64 %330, 6
  %335 = shl nuw nsw i64 %334, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 %335, i1 false) #19
  %336 = and i64 %330, 63
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %345, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds i64, i64* %323, i64 %334
  %340 = sub nuw nsw i64 64, %336
  %341 = lshr i64 -1, %340
  %342 = xor i64 %341, -1
  %343 = load i64, i64* %339, align 8
  %344 = and i64 %343, %342
  store i64 %344, i64* %339, align 8
  br label %345

345:                                              ; preds = %317, %332, %338
  %346 = add i32 %92, -1
  %347 = icmp sgt i32 %346, 0
  br i1 %347, label %348, label %352

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %264, i64 0, i32 0, i32 0
  %350 = sext i32 %346 to i64
  %351 = zext i32 %346 to i64
  br label %353

352:                                              ; preds = %372, %345
  br i1 %93, label %392, label %407

353:                                              ; preds = %372, %348
  %354 = phi i64 [ %350, %348 ], [ %359, %372 ]
  %355 = phi i64 [ 0, %348 ], [ %390, %372 ]
  %356 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %354, i32 0
  %357 = load i16, i16* %356, align 4
  %358 = zext i16 %357 to i32
  %359 = add nsw i64 %354, -1
  %360 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %359, i32 0
  %361 = load i16, i16* %360, align 4
  %362 = zext i16 %361 to i32
  %363 = urem i16 %357, %361
  %364 = icmp eq i16 %363, 0
  br i1 %364, label %372, label %365

365:                                              ; preds = %353
  %366 = zext i16 %363 to i32
  br label %367

367:                                              ; preds = %365, %367
  %368 = phi i32 [ %370, %367 ], [ %366, %365 ]
  %369 = phi i32 [ %368, %367 ], [ %362, %365 ]
  %370 = srem i32 %369, %368
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %367

372:                                              ; preds = %367, %353
  %373 = phi i32 [ %362, %353 ], [ %368, %367 ]
  %374 = sdiv i32 %358, %373
  %375 = load %struct.vpx_rational*, %struct.vpx_rational** %349, align 8
  %376 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %375, i64 %355, i32 0
  store i32 %374, i32* %376, align 4
  %377 = load i16, i16* %360, align 4
  %378 = zext i16 %377 to i32
  %379 = sdiv i32 %378, %373
  %380 = load %struct.vpx_rational*, %struct.vpx_rational** %349, align 8
  %381 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %380, i64 %355, i32 1
  store i32 %379, i32* %381, align 4
  %382 = load i64*, i64** %297, align 8
  %383 = lshr i64 %355, 6
  %384 = getelementptr inbounds i64, i64* %382, i64 %383
  %385 = and i64 %355, 63
  %386 = shl i64 1, %385
  %387 = xor i64 %386, -1
  %388 = load i64, i64* %384, align 8
  %389 = and i64 %388, %387
  store i64 %389, i64* %384, align 8
  %390 = add nuw nsw i64 %355, 1
  %391 = icmp eq i64 %390, %351
  br i1 %391, label %352, label %353

392:                                              ; preds = %352
  %393 = sext i32 %346 to i64
  %394 = load i64*, i64** %297, align 8
  %395 = lshr i64 %393, 6
  %396 = getelementptr inbounds i64, i64* %394, i64 %395
  %397 = and i64 %393, 63
  %398 = shl i64 1, %397
  %399 = xor i64 %398, -1
  %400 = load i64, i64* %396, align 8
  %401 = and i64 %400, %399
  store i64 %401, i64* %396, align 8
  %402 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %264, i64 0, i32 0, i32 0
  %403 = load %struct.vpx_rational*, %struct.vpx_rational** %402, align 8
  %404 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %403, i64 %393, i32 0
  store i32 1, i32* %404, align 4
  %405 = load %struct.vpx_rational*, %struct.vpx_rational** %402, align 8
  %406 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %405, i64 %393, i32 1
  store i32 1, i32* %406, align 4
  br label %407

407:                                              ; preds = %392, %352
  %408 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %409 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %408, align 8
  %410 = call %struct.vpx_codec_iface* @vpx_codec_vp8_cx() #19
  %411 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %230, i64 0, i32 0, i32 0
  %412 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %413 = bitcast %"class.webrtc::LibvpxInterface"* %409 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)***
  %414 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)*** %413, align 8
  %415 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)** %414, i64 6
  %416 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32)** %415, align 8
  %417 = call i32 %416(%"class.webrtc::LibvpxInterface"* %409, %struct.vpx_codec_iface* %410, %struct.vpx_codec_enc_cfg* %412, i32 0) #19
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %919

419:                                              ; preds = %407
  %420 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %421 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %420, i64 0, i32 7, i32 0
  store i32 1, i32* %421, align 4
  %422 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %423 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %422, i64 0, i32 7, i32 1
  store i32 90000, i32* %423, align 4
  %424 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %425 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %424, i64 0, i32 10
  store i32 0, i32* %425, align 4
  %426 = call i32 @_ZN6webrtc16SimulcastUtility22NumberOfTemporalLayersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376) %1, i32 0) #19
  %427 = icmp sgt i32 %426, 1
  %428 = zext i1 %427 to i32
  %429 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %430 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %429, i64 0, i32 8
  store i32 %428, i32* %430, align 4
  %431 = call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZN6webrtc12_GLOBAL__N_128kVp8ForcePartitionResilienceE, i64 0, i64 0))
  %432 = icmp eq i32 %92, 1
  %433 = and i1 %432, %431
  br i1 %433, label %434, label %450

434:                                              ; preds = %419
  %435 = call i32 @_ZN6webrtc16SimulcastUtility22NumberOfTemporalLayersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376) %1, i32 0) #19
  %436 = icmp sgt i32 %435, 1
  br i1 %436, label %437, label %450

437:                                              ; preds = %434
  %438 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %438) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 545, i32 3, i32 0, i32 0) #19
  %439 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %440 = bitcast %"class.std::__1::basic_ostringstream"* %439 to %"class.std::__1::basic_ostream"*
  %441 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %440, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i64 34) #19
  %442 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %443 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %442, i64 0, i32 8
  %444 = load i32, i32* %443, align 4
  %445 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %441, i32 %444) #19
  %446 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %445, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #19
  %447 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %446, i32 2) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %438) #19
  %448 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %449 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %448, i64 0, i32 8
  store i32 2, i32* %449, align 4
  br label %450

450:                                              ; preds = %437, %434, %419
  %451 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %141) #19
  %452 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %453 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %454 = bitcast %"class.webrtc::Vp8FrameBufferController"* %453 to i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %455 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)**, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %454, align 8
  %456 = getelementptr inbounds i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %455, i64 4
  %457 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %456, align 8
  %458 = call zeroext i1 %457(%"class.webrtc::Vp8FrameBufferController"* %453, i64 0) #19
  %459 = select i1 %458, i32 30, i32 0
  %460 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %461 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %460, i64 0, i32 11
  store i32 %459, i32* %461, align 8
  %462 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %463 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %462, i64 0, i32 17
  store i32 1, i32* %463, align 8
  %464 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %465 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %464, i64 0, i32 9
  store i32 0, i32* %465, align 8
  %466 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %467 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %466, i64 0, i32 12
  store i32 0, i32* %467, align 4
  %468 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 12
  %469 = load i32, i32* %468, align 4
  %470 = icmp eq i32 %469, 1
  %471 = select i1 %470, i32 12, i32 2
  %472 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %473 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %472, i64 0, i32 21
  store i32 %471, i32* %473, align 4
  %474 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 8
  %475 = load i32, i32* %474, align 4
  %476 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %477 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %476, i64 0, i32 21
  %478 = load i32, i32* %477, align 4
  %479 = icmp ult i32 %475, %478
  br i1 %479, label %482, label %480

480:                                              ; preds = %450
  %481 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 8
  store i32 %475, i32* %481, align 8
  br label %482

482:                                              ; preds = %450, %480
  %483 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 3
  %484 = call i64 @_ZNK6webrtc19RateControlSettings14LibvpxVp8QpMaxEv(%"class.webrtc::RateControlSettings"* %483) #19
  %485 = trunc i64 %484 to i8
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %491

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 8
  %489 = load i32, i32* %488, align 8
  %490 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  br label %505

491:                                              ; preds = %482
  %492 = call i64 @_ZNK6webrtc19RateControlSettings14LibvpxVp8QpMaxEv(%"class.webrtc::RateControlSettings"* %483) #19
  %493 = trunc i64 %492 to i8
  %494 = lshr i64 %492, 32
  %495 = trunc i64 %494 to i32
  %496 = icmp eq i8 %493, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %491
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #21
  unreachable

498:                                              ; preds = %491
  %499 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %500 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %499, i64 0, i32 21
  %501 = load i32, i32* %500, align 4
  %502 = icmp sgt i32 %501, %495
  %503 = select i1 %502, i32 %501, i32 %495
  %504 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 8
  store i32 %503, i32* %504, align 8
  br label %505

505:                                              ; preds = %487, %498
  %506 = phi %struct.vpx_codec_enc_cfg* [ %490, %487 ], [ %499, %498 ]
  %507 = phi i32 [ %489, %487 ], [ %503, %498 ]
  %508 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %506, i64 0, i32 22
  store i32 %507, i32* %508, align 8
  %509 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %510 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %509, i64 0, i32 23
  store i32 100, i32* %510, align 4
  %511 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %512 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %511, i64 0, i32 24
  store i32 15, i32* %512, align 8
  %513 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %514 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %513, i64 0, i32 26
  store i32 500, i32* %514, align 8
  %515 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %516 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %515, i64 0, i32 27
  store i32 600, i32* %516, align 4
  %517 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %518 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %517, i64 0, i32 25
  store i32 1000, i32* %518, align 4
  %519 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %520 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %519, i64 0, i32 27
  %521 = load i32, i32* %520, align 4
  %522 = uitofp i32 %521 to float
  %523 = fmul float %522, 5.000000e-01
  %524 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  %525 = load i32, i32* %524, align 4
  %526 = uitofp i32 %525 to float
  %527 = fmul float %523, %526
  %528 = fdiv float %527, 1.000000e+01
  %529 = fptoui float %528 to i32
  %530 = icmp ugt i32 %529, 300
  %531 = select i1 %530, i32 %529, i32 300
  %532 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 11
  store i32 %531, i32* %532, align 4
  %533 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %1) #19
  %534 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %533, i64 0, i32 5
  %535 = load i32, i32* %534, align 4
  %536 = icmp sgt i32 %535, 0
  %537 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %538 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %537, i64 0, i32 32
  br i1 %536, label %539, label %545

539:                                              ; preds = %505
  store i32 1, i32* %538, align 8
  %540 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %1) #19
  %541 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %540, i64 0, i32 5
  %542 = load i32, i32* %541, align 4
  %543 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %544 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %543, i64 0, i32 34
  store i32 %542, i32* %544, align 8
  br label %546

545:                                              ; preds = %505
  store i32 0, i32* %538, align 8
  br label %546

546:                                              ; preds = %545, %539
  %547 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %1) #19
  %548 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %547, i64 0, i32 0
  %549 = load i32, i32* %548, align 4
  %550 = add i32 %549, -1
  %551 = icmp ult i32 %550, 3
  %552 = add i32 %549, -6
  %553 = select i1 %551, i32 %552, i32 -6
  %554 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %301, i64 0, i32 0, i32 0
  %555 = load i32*, i32** %554, align 8
  store i32 %553, i32* %555, align 4
  %556 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %301, i64 0, i32 0, i32 0
  %557 = load i32*, i32** %556, align 8
  %558 = load i32, i32* %557, align 4
  %559 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 9
  store i32 %558, i32* %559, align 4
  %560 = load i16, i16* %26, align 4
  %561 = zext i16 %560 to i32
  %562 = load i16, i16* %30, align 2
  %563 = zext i16 %562 to i32
  %564 = mul nuw nsw i32 %563, %561
  %565 = icmp ult i32 %564, 101376
  %566 = icmp sgt i32 %558, -4
  %567 = select i1 %566, i32 %558, i32 -4
  %568 = select i1 %565, i32 %567, i32 %558
  store i32 %568, i32* %557, align 4
  br i1 %93, label %569, label %571

569:                                              ; preds = %546
  %570 = zext i32 %92 to i64
  br label %632

571:                                              ; preds = %632, %546
  %572 = load i16, i16* %26, align 4
  %573 = zext i16 %572 to i32
  %574 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %575 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %574, i64 0, i32 3
  store i32 %573, i32* %575, align 4
  %576 = load i16, i16* %30, align 2
  %577 = zext i16 %576 to i32
  %578 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %579 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %578, i64 0, i32 4
  store i32 %577, i32* %579, align 8
  %580 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %581 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %580, i64 0, i32 3
  %582 = load i32, i32* %581, align 4
  %583 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %580, i64 0, i32 4
  %584 = load i32, i32* %583, align 8
  %585 = load i32, i32* %34, align 4
  %586 = mul nsw i32 %584, %582
  %587 = icmp sgt i32 %586, 2073599
  %588 = icmp sgt i32 %585, 8
  %589 = and i1 %587, %588
  br i1 %589, label %600, label %590

590:                                              ; preds = %571
  %591 = icmp sgt i32 %586, 1228800
  %592 = icmp sgt i32 %585, 5
  %593 = and i1 %591, %592
  br i1 %593, label %600, label %594

594:                                              ; preds = %590
  %595 = icmp sgt i32 %586, 307200
  %596 = icmp sgt i32 %585, 2
  %597 = and i1 %595, %596
  %598 = select i1 %592, i32 3, i32 2
  %599 = select i1 %597, i32 %598, i32 1
  br label %600

600:                                              ; preds = %571, %590, %594
  %601 = phi i32 [ %599, %594 ], [ 8, %571 ], [ 3, %590 ]
  %602 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %580, i64 0, i32 1
  store i32 %601, i32* %602, align 4
  %603 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %408, align 8
  %604 = load %struct.vpx_image*, %struct.vpx_image** %75, align 8
  %605 = load i16, i16* %26, align 4
  %606 = zext i16 %605 to i32
  %607 = load i16, i16* %30, align 2
  %608 = zext i16 %607 to i32
  %609 = bitcast %"class.webrtc::LibvpxInterface"* %603 to %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)***
  %610 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)**, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*** %609, align 8
  %611 = getelementptr inbounds %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)** %610, i64 3
  %612 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)** %611, align 8
  %613 = call %struct.vpx_image* %612(%"class.webrtc::LibvpxInterface"* %603, %struct.vpx_image* %604, i32 %84, i32 %606, i32 %608, i32 1, i8* null) #19
  %614 = load i64, i64* %215, align 8
  %615 = load i64, i64* %217, align 8
  %616 = sub i64 %614, %615
  %617 = sdiv exact i64 %616, 56
  %618 = add nsw i64 %617, -1
  %619 = bitcast %"class.webrtc::SimulcastRateAllocator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 728, i8* nonnull %619) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %619, i8* align 8 bitcast (<{ %"class.webrtc::VideoBitrateAllocator", { i32, i16, i16, i32, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8], [3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], [5 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }], i32, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, [4 x i8], { i64, i16, [6 x i8] }, i8, [3 x i8], { { i32, i8, i8, i8, [1 x i8], i32, i8, i8, i8, i8, i32 } }, %"class.std::__1::basic_string" }, { %"class.webrtc::FieldTrialParameter", { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double }, { %"class.webrtc::FieldTrialParameterInterface.base", [7 x i8], double } }, { <{ { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [7 x i8], %union.anon.30 } } } }, i8, [7 x i8] }>, <{ { { { { i8, [7 x i8], %union.anon.35 } } } }, i8, [3 x i8], { { { { i8, [3 x i8], %union.anon.25 } } } }, { { { { i8, [3 x i8], %union.anon.25 } } } }, i8, i8, [2 x i8], double, double, i8, i8, i8, i8, i8, [3 x i8] }> }, %"class.std::__1::vector.55", i8, [7 x i8] }>* @__const._ZN6webrtc16LibvpxVp8Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE.init_allocator to i8*), i64 728, i1 false)
  call void @_ZN6webrtc22SimulcastRateAllocatorC1ERKNS_10VideoCodecE(%"class.webrtc::SimulcastRateAllocator"* nonnull %6, %"class.webrtc::VideoCodec"* dereferenceable(376) %141) #19
  %620 = bitcast %"class.webrtc::VideoBitrateAllocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %620) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %620, i8 -86, i64 168, i1 false)
  %621 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 3
  %622 = load i32, i32* %621, align 8
  %623 = mul i32 %622, 1000
  %624 = load i32, i32* %14, align 4
  call void @_ZN6webrtc32VideoBitrateAllocationParametersC1Ejj(%"struct.webrtc::VideoBitrateAllocationParameters"* nonnull %8, i32 %623, i32 %624) #19
  call void @_ZN6webrtc22SimulcastRateAllocator8AllocateENS_32VideoBitrateAllocationParametersE(%"class.webrtc::VideoBitrateAllocation"* nonnull sret %7, %"class.webrtc::SimulcastRateAllocator"* nonnull %6, %"struct.webrtc::VideoBitrateAllocationParameters"* nonnull %8) #19
  call void @_ZN6webrtc32VideoBitrateAllocationParametersD1Ev(%"struct.webrtc::VideoBitrateAllocationParameters"* nonnull %8) #19
  %625 = bitcast %"class.std::__1::vector.103"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %625) #19
  %626 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %9, i64 0, i32 0, i32 0
  %627 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %9, i64 0, i32 0, i32 1
  %628 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %625, i8 0, i64 24, i1 false) #19
  %629 = bitcast i32** %627 to i64*
  %630 = bitcast %"class.std::__1::vector.103"* %9 to i64*
  %631 = bitcast i32** %628 to i64*
  br label %653

632:                                              ; preds = %632, %569
  %633 = phi i64 [ 1, %569 ], [ %651, %632 ]
  %634 = trunc i64 %633 to i32
  %635 = sub nsw i32 %346, %634
  %636 = sext i32 %635 to i64
  %637 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %636, i32 0
  %638 = load i16, i16* %637, align 4
  %639 = zext i16 %638 to i32
  %640 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %636, i32 1
  %641 = load i16, i16* %640, align 2
  %642 = zext i16 %641 to i32
  %643 = mul nuw nsw i32 %642, %639
  %644 = icmp ult i32 %643, 101376
  %645 = load i32, i32* %559, align 4
  %646 = icmp sgt i32 %645, -4
  %647 = select i1 %646, i32 %645, i32 -4
  %648 = select i1 %644, i32 %647, i32 %645
  %649 = load i32*, i32** %556, align 8
  %650 = getelementptr inbounds i32, i32* %649, i64 %633
  store i32 %648, i32* %650, align 4
  %651 = add nuw nsw i64 %633, 1
  %652 = icmp eq i64 %651, %570
  br i1 %652, label %571, label %632

653:                                              ; preds = %721, %600
  %654 = phi i64 [ %722, %721 ], [ 0, %600 ]
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %668, label %656

656:                                              ; preds = %653
  %657 = load i8, i8* %39, align 8
  %658 = zext i8 %657 to i64
  %659 = icmp ult i64 %654, %658
  br i1 %659, label %668, label %660

660:                                              ; preds = %656
  %661 = load i32*, i32** %626, align 8
  %662 = getelementptr inbounds i32, i32* %661, i64 %618
  %663 = load i32, i32* %662, align 4
  %664 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %665 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %664, i64 0, i32 20
  store i32 %663, i32* %665, align 8
  %666 = load i32, i32* %662, align 4
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %747, label %723

668:                                              ; preds = %653, %656
  %669 = call i32 @_ZNK6webrtc22VideoBitrateAllocation18GetSpatialLayerSumEm(%"class.webrtc::VideoBitrateAllocation"* nonnull %7, i64 %654) #19
  %670 = udiv i32 %669, 1000
  %671 = load i32*, i32** %627, align 8
  %672 = load i32*, i32** %628, align 8
  %673 = icmp eq i32* %671, %672
  %674 = ptrtoint i32* %672 to i64
  br i1 %673, label %678, label %675

675:                                              ; preds = %668
  store i32 %670, i32* %671, align 4
  %676 = getelementptr inbounds i32, i32* %671, i64 1
  %677 = ptrtoint i32* %676 to i64
  store i64 %677, i64* %629, align 8
  br label %721

678:                                              ; preds = %668
  %679 = ptrtoint i32* %671 to i64
  %680 = load i64, i64* %630, align 8
  %681 = sub i64 %679, %680
  %682 = ashr exact i64 %681, 2
  %683 = add nsw i64 %682, 1
  %684 = icmp ugt i64 %683, 4611686018427387903
  br i1 %684, label %685, label %687

685:                                              ; preds = %678
  %686 = bitcast %"class.std::__1::vector.103"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %686) #21
  unreachable

687:                                              ; preds = %678
  %688 = sub i64 %674, %680
  %689 = ashr exact i64 %688, 2
  %690 = icmp ult i64 %689, 2305843009213693951
  br i1 %690, label %691, label %699

691:                                              ; preds = %687
  %692 = ashr exact i64 %688, 1
  %693 = icmp ult i64 %692, %683
  %694 = select i1 %693, i64 %683, i64 %692
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %704, label %696

696:                                              ; preds = %691
  %697 = icmp ugt i64 %694, 4611686018427387903
  br i1 %697, label %698, label %699

698:                                              ; preds = %696
  call void @abort() #21
  unreachable

699:                                              ; preds = %696, %687
  %700 = phi i64 [ %694, %696 ], [ 4611686018427387903, %687 ]
  %701 = shl i64 %700, 2
  %702 = call i8* @_Znwm(i64 %701) #20
  %703 = bitcast i8* %702 to i32*
  br label %704

704:                                              ; preds = %699, %691
  %705 = phi i64 [ %700, %699 ], [ 0, %691 ]
  %706 = phi i8* [ %702, %699 ], [ null, %691 ]
  %707 = phi i32* [ %703, %699 ], [ null, %691 ]
  %708 = getelementptr inbounds i32, i32* %707, i64 %682
  %709 = getelementptr inbounds i32, i32* %707, i64 %705
  %710 = ptrtoint i32* %709 to i64
  store i32 %670, i32* %708, align 4
  %711 = getelementptr inbounds i32, i32* %708, i64 1
  %712 = ptrtoint i32* %711 to i64
  %713 = ptrtoint i32* %707 to i64
  %714 = icmp sgt i64 %681, 0
  br i1 %714, label %715, label %717

715:                                              ; preds = %704
  %716 = inttoptr i64 %680 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %706, i8* align 4 %716, i64 %681, i1 false) #19
  br label %717

717:                                              ; preds = %715, %704
  store i64 %713, i64* %630, align 8
  store i64 %712, i64* %629, align 8
  store i64 %710, i64* %631, align 8
  %718 = icmp eq i64 %680, 0
  br i1 %718, label %721, label %719

719:                                              ; preds = %717
  %720 = inttoptr i64 %680 to i8*
  call void @_ZdlPv(i8* %720) #20
  br label %721

721:                                              ; preds = %675, %717, %719
  %722 = add nuw i64 %654, 1
  br label %653

723:                                              ; preds = %660
  %724 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %618, i32 2
  %725 = load float, float* %724, align 4
  %726 = fptoui float %725 to i32
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %730

728:                                              ; preds = %723
  %729 = load i32, i32* %14, align 4
  br label %730

730:                                              ; preds = %723, %728
  %731 = phi i32 [ %726, %723 ], [ %729, %728 ]
  %732 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %733 = bitcast %"class.std::__1::vector.103"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %733) #19
  call void @_ZNK6webrtc22VideoBitrateAllocation26GetTemporalLayerAllocationEm(%"class.std::__1::vector.103"* nonnull sret %10, %"class.webrtc::VideoBitrateAllocation"* nonnull %7, i64 %618) #19
  %734 = bitcast %"class.webrtc::Vp8FrameBufferController"* %732 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)***
  %735 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*** %734, align 8
  %736 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %735, i64 5
  %737 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %736, align 8
  call void %737(%"class.webrtc::Vp8FrameBufferController"* %732, i64 %618, %"class.std::__1::vector.103"* nonnull dereferenceable(24) %10, i32 %731) #19
  %738 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %10, i64 0, i32 0, i32 0
  %739 = load i32*, i32** %738, align 8
  %740 = icmp eq i32* %739, null
  br i1 %740, label %746, label %741

741:                                              ; preds = %730
  %742 = ptrtoint i32* %739 to i64
  %743 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %10, i64 0, i32 0, i32 1
  %744 = bitcast i32** %743 to i64*
  store i64 %742, i64* %744, align 8
  %745 = bitcast i32* %739 to i8*
  call void @_ZdlPv(i8* %745) #20
  br label %746

746:                                              ; preds = %730, %741
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %733) #19
  br label %747

747:                                              ; preds = %660, %746
  %748 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %749 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %750 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %749, i64 0, i32 21
  %751 = load i32, i32* %750, align 4
  %752 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %749, i64 0, i32 22
  %753 = load i32, i32* %752, align 8
  %754 = bitcast %"class.webrtc::Vp8FrameBufferController"* %748 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)***
  %755 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*** %754, align 8
  %756 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)** %755, i64 2
  %757 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)** %756, align 8
  call void %757(%"class.webrtc::Vp8FrameBufferController"* %748, i64 %618, i32 %751, i32 %753) #19
  %758 = call zeroext i1 @_ZN6webrtc16LibvpxVp8Encoder22UpdateVpxConfigurationEm(%"class.webrtc::LibvpxVp8Encoder"* %0, i64 %618)
  %759 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %141) #19
  %760 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %761 = bitcast %"class.webrtc::Vp8FrameBufferController"* %760 to i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %762 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)**, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %761, align 8
  %763 = getelementptr inbounds i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %762, i64 4
  %764 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %763, align 8
  %765 = call zeroext i1 %764(%"class.webrtc::Vp8FrameBufferController"* %760, i64 %618) #19
  %766 = select i1 %765, i32 30, i32 0
  %767 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %768 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %767, i64 0, i32 11
  store i32 %766, i32* %768, align 8
  %769 = load i64, i64* %215, align 8
  %770 = load i64, i64* %217, align 8
  %771 = sub i64 %769, %770
  %772 = sdiv exact i64 %771, 56
  %773 = icmp ugt i64 %772, 1
  br i1 %773, label %774, label %781

774:                                              ; preds = %747
  %775 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %776 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 0
  %777 = bitcast %"class.std::__1::vector.103"* %11 to i8*
  %778 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %11, i64 0, i32 0, i32 0
  %779 = getelementptr inbounds %"class.std::__1::vector.103", %"class.std::__1::vector.103"* %11, i64 0, i32 0, i32 1
  %780 = bitcast i32** %779 to i64*
  br label %789

781:                                              ; preds = %901, %747
  %782 = call i32 @_ZN6webrtc16LibvpxVp8Encoder25InitAndSetControlSettingsEv(%"class.webrtc::LibvpxVp8Encoder"* %0)
  %783 = load i32*, i32** %626, align 8
  %784 = icmp eq i32* %783, null
  br i1 %784, label %788, label %785

785:                                              ; preds = %781
  %786 = ptrtoint i32* %783 to i64
  store i64 %786, i64* %629, align 8
  %787 = bitcast i32* %783 to i8*
  call void @_ZdlPv(i8* %787) #20
  br label %788

788:                                              ; preds = %781, %785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %625) #19
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %620) #19
  call void @_ZN6webrtc22SimulcastRateAllocatorD1Ev(%"class.webrtc::SimulcastRateAllocator"* nonnull %6) #19
  call void @llvm.lifetime.end.p0i8(i64 728, i8* nonnull %619) #19
  br label %919

789:                                              ; preds = %774, %901
  %790 = phi i64 [ %772, %774 ], [ %917, %901 ]
  %791 = phi i64 [ 1, %774 ], [ %913, %901 ]
  %792 = xor i64 %791, -1
  %793 = add i64 %790, %792
  %794 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %795 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %794, i64 %791
  %796 = bitcast %struct.vpx_codec_enc_cfg* %795 to i8*
  %797 = bitcast %struct.vpx_codec_enc_cfg* %794 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %796, i8* align 8 %797, i64 384, i1 false)
  %798 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %793, i32 0
  %799 = load i16, i16* %798, align 4
  %800 = zext i16 %799 to i32
  %801 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %802 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %801, i64 %791, i32 3
  store i32 %800, i32* %802, align 4
  %803 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %793, i32 1
  %804 = load i16, i16* %803, align 2
  %805 = zext i16 %804 to i32
  %806 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %807 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %806, i64 %791, i32 4
  store i32 %805, i32* %807, align 8
  %808 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %809 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %808, i64 %791, i32 1
  store i32 1, i32* %809, align 4
  %810 = call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %141) #19
  %811 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %812 = bitcast %"class.webrtc::Vp8FrameBufferController"* %811 to i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %813 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)**, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %812, align 8
  %814 = getelementptr inbounds i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %813, i64 4
  %815 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %814, align 8
  %816 = call zeroext i1 %815(%"class.webrtc::Vp8FrameBufferController"* %811, i64 %793) #19
  %817 = select i1 %816, i32 30, i32 0
  %818 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %819 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %818, i64 %791, i32 11
  store i32 %817, i32* %819, align 8
  %820 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %408, align 8
  %821 = load %struct.vpx_image*, %struct.vpx_image** %75, align 8
  %822 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %821, i64 %791
  %823 = load i16, i16* %798, align 4
  %824 = zext i16 %823 to i32
  %825 = load i16, i16* %803, align 2
  %826 = zext i16 %825 to i32
  %827 = bitcast %"class.webrtc::LibvpxInterface"* %820 to %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)***
  %828 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)**, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*** %827, align 8
  %829 = getelementptr inbounds %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)** %828, i64 2
  %830 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)** %829, align 8
  %831 = call %struct.vpx_image* %830(%"class.webrtc::LibvpxInterface"* %820, %struct.vpx_image* %822, i32 %84, i32 %824, i32 %826, i32 32) #19
  %832 = load i32*, i32** %626, align 8
  %833 = getelementptr inbounds i32, i32* %832, i64 %793
  %834 = load i32, i32* %833, align 4
  %835 = icmp eq i32 %834, 0
  %836 = shl i64 %793, 32
  %837 = ashr exact i64 %836, 32
  br i1 %835, label %860, label %838

838:                                              ; preds = %789
  %839 = load i64*, i64** %775, align 8
  %840 = lshr i64 %837, 6
  %841 = getelementptr inbounds i64, i64* %839, i64 %840
  %842 = and i64 %837, 63
  %843 = shl i64 1, %842
  %844 = load i64, i64* %841, align 8
  %845 = and i64 %844, %843
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %847, label %855

847:                                              ; preds = %838
  %848 = load i64*, i64** %776, align 8
  %849 = getelementptr inbounds i64, i64* %848, i64 %840
  %850 = load i64, i64* %849, align 8
  %851 = or i64 %850, %843
  store i64 %851, i64* %849, align 8
  %852 = load i64*, i64** %775, align 8
  %853 = getelementptr inbounds i64, i64* %852, i64 %840
  %854 = load i64, i64* %853, align 8
  br label %855

855:                                              ; preds = %847, %838
  %856 = phi i64 [ %854, %847 ], [ %844, %838 ]
  %857 = phi i64* [ %852, %847 ], [ %839, %838 ]
  %858 = getelementptr inbounds i64, i64* %857, i64 %840
  %859 = or i64 %856, %843
  br label %869

860:                                              ; preds = %789
  %861 = lshr i64 %837, 6
  %862 = and i64 %837, 63
  %863 = shl i64 1, %862
  %864 = load i64*, i64** %775, align 8
  %865 = getelementptr inbounds i64, i64* %864, i64 %861
  %866 = xor i64 %863, -1
  %867 = load i64, i64* %865, align 8
  %868 = and i64 %867, %866
  br label %869

869:                                              ; preds = %855, %860
  %870 = phi i64* [ %865, %860 ], [ %858, %855 ]
  %871 = phi i64 [ %868, %860 ], [ %859, %855 ]
  store i64 %871, i64* %870, align 8
  %872 = load i32*, i32** %626, align 8
  %873 = getelementptr inbounds i32, i32* %872, i64 %793
  %874 = load i32, i32* %873, align 4
  %875 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %876 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %875, i64 %791, i32 20
  store i32 %874, i32* %876, align 8
  %877 = load i32*, i32** %626, align 8
  %878 = getelementptr inbounds i32, i32* %877, i64 %793
  %879 = load i32, i32* %878, align 4
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %901, label %881

881:                                              ; preds = %869
  %882 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %793, i32 2
  %883 = load float, float* %882, align 4
  %884 = fptoui float %883 to i32
  %885 = icmp eq i32 %884, 0
  br i1 %885, label %886, label %888

886:                                              ; preds = %881
  %887 = load i32, i32* %14, align 4
  br label %888

888:                                              ; preds = %881, %886
  %889 = phi i32 [ %884, %881 ], [ %887, %886 ]
  %890 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #19
  call void @_ZNK6webrtc22VideoBitrateAllocation26GetTemporalLayerAllocationEm(%"class.std::__1::vector.103"* nonnull sret %11, %"class.webrtc::VideoBitrateAllocation"* nonnull %7, i64 %793) #19
  %891 = bitcast %"class.webrtc::Vp8FrameBufferController"* %890 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)***
  %892 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*** %891, align 8
  %893 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %892, i64 5
  %894 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, %"class.std::__1::vector.103"*, i32)** %893, align 8
  call void %894(%"class.webrtc::Vp8FrameBufferController"* %890, i64 %793, %"class.std::__1::vector.103"* nonnull dereferenceable(24) %11, i32 %889) #19
  %895 = load i32*, i32** %778, align 8
  %896 = icmp eq i32* %895, null
  br i1 %896, label %900, label %897

897:                                              ; preds = %888
  %898 = ptrtoint i32* %895 to i64
  store i64 %898, i64* %780, align 8
  %899 = bitcast i32* %895 to i8*
  call void @_ZdlPv(i8* %899) #20
  br label %900

900:                                              ; preds = %888, %897
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #19
  br label %901

901:                                              ; preds = %869, %900
  %902 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %452, align 8
  %903 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %411, align 8
  %904 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %903, i64 %791, i32 21
  %905 = load i32, i32* %904, align 4
  %906 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %903, i64 %791, i32 22
  %907 = load i32, i32* %906, align 8
  %908 = bitcast %"class.webrtc::Vp8FrameBufferController"* %902 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)***
  %909 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*** %908, align 8
  %910 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)** %909, i64 2
  %911 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i32)** %910, align 8
  call void %911(%"class.webrtc::Vp8FrameBufferController"* %902, i64 %793, i32 %905, i32 %907) #19
  %912 = call zeroext i1 @_ZN6webrtc16LibvpxVp8Encoder22UpdateVpxConfigurationEm(%"class.webrtc::LibvpxVp8Encoder"* %0, i64 %793)
  %913 = add nuw i64 %791, 1
  %914 = load i64, i64* %215, align 8
  %915 = load i64, i64* %217, align 8
  %916 = sub i64 %914, %915
  %917 = sdiv exact i64 %916, 56
  %918 = icmp ult i64 %913, %917
  br i1 %918, label %789, label %781

919:                                              ; preds = %83, %788, %407, %94, %70, %33, %25, %29, %21, %13, %3
  %920 = phi i32 [ -4, %3 ], [ -4, %13 ], [ -4, %21 ], [ -4, %29 ], [ -4, %25 ], [ -4, %33 ], [ -4, %70 ], [ %89, %83 ], [ -15, %94 ], [ %782, %788 ], [ -1, %407 ]
  ret i32 %920
}

declare dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"*) local_unnamed_addr #2

declare i32 @_ZN6webrtc16SimulcastUtility24NumberOfSimulcastStreamsERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #2

declare zeroext i1 @_ZN6webrtc16SimulcastUtility24ValidSimulcastParametersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376), i32) local_unnamed_addr #2

declare %"class.webrtc::Vp8FrameBufferController"* @_ZN6webrtc24Vp8TemporalLayersFactory6CreateERKNS_10VideoCodecERKNS_12VideoEncoder8SettingsEPNS_21FecControllerOverrideE(%"class.webrtc::Vp8TemporalLayersFactory"*, %"class.webrtc::VideoCodec"* dereferenceable(376), %"struct.webrtc::VideoEncoder::Settings"* dereferenceable(16), %"class.webrtc::FecControllerOverride"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE6resizeEmb(%"class.std::__1::vector.55"*, i64, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.55", align 16
  %5 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %1
  br i1 %7, label %8, label %159

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 6
  %12 = sub i64 %1, %6
  %13 = icmp ult i64 %11, %12
  %14 = sub i64 %11, %12
  %15 = icmp ugt i64 %6, %14
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0
  %19 = load i64*, i64** %18, align 8, !noalias !44
  %20 = lshr i64 %6, 6
  %21 = getelementptr inbounds i64, i64* %19, i64 %20
  %22 = trunc i64 %6 to i32
  %23 = and i32 %22, 63
  %24 = ptrtoint i64* %21 to i64
  store i64 %1, i64* %5, align 8
  br label %86

25:                                               ; preds = %8
  %26 = bitcast %"class.std::__1::vector.55"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #19
  %27 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 1
  %28 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %4, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 0, i64 24, i1 false) #19
  %29 = icmp slt i64 %1, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::vector.55"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %31) #21
  unreachable

32:                                               ; preds = %25
  %33 = icmp ult i64 %11, 4611686018427387903
  br i1 %33, label %34, label %40

34:                                               ; preds = %32
  %35 = shl i64 %10, 7
  %36 = add nuw i64 %1, 63
  %37 = and i64 %36, -64
  %38 = icmp ult i64 %35, %37
  %39 = select i1 %38, i64 %37, i64 %35
  br label %40

40:                                               ; preds = %34, %32
  %41 = phi i64 [ %39, %34 ], [ 9223372036854775807, %32 ]
  call void @_ZNSt3__16vectorIbNS_9allocatorIbEEE7reserveEm(%"class.std::__1::vector.55"* nonnull %4, i64 %41)
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %42, %12
  store i64 %43, i64* %27, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = bitcast %"class.std::__1::vector.55"* %4 to i64*
  %47 = load i64, i64* %46, align 16, !noalias !49
  %48 = icmp sgt i64 %42, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %40
  %50 = inttoptr i64 %47 to i8*
  %51 = lshr i64 %42, 6
  %52 = bitcast i64* %45 to i8*
  %53 = shl nuw nsw i64 %51, 3
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %52, i64 %53, i1 false) #19, !noalias !54
  %54 = and i64 %42, 63
  %55 = inttoptr i64 %47 to i64*
  %56 = getelementptr inbounds i64, i64* %55, i64 %51
  %57 = ptrtoint i64* %56 to i64
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds i64, i64* %45, i64 %51
  %61 = sub nuw nsw i64 64, %54
  %62 = lshr i64 -1, %61
  %63 = load i64, i64* %60, align 8, !noalias !57
  %64 = and i64 %63, %62
  %65 = xor i64 %62, -1
  %66 = load i64, i64* %56, align 8, !noalias !54
  %67 = and i64 %66, %65
  %68 = or i64 %67, %64
  store i64 %68, i64* %56, align 8, !noalias !54
  %69 = trunc i64 %54 to i32
  br label %70

70:                                               ; preds = %49, %40, %59
  %71 = phi i32 [ %69, %59 ], [ 0, %49 ], [ 0, %40 ]
  %72 = phi i64 [ %57, %59 ], [ %57, %49 ], [ %47, %40 ]
  %73 = bitcast %"class.std::__1::vector.55"* %4 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 16
  %75 = bitcast %"class.std::__1::vector.55"* %0 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = bitcast %"class.std::__1::vector.55"* %0 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8
  %78 = bitcast %"class.std::__1::vector.55"* %4 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %78, align 16
  %79 = load i64, i64* %9, align 8
  %80 = load i64, i64* %28, align 16
  store i64 %80, i64* %9, align 8
  store i64 %79, i64* %28, align 16
  %81 = extractelement <2 x i64> %76, i32 0
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %70
  %84 = inttoptr i64 %81 to i8*
  call void @_ZdlPv(i8* %84) #20
  br label %85

85:                                               ; preds = %70, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #19
  br label %86

86:                                               ; preds = %85, %17
  %87 = phi i64 [ %72, %85 ], [ %24, %17 ]
  %88 = phi i32 [ %71, %85 ], [ %23, %17 ]
  %89 = inttoptr i64 %87 to i64*
  %90 = icmp eq i64 %12, 0
  br i1 %90, label %160, label %91

91:                                               ; preds = %86
  %92 = icmp eq i32 %88, 0
  br i1 %2, label %93, label %125

93:                                               ; preds = %91
  br i1 %92, label %94, label %96

94:                                               ; preds = %93
  %95 = inttoptr i64 %87 to i8*
  br label %111

96:                                               ; preds = %93
  %97 = sub nuw nsw i32 64, %88
  %98 = zext i32 %97 to i64
  %99 = icmp ult i64 %12, %98
  %100 = select i1 %99, i64 %12, i64 %98
  %101 = zext i32 %88 to i64
  %102 = shl i64 -1, %101
  %103 = sub nsw i64 %98, %100
  %104 = lshr i64 -1, %103
  %105 = and i64 %104, %102
  %106 = load i64, i64* %89, align 8
  %107 = or i64 %106, %105
  store i64 %107, i64* %89, align 8
  %108 = sub i64 %12, %100
  %109 = getelementptr inbounds i64, i64* %89, i64 1
  %110 = bitcast i64* %109 to i8*
  br label %111

111:                                              ; preds = %96, %94
  %112 = phi i64* [ %89, %94 ], [ %109, %96 ]
  %113 = phi i8* [ %95, %94 ], [ %110, %96 ]
  %114 = phi i64 [ %12, %94 ], [ %108, %96 ]
  %115 = lshr i64 %114, 6
  %116 = shl nuw nsw i64 %115, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 -1, i64 %116, i1 false) #19
  %117 = and i64 %114, 63
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %160, label %119

119:                                              ; preds = %111
  %120 = getelementptr inbounds i64, i64* %112, i64 %115
  %121 = sub nuw nsw i64 64, %117
  %122 = lshr i64 -1, %121
  %123 = load i64, i64* %120, align 8
  %124 = or i64 %123, %122
  store i64 %124, i64* %120, align 8
  br label %160

125:                                              ; preds = %91
  br i1 %92, label %126, label %128

126:                                              ; preds = %125
  %127 = inttoptr i64 %87 to i8*
  br label %144

128:                                              ; preds = %125
  %129 = sub nuw nsw i32 64, %88
  %130 = zext i32 %129 to i64
  %131 = icmp ult i64 %12, %130
  %132 = select i1 %131, i64 %12, i64 %130
  %133 = zext i32 %88 to i64
  %134 = shl i64 -1, %133
  %135 = sub nsw i64 %130, %132
  %136 = lshr i64 -1, %135
  %137 = and i64 %136, %134
  %138 = xor i64 %137, -1
  %139 = load i64, i64* %89, align 8
  %140 = and i64 %139, %138
  store i64 %140, i64* %89, align 8
  %141 = sub i64 %12, %132
  %142 = getelementptr inbounds i64, i64* %89, i64 1
  %143 = bitcast i64* %142 to i8*
  br label %144

144:                                              ; preds = %128, %126
  %145 = phi i64* [ %89, %126 ], [ %142, %128 ]
  %146 = phi i8* [ %127, %126 ], [ %143, %128 ]
  %147 = phi i64 [ %12, %126 ], [ %141, %128 ]
  %148 = lshr i64 %147, 6
  %149 = shl nuw nsw i64 %148, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %146, i8 0, i64 %149, i1 false) #19
  %150 = and i64 %147, 63
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %160, label %152

152:                                              ; preds = %144
  %153 = getelementptr inbounds i64, i64* %145, i64 %148
  %154 = sub nuw nsw i64 64, %150
  %155 = lshr i64 -1, %154
  %156 = xor i64 %155, -1
  %157 = load i64, i64* %153, align 8
  %158 = and i64 %157, %156
  store i64 %158, i64* %153, align 8
  br label %160

159:                                              ; preds = %3
  store i64 %1, i64* %5, align 8
  br label %160

160:                                              ; preds = %152, %144, %119, %111, %86, %159
  ret void
}

declare %struct.vpx_codec_iface* @vpx_codec_vp8_cx() local_unnamed_addr #2

declare i32 @_ZN6webrtc16SimulcastUtility22NumberOfTemporalLayersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376), i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #7 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #19
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #19
  %6 = tail call i64 @strlen(i8* %0) #19
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #21
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #20
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #19
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #19
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #19
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i64 7) #19
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #20
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #20
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #19
  ret i1 %68
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc16LibvpxVp8Encoder18FrameDropThresholdEm(%"class.webrtc::LibvpxVp8Encoder"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  %4 = tail call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %3) #19
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %5, align 8
  %7 = bitcast %"class.webrtc::Vp8FrameBufferController"* %6 to i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %8 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)**, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %8, i64 4
  %10 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.webrtc::Vp8FrameBufferController"* %6, i64 %1) #19
  %12 = select i1 %11, i32 30, i32 0
  ret i32 %12
}

declare i64 @_ZNK6webrtc19RateControlSettings14LibvpxVp8QpMaxEv(%"class.webrtc::RateControlSettings"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder14MaxIntraTargetEj(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = uitofp i32 %1 to float
  %4 = fmul float %3, 5.000000e-01
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  %6 = load i32, i32* %5, align 4
  %7 = uitofp i32 %6 to float
  %8 = fmul float %4, %7
  %9 = fdiv float %8, 1.000000e+01
  %10 = fptoui float %9 to i32
  %11 = icmp ugt i32 %10, 300
  %12 = select i1 %11, i32 %10, i32 300
  ret i32 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder11GetCpuSpeedEii(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = mul nsw i32 %2, %1
  %5 = icmp slt i32 %4, 101376
  %6 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, -4
  %9 = select i1 %8, i32 %7, i32 -4
  %10 = select i1 %5, i32 %9, i32 %7
  ret i32 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder15NumberOfThreadsEiii(%"class.webrtc::LibvpxVp8Encoder"* nocapture readnone, i32, i32, i32) local_unnamed_addr #8 align 2 {
  %5 = mul nsw i32 %2, %1
  %6 = icmp sgt i32 %5, 2073599
  %7 = icmp sgt i32 %3, 8
  %8 = and i1 %6, %7
  br i1 %8, label %19, label %9

9:                                                ; preds = %4
  %10 = icmp sgt i32 %5, 1228800
  %11 = icmp sgt i32 %3, 5
  %12 = and i1 %10, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = icmp sgt i32 %5, 307200
  %15 = icmp sgt i32 %3, 2
  %16 = and i1 %14, %15
  %17 = select i1 %11, i32 3, i32 2
  %18 = select i1 %16, i32 %17, i32 1
  ret i32 %18

19:                                               ; preds = %9, %4
  %20 = phi i32 [ 8, %4 ], [ 3, %9 ]
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN6webrtc22SimulcastRateAllocatorC1ERKNS_10VideoCodecE(%"class.webrtc::SimulcastRateAllocator"*, %"class.webrtc::VideoCodec"* dereferenceable(376)) unnamed_addr #2

declare void @_ZN6webrtc22SimulcastRateAllocator8AllocateENS_32VideoBitrateAllocationParametersE(%"class.webrtc::VideoBitrateAllocation"* sret, %"class.webrtc::SimulcastRateAllocator"*, %"struct.webrtc::VideoBitrateAllocationParameters"*) unnamed_addr #2

declare void @_ZN6webrtc32VideoBitrateAllocationParametersC1Ejj(%"struct.webrtc::VideoBitrateAllocationParameters"*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc32VideoBitrateAllocationParametersD1Ev(%"struct.webrtc::VideoBitrateAllocationParameters"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder25InitAndSetControlSettingsEv(%"class.webrtc::LibvpxVp8Encoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %4 = bitcast %struct.vpx_codec_ctx** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.136"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 56
  %10 = icmp ugt i64 %9, 1
  %11 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %2, i64 0, i32 0, i32 0
  %14 = inttoptr i64 %7 to %struct.vpx_codec_ctx*
  %15 = tail call %struct.vpx_codec_iface* @vpx_codec_vp8_cx() #19
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %17 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %16, align 8
  br i1 %10, label %18, label %32

18:                                               ; preds = %1
  %19 = load i64, i64* %4, align 8
  %20 = load i64, i64* %6, align 8
  %21 = sub i64 %19, %20
  %22 = sdiv exact i64 %21, 56
  %23 = trunc i64 %22 to i32
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 24, i32 0, i32 0
  %25 = load %struct.vpx_rational*, %struct.vpx_rational** %24, align 8
  %26 = bitcast %"class.webrtc::LibvpxInterface"* %12 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)***
  %27 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)** %27, i64 8
  %29 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i32, i64, %struct.vpx_rational*)** %28, align 8
  %30 = tail call i32 %29(%"class.webrtc::LibvpxInterface"* %12, %struct.vpx_codec_ctx* %14, %struct.vpx_codec_iface* %15, %struct.vpx_codec_enc_cfg* %17, i32 %23, i64 131072, %struct.vpx_rational* %25) #19
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %39, label %145

32:                                               ; preds = %1
  %33 = bitcast %"class.webrtc::LibvpxInterface"* %12 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)***
  %34 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)** %34, i64 7
  %36 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_iface*, %struct.vpx_codec_enc_cfg*, i64)** %35, align 8
  %37 = tail call i32 %36(%"class.webrtc::LibvpxInterface"* %12, %struct.vpx_codec_ctx* %14, %struct.vpx_codec_iface* %15, %struct.vpx_codec_enc_cfg* %17, i64 131072) #19
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %145

39:                                               ; preds = %32, %18
  %40 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %41 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %13, align 8
  %42 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  %43 = tail call %"struct.webrtc::VideoCodecVP8"* @_ZN6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %42) #19
  %44 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 1, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = select i1 %46, i32 0, i32 4
  %48 = bitcast %"class.webrtc::LibvpxInterface"* %40 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %49 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %49, i64 10
  %51 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %50, align 8
  %52 = tail call i32 %51(%"class.webrtc::LibvpxInterface"* %40, %struct.vpx_codec_ctx* %41, i32 15, i32 %47) #19
  %53 = load i64, i64* %4, align 8
  %54 = load i64, i64* %6, align 8
  %55 = sub i64 %53, %54
  %56 = sdiv exact i64 %55, 56
  %57 = icmp ugt i64 %56, 2
  %58 = inttoptr i64 %54 to %struct.vpx_codec_ctx*
  br i1 %57, label %59, label %75

59:                                               ; preds = %39
  %60 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %61 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %58, i64 1
  %62 = tail call %"struct.webrtc::VideoCodecVP8"* @_ZN6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %42) #19
  %63 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %62, i64 0, i32 2
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = icmp eq i8 %64, 0
  %66 = select i1 %65, i32 0, i32 4
  %67 = bitcast %"class.webrtc::LibvpxInterface"* %60 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %68 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %68, i64 10
  %70 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %69, align 8
  %71 = tail call i32 %70(%"class.webrtc::LibvpxInterface"* %60, %struct.vpx_codec_ctx* %61, i32 15, i32 %66) #19
  %72 = load i64, i64* %4, align 8
  %73 = load i64, i64* %6, align 8
  %74 = inttoptr i64 %73 to %struct.vpx_codec_ctx*
  br label %75

75:                                               ; preds = %59, %39
  %76 = phi %struct.vpx_codec_ctx* [ %74, %59 ], [ %58, %39 ]
  %77 = phi i64 [ %73, %59 ], [ %54, %39 ]
  %78 = phi i64 [ %72, %59 ], [ %53, %39 ]
  %79 = icmp eq i64 %78, %77
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 12
  %82 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 18, i32 0, i32 0
  %83 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 11
  br label %86

84:                                               ; preds = %86, %75
  %85 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 6
  store i8 1, i8* %85, align 8
  br label %145

86:                                               ; preds = %80, %86
  %87 = phi %struct.vpx_codec_ctx* [ %76, %80 ], [ %144, %86 ]
  %88 = phi i64 [ 0, %80 ], [ %138, %86 ]
  %89 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %90 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %87, i64 %88
  %91 = load i32, i32* %81, align 4
  %92 = icmp eq i32 %91, 1
  %93 = select i1 %92, i32 100, i32 1
  %94 = bitcast %"class.webrtc::LibvpxInterface"* %89 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %95 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %94, align 8
  %96 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %95, i64 10
  %97 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %96, align 8
  %98 = tail call i32 %97(%"class.webrtc::LibvpxInterface"* %89, %struct.vpx_codec_ctx* %90, i32 17, i32 %93) #19
  %99 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %100 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %13, align 8
  %101 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %100, i64 %88
  %102 = load i32*, i32** %82, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 %88
  %104 = load i32, i32* %103, align 4
  %105 = bitcast %"class.webrtc::LibvpxInterface"* %99 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %106 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %105, align 8
  %107 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %106, i64 11
  %108 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %107, align 8
  %109 = tail call i32 %108(%"class.webrtc::LibvpxInterface"* %99, %struct.vpx_codec_ctx* %101, i32 13, i32 %104) #19
  %110 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %111 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %13, align 8
  %112 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %111, i64 %88
  %113 = bitcast %"class.webrtc::LibvpxInterface"* %110 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %114 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %114, i64 11
  %116 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %115, align 8
  %117 = tail call i32 %116(%"class.webrtc::LibvpxInterface"* %110, %struct.vpx_codec_ctx* %112, i32 18, i32 0) #19
  %118 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %119 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %13, align 8
  %120 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %119, i64 %88
  %121 = load i32, i32* %83, align 4
  %122 = bitcast %"class.webrtc::LibvpxInterface"* %118 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %123 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %122, align 8
  %124 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %123, i64 10
  %125 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %124, align 8
  %126 = tail call i32 %125(%"class.webrtc::LibvpxInterface"* %118, %struct.vpx_codec_ctx* %120, i32 26, i32 %121) #19
  %127 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %11, align 8
  %128 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %13, align 8
  %129 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %128, i64 %88
  %130 = load i32, i32* %81, align 4
  %131 = icmp eq i32 %130, 1
  %132 = select i1 %131, i32 2, i32 0
  %133 = bitcast %"class.webrtc::LibvpxInterface"* %127 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %134 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %133, align 8
  %135 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %134, i64 10
  %136 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %135, align 8
  %137 = tail call i32 %136(%"class.webrtc::LibvpxInterface"* %127, %struct.vpx_codec_ctx* %129, i32 31, i32 %132) #19
  %138 = add nuw i64 %88, 1
  %139 = load i64, i64* %4, align 8
  %140 = load i64, i64* %6, align 8
  %141 = sub i64 %139, %140
  %142 = sdiv exact i64 %141, 56
  %143 = icmp ult i64 %138, %142
  %144 = inttoptr i64 %140 to %struct.vpx_codec_ctx*
  br i1 %143, label %86, label %84

145:                                              ; preds = %32, %18, %84
  %146 = phi i32 [ 0, %84 ], [ -7, %18 ], [ -7, %32 ]
  ret i32 %146
}

; Function Attrs: nounwind
declare void @_ZN6webrtc22SimulcastRateAllocatorD1Ev(%"class.webrtc::SimulcastRateAllocator"*) unnamed_addr #4

declare %"struct.webrtc::VideoCodecVP8"* @_ZN6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN6webrtc16LibvpxVp8Encoder15SteadyStateSizeEii(%"class.webrtc::LibvpxVp8Encoder"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %5 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %6 = bitcast %struct.vpx_codec_ctx** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.136"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 56
  %12 = xor i32 %1, -1
  %13 = trunc i64 %11 to i32
  %14 = add i32 %13, %12
  %15 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  %16 = tail call zeroext i1 @_ZN6webrtc16SimulcastUtility27IsConferenceModeScreenshareERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %15) #19
  %17 = icmp eq i32 %1, 0
  %18 = and i1 %17, %16
  br i1 %18, label %19, label %23

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %21 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %20, align 8
  %22 = sext i32 %14 to i64
  br label %30

23:                                               ; preds = %3
  %24 = sext i32 %14 to i64
  %25 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  %26 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %25, align 8
  %27 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %26, i64 %24, i32 38
  %28 = load i32, i32* %27, align 8
  %29 = icmp ult i32 %28, 2
  br i1 %29, label %30, label %40

30:                                               ; preds = %19, %23
  %31 = phi i64 [ %22, %19 ], [ %24, %23 ]
  %32 = phi %struct.vpx_codec_enc_cfg* [ %21, %19 ], [ %26, %23 ]
  %33 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %32, i64 %31, i32 20
  %34 = load i32, i32* %33, align 8
  %35 = mul i32 %34, 1000
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = uitofp i32 %38 to float
  br label %70

40:                                               ; preds = %23
  %41 = sext i32 %2 to i64
  %42 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %26, i64 %24, i32 39, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = mul i32 %43, 1000
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  %47 = load i32, i32* %46, align 4
  %48 = uitofp i32 %47 to double
  %49 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %26, i64 %24, i32 40, i64 %41
  %50 = load i32, i32* %49, align 4
  %51 = uitofp i32 %50 to double
  %52 = tail call double @llvm.maxnum.f64(double %51, double 1.000000e+00) #19
  %53 = fdiv double %48, %52
  %54 = fptrunc double %53 to float
  %55 = icmp sgt i32 %2, 0
  br i1 %55, label %56, label %70

56:                                               ; preds = %40
  %57 = add nsw i32 %2, -1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %26, i64 %24, i32 39, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = mul i32 %60, 1000
  %62 = zext i32 %61 to i64
  %63 = sub nsw i64 %45, %62
  %64 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %26, i64 %24, i32 40, i64 %58
  %65 = load i32, i32* %64, align 4
  %66 = uitofp i32 %65 to double
  %67 = tail call double @llvm.maxnum.f64(double %66, double 1.000000e+00) #19
  %68 = fdiv double %48, %67
  %69 = fptrunc double %68 to float
  br label %70

70:                                               ; preds = %40, %56, %30
  %71 = phi i64 [ %36, %30 ], [ %63, %56 ], [ %45, %40 ]
  %72 = phi float [ %39, %30 ], [ %69, %56 ], [ %54, %40 ]
  %73 = fpext float %72 to double
  %74 = fcmp olt double %73, 1.000000e-09
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = uitofp i64 %71 to float
  %77 = fmul float %72, 8.000000e+00
  %78 = fdiv float %76, %77
  %79 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25, i32 3
  %80 = load i32, i32* %79, align 4
  %81 = sub nsw i32 100, %80
  %82 = sitofp i32 %81 to float
  %83 = fmul float %78, %82
  %84 = fdiv float %83, 1.000000e+02
  %85 = fpext float %84 to double
  %86 = fadd double %85, 5.000000e-01
  %87 = fptoui double %86 to i64
  br label %88

88:                                               ; preds = %70, %75
  %89 = phi i64 [ %87, %75 ], [ 0, %70 ]
  ret i64 %89
}

declare zeroext i1 @_ZN6webrtc16SimulcastUtility27IsConferenceModeScreenshareERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS4_9allocatorIS6_EEEE(%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::VideoFrame"* dereferenceable(176), %"class.std::__1::vector.215"* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.webrtc::VideoFrame::UpdateRect", align 4
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to %"struct.webrtc::VideoFrame::UpdateRect"*
  %7 = alloca [3 x %"struct.webrtc::Vp8FrameConfig"], align 16
  %8 = alloca %"struct.webrtc::Vp8FrameConfig", align 4
  %9 = alloca [3 x i64], align 16
  %10 = alloca %"class.std::__1::vector.222", align 8
  %11 = alloca %"class.rtc::scoped_refptr.204", align 8
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 6
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %460, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 4
  %17 = load %"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImageCallback"** %16, align 8
  %18 = icmp eq %"class.webrtc::EncodedImageCallback"* %17, null
  br i1 %18, label %460, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16
  %21 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 16, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %50, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %20, i64 0, i32 0
  %28 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  br label %29

29:                                               ; preds = %47, %24
  %30 = phi i64 [ 0, %24 ], [ %48, %47 ]
  %31 = icmp eq i64 %30, %26
  br i1 %31, label %50, label %32

32:                                               ; preds = %29
  %33 = load i64*, i64** %27, align 8
  %34 = lshr i64 %30, 6
  %35 = getelementptr inbounds i64, i64* %33, i64 %34
  %36 = and i64 %30, 63
  %37 = shl i64 1, %36
  %38 = load i64, i64* %35, align 8
  %39 = and i64 %38, %37
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %32
  %42 = load i64*, i64** %28, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 %34
  %44 = load i64, i64* %43, align 8
  %45 = and i64 %44, %37
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %85

47:                                               ; preds = %41, %32
  %48 = add nuw i64 %30, 1
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %29

50:                                               ; preds = %29, %47, %19
  %51 = icmp eq %"class.std::__1::vector.215"* %2, null
  br i1 %51, label %85, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %54 = getelementptr inbounds %"class.std::__1::vector.215", %"class.std::__1::vector.215"* %2, i64 0, i32 0, i32 1
  %55 = bitcast i32** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.215"* %2 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %56, %58
  %60 = inttoptr i64 %58 to i32*
  br i1 %59, label %85, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %56, %58
  %65 = ashr exact i64 %64, 2
  br label %66

66:                                               ; preds = %61, %82
  %67 = phi i64 [ 0, %61 ], [ %83, %82 ]
  %68 = icmp eq i64 %67, %63
  br i1 %68, label %85, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds i32, i32* %60, i64 %67
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 3
  br i1 %72, label %73, label %82

73:                                               ; preds = %69
  %74 = load i64*, i64** %53, align 8
  %75 = lshr i64 %67, 6
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  %77 = and i64 %67, 63
  %78 = shl i64 1, %77
  %79 = load i64, i64* %76, align 8
  %80 = and i64 %79, %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %73, %69
  %83 = add nuw i64 %67, 1
  %84 = icmp ult i64 %83, %65
  br i1 %84, label %66, label %85

85:                                               ; preds = %41, %82, %73, %66, %52, %50
  %86 = phi i8 [ 0, %50 ], [ 0, %52 ], [ 1, %73 ], [ 0, %82 ], [ 0, %66 ], [ 1, %41 ]
  %87 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #19
  %88 = bitcast %"struct.webrtc::VideoFrame::UpdateRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #19
  %89 = getelementptr inbounds %"struct.webrtc::VideoFrame::UpdateRect", %"struct.webrtc::VideoFrame::UpdateRect"* %4, i64 0, i32 0
  store i32 0, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.webrtc::VideoFrame::UpdateRect", %"struct.webrtc::VideoFrame::UpdateRect"* %4, i64 0, i32 1
  store i32 0, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.webrtc::VideoFrame::UpdateRect", %"struct.webrtc::VideoFrame::UpdateRect"* %4, i64 0, i32 2
  %92 = tail call i32 @_ZNK6webrtc10VideoFrame5widthEv(%"class.webrtc::VideoFrame"* %1) #19
  store i32 %92, i32* %91, align 4
  %93 = getelementptr inbounds %"struct.webrtc::VideoFrame::UpdateRect", %"struct.webrtc::VideoFrame::UpdateRect"* %4, i64 0, i32 3
  %94 = tail call i32 @_ZNK6webrtc10VideoFrame6heightEv(%"class.webrtc::VideoFrame"* %1) #19
  store i32 %94, i32* %93, align 4
  %95 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = select i1 %97, %"struct.webrtc::VideoFrame::UpdateRect"* %4, %"struct.webrtc::VideoFrame::UpdateRect"* %98
  %100 = bitcast %"struct.webrtc::VideoFrame::UpdateRect"* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #19
  store <2 x i64> %101, <2 x i64>* %5, align 16
  %102 = call zeroext i1 @_ZNK6webrtc10VideoFrame10UpdateRect7IsEmptyEv(%"struct.webrtc::VideoFrame::UpdateRect"* nonnull %6) #19
  br i1 %102, label %103, label %125

103:                                              ; preds = %85
  %104 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 27
  %105 = load i32, i32* %104, align 8
  %106 = icmp sgt i32 %105, 2
  br i1 %106, label %107, label %124

107:                                              ; preds = %103
  %108 = icmp eq i8 %86, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #19
  br i1 %108, label %109, label %126

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25, i32 0
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %119, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 26
  %115 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  %116 = load i32, i32* %115, align 8
  %117 = udiv i32 %116, 90
  %118 = call zeroext i1 @_ZNK6webrtc19FramerateController9DropFrameEj(%"class.webrtc::FramerateController"* %114, i32 %117) #19
  br i1 %118, label %460, label %119

119:                                              ; preds = %109, %113
  %120 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 26
  %121 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  %122 = load i32, i32* %121, align 8
  %123 = udiv i32 %122, 90
  call void @_ZN6webrtc19FramerateController8AddFrameEj(%"class.webrtc::FramerateController"* %120, i32 %123) #19
  br label %126

124:                                              ; preds = %103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #19
  br label %126

125:                                              ; preds = %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #19
  br label %126

126:                                              ; preds = %125, %124, %119, %107
  %127 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %127) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %127, i8 -86, i64 96, i1 false)
  %128 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 0
  call void @_ZN6webrtc14Vp8FrameConfigC1Ev(%"struct.webrtc::Vp8FrameConfig"* nonnull %128) #19
  %129 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 1
  call void @_ZN6webrtc14Vp8FrameConfigC1Ev(%"struct.webrtc::Vp8FrameConfig"* %129) #19
  %130 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 2
  call void @_ZN6webrtc14Vp8FrameConfigC1Ev(%"struct.webrtc::Vp8FrameConfig"* %130) #19
  %131 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %132 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %133 = bitcast %struct.vpx_codec_ctx** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.std::__1::vector.136"* %131 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %134, %136
  br i1 %137, label %138, label %140

138:                                              ; preds = %126
  %139 = bitcast [3 x i64]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %139, i8 -86, i64 24, i1 false)
  br label %190

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"struct.webrtc::Vp8FrameConfig", %"struct.webrtc::Vp8FrameConfig"* %8, i64 0, i32 0
  %142 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  br label %150

144:                                              ; preds = %172
  %145 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %151, i32 11
  %146 = load i8, i8* %145, align 4, !range !2
  %147 = icmp ne i8 %146, 0
  %148 = icmp eq i8 %175, 0
  %149 = and i1 %148, %180
  br i1 %149, label %458, label %187

150:                                              ; preds = %140, %172
  %151 = phi i64 [ 0, %140 ], [ %181, %172 ]
  %152 = phi i1 [ false, %140 ], [ %180, %172 ]
  %153 = phi i8 [ %86, %140 ], [ %175, %172 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #19
  %154 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %142, align 8
  %155 = load i32, i32* %143, align 8
  %156 = bitcast %"class.webrtc::Vp8FrameBufferController"* %154 to void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)***
  %157 = load void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)**, void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)*** %156, align 8
  %158 = getelementptr inbounds void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)*, void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)** %157, i64 7
  %159 = load void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)*, void (%"struct.webrtc::Vp8FrameConfig"*, %"class.webrtc::Vp8FrameBufferController"*, i64, i32)** %158, align 8
  call void %159(%"struct.webrtc::Vp8FrameConfig"* nonnull sret %8, %"class.webrtc::Vp8FrameBufferController"* %154, i64 %151, i32 %155) #19
  %160 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %151, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %160, i8* nonnull align 4 %141, i64 29, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #19
  %161 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %151, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp eq i32 %162, 2
  br i1 %163, label %164, label %172

164:                                              ; preds = %150
  %165 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %151, i32 3
  %166 = load i32, i32* %165, align 8
  %167 = icmp eq i32 %166, 2
  br i1 %167, label %168, label %172

168:                                              ; preds = %164
  %169 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %151, i32 4
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 2
  br label %172

172:                                              ; preds = %150, %164, %168
  %173 = phi i1 [ false, %164 ], [ false, %150 ], [ %171, %168 ]
  %174 = zext i1 %173 to i8
  %175 = or i8 %153, %174
  %176 = load i8, i8* %160, align 16, !range !2
  %177 = zext i8 %176 to i32
  %178 = zext i1 %152 to i32
  %179 = or i32 %177, %178
  %180 = icmp ne i32 %179, 0
  %181 = add nuw i64 %151, 1
  %182 = load i64, i64* %133, align 8
  %183 = load i64, i64* %135, align 8
  %184 = sub i64 %182, %183
  %185 = sdiv exact i64 %184, 56
  %186 = icmp ult i64 %181, %185
  br i1 %186, label %150, label %144

187:                                              ; preds = %144
  %188 = bitcast [3 x i64]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #19
  %189 = icmp eq i64 %184, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %188, i8 -86, i64 24, i1 false)
  br i1 %189, label %190, label %211

190:                                              ; preds = %249, %138, %187
  %191 = phi i8* [ %139, %138 ], [ %188, %187 ], [ %188, %249 ]
  %192 = phi i8 [ %86, %138 ], [ %175, %187 ], [ %175, %249 ]
  %193 = phi i1 [ true, %138 ], [ %147, %187 ], [ %147, %249 ]
  %194 = bitcast %"class.std::__1::vector.222"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #19
  %195 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %10, i64 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 24, i1 false)
  call void @_ZNK6webrtc10VideoFrame18video_frame_bufferEv(%"class.rtc::scoped_refptr.204"* nonnull sret %11, %"class.webrtc::VideoFrame"* %1) #19
  call void @_ZN6webrtc16LibvpxVp8Encoder14PrepareBuffersEN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.std::__1::vector.222"* nonnull sret %10, %"class.webrtc::LibvpxVp8Encoder"* %0, %"class.rtc::scoped_refptr.204"* nonnull %11)
  %197 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %11, i64 0, i32 0
  %198 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %197, align 8
  %199 = icmp eq %"class.webrtc::VideoFrameBuffer"* %198, null
  br i1 %199, label %207, label %200

200:                                              ; preds = %190
  %201 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %198, i64 0, i32 0
  %202 = bitcast %"class.webrtc::VideoFrameBuffer"* %198 to i32 (%"class.rtc::RefCountInterface"*)***
  %203 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %202, align 8
  %204 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %203, i64 1
  %205 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %204, align 8
  %206 = call i32 %205(%"class.rtc::RefCountInterface"* %201) #19
  br label %207

207:                                              ; preds = %190, %200
  %208 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %195, align 8
  %209 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %196, align 8
  %210 = icmp eq %"class.rtc::scoped_refptr.204"* %208, %209
  br i1 %210, label %433, label %254

211:                                              ; preds = %187, %249
  %212 = phi i64 [ %252, %249 ], [ 0, %187 ]
  br i1 %148, label %213, label %249

213:                                              ; preds = %211
  %214 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %212, i32 2
  %215 = load i32, i32* %214, align 4
  %216 = shl i32 %215, 16
  %217 = and i32 %216, 65536
  %218 = xor i32 %217, 65536
  %219 = zext i32 %218 to i64
  %220 = and i32 %215, 2
  %221 = icmp eq i32 %220, 0
  %222 = or i64 %219, 262144
  %223 = select i1 %221, i64 %222, i64 %219
  %224 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %212, i32 3
  %225 = load i32, i32* %224, align 8
  %226 = and i32 %225, 1
  %227 = icmp eq i32 %226, 0
  %228 = or i64 %223, 131072
  %229 = select i1 %227, i64 %228, i64 %223
  %230 = and i32 %225, 2
  %231 = icmp eq i32 %230, 0
  %232 = or i64 %229, 4194304
  %233 = select i1 %231, i64 %232, i64 %229
  %234 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %212, i32 4
  %235 = load i32, i32* %234, align 4
  %236 = and i32 %235, 1
  %237 = icmp eq i32 %236, 0
  %238 = or i64 %233, 2097152
  %239 = select i1 %237, i64 %238, i64 %233
  %240 = and i32 %235, 2
  %241 = icmp eq i32 %240, 0
  %242 = or i64 %239, 8388608
  %243 = select i1 %241, i64 %242, i64 %239
  %244 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %212, i32 8
  %245 = load i8, i8* %244, align 1, !range !2
  %246 = icmp eq i8 %245, 0
  %247 = or i64 %243, 1048576
  %248 = select i1 %246, i64 %243, i64 %247
  br label %249

249:                                              ; preds = %211, %213
  %250 = phi i64 [ %248, %213 ], [ 1, %211 ]
  %251 = getelementptr inbounds [3 x i64], [3 x i64]* %9, i64 0, i64 %212
  store i64 %250, i64* %251, align 8
  %252 = add nuw i64 %212, 1
  %253 = icmp eq i64 %252, %185
  br i1 %253, label %190, label %211

254:                                              ; preds = %207
  %255 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 0
  %256 = load %struct.vpx_image*, %struct.vpx_image** %255, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 0, i64 24, i1 false) #19
  %257 = icmp ne i8 %192, 0
  br i1 %257, label %258, label %309

258:                                              ; preds = %254
  %259 = load i64, i64* %133, align 8
  %260 = load i64, i64* %135, align 8
  %261 = sub i64 %259, %260
  %262 = icmp eq i64 %261, 56
  br i1 %262, label %263, label %283

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 12
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 1
  br i1 %266, label %267, label %283

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5
  %269 = call %"struct.webrtc::VideoCodecVP8"* @_ZN6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %268) #19
  %270 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %269, i64 0, i32 1
  %271 = load i8, i8* %270, align 4
  %272 = icmp ult i8 %271, 2
  br i1 %272, label %273, label %283

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %275 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %131, i64 0, i32 0, i32 0
  %277 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %276, align 8
  %278 = bitcast %"class.webrtc::LibvpxInterface"* %275 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %279 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %278, align 8
  %280 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %279, i64 10
  %281 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %280, align 8
  %282 = call i32 %281(%"class.webrtc::LibvpxInterface"* %275, %struct.vpx_codec_ctx* %277, i32 26, i32 100) #19
  br label %283

283:                                              ; preds = %273, %267, %263, %258
  %284 = bitcast %"class.std::__1::vector.55"* %20 to i64*
  %285 = load i64, i64* %284, align 8, !noalias !40
  %286 = load i64, i64* %21, align 8, !noalias !60
  %287 = inttoptr i64 %285 to i64*
  %288 = lshr i64 %286, 6
  %289 = getelementptr inbounds i64, i64* %287, i64 %288
  %290 = and i64 %286, 63
  %291 = ptrtoint i64* %289 to i64
  %292 = sub i64 %291, %285
  %293 = shl i64 %292, 3
  %294 = add i64 %293, %290
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %309, label %296

296:                                              ; preds = %283
  %297 = inttoptr i64 %285 to i8*
  %298 = lshr i64 %294, 6
  %299 = shl nuw nsw i64 %298, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 %299, i1 false) #19
  %300 = and i64 %294, 63
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %309, label %302

302:                                              ; preds = %296
  %303 = getelementptr inbounds i64, i64* %287, i64 %298
  %304 = sub nuw nsw i64 64, %300
  %305 = lshr i64 -1, %304
  %306 = xor i64 %305, -1
  %307 = load i64, i64* %303, align 8
  %308 = and i64 %307, %306
  store i64 %308, i64* %303, align 8
  br label %309

309:                                              ; preds = %302, %296, %283, %254
  %310 = load i64, i64* %133, align 8
  %311 = load i64, i64* %135, align 8
  %312 = sub i64 %310, %311
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %365, label %314

314:                                              ; preds = %309
  %315 = sdiv exact i64 %312, 56
  %316 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %317 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %131, i64 0, i32 0, i32 0
  %318 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 22, i32 0, i32 0
  br label %319

319:                                              ; preds = %314, %337
  %320 = phi i64 [ %315, %314 ], [ %363, %337 ]
  %321 = phi i64 [ 0, %314 ], [ %359, %337 ]
  %322 = xor i64 %321, -1
  %323 = add i64 %320, %322
  %324 = call zeroext i1 @_ZN6webrtc16LibvpxVp8Encoder22UpdateVpxConfigurationEm(%"class.webrtc::LibvpxVp8Encoder"* %0, i64 %323)
  br i1 %324, label %325, label %337

325:                                              ; preds = %319
  %326 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %316, align 8
  %327 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %317, align 8
  %328 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %327, i64 %321
  %329 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %318, align 8
  %330 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %329, i64 %321
  %331 = bitcast %"class.webrtc::LibvpxInterface"* %326 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)***
  %332 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*** %331, align 8
  %333 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)** %332, i64 5
  %334 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_codec_enc_cfg*)** %333, align 8
  %335 = call i32 %334(%"class.webrtc::LibvpxInterface"* %326, %struct.vpx_codec_ctx* %328, %struct.vpx_codec_enc_cfg* %330) #19
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %409

337:                                              ; preds = %319, %325
  %338 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %316, align 8
  %339 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %317, align 8
  %340 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %339, i64 %321
  %341 = getelementptr inbounds [3 x i64], [3 x i64]* %9, i64 0, i64 %323
  %342 = load i64, i64* %341, align 8
  %343 = trunc i64 %342 to i32
  %344 = bitcast %"class.webrtc::LibvpxInterface"* %338 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %345 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %344, align 8
  %346 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %345, i64 11
  %347 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %346, align 8
  %348 = call i32 %347(%"class.webrtc::LibvpxInterface"* %338, %struct.vpx_codec_ctx* %340, i32 27, i32 %343) #19
  %349 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %316, align 8
  %350 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %317, align 8
  %351 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %350, i64 %321
  %352 = getelementptr inbounds [3 x %"struct.webrtc::Vp8FrameConfig"], [3 x %"struct.webrtc::Vp8FrameConfig"]* %7, i64 0, i64 %321, i32 5
  %353 = load i32, i32* %352, align 16
  %354 = bitcast %"class.webrtc::LibvpxInterface"* %349 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %355 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %354, align 8
  %356 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %355, i64 11
  %357 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %356, align 8
  %358 = call i32 %357(%"class.webrtc::LibvpxInterface"* %349, %struct.vpx_codec_ctx* %351, i32 30, i32 %353) #19
  %359 = add nuw i64 %321, 1
  %360 = load i64, i64* %133, align 8
  %361 = load i64, i64* %135, align 8
  %362 = sub i64 %360, %361
  %363 = sdiv exact i64 %362, 56
  %364 = icmp ult i64 %359, %363
  br i1 %364, label %319, label %365

365:                                              ; preds = %337, %309
  %366 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 6
  %367 = load i32, i32* %366, align 4
  %368 = udiv i32 90000, %367
  %369 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %370 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %131, i64 0, i32 0, i32 0
  %371 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 7
  %372 = zext i32 %368 to i64
  %373 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 11
  br label %374

374:                                              ; preds = %404, %365
  %375 = phi i32 [ 0, %365 ], [ %405, %404 ]
  %376 = phi i32 [ 0, %365 ], [ %383, %404 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %382, label %378

378:                                              ; preds = %374
  %379 = icmp eq i32 %376, 1
  %380 = icmp eq i32 %375, -14
  %381 = and i1 %380, %379
  br i1 %381, label %382, label %406

382:                                              ; preds = %374, %378
  %383 = add nuw nsw i32 %376, 1
  %384 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %369, align 8
  %385 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %370, align 8
  %386 = load %struct.vpx_image*, %struct.vpx_image** %255, align 8
  %387 = load i64, i64* %371, align 8
  %388 = bitcast %"class.webrtc::LibvpxInterface"* %384 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)***
  %389 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)*** %388, align 8
  %390 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)** %389, i64 23
  %391 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, %struct.vpx_image*, i64, i64, i64, i64)** %390, align 8
  %392 = call i32 %391(%"class.webrtc::LibvpxInterface"* %384, %struct.vpx_codec_ctx* %385, %struct.vpx_image* %386, i64 %387, i64 %372, i64 0, i64 1) #19
  br i1 %257, label %393, label %402

393:                                              ; preds = %382
  %394 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %369, align 8
  %395 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %370, align 8
  %396 = load i32, i32* %373, align 4
  %397 = bitcast %"class.webrtc::LibvpxInterface"* %394 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)***
  %398 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*** %397, align 8
  %399 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %398, i64 10
  %400 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32)** %399, align 8
  %401 = call i32 %400(%"class.webrtc::LibvpxInterface"* %394, %struct.vpx_codec_ctx* %395, i32 26, i32 %396) #19
  br label %402

402:                                              ; preds = %393, %382
  %403 = icmp eq i32 %392, 0
  br i1 %403, label %404, label %409

404:                                              ; preds = %402
  %405 = call i32 @_ZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEb(%"class.webrtc::LibvpxVp8Encoder"* %0, %"class.webrtc::VideoFrame"* dereferenceable(176) %1, i1 zeroext %193)
  br label %374

406:                                              ; preds = %378
  %407 = load i64, i64* %371, align 8
  %408 = add nsw i64 %407, %372
  store i64 %408, i64* %371, align 8
  br label %409

409:                                              ; preds = %325, %402, %406
  %410 = phi i32 [ %375, %406 ], [ -1, %402 ], [ -1, %325 ]
  %411 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %256, i64 0, i32 12, i64 0
  %412 = icmp eq %"class.rtc::scoped_refptr.204"* %208, null
  %413 = bitcast i8** %411 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %413, i8 0, i64 24, i1 false)
  br i1 %412, label %431, label %414

414:                                              ; preds = %409, %427
  %415 = phi %"class.rtc::scoped_refptr.204"* [ %416, %427 ], [ %209, %409 ]
  %416 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %415, i64 -1
  %417 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %416, i64 0, i32 0
  %418 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %417, align 8
  %419 = icmp eq %"class.webrtc::VideoFrameBuffer"* %418, null
  br i1 %419, label %427, label %420

420:                                              ; preds = %414
  %421 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %418, i64 0, i32 0
  %422 = bitcast %"class.webrtc::VideoFrameBuffer"* %418 to i32 (%"class.rtc::RefCountInterface"*)***
  %423 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %422, align 8
  %424 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %423, i64 1
  %425 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %424, align 8
  %426 = call i32 %425(%"class.rtc::RefCountInterface"* %421) #19
  br label %427

427:                                              ; preds = %420, %414
  %428 = icmp eq %"class.rtc::scoped_refptr.204"* %416, %208
  br i1 %428, label %429, label %414

429:                                              ; preds = %427
  %430 = bitcast %"class.rtc::scoped_refptr.204"* %208 to i8*
  call void @_ZdlPv(i8* %430) #20
  br label %431

431:                                              ; preds = %409, %429
  %432 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %195, align 8
  br label %433

433:                                              ; preds = %431, %207
  %434 = phi %"class.rtc::scoped_refptr.204"* [ %432, %431 ], [ %208, %207 ]
  %435 = phi i32 [ %410, %431 ], [ -1, %207 ]
  %436 = icmp eq %"class.rtc::scoped_refptr.204"* %434, null
  br i1 %436, label %457, label %437

437:                                              ; preds = %433
  %438 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %196, align 8
  %439 = icmp eq %"class.rtc::scoped_refptr.204"* %438, %434
  br i1 %439, label %455, label %440

440:                                              ; preds = %437, %453
  %441 = phi %"class.rtc::scoped_refptr.204"* [ %442, %453 ], [ %438, %437 ]
  %442 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %441, i64 -1
  %443 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %442, i64 0, i32 0
  %444 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %443, align 8
  %445 = icmp eq %"class.webrtc::VideoFrameBuffer"* %444, null
  br i1 %445, label %453, label %446

446:                                              ; preds = %440
  %447 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %444, i64 0, i32 0
  %448 = bitcast %"class.webrtc::VideoFrameBuffer"* %444 to i32 (%"class.rtc::RefCountInterface"*)***
  %449 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %448, align 8
  %450 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %449, i64 1
  %451 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %450, align 8
  %452 = call i32 %451(%"class.rtc::RefCountInterface"* %447) #19
  br label %453

453:                                              ; preds = %446, %440
  %454 = icmp eq %"class.rtc::scoped_refptr.204"* %442, %434
  br i1 %454, label %455, label %440

455:                                              ; preds = %453, %437
  %456 = bitcast %"class.rtc::scoped_refptr.204"* %434 to i8*
  store %"class.rtc::scoped_refptr.204"* %434, %"class.rtc::scoped_refptr.204"** %196, align 8
  call void @_ZdlPv(i8* %456) #20
  br label %457

457:                                              ; preds = %433, %455
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191) #19
  br label %458

458:                                              ; preds = %144, %457
  %459 = phi i32 [ %435, %457 ], [ 0, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %127) #19
  br label %460

460:                                              ; preds = %458, %113, %15, %3
  %461 = phi i32 [ -7, %3 ], [ -7, %15 ], [ %459, %458 ], [ 0, %113 ]
  ret i32 %461
}

declare zeroext i1 @_ZNK6webrtc10VideoFrame10UpdateRect7IsEmptyEv(%"struct.webrtc::VideoFrame::UpdateRect"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc19FramerateController9DropFrameEj(%"class.webrtc::FramerateController"*, i32) local_unnamed_addr #2

declare void @_ZN6webrtc19FramerateController8AddFrameEj(%"class.webrtc::FramerateController"*, i32) local_unnamed_addr #2

declare void @_ZN6webrtc14Vp8FrameConfigC1Ev(%"struct.webrtc::Vp8FrameConfig"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder14PrepareBuffersEN3rtc13scoped_refptrINS_16VideoFrameBufferEEE(%"class.std::__1::vector.222"* noalias nocapture sret, %"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, %"class.rtc::scoped_refptr.204"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::InlinedVector.287", align 8
  %5 = alloca %"class.rtc::scoped_refptr.204", align 8
  %6 = alloca %"class.rtc::scoped_refptr.204", align 8
  %7 = alloca %"class.rtc::scoped_refptr.295", align 8
  %8 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %9 = alloca %"class.rtc::scoped_refptr.295", align 8
  %10 = alloca %"class.absl::InlinedVector.287", align 8
  %11 = alloca %"class.std::__1::vector.222", align 8
  %12 = alloca %"class.rtc::scoped_refptr.204", align 8
  %13 = alloca %"class.rtc::scoped_refptr.204", align 8
  %14 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %15 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %16 = bitcast %"class.absl::InlinedVector.287"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %20 = bitcast i64* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %4, i64 0, i32 0, i32 1
  %22 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data"* %21 to i32*
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 1
  store i32 5, i32* %23, align 4
  store i64 4, i64* %17, align 8
  %24 = bitcast %"class.rtc::scoped_refptr.204"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #19
  %25 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %5, i64 0, i32 0
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %26 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %2, i64 0, i32 0
  %27 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %28 = bitcast %"class.webrtc::VideoFrameBuffer"* %27 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %29 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %29, i64 4
  %31 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %30, align 8
  %32 = tail call i32 %31(%"class.webrtc::VideoFrameBuffer"* %27) #19
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %3
  %35 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %36 = icmp eq %"class.webrtc::VideoFrameBuffer"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %35, i64 0, i32 0
  %39 = bitcast %"class.webrtc::VideoFrameBuffer"* %35 to void (%"class.rtc::RefCountInterface"*)***
  %40 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %39, align 8
  %41 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %40, align 8
  tail call void %41(%"class.rtc::RefCountInterface"* %38) #19
  br label %42

42:                                               ; preds = %34, %37
  store %"class.webrtc::VideoFrameBuffer"* %35, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  br label %74

43:                                               ; preds = %3
  %44 = bitcast %"class.rtc::scoped_refptr.204"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #19
  %45 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %46 = bitcast %"class.webrtc::VideoFrameBuffer"* %45 to void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)***
  %47 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)**, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)** %47, i64 10
  %49 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)** %48, align 8
  call void %49(%"class.rtc::scoped_refptr.204"* nonnull sret %6, %"class.webrtc::VideoFrameBuffer"* %45, i32* %22, i64 2) #19
  %50 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %6, i64 0, i32 0
  %51 = bitcast %"class.rtc::scoped_refptr.204"* %6 to i64*
  %52 = load i64, i64* %51, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %50, align 8
  %53 = bitcast %"class.rtc::scoped_refptr.204"* %5 to i64*
  %54 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  store i64 %52, i64* %53, align 8
  %55 = icmp eq %"class.webrtc::VideoFrameBuffer"* %54, null
  br i1 %55, label %72, label %56

56:                                               ; preds = %43
  %57 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %54, i64 0, i32 0
  %58 = bitcast %"class.webrtc::VideoFrameBuffer"* %54 to i32 (%"class.rtc::RefCountInterface"*)***
  %59 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %58, align 8
  %60 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %59, i64 1
  %61 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %60, align 8
  %62 = call i32 %61(%"class.rtc::RefCountInterface"* %57) #19
  %63 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %50, align 8
  %64 = icmp eq %"class.webrtc::VideoFrameBuffer"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %63, i64 0, i32 0
  %67 = bitcast %"class.webrtc::VideoFrameBuffer"* %63 to i32 (%"class.rtc::RefCountInterface"*)***
  %68 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %68, i64 1
  %70 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %69, align 8
  %71 = call i32 %70(%"class.rtc::RefCountInterface"* %66) #19
  br label %72

72:                                               ; preds = %43, %56, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #19
  %73 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  br label %74

74:                                               ; preds = %72, %42
  %75 = phi %"class.webrtc::VideoFrameBuffer"* [ %73, %72 ], [ %35, %42 ]
  %76 = icmp eq %"class.webrtc::VideoFrameBuffer"* %75, null
  br i1 %76, label %109, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.webrtc::VideoFrameBuffer"* %75 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %79 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %78, align 8
  %80 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %79, i64 4
  %81 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %80, align 8
  %82 = call i32 %81(%"class.webrtc::VideoFrameBuffer"* nonnull %75) #19
  %83 = load i64, i64* %17, align 8
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  %86 = load i32*, i32** %18, align 8
  %87 = select i1 %85, i32* %22, i32* %86
  %88 = lshr i64 %83, 1
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %77, %95
  %92 = phi i32* [ %96, %95 ], [ %87, %77 ]
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %82
  br i1 %94, label %98, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds i32, i32* %92, i64 1
  %97 = icmp eq i32* %96, %89
  br i1 %97, label %101, label %91

98:                                               ; preds = %91, %77
  %99 = phi i32* [ %87, %77 ], [ %92, %91 ]
  %100 = icmp eq i32* %99, %89
  br i1 %100, label %101, label %248

101:                                              ; preds = %95, %98
  %102 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %103 = bitcast %"class.webrtc::VideoFrameBuffer"* %102 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %104 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %103, align 8
  %105 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %104, i64 4
  %106 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %105, align 8
  %107 = call i32 %106(%"class.webrtc::VideoFrameBuffer"* %102) #19
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %248, label %109

109:                                              ; preds = %74, %101
  %110 = bitcast %"class.rtc::scoped_refptr.295"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #19
  %111 = getelementptr inbounds %"class.rtc::scoped_refptr.295", %"class.rtc::scoped_refptr.295"* %7, i64 0, i32 0
  store %"class.webrtc::I420BufferInterface"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::I420BufferInterface"*), %"class.webrtc::I420BufferInterface"** %111, align 8
  %112 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %113 = bitcast %"class.webrtc::VideoFrameBuffer"* %112 to void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)***
  %114 = load void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)**, void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)*, void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)** %114, i64 7
  %116 = load void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)*, void (%"class.rtc::scoped_refptr.295"*, %"class.webrtc::VideoFrameBuffer"*)** %115, align 8
  call void %116(%"class.rtc::scoped_refptr.295"* nonnull sret %7, %"class.webrtc::VideoFrameBuffer"* %112) #19
  %117 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %118 = icmp eq %"class.webrtc::I420BufferInterface"* %117, null
  br i1 %118, label %119, label %145

119:                                              ; preds = %109
  %120 = bitcast %"class.rtc::DiagnosticLogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %120) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %8, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1326, i32 1, i32 0, i32 0) #19
  %121 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %8, i64 0, i32 7
  %122 = bitcast %"class.std::__1::basic_ostringstream"* %121 to %"class.std::__1::basic_ostream"*
  %123 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %122, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0), i64 18) #19
  %124 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %125 = bitcast %"class.webrtc::VideoFrameBuffer"* %124 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %126 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %125, align 8
  %127 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %126, i64 4
  %128 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %127, align 8
  %129 = call i32 %128(%"class.webrtc::VideoFrameBuffer"* %124) #19
  %130 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %129) #19
  %131 = call i64 @strlen(i8* %130) #19
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %123, i8* %130, i64 %131) #19
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %132, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.19, i64 0, i64 0), i64 35) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %120) #19
  %134 = bitcast %"class.std::__1::vector.222"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #19
  %135 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %136 = icmp eq %"class.webrtc::I420BufferInterface"* %135, null
  br i1 %136, label %144, label %137

137:                                              ; preds = %119
  %138 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.webrtc::I420BufferInterface"* %135 to i32 (%"class.rtc::RefCountInterface"*)***
  %140 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %139, align 8
  %141 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %140, i64 1
  %142 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %141, align 8
  %143 = call i32 %142(%"class.rtc::RefCountInterface"* %138) #19
  br label %144

144:                                              ; preds = %119, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #19
  br label %562

145:                                              ; preds = %109
  %146 = bitcast %"class.webrtc::I420BufferInterface"* %117 to i32 (%"class.webrtc::I420BufferInterface"*)***
  %147 = load i32 (%"class.webrtc::I420BufferInterface"*)**, i32 (%"class.webrtc::I420BufferInterface"*)*** %146, align 8
  %148 = getelementptr inbounds i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %147, i64 4
  %149 = load i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %148, align 8
  %150 = call i32 %149(%"class.webrtc::I420BufferInterface"* nonnull %117) #19
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %202, label %152

152:                                              ; preds = %145
  %153 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %154 = bitcast %"class.webrtc::I420BufferInterface"* %153 to i32 (%"class.webrtc::I420BufferInterface"*)***
  %155 = load i32 (%"class.webrtc::I420BufferInterface"*)**, i32 (%"class.webrtc::I420BufferInterface"*)*** %154, align 8
  %156 = getelementptr inbounds i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %155, i64 4
  %157 = load i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %156, align 8
  %158 = call i32 %157(%"class.webrtc::I420BufferInterface"* %153) #19
  %159 = icmp eq i32 %158, 2
  br i1 %159, label %202, label %160

160:                                              ; preds = %152
  %161 = bitcast %"class.rtc::scoped_refptr.295"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #19
  %162 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  call void @_ZN6webrtc19I420BufferInterface6ToI420Ev(%"class.rtc::scoped_refptr.295"* nonnull sret %9, %"class.webrtc::I420BufferInterface"* %162) #19
  %163 = getelementptr inbounds %"class.rtc::scoped_refptr.295", %"class.rtc::scoped_refptr.295"* %9, i64 0, i32 0
  %164 = bitcast %"class.rtc::scoped_refptr.295"* %9 to i64*
  %165 = load i64, i64* %164, align 8
  store %"class.webrtc::I420BufferInterface"* null, %"class.webrtc::I420BufferInterface"** %163, align 8
  %166 = bitcast %"class.rtc::scoped_refptr.295"* %7 to i64*
  %167 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  store i64 %165, i64* %166, align 8
  %168 = icmp eq %"class.webrtc::I420BufferInterface"* %167, null
  br i1 %168, label %185, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %167, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = bitcast %"class.webrtc::I420BufferInterface"* %167 to i32 (%"class.rtc::RefCountInterface"*)***
  %172 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %171, align 8
  %173 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %172, i64 1
  %174 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %173, align 8
  %175 = call i32 %174(%"class.rtc::RefCountInterface"* %170) #19
  %176 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %163, align 8
  %177 = icmp eq %"class.webrtc::I420BufferInterface"* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %176, i64 0, i32 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.webrtc::I420BufferInterface"* %176 to i32 (%"class.rtc::RefCountInterface"*)***
  %181 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %180, align 8
  %182 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %181, i64 1
  %183 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %182, align 8
  %184 = call i32 %183(%"class.rtc::RefCountInterface"* %179) #19
  br label %185

185:                                              ; preds = %160, %169, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #19
  %186 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %187 = bitcast %"class.webrtc::I420BufferInterface"* %186 to i32 (%"class.webrtc::I420BufferInterface"*)***
  %188 = load i32 (%"class.webrtc::I420BufferInterface"*)**, i32 (%"class.webrtc::I420BufferInterface"*)*** %187, align 8
  %189 = getelementptr inbounds i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %188, i64 4
  %190 = load i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %189, align 8
  %191 = call i32 %190(%"class.webrtc::I420BufferInterface"* %186) #19
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %195 = bitcast %"class.webrtc::I420BufferInterface"* %194 to i32 (%"class.webrtc::I420BufferInterface"*)***
  %196 = load i32 (%"class.webrtc::I420BufferInterface"*)**, i32 (%"class.webrtc::I420BufferInterface"*)*** %195, align 8
  %197 = getelementptr inbounds i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %196, i64 4
  %198 = load i32 (%"class.webrtc::I420BufferInterface"*)*, i32 (%"class.webrtc::I420BufferInterface"*)** %197, align 8
  %199 = call i32 %198(%"class.webrtc::I420BufferInterface"* %194) #19
  %200 = icmp eq i32 %199, 2
  br i1 %200, label %202, label %201

201:                                              ; preds = %193
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1340, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #21
  unreachable

202:                                              ; preds = %193, %185, %152, %145
  %203 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %204 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = icmp eq %"class.webrtc::I420BufferInterface"* %203, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %203, i64 0, i32 0, i32 0, i32 0, i32 0
  %208 = bitcast %"class.webrtc::I420BufferInterface"* %203 to void (%"class.rtc::RefCountInterface"*)***
  %209 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %208, align 8
  %210 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %209, align 8
  call void %210(%"class.rtc::RefCountInterface"* %207) #19
  br label %211

211:                                              ; preds = %206, %202
  %212 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %213 = icmp eq %"class.webrtc::VideoFrameBuffer"* %212, null
  br i1 %213, label %221, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %212, i64 0, i32 0
  %216 = bitcast %"class.webrtc::VideoFrameBuffer"* %212 to i32 (%"class.rtc::RefCountInterface"*)***
  %217 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %216, align 8
  %218 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %217, i64 1
  %219 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %218, align 8
  %220 = call i32 %219(%"class.rtc::RefCountInterface"* %215) #19
  br label %221

221:                                              ; preds = %211, %214
  store %"class.webrtc::VideoFrameBuffer"* %204, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  br i1 %205, label %227, label %222

222:                                              ; preds = %221
  %223 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %203, i64 0, i32 0, i32 0, i32 0, i32 0
  %224 = bitcast %"class.webrtc::I420BufferInterface"* %203 to void (%"class.rtc::RefCountInterface"*)***
  %225 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %224, align 8
  %226 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %225, align 8
  call void %226(%"class.rtc::RefCountInterface"* %223) #19
  br label %227

227:                                              ; preds = %222, %221
  %228 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %229 = icmp eq %"class.webrtc::VideoFrameBuffer"* %228, null
  br i1 %229, label %237, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %228, i64 0, i32 0
  %232 = bitcast %"class.webrtc::VideoFrameBuffer"* %228 to i32 (%"class.rtc::RefCountInterface"*)***
  %233 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %232, align 8
  %234 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %233, i64 1
  %235 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %234, align 8
  %236 = call i32 %235(%"class.rtc::RefCountInterface"* %231) #19
  br label %237

237:                                              ; preds = %227, %230
  store %"class.webrtc::VideoFrameBuffer"* %204, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %238 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %111, align 8
  %239 = icmp eq %"class.webrtc::I420BufferInterface"* %238, null
  br i1 %239, label %247, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %238, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = bitcast %"class.webrtc::I420BufferInterface"* %238 to i32 (%"class.rtc::RefCountInterface"*)***
  %243 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %242, align 8
  %244 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %243, i64 1
  %245 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %244, align 8
  %246 = call i32 %245(%"class.rtc::RefCountInterface"* %241) #19
  br label %247

247:                                              ; preds = %237, %240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #19
  br label %248

248:                                              ; preds = %98, %247, %101
  %249 = bitcast %"class.absl::InlinedVector.287"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %249) #19
  %250 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %252 = bitcast %"class.absl::InlinedVector.287"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 32, i1 false)
  %253 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %254 = bitcast %"class.webrtc::VideoFrameBuffer"* %253 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %255 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %254, align 8
  %256 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %255, i64 4
  %257 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %256, align 8
  %258 = call i32 %257(%"class.webrtc::VideoFrameBuffer"* %253) #19
  %259 = getelementptr inbounds %"class.absl::InlinedVector.287", %"class.absl::InlinedVector.287"* %10, i64 0, i32 0, i32 1
  %260 = bitcast %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data"* %259 to i32*
  store i32 %258, i32* %260, align 8
  store i64 2, i64* %250, align 8
  %261 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %262 = bitcast %"class.webrtc::VideoFrameBuffer"* %261 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %263 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %262, align 8
  %264 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %263, i64 4
  %265 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %264, align 8
  %266 = call i32 %265(%"class.webrtc::VideoFrameBuffer"* %261) #19
  switch i32 %266, label %270 [
    i32 1, label %268
    i32 2, label %268
    i32 5, label %267
  ]

267:                                              ; preds = %248
  br label %268

268:                                              ; preds = %248, %248, %267
  %269 = phi i32 [ 265, %267 ], [ 258, %248 ], [ 258, %248 ]
  call void @_ZN6webrtc16LibvpxVp8Encoder22MaybeUpdatePixelFormatE11vpx_img_fmt(%"class.webrtc::LibvpxVp8Encoder"* %1, i32 %269)
  br label %270

270:                                              ; preds = %268, %248
  %271 = bitcast %"class.std::__1::vector.222"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %271) #19
  %272 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %11, i64 0, i32 0, i32 0
  %273 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %11, i64 0, i32 0, i32 1
  %274 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 0, i64 24, i1 false) #19
  %275 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 19, i32 0, i32 0
  %276 = load %struct.vpx_image*, %struct.vpx_image** %275, align 8
  %277 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  call fastcc void @_ZN6webrtc12_GLOBAL__N_117SetRawImagePlanesEP9vpx_imagePNS_16VideoFrameBufferE(%struct.vpx_image* %276, %"class.webrtc::VideoFrameBuffer"* %277)
  %278 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %273, align 8
  %279 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %274, align 8
  %280 = icmp eq %"class.rtc::scoped_refptr.204"* %278, %279
  br i1 %280, label %294, label %281

281:                                              ; preds = %270
  %282 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %278, i64 0, i32 0
  %283 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  store %"class.webrtc::VideoFrameBuffer"* %283, %"class.webrtc::VideoFrameBuffer"** %282, align 8
  %284 = icmp eq %"class.webrtc::VideoFrameBuffer"* %283, null
  br i1 %284, label %290, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %283, i64 0, i32 0
  %287 = bitcast %"class.webrtc::VideoFrameBuffer"* %283 to void (%"class.rtc::RefCountInterface"*)***
  %288 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %287, align 8
  %289 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %288, align 8
  call void %289(%"class.rtc::RefCountInterface"* %286) #19
  br label %290

290:                                              ; preds = %285, %281
  %291 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %278, i64 1
  %292 = ptrtoint %"class.rtc::scoped_refptr.204"* %291 to i64
  %293 = bitcast %"class.rtc::scoped_refptr.204"** %273 to i64*
  store i64 %292, i64* %293, align 8
  br label %295

294:                                              ; preds = %270
  call void @_ZNSt3__16vectorIN3rtc13scoped_refptrIN6webrtc16VideoFrameBufferEEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_(%"class.std::__1::vector.222"* nonnull %11, %"class.rtc::scoped_refptr.204"* nonnull dereferenceable(8) %5) #19
  br label %295

295:                                              ; preds = %290, %294
  %296 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 21
  %297 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 21, i32 0, i32 1
  %298 = bitcast %struct.vpx_codec_ctx** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.std::__1::vector.136"* %296 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %299, %301
  %303 = sdiv exact i64 %302, 56
  %304 = icmp ugt i64 %303, 1
  br i1 %304, label %308, label %305

305:                                              ; preds = %295
  %306 = bitcast %"class.std::__1::vector.222"* %0 to i8*
  %307 = bitcast %"class.rtc::scoped_refptr.204"** %273 to i64*
  br label %514

308:                                              ; preds = %295
  %309 = bitcast %"class.rtc::scoped_refptr.204"* %12 to i8*
  %310 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %12, i64 0, i32 0
  %311 = bitcast %"class.rtc::scoped_refptr.204"* %13 to i8*
  %312 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %13, i64 0, i32 0
  %313 = bitcast %"class.rtc::DiagnosticLogMessage"* %14 to i8*
  %314 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %14, i64 0, i32 7
  %315 = bitcast %"class.std::__1::basic_ostringstream"* %314 to %"class.std::__1::basic_ostream"*
  %316 = bitcast %"class.std::__1::vector.222"* %0 to i8*
  %317 = bitcast %"class.rtc::DiagnosticLogMessage"* %15 to i8*
  %318 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %15, i64 0, i32 7
  %319 = bitcast %"class.std::__1::basic_ostringstream"* %318 to %"class.std::__1::basic_ostream"*
  %320 = bitcast %"class.rtc::scoped_refptr.204"** %273 to i64*
  br label %327

321:                                              ; preds = %511
  %322 = load i64, i64* %298, align 8
  %323 = load i64, i64* %300, align 8
  %324 = sub i64 %322, %323
  %325 = sdiv exact i64 %324, 56
  %326 = icmp ult i64 %513, %325
  br i1 %326, label %327, label %514

327:                                              ; preds = %308, %321
  %328 = phi i64 [ 1, %308 ], [ %513, %321 ]
  %329 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %26, align 8
  %330 = bitcast %"class.webrtc::VideoFrameBuffer"* %329 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %331 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %330, align 8
  %332 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %331, i64 4
  %333 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %332, align 8
  %334 = call i32 %333(%"class.webrtc::VideoFrameBuffer"* %329) #19
  %335 = icmp eq i32 %334, 0
  %336 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %273, align 8
  %337 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %336, i64 -1, i32 0
  %338 = select i1 %335, %"class.webrtc::VideoFrameBuffer"** %26, %"class.webrtc::VideoFrameBuffer"** %337
  %339 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %338, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %309) #19
  store %"class.webrtc::VideoFrameBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::VideoFrameBuffer"*), %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %340 = load %struct.vpx_image*, %struct.vpx_image** %275, align 8
  %341 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %340, i64 %328, i32 6
  %342 = load i32, i32* %341, align 8
  %343 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %340, i64 %328, i32 7
  %344 = load i32, i32* %343, align 4
  %345 = bitcast %"class.webrtc::VideoFrameBuffer"* %339 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %346 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %345, align 8, !noalias !63
  %347 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %346, i64 5
  %348 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %347, align 8, !noalias !63
  %349 = call i32 %348(%"class.webrtc::VideoFrameBuffer"* %339) #19, !noalias !63
  %350 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %345, align 8, !noalias !63
  %351 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %350, i64 6
  %352 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %351, align 8, !noalias !63
  %353 = call i32 %352(%"class.webrtc::VideoFrameBuffer"* %339) #19, !noalias !63
  %354 = bitcast %"class.webrtc::VideoFrameBuffer"* %339 to void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)***
  %355 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)**, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)*** %354, align 8, !noalias !63
  %356 = getelementptr inbounds void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)** %355, i64 9
  %357 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32, i32, i32, i32, i32, i32)** %356, align 8, !noalias !63
  call void %357(%"class.rtc::scoped_refptr.204"* nonnull sret %12, %"class.webrtc::VideoFrameBuffer"* %339, i32 0, i32 0, i32 %349, i32 %353, i32 %342, i32 %344) #19
  %358 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %359 = bitcast %"class.webrtc::VideoFrameBuffer"* %358 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %360 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %359, align 8
  %361 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %360, i64 4
  %362 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %361, align 8
  %363 = call i32 %362(%"class.webrtc::VideoFrameBuffer"* %358) #19
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %431

365:                                              ; preds = %327
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %311) #19
  store %"class.webrtc::VideoFrameBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::VideoFrameBuffer"*), %"class.webrtc::VideoFrameBuffer"** %312, align 8
  %366 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %367 = load i64, i64* %250, align 8
  %368 = and i64 %367, 1
  %369 = icmp eq i64 %368, 0
  %370 = load i32*, i32** %251, align 8
  %371 = select i1 %369, i32* %260, i32* %370
  %372 = lshr i64 %367, 1
  %373 = icmp eq i64 %372, 0
  %374 = select i1 %373, i32* null, i32* %371
  %375 = bitcast %"class.webrtc::VideoFrameBuffer"* %366 to void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)***
  %376 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)**, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*** %375, align 8
  %377 = getelementptr inbounds void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)** %376, i64 10
  %378 = load void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)*, void (%"class.rtc::scoped_refptr.204"*, %"class.webrtc::VideoFrameBuffer"*, i32*, i64)** %377, align 8
  call void %378(%"class.rtc::scoped_refptr.204"* nonnull sret %13, %"class.webrtc::VideoFrameBuffer"* %366, i32* %374, i64 %372) #19
  %379 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %312, align 8
  %380 = icmp eq %"class.webrtc::VideoFrameBuffer"* %379, null
  br i1 %380, label %381, label %403

381:                                              ; preds = %365
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %313) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %14, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1382, i32 1, i32 0, i32 0) #19
  %382 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %315, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), i64 21) #19
  %383 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %384 = bitcast %"class.webrtc::VideoFrameBuffer"* %383 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %385 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %384, align 8
  %386 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %385, i64 4
  %387 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %386, align 8
  %388 = call i32 %387(%"class.webrtc::VideoFrameBuffer"* %383) #19
  %389 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %388) #19
  %390 = call i64 @strlen(i8* %389) #19
  %391 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %382, i8* %389, i64 %390) #19
  %392 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %391, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i64 10) #19
  %393 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %394 = bitcast %"class.webrtc::VideoFrameBuffer"* %393 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %395 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %394, align 8
  %396 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %395, i64 4
  %397 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %396, align 8
  %398 = call i32 %397(%"class.webrtc::VideoFrameBuffer"* %393) #19
  %399 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %398) #19
  %400 = call i64 @strlen(i8* %399) #19
  %401 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %392, i8* %399, i64 %400) #19
  %402 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %401, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i64 21) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %313) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #19
  br label %418

403:                                              ; preds = %365
  %404 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %379, i64 0, i32 0
  %405 = bitcast %"class.webrtc::VideoFrameBuffer"* %379 to void (%"class.rtc::RefCountInterface"*)***
  %406 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %405, align 8
  %407 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %406, align 8
  call void %407(%"class.rtc::RefCountInterface"* %404) #19
  %408 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %409 = icmp eq %"class.webrtc::VideoFrameBuffer"* %408, null
  br i1 %409, label %417, label %410

410:                                              ; preds = %403
  %411 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %408, i64 0, i32 0
  %412 = bitcast %"class.webrtc::VideoFrameBuffer"* %408 to i32 (%"class.rtc::RefCountInterface"*)***
  %413 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %412, align 8
  %414 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %413, i64 1
  %415 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %414, align 8
  %416 = call i32 %415(%"class.rtc::RefCountInterface"* %411) #19
  br label %417

417:                                              ; preds = %403, %410
  store %"class.webrtc::VideoFrameBuffer"* %379, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  br label %418

418:                                              ; preds = %417, %381
  %419 = phi i32 [ 0, %417 ], [ 1, %381 ]
  %420 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %312, align 8
  %421 = icmp eq %"class.webrtc::VideoFrameBuffer"* %420, null
  br i1 %421, label %429, label %422

422:                                              ; preds = %418
  %423 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %420, i64 0, i32 0
  %424 = bitcast %"class.webrtc::VideoFrameBuffer"* %420 to i32 (%"class.rtc::RefCountInterface"*)***
  %425 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %424, align 8
  %426 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %425, i64 1
  %427 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %426, align 8
  %428 = call i32 %427(%"class.rtc::RefCountInterface"* %423) #19
  br label %429

429:                                              ; preds = %418, %422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %311) #19
  %430 = icmp eq i32 %419, 0
  br i1 %430, label %431, label %500

431:                                              ; preds = %429, %327
  %432 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %433 = bitcast %"class.webrtc::VideoFrameBuffer"* %432 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %434 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %433, align 8
  %435 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %434, i64 4
  %436 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %435, align 8
  %437 = call i32 %436(%"class.webrtc::VideoFrameBuffer"* %432) #19
  %438 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %439 = bitcast %"class.webrtc::VideoFrameBuffer"* %438 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %440 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %439, align 8
  %441 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %440, i64 4
  %442 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %441, align 8
  %443 = call i32 %442(%"class.webrtc::VideoFrameBuffer"* %438) #19
  %444 = add i32 %437, -1
  %445 = icmp ult i32 %444, 2
  %446 = add i32 %443, -1
  %447 = icmp ult i32 %446, 2
  %448 = icmp eq i32 %437, %443
  %449 = select i1 %445, i1 %447, i1 %448
  br i1 %449, label %480, label %450

450:                                              ; preds = %431
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %317) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %15, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1393, i32 1, i32 0, i32 0) #19
  %451 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %319, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i64 13) #19
  %452 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %345, align 8
  %453 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %452, i64 4
  %454 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %453, align 8
  %455 = call i32 %454(%"class.webrtc::VideoFrameBuffer"* %339) #19
  %456 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %455) #19
  %457 = call i64 @strlen(i8* %456) #19
  %458 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %451, i8* %456, i64 %457) #19
  %459 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %458, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0), i64 42) #19
  %460 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %461 = bitcast %"class.webrtc::VideoFrameBuffer"* %460 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %462 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %461, align 8
  %463 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %462, i64 4
  %464 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %463, align 8
  %465 = call i32 %464(%"class.webrtc::VideoFrameBuffer"* %460) #19
  %466 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %465) #19
  %467 = call i64 @strlen(i8* %466) #19
  %468 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %459, i8* %466, i64 %467) #19
  %469 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %468, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0), i64 12) #19
  %470 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %471 = bitcast %"class.webrtc::VideoFrameBuffer"* %470 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %472 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %471, align 8
  %473 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %472, i64 4
  %474 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %473, align 8
  %475 = call i32 %474(%"class.webrtc::VideoFrameBuffer"* %470) #19
  %476 = call i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32 %475) #19
  %477 = call i64 @strlen(i8* %476) #19
  %478 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %469, i8* %476, i64 %477) #19
  %479 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %478, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0), i64 21) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %15) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %317) #19
  call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #19
  br label %500

480:                                              ; preds = %431
  %481 = load %struct.vpx_image*, %struct.vpx_image** %275, align 8
  %482 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %481, i64 %328
  %483 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  call fastcc void @_ZN6webrtc12_GLOBAL__N_117SetRawImagePlanesEP9vpx_imagePNS_16VideoFrameBufferE(%struct.vpx_image* %482, %"class.webrtc::VideoFrameBuffer"* %483)
  %484 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %273, align 8
  %485 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %274, align 8
  %486 = icmp eq %"class.rtc::scoped_refptr.204"* %484, %485
  br i1 %486, label %499, label %487

487:                                              ; preds = %480
  %488 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %484, i64 0, i32 0
  %489 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  store %"class.webrtc::VideoFrameBuffer"* %489, %"class.webrtc::VideoFrameBuffer"** %488, align 8
  %490 = icmp eq %"class.webrtc::VideoFrameBuffer"* %489, null
  br i1 %490, label %496, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %489, i64 0, i32 0
  %493 = bitcast %"class.webrtc::VideoFrameBuffer"* %489 to void (%"class.rtc::RefCountInterface"*)***
  %494 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %493, align 8
  %495 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %494, align 8
  call void %495(%"class.rtc::RefCountInterface"* %492) #19
  br label %496

496:                                              ; preds = %491, %487
  %497 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %484, i64 1
  %498 = ptrtoint %"class.rtc::scoped_refptr.204"* %497 to i64
  store i64 %498, i64* %320, align 8
  br label %500

499:                                              ; preds = %480
  call void @_ZNSt3__16vectorIN3rtc13scoped_refptrIN6webrtc16VideoFrameBufferEEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_(%"class.std::__1::vector.222"* nonnull %11, %"class.rtc::scoped_refptr.204"* nonnull dereferenceable(8) %12) #19
  br label %500

500:                                              ; preds = %499, %496, %429, %450
  %501 = phi i32 [ 1, %450 ], [ 1, %429 ], [ 0, %496 ], [ 0, %499 ]
  %502 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %310, align 8
  %503 = icmp eq %"class.webrtc::VideoFrameBuffer"* %502, null
  br i1 %503, label %511, label %504

504:                                              ; preds = %500
  %505 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %502, i64 0, i32 0
  %506 = bitcast %"class.webrtc::VideoFrameBuffer"* %502 to i32 (%"class.rtc::RefCountInterface"*)***
  %507 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %506, align 8
  %508 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %507, i64 1
  %509 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %508, align 8
  %510 = call i32 %509(%"class.rtc::RefCountInterface"* %505) #19
  br label %511

511:                                              ; preds = %500, %504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %309) #19
  %512 = icmp eq i32 %501, 0
  %513 = add nuw i64 %328, 1
  br i1 %512, label %321, label %527

514:                                              ; preds = %321, %305
  %515 = phi i64* [ %307, %305 ], [ %320, %321 ]
  %516 = phi i8* [ %306, %305 ], [ %316, %321 ]
  call void @llvm.memset.p0i8.i64(i8* align 8 %516, i8 0, i64 24, i1 false) #19
  %517 = bitcast %"class.std::__1::vector.222"* %11 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = bitcast %"class.std::__1::vector.222"* %0 to i64*
  store i64 %518, i64* %519, align 8
  %520 = load i64, i64* %515, align 8
  %521 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %0, i64 0, i32 0, i32 1
  %522 = bitcast %"class.rtc::scoped_refptr.204"** %521 to i64*
  store i64 %520, i64* %522, align 8
  %523 = bitcast %"class.rtc::scoped_refptr.204"** %274 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %526 = bitcast %"class.rtc::scoped_refptr.204"** %525 to i64*
  store i64 %524, i64* %526, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 0, i64 24, i1 false) #19
  br label %554

527:                                              ; preds = %511
  %528 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %272, align 8
  %529 = icmp eq %"class.rtc::scoped_refptr.204"* %528, null
  br i1 %529, label %554, label %530

530:                                              ; preds = %527
  %531 = bitcast %"class.rtc::scoped_refptr.204"* %528 to i8*
  %532 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %273, align 8
  %533 = icmp eq %"class.rtc::scoped_refptr.204"* %532, %528
  br i1 %533, label %552, label %534

534:                                              ; preds = %530, %547
  %535 = phi %"class.rtc::scoped_refptr.204"* [ %536, %547 ], [ %532, %530 ]
  %536 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %535, i64 -1
  %537 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %536, i64 0, i32 0
  %538 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %537, align 8
  %539 = icmp eq %"class.webrtc::VideoFrameBuffer"* %538, null
  br i1 %539, label %547, label %540

540:                                              ; preds = %534
  %541 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %538, i64 0, i32 0
  %542 = bitcast %"class.webrtc::VideoFrameBuffer"* %538 to i32 (%"class.rtc::RefCountInterface"*)***
  %543 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %542, align 8
  %544 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %543, i64 1
  %545 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %544, align 8
  %546 = call i32 %545(%"class.rtc::RefCountInterface"* %541) #19
  br label %547

547:                                              ; preds = %540, %534
  %548 = icmp eq %"class.rtc::scoped_refptr.204"* %536, %528
  br i1 %548, label %549, label %534

549:                                              ; preds = %547
  %550 = bitcast %"class.std::__1::vector.222"* %11 to i8**
  %551 = load i8*, i8** %550, align 8
  br label %552

552:                                              ; preds = %549, %530
  %553 = phi i8* [ %551, %549 ], [ %531, %530 ]
  store %"class.rtc::scoped_refptr.204"* %528, %"class.rtc::scoped_refptr.204"** %273, align 8
  call void @_ZdlPv(i8* %553) #20
  br label %554

554:                                              ; preds = %514, %527, %552
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %271) #19
  %555 = load i64, i64* %250, align 8
  %556 = and i64 %555, 1
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %561, label %558

558:                                              ; preds = %554
  %559 = bitcast i32** %251 to i8**
  %560 = load i8*, i8** %559, align 8
  call void @_ZdlPv(i8* %560) #20
  br label %561

561:                                              ; preds = %554, %558
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %249) #19
  br label %562

562:                                              ; preds = %144, %561
  %563 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %25, align 8
  %564 = icmp eq %"class.webrtc::VideoFrameBuffer"* %563, null
  br i1 %564, label %572, label %565

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %563, i64 0, i32 0
  %567 = bitcast %"class.webrtc::VideoFrameBuffer"* %563 to i32 (%"class.rtc::RefCountInterface"*)***
  %568 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %567, align 8
  %569 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %568, i64 1
  %570 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %569, align 8
  %571 = call i32 %570(%"class.rtc::RefCountInterface"* %566) #19
  br label %572

572:                                              ; preds = %562, %565
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #19
  %573 = load i64, i64* %17, align 8
  %574 = and i64 %573, 1
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %579, label %576

576:                                              ; preds = %572
  %577 = bitcast i32** %18 to i8**
  %578 = load i8*, i8** %577, align 8
  call void @_ZdlPv(i8* %578) #20
  br label %579

579:                                              ; preds = %572, %576
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #19
  ret void
}

declare void @_ZNK6webrtc10VideoFrame18video_frame_bufferEv(%"class.rtc::scoped_refptr.204"* sret, %"class.webrtc::VideoFrame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEb(%"class.webrtc::LibvpxVp8Encoder"*, %"class.webrtc::VideoFrame"* nocapture readonly dereferenceable(176), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca [1 x i8], align 1
  %6 = alloca [1 x i64], align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"struct.webrtc::CodecSpecificInfo", align 8
  %9 = alloca %"class.rtc::scoped_refptr.272", align 8
  %10 = alloca i32, align 4
  %11 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21
  %12 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 1
  %13 = bitcast %struct.vpx_codec_ctx** %12 to i64*
  %14 = bitcast %"class.std::__1::vector.136"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  %16 = load i64, i64* %14, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %43, label %18

18:                                               ; preds = %3
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %19, 56
  %21 = bitcast i8** %7 to i8*
  %22 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 0
  %23 = bitcast %"struct.webrtc::CodecSpecificInfo"* %8 to i8*
  %24 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %11, i64 0, i32 0, i32 0
  %26 = bitcast %"class.rtc::scoped_refptr.272"* %9 to i8*
  %27 = getelementptr inbounds %"class.rtc::scoped_refptr.272", %"class.rtc::scoped_refptr.272"* %9, i64 0, i32 0
  %28 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  %29 = zext i1 %2 to i8
  %30 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 17, i32 0
  %31 = bitcast i8** %4 to i8*
  %32 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i64 0, i64 0
  %33 = bitcast [1 x i64]* %6 to i8*
  %34 = getelementptr inbounds [1 x i64], [1 x i64]* %6, i64 0, i64 0
  %35 = bitcast i32* %10 to i8*
  %36 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %8, i64 0, i32 1, i32 0, i32 1
  %38 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 25, i32 2
  %39 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 27
  %40 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %41 = shl i64 %20, 32
  %42 = ashr exact i64 %41, 32
  br label %45

43:                                               ; preds = %310, %3
  %44 = phi i32 [ 0, %3 ], [ %300, %310 ]
  ret i32 %44

45:                                               ; preds = %18, %310
  %46 = phi i64 [ %42, %18 ], [ %49, %310 ]
  %47 = phi i32 [ 0, %18 ], [ %300, %310 ]
  %48 = phi i64 [ 0, %18 ], [ %311, %310 ]
  %49 = add i64 %46, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  store i8* null, i8** %7, align 8
  %50 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %51 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %50, i64 %48, i32 12
  store i64 0, i64* %51, align 8
  %52 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %53 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %52, i64 %48, i32 4
  store i32 4, i32* %53, align 8
  call void @llvm.lifetime.start.p0i8(i64 1992, i8* nonnull %23) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 1992, i1 false)
  call void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"* nonnull %8) #19
  %54 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %24, align 8
  %55 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %25, align 8
  %56 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %55, i64 %48
  %57 = bitcast %"class.webrtc::LibvpxInterface"* %54 to %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)***
  %58 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)**, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*** %57, align 8
  %59 = getelementptr inbounds %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %58, i64 24
  %60 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %59, align 8
  %61 = call %struct.vpx_codec_cx_pkt* %60(%"class.webrtc::LibvpxInterface"* %54, %struct.vpx_codec_ctx* %56, i8** nonnull %7) #19
  %62 = icmp eq %struct.vpx_codec_cx_pkt* %61, null
  br i1 %62, label %84, label %63

63:                                               ; preds = %45, %73
  %64 = phi %struct.vpx_codec_cx_pkt* [ %82, %73 ], [ %61, %45 ]
  %65 = phi i64 [ %74, %73 ], [ 0, %45 ]
  %66 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %64, i64 0, i32 1, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, %65
  br label %73

73:                                               ; preds = %69, %63
  %74 = phi i64 [ %72, %69 ], [ %65, %63 ]
  %75 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %24, align 8
  %76 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %25, align 8
  %77 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %76, i64 %48
  %78 = bitcast %"class.webrtc::LibvpxInterface"* %75 to %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)***
  %79 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)**, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*** %78, align 8
  %80 = getelementptr inbounds %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %79, i64 24
  %81 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %80, align 8
  %82 = call %struct.vpx_codec_cx_pkt* %81(%"class.webrtc::LibvpxInterface"* %75, %struct.vpx_codec_ctx* %77, i8** nonnull %7) #19
  %83 = icmp eq %struct.vpx_codec_cx_pkt* %82, null
  br i1 %83, label %84, label %63

84:                                               ; preds = %73, %45
  %85 = phi i64 [ 0, %45 ], [ %74, %73 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #19
  store %"class.webrtc::EncodedImageBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBuffer"*), %"class.webrtc::EncodedImageBuffer"** %27, align 8
  call void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.272"* nonnull sret %9, i64 %85) #19
  store i8* null, i8** %7, align 8
  br label %86

86:                                               ; preds = %134, %84
  %87 = phi i64 [ 0, %84 ], [ %135, %134 ]
  %88 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %24, align 8
  %89 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %25, align 8
  %90 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %89, i64 %48
  %91 = bitcast %"class.webrtc::LibvpxInterface"* %88 to %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)***
  %92 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)**, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*** %91, align 8
  %93 = getelementptr inbounds %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %92, i64 24
  %94 = load %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)*, %struct.vpx_codec_cx_pkt* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i8**)** %93, align 8
  %95 = call %struct.vpx_codec_cx_pkt* %94(%"class.webrtc::LibvpxInterface"* %88, %struct.vpx_codec_ctx* %90, i8** nonnull %7) #19
  %96 = icmp eq %struct.vpx_codec_cx_pkt* %95, null
  br i1 %96, label %196, label %97

97:                                               ; preds = %86
  %98 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %95, i64 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %134

101:                                              ; preds = %97
  %102 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %95, i64 0, i32 1, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, %87
  %105 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %27, align 8
  %106 = bitcast %"class.webrtc::EncodedImageBuffer"* %105 to i64 (%"class.webrtc::EncodedImageBuffer"*)***
  %107 = load i64 (%"class.webrtc::EncodedImageBuffer"*)**, i64 (%"class.webrtc::EncodedImageBuffer"*)*** %106, align 8
  %108 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %107, i64 6
  %109 = load i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %108, align 8
  %110 = call i64 %109(%"class.webrtc::EncodedImageBuffer"* %105) #19
  %111 = icmp ugt i64 %104, %110
  br i1 %111, label %112, label %121

112:                                              ; preds = %101
  %113 = load i64, i64* %102, align 8
  %114 = add i64 %113, %87
  %115 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %27, align 8
  %116 = bitcast %"class.webrtc::EncodedImageBuffer"* %115 to i64 (%"class.webrtc::EncodedImageBuffer"*)***
  %117 = load i64 (%"class.webrtc::EncodedImageBuffer"*)**, i64 (%"class.webrtc::EncodedImageBuffer"*)*** %116, align 8
  %118 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %117, i64 6
  %119 = load i64 (%"class.webrtc::EncodedImageBuffer"*)*, i64 (%"class.webrtc::EncodedImageBuffer"*)** %118, align 8
  %120 = call i64 %119(%"class.webrtc::EncodedImageBuffer"* %115) #19
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1137, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %114, i64 %120) #21
  unreachable

121:                                              ; preds = %101
  %122 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %27, align 8
  %123 = bitcast %"class.webrtc::EncodedImageBuffer"* %122 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %124 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %123, align 8
  %125 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %124, i64 5
  %126 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %125, align 8
  %127 = call i8* %126(%"class.webrtc::EncodedImageBuffer"* %122) #19
  %128 = getelementptr inbounds i8, i8* %127, i64 %87
  %129 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %95, i64 0, i32 1, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = load i64, i64* %102, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %130, i64 %131, i1 false)
  %132 = load i64, i64* %102, align 8
  %133 = add i64 %132, %87
  br label %134

134:                                              ; preds = %97, %121
  %135 = phi i64 [ %133, %121 ], [ %87, %97 ]
  %136 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %95, i64 0, i32 1, i32 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = and i32 %137, 8
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %86

140:                                              ; preds = %134
  %141 = and i32 %137, 1
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140
  %144 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %145 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %144, i64 %48, i32 4
  store i32 3, i32* %145, align 8
  br label %146

146:                                              ; preds = %140, %143
  %147 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %148 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %27, align 8
  %149 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %148, i64 0, i32 0
  %150 = icmp eq %"class.webrtc::EncodedImageBuffer"* %148, null
  br i1 %150, label %160, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %148, i64 0, i32 0, i32 0
  %153 = bitcast %"class.webrtc::EncodedImageBuffer"* %148 to void (%"class.rtc::RefCountInterface"*)***
  %154 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %153, align 8
  %155 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %154, align 8
  call void %155(%"class.rtc::RefCountInterface"* %152) #19
  %156 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %148, i64 0, i32 0, i32 0
  %157 = bitcast %"class.webrtc::EncodedImageBuffer"* %148 to void (%"class.rtc::RefCountInterface"*)***
  %158 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %157, align 8
  %159 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %158, align 8
  call void %159(%"class.rtc::RefCountInterface"* %156) #19
  br label %160

160:                                              ; preds = %146, %151
  %161 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %147, i64 %48, i32 11, i32 0
  %162 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %161, align 8
  %163 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %162, null
  br i1 %163, label %171, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.webrtc::EncodedImageBufferInterface", %"class.webrtc::EncodedImageBufferInterface"* %162, i64 0, i32 0
  %166 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %162 to i32 (%"class.rtc::RefCountInterface"*)***
  %167 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %166, align 8
  %168 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %167, i64 1
  %169 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %168, align 8
  %170 = call i32 %169(%"class.rtc::RefCountInterface"* %165) #19
  br label %171

171:                                              ; preds = %160, %164
  store %"class.webrtc::EncodedImageBufferInterface"* %149, %"class.webrtc::EncodedImageBufferInterface"** %161, align 8
  %172 = bitcast %"class.webrtc::EncodedImageBuffer"* %148 to i64 (%"class.webrtc::EncodedImageBufferInterface"*)***
  %173 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)**, i64 (%"class.webrtc::EncodedImageBufferInterface"*)*** %172, align 8
  %174 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %173, i64 6
  %175 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %174, align 8
  %176 = call i64 %175(%"class.webrtc::EncodedImageBufferInterface"* %149) #19
  %177 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %147, i64 %48, i32 12
  store i64 %176, i64* %177, align 8
  br i1 %150, label %185, label %178

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %148, i64 0, i32 0, i32 0
  %180 = bitcast %"class.webrtc::EncodedImageBuffer"* %148 to i32 (%"class.rtc::RefCountInterface"*)***
  %181 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %180, align 8
  %182 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %181, i64 1
  %183 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %182, align 8
  %184 = call i32 %183(%"class.rtc::RefCountInterface"* %179) #19
  br label %185

185:                                              ; preds = %171, %178
  %186 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %187 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %186, i64 %48, i32 12
  store i64 %135, i64* %187, align 8
  %188 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %189 = trunc i64 %49 to i32
  %190 = shl i64 %49, 32
  %191 = or i64 %190, 1
  %192 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %188, i64 %48, i32 14
  %193 = bitcast %"class.absl::optional"* %192 to i64*
  store i64 %191, i64* %193, align 4
  %194 = trunc i64 %48 to i32
  %195 = load i32, i32* %28, align 8
  call void @_ZN6webrtc16LibvpxVp8Encoder21PopulateCodecSpecificEPNS_17CodecSpecificInfoERK16vpx_codec_cx_pktiij(%"class.webrtc::LibvpxVp8Encoder"* %0, %"struct.webrtc::CodecSpecificInfo"* nonnull %8, %struct.vpx_codec_cx_pkt* nonnull dereferenceable(136) %95, i32 %189, i32 %194, i32 %195)
  br label %196

196:                                              ; preds = %86, %185
  %197 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %198 = load i32, i32* %28, align 8
  %199 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %197, i64 %48, i32 13
  store i32 %198, i32* %199, align 8
  %200 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %201 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %200, i64 %48, i32 21
  store i8 %29, i8* %201, align 8
  %202 = load i64*, i64** %30, align 8
  %203 = lshr i64 %49, 6
  %204 = getelementptr inbounds i64, i64* %202, i64 %203
  %205 = and i64 %49, 63
  %206 = shl i64 1, %205
  %207 = load i64, i64* %204, align 8
  %208 = and i64 %207, %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %299, label %210

210:                                              ; preds = %196
  %211 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %212 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %211, i64 %48, i32 12
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %280, label %215

215:                                              ; preds = %210
  %216 = load atomic i8, i8* bitcast (i64* @_ZGVZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168 to i8*) acquire, align 8
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %223, !prof !66

218:                                              ; preds = %215
  %219 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168) #19
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %223, label %221

221:                                              ; preds = %218
  %222 = call i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)) #19
  store i8* %222, i8** @_ZZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168) #19
  br label %223

223:                                              ; preds = %218, %221, %215
  %224 = load i8*, i8** @_ZZN6webrtc16LibvpxVp8Encoder20GetEncodedPartitionsERKNS_10VideoFrameEbE32trace_event_unique_catstatic1168, align 8
  %225 = load i8, i8* %224, align 1
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %233, label %227

227:                                              ; preds = %223
  %228 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %229 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %228, i64 %48, i32 12
  %230 = load i64, i64* %229, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  store i8 3, i8* %32, align 1
  %231 = shl i64 %230, 32
  %232 = ashr exact i64 %231, 32
  store i64 %232, i64* %34, align 8
  call void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext 67, i8* %224, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i64 %48, i32 1, i8** nonnull %4, i8* nonnull %32, i64* nonnull %34, i8 zeroext 2) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  br label %233

233:                                              ; preds = %223, %227
  %234 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 10, i64 %49, i32 1
  %235 = load i16, i16* %234, align 2
  %236 = zext i16 %235 to i32
  %237 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %238 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %237, i64 %48, i32 1
  store i32 %236, i32* %238, align 4
  %239 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 5, i32 10, i64 %49, i32 0
  %240 = load i16, i16* %239, align 4
  %241 = zext i16 %240 to i32
  %242 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %243 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %242, i64 %48, i32 0
  store i32 %241, i32* %243, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #19
  store i32 -1, i32* %10, align 4
  %244 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %24, align 8
  %245 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %25, align 8
  %246 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %245, i64 %48
  %247 = bitcast %"class.webrtc::LibvpxInterface"* %244 to i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)***
  %248 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)**, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)*** %247, align 8
  %249 = getelementptr inbounds i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)** %248, i64 12
  %250 = load i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)*, i32 (%"class.webrtc::LibvpxInterface"*, %struct.vpx_codec_ctx*, i32, i32*)** %249, align 8
  %251 = call i32 %250(%"class.webrtc::LibvpxInterface"* %244, %struct.vpx_codec_ctx* %246, i32 19, i32* nonnull %10) #19
  %252 = load i32, i32* %10, align 4
  %253 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %254 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %253, i64 %48, i32 8
  store i32 %252, i32* %254, align 4
  %255 = load %"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImageCallback"** %36, align 8
  %256 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %257 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %256, i64 %48
  %258 = bitcast %"class.webrtc::EncodedImageCallback"* %255 to { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)***
  %259 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)**, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*** %258, align 8
  %260 = getelementptr inbounds { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %259, i64 2
  %261 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %260, align 8
  %262 = call { i64, i8 } %261(%"class.webrtc::EncodedImageCallback"* %255, %"class.webrtc::EncodedImage"* dereferenceable(272) %257, %"struct.webrtc::CodecSpecificInfo"* nonnull %8) #19
  %263 = load i8, i8* %37, align 1
  %264 = zext i8 %263 to i32
  %265 = trunc i64 %49 to i32
  %266 = call i64 @_ZN6webrtc16LibvpxVp8Encoder15SteadyStateSizeEii(%"class.webrtc::LibvpxVp8Encoder"* %0, i32 %265, i32 %264)
  %267 = load i32, i32* %10, align 4
  %268 = load i32, i32* %38, align 8
  %269 = icmp sgt i32 %267, %268
  br i1 %269, label %278, label %270

270:                                              ; preds = %233
  %271 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %272 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %271, i64 %48, i32 12
  %273 = load i64, i64* %272, align 8
  %274 = icmp ugt i64 %273, %266
  br i1 %274, label %278, label %275

275:                                              ; preds = %270
  %276 = load i32, i32* %39, align 8
  %277 = add nsw i32 %276, 1
  br label %278

278:                                              ; preds = %233, %270, %275
  %279 = phi i32 [ %277, %275 ], [ 0, %270 ], [ 0, %233 ]
  store i32 %279, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #19
  br label %299

280:                                              ; preds = %210
  %281 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %40, align 8
  %282 = bitcast %"class.webrtc::Vp8FrameBufferController"* %281 to i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)***
  %283 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)**, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*** %282, align 8
  %284 = getelementptr inbounds i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %283, i64 4
  %285 = load i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)*, i1 (%"class.webrtc::Vp8FrameBufferController"*, i64)** %284, align 8
  %286 = call zeroext i1 %285(%"class.webrtc::Vp8FrameBufferController"* %281, i64 %49) #19
  br i1 %286, label %299, label %287

287:                                              ; preds = %280
  %288 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %22, align 8
  %289 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %288, i64 %48, i32 12
  %290 = load i64, i64* %289, align 8
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %299

292:                                              ; preds = %287
  %293 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %40, align 8
  %294 = load i32, i32* %28, align 8
  %295 = bitcast %"class.webrtc::Vp8FrameBufferController"* %293 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)***
  %296 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)*** %295, align 8
  %297 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)** %296, i64 9
  %298 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32)** %297, align 8
  call void %298(%"class.webrtc::Vp8FrameBufferController"* %293, i64 %49, i32 %294) #19
  br label %299

299:                                              ; preds = %196, %278, %287, %292, %280
  %300 = phi i32 [ %47, %278 ], [ %47, %280 ], [ -14, %292 ], [ -14, %287 ], [ %47, %196 ]
  %301 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %27, align 8
  %302 = icmp eq %"class.webrtc::EncodedImageBuffer"* %301, null
  br i1 %302, label %310, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %301, i64 0, i32 0, i32 0
  %305 = bitcast %"class.webrtc::EncodedImageBuffer"* %301 to i32 (%"class.rtc::RefCountInterface"*)***
  %306 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %305, align 8
  %307 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %306, i64 1
  %308 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %307, align 8
  %309 = call i32 %308(%"class.rtc::RefCountInterface"* %304) #19
  br label %310

310:                                              ; preds = %299, %303
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #19
  call void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 1992, i8* nonnull %23) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  %311 = add nuw i64 %48, 1
  %312 = load i64, i64* %13, align 8
  %313 = load i64, i64* %14, align 8
  %314 = sub i64 %312, %313
  %315 = sdiv exact i64 %314, 56
  %316 = icmp ult i64 %311, %315
  br i1 %316, label %45, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder21PopulateCodecSpecificEPNS_17CodecSpecificInfoERK16vpx_codec_cx_pktiij(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, %"struct.webrtc::CodecSpecificInfo"*, %struct.vpx_codec_cx_pkt* nocapture readonly dereferenceable(136), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca [1 x %"class.webrtc::RenderResolution"], align 4
  %9 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 0
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 1, i32 0, i32 3
  store i8 -1, i8* %10, align 1
  %11 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %2, i64 0, i32 1, i32 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 1, i32 0, i32 0
  %14 = lshr i32 %12, 1
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  store i8 %16, i8* %13, align 8
  %17 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #19
  store i32 0, i32* %7, align 4
  %18 = sext i32 %4 to i64
  %19 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 21, i32 0, i32 0
  %20 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %19, align 8
  %21 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %20, i64 %18
  %22 = call i32 (%struct.vpx_codec_ctx*, i32, ...) @vpx_codec_control_(%struct.vpx_codec_ctx* %21, i32 20, i32* nonnull %7) #19
  %23 = load i32, i32* %11, align 8
  %24 = and i32 %23, 1
  %25 = icmp ne i32 %24, 0
  %26 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %27 = load %"class.webrtc::Vp8FrameBufferController"*, %"class.webrtc::Vp8FrameBufferController"** %26, align 8
  %28 = sext i32 %3 to i64
  %29 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 20, i32 0, i32 0
  %30 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %30, i64 %18, i32 12
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* %7, align 4
  %34 = bitcast %"class.webrtc::Vp8FrameBufferController"* %27 to void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)***
  %35 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)**, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)** %35, i64 8
  %37 = load void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)*, void (%"class.webrtc::Vp8FrameBufferController"*, i64, i32, i64, i1, i32, %"struct.webrtc::CodecSpecificInfo"*)** %36, align 8
  call void %37(%"class.webrtc::Vp8FrameBufferController"* %27, i64 %28, i32 %5, i64 %32, i1 zeroext %25, i32 %33, %"struct.webrtc::CodecSpecificInfo"* %1) #19
  br i1 %25, label %38, label %52

38:                                               ; preds = %6
  %39 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = bitcast [1 x %"class.webrtc::RenderResolution"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #19
  %44 = getelementptr inbounds [1 x %"class.webrtc::RenderResolution"], [1 x %"class.webrtc::RenderResolution"]* %8, i64 0, i64 0
  %45 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %2, i64 0, i32 1, i32 0, i32 6, i64 0
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %struct.vpx_codec_cx_pkt, %struct.vpx_codec_cx_pkt* %2, i64 0, i32 1, i32 0, i32 7, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds [1 x %"class.webrtc::RenderResolution"], [1 x %"class.webrtc::RenderResolution"]* %8, i64 0, i64 0, i32 0
  store i32 %46, i32* %49, align 4
  %50 = getelementptr inbounds [1 x %"class.webrtc::RenderResolution"], [1 x %"class.webrtc::RenderResolution"]* %8, i64 0, i64 0, i32 1
  store i32 %48, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.257"* %51, %"class.webrtc::RenderResolution"* nonnull %44, i64 1) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #19
  br label %52

52:                                               ; preds = %38, %42, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #19
  ret void
}

declare void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #2

declare void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.272"* sret, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

declare i8* @_ZN6webrtc11EventTracer18GetCategoryEnabledEPKc(i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16LibvpxVp8Encoder14GetEncoderInfoEv(%"struct.webrtc::VideoEncoder::EncoderInfo"* noalias sret, %"class.webrtc::LibvpxVp8Encoder"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.48", align 8
  %4 = alloca %"class.std::__1::vector.48", align 8
  %5 = alloca %"struct.webrtc::VideoEncoder::ScalingSettings", align 4
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 -86, i64 240, i1 false)
  tail call void @_ZN6webrtc12VideoEncoder11EncoderInfoC1Ev(%"struct.webrtc::VideoEncoder::EncoderInfo"* %0) #19
  %8 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 4
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 6, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br label %20

18:                                               ; preds = %2
  store i8 6, i8* %11, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i8* [ %17, %14 ], [ %19, %18 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6, i1 false) #19
  %22 = getelementptr inbounds i8, i8* %21, i64 6
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 3
  %24 = tail call zeroext i1 @_ZNK6webrtc19RateControlSettings30LibvpxVp8TrustedRateControllerEv(%"class.webrtc::RateControlSettings"* %23) #19
  %25 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 5
  %26 = zext i1 %24 to i8
  store i8 %26, i8* %25, align 8
  %27 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 6
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 7
  store i8 0, i8* %28, align 2
  %29 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 10
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 15
  %31 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %30, i64 0, i32 0, i32 0
  %32 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %31, align 8
  %33 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 15, i32 0, i32 1
  %34 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %33, align 8
  %35 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %32, %34
  br i1 %35, label %40, label %36

36:                                               ; preds = %20
  %37 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 9
  %38 = icmp eq %"class.std::__1::vector.48"* %37, %30
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void @_ZNSt3__16vectorIN6webrtc12VideoEncoder23ResolutionBitrateLimitsENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.48"* %37, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %32, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %34) #19
  br label %40

40:                                               ; preds = %39, %36, %20
  %41 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 29, i32 0
  %42 = tail call i64 @_ZNK6webrtc19EncoderInfoSettings30requested_resolution_alignmentEv(%"class.webrtc::EncoderInfoSettings"* %41) #19
  %43 = trunc i64 %42 to i8
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %58, label %45

45:                                               ; preds = %40
  %46 = tail call i64 @_ZNK6webrtc19EncoderInfoSettings30requested_resolution_alignmentEv(%"class.webrtc::EncoderInfoSettings"* %41) #19
  %47 = trunc i64 %46 to i8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %50, !prof !67

49:                                               ; preds = %45
  tail call void @llvm.trap() #19
  unreachable

50:                                               ; preds = %45
  %51 = lshr i64 %46, 32
  %52 = trunc i64 %51 to i32
  %53 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 1
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 29, i32 0, i32 2
  %55 = tail call zeroext i1 @_ZNK6webrtc14FieldTrialFlag3GetEv(%"class.webrtc::FieldTrialFlag"* %54) #19
  %56 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 2
  %57 = zext i1 %55 to i8
  store i8 %57, i8* %56, align 4
  br label %58

58:                                               ; preds = %40, %50
  %59 = bitcast %"class.std::__1::vector.48"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #19
  %60 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 29, i32 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #19, !alias.scope !68
  %61 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 29, i32 0, i32 3, i32 0, i32 1
  %62 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %61 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !68
  %64 = bitcast %"class.std::__1::vector.48"* %60 to i64*
  %65 = load i64, i64* %64, align 8, !noalias !68
  %66 = sub i64 %63, %65
  %67 = ashr exact i64 %66, 4
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %139, label %69

69:                                               ; preds = %58
  %70 = icmp ugt i64 %67, 1152921504606846975
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.48"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %72) #21
  unreachable

73:                                               ; preds = %69
  %74 = tail call i8* @_Znwm(i64 %66) #20
  %75 = bitcast i8* %74 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  %76 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %76 to i8**
  store i8* %74, i8** %77, align 8, !alias.scope !68
  %78 = bitcast %"class.std::__1::vector.48"* %3 to i8**
  store i8* %74, i8** %78, align 8, !alias.scope !68
  %79 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %75, i64 %67
  %80 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %79, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %80, align 8, !alias.scope !68
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %66, 0
  %83 = lshr exact i64 %66, 4
  %84 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %75, i64 %83
  %85 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %84 to i64
  %86 = select i1 %82, i64 %85, i64 %81
  %87 = inttoptr i64 %86 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  %88 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %75, %87
  tail call void @_ZdlPv(i8* nonnull %74) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #19
  br i1 %88, label %141, label %89

89:                                               ; preds = %73
  %90 = bitcast %"class.std::__1::vector.48"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #19, !alias.scope !71
  %91 = load i64, i64* %62, align 8, !noalias !71
  %92 = load i64, i64* %64, align 8, !noalias !71
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 4
  %95 = icmp eq i64 %93, 0
  br i1 %95, label %119, label %96

96:                                               ; preds = %89
  %97 = icmp ugt i64 %94, 1152921504606846975
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector.48"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %99) #21
  unreachable

100:                                              ; preds = %96
  %101 = tail call i8* @_Znwm(i64 %93) #20
  %102 = bitcast i8* %101 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  %103 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %4, i64 0, i32 0, i32 1
  %104 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %103 to i8**
  store i8* %101, i8** %104, align 8, !alias.scope !71
  %105 = bitcast %"class.std::__1::vector.48"* %4 to i8**
  store i8* %101, i8** %105, align 8, !alias.scope !71
  %106 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %102, i64 %94
  %107 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %106, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %107, align 8, !alias.scope !71
  %108 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %103 to i64*
  %109 = ptrtoint i8* %101 to i64
  %110 = icmp sgt i64 %93, 0
  %111 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %106 to i64
  br i1 %110, label %112, label %117

112:                                              ; preds = %100
  %113 = lshr exact i64 %93, 4
  %114 = inttoptr i64 %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %101, i8* align 4 %114, i64 %93, i1 false) #19
  %115 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %102, i64 %113
  %116 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %115 to i64
  br label %117

117:                                              ; preds = %112, %100
  %118 = phi i64 [ %116, %112 ], [ %109, %100 ]
  store i64 %118, i64* %108, align 8, !alias.scope !71
  br label %119

119:                                              ; preds = %89, %117
  %120 = phi i64 [ 0, %89 ], [ %111, %117 ]
  %121 = phi i64 [ 0, %89 ], [ %118, %117 ]
  %122 = phi i64 [ 0, %89 ], [ %109, %117 ]
  %123 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 9
  %124 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %123, i64 0, i32 0, i32 0
  %125 = load %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %124, align 8
  %126 = icmp eq %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %125, null
  br i1 %126, label %133, label %127

127:                                              ; preds = %119
  %128 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %125 to i64
  %129 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 9, i32 0, i32 1
  %130 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %129 to i64*
  store i64 %128, i64* %130, align 8
  %131 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %125 to i8*
  tail call void @_ZdlPv(i8* %131) #20
  %132 = bitcast %"class.std::__1::vector.48"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 24, i1 false) #19
  br label %133

133:                                              ; preds = %127, %119
  %134 = bitcast %"class.std::__1::vector.48"* %123 to i64*
  store i64 %122, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 9, i32 0, i32 1
  %136 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %135 to i64*
  store i64 %121, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %137 to i64*
  store i64 %120, i64* %138, align 8
  br label %139

139:                                              ; preds = %58, %133
  %140 = phi i8* [ %90, %133 ], [ %59, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #19
  br label %141

141:                                              ; preds = %139, %73
  %142 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 12
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %155

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 22, i32 0, i32 0
  %147 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %146, align 8
  %148 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 22, i32 0, i32 1
  %149 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %148, align 8
  %150 = icmp eq %struct.vpx_codec_enc_cfg* %147, %149
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %147, i64 0, i32 11
  %153 = load i32, i32* %152, align 8
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %151, %141
  %156 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ScalingSettings", %"struct.webrtc::VideoEncoder::ScalingSettings"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #19
  br label %165

157:                                              ; preds = %145, %151
  %158 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 5
  %159 = tail call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %158) #19
  %160 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %159, i64 0, i32 3
  %161 = load i8, i8* %160, align 2, !range !2
  %162 = icmp eq i8 %161, 0
  %163 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ScalingSettings", %"struct.webrtc::VideoEncoder::ScalingSettings"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %163) #19
  br i1 %162, label %165, label %164

164:                                              ; preds = %157
  call void @_ZN6webrtc12VideoEncoder15ScalingSettingsC1Eii(%"struct.webrtc::VideoEncoder::ScalingSettings"* nonnull %5, i32 29, i32 95) #19
  br label %167

165:                                              ; preds = %157, %155
  %166 = phi i8* [ %156, %155 ], [ %163, %157 ]
  call void @_ZN6webrtc12VideoEncoder15ScalingSettingsC1ENS1_4KOffE(%"struct.webrtc::VideoEncoder::ScalingSettings"* nonnull %5) #19
  br label %167

167:                                              ; preds = %165, %164
  %168 = phi i8* [ %166, %165 ], [ %163, %164 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %168, i64 16, i1 false)
  call void @_ZN6webrtc12VideoEncoder15ScalingSettingsD1Ev(%"struct.webrtc::VideoEncoder::ScalingSettings"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %168) #19
  %169 = call i64 @_ZNK6webrtc19RateControlSettings18LibvpxVp8MinPixelsEv(%"class.webrtc::RateControlSettings"* %23) #19
  %170 = trunc i64 %169 to i8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %181, label %172

172:                                              ; preds = %167
  %173 = call i64 @_ZNK6webrtc19RateControlSettings18LibvpxVp8MinPixelsEv(%"class.webrtc::RateControlSettings"* %23) #19
  %174 = trunc i64 %173 to i8
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #21
  unreachable

177:                                              ; preds = %172
  %178 = lshr i64 %173, 32
  %179 = trunc i64 %178 to i32
  %180 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 0, i32 1
  store i32 %179, i32* %180, align 4
  br label %181

181:                                              ; preds = %167, %177
  %182 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 11, i32 0
  call void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16VideoFrameBuffer4TypeELm5ENSt3__19allocatorIS4_EEE6AssignINS0_20IteratorValueAdapterIS7_PKS4_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.288"* %182, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.ref.tmp, i64 0, i64 0), i64 2) #19
  %183 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 6
  %184 = load i8, i8* %183, align 8, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %313, label %186

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 21
  %188 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 21, i32 0, i32 1
  %189 = bitcast %struct.vpx_codec_ctx** %188 to i64*
  %190 = bitcast %"class.std::__1::vector.136"* %187 to i64*
  %191 = load i64, i64* %189, align 8
  %192 = load i64, i64* %190, align 8
  %193 = icmp eq i64 %191, %192
  br i1 %193, label %313, label %194

194:                                              ; preds = %186
  %195 = sub i64 %191, %192
  %196 = sdiv exact i64 %195, 56
  %197 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 5
  %198 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 5, i32 9
  %199 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 22, i32 0, i32 0
  br label %200

200:                                              ; preds = %194, %306
  %201 = phi i64 [ %196, %194 ], [ %203, %306 ]
  %202 = phi i64 [ 0, %194 ], [ %307, %306 ]
  %203 = add i64 %201, -1
  %204 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202
  %205 = getelementptr inbounds %"class.absl::InlinedVector.280", %"class.absl::InlinedVector.280"* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 1
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %212, label %209

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1, i32 0, i32 0
  %211 = load i8*, i8** %210, align 8
  call void @_ZdlPv(i8* %211) #20
  br label %212

212:                                              ; preds = %200, %209
  store i64 0, i64* %205, align 8
  %213 = load i8, i8* %198, align 8
  %214 = zext i8 %213 to i64
  %215 = icmp ult i64 %202, %214
  br i1 %215, label %216, label %220

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %1, i64 0, i32 5, i32 10, i64 %202, i32 8
  %218 = load i8, i8* %217, align 4, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %306, label %220

220:                                              ; preds = %216, %212
  %221 = icmp eq i64 %202, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %220
  %223 = call zeroext i1 @_ZN6webrtc16SimulcastUtility27IsConferenceModeScreenshareERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* dereferenceable(376) %197) #19
  br i1 %223, label %306, label %224

224:                                              ; preds = %222, %220
  %225 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %199, align 8
  %226 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %225, i64 %203, i32 38
  %227 = load i32, i32* %226, align 8
  %228 = icmp ult i32 %227, 2
  %229 = getelementptr inbounds %"class.absl::InlinedVector.280", %"class.absl::InlinedVector.280"* %204, i64 0, i32 0
  br i1 %228, label %236, label %230

230:                                              ; preds = %224
  %231 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1, i32 0, i32 0
  %232 = bitcast i8** %231 to i64*
  %233 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1, i32 0, i32 1
  %234 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1
  %235 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %234 to i64
  br label %261

236:                                              ; preds = %224
  %237 = load i64, i64* %205, align 8, !noalias !74
  %238 = and i64 %237, 1
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %246, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1, i32 0, i32 0
  %242 = bitcast i8** %241 to i64*
  %243 = load i64, i64* %242, align 8, !noalias !74
  %244 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1, i32 0, i32 1
  %245 = load i64, i64* %244, align 8, !noalias !74
  br label %249

246:                                              ; preds = %236
  %247 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %202, i32 0, i32 1
  %248 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %247 to i64
  br label %249

249:                                              ; preds = %246, %240
  %250 = phi i64 [ %248, %246 ], [ %243, %240 ]
  %251 = phi i64 [ 4, %246 ], [ %245, %240 ]
  %252 = lshr i64 %237, 1
  %253 = icmp eq i64 %252, %251
  br i1 %253, label %259, label %254, !prof !67

254:                                              ; preds = %249
  %255 = inttoptr i64 %250 to i8*
  %256 = getelementptr inbounds i8, i8* %255, i64 %252
  store i8 -1, i8* %256, align 1
  %257 = load i64, i64* %205, align 8
  %258 = add i64 %257, 2
  store i64 %258, i64* %205, align 8
  br label %306

259:                                              ; preds = %249
  %260 = call dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJRKhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.281"* %229, i8* nonnull dereferenceable(1) @_ZN6webrtc12VideoEncoder11EncoderInfo21kMaxFramerateFractionE) #19
  br label %306

261:                                              ; preds = %230, %299
  %262 = phi %struct.vpx_codec_enc_cfg* [ %225, %230 ], [ %301, %299 ]
  %263 = phi i64 [ 0, %230 ], [ %300, %299 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #19
  %264 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %262, i64 %203, i32 40, i64 %263
  %265 = load i32, i32* %264, align 4
  %266 = udiv i32 255, %265
  %267 = uitofp i32 %266 to double
  %268 = fadd double %267, 5.000000e-01
  %269 = fcmp ole double %268, 2.550000e+02
  %270 = select i1 %269, i32 0, i32 2
  %271 = fcmp ult double %268, 0.000000e+00
  %272 = zext i1 %271 to i32
  %273 = or i32 %270, %272
  switch i32 %273, label %278 [
    i32 0, label %274
    i32 1, label %279
    i32 2, label %276
    i32 3, label %277
  ]

274:                                              ; preds = %261
  %275 = fptoui double %268 to i8
  br label %279

276:                                              ; preds = %261
  br label %279

277:                                              ; preds = %261
  call void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() #21
  unreachable

278:                                              ; preds = %261
  unreachable

279:                                              ; preds = %261, %274, %276
  %280 = phi i8 [ -1, %276 ], [ %275, %274 ], [ 0, %261 ]
  store i8 %280, i8* %6, align 1
  %281 = load i64, i64* %205, align 8, !noalias !77
  %282 = and i64 %281, 1
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %279
  %285 = load i64, i64* %232, align 8, !noalias !77
  %286 = load i64, i64* %233, align 8, !noalias !77
  br label %287

287:                                              ; preds = %279, %284
  %288 = phi i64 [ %285, %284 ], [ %235, %279 ]
  %289 = phi i64 [ %286, %284 ], [ 4, %279 ]
  %290 = lshr i64 %281, 1
  %291 = icmp eq i64 %290, %289
  br i1 %291, label %297, label %292, !prof !67

292:                                              ; preds = %287
  %293 = inttoptr i64 %288 to i8*
  %294 = getelementptr inbounds i8, i8* %293, i64 %290
  store i8 %280, i8* %294, align 1
  %295 = load i64, i64* %205, align 8
  %296 = add i64 %295, 2
  store i64 %296, i64* %205, align 8
  br label %299

297:                                              ; preds = %287
  %298 = call dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.281"* %229, i8* nonnull dereferenceable(1) %6) #19
  br label %299

299:                                              ; preds = %292, %297
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #19
  %300 = add nuw nsw i64 %263, 1
  %301 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %199, align 8
  %302 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %301, i64 %203, i32 38
  %303 = load i32, i32* %302, align 8
  %304 = zext i32 %303 to i64
  %305 = icmp ult i64 %300, %304
  br i1 %305, label %261, label %306

306:                                              ; preds = %299, %259, %254, %216, %222
  %307 = add nuw i64 %202, 1
  %308 = load i64, i64* %189, align 8
  %309 = load i64, i64* %190, align 8
  %310 = sub i64 %308, %309
  %311 = sdiv exact i64 %310, 56
  %312 = icmp ult i64 %307, %311
  br i1 %312, label %200, label %313

313:                                              ; preds = %306, %186, %181
  ret void
}

declare void @_ZN6webrtc12VideoEncoder11EncoderInfoC1Ev(%"struct.webrtc::VideoEncoder::EncoderInfo"*) unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc19RateControlSettings30LibvpxVp8TrustedRateControllerEv(%"class.webrtc::RateControlSettings"*) local_unnamed_addr #2

declare i64 @_ZNK6webrtc19EncoderInfoSettings30requested_resolution_alignmentEv(%"class.webrtc::EncoderInfoSettings"*) local_unnamed_addr #2

declare void @_ZN6webrtc12VideoEncoder15ScalingSettingsC1Eii(%"struct.webrtc::VideoEncoder::ScalingSettings"*, i32, i32) unnamed_addr #2

declare void @_ZN6webrtc12VideoEncoder15ScalingSettingsC1ENS1_4KOffE(%"struct.webrtc::VideoEncoder::ScalingSettings"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc12VideoEncoder15ScalingSettingsD1Ev(%"struct.webrtc::VideoEncoder::ScalingSettings"*) unnamed_addr #4

declare i64 @_ZNK6webrtc19RateControlSettings18LibvpxVp8MinPixelsEv(%"class.webrtc::RateControlSettings"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc16LibvpxVp8Encoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE(%"class.webrtc::LibvpxVp8Encoder"* nocapture, %"class.webrtc::EncodedImageCallback"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* %1, %"class.webrtc::EncodedImageCallback"** %3, align 8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16LibvpxVp8Encoder22MaybeUpdatePixelFormatE11vpx_img_fmt(%"class.webrtc::LibvpxVp8Encoder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19
  %5 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %4, i64 0, i32 0, i32 0
  %6 = load %struct.vpx_image*, %struct.vpx_image** %5, align 8
  %7 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %62, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #19
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 1286, i32 3, i32 0, i32 0) #19
  %12 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i64 37) #19
  %15 = icmp eq i32 %1, 265
  %16 = select i1 %15, [5 x i8]* @.str.15, [5 x i8]* @.str.16
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %16, i64 0, i64 0
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %14, i8* nonnull %17, i64 4) #19
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #19
  %19 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 19, i32 0, i32 1
  %20 = bitcast %struct.vpx_image** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.68"* %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  br i1 %24, label %62, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.webrtc::LibvpxVp8Encoder", %"class.webrtc::LibvpxVp8Encoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %25, %55
  %28 = phi i64 [ %23, %25 ], [ %58, %55 ]
  %29 = phi i64 [ 0, %25 ], [ %56, %55 ]
  %30 = inttoptr i64 %28 to %struct.vpx_image*
  %31 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %30, i64 %29
  %32 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %30, i64 %29, i32 6
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %30, i64 %29, i32 7
  %35 = load i32, i32* %34, align 4
  %36 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %26, align 8
  %37 = bitcast %"class.webrtc::LibvpxInterface"* %36 to void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)***
  %38 = load void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)**, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)** %38, i64 4
  %40 = load void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)*, void (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*)** %39, align 8
  call void %40(%"class.webrtc::LibvpxInterface"* %36, %struct.vpx_image* %31) #19
  %41 = icmp eq i64 %29, 0
  %42 = load %"class.webrtc::LibvpxInterface"*, %"class.webrtc::LibvpxInterface"** %26, align 8
  br i1 %41, label %43, label %49

43:                                               ; preds = %27
  %44 = bitcast %"class.webrtc::LibvpxInterface"* %42 to %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)***
  %45 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)**, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*** %44, align 8
  %46 = getelementptr inbounds %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)** %45, i64 3
  %47 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32, i8*)** %46, align 8
  %48 = call %struct.vpx_image* %47(%"class.webrtc::LibvpxInterface"* %42, %struct.vpx_image* %31, i32 %1, i32 %33, i32 %35, i32 1, i8* null) #19
  br label %55

49:                                               ; preds = %27
  %50 = bitcast %"class.webrtc::LibvpxInterface"* %42 to %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)***
  %51 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)**, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*** %50, align 8
  %52 = getelementptr inbounds %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)** %51, i64 2
  %53 = load %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)*, %struct.vpx_image* (%"class.webrtc::LibvpxInterface"*, %struct.vpx_image*, i32, i32, i32, i32)** %52, align 8
  %54 = call %struct.vpx_image* %53(%"class.webrtc::LibvpxInterface"* %42, %struct.vpx_image* %31, i32 %1, i32 %33, i32 %35, i32 32) #19
  br label %55

55:                                               ; preds = %49, %43
  %56 = add nuw i64 %29, 1
  %57 = load i64, i64* %20, align 8
  %58 = load i64, i64* %22, align 8
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 136
  %61 = icmp ult i64 %56, %60
  br i1 %61, label %27, label %62

62:                                               ; preds = %55, %10, %2
  ret void
}

declare i8* @_ZN6webrtc28VideoFrameBufferTypeToStringENS_16VideoFrameBuffer4TypeE(i32) local_unnamed_addr #2

declare void @_ZN6webrtc19I420BufferInterface6ToI420Ev(%"class.rtc::scoped_refptr.295"* sret, %"class.webrtc::I420BufferInterface"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN6webrtc12_GLOBAL__N_117SetRawImagePlanesEP9vpx_imagePNS_16VideoFrameBufferE(%struct.vpx_image* nocapture, %"class.webrtc::VideoFrameBuffer"*) unnamed_addr #0 {
  %3 = bitcast %"class.webrtc::VideoFrameBuffer"* %1 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %4 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %4, i64 4
  %6 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %5, align 8
  %7 = tail call i32 %6(%"class.webrtc::VideoFrameBuffer"* %1) #19
  switch i32 %7, label %82 [
    i32 1, label %8
    i32 2, label %8
    i32 5, label %47
  ]

8:                                                ; preds = %2, %2
  %9 = bitcast %"class.webrtc::VideoFrameBuffer"* %1 to %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)***
  %10 = load %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)**, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)** %10, i64 8
  %12 = load %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)*, %"class.webrtc::I420BufferInterface"* (%"class.webrtc::VideoFrameBuffer"*)** %11, align 8
  %13 = tail call %"class.webrtc::I420BufferInterface"* %12(%"class.webrtc::VideoFrameBuffer"* %1) #19
  %14 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %13, i64 0, i32 0
  %15 = bitcast %"class.webrtc::I420BufferInterface"* %13 to i8* (%"class.webrtc::PlanarYuv8Buffer"*)***
  %16 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %16, i64 16
  %18 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %17, align 8
  %19 = tail call i8* %18(%"class.webrtc::PlanarYuv8Buffer"* %14) #19
  %20 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 0
  store i8* %19, i8** %20, align 8
  %21 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %15, align 8
  %22 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %21, i64 17
  %23 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %22, align 8
  %24 = tail call i8* %23(%"class.webrtc::PlanarYuv8Buffer"* %14) #19
  %25 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 1
  store i8* %24, i8** %25, align 8
  %26 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %15, align 8
  %27 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %26, i64 18
  %28 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %27, align 8
  %29 = tail call i8* %28(%"class.webrtc::PlanarYuv8Buffer"* %14) #19
  %30 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 2
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %13, i64 0, i32 0, i32 0
  %32 = bitcast %"class.webrtc::I420BufferInterface"* %13 to i32 (%"class.webrtc::PlanarYuvBuffer"*)***
  %33 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %33, i64 13
  %35 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %34, align 8
  %36 = tail call i32 %35(%"class.webrtc::PlanarYuvBuffer"* %31) #19
  %37 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 13, i64 0
  store i32 %36, i32* %37, align 8
  %38 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %32, align 8
  %39 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %38, i64 14
  %40 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %39, align 8
  %41 = tail call i32 %40(%"class.webrtc::PlanarYuvBuffer"* %31) #19
  %42 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 13, i64 1
  store i32 %41, i32* %42, align 4
  %43 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %32, align 8
  %44 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %43, i64 15
  %45 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %44, align 8
  %46 = tail call i32 %45(%"class.webrtc::PlanarYuvBuffer"* %31) #19
  br label %79

47:                                               ; preds = %2
  %48 = tail call %"class.webrtc::NV12BufferInterface"* @_ZNK6webrtc16VideoFrameBuffer7GetNV12Ev(%"class.webrtc::VideoFrameBuffer"* %1) #19
  %49 = getelementptr inbounds %"class.webrtc::NV12BufferInterface", %"class.webrtc::NV12BufferInterface"* %48, i64 0, i32 0
  %50 = bitcast %"class.webrtc::NV12BufferInterface"* %48 to i8* (%"class.webrtc::BiplanarYuv8Buffer"*)***
  %51 = load i8* (%"class.webrtc::BiplanarYuv8Buffer"*)**, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*** %50, align 8
  %52 = getelementptr inbounds i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)** %51, i64 15
  %53 = load i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)** %52, align 8
  %54 = tail call i8* %53(%"class.webrtc::BiplanarYuv8Buffer"* %49) #19
  %55 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 0
  store i8* %54, i8** %55, align 8
  %56 = load i8* (%"class.webrtc::BiplanarYuv8Buffer"*)**, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*** %50, align 8
  %57 = getelementptr inbounds i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)** %56, i64 16
  %58 = load i8* (%"class.webrtc::BiplanarYuv8Buffer"*)*, i8* (%"class.webrtc::BiplanarYuv8Buffer"*)** %57, align 8
  %59 = tail call i8* %58(%"class.webrtc::BiplanarYuv8Buffer"* %49) #19
  %60 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 1
  store i8* %59, i8** %60, align 8
  %61 = getelementptr inbounds i8, i8* %59, i64 1
  %62 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 12, i64 2
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %"class.webrtc::NV12BufferInterface", %"class.webrtc::NV12BufferInterface"* %48, i64 0, i32 0, i32 0
  %64 = bitcast %"class.webrtc::NV12BufferInterface"* %48 to i32 (%"class.webrtc::BiplanarYuvBuffer"*)***
  %65 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)**, i32 (%"class.webrtc::BiplanarYuvBuffer"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %65, i64 13
  %67 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %66, align 8
  %68 = tail call i32 %67(%"class.webrtc::BiplanarYuvBuffer"* %63) #19
  %69 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 13, i64 0
  store i32 %68, i32* %69, align 8
  %70 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)**, i32 (%"class.webrtc::BiplanarYuvBuffer"*)*** %64, align 8
  %71 = getelementptr inbounds i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %70, i64 14
  %72 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %71, align 8
  %73 = tail call i32 %72(%"class.webrtc::BiplanarYuvBuffer"* %63) #19
  %74 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 13, i64 1
  store i32 %73, i32* %74, align 4
  %75 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)**, i32 (%"class.webrtc::BiplanarYuvBuffer"*)*** %64, align 8
  %76 = getelementptr inbounds i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %75, i64 14
  %77 = load i32 (%"class.webrtc::BiplanarYuvBuffer"*)*, i32 (%"class.webrtc::BiplanarYuvBuffer"*)** %76, align 8
  %78 = tail call i32 %77(%"class.webrtc::BiplanarYuvBuffer"* %63) #19
  br label %79

79:                                               ; preds = %8, %47
  %80 = phi i32 [ %78, %47 ], [ %46, %8 ]
  %81 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %0, i64 0, i32 13, i64 2
  store i32 %80, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %2
  ret void
}

declare void @_ZN6webrtc14FieldTrialFlagC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialFlag"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare void @_ZN6webrtc15ParseFieldTrialESt16initializer_listIPNS_28FieldTrialParameterInterfaceEENSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"**, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc14FieldTrialFlag3GetEv(%"class.webrtc::FieldTrialFlag"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc28FieldTrialParameterInterfaceD2Ev(%"class.webrtc::FieldTrialParameterInterface"*) unnamed_addr #4

declare i32 @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim(%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc14RateStatisticsD1Ev(%"class.webrtc::RateStatistics"*) unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc16Vp8EncoderConfig19TemporalLayerConfigneERKS1_(%"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"*, %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %170

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 1, i32 0, i64 0
  %10 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 1, i32 0, i64 0
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %170

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 1, i32 0, i64 1
  %16 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 1, i32 0, i64 1
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %170

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 1, i32 0, i64 2
  %22 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 1, i32 0, i64 2
  %23 = load i32, i32* %21, align 4
  %24 = load i32, i32* %22, align 4
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %170

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 1, i32 0, i64 3
  %28 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 1, i32 0, i64 3
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %28, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %170

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 1, i32 0, i64 4
  %34 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 1, i32 0, i64 4
  %35 = load i32, i32* %33, align 4
  %36 = load i32, i32* %34, align 4
  %37 = icmp eq i32 %35, %36
  br i1 %37, label %38, label %170

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 2, i32 0, i64 0
  %40 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 2, i32 0, i64 0
  %41 = load i32, i32* %39, align 4
  %42 = load i32, i32* %40, align 4
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %44, label %170

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 2, i32 0, i64 1
  %46 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 2, i32 0, i64 1
  %47 = load i32, i32* %45, align 4
  %48 = load i32, i32* %46, align 4
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %170

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 2, i32 0, i64 2
  %52 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 2, i32 0, i64 2
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  %55 = icmp eq i32 %53, %54
  br i1 %55, label %56, label %170

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 2, i32 0, i64 3
  %58 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 2, i32 0, i64 3
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %59, %60
  br i1 %61, label %62, label %170

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 2, i32 0, i64 4
  %64 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 2, i32 0, i64 4
  %65 = load i32, i32* %63, align 4
  %66 = load i32, i32* %64, align 4
  %67 = icmp eq i32 %65, %66
  br i1 %67, label %68, label %170

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 3
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %170

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 0
  %76 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 0
  %77 = load i32, i32* %75, align 4
  %78 = load i32, i32* %76, align 4
  %79 = icmp eq i32 %77, %78
  br i1 %79, label %80, label %170

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 1
  %82 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 1
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %82, align 4
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %86, label %170

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 2
  %88 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 2
  %89 = load i32, i32* %87, align 4
  %90 = load i32, i32* %88, align 4
  %91 = icmp eq i32 %89, %90
  br i1 %91, label %92, label %170

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 3
  %94 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 3
  %95 = load i32, i32* %93, align 4
  %96 = load i32, i32* %94, align 4
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %170

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 4
  %100 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 4
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %100, align 4
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %104, label %170

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 5
  %106 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 5
  %107 = load i32, i32* %105, align 4
  %108 = load i32, i32* %106, align 4
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %170

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 6
  %112 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 6
  %113 = load i32, i32* %111, align 4
  %114 = load i32, i32* %112, align 4
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %116, label %170

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 7
  %118 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 7
  %119 = load i32, i32* %117, align 4
  %120 = load i32, i32* %118, align 4
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %122, label %170

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 8
  %124 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 8
  %125 = load i32, i32* %123, align 4
  %126 = load i32, i32* %124, align 4
  %127 = icmp eq i32 %125, %126
  br i1 %127, label %128, label %170

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 9
  %130 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 9
  %131 = load i32, i32* %129, align 4
  %132 = load i32, i32* %130, align 4
  %133 = icmp eq i32 %131, %132
  br i1 %133, label %134, label %170

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 10
  %136 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 10
  %137 = load i32, i32* %135, align 4
  %138 = load i32, i32* %136, align 4
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %140, label %170

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 11
  %142 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 11
  %143 = load i32, i32* %141, align 4
  %144 = load i32, i32* %142, align 4
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %170

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 12
  %148 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 12
  %149 = load i32, i32* %147, align 4
  %150 = load i32, i32* %148, align 4
  %151 = icmp eq i32 %149, %150
  br i1 %151, label %152, label %170

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 13
  %154 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 13
  %155 = load i32, i32* %153, align 4
  %156 = load i32, i32* %154, align 4
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %158, label %170

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 14
  %160 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 14
  %161 = load i32, i32* %159, align 4
  %162 = load i32, i32* %160, align 4
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %0, i64 0, i32 4, i32 0, i64 15
  %166 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig", %"struct.webrtc::Vp8EncoderConfig::TemporalLayerConfig"* %1, i64 0, i32 4, i32 0, i64 15
  %167 = load i32, i32* %165, align 4
  %168 = load i32, i32* %166, align 4
  %169 = icmp ne i32 %167, %168
  br label %170

170:                                              ; preds = %62, %32, %38, %44, %50, %56, %8, %14, %20, %26, %164, %158, %152, %146, %140, %134, %128, %122, %116, %110, %104, %98, %92, %86, %80, %74, %68, %2
  %171 = phi i1 [ true, %68 ], [ true, %62 ], [ true, %32 ], [ true, %2 ], [ %169, %164 ], [ true, %158 ], [ true, %152 ], [ true, %146 ], [ true, %140 ], [ true, %134 ], [ true, %128 ], [ true, %122 ], [ true, %116 ], [ true, %110 ], [ true, %104 ], [ true, %98 ], [ true, %92 ], [ true, %86 ], [ true, %80 ], [ true, %74 ], [ true, %26 ], [ true, %20 ], [ true, %14 ], [ true, %8 ], [ true, %56 ], [ true, %50 ], [ true, %44 ], [ true, %38 ]
  ret i1 %171
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK6webrtc10VideoFrame5widthEv(%"class.webrtc::VideoFrame"*) local_unnamed_addr #2

declare i32 @_ZNK6webrtc10VideoFrame6heightEv(%"class.webrtc::VideoFrame"*) local_unnamed_addr #2

declare i32 @vpx_codec_control_(%struct.vpx_codec_ctx*, i32, ...) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() local_unnamed_addr #13

declare %"class.webrtc::NV12BufferInterface"* @_ZNK6webrtc16VideoFrameBuffer7GetNV12Ev(%"class.webrtc::VideoFrameBuffer"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #4

declare void @_ZN6webrtc12EncodedImageC1EOS0_(%"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"* dereferenceable(272)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endINS_14__bit_iteratorIS3_Lb0ELm0EEEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeES8_S8_(%"class.std::__1::vector.55"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = sub i64 %15, %11
  %19 = shl i64 %18, 3
  %20 = zext i32 %17 to i64
  %21 = zext i32 %13 to i64
  %22 = sub i64 %9, %21
  %23 = add i64 %22, %20
  %24 = add i64 %23, %19
  store i64 %24, i64* %8, align 8
  %25 = icmp eq i64 %9, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %3
  %27 = add i64 %9, -1
  %28 = add i64 %24, -1
  %29 = xor i64 %28, %27
  %30 = icmp ugt i64 %29, 63
  br i1 %30, label %31, label %39

31:                                               ; preds = %26, %3
  %32 = icmp ult i64 %24, 65
  %33 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = add i64 %24, -1
  %36 = lshr i64 %35, 6
  %37 = getelementptr inbounds i64, i64* %34, i64 %36
  %38 = select i1 %32, i64* %34, i64* %37
  store i64 0, i64* %38, align 8
  br label %39

39:                                               ; preds = %31, %26
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %12, align 8
  %42 = load i64, i64* %14, align 8
  %43 = load i32, i32* %16, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.55", %"class.std::__1::vector.55"* %0, i64 0, i32 0
  %45 = load i64*, i64** %44, align 8, !noalias !80
  %46 = lshr i64 %9, 6
  %47 = getelementptr inbounds i64, i64* %45, i64 %46
  %48 = trunc i64 %9 to i32
  %49 = and i32 %48, 63
  %50 = ptrtoint i64* %47 to i64
  %51 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #19
  %52 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52)
  %53 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53)
  %54 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54)
  %55 = icmp eq i32 %41, %49
  br i1 %55, label %56, label %123

56:                                               ; preds = %39
  %57 = sub i64 %42, %40
  %58 = shl i64 %57, 3
  %59 = zext i32 %43 to i64
  %60 = zext i32 %41 to i64
  %61 = sub nsw i64 %59, %60
  %62 = add i64 %61, %58
  %63 = icmp sgt i64 %62, 0
  %64 = inttoptr i64 %40 to i64*
  br i1 %63, label %65, label %118

65:                                               ; preds = %56
  %66 = inttoptr i64 %40 to i8*
  %67 = icmp eq i32 %41, 0
  br i1 %67, label %92, label %68

68:                                               ; preds = %65
  %69 = sub i32 64, %41
  %70 = zext i32 %69 to i64
  %71 = icmp slt i64 %62, %70
  %72 = select i1 %71, i64 %62, i64 %70
  %73 = sub nsw i64 %62, %72
  %74 = shl i64 -1, %60
  %75 = sub nsw i64 %70, %72
  %76 = lshr i64 -1, %75
  %77 = and i64 %76, %74
  %78 = load i64, i64* %64, align 8, !noalias !83
  %79 = and i64 %78, %77
  %80 = xor i64 %77, -1
  %81 = load i64, i64* %47, align 8, !noalias !83
  %82 = and i64 %81, %80
  %83 = or i64 %82, %79
  store i64 %83, i64* %47, align 8, !noalias !83
  %84 = add nuw nsw i64 %72, %60
  %85 = sdiv i64 %84, 64
  %86 = getelementptr inbounds i64, i64* %47, i64 %85
  %87 = ptrtoint i64* %86 to i64
  %88 = srem i64 %84, 64
  %89 = trunc i64 %88 to i32
  %90 = getelementptr inbounds i64, i64* %64, i64 1
  %91 = bitcast i64* %90 to i8*
  br label %92

92:                                               ; preds = %68, %65
  %93 = phi i64* [ %64, %65 ], [ %90, %68 ]
  %94 = phi i32 [ 0, %65 ], [ %89, %68 ]
  %95 = phi i64 [ %50, %65 ], [ %87, %68 ]
  %96 = phi i8* [ %66, %65 ], [ %91, %68 ]
  %97 = phi i64 [ %62, %65 ], [ %73, %68 ]
  %98 = sdiv i64 %97, 64
  %99 = inttoptr i64 %95 to i8*
  %100 = shl nsw i64 %98, 3
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %96, i64 %100, i1 false) #19, !noalias !83
  %101 = shl nsw i64 %98, 6
  %102 = sub i64 %97, %101
  %103 = inttoptr i64 %95 to i64*
  %104 = getelementptr inbounds i64, i64* %103, i64 %98
  %105 = ptrtoint i64* %104 to i64
  %106 = icmp sgt i64 %102, 0
  br i1 %106, label %107, label %118

107:                                              ; preds = %92
  %108 = getelementptr inbounds i64, i64* %93, i64 %98
  %109 = sub nsw i64 64, %102
  %110 = lshr i64 -1, %109
  %111 = load i64, i64* %108, align 8, !noalias !83
  %112 = and i64 %111, %110
  %113 = xor i64 %110, -1
  %114 = load i64, i64* %104, align 8, !noalias !83
  %115 = and i64 %114, %113
  %116 = or i64 %115, %112
  store i64 %116, i64* %104, align 8, !noalias !83
  %117 = trunc i64 %102 to i32
  br label %118

118:                                              ; preds = %107, %92, %56
  %119 = phi i32 [ %117, %107 ], [ %94, %92 ], [ %41, %56 ]
  %120 = phi i64 [ %105, %107 ], [ %105, %92 ], [ %50, %56 ]
  %121 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  store i64 %120, i64* %121, align 8, !alias.scope !86
  %122 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  store i32 %119, i32* %122, align 8, !alias.scope !86
  br label %130

123:                                              ; preds = %39
  %124 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  store i64 %40, i64* %124, align 8, !noalias !89
  %125 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  store i32 %41, i32* %125, align 8, !noalias !89
  %126 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  store i64 %42, i64* %126, align 8, !noalias !89
  %127 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  store i32 %43, i32* %127, align 8, !noalias !89
  %128 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  store i64 %50, i64* %128, align 8, !noalias !89
  %129 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  store i32 %49, i32* %129, align 8, !noalias !89
  call void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #19
  br label %130

130:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #19
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #19
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #19
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #19
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #19
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #19
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #19
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #19
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #20
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #19
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #19
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #20
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #19
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #19
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc12EncodedImageENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.75"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.webrtc::EncodedImage"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.webrtc::EncodedImage"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 272
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.webrtc::EncodedImage"*
  %14 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"class.webrtc::EncodedImage"* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %"class.webrtc::EncodedImage"* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"* %19) #19
  %20 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %19, i64 1
  %21 = icmp eq %"class.webrtc::EncodedImage"* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.75"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 272
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 67818912035696880
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.75"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #21
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 272
  %36 = icmp ult i64 %35, 33909456017848440
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 67818912035696880, %33 ]
  %44 = mul i64 %43, 272
  %45 = tail call i8* @_Znwm(i64 %44) #20
  %46 = bitcast i8* %45 to %"class.webrtc::EncodedImage"*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"class.webrtc::EncodedImage"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %49, i64 %28
  %51 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %49, i64 %48
  %52 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %"class.webrtc::EncodedImage"* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"* %54) #19
  %55 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %54, i64 1
  %56 = icmp eq %"class.webrtc::EncodedImage"* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %"class.webrtc::EncodedImage"* %51 to i64
  %59 = ptrtoint %"class.webrtc::EncodedImage"* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.75", %"class.std::__1::vector.75"* %0, i64 0, i32 0, i32 0
  %61 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %60, align 8
  %62 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %6, align 8
  %63 = icmp eq %"class.webrtc::EncodedImage"* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %"class.webrtc::EncodedImage"* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %"class.webrtc::EncodedImage"* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %"class.webrtc::EncodedImage"* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %67, i64 -1
  %70 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %68, i64 -1
  tail call void @_ZN6webrtc12EncodedImageC1EOS0_(%"class.webrtc::EncodedImage"* %69, %"class.webrtc::EncodedImage"* dereferenceable(272) %70) #19
  %71 = icmp eq %"class.webrtc::EncodedImage"* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %"class.webrtc::EncodedImage"*, %"class.webrtc::EncodedImage"** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"class.webrtc::EncodedImage"* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %"class.webrtc::EncodedImage"* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %"class.webrtc::EncodedImage"* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %"class.webrtc::EncodedImage"*
  %81 = icmp eq %"class.webrtc::EncodedImage"* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"class.webrtc::EncodedImage"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %83, i64 -1
  tail call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* %84) #19
  %85 = icmp eq %"class.webrtc::EncodedImage"* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #20
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

declare void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI13vpx_codec_ctxNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.136"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.vpx_codec_ctx** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.vpx_codec_ctx** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 56
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.vpx_codec_ctx*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %13, i64 %18, i32 0
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 56
  %25 = add i64 %23, 56
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #19
  %27 = ptrtoint %struct.vpx_codec_ctx* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.136"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 56
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 329406144173384850
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.136"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #21
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 56
  %42 = icmp ult i64 %41, 164703072086692425
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 329406144173384850, %39 ]
  %50 = mul i64 %49, 56
  %51 = tail call i8* @_Znwm(i64 %50) #20
  %52 = bitcast i8* %51 to %struct.vpx_codec_ctx*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.vpx_codec_ctx* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %55, i64 %34
  %57 = bitcast %struct.vpx_codec_ctx* %56 to i8*
  %58 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %55, i64 %54
  %59 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %56, i64 %1
  %60 = mul nsw i64 %1, 56
  %61 = add i64 %60, -56
  %62 = urem i64 %61, 56
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %struct.vpx_codec_ctx* %58 to i64
  %66 = ptrtoint %struct.vpx_codec_ctx* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.136", %"class.std::__1::vector.136"* %0, i64 0, i32 0, i32 0
  %68 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %struct.vpx_codec_ctx* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -56
  %73 = getelementptr inbounds %struct.vpx_codec_ctx, %struct.vpx_codec_ctx* %56, i64 %72
  %74 = ptrtoint %struct.vpx_codec_ctx* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %struct.vpx_codec_ctx* %73 to i8*
  %78 = bitcast %struct.vpx_codec_ctx* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %71, i1 false) #19
  %79 = load %struct.vpx_codec_ctx*, %struct.vpx_codec_ctx** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %struct.vpx_codec_ctx* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %struct.vpx_codec_ctx* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %struct.vpx_codec_ctx* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #20
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI17vpx_codec_enc_cfgNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.144"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.vpx_codec_enc_cfg** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.vpx_codec_enc_cfg** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 384
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.vpx_codec_enc_cfg*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 384
  %25 = add i64 %23, 384
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #19
  %27 = ptrtoint %struct.vpx_codec_enc_cfg* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.144"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 384
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 48038396025285290
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.144"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #21
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 384
  %42 = icmp ult i64 %41, 24019198012642645
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 48038396025285290, %39 ]
  %50 = mul i64 %49, 384
  %51 = tail call i8* @_Znwm(i64 %50) #20
  %52 = bitcast i8* %51 to %struct.vpx_codec_enc_cfg*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.vpx_codec_enc_cfg* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %55, i64 %34
  %57 = bitcast %struct.vpx_codec_enc_cfg* %56 to i8*
  %58 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %55, i64 %54
  %59 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %56, i64 %1
  %60 = mul nsw i64 %1, 384
  %61 = add i64 %60, -384
  %62 = urem i64 %61, 384
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 384
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %struct.vpx_codec_enc_cfg* %58 to i64
  %66 = ptrtoint %struct.vpx_codec_enc_cfg* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.144", %"class.std::__1::vector.144"* %0, i64 0, i32 0, i32 0
  %68 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %struct.vpx_codec_enc_cfg* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -384
  %73 = getelementptr inbounds %struct.vpx_codec_enc_cfg, %struct.vpx_codec_enc_cfg* %56, i64 %72
  %74 = ptrtoint %struct.vpx_codec_enc_cfg* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %struct.vpx_codec_enc_cfg* %73 to i8*
  %78 = bitcast %struct.vpx_codec_enc_cfg* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %71, i1 false) #19
  %79 = load %struct.vpx_codec_enc_cfg*, %struct.vpx_codec_enc_cfg** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %struct.vpx_codec_enc_cfg* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %struct.vpx_codec_enc_cfg* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %struct.vpx_codec_enc_cfg* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #20
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc16Vp8EncoderConfigENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.151"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.webrtc::Vp8EncoderConfig"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 144
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.webrtc::Vp8EncoderConfig"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %13, i64 %1
  %17 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %13, i64 %18, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = sub i64 0, %8
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = ptrtoint i8* %21 to i64
  %23 = urem i64 %22, 144
  %24 = add i64 %22, 144
  %25 = sub i64 %24, %23
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #19
  %26 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %88

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.151"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = sdiv exact i64 %32, 144
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 128102389400760775
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.151"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #21
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = sdiv exact i64 %39, 144
  %41 = icmp ult i64 %40, 64051194700380387
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = shl nsw i64 %40, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %38, %42
  %48 = phi i64 [ %45, %42 ], [ 128102389400760775, %38 ]
  %49 = mul i64 %48, 144
  %50 = tail call i8* @_Znwm(i64 %49) #20
  %51 = bitcast i8* %50 to %"struct.webrtc::Vp8EncoderConfig"*
  br label %52

52:                                               ; preds = %47, %42
  %53 = phi i64 [ %48, %47 ], [ 0, %42 ]
  %54 = phi %"struct.webrtc::Vp8EncoderConfig"* [ %51, %47 ], [ null, %42 ]
  %55 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %54, i64 %33
  %56 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %55 to i64
  %57 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %54, i64 %53
  %58 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %55, i64 %1
  %59 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = add i64 %1, -1
  %61 = getelementptr %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %55, i64 %60, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = sub i64 0, %56
  %63 = getelementptr i8, i8* %61, i64 %62
  %64 = ptrtoint i8* %63 to i64
  %65 = urem i64 %64, 144
  %66 = add i64 %64, 144
  %67 = sub i64 %66, %65
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %67, i1 false) #19
  %68 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %57 to i64
  %69 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %58 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.151", %"class.std::__1::vector.151"* %0, i64 0, i32 0, i32 0
  %71 = load %"struct.webrtc::Vp8EncoderConfig"*, %"struct.webrtc::Vp8EncoderConfig"** %70, align 8
  %72 = load i64, i64* %7, align 8
  %73 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %71 to i64
  %74 = sub i64 %72, %73
  %75 = sdiv exact i64 %74, -144
  %76 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %55, i64 %75
  %77 = ptrtoint %"struct.webrtc::Vp8EncoderConfig"* %76 to i64
  %78 = icmp sgt i64 %74, 0
  br i1 %78, label %79, label %83

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 %74, i1 false) #19
  %82 = load %"struct.webrtc::Vp8EncoderConfig"*, %"struct.webrtc::Vp8EncoderConfig"** %70, align 8
  br label %83

83:                                               ; preds = %52, %79
  %84 = phi %"struct.webrtc::Vp8EncoderConfig"* [ %71, %52 ], [ %82, %79 ]
  store i64 %77, i64* %30, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %85 = icmp eq %"struct.webrtc::Vp8EncoderConfig"* %84, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.webrtc::Vp8EncoderConfig", %"struct.webrtc::Vp8EncoderConfig"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %87) #20
  br label %88

88:                                               ; preds = %86, %83, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI12vpx_rationalNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.169"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.vpx_rational** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.vpx_rational** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.vpx_rational*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.vpx_rational, %struct.vpx_rational* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #19
  %26 = ptrtoint %struct.vpx_rational* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.169"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.169"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #21
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #21
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #20
  %54 = bitcast i8* %53 to %struct.vpx_rational*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %struct.vpx_rational* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %57, i64 %33
  %59 = bitcast %struct.vpx_rational* %58 to i8*
  %60 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %57, i64 %56
  %61 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 4 %59, i8 0, i64 %62, i1 false)
  %63 = ptrtoint %struct.vpx_rational* %60 to i64
  %64 = ptrtoint %struct.vpx_rational* %61 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.169", %"class.std::__1::vector.169"* %0, i64 0, i32 0, i32 0
  %66 = load %struct.vpx_rational*, %struct.vpx_rational** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %struct.vpx_rational* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %struct.vpx_rational, %struct.vpx_rational* %58, i64 %71
  %73 = ptrtoint %struct.vpx_rational* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %struct.vpx_rational* %72 to i8*
  %77 = bitcast %struct.vpx_rational* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #19
  %78 = load %struct.vpx_rational*, %struct.vpx_rational** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %struct.vpx_rational* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %struct.vpx_rational* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %struct.vpx_rational* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #20
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI9vpx_imageNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.68"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %struct.vpx_image** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %struct.vpx_image** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 136
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %struct.vpx_image*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %struct.vpx_image, %struct.vpx_image* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 136
  %25 = add i64 %23, 136
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #19
  %27 = ptrtoint %struct.vpx_image* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.68"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 136
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 135637824071393761
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.68"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #21
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 136
  %42 = icmp ult i64 %41, 67818912035696880
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 135637824071393761, %39 ]
  %50 = mul i64 %49, 136
  %51 = tail call i8* @_Znwm(i64 %50) #20
  %52 = bitcast i8* %51 to %struct.vpx_image*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %struct.vpx_image* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %55, i64 %34
  %57 = bitcast %struct.vpx_image* %56 to i8*
  %58 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %55, i64 %54
  %59 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %56, i64 %1
  %60 = mul nsw i64 %1, 136
  %61 = add i64 %60, -136
  %62 = urem i64 %61, 136
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 136
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %struct.vpx_image* %58 to i64
  %66 = ptrtoint %struct.vpx_image* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.68", %"class.std::__1::vector.68"* %0, i64 0, i32 0, i32 0
  %68 = load %struct.vpx_image*, %struct.vpx_image** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %struct.vpx_image* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -136
  %73 = getelementptr inbounds %struct.vpx_image, %struct.vpx_image* %56, i64 %72
  %74 = ptrtoint %struct.vpx_image* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %struct.vpx_image* %73 to i8*
  %78 = bitcast %struct.vpx_image* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %71, i1 false) #19
  %79 = load %struct.vpx_image*, %struct.vpx_image** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %struct.vpx_image* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %struct.vpx_image* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %struct.vpx_image* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #20
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.61"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #19
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.61"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #21
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #21
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #20
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #19
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #19
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #20
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.maxnum.f64(double, double) #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE6AssignINS0_20IteratorValueAdapterIS6_PKS3_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.257"*, %"class.webrtc::RenderResolution"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !90
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.webrtc::RenderResolution"** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !90
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !90
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 4, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 2305843009213693951
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #21
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 3
  %30 = tail call i8* @_Znwm(i64 %29) #20
  %31 = bitcast i8* %30 to %"class.webrtc::RenderResolution"*
  %32 = ptrtoint i8* %30 to i64
  br label %211

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to %"class.webrtc::RenderResolution"*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, %"class.webrtc::RenderResolution"* %37, %"class.webrtc::RenderResolution"* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %208, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 4
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %40
  %46 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %40
  %47 = bitcast %"class.webrtc::RenderResolution"* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt %"class.webrtc::RenderResolution"* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775804
  %53 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %52
  %54 = add nsw i64 %52, -4
  %55 = lshr exact i64 %54, 2
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 12
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %62
  %65 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %62
  %66 = bitcast %"class.webrtc::RenderResolution"* %64 to <2 x i64>*
  %67 = load <2 x i64>, <2 x i64>* %66, align 4, !alias.scope !93
  %68 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %64, i64 2
  %69 = bitcast %"class.webrtc::RenderResolution"* %68 to <2 x i64>*
  %70 = load <2 x i64>, <2 x i64>* %69, align 4, !alias.scope !93
  %71 = bitcast %"class.webrtc::RenderResolution"* %65 to <2 x i64>*
  store <2 x i64> %67, <2 x i64>* %71, align 4, !alias.scope !96, !noalias !93
  %72 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %65, i64 2
  %73 = bitcast %"class.webrtc::RenderResolution"* %72 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %73, align 4, !alias.scope !96, !noalias !93
  %74 = or i64 %62, 4
  %75 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %74
  %76 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %74
  %77 = bitcast %"class.webrtc::RenderResolution"* %75 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 4, !alias.scope !93
  %79 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %75, i64 2
  %80 = bitcast %"class.webrtc::RenderResolution"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 4, !alias.scope !93
  %82 = bitcast %"class.webrtc::RenderResolution"* %76 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %82, align 4, !alias.scope !96, !noalias !93
  %83 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %76, i64 2
  %84 = bitcast %"class.webrtc::RenderResolution"* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 4, !alias.scope !96, !noalias !93
  %85 = or i64 %62, 8
  %86 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %85
  %87 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %85
  %88 = bitcast %"class.webrtc::RenderResolution"* %86 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 4, !alias.scope !93
  %90 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %86, i64 2
  %91 = bitcast %"class.webrtc::RenderResolution"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 4, !alias.scope !93
  %93 = bitcast %"class.webrtc::RenderResolution"* %87 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 4, !alias.scope !96, !noalias !93
  %94 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %87, i64 2
  %95 = bitcast %"class.webrtc::RenderResolution"* %94 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 4, !alias.scope !96, !noalias !93
  %96 = or i64 %62, 12
  %97 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %96
  %98 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %96
  %99 = bitcast %"class.webrtc::RenderResolution"* %97 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 4, !alias.scope !93
  %101 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %97, i64 2
  %102 = bitcast %"class.webrtc::RenderResolution"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4, !alias.scope !93
  %104 = bitcast %"class.webrtc::RenderResolution"* %98 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 4, !alias.scope !96, !noalias !93
  %105 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %98, i64 2
  %106 = bitcast %"class.webrtc::RenderResolution"* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 4, !alias.scope !96, !noalias !93
  %107 = add i64 %62, 16
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !98

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %1, i64 %114
  %117 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %114
  %118 = bitcast %"class.webrtc::RenderResolution"* %116 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 4, !alias.scope !93
  %120 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %116, i64 2
  %121 = bitcast %"class.webrtc::RenderResolution"* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 4, !alias.scope !93
  %123 = bitcast %"class.webrtc::RenderResolution"* %117 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 4, !alias.scope !96, !noalias !93
  %124 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %117, i64 2
  %125 = bitcast %"class.webrtc::RenderResolution"* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 4, !alias.scope !96, !noalias !93
  %126 = add i64 %114, 4
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !99

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %208, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi %"class.webrtc::RenderResolution"* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = sub nsw i64 %40, %133
  %135 = xor i64 %133, -1
  %136 = add nsw i64 %40, %135
  %137 = and i64 %134, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %151, label %139

139:                                              ; preds = %131, %139
  %140 = phi %"class.webrtc::RenderResolution"* [ %147, %139 ], [ %132, %131 ]
  %141 = phi i64 [ %148, %139 ], [ %133, %131 ]
  %142 = phi i64 [ %149, %139 ], [ %137, %131 ]
  %143 = bitcast %"class.webrtc::RenderResolution"* %140 to i64*
  %144 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %141
  %145 = bitcast %"class.webrtc::RenderResolution"* %144 to i64*
  %146 = load i64, i64* %143, align 4
  store i64 %146, i64* %145, align 4
  %147 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %140, i64 1
  %148 = add nuw i64 %141, 1
  %149 = add i64 %142, -1
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %139, !llvm.loop !100

151:                                              ; preds = %139, %131
  %152 = phi %"class.webrtc::RenderResolution"* [ undef, %131 ], [ %147, %139 ]
  %153 = phi %"class.webrtc::RenderResolution"* [ %132, %131 ], [ %147, %139 ]
  %154 = phi i64 [ %133, %131 ], [ %148, %139 ]
  %155 = icmp ult i64 %136, 7
  br i1 %155, label %208, label %156

156:                                              ; preds = %151, %156
  %157 = phi %"class.webrtc::RenderResolution"* [ %205, %156 ], [ %153, %151 ]
  %158 = phi i64 [ %206, %156 ], [ %154, %151 ]
  %159 = bitcast %"class.webrtc::RenderResolution"* %157 to i64*
  %160 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %158
  %161 = bitcast %"class.webrtc::RenderResolution"* %160 to i64*
  %162 = load i64, i64* %159, align 4
  store i64 %162, i64* %161, align 4
  %163 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 1
  %164 = add nuw i64 %158, 1
  %165 = bitcast %"class.webrtc::RenderResolution"* %163 to i64*
  %166 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %164
  %167 = bitcast %"class.webrtc::RenderResolution"* %166 to i64*
  %168 = load i64, i64* %165, align 4
  store i64 %168, i64* %167, align 4
  %169 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 2
  %170 = add nuw i64 %158, 2
  %171 = bitcast %"class.webrtc::RenderResolution"* %169 to i64*
  %172 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %170
  %173 = bitcast %"class.webrtc::RenderResolution"* %172 to i64*
  %174 = load i64, i64* %171, align 4
  store i64 %174, i64* %173, align 4
  %175 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 3
  %176 = add nuw i64 %158, 3
  %177 = bitcast %"class.webrtc::RenderResolution"* %175 to i64*
  %178 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %176
  %179 = bitcast %"class.webrtc::RenderResolution"* %178 to i64*
  %180 = load i64, i64* %177, align 4
  store i64 %180, i64* %179, align 4
  %181 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 4
  %182 = add nuw i64 %158, 4
  %183 = bitcast %"class.webrtc::RenderResolution"* %181 to i64*
  %184 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %182
  %185 = bitcast %"class.webrtc::RenderResolution"* %184 to i64*
  %186 = load i64, i64* %183, align 4
  store i64 %186, i64* %185, align 4
  %187 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 5
  %188 = add nuw i64 %158, 5
  %189 = bitcast %"class.webrtc::RenderResolution"* %187 to i64*
  %190 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %188
  %191 = bitcast %"class.webrtc::RenderResolution"* %190 to i64*
  %192 = load i64, i64* %189, align 4
  store i64 %192, i64* %191, align 4
  %193 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 6
  %194 = add nuw i64 %158, 6
  %195 = bitcast %"class.webrtc::RenderResolution"* %193 to i64*
  %196 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %194
  %197 = bitcast %"class.webrtc::RenderResolution"* %196 to i64*
  %198 = load i64, i64* %195, align 4
  store i64 %198, i64* %197, align 4
  %199 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 7
  %200 = add nuw i64 %158, 7
  %201 = bitcast %"class.webrtc::RenderResolution"* %199 to i64*
  %202 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %35, i64 %200
  %203 = bitcast %"class.webrtc::RenderResolution"* %202 to i64*
  %204 = load i64, i64* %201, align 4
  store i64 %204, i64* %203, align 4
  %205 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %157, i64 8
  %206 = add nuw i64 %158, 8
  %207 = icmp eq i64 %206, %40
  br i1 %207, label %208, label %156, !llvm.loop !101

208:                                              ; preds = %151, %156, %129, %33
  %209 = phi %"class.webrtc::RenderResolution"* [ %1, %33 ], [ %53, %129 ], [ %152, %151 ], [ %205, %156 ]
  %210 = icmp eq i64 %38, 0
  br i1 %210, label %382, label %211

211:                                              ; preds = %28, %208
  %212 = phi %"class.webrtc::RenderResolution"* [ %1, %28 ], [ %209, %208 ]
  %213 = phi i64 [ %2, %28 ], [ %38, %208 ]
  %214 = phi %"class.webrtc::RenderResolution"* [ %31, %28 ], [ %39, %208 ]
  %215 = phi i64 [ %25, %28 ], [ 0, %208 ]
  %216 = phi i64 [ %32, %28 ], [ 0, %208 ]
  %217 = icmp ult i64 %213, 4
  br i1 %217, label %304, label %218

218:                                              ; preds = %211
  %219 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %213
  %220 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %213
  %221 = icmp ult %"class.webrtc::RenderResolution"* %214, %220
  %222 = icmp ult %"class.webrtc::RenderResolution"* %212, %219
  %223 = and i1 %221, %222
  br i1 %223, label %304, label %224

224:                                              ; preds = %218
  %225 = and i64 %213, -4
  %226 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %225
  %227 = add i64 %225, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %224
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %235
  %238 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %235
  %239 = bitcast %"class.webrtc::RenderResolution"* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 4, !alias.scope !102
  %241 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %237, i64 2
  %242 = bitcast %"class.webrtc::RenderResolution"* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 4, !alias.scope !102
  %244 = bitcast %"class.webrtc::RenderResolution"* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 4, !alias.scope !105, !noalias !102
  %245 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %238, i64 2
  %246 = bitcast %"class.webrtc::RenderResolution"* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 4, !alias.scope !105, !noalias !102
  %247 = or i64 %235, 4
  %248 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %247
  %249 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %247
  %250 = bitcast %"class.webrtc::RenderResolution"* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 4, !alias.scope !102
  %252 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %248, i64 2
  %253 = bitcast %"class.webrtc::RenderResolution"* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 4, !alias.scope !102
  %255 = bitcast %"class.webrtc::RenderResolution"* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 4, !alias.scope !105, !noalias !102
  %256 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %249, i64 2
  %257 = bitcast %"class.webrtc::RenderResolution"* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 4, !alias.scope !105, !noalias !102
  %258 = or i64 %235, 8
  %259 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %258
  %260 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %258
  %261 = bitcast %"class.webrtc::RenderResolution"* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 4, !alias.scope !102
  %263 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %259, i64 2
  %264 = bitcast %"class.webrtc::RenderResolution"* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 4, !alias.scope !102
  %266 = bitcast %"class.webrtc::RenderResolution"* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 4, !alias.scope !105, !noalias !102
  %267 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %260, i64 2
  %268 = bitcast %"class.webrtc::RenderResolution"* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 4, !alias.scope !105, !noalias !102
  %269 = or i64 %235, 12
  %270 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %269
  %271 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %269
  %272 = bitcast %"class.webrtc::RenderResolution"* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 4, !alias.scope !102
  %274 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %270, i64 2
  %275 = bitcast %"class.webrtc::RenderResolution"* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 4, !alias.scope !102
  %277 = bitcast %"class.webrtc::RenderResolution"* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 4, !alias.scope !105, !noalias !102
  %278 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %271, i64 2
  %279 = bitcast %"class.webrtc::RenderResolution"* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 4, !alias.scope !105, !noalias !102
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !107

283:                                              ; preds = %234, %224
  %284 = phi i64 [ 0, %224 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %212, i64 %287
  %290 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %287
  %291 = bitcast %"class.webrtc::RenderResolution"* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 4, !alias.scope !102
  %293 = getelementptr %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %289, i64 2
  %294 = bitcast %"class.webrtc::RenderResolution"* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 4, !alias.scope !102
  %296 = bitcast %"class.webrtc::RenderResolution"* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 4, !alias.scope !105, !noalias !102
  %297 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %290, i64 2
  %298 = bitcast %"class.webrtc::RenderResolution"* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 4, !alias.scope !105, !noalias !102
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !108

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %213, %225
  br i1 %303, label %380, label %304

304:                                              ; preds = %302, %218, %211
  %305 = phi %"class.webrtc::RenderResolution"* [ %212, %218 ], [ %212, %211 ], [ %226, %302 ]
  %306 = phi i64 [ 0, %218 ], [ 0, %211 ], [ %225, %302 ]
  %307 = sub i64 %213, %306
  %308 = xor i64 %306, -1
  %309 = add i64 %213, %308
  %310 = and i64 %307, 7
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %324, label %312

312:                                              ; preds = %304, %312
  %313 = phi %"class.webrtc::RenderResolution"* [ %320, %312 ], [ %305, %304 ]
  %314 = phi i64 [ %321, %312 ], [ %306, %304 ]
  %315 = phi i64 [ %322, %312 ], [ %310, %304 ]
  %316 = bitcast %"class.webrtc::RenderResolution"* %313 to i64*
  %317 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %314
  %318 = bitcast %"class.webrtc::RenderResolution"* %317 to i64*
  %319 = load i64, i64* %316, align 4
  store i64 %319, i64* %318, align 4
  %320 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %313, i64 1
  %321 = add nuw i64 %314, 1
  %322 = add i64 %315, -1
  %323 = icmp eq i64 %322, 0
  br i1 %323, label %324, label %312, !llvm.loop !109

324:                                              ; preds = %312, %304
  %325 = phi %"class.webrtc::RenderResolution"* [ %305, %304 ], [ %320, %312 ]
  %326 = phi i64 [ %306, %304 ], [ %321, %312 ]
  %327 = icmp ult i64 %309, 7
  br i1 %327, label %380, label %328

328:                                              ; preds = %324, %328
  %329 = phi %"class.webrtc::RenderResolution"* [ %377, %328 ], [ %325, %324 ]
  %330 = phi i64 [ %378, %328 ], [ %326, %324 ]
  %331 = bitcast %"class.webrtc::RenderResolution"* %329 to i64*
  %332 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %330
  %333 = bitcast %"class.webrtc::RenderResolution"* %332 to i64*
  %334 = load i64, i64* %331, align 4
  store i64 %334, i64* %333, align 4
  %335 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 1
  %336 = add nuw i64 %330, 1
  %337 = bitcast %"class.webrtc::RenderResolution"* %335 to i64*
  %338 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %336
  %339 = bitcast %"class.webrtc::RenderResolution"* %338 to i64*
  %340 = load i64, i64* %337, align 4
  store i64 %340, i64* %339, align 4
  %341 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 2
  %342 = add nuw i64 %330, 2
  %343 = bitcast %"class.webrtc::RenderResolution"* %341 to i64*
  %344 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %342
  %345 = bitcast %"class.webrtc::RenderResolution"* %344 to i64*
  %346 = load i64, i64* %343, align 4
  store i64 %346, i64* %345, align 4
  %347 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 3
  %348 = add nuw i64 %330, 3
  %349 = bitcast %"class.webrtc::RenderResolution"* %347 to i64*
  %350 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %348
  %351 = bitcast %"class.webrtc::RenderResolution"* %350 to i64*
  %352 = load i64, i64* %349, align 4
  store i64 %352, i64* %351, align 4
  %353 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 4
  %354 = add nuw i64 %330, 4
  %355 = bitcast %"class.webrtc::RenderResolution"* %353 to i64*
  %356 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %354
  %357 = bitcast %"class.webrtc::RenderResolution"* %356 to i64*
  %358 = load i64, i64* %355, align 4
  store i64 %358, i64* %357, align 4
  %359 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 5
  %360 = add nuw i64 %330, 5
  %361 = bitcast %"class.webrtc::RenderResolution"* %359 to i64*
  %362 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %360
  %363 = bitcast %"class.webrtc::RenderResolution"* %362 to i64*
  %364 = load i64, i64* %361, align 4
  store i64 %364, i64* %363, align 4
  %365 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 6
  %366 = add nuw i64 %330, 6
  %367 = bitcast %"class.webrtc::RenderResolution"* %365 to i64*
  %368 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %366
  %369 = bitcast %"class.webrtc::RenderResolution"* %368 to i64*
  %370 = load i64, i64* %367, align 4
  store i64 %370, i64* %369, align 4
  %371 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 7
  %372 = add nuw i64 %330, 7
  %373 = bitcast %"class.webrtc::RenderResolution"* %371 to i64*
  %374 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %214, i64 %372
  %375 = bitcast %"class.webrtc::RenderResolution"* %374 to i64*
  %376 = load i64, i64* %373, align 4
  store i64 %376, i64* %375, align 4
  %377 = getelementptr inbounds %"class.webrtc::RenderResolution", %"class.webrtc::RenderResolution"* %329, i64 8
  %378 = add nuw i64 %330, 8
  %379 = icmp eq i64 %378, %213
  br i1 %379, label %380, label %328, !llvm.loop !110

380:                                              ; preds = %324, %328, %302
  %381 = icmp eq i64 %216, 0
  br i1 %381, label %382, label %384

382:                                              ; preds = %208, %380
  %383 = load i64, i64* %4, align 8
  br label %399

384:                                              ; preds = %380
  %385 = load i64, i64* %4, align 8
  %386 = and i64 %385, 1
  %387 = icmp eq i64 %386, 0
  br i1 %387, label %393, label %388

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1, i32 0, i32 0
  %390 = bitcast %"class.webrtc::RenderResolution"** %389 to i8**
  %391 = load i8*, i8** %390, align 8
  tail call void @_ZdlPv(i8* %391) #20
  %392 = load i64, i64* %4, align 8
  br label %393

393:                                              ; preds = %384, %388
  %394 = phi i64 [ %385, %384 ], [ %392, %388 ]
  %395 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1, i32 0, i32 0
  %396 = bitcast %"class.webrtc::RenderResolution"** %395 to i64*
  store i64 %216, i64* %396, align 8
  %397 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.257", %"class.absl::inlined_vector_internal::Storage.257"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %215, i64* %397, align 8
  %398 = or i64 %394, 1
  store i64 %398, i64* %4, align 8
  br label %399

399:                                              ; preds = %393, %382
  %400 = phi i64 [ %383, %382 ], [ %398, %393 ]
  %401 = shl i64 %2, 1
  %402 = and i64 %400, 1
  %403 = or i64 %402, %401
  store i64 %403, i64* %4, align 8
  ret void
}

declare void @_ZN6webrtc11EventTracer13AddTraceEventEcPKhPKcyiPS4_S2_PKyh(i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc12VideoEncoder23ResolutionBitrateLimitsENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.48"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %2 to i64
  %5 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 4
  %8 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.48"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 4
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 4
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %1, i64 %22
  %25 = select i1 %23, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %24, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %2
  %26 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 4
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #19
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 4
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #19
  %42 = inttoptr i64 %35 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  %43 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %42, i64 %39
  %44 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %16, i64 %28
  store %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %48, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #20
  %55 = bitcast %"class.std::__1::vector.48"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #19
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 1152921504606846975
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #21
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 4
  %63 = icmp ult i64 %62, 576460752303423487
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 3
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 1152921504606846975
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.48"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #21
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 1152921504606846975, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 4
  %74 = tail call i8* @_Znwm(i64 %73) #20
  %75 = bitcast i8* %74 to %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*
  %76 = getelementptr inbounds %"class.std::__1::vector.48", %"class.std::__1::vector.48"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.48"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %75, i64 %72
  store %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %79, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %8, align 8
  %80 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 4
  %85 = bitcast %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #19
  %86 = getelementptr inbounds %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits", %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %75, i64 %84
  %87 = ptrtoint %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl23inlined_vector_internal7StorageIN6webrtc16VideoFrameBuffer4TypeELm5ENSt3__19allocatorIS4_EEE6AssignINS0_20IteratorValueAdapterIS7_PKS4_EEEEvT_m(%"class.absl::inlined_vector_internal::Storage.288"*, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !111
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !111
  %12 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load i64, i64* %12, align 8, !noalias !111
  br label %17

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %8, %14
  %18 = phi i64 [ %16, %14 ], [ %11, %8 ]
  %19 = phi i64 [ 5, %14 ], [ %13, %8 ]
  %20 = lshr i64 %5, 1
  %21 = icmp ult i64 %19, %2
  br i1 %21, label %22, label %33

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = icmp ult i64 %23, %2
  %25 = select i1 %24, i64 %2, i64 %23
  %26 = icmp ugt i64 %25, 4611686018427387903
  br i1 %26, label %27, label %28

27:                                               ; preds = %22
  tail call void @abort() #21
  unreachable

28:                                               ; preds = %22
  %29 = shl i64 %25, 2
  %30 = tail call i8* @_Znwm(i64 %29) #20
  %31 = bitcast i8* %30 to i32*
  %32 = ptrtoint i8* %30 to i64
  br label %176

33:                                               ; preds = %17
  %34 = icmp ult i64 %20, %2
  %35 = inttoptr i64 %18 to i32*
  %36 = inttoptr i64 %18 to i8*
  %37 = getelementptr inbounds i32, i32* %35, i64 %20
  %38 = call i64 @llvm.usub.sat.i64(i64 %2, i64 %20)
  %39 = select i1 %34, i32* %37, i32* null
  %40 = select i1 %34, i64 %20, i64 %2
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %173, label %42

42:                                               ; preds = %33
  %43 = icmp ult i64 %40, 8
  br i1 %43, label %131, label %44

44:                                               ; preds = %42
  %45 = getelementptr i32, i32* %35, i64 %40
  %46 = getelementptr i32, i32* %1, i64 %40
  %47 = bitcast i32* %46 to i8*
  %48 = icmp ult i8* %36, %47
  %49 = icmp ugt i32* %45, %1
  %50 = and i1 %48, %49
  br i1 %50, label %131, label %51

51:                                               ; preds = %44
  %52 = and i64 %40, 9223372036854775800
  %53 = getelementptr i32, i32* %1, i64 %52
  %54 = add nsw i64 %52, -8
  %55 = lshr exact i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 3
  %58 = icmp ult i64 %54, 24
  br i1 %58, label %110, label %59

59:                                               ; preds = %51
  %60 = sub nsw i64 %56, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i64 [ 0, %59 ], [ %107, %61 ]
  %63 = phi i64 [ %60, %59 ], [ %108, %61 ]
  %64 = getelementptr i32, i32* %1, i64 %62
  %65 = getelementptr inbounds i32, i32* %35, i64 %62
  %66 = bitcast i32* %64 to <4 x i32>*
  %67 = load <4 x i32>, <4 x i32>* %66, align 4, !alias.scope !114
  %68 = getelementptr i32, i32* %64, i64 4
  %69 = bitcast i32* %68 to <4 x i32>*
  %70 = load <4 x i32>, <4 x i32>* %69, align 4, !alias.scope !114
  %71 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> %67, <4 x i32>* %71, align 4, !alias.scope !117, !noalias !114
  %72 = getelementptr inbounds i32, i32* %65, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %70, <4 x i32>* %73, align 4, !alias.scope !117, !noalias !114
  %74 = or i64 %62, 8
  %75 = getelementptr i32, i32* %1, i64 %74
  %76 = getelementptr inbounds i32, i32* %35, i64 %74
  %77 = bitcast i32* %75 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !114
  %79 = getelementptr i32, i32* %75, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4, !alias.scope !114
  %82 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %82, align 4, !alias.scope !117, !noalias !114
  %83 = getelementptr inbounds i32, i32* %76, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %81, <4 x i32>* %84, align 4, !alias.scope !117, !noalias !114
  %85 = or i64 %62, 16
  %86 = getelementptr i32, i32* %1, i64 %85
  %87 = getelementptr inbounds i32, i32* %35, i64 %85
  %88 = bitcast i32* %86 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !114
  %90 = getelementptr i32, i32* %86, i64 4
  %91 = bitcast i32* %90 to <4 x i32>*
  %92 = load <4 x i32>, <4 x i32>* %91, align 4, !alias.scope !114
  %93 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %93, align 4, !alias.scope !117, !noalias !114
  %94 = getelementptr inbounds i32, i32* %87, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !117, !noalias !114
  %96 = or i64 %62, 24
  %97 = getelementptr i32, i32* %1, i64 %96
  %98 = getelementptr inbounds i32, i32* %35, i64 %96
  %99 = bitcast i32* %97 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !114
  %101 = getelementptr i32, i32* %97, i64 4
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !114
  %104 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %104, align 4, !alias.scope !117, !noalias !114
  %105 = getelementptr inbounds i32, i32* %98, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %103, <4 x i32>* %106, align 4, !alias.scope !117, !noalias !114
  %107 = add i64 %62, 32
  %108 = add i64 %63, -4
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %61, !llvm.loop !119

110:                                              ; preds = %61, %51
  %111 = phi i64 [ 0, %51 ], [ %107, %61 ]
  %112 = icmp eq i64 %57, 0
  br i1 %112, label %129, label %113

113:                                              ; preds = %110, %113
  %114 = phi i64 [ %126, %113 ], [ %111, %110 ]
  %115 = phi i64 [ %127, %113 ], [ %57, %110 ]
  %116 = getelementptr i32, i32* %1, i64 %114
  %117 = getelementptr inbounds i32, i32* %35, i64 %114
  %118 = bitcast i32* %116 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !114
  %120 = getelementptr i32, i32* %116, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !114
  %123 = bitcast i32* %117 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !117, !noalias !114
  %124 = getelementptr inbounds i32, i32* %117, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !117, !noalias !114
  %126 = add i64 %114, 8
  %127 = add i64 %115, -1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %113, !llvm.loop !120

129:                                              ; preds = %113, %110
  %130 = icmp eq i64 %40, %52
  br i1 %130, label %173, label %131

131:                                              ; preds = %129, %44, %42
  %132 = phi i32* [ %1, %44 ], [ %1, %42 ], [ %53, %129 ]
  %133 = phi i64 [ 0, %44 ], [ 0, %42 ], [ %52, %129 ]
  %134 = xor i64 %133, -1
  %135 = add nsw i64 %40, %134
  %136 = and i64 %40, 3
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %138
  %139 = phi i32* [ %144, %138 ], [ %132, %131 ]
  %140 = phi i64 [ %145, %138 ], [ %133, %131 ]
  %141 = phi i64 [ %146, %138 ], [ %136, %131 ]
  %142 = getelementptr inbounds i32, i32* %35, i64 %140
  %143 = load i32, i32* %139, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds i32, i32* %139, i64 1
  %145 = add nuw i64 %140, 1
  %146 = add i64 %141, -1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %138, !llvm.loop !121

148:                                              ; preds = %138, %131
  %149 = phi i32* [ undef, %131 ], [ %144, %138 ]
  %150 = phi i32* [ %132, %131 ], [ %144, %138 ]
  %151 = phi i64 [ %133, %131 ], [ %145, %138 ]
  %152 = icmp ult i64 %135, 3
  br i1 %152, label %173, label %153

153:                                              ; preds = %148, %153
  %154 = phi i32* [ %170, %153 ], [ %150, %148 ]
  %155 = phi i64 [ %171, %153 ], [ %151, %148 ]
  %156 = getelementptr inbounds i32, i32* %35, i64 %155
  %157 = load i32, i32* %154, align 4
  store i32 %157, i32* %156, align 4
  %158 = getelementptr inbounds i32, i32* %154, i64 1
  %159 = add nuw i64 %155, 1
  %160 = getelementptr inbounds i32, i32* %35, i64 %159
  %161 = load i32, i32* %158, align 4
  store i32 %161, i32* %160, align 4
  %162 = getelementptr inbounds i32, i32* %154, i64 2
  %163 = add nuw i64 %155, 2
  %164 = getelementptr inbounds i32, i32* %35, i64 %163
  %165 = load i32, i32* %162, align 4
  store i32 %165, i32* %164, align 4
  %166 = getelementptr inbounds i32, i32* %154, i64 3
  %167 = add nuw i64 %155, 3
  %168 = getelementptr inbounds i32, i32* %35, i64 %167
  %169 = load i32, i32* %166, align 4
  store i32 %169, i32* %168, align 4
  %170 = getelementptr inbounds i32, i32* %154, i64 4
  %171 = add nuw i64 %155, 4
  %172 = icmp eq i64 %171, %40
  br i1 %172, label %173, label %153, !llvm.loop !122

173:                                              ; preds = %148, %153, %129, %33
  %174 = phi i32* [ %1, %33 ], [ %53, %129 ], [ %149, %148 ], [ %170, %153 ]
  %175 = icmp eq i64 %38, 0
  br i1 %175, label %312, label %176

176:                                              ; preds = %28, %173
  %177 = phi i32* [ %1, %28 ], [ %174, %173 ]
  %178 = phi i64 [ %2, %28 ], [ %38, %173 ]
  %179 = phi i32* [ %31, %28 ], [ %39, %173 ]
  %180 = phi i64 [ %25, %28 ], [ 0, %173 ]
  %181 = phi i64 [ %32, %28 ], [ 0, %173 ]
  %182 = icmp ult i64 %178, 8
  br i1 %182, label %269, label %183

183:                                              ; preds = %176
  %184 = getelementptr i32, i32* %179, i64 %178
  %185 = getelementptr i32, i32* %177, i64 %178
  %186 = icmp ult i32* %179, %185
  %187 = icmp ult i32* %177, %184
  %188 = and i1 %186, %187
  br i1 %188, label %269, label %189

189:                                              ; preds = %183
  %190 = and i64 %178, -8
  %191 = getelementptr i32, i32* %177, i64 %190
  %192 = add i64 %190, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %189
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %177, i64 %200
  %203 = getelementptr inbounds i32, i32* %179, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !123
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !123
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !126, !noalias !123
  %210 = getelementptr inbounds i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !126, !noalias !123
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %177, i64 %212
  %214 = getelementptr inbounds i32, i32* %179, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !123
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !123
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !126, !noalias !123
  %221 = getelementptr inbounds i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !126, !noalias !123
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %177, i64 %223
  %225 = getelementptr inbounds i32, i32* %179, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !123
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !123
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !126, !noalias !123
  %232 = getelementptr inbounds i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !126, !noalias !123
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %177, i64 %234
  %236 = getelementptr inbounds i32, i32* %179, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !123
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !123
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !126, !noalias !123
  %243 = getelementptr inbounds i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !126, !noalias !123
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !128

248:                                              ; preds = %199, %189
  %249 = phi i64 [ 0, %189 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %177, i64 %252
  %255 = getelementptr inbounds i32, i32* %179, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !123
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !123
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !126, !noalias !123
  %262 = getelementptr inbounds i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !126, !noalias !123
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !129

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %178, %190
  br i1 %268, label %310, label %269

269:                                              ; preds = %267, %183, %176
  %270 = phi i32* [ %177, %183 ], [ %177, %176 ], [ %191, %267 ]
  %271 = phi i64 [ 0, %183 ], [ 0, %176 ], [ %190, %267 ]
  %272 = xor i64 %271, -1
  %273 = add i64 %178, %272
  %274 = and i64 %178, 3
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %286, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %283, %276 ], [ %271, %269 ]
  %279 = phi i64 [ %284, %276 ], [ %274, %269 ]
  %280 = getelementptr inbounds i32, i32* %179, i64 %278
  %281 = load i32, i32* %277, align 4
  store i32 %281, i32* %280, align 4
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = add nuw i64 %278, 1
  %284 = add i64 %279, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %276, !llvm.loop !130

286:                                              ; preds = %276, %269
  %287 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %288 = phi i64 [ %271, %269 ], [ %283, %276 ]
  %289 = icmp ult i64 %273, 3
  br i1 %289, label %310, label %290

290:                                              ; preds = %286, %290
  %291 = phi i32* [ %307, %290 ], [ %287, %286 ]
  %292 = phi i64 [ %308, %290 ], [ %288, %286 ]
  %293 = getelementptr inbounds i32, i32* %179, i64 %292
  %294 = load i32, i32* %291, align 4
  store i32 %294, i32* %293, align 4
  %295 = getelementptr inbounds i32, i32* %291, i64 1
  %296 = add nuw i64 %292, 1
  %297 = getelementptr inbounds i32, i32* %179, i64 %296
  %298 = load i32, i32* %295, align 4
  store i32 %298, i32* %297, align 4
  %299 = getelementptr inbounds i32, i32* %291, i64 2
  %300 = add nuw i64 %292, 2
  %301 = getelementptr inbounds i32, i32* %179, i64 %300
  %302 = load i32, i32* %299, align 4
  store i32 %302, i32* %301, align 4
  %303 = getelementptr inbounds i32, i32* %291, i64 3
  %304 = add nuw i64 %292, 3
  %305 = getelementptr inbounds i32, i32* %179, i64 %304
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %305, align 4
  %307 = getelementptr inbounds i32, i32* %291, i64 4
  %308 = add nuw i64 %292, 4
  %309 = icmp eq i64 %308, %178
  br i1 %309, label %310, label %290, !llvm.loop !131

310:                                              ; preds = %286, %290, %267
  %311 = icmp eq i64 %181, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %173, %310
  %313 = load i64, i64* %4, align 8
  br label %329

314:                                              ; preds = %310
  %315 = load i64, i64* %4, align 8
  %316 = and i64 %315, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %323, label %318

318:                                              ; preds = %314
  %319 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1, i32 0, i32 0
  %320 = bitcast i32** %319 to i8**
  %321 = load i8*, i8** %320, align 8
  tail call void @_ZdlPv(i8* %321) #20
  %322 = load i64, i64* %4, align 8
  br label %323

323:                                              ; preds = %314, %318
  %324 = phi i64 [ %315, %314 ], [ %322, %318 ]
  %325 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1, i32 0, i32 0
  %326 = bitcast i32** %325 to i64*
  store i64 %181, i64* %326, align 8
  %327 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.288", %"class.absl::inlined_vector_internal::Storage.288"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %180, i64* %327, align 8
  %328 = or i64 %324, 1
  store i64 %328, i64* %4, align 8
  br label %329

329:                                              ; preds = %323, %312
  %330 = phi i64 [ %313, %312 ], [ %328, %323 ]
  %331 = shl i64 %2, 1
  %332 = and i64 %330, 1
  %333 = or i64 %332, %331
  store i64 %333, i64* %4, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJRKhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.281"*, i8* dereferenceable(1)) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !132
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !132
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !132
  %13 = shl i64 %12, 1
  br label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i64 [ %16, %14 ], [ %10, %7 ]
  %19 = phi i64 [ 8, %14 ], [ %13, %7 ]
  %20 = lshr i64 %4, 1
  %21 = tail call i8* @_Znwm(i64 %19) #20
  %22 = ptrtoint i8* %21 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %20
  %24 = load i8, i8* %1, align 1
  store i8 %24, i8* %23, align 1
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %156, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %18 to i8*
  %28 = icmp ult i64 %4, 64
  br i1 %28, label %115, label %29

29:                                               ; preds = %26
  %30 = getelementptr i8, i8* %21, i64 %20
  %31 = getelementptr i8, i8* %27, i64 %20
  %32 = icmp ult i8* %21, %31
  %33 = icmp ugt i8* %30, %27
  %34 = and i1 %32, %33
  br i1 %34, label %115, label %35

35:                                               ; preds = %29
  %36 = and i64 %20, 9223372036854775776
  %37 = getelementptr i8, i8* %27, i64 %36
  %38 = add nsw i64 %36, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %35
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr i8, i8* %27, i64 %46
  %49 = getelementptr inbounds i8, i8* %21, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !135
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !135
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !138, !noalias !135
  %56 = getelementptr inbounds i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1, !alias.scope !138, !noalias !135
  %58 = or i64 %46, 32
  %59 = getelementptr i8, i8* %27, i64 %58
  %60 = getelementptr inbounds i8, i8* %21, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !135
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !135
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !138, !noalias !135
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1, !alias.scope !138, !noalias !135
  %69 = or i64 %46, 64
  %70 = getelementptr i8, i8* %27, i64 %69
  %71 = getelementptr inbounds i8, i8* %21, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !135
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !135
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !138, !noalias !135
  %78 = getelementptr inbounds i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !138, !noalias !135
  %80 = or i64 %46, 96
  %81 = getelementptr i8, i8* %27, i64 %80
  %82 = getelementptr inbounds i8, i8* %21, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !135
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !135
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !138, !noalias !135
  %89 = getelementptr inbounds i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1, !alias.scope !138, !noalias !135
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !140

94:                                               ; preds = %45, %35
  %95 = phi i64 [ 0, %35 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr i8, i8* %27, i64 %98
  %101 = getelementptr inbounds i8, i8* %21, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !135
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !135
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !138, !noalias !135
  %108 = getelementptr inbounds i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !138, !noalias !135
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !141

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %20, %36
  br i1 %114, label %156, label %115

115:                                              ; preds = %113, %29, %26
  %116 = phi i8* [ %27, %29 ], [ %27, %26 ], [ %37, %113 ]
  %117 = phi i64 [ 0, %29 ], [ 0, %26 ], [ %36, %113 ]
  %118 = xor i64 %117, -1
  %119 = add nsw i64 %20, %118
  %120 = and i64 %20, 3
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %115, %122
  %123 = phi i8* [ %128, %122 ], [ %116, %115 ]
  %124 = phi i64 [ %129, %122 ], [ %117, %115 ]
  %125 = phi i64 [ %130, %122 ], [ %120, %115 ]
  %126 = getelementptr inbounds i8, i8* %21, i64 %124
  %127 = load i8, i8* %123, align 1
  store i8 %127, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = add nuw nsw i64 %124, 1
  %130 = add i64 %125, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %122, !llvm.loop !142

132:                                              ; preds = %122, %115
  %133 = phi i8* [ %116, %115 ], [ %128, %122 ]
  %134 = phi i64 [ %117, %115 ], [ %129, %122 ]
  %135 = icmp ult i64 %119, 3
  br i1 %135, label %156, label %136

136:                                              ; preds = %132, %136
  %137 = phi i8* [ %153, %136 ], [ %133, %132 ]
  %138 = phi i64 [ %154, %136 ], [ %134, %132 ]
  %139 = getelementptr inbounds i8, i8* %21, i64 %138
  %140 = load i8, i8* %137, align 1
  store i8 %140, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %137, i64 1
  %142 = add nuw nsw i64 %138, 1
  %143 = getelementptr inbounds i8, i8* %21, i64 %142
  %144 = load i8, i8* %141, align 1
  store i8 %144, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 2
  %146 = add nuw nsw i64 %138, 2
  %147 = getelementptr inbounds i8, i8* %21, i64 %146
  %148 = load i8, i8* %145, align 1
  store i8 %148, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 3
  %150 = add nuw nsw i64 %138, 3
  %151 = getelementptr inbounds i8, i8* %21, i64 %150
  %152 = load i8, i8* %149, align 1
  store i8 %152, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %137, i64 4
  %154 = add nuw nsw i64 %138, 4
  %155 = icmp eq i64 %154, %20
  br i1 %155, label %156, label %136, !llvm.loop !143

156:                                              ; preds = %132, %136, %113, %17
  br i1 %6, label %161, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  tail call void @_ZdlPv(i8* %159) #20
  %160 = load i64, i64* %3, align 8
  br label %161

161:                                              ; preds = %157, %156
  %162 = phi i64 [ %160, %157 ], [ %4, %156 ]
  %163 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %164 = bitcast i8** %163 to i64*
  store i64 %22, i64* %164, align 8
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %19, i64* %165, align 8
  %166 = or i64 %162, 1
  %167 = add i64 %166, 2
  store i64 %167, i64* %3, align 8
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.281"*, i8* dereferenceable(1)) local_unnamed_addr #17 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !144
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !144
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !144
  %13 = shl i64 %12, 1
  br label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i64 [ %16, %14 ], [ %10, %7 ]
  %19 = phi i64 [ 8, %14 ], [ %13, %7 ]
  %20 = lshr i64 %4, 1
  %21 = tail call i8* @_Znwm(i64 %19) #20
  %22 = ptrtoint i8* %21 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %20
  %24 = load i8, i8* %1, align 1
  store i8 %24, i8* %23, align 1
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %156, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %18 to i8*
  %28 = icmp ult i64 %4, 64
  br i1 %28, label %115, label %29

29:                                               ; preds = %26
  %30 = getelementptr i8, i8* %21, i64 %20
  %31 = getelementptr i8, i8* %27, i64 %20
  %32 = icmp ult i8* %21, %31
  %33 = icmp ugt i8* %30, %27
  %34 = and i1 %32, %33
  br i1 %34, label %115, label %35

35:                                               ; preds = %29
  %36 = and i64 %20, 9223372036854775776
  %37 = getelementptr i8, i8* %27, i64 %36
  %38 = add nsw i64 %36, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %35
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr i8, i8* %27, i64 %46
  %49 = getelementptr inbounds i8, i8* %21, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !147
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !147
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !150, !noalias !147
  %56 = getelementptr inbounds i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1, !alias.scope !150, !noalias !147
  %58 = or i64 %46, 32
  %59 = getelementptr i8, i8* %27, i64 %58
  %60 = getelementptr inbounds i8, i8* %21, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !147
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !147
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !150, !noalias !147
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1, !alias.scope !150, !noalias !147
  %69 = or i64 %46, 64
  %70 = getelementptr i8, i8* %27, i64 %69
  %71 = getelementptr inbounds i8, i8* %21, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !147
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !147
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !150, !noalias !147
  %78 = getelementptr inbounds i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !150, !noalias !147
  %80 = or i64 %46, 96
  %81 = getelementptr i8, i8* %27, i64 %80
  %82 = getelementptr inbounds i8, i8* %21, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !147
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !147
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !150, !noalias !147
  %89 = getelementptr inbounds i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1, !alias.scope !150, !noalias !147
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !152

94:                                               ; preds = %45, %35
  %95 = phi i64 [ 0, %35 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr i8, i8* %27, i64 %98
  %101 = getelementptr inbounds i8, i8* %21, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !147
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !147
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !150, !noalias !147
  %108 = getelementptr inbounds i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !150, !noalias !147
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !153

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %20, %36
  br i1 %114, label %156, label %115

115:                                              ; preds = %113, %29, %26
  %116 = phi i8* [ %27, %29 ], [ %27, %26 ], [ %37, %113 ]
  %117 = phi i64 [ 0, %29 ], [ 0, %26 ], [ %36, %113 ]
  %118 = xor i64 %117, -1
  %119 = add nsw i64 %20, %118
  %120 = and i64 %20, 3
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %115, %122
  %123 = phi i8* [ %128, %122 ], [ %116, %115 ]
  %124 = phi i64 [ %129, %122 ], [ %117, %115 ]
  %125 = phi i64 [ %130, %122 ], [ %120, %115 ]
  %126 = getelementptr inbounds i8, i8* %21, i64 %124
  %127 = load i8, i8* %123, align 1
  store i8 %127, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = add nuw nsw i64 %124, 1
  %130 = add i64 %125, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %122, !llvm.loop !154

132:                                              ; preds = %122, %115
  %133 = phi i8* [ %116, %115 ], [ %128, %122 ]
  %134 = phi i64 [ %117, %115 ], [ %129, %122 ]
  %135 = icmp ult i64 %119, 3
  br i1 %135, label %156, label %136

136:                                              ; preds = %132, %136
  %137 = phi i8* [ %153, %136 ], [ %133, %132 ]
  %138 = phi i64 [ %154, %136 ], [ %134, %132 ]
  %139 = getelementptr inbounds i8, i8* %21, i64 %138
  %140 = load i8, i8* %137, align 1
  store i8 %140, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %137, i64 1
  %142 = add nuw nsw i64 %138, 1
  %143 = getelementptr inbounds i8, i8* %21, i64 %142
  %144 = load i8, i8* %141, align 1
  store i8 %144, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 2
  %146 = add nuw nsw i64 %138, 2
  %147 = getelementptr inbounds i8, i8* %21, i64 %146
  %148 = load i8, i8* %145, align 1
  store i8 %148, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 3
  %150 = add nuw nsw i64 %138, 3
  %151 = getelementptr inbounds i8, i8* %21, i64 %150
  %152 = load i8, i8* %149, align 1
  store i8 %152, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %137, i64 4
  %154 = add nuw nsw i64 %138, 4
  %155 = icmp eq i64 %154, %20
  br i1 %155, label %156, label %136, !llvm.loop !155

156:                                              ; preds = %132, %136, %113, %17
  br i1 %6, label %161, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  tail call void @_ZdlPv(i8* %159) #20
  %160 = load i64, i64* %3, align 8
  br label %161

161:                                              ; preds = %157, %156
  %162 = phi i64 [ %160, %157 ], [ %4, %156 ]
  %163 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 0
  %164 = bitcast i8** %163 to i64*
  store i64 %22, i64* %164, align 8
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.281", %"class.absl::inlined_vector_internal::Storage.281"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %19, i64* %165, align 8
  %166 = or i64 %162, 1
  %167 = add i64 %166, 2
  store i64 %167, i64* %3, align 8
  ret i8* %23
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3rtc13scoped_refptrIN6webrtc16VideoFrameBufferEEENS_9allocatorIS5_EEE21__push_back_slow_pathIRKS5_EEvOT_(%"class.std::__1::vector.222"*, %"class.rtc::scoped_refptr.204"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rtc::scoped_refptr.204"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.222"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.222"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #21
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rtc::scoped_refptr.204"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #21
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #20
  %33 = bitcast i8* %32 to %"class.rtc::scoped_refptr.204"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rtc::scoped_refptr.204"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %36, i64 %35
  %39 = ptrtoint %"class.rtc::scoped_refptr.204"* %38 to i64
  %40 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %1, i64 0, i32 0
  %42 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %41, align 8
  store %"class.webrtc::VideoFrameBuffer"* %42, %"class.webrtc::VideoFrameBuffer"** %40, align 8
  %43 = icmp eq %"class.webrtc::VideoFrameBuffer"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %42, i64 0, i32 0
  %46 = bitcast %"class.webrtc::VideoFrameBuffer"* %42 to void (%"class.rtc::RefCountInterface"*)***
  %47 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %46, align 8
  %48 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %47, align 8
  tail call void %48(%"class.rtc::RefCountInterface"* %45) #19
  br label %49

49:                                               ; preds = %34, %44
  %50 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %37, i64 1
  %51 = ptrtoint %"class.rtc::scoped_refptr.204"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.222", %"class.std::__1::vector.222"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %52, align 8
  %54 = ptrtoint %"class.rtc::scoped_refptr.204"* %53 to i64
  %55 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %3, align 8
  %56 = icmp eq %"class.rtc::scoped_refptr.204"* %55, %53
  br i1 %56, label %138, label %57

57:                                               ; preds = %49
  %58 = getelementptr %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %55, i64 -1, i32 0
  %59 = ptrtoint %"class.webrtc::VideoFrameBuffer"** %58 to i64
  %60 = sub i64 %59, %54
  %61 = lshr i64 %60, 3
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 7
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %57, %65
  %66 = phi %"class.rtc::scoped_refptr.204"* [ %69, %65 ], [ %37, %57 ]
  %67 = phi %"class.rtc::scoped_refptr.204"* [ %70, %65 ], [ %55, %57 ]
  %68 = phi i64 [ %75, %65 ], [ %63, %57 ]
  %69 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %66, i64 -1
  %70 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %67, i64 -1
  %71 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %70, i64 0, i32 0
  %72 = bitcast %"class.rtc::scoped_refptr.204"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %71, align 8
  %74 = bitcast %"class.rtc::scoped_refptr.204"* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = add i64 %68, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %65, !llvm.loop !156

77:                                               ; preds = %65, %57
  %78 = phi %"class.rtc::scoped_refptr.204"* [ undef, %57 ], [ %69, %65 ]
  %79 = phi %"class.rtc::scoped_refptr.204"* [ %37, %57 ], [ %69, %65 ]
  %80 = phi %"class.rtc::scoped_refptr.204"* [ %55, %57 ], [ %70, %65 ]
  %81 = icmp ult i64 %60, 56
  br i1 %81, label %134, label %82

82:                                               ; preds = %77, %82
  %83 = phi %"class.rtc::scoped_refptr.204"* [ %127, %82 ], [ %79, %77 ]
  %84 = phi %"class.rtc::scoped_refptr.204"* [ %128, %82 ], [ %80, %77 ]
  %85 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -1
  %86 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -1
  %87 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %86, i64 0, i32 0
  %88 = bitcast %"class.rtc::scoped_refptr.204"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %87, align 8
  %90 = bitcast %"class.rtc::scoped_refptr.204"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -2
  %92 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -2
  %93 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %92, i64 0, i32 0
  %94 = bitcast %"class.rtc::scoped_refptr.204"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %93, align 8
  %96 = bitcast %"class.rtc::scoped_refptr.204"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -3
  %98 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -3
  %99 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %98, i64 0, i32 0
  %100 = bitcast %"class.rtc::scoped_refptr.204"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %99, align 8
  %102 = bitcast %"class.rtc::scoped_refptr.204"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -4
  %104 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -4
  %105 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %104, i64 0, i32 0
  %106 = bitcast %"class.rtc::scoped_refptr.204"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %105, align 8
  %108 = bitcast %"class.rtc::scoped_refptr.204"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -5
  %110 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -5
  %111 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %110, i64 0, i32 0
  %112 = bitcast %"class.rtc::scoped_refptr.204"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %111, align 8
  %114 = bitcast %"class.rtc::scoped_refptr.204"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -6
  %116 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -6
  %117 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %116, i64 0, i32 0
  %118 = bitcast %"class.rtc::scoped_refptr.204"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %117, align 8
  %120 = bitcast %"class.rtc::scoped_refptr.204"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -7
  %122 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -7
  %123 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %122, i64 0, i32 0
  %124 = bitcast %"class.rtc::scoped_refptr.204"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %123, align 8
  %126 = bitcast %"class.rtc::scoped_refptr.204"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %83, i64 -8
  %128 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %84, i64 -8
  %129 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %128, i64 0, i32 0
  %130 = bitcast %"class.rtc::scoped_refptr.204"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.webrtc::VideoFrameBuffer"* null, %"class.webrtc::VideoFrameBuffer"** %129, align 8
  %132 = bitcast %"class.rtc::scoped_refptr.204"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = icmp eq %"class.rtc::scoped_refptr.204"* %128, %53
  br i1 %133, label %134, label %82

134:                                              ; preds = %82, %77
  %135 = phi %"class.rtc::scoped_refptr.204"* [ %78, %77 ], [ %127, %82 ]
  %136 = load i64, i64* %6, align 8
  %137 = load %"class.rtc::scoped_refptr.204"*, %"class.rtc::scoped_refptr.204"** %3, align 8
  br label %138

138:                                              ; preds = %49, %134
  %139 = phi %"class.rtc::scoped_refptr.204"* [ %137, %134 ], [ %53, %49 ]
  %140 = phi %"class.rtc::scoped_refptr.204"* [ %135, %134 ], [ %37, %49 ]
  %141 = phi i64 [ %136, %134 ], [ %54, %49 ]
  %142 = ptrtoint %"class.rtc::scoped_refptr.204"* %140 to i64
  store i64 %142, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %143 = inttoptr i64 %141 to %"class.rtc::scoped_refptr.204"*
  %144 = icmp eq %"class.rtc::scoped_refptr.204"* %139, %143
  br i1 %144, label %160, label %145

145:                                              ; preds = %138, %158
  %146 = phi %"class.rtc::scoped_refptr.204"* [ %147, %158 ], [ %139, %138 ]
  %147 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %146, i64 -1
  %148 = getelementptr inbounds %"class.rtc::scoped_refptr.204", %"class.rtc::scoped_refptr.204"* %147, i64 0, i32 0
  %149 = load %"class.webrtc::VideoFrameBuffer"*, %"class.webrtc::VideoFrameBuffer"** %148, align 8
  %150 = icmp eq %"class.webrtc::VideoFrameBuffer"* %149, null
  br i1 %150, label %158, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.webrtc::VideoFrameBuffer", %"class.webrtc::VideoFrameBuffer"* %149, i64 0, i32 0
  %153 = bitcast %"class.webrtc::VideoFrameBuffer"* %149 to i32 (%"class.rtc::RefCountInterface"*)***
  %154 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %153, align 8
  %155 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %154, i64 1
  %156 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %155, align 8
  %157 = tail call i32 %156(%"class.rtc::RefCountInterface"* %152) #19
  br label %158

158:                                              ; preds = %151, %145
  %159 = icmp eq %"class.rtc::scoped_refptr.204"* %147, %143
  br i1 %159, label %160, label %145

160:                                              ; preds = %158, %138
  %161 = icmp eq i64 %141, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %141 to i8*
  tail call void @_ZdlPv(i8* %163) #20
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

declare void @_ZN6webrtc28FieldTrialParameterInterfaceC2ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.webrtc::FieldTrialParameterInterface"*, %"class.std::__1::basic_string"*) unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #18

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #16

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind readnone speculatable }
attributes #17 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nofree nounwind readonly }
attributes #19 = { nounwind }
attributes #20 = { builtin nounwind }
attributes #21 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!6 = distinct !{!6, !7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.isvectorized", i32 1}
!21 = distinct !{!21, !22}
!22 = !{!"llvm.loop.unroll.disable"}
!23 = distinct !{!23, !20}
!24 = distinct !{!24, !22}
!25 = !{!26}
!26 = distinct !{!26, !27}
!27 = distinct !{!27, !"LVerDomain"}
!28 = !{!29}
!29 = distinct !{!29, !27}
!30 = distinct !{!30, !20}
!31 = distinct !{!31, !20}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !20}
!38 = distinct !{!38, !22}
!39 = distinct !{!39, !20}
!40 = !{}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!44 = !{!45, !47}
!45 = distinct !{!45, !46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!47 = distinct !{!47, !48, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!49 = !{!50, !52}
!50 = distinct !{!50, !51, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!51 = distinct !{!51, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!52 = distinct !{!52, !53, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE5beginEv"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!57 = !{!55, !58}
!58 = distinct !{!58, !59, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb1EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv: argument 0"}
!62 = distinct !{!62, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE3endEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZN6webrtc16VideoFrameBuffer5ScaleEii: argument 0"}
!65 = distinct !{!65, !"_ZN6webrtc16VideoFrameBuffer5ScaleEii"}
!66 = !{!"branch_weights", i32 1, i32 1048575}
!67 = !{!"branch_weights", i32 1, i32 2000}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK6webrtc19EncoderInfoSettings25resolution_bitrate_limitsEv: argument 0"}
!70 = distinct !{!70, !"_ZNK6webrtc19EncoderInfoSettings25resolution_bitrate_limitsEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK6webrtc19EncoderInfoSettings25resolution_bitrate_limitsEv: argument 0"}
!73 = distinct !{!73, !"_ZNK6webrtc19EncoderInfoSettings25resolution_bitrate_limitsEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!76 = distinct !{!76, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!79 = distinct !{!79, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!85 = distinct !{!85, !"_ZNSt3__114__copy_alignedINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!86 = !{!84, !87}
!87 = distinct !{!87, !88, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_: argument 0"}
!88 = distinct !{!88, !"_ZNSt3__14copyINS_6vectorIbNS_9allocatorIbEEEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS5_IS6_XT0_EXLi0EEEES8_S7_"}
!89 = !{!87}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv: argument 0"}
!92 = distinct !{!92, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16RenderResolutionELm4ENSt3__19allocatorIS3_EEE15MakeStorageViewEv"}
!93 = !{!94}
!94 = distinct !{!94, !95}
!95 = distinct !{!95, !"LVerDomain"}
!96 = !{!97}
!97 = distinct !{!97, !95}
!98 = distinct !{!98, !20}
!99 = distinct !{!99, !22}
!100 = distinct !{!100, !22}
!101 = distinct !{!101, !20}
!102 = !{!103}
!103 = distinct !{!103, !104}
!104 = distinct !{!104, !"LVerDomain"}
!105 = !{!106}
!106 = distinct !{!106, !104}
!107 = distinct !{!107, !20}
!108 = distinct !{!108, !22}
!109 = distinct !{!109, !22}
!110 = distinct !{!110, !20}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16VideoFrameBuffer4TypeELm5ENSt3__19allocatorIS4_EEE15MakeStorageViewEv: argument 0"}
!113 = distinct !{!113, !"_ZN4absl23inlined_vector_internal7StorageIN6webrtc16VideoFrameBuffer4TypeELm5ENSt3__19allocatorIS4_EEE15MakeStorageViewEv"}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !20}
!120 = distinct !{!120, !22}
!121 = distinct !{!121, !22}
!122 = distinct !{!122, !20}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !20}
!129 = distinct !{!129, !22}
!130 = distinct !{!130, !22}
!131 = distinct !{!131, !20}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!134 = distinct !{!134, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !20}
!141 = distinct !{!141, !22}
!142 = distinct !{!142, !22}
!143 = distinct !{!143, !20}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!146 = distinct !{!146, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!147 = !{!148}
!148 = distinct !{!148, !149}
!149 = distinct !{!149, !"LVerDomain"}
!150 = !{!151}
!151 = distinct !{!151, !149}
!152 = distinct !{!152, !20}
!153 = distinct !{!153, !22}
!154 = distinct !{!154, !22}
!155 = distinct !{!155, !20}
!156 = distinct !{!156, !22}
