; ModuleID = '../../components/variations/synthetic_trials_active_group_id_provider.cc'
source_filename = "../../components/variations/synthetic_trials_active_group_id_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.variations::SyntheticTrialsActiveGroupIdProvider" = type { %"class.variations::SyntheticTrialObserver", %"class.std::__1::vector", %"class.base::Lock" }
%"class.variations::SyntheticTrialObserver" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"*, %"class.std::__1::__compressed_pair" }
%"struct.variations::ActiveGroupId" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.variations::ActiveGroupId"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"*, %"class.std::__1::__compressed_pair.3" }
%"struct.variations::SyntheticTrialGroup" = type <{ %"struct.variations::ActiveGroupId", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.variations::SyntheticTrialGroup"* }

$_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@_ZTVN10variations36SyntheticTrialsActiveGroupIdProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*, %"class.std::__1::vector.1"*)* @_ZN10variations36SyntheticTrialsActiveGroupIdProvider24OnSyntheticTrialsChangedERKNSt3__16vectorINS_19SyntheticTrialGroupENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)* @_ZN10variations36SyntheticTrialsActiveGroupIdProviderD2Ev to i8*), i8* bitcast (void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)* @_ZN10variations36SyntheticTrialsActiveGroupIdProviderD0Ev to i8*)] }, align 8
@_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN10variations36SyntheticTrialsActiveGroupIdProviderC1Ev = hidden unnamed_addr alias void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*), void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)* @_ZN10variations36SyntheticTrialsActiveGroupIdProviderC2Ev
@_ZN10variations36SyntheticTrialsActiveGroupIdProviderD1Ev = hidden unnamed_addr alias void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*), void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)* @_ZN10variations36SyntheticTrialsActiveGroupIdProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.variations::SyntheticTrialsActiveGroupIdProvider"* @_ZN10variations36SyntheticTrialsActiveGroupIdProvider11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %14, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #8
  br i1 %4, label %5, label %12

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 72) #9
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations36SyntheticTrialsActiveGroupIdProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = getelementptr inbounds i8, i8* %6, i64 32
  %10 = bitcast i8* %9 to %"class.base::internal::LockImpl"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %10) #8
  %11 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %11, void (i8*)* nonnull @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #8
  br label %14

12:                                               ; preds = %3
  %13 = load atomic i64, i64* @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %14

14:                                               ; preds = %0, %5, %12
  %15 = phi i64 [ %1, %0 ], [ %11, %5 ], [ %13, %12 ]
  %16 = inttoptr i64 %15 to %"class.variations::SyntheticTrialsActiveGroupIdProvider"*
  ret %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProviderC2Ev(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations36SyntheticTrialsActiveGroupIdProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProviderD2Ev(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations36SyntheticTrialsActiveGroupIdProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #8
  %4 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %4, align 8
  %6 = icmp eq %"struct.variations::ActiveGroupId"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.variations::ActiveGroupId"* %5 to i64
  %9 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"struct.variations::ActiveGroupId"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"struct.variations::ActiveGroupId"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProviderD0Ev(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN10variations36SyntheticTrialsActiveGroupIdProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #8
  %4 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %4, align 8
  %6 = icmp eq %"struct.variations::ActiveGroupId"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.variations::ActiveGroupId"* %5 to i64
  %9 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %"struct.variations::ActiveGroupId"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"struct.variations::ActiveGroupId"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #9
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProvider17GetActiveGroupIdsEPNSt3__16vectorINS_13ActiveGroupIdENS1_9allocatorIS3_EEEE(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %10, align 8
  %12 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %12, align 8
  %14 = icmp eq %"struct.variations::ActiveGroupId"* %11, %13
  br i1 %14, label %22, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"struct.variations::ActiveGroupId"** %16 to i64*
  %19 = bitcast %"class.std::__1::vector"* %1 to i64*
  %20 = bitcast %"struct.variations::ActiveGroupId"** %17 to i64*
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  br label %24

22:                                               ; preds = %91, %9
  %23 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  ret void

24:                                               ; preds = %15, %91
  %25 = phi %"struct.variations::ActiveGroupId"* [ %11, %15 ], [ %92, %91 ]
  %26 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %16, align 8
  %27 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %17, align 8
  %28 = icmp eq %"struct.variations::ActiveGroupId"* %26, %27
  %29 = ptrtoint %"struct.variations::ActiveGroupId"* %27 to i64
  br i1 %28, label %36, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.variations::ActiveGroupId"* %25 to i64*
  %32 = bitcast %"struct.variations::ActiveGroupId"* %26 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 4
  %34 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %26, i64 1
  %35 = ptrtoint %"struct.variations::ActiveGroupId"* %34 to i64
  store i64 %35, i64* %18, align 8
  br label %91

36:                                               ; preds = %24
  %37 = ptrtoint %"struct.variations::ActiveGroupId"* %26 to i64
  %38 = load i64, i64* %19, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::vector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #10
  unreachable

45:                                               ; preds = %36
  %46 = sub i64 %29, %38
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %41
  %52 = select i1 %51, i64 %41, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @abort() #10
  unreachable

57:                                               ; preds = %54, %45
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %45 ]
  %59 = shl i64 %58, 3
  %60 = tail call i8* @_Znwm(i64 %59) #9
  %61 = bitcast i8* %60 to %"struct.variations::ActiveGroupId"*
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi %"struct.variations::ActiveGroupId"* [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %64, i64 %40
  %66 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %64, i64 %63
  %67 = ptrtoint %"struct.variations::ActiveGroupId"* %66 to i64
  %68 = bitcast %"struct.variations::ActiveGroupId"* %25 to i64*
  %69 = bitcast %"struct.variations::ActiveGroupId"* %65 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %65, i64 1
  %72 = ptrtoint %"struct.variations::ActiveGroupId"* %71 to i64
  %73 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %21, align 8
  %74 = load i64, i64* %18, align 8
  %75 = ptrtoint %"struct.variations::ActiveGroupId"* %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %65, i64 %78
  %80 = ptrtoint %"struct.variations::ActiveGroupId"* %79 to i64
  %81 = icmp sgt i64 %76, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %62
  %83 = bitcast %"struct.variations::ActiveGroupId"* %79 to i8*
  %84 = bitcast %"struct.variations::ActiveGroupId"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %76, i1 false) #8
  %85 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %21, align 8
  br label %86

86:                                               ; preds = %82, %62
  %87 = phi %"struct.variations::ActiveGroupId"* [ %73, %62 ], [ %85, %82 ]
  store i64 %80, i64* %19, align 8
  store i64 %72, i64* %18, align 8
  store i64 %67, i64* %20, align 8
  %88 = icmp eq %"struct.variations::ActiveGroupId"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast %"struct.variations::ActiveGroupId"* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #9
  br label %91

91:                                               ; preds = %30, %86, %89
  %92 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %25, i64 1
  %93 = icmp eq %"struct.variations::ActiveGroupId"* %92, %13
  br i1 %93, label %22, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProvider15ResetForTestingEv(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %3) #8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %2, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1
  %10 = bitcast %"class.std::__1::vector"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast %"struct.variations::ActiveGroupId"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10variations36SyntheticTrialsActiveGroupIdProvider24OnSyntheticTrialsChangedERKNSt3__16vectorINS_19SyntheticTrialGroupENS1_9allocatorIS3_EEEE(%"class.variations::SyntheticTrialsActiveGroupIdProvider"*, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #8
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::vector"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 1
  %14 = bitcast %"struct.variations::ActiveGroupId"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %16 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 1
  %18 = load %"struct.variations::SyntheticTrialGroup"*, %"struct.variations::SyntheticTrialGroup"** %17, align 8
  %19 = icmp eq %"struct.variations::SyntheticTrialGroup"* %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %9
  %21 = inttoptr i64 %12 to %"struct.variations::ActiveGroupId"*
  %22 = getelementptr inbounds %"class.variations::SyntheticTrialsActiveGroupIdProvider", %"class.variations::SyntheticTrialsActiveGroupIdProvider"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"struct.variations::ActiveGroupId"** %22 to i64*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  br label %27

25:                                               ; preds = %91, %9
  %26 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #8
  tail call void @_ZN10variations34UpdateCrashKeysWithSyntheticTrialsERKNSt3__16vectorINS_19SyntheticTrialGroupENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.1"* dereferenceable(24) %1) #8
  ret void

27:                                               ; preds = %94, %20
  %28 = phi %"struct.variations::ActiveGroupId"* [ %21, %20 ], [ %95, %94 ]
  %29 = phi %"struct.variations::SyntheticTrialGroup"* [ %16, %20 ], [ %92, %94 ]
  %30 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %22, align 8
  %31 = icmp eq %"struct.variations::ActiveGroupId"* %28, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.variations::SyntheticTrialGroup"* %29 to i64*
  %34 = bitcast %"struct.variations::ActiveGroupId"* %28 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %28, i64 1
  %37 = ptrtoint %"struct.variations::ActiveGroupId"* %36 to i64
  store i64 %37, i64* %14, align 8
  br label %91

38:                                               ; preds = %27
  %39 = ptrtoint %"struct.variations::ActiveGroupId"* %30 to i64
  %40 = load i64, i64* %11, align 8
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %38
  %46 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #10
  unreachable

47:                                               ; preds = %38
  %48 = icmp ult i64 %42, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %47
  %50 = ashr exact i64 %41, 2
  %51 = icmp ult i64 %50, %43
  %52 = select i1 %51, i64 %43, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @abort() #10
  unreachable

57:                                               ; preds = %54, %47
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %47 ]
  %59 = shl i64 %58, 3
  %60 = tail call i8* @_Znwm(i64 %59) #9
  %61 = bitcast i8* %60 to %"struct.variations::ActiveGroupId"*
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi %"struct.variations::ActiveGroupId"* [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %64, i64 %42
  %66 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %64, i64 %63
  %67 = ptrtoint %"struct.variations::ActiveGroupId"* %66 to i64
  %68 = bitcast %"struct.variations::SyntheticTrialGroup"* %29 to i64*
  %69 = bitcast %"struct.variations::ActiveGroupId"* %65 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %65, i64 1
  %72 = ptrtoint %"struct.variations::ActiveGroupId"* %71 to i64
  %73 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %24, align 8
  %74 = load i64, i64* %14, align 8
  %75 = ptrtoint %"struct.variations::ActiveGroupId"* %73 to i64
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 3
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds %"struct.variations::ActiveGroupId", %"struct.variations::ActiveGroupId"* %65, i64 %78
  %80 = ptrtoint %"struct.variations::ActiveGroupId"* %79 to i64
  %81 = icmp sgt i64 %76, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %62
  %83 = bitcast %"struct.variations::ActiveGroupId"* %79 to i8*
  %84 = bitcast %"struct.variations::ActiveGroupId"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 %84, i64 %76, i1 false) #8
  %85 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %24, align 8
  br label %86

86:                                               ; preds = %82, %62
  %87 = phi %"struct.variations::ActiveGroupId"* [ %73, %62 ], [ %85, %82 ]
  store i64 %80, i64* %11, align 8
  store i64 %72, i64* %14, align 8
  store i64 %67, i64* %23, align 8
  %88 = icmp eq %"struct.variations::ActiveGroupId"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = bitcast %"struct.variations::ActiveGroupId"* %87 to i8*
  tail call void @_ZdlPv(i8* %90) #9
  br label %91

91:                                               ; preds = %32, %86, %89
  %92 = getelementptr inbounds %"struct.variations::SyntheticTrialGroup", %"struct.variations::SyntheticTrialGroup"* %29, i64 1
  %93 = icmp eq %"struct.variations::SyntheticTrialGroup"* %92, %18
  br i1 %93, label %25, label %94

94:                                               ; preds = %91
  %95 = load %"struct.variations::ActiveGroupId"*, %"struct.variations::ActiveGroupId"** %13, align 8
  br label %27
}

declare void @_ZN10variations34UpdateCrashKeysWithSyntheticTrialsERKNSt3__16vectorINS_19SyntheticTrialGroupENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.1"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %10, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.variations::SyntheticTrialsActiveGroupIdProvider"*
  %6 = inttoptr i64 %2 to void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)***
  %7 = load void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)**, void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)*, void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)** %7, i64 2
  %9 = load void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)*, void (%"class.variations::SyntheticTrialsActiveGroupIdProvider"*)** %8, align 8
  tail call void %9(%"class.variations::SyntheticTrialsActiveGroupIdProvider"* nonnull %5) #8
  br label %10

10:                                               ; preds = %1, %4
  store i64 0, i64* @_ZN4base9SingletonIN10variations36SyntheticTrialsActiveGroupIdProviderENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
