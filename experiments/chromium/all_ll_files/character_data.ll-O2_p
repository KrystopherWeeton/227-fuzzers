; ModuleID = '../../third_party/blink/renderer/core/dom/character_data.cc'
source_filename = "../../third_party/blink/renderer/core/dom/character_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.182", i32, [4 x i8], %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.318", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.334", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.359", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.298", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { i64 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::Worklist.271"* }
%"class.blink::Worklist.271" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.292", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { i64 }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { float }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.301", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.310" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312" }
%"class.WTF::VectorBufferBase.312" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.326" }
%"class.WTF::VectorBuffer.326" = type { %"class.WTF::VectorBufferBase.327" }
%"class.WTF::VectorBufferBase.327" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.340" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.243"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.257"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.594" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.359" = type { %"struct.std::__1::__atomic_base.360" }
%"struct.std::__1::__atomic_base.360" = type { %"struct.std::__1::__cxx_atomic_impl.361" }
%"struct.std::__1::__cxx_atomic_impl.361" = type { %"struct.std::__1::__cxx_atomic_base_impl.362" }
%"struct.std::__1::__cxx_atomic_base_impl.362" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.169", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.169" = type { %"class.base::RefCounted.170" }
%"class.base::RefCounted.170" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.173" }
%"class.blink::HeapHashMap.173" = type { %"class.WTF::HashMap.176" }
%"class.WTF::HashMap.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type { %"class.blink::WeakMember.180", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.25", %"class.blink::Member.27", %"class.blink::Member.0", %"class.blink::Member.29", %"class.blink::Member.29", %"class.blink::Member.67", %"class.blink::Member.69", %"class.blink::Member.71", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.76", %"class.blink::HeapVector.78" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.125", %"class.WTF::Vector.125", i8, i32, %"class.blink::Member.136", %"class.blink::Member.138", %"class.blink::Member.140", %"class.blink::Member.142", %"class.blink::Member.144", %"class.blink::Member.146", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.154", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.160", %"class.blink::Member.162", %"class.blink::Member.84", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.165", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.40", %"class.blink::Member.375", %"class.blink::Member.40", %"class.blink::Member.40", %"class.blink::Member.40", %"class.blink::UserActionElementSet", %"class.blink::Member.384", double, double, i64, i64, %"class.blink::HeapHashSet.386", %"class.blink::HeapHashSet.393", i16, i8, %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::Member.404", %"class.blink::Member.406", %"class.blink::TextLinkColors", %"class.blink::Member.408", i8, [7 x i8], %"class.blink::HeapHashMap.410", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.40", %"class.WTF::Vector.417", %"class.blink::Member.422", %"class.blink::Member.426", i8, %"class.blink::Member.40", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.428", %"class.blink::HeapVector.430", %"class.std::__1::unique_ptr.438", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.444", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.457", %"class.WTF::Vector.459", i8, i8, %"class.std::__1::unique_ptr.464", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.470", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.478", i8, i32, %"class.blink::Member.480", %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.486", %"class.WTF::HashMap.488", %"class.blink::Member.493", %"class.blink::Member.495", %"class.blink::Member.497", %"class.blink::Member.499", %"class.blink::Member.27", %"class.blink::Member.27", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.501", i8, i32, %"class.blink::Member.508", %"class.blink::Member.510", i32, %"class.blink::Member.512", %"class.blink::Member.514", %"class.blink::Member.516", %"class.std::__1::unique_ptr.518", i64, %"class.std::__1::unique_ptr.524", i32, i32, %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.536", %"class.WTF::Vector.538", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.543", %"class.blink::Member.550", %"class.std::__1::unique_ptr.552", %"class.blink::Member.558", i8, i8, %"class.WTF::String", %"class.blink::Member.560", i8, [7 x i8], %"class.blink::HeapHashMap.562", %"class.blink::HeapObserverSet", %"class.blink::Member.576", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.578", i32, i8, i8, %"class.blink::WeakMember.580", %"class.blink::Member.581" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.118" }
%"class.blink::HeapHashMap.118" = type { %"class.WTF::HashMap.121" }
%"class.WTF::HashMap.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"struct.WTF::KeyValuePair.124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.124" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.125" = type { %"class.WTF::VectorBuffer.126" }
%"class.WTF::VectorBuffer.126" = type { %"class.WTF::VectorBufferBase.127" }
%"class.WTF::VectorBufferBase.127" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.129" }
%"struct.std::__1::atomic.129" = type { %"struct.std::__1::__atomic_base.130" }
%"struct.std::__1::__atomic_base.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__cxx_atomic_impl.132" }
%"struct.std::__1::__cxx_atomic_impl.132" = type { %"struct.std::__1::__cxx_atomic_base_impl.133" }
%"struct.std::__1::__cxx_atomic_base_impl.133" = type { i32 }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.599", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.667", i32, i8, [3 x i8], %"class.blink::HeapVector.669", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.677", %"class.blink::Member.679", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.688", %"class.blink::Member.816", %"class.blink::Member.818", i8, [7 x i8] }>
%"class.blink::Supplementable.599" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.600" }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.615" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.607" }
%"class.blink::HeapObserverSet.607" = type { i32, [4 x i8], %"class.blink::HeapHashSet.608" }
%"class.blink::HeapHashSet.608" = type { %"class.WTF::HashSet.611" }
%"class.WTF::HashSet.611" = type { %"class.WTF::HashTable.612" }
%"class.WTF::HashTable.612" = type <{ %"class.blink::WeakMember.614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.614" = type opaque
%"class.blink::Supplementable.615" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.616" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type { i8*, %"class.blink::Member.1926" }
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1928" }
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.623, %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.627", %"class.std::__1::unique_ptr.657", %"class.std::__1::unique_ptr.657", %"class.blink::Member.138", i32, [4 x i8], %"class.WTF::HashSet.663", i32, i32 }
%class.scoped_refptr.623 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.624", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.626 }
%"class.WTF::RefCounted.624" = type { %"class.base::RefCounted.625" }
%"class.base::RefCounted.625" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.626 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.644", %"class.std::__1::map.653"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.632 }
%union.anon.632 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.636", %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.644" = type { %"class.std::__1::__tree.645" }
%"class.std::__1::__tree.645" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.653" = type opaque
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.663" = type { %"class.WTF::HashTable.664" }
%"class.WTF::HashTable.664" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.669" = type { %"class.WTF::Vector.672" }
%"class.WTF::Vector.672" = type { %"class.WTF::VectorBuffer.673" }
%"class.WTF::VectorBuffer.673" = type { %"class.WTF::VectorBufferBase.674" }
%"class.WTF::VectorBufferBase.674" = type { %"class.blink::Member.675"*, i32, i32 }
%"class.blink::Member.675" = type opaque
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.681", i32, i32 }
%"class.blink::HeapHashMap.681" = type { %"class.WTF::HashMap.684" }
%"class.WTF::HashMap.684" = type { %"class.WTF::HashTable.685" }
%"class.WTF::HashTable.685" = type <{ %"struct.WTF::KeyValuePair.687"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.687" = type opaque
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.691" }
%"class.std::__1::unique_ptr.691" = type { %"class.std::__1::__compressed_pair.692" }
%"class.std::__1::__compressed_pair.692" = type { %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.694" }
%"class.WTF::Vector.694" = type { %"class.WTF::VectorBuffer.695" }
%"class.WTF::VectorBuffer.695" = type { %"class.WTF::VectorBufferBase.696" }
%"class.WTF::VectorBufferBase.696" = type { %"class.mojo::StructPtr.697"*, i32, i32 }
%"class.mojo::StructPtr.697" = type { %"class.std::__1::unique_ptr.698" }
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.701", %"class.WTF::HashMap.708", %"class.WTF::HashMap.713", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.718", i32, %"class.mojo::StructPtr.723", %"class.WTF::Vector.718" }
%"class.mojo::StructPtr.701" = type { %"class.std::__1::unique_ptr.702" }
%"class.std::__1::unique_ptr.702" = type { %"class.std::__1::__compressed_pair.703" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"struct.WTF::KeyValuePair.712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.712" = type opaque
%"class.WTF::HashMap.713" = type { %"class.WTF::HashTable.714" }
%"class.WTF::HashTable.714" = type <{ %"struct.WTF::KeyValuePair.717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.717" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.723" = type { %"class.std::__1::unique_ptr.724" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.718", i8, i8, [6 x i8] }>
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720" }
%"class.WTF::VectorBufferBase.720" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.807" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.738", i32 }>
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.741", %"class.absl::optional.742", %"class.absl::optional.747", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.760", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.782", %"class.std::__1::map.793", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.802", i8, %class.scoped_refptr.752, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.803" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.741" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.742" = type { %"class.absl::optional_internal::optional_data.743" }
%"class.absl::optional_internal::optional_data.743" = type { %"class.absl::optional_internal::optional_data_base.744" }
%"class.absl::optional_internal::optional_data_base.744" = type { %"class.absl::optional_internal::optional_data_dtor_base.745" }
%"class.absl::optional_internal::optional_data_dtor_base.745" = type { i8, %union.anon.746 }
%union.anon.746 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.747" = type { %"class.absl::optional_internal::optional_data.748" }
%"class.absl::optional_internal::optional_data.748" = type { %"class.absl::optional_internal::optional_data_base.749" }
%"class.absl::optional_internal::optional_data_base.749" = type { %"class.absl::optional_internal::optional_data_dtor_base.750" }
%"class.absl::optional_internal::optional_data_dtor_base.750" = type { i8, %union.anon.751 }
%union.anon.751 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.752, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.753" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.753" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.367 }
%class.scoped_refptr.367 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.368", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.368" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.369" }
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__cxx_atomic_impl.372" }
%"struct.std::__1::__cxx_atomic_impl.372" = type { %"struct.std::__1::__cxx_atomic_base_impl.373" }
%"struct.std::__1::__cxx_atomic_base_impl.373" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.758 }
%class.scoped_refptr.758 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.830", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.752, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.830" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.759 }
%class.scoped_refptr.759 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.763", %class.scoped_refptr.764 }
%"class.base::RepeatingCallback.763" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.764 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.765", [4 x i8] }>
%"class.base::RefCountedThreadSafe.765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.775", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.781" }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.781" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.782" = type { %"class.std::__1::__tree.783" }
%"class.std::__1::__tree.783" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.793" = type { %"class.std::__1::__tree.794" }
%"class.std::__1::__tree.794" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.795", %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.795" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::OnceCallback.802" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.752 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.366" }>
%"class.base::RefCountedThreadSafe.366" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.803" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.816" = type { %"class.blink::MemberBase.817" }
%"class.blink::MemberBase.817" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.679", i8, [7 x i8], %"class.WTF::Vector.694", %"class.blink::HeapVector.822", i8, [7 x i8], %"class.WTF::HashSet.663", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.822" = type { %"class.WTF::Vector.825" }
%"class.WTF::Vector.825" = type { %"class.WTF::VectorBuffer.826" }
%"class.WTF::VectorBuffer.826" = type { %"class.WTF::VectorBufferBase.827" }
%"class.WTF::VectorBufferBase.827" = type { %"class.blink::Member.828"*, i32, i32 }
%"class.blink::Member.828" = type opaque
%"class.blink::Member.140" = type { %"class.blink::MemberBase.141" }
%"class.blink::MemberBase.141" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.148" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::KURL"* }
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.86", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.88, %"class.WTF::Vector.89", %"class.WTF::Vector.89", %"class.blink::Member", %"class.blink::Member.94", %"class.blink::HeapHashSet", %"class.blink::Member.27", %"class.WTF::HashSet.102", %"class.WTF::TextPosition", %"class.blink::Member.106", %"class.blink::HeapVector.108", %"class.blink::Member.115" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.88 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.96" }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.102" = type { %"class.WTF::HashTable.103" }
%"class.WTF::HashTable.103" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.108" = type { %"class.WTF::Vector.111" }
%"class.WTF::Vector.111" = type { %"class.WTF::VectorBuffer.112" }
%"class.WTF::VectorBuffer.112" = type { %"class.WTF::VectorBufferBase.113" }
%"class.WTF::VectorBufferBase.113" = type { %"class.blink::Member.94"*, i32, i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.168 }
%class.scoped_refptr.168 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.27", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.377" }
%"class.blink::HeapHashMap.377" = type { %"class.WTF::HashMap.380" }
%"class.WTF::HashMap.380" = type { %"class.WTF::HashTable.381" }
%"class.WTF::HashTable.381" = type <{ %"struct.WTF::KeyValuePair.383"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.383" = type opaque
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.386" = type { %"class.WTF::HashSet.389" }
%"class.WTF::HashSet.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"class.blink::WeakMember.392"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.392" = type opaque
%"class.blink::HeapHashSet.393" = type { %"class.WTF::HashSet.396" }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %"class.blink::WeakMember.399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.399" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.78" }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.410" = type { %"class.WTF::HashMap.413" }
%"class.WTF::HashMap.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type opaque
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.45" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.42 }
%class.scoped_refptr.42 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.43", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.43" = type { %"class.base::RefCounted.44" }
%"class.base::RefCounted.44" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.49", %"class.blink::Member.51", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.49" = type { %"class.WTF::SingleThreadedBitField.50" }
%"class.WTF::SingleThreadedBitField.50" = type { i32 }
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.54", %"class.WTF::AtomicString", %"class.WTF::Vector.56" }
%"class.WTF::RefCounted.54" = type { %"class.base::RefCounted.55" }
%"class.base::RefCounted.55" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58", [32 x i8] }
%"class.WTF::VectorBufferBase.58" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.430" = type { %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"class.blink::Member.436"*, i32, i32 }
%"class.blink::Member.436" = type opaque
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.444" = type { %"class.WTF::HashSet.447" }
%"class.WTF::HashSet.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"class.blink::WeakMember.450"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.450" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.451", i32, [4 x i8] }>
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"struct.std::__1::pair.454"*, i32, i32 }
%"struct.std::__1::pair.454" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.63" }
%"class.WTF::Vector.63" = type { %"class.WTF::VectorBuffer.64" }
%"class.WTF::VectorBuffer.64" = type { %"class.WTF::VectorBufferBase.65" }
%"class.WTF::VectorBufferBase.65" = type { %"class.blink::Member.40"*, i32, i32 }
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.27" }
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.495" = type { %"class.blink::MemberBase.496" }
%"class.blink::MemberBase.496" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.497" = type { %"class.blink::MemberBase.498" }
%"class.blink::MemberBase.498" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.374", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.365, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.365 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.374" = type { %"class.blink::MemberBase.28" }
%"class.blink::HeapHashSet.501" = type { %"class.WTF::HashSet.504" }
%"class.WTF::HashSet.504" = type { %"class.WTF::HashTable.505" }
%"class.WTF::HashTable.505" = type <{ %"class.blink::Member.507"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.507" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.518" = type { %"class.std::__1::__compressed_pair.519" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.538" = type { %"class.WTF::VectorBuffer.539" }
%"class.WTF::VectorBuffer.539" = type { %"class.WTF::VectorBufferBase.540" }
%"class.WTF::VectorBufferBase.540" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.543" = type { %"class.WTF::HashMap.546" }
%"class.WTF::HashMap.546" = type { %"class.WTF::HashTable.547" }
%"class.WTF::HashTable.547" = type <{ %"struct.WTF::KeyValuePair.549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.549" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.558" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.562" = type { %"class.WTF::HashMap.565" }
%"class.WTF::HashMap.565" = type { %"class.WTF::HashTable.566" }
%"class.WTF::HashTable.566" = type <{ %"struct.WTF::KeyValuePair.568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.568" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.569" }
%"class.blink::HeapHashSet.569" = type { %"class.WTF::HashSet.572" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.blink::WeakMember.575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.575" = type opaque
%"class.blink::Member.576" = type { %"class.blink::MemberBase.577" }
%"class.blink::MemberBase.577" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.27", %"class.blink::HeapHashSet.585", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.592", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.585" = type { %"class.WTF::HashSet.588" }
%"class.WTF::HashSet.588" = type { %"class.WTF::HashTable.589" }
%"class.WTF::HashTable.589" = type <{ %"class.blink::Member.591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.591" = type opaque
%"class.blink::HeapTaskRunnerTimer.592" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.593", { i64, i64 } }
%"class.blink::WeakMember.593" = type { %"class.blink::MemberBase.579" }
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.36" }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.40", i32, %"class.blink::HeapVector" }
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::HeapHashMap.75"* }
%"class.blink::HeapHashMap.75" = type opaque
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.78" = type { %"class.WTF::Vector.81" }
%"class.WTF::Vector.81" = type { %"class.WTF::VectorBuffer.82" }
%"class.WTF::VectorBuffer.82" = type { %"class.WTF::VectorBufferBase.83" }
%"class.WTF::VectorBufferBase.83" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::ParkableString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.WTF::Vector.18", i8, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::ProcessingInstruction" = type { %"class.blink::CharacterData", %"class.blink::ResourceClient.base", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1004", %"class.blink::StyleEngineContext", i8, i8, i8, i8, %"class.blink::Member.1006" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.848", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.852", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.872", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.963", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.979", %"class.blink::ResourceResponse", %class.scoped_refptr.981, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.857", i8, %"class.absl::optional.862", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.857" = type { %"class.absl::optional_internal::optional_data.858" }
%"class.absl::optional_internal::optional_data.858" = type { %"class.absl::optional_internal::optional_data_base.859" }
%"class.absl::optional_internal::optional_data_base.859" = type { %"class.absl::optional_internal::optional_data_dtor_base.860" }
%"class.absl::optional_internal::optional_data_dtor_base.860" = type { i8, [7 x i8], %union.anon.861 }
%union.anon.861 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.862" = type { %"class.absl::optional_internal::optional_data.863" }
%"class.absl::optional_internal::optional_data.863" = type { %"class.absl::optional_internal::optional_data_base.864" }
%"class.absl::optional_internal::optional_data_base.864" = type { %"class.absl::optional_internal::optional_data_dtor_base.865" }
%"class.absl::optional_internal::optional_data_dtor_base.865" = type { i8, %union.anon.866 }
%union.anon.866 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.867", %"class.WTF::Vector.718" }
%"class.WTF::Vector.867" = type { %"class.WTF::VectorBuffer.868" }
%"class.WTF::VectorBuffer.868" = type { %"class.WTF::VectorBufferBase.869" }
%"class.WTF::VectorBufferBase.869" = type { i32*, i32, i32 }
%"class.WTF::Vector.872" = type { %"class.WTF::VectorBuffer.873" }
%"class.WTF::VectorBuffer.873" = type { %"class.WTF::VectorBufferBase.874" }
%"class.WTF::VectorBufferBase.874" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.959" }
%"class.WTF::HashMap.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"struct.WTF::KeyValuePair.962"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.962" = type <{ %"class.blink::WeakMember.2007", i32, [4 x i8] }>
%"class.blink::WeakMember.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.848", i8, [7 x i8] }>
%"class.blink::HeapHashSet.963" = type { %"class.WTF::HashSet.966" }
%"class.WTF::HashSet.966" = type { %"class.WTF::HashTable.967" }
%"class.WTF::HashTable.967" = type <{ %"class.blink::WeakMember.969"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.969" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.970", i8, i8, %class.scoped_refptr.168, %class.scoped_refptr.975, %class.scoped_refptr.977 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ %"struct.std::__1::pair.974"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.974" = type opaque
%class.scoped_refptr.975 = type { %"class.base::RefCountedData.976"* }
%"class.base::RefCountedData.976" = type opaque
%class.scoped_refptr.977 = type { %"class.base::RefCountedData.978"* }
%"class.base::RefCountedData.978" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.923" }
%"class.base::time_internal::TimeBase.923" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.626, %class.scoped_refptr.626, %class.scoped_refptr.626, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.880, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.892", %"class.absl::optional.897", %"class.absl::optional.907", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.912", %"class.absl::optional.907", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.907", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.912", %"class.absl::optional.917", i8, %class.scoped_refptr.922 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.875" }
%"class.WTF::HashMap.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"struct.WTF::KeyValuePair.879"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.879" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.880 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.881", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.890, i8, %"class.url::Origin" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.882" }
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"class.std::__1::unique_ptr.884"*, %"class.std::__1::unique_ptr.884"*, %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.std::__1::unique_ptr.884"* }
%class.scoped_refptr.890 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.891", [4 x i8] }>
%"class.base::RefCountedThreadSafe.891" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.892" = type { %"class.absl::optional_internal::optional_data.893" }
%"class.absl::optional_internal::optional_data.893" = type { %"class.absl::optional_internal::optional_data_base.894" }
%"class.absl::optional_internal::optional_data_base.894" = type { %"class.absl::optional_internal::optional_data_dtor_base.895" }
%"class.absl::optional_internal::optional_data_dtor_base.895" = type { i8, %union.anon.896 }
%union.anon.896 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.897" = type { %"class.absl::optional_internal::optional_data.898" }
%"class.absl::optional_internal::optional_data.898" = type { %"class.absl::optional_internal::optional_data_base.899" }
%"class.absl::optional_internal::optional_data_base.899" = type { %"class.absl::optional_internal::optional_data_dtor_base.900" }
%"class.absl::optional_internal::optional_data_dtor_base.900" = type { i8, %union.anon.901 }
%union.anon.901 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.902", %"class.WTF::Vector.718", %"class.WTF::String" }
%"class.WTF::Vector.902" = type { %"class.WTF::VectorBuffer.903" }
%"class.WTF::VectorBuffer.903" = type { %"class.WTF::VectorBufferBase.904" }
%"class.WTF::VectorBufferBase.904" = type { %class.scoped_refptr.626*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.742", %"class.absl::optional.742" }
%"class.absl::optional.907" = type { %"class.absl::optional_internal::optional_data.908" }
%"class.absl::optional_internal::optional_data.908" = type { %"class.absl::optional_internal::optional_data_base.909" }
%"class.absl::optional_internal::optional_data_base.909" = type { %"class.absl::optional_internal::optional_data_dtor_base.910" }
%"class.absl::optional_internal::optional_data_dtor_base.910" = type { i8, %union.anon.911 }
%union.anon.911 = type { %"class.WTF::String" }
%"class.absl::optional.912" = type { %"class.absl::optional_internal::optional_data.913" }
%"class.absl::optional_internal::optional_data.913" = type { %"class.absl::optional_internal::optional_data_base.914" }
%"class.absl::optional_internal::optional_data_base.914" = type { %"class.absl::optional_internal::optional_data_dtor_base.915" }
%"class.absl::optional_internal::optional_data_dtor_base.915" = type { i8, %union.anon.916 }
%union.anon.916 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.917" = type { %"class.absl::optional_internal::optional_data.918" }
%"class.absl::optional_internal::optional_data.918" = type { %"class.absl::optional_internal::optional_data_base.919" }
%"class.absl::optional_internal::optional_data_base.919" = type { %"class.absl::optional_internal::optional_data_dtor_base.920" }
%"class.absl::optional_internal::optional_data_dtor_base.920" = type { i8, %union.anon.921 }
%union.anon.921 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.922 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1935", %"class.base::internal::flat_tree.1936" }
%"class.base::RefCountedThreadSafe.1935" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1936" = type { %"class.std::__1::vector.1937" }
%"class.std::__1::vector.1937" = type { %"class.std::__1::__vector_base.1938" }
%"class.std::__1::__vector_base.1938" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1939" }
%"class.std::__1::__compressed_pair.1939" = type { %"struct.std::__1::__compressed_pair_elem.1940" }
%"struct.std::__1::__compressed_pair_elem.1940" = type { i32* }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.924", %class.scoped_refptr.938, %class.scoped_refptr.939, %"struct.blink::CacheControlHeader", %"class.absl::optional.742", %"class.absl::optional.940", %"class.absl::optional.940", %"class.absl::optional.940", i64, %"class.blink::KURL", %"class.WTF::Vector.945", %"class.WTF::String", %"class.WTF::Vector.718", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.912", %"class.WTF::Vector.718", %"class.blink::KURL", %"class.absl::optional.950" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.924" = type { %"class.absl::optional_internal::optional_data.925" }
%"class.absl::optional_internal::optional_data.925" = type { %"class.absl::optional_internal::optional_data_base.926" }
%"class.absl::optional_internal::optional_data_base.926" = type { %"class.absl::optional_internal::optional_data_dtor_base.927" }
%"class.absl::optional_internal::optional_data_dtor_base.927" = type { i8, %union.anon.928 }
%union.anon.928 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.718", %"class.WTF::String", i64, i64, %"class.WTF::Vector.929", %"class.WTF::Vector.933" }
%"class.WTF::Vector.929" = type { %"class.WTF::VectorBuffer.930" }
%"class.WTF::VectorBuffer.930" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.934" }
%"class.WTF::VectorBuffer.934" = type { %"class.WTF::VectorBufferBase.935" }
%"class.WTF::VectorBufferBase.935" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.938 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.939 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.940" = type { %"class.absl::optional_internal::optional_data.941" }
%"class.absl::optional_internal::optional_data.941" = type { %"class.absl::optional_internal::optional_data_base.942" }
%"class.absl::optional_internal::optional_data_base.942" = type { %"class.absl::optional_internal::optional_data_dtor_base.943" }
%"class.absl::optional_internal::optional_data_dtor_base.943" = type { i8, %union.anon.944 }
%union.anon.944 = type { %"class.base::Time" }
%"class.WTF::Vector.945" = type { %"class.WTF::VectorBuffer.946" }
%"class.WTF::VectorBuffer.946" = type { %"class.WTF::VectorBufferBase.947" }
%"class.WTF::VectorBufferBase.947" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.950" = type { %"class.absl::optional_internal::optional_data.951" }
%"class.absl::optional_internal::optional_data.951" = type { %"class.absl::optional_internal::optional_data_base.952" }
%"class.absl::optional_internal::optional_data_base.952" = type { %"class.absl::optional_internal::optional_data_dtor_base.953" }
%"class.absl::optional_internal::optional_data_dtor_base.953" = type { i8, %union.anon.954 }
%union.anon.954 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.981 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.982", i64, %"class.WTF::Vector.984", %"class.WTF::Vector.989" }
%"class.WTF::RefCounted.982" = type { %"class.base::RefCounted.983" }
%"class.base::RefCounted.983" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.984" = type { %"class.WTF::VectorBuffer.985" }
%"class.WTF::VectorBuffer.985" = type { %"class.WTF::VectorBufferBase.986" }
%"class.WTF::VectorBufferBase.986" = type { i8*, i32, i32 }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"class.std::__1::unique_ptr.992"*, i32, i32 }
%"class.std::__1::unique_ptr.992" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.995" }
%"class.std::__1::__tree.995" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.996", %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::StyleSheet"* }
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ProcessingInstruction::DetachableEventListener"* }
%"class.blink::ProcessingInstruction::DetachableEventListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.831" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.831" = type { %"class.v8::TracedReference.832" }
%"class.v8::TracedReference.832" = type { %"class.v8::BasicTracedReference.833" }
%"class.v8::BasicTracedReference.833" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend.834" = type { %"class.WTF::StringAppend.835", %"class.WTF::String" }
%"class.WTF::StringAppend.835" = type { %"class.WTF::StringAppend.836", i8* }
%"class.WTF::StringAppend.836" = type { i8*, %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.834", i8* }
%"class.WTF::StringTypeAdapter.2025" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.837" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.2027" = type { %"class.WTF::StringTypeAdapter.2028" }
%"class.WTF::StringTypeAdapter.2028" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.838, i32, i8, i8, [2 x i8] }>
%union.anon.838 = type { %"class.WTF::Vector.839" }
%"class.WTF::Vector.839" = type { %"class.WTF::VectorBuffer.840" }
%"class.WTF::VectorBuffer.840" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1022", %"class.WTF::String"* }
%"class.blink::HeapVector.1022" = type { %"class.WTF::Vector.1025" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::MutationObserverInterestGroup" = type { %"class.blink::HeapHashMap.1010", i8, [7 x i8] }
%"class.blink::HeapHashMap.1010" = type { %"class.WTF::HashMap.1013" }
%"class.WTF::HashMap.1013" = type { %"class.WTF::HashTable.1014" }
%"class.WTF::HashTable.1014" = type <{ %"struct.WTF::KeyValuePair.1016"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1016" = type opaque
%"class.blink::MutationRecord" = type { %"class.blink::ScriptWrappable", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1017" }
%"class.absl::optional.1017" = type { %"class.absl::optional_internal::optional_data.1018" }
%"class.absl::optional_internal::optional_data.1018" = type { %"class.absl::optional_internal::optional_data_base.1019" }
%"class.absl::optional_internal::optional_data_base.1019" = type { %"class.absl::optional_internal::optional_data_dtor_base.1020" }
%"class.absl::optional_internal::optional_data_dtor_base.1020" = type { i8, %union.anon.1021 }
%union.anon.1021 = type { i64 }
%"class.blink::MutationEvent" = type <{ %"class.blink::Event", %"class.blink::Member", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, [6 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1029", %"class.blink::Member.1029", %"class.blink::Member.1031", %"class.blink::Member.1033", %"class.base::TimeTicks" }
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::Event"* }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1059" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1047" }
%"class.blink::HeapVector.1047" = type { %"class.WTF::Vector.1050" }
%"class.WTF::Vector.1050" = type { %"class.WTF::VectorBuffer.1051" }
%"class.WTF::VectorBuffer.1051" = type { %"class.WTF::VectorBufferBase.1052", [32 x i8] }
%"class.WTF::VectorBufferBase.1052" = type { %"struct.std::__1::pair.1053"*, i32, i32 }
%"struct.std::__1::pair.1053" = type { %"class.WTF::AtomicString", %"class.blink::Member.1054" }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::HeapVector.1056"* }
%"class.blink::HeapVector.1056" = type opaque
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.WTF::Vector.1062"* }
%"class.WTF::Vector.1062" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1039, %"class.blink::Member.1040", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1039 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1042" }
%"class.blink::Persistent.1042" = type { %"class.blink::PersistentBase.1043" }
%"class.blink::PersistentBase.1043" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1044" }
%"class.base::StrongAlias.1044" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1066", %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.blink::Member.1072", i8, %"class.WTF::Vector.1074" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1182", %"class.blink::Member.1184", %"class.blink::Member.1186", i8, i32, i8, i32, %"class.blink::Member.1188", %"class.blink::Member.1068", %"class.blink::FrameLifecycle", %"class.blink::Member.1066", %"class.blink::Member.1066", %"class.blink::Member.1066", %"class.blink::Member.1066", %"class.blink::Member.1066", %"class.blink::Member.1066", %"class.blink::Member.1190", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1200", i8, %"class.base::UnguessableToken", %"class.absl::optional.1202", %"class.absl::optional.912", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1066", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1182" = type { %"class.blink::MemberBase.1183" }
%"class.blink::MemberBase.1183" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1184" = type { %"class.blink::MemberBase.1185" }
%"class.blink::MemberBase.1185" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1186" = type { %"class.blink::MemberBase.1187" }
%"class.blink::MemberBase.1187" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1214", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1222", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1236", %"class.blink::FrameLoader", %"class.blink::Member.1257", %"class.blink::Member.40", %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1277", %"class.blink::Member.1279", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1281", %class.scoped_refptr.1501, %"class.blink::Member.1502", %"class.blink::Member.1504", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", %"class.blink::Member.1521", %"class.blink::Member.1523", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1527", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1533", %"class.std::__1::unique_ptr.1534", %"class.absl::optional.912", i32, [4 x i8], %"class.std::__1::unique_ptr.1540", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1548", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1553", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1558", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1561", %"class.blink::Member.1563", %"class.blink::Member.1565", %"class.blink::Member.1567", %"class.mojo::StructPtr.1570", %"class.blink::Member.1579", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1581", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1214" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1215" }
%"class.blink::HeapHashMap.1215" = type { %"class.WTF::HashMap.1218" }
%"class.WTF::HashMap.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ %"struct.WTF::KeyValuePair.1221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1221" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1225", %"class.base::WeakPtrFactory.1230" }
%"class.WTF::HashMap.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"struct.WTF::KeyValuePair.1229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1229" = type opaque
%"class.base::WeakPtrFactory.1230" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1234" }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1946" }
%"class.blink::WeakMember.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1948", i64, %"class.std::__1::map.1949", i8*, i64, %"class.base::WeakPtrFactory.1958" }
%"class.base::RepeatingCallback.1948" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1949" = type { %"class.std::__1::__tree.1950" }
%"class.std::__1::__tree.1950" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1951", %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1951" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::WeakPtrFactory.1958" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1236" = type { %"class.WTF::HashSet.1239" }
%"class.WTF::HashSet.1239" = type { %"class.WTF::HashTable.1240" }
%"class.WTF::HashTable.1240" = type <{ %"class.blink::WeakMember.1242"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1242" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1190", %"class.blink::Member.1243", %"class.blink::Member.1245", %"class.std::__1::unique_ptr.1247", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1253" }
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1253" = type { %"class.WTF::HashTable.1254" }
%"class.WTF::HashTable.1254" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1660", %"class.blink::Member.1190", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1665", i8, i32, %"class.blink::Color", %"class.absl::optional.1667", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1672", %"class.blink::Member.1674", %"class.blink::Member.1674", %"class.std::__1::unique_ptr.1677", i32, [4 x i8], %"class.WTF::HashSet.1680", %"class.blink::Member.1687", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1689", %"class.blink::HeapHashSet.1696", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1704", i8, %"class.blink::Member.1710", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1722", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1736", i8, %"class.std::__1::unique_ptr.1742", %"class.std::__1::unique_ptr.1859", %"class.WTF::Vector.1865", i32, %class.scoped_refptr.1870, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1871", %"class.blink::Member.1873", %"class.blink::Member.1875", %"class.blink::HeapHashSet.1877", %"class.blink::HeapHashSet.1884", %"class.std::__1::unique_ptr.1891", %"class.std::__1::unique_ptr.1897", %"class.WTF::Vector.125" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1660" = type { %"class.WTF::HashTable.1661" }
%"class.WTF::HashTable.1661" = type <{ %class.scoped_refptr.1664*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1664 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1665" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1666", { i64, i64 } }
%"class.blink::WeakMember.1666" = type { %"class.blink::MemberBase.1258" }
%"class.absl::optional.1667" = type { %"class.absl::optional_internal::optional_data.1668" }
%"class.absl::optional_internal::optional_data.1668" = type { %"class.absl::optional_internal::optional_data_base.1669" }
%"class.absl::optional_internal::optional_data_base.1669" = type { %"class.absl::optional_internal::optional_data_dtor_base.1670" }
%"class.absl::optional_internal::optional_data_dtor_base.1670" = type { i8, %union.anon.1671 }
%union.anon.1671 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1672" = type { %"class.blink::MemberBase.1673" }
%"class.blink::MemberBase.1673" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1674" = type { %"class.blink::MemberBase.1675" }
%"class.blink::MemberBase.1675" = type { %"class.blink::HeapHashSet.1676"* }
%"class.blink::HeapHashSet.1676" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.WTF::HashSet.1680"* }
%"class.WTF::HashSet.1680" = type { %"class.WTF::HashTable.1681" }
%"class.WTF::HashTable.1681" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1689" = type { %"class.WTF::HashSet.1692" }
%"class.WTF::HashSet.1692" = type { %"class.WTF::HashTable.1693" }
%"class.WTF::HashTable.1693" = type <{ %"class.blink::Member.1695"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1695" = type opaque
%"class.blink::HeapHashSet.1696" = type { %"class.WTF::HashSet.1699" }
%"class.WTF::HashSet.1699" = type { %"class.WTF::HashTable.1700" }
%"class.WTF::HashTable.1700" = type <{ %"class.blink::Member.1702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1704" = type { %"class.std::__1::__compressed_pair.1705" }
%"class.std::__1::__compressed_pair.1705" = type { %"struct.std::__1::__compressed_pair_elem.1706" }
%"struct.std::__1::__compressed_pair_elem.1706" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1714", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1714" = type { %"class.WTF::HashTable.1715" }
%"class.WTF::HashTable.1715" = type <{ %"struct.WTF::KeyValuePair.1717"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1717" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1718", i32, i32 }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1722" = type { %"class.WTF::LinkedHashSet.1725" }
%"class.WTF::LinkedHashSet.1725" = type { %"class.WTF::HashMap.1726", %"class.WTF::VectorBackedLinkedList.1730" }
%"class.WTF::HashMap.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"struct.WTF::KeyValuePair.1729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1729" = type opaque
%"class.WTF::VectorBackedLinkedList.1730" = type { %"class.WTF::Vector.1731", i32, i32 }
%"class.WTF::Vector.1731" = type { %"class.WTF::VectorBuffer.1732" }
%"class.WTF::VectorBuffer.1732" = type { %"class.WTF::VectorBufferBase.1733" }
%"class.WTF::VectorBufferBase.1733" = type { %"class.WTF::VectorBackedLinkedListNode.1734"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1734" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1736" = type { %"class.std::__1::__compressed_pair.1737" }
%"class.std::__1::__compressed_pair.1737" = type { %"struct.std::__1::__compressed_pair_elem.1738" }
%"struct.std::__1::__compressed_pair_elem.1738" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1742" = type { %"class.std::__1::__compressed_pair.1743" }
%"class.std::__1::__compressed_pair.1743" = type { %"struct.std::__1::__compressed_pair_elem.1744" }
%"struct.std::__1::__compressed_pair_elem.1744" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1745, %class.scoped_refptr.1745, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1836", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1841", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1745 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1746", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1753" }
%"class.WTF::RefCounted.1746" = type { %"class.base::RefCounted.1747" }
%"class.base::RefCounted.1747" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1748", i32, [4 x i8] }>
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1750" }
%"class.WTF::VectorBufferBase.1750" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1759", %"class.std::__1::unique_ptr.1808", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1756, %class.scoped_refptr.1757, %class.scoped_refptr.1758 }
%class.scoped_refptr.1756 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1772", i8, i8, %class.scoped_refptr.1756, i32, i32 }
%"class.WTF::RefCounted.1772" = type { %"class.base::RefCounted.1773" }
%"class.base::RefCounted.1773" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1757 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1921" }
%"class.blink::PaintPropertyNode.1921" = type { %"class.WTF::RefCounted.1922", i8, i8, %class.scoped_refptr.1757, i32, i32 }
%"class.WTF::RefCounted.1922" = type { %"class.base::RefCounted.1923" }
%"class.base::RefCounted.1923" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1758 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1918" }
%"class.blink::PaintPropertyNode.1918" = type { %"class.WTF::RefCounted.1919", i8, i8, %class.scoped_refptr.1758, i32, i32 }
%"class.WTF::RefCounted.1919" = type { %"class.base::RefCounted.1920" }
%"class.base::RefCounted.1920" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1762", %"class.WTF::Vector.1767", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1762" = type { %"class.WTF::VectorBuffer.1763" }
%"class.WTF::VectorBuffer.1763" = type { %"class.WTF::VectorBufferBase.1764" }
%"class.WTF::VectorBufferBase.1764" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769" }
%"class.WTF::VectorBufferBase.1769" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1787" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1780, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1781", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1774" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1780 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1903", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1903" = type { %"class.WTF::RefCounted.1904", i8, i8, %class.scoped_refptr.1780, i32, i32 }
%"class.WTF::RefCounted.1904" = type { %"class.base::RefCounted.1905" }
%"class.base::RefCounted.1905" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1906" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1906" = type { %"class.absl::optional_internal::optional_data.1907" }
%"class.absl::optional_internal::optional_data.1907" = type { %"class.absl::optional_internal::optional_data_base.1908" }
%"class.absl::optional_internal::optional_data_base.1908" = type { %"class.absl::optional_internal::optional_data_dtor_base.1909" }
%"class.absl::optional_internal::optional_data_dtor_base.1909" = type { i8, %union.anon.1910 }
%union.anon.1910 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1911", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1911" = type { %"class.std::__1::__vector_base.1912" }
%"class.std::__1::__vector_base.1912" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1913" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1787" = type { %"class.std::__1::__compressed_pair.1788" }
%"class.std::__1::__compressed_pair.1788" = type { %"struct.std::__1::__compressed_pair_elem.1789" }
%"struct.std::__1::__compressed_pair_elem.1789" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1790", %"class.std::__1::unique_ptr.1796", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1790" = type { %"class.std::__1::__compressed_pair.1791" }
%"class.std::__1::__compressed_pair.1791" = type { %"struct.std::__1::__compressed_pair_elem.1792" }
%"struct.std::__1::__compressed_pair_elem.1792" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1796" = type { %"class.std::__1::__compressed_pair.1797" }
%"class.std::__1::__compressed_pair.1797" = type { %"struct.std::__1::__compressed_pair_elem.1798" }
%"struct.std::__1::__compressed_pair_elem.1798" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1808" = type { %"class.std::__1::__compressed_pair.1809" }
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1811", %"class.absl::optional.1811" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, [3 x i8], %union.anon.1815 }
%union.anon.1815 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1753"*, %"class.absl::optional.1821", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1821" = type { %"class.absl::optional_internal::optional_data.1822" }
%"class.absl::optional_internal::optional_data.1822" = type { %"class.absl::optional_internal::optional_data_base.1823" }
%"class.absl::optional_internal::optional_data_base.1823" = type { %"class.absl::optional_internal::optional_data_dtor_base.1824" }
%"class.absl::optional_internal::optional_data_dtor_base.1824" = type { i8, %union.anon.1825 }
%union.anon.1825 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1826", %"class.WTF::Vector.1831" }
%"class.WTF::Vector.1826" = type { %"class.WTF::VectorBuffer.1827" }
%"class.WTF::VectorBuffer.1827" = type { %"class.WTF::VectorBufferBase.1828", [128 x i8] }
%"class.WTF::VectorBufferBase.1828" = type { i32*, i32, i32 }
%"class.WTF::Vector.1831" = type { %"class.WTF::VectorBuffer.1832" }
%"class.WTF::VectorBuffer.1832" = type { %"class.WTF::VectorBufferBase.1833", [128 x i8] }
%"class.WTF::VectorBufferBase.1833" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1836" = type { %"class.WTF::VectorBuffer.1837" }
%"class.WTF::VectorBuffer.1837" = type { %"class.WTF::VectorBufferBase.1838" }
%"class.WTF::VectorBufferBase.1838" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1841" = type { %"class.WTF::HashTable.1842" }
%"class.WTF::HashTable.1842" = type <{ %"struct.WTF::KeyValuePair.1845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1845" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1846", %"class.WTF::Vector.1851" }
%"class.WTF::HashMap.1846" = type { %"class.WTF::HashTable.1847" }
%"class.WTF::HashTable.1847" = type <{ %"struct.WTF::KeyValuePair.1850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1850" = type opaque
%"class.WTF::Vector.1851" = type { %"class.WTF::VectorBuffer.1852" }
%"class.WTF::VectorBuffer.1852" = type { %"class.WTF::VectorBufferBase.1853" }
%"class.WTF::VectorBufferBase.1853" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1859" = type { %"class.std::__1::__compressed_pair.1860" }
%"class.std::__1::__compressed_pair.1860" = type { %"struct.std::__1::__compressed_pair_elem.1861" }
%"struct.std::__1::__compressed_pair_elem.1861" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1865" = type { %"class.WTF::VectorBuffer.1866" }
%"class.WTF::VectorBuffer.1866" = type { %"class.WTF::VectorBufferBase.1867" }
%"class.WTF::VectorBufferBase.1867" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1870 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1877" = type { %"class.WTF::HashSet.1880" }
%"class.WTF::HashSet.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"class.blink::WeakMember.1883"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1883" = type opaque
%"class.blink::HeapHashSet.1884" = type { %"class.WTF::HashSet.1887" }
%"class.WTF::HashSet.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"class.blink::WeakMember.1890"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1890" = type opaque
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1897" = type { %"class.std::__1::__compressed_pair.1898" }
%"class.std::__1::__compressed_pair.1898" = type { %"struct.std::__1::__compressed_pair_elem.1899" }
%"struct.std::__1::__compressed_pair_elem.1899" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.940", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1190", %"class.blink::Member.1265", %"class.blink::Member.1267", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1269", %"class.blink::Member.1275" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.374" }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1269" = type { %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1281" = type { %"class.blink::MemberBase.1282" }
%"class.blink::MemberBase.1282" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1292", %"class.blink::HeapListHashSet.1303", %"class.blink::HeapListHashSet.1314", %"class.blink::HeapListHashSet.1325", %"class.blink::HeapListHashSet.1336", %"class.blink::HeapListHashSet.1347", %"class.blink::HeapListHashSet.1358", %"class.blink::HeapListHashSet.1369", %"class.blink::HeapListHashSet.1380", %"class.blink::HeapListHashSet.1391", %"class.blink::HeapListHashSet.1402", %"class.blink::HeapListHashSet.1413", %"class.blink::HeapListHashSet.1424", %"class.blink::HeapListHashSet.1435", %"class.blink::HeapListHashSet.1446", %"class.blink::HeapListHashSet.1457", %"class.blink::HeapListHashSet.1468", %"class.blink::HeapListHashSet.1479", %"class.blink::HeapListHashSet.1490" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1288", %"class.blink::Member.1290", %"class.blink::Member.1290", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1288" = type <{ %"class.blink::Member.1290"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1504", %"class.blink::Member.1290", %"class.blink::Member.1290" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1292" = type { %"class.WTF::ListHashSet.base.1302", [7 x i8] }
%"class.WTF::ListHashSet.base.1302" = type <{ %"class.WTF::HashTable.1297", %"class.blink::Member.1299", %"class.blink::Member.1299", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1297" = type <{ %"class.blink::Member.1299"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::HeapListHashSetNode.1301"* }
%"class.blink::HeapListHashSetNode.1301" = type { %"class.blink::Member.1654", %"class.blink::Member.1299", %"class.blink::Member.1299" }
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1303" = type { %"class.WTF::ListHashSet.base.1313", [7 x i8] }
%"class.WTF::ListHashSet.base.1313" = type <{ %"class.WTF::HashTable.1308", %"class.blink::Member.1310", %"class.blink::Member.1310", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1308" = type <{ %"class.blink::Member.1310"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1310" = type { %"class.blink::MemberBase.1311" }
%"class.blink::MemberBase.1311" = type { %"class.blink::HeapListHashSetNode.1312"* }
%"class.blink::HeapListHashSetNode.1312" = type { %"class.blink::Member.1650", %"class.blink::Member.1310", %"class.blink::Member.1310" }
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1314" = type { %"class.WTF::ListHashSet.base.1324", [7 x i8] }
%"class.WTF::ListHashSet.base.1324" = type <{ %"class.WTF::HashTable.1319", %"class.blink::Member.1321", %"class.blink::Member.1321", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1319" = type <{ %"class.blink::Member.1321"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1321" = type { %"class.blink::MemberBase.1322" }
%"class.blink::MemberBase.1322" = type { %"class.blink::HeapListHashSetNode.1323"* }
%"class.blink::HeapListHashSetNode.1323" = type { %"class.blink::Member.1646", %"class.blink::Member.1321", %"class.blink::Member.1321" }
%"class.blink::Member.1646" = type { %"class.blink::MemberBase.1647" }
%"class.blink::MemberBase.1647" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1325" = type { %"class.WTF::ListHashSet.base.1335", [7 x i8] }
%"class.WTF::ListHashSet.base.1335" = type <{ %"class.WTF::HashTable.1330", %"class.blink::Member.1332", %"class.blink::Member.1332", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1330" = type <{ %"class.blink::Member.1332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::HeapListHashSetNode.1334"* }
%"class.blink::HeapListHashSetNode.1334" = type { %"class.blink::Member.1642", %"class.blink::Member.1332", %"class.blink::Member.1332" }
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1336" = type { %"class.WTF::ListHashSet.base.1346", [7 x i8] }
%"class.WTF::ListHashSet.base.1346" = type <{ %"class.WTF::HashTable.1341", %"class.blink::Member.1343", %"class.blink::Member.1343", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1341" = type <{ %"class.blink::Member.1343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::HeapListHashSetNode.1345"* }
%"class.blink::HeapListHashSetNode.1345" = type { %"class.blink::Member.1638", %"class.blink::Member.1343", %"class.blink::Member.1343" }
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1347" = type { %"class.WTF::ListHashSet.base.1357", [7 x i8] }
%"class.WTF::ListHashSet.base.1357" = type <{ %"class.WTF::HashTable.1352", %"class.blink::Member.1354", %"class.blink::Member.1354", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1352" = type <{ %"class.blink::Member.1354"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::HeapListHashSetNode.1356"* }
%"class.blink::HeapListHashSetNode.1356" = type { %"class.blink::Member.1634", %"class.blink::Member.1354", %"class.blink::Member.1354" }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1358" = type { %"class.WTF::ListHashSet.base.1368", [7 x i8] }
%"class.WTF::ListHashSet.base.1368" = type <{ %"class.WTF::HashTable.1363", %"class.blink::Member.1365", %"class.blink::Member.1365", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1363" = type <{ %"class.blink::Member.1365"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1365" = type { %"class.blink::MemberBase.1366" }
%"class.blink::MemberBase.1366" = type { %"class.blink::HeapListHashSetNode.1367"* }
%"class.blink::HeapListHashSetNode.1367" = type { %"class.blink::Member.1630", %"class.blink::Member.1365", %"class.blink::Member.1365" }
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1369" = type { %"class.WTF::ListHashSet.base.1379", [7 x i8] }
%"class.WTF::ListHashSet.base.1379" = type <{ %"class.WTF::HashTable.1374", %"class.blink::Member.1376", %"class.blink::Member.1376", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1374" = type <{ %"class.blink::Member.1376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1376" = type { %"class.blink::MemberBase.1377" }
%"class.blink::MemberBase.1377" = type { %"class.blink::HeapListHashSetNode.1378"* }
%"class.blink::HeapListHashSetNode.1378" = type { %"class.blink::Member.1626", %"class.blink::Member.1376", %"class.blink::Member.1376" }
%"class.blink::Member.1626" = type { %"class.blink::MemberBase.1627" }
%"class.blink::MemberBase.1627" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1380" = type { %"class.WTF::ListHashSet.base.1390", [7 x i8] }
%"class.WTF::ListHashSet.base.1390" = type <{ %"class.WTF::HashTable.1385", %"class.blink::Member.1387", %"class.blink::Member.1387", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1385" = type <{ %"class.blink::Member.1387"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::HeapListHashSetNode.1389"* }
%"class.blink::HeapListHashSetNode.1389" = type { %"class.blink::Member.1622", %"class.blink::Member.1387", %"class.blink::Member.1387" }
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1391" = type { %"class.WTF::ListHashSet.base.1401", [7 x i8] }
%"class.WTF::ListHashSet.base.1401" = type <{ %"class.WTF::HashTable.1396", %"class.blink::Member.1398", %"class.blink::Member.1398", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1396" = type <{ %"class.blink::Member.1398"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::HeapListHashSetNode.1400"* }
%"class.blink::HeapListHashSetNode.1400" = type { %"class.blink::Member.1517", %"class.blink::Member.1398", %"class.blink::Member.1398" }
%"class.blink::HeapListHashSet.1402" = type { %"class.WTF::ListHashSet.base.1412", [7 x i8] }
%"class.WTF::ListHashSet.base.1412" = type <{ %"class.WTF::HashTable.1407", %"class.blink::Member.1409", %"class.blink::Member.1409", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1407" = type <{ %"class.blink::Member.1409"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::HeapListHashSetNode.1411"* }
%"class.blink::HeapListHashSetNode.1411" = type { %"class.blink::Member.1616", %"class.blink::Member.1409", %"class.blink::Member.1409" }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1413" = type { %"class.WTF::ListHashSet.base.1423", [7 x i8] }
%"class.WTF::ListHashSet.base.1423" = type <{ %"class.WTF::HashTable.1418", %"class.blink::Member.1420", %"class.blink::Member.1420", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1418" = type <{ %"class.blink::Member.1420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::HeapListHashSetNode.1422"* }
%"class.blink::HeapListHashSetNode.1422" = type { %"class.blink::Member.1612", %"class.blink::Member.1420", %"class.blink::Member.1420" }
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1424" = type { %"class.WTF::ListHashSet.base.1434", [7 x i8] }
%"class.WTF::ListHashSet.base.1434" = type <{ %"class.WTF::HashTable.1429", %"class.blink::Member.1431", %"class.blink::Member.1431", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1429" = type <{ %"class.blink::Member.1431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::HeapListHashSetNode.1433"* }
%"class.blink::HeapListHashSetNode.1433" = type { %"class.blink::Member.1608", %"class.blink::Member.1431", %"class.blink::Member.1431" }
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1435" = type { %"class.WTF::ListHashSet.base.1445", [7 x i8] }
%"class.WTF::ListHashSet.base.1445" = type <{ %"class.WTF::HashTable.1440", %"class.blink::Member.1442", %"class.blink::Member.1442", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1440" = type <{ %"class.blink::Member.1442"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1442" = type { %"class.blink::MemberBase.1443" }
%"class.blink::MemberBase.1443" = type { %"class.blink::HeapListHashSetNode.1444"* }
%"class.blink::HeapListHashSetNode.1444" = type { %"class.blink::Member.1604", %"class.blink::Member.1442", %"class.blink::Member.1442" }
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1446" = type { %"class.WTF::ListHashSet.base.1456", [7 x i8] }
%"class.WTF::ListHashSet.base.1456" = type <{ %"class.WTF::HashTable.1451", %"class.blink::Member.1453", %"class.blink::Member.1453", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1451" = type <{ %"class.blink::Member.1453"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::HeapListHashSetNode.1455"* }
%"class.blink::HeapListHashSetNode.1455" = type { %"class.blink::Member.1600", %"class.blink::Member.1453", %"class.blink::Member.1453" }
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1457" = type { %"class.WTF::ListHashSet.base.1467", [7 x i8] }
%"class.WTF::ListHashSet.base.1467" = type <{ %"class.WTF::HashTable.1462", %"class.blink::Member.1464", %"class.blink::Member.1464", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1462" = type <{ %"class.blink::Member.1464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::HeapListHashSetNode.1466"* }
%"class.blink::HeapListHashSetNode.1466" = type { %"class.blink::Member.1596", %"class.blink::Member.1464", %"class.blink::Member.1464" }
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1468" = type { %"class.WTF::ListHashSet.base.1478", [7 x i8] }
%"class.WTF::ListHashSet.base.1478" = type <{ %"class.WTF::HashTable.1473", %"class.blink::Member.1475", %"class.blink::Member.1475", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1473" = type <{ %"class.blink::Member.1475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::HeapListHashSetNode.1477"* }
%"class.blink::HeapListHashSetNode.1477" = type { %"class.blink::Member.1592", %"class.blink::Member.1475", %"class.blink::Member.1475" }
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1479" = type { %"class.WTF::ListHashSet.base.1489", [7 x i8] }
%"class.WTF::ListHashSet.base.1489" = type <{ %"class.WTF::HashTable.1484", %"class.blink::Member.1486", %"class.blink::Member.1486", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1484" = type <{ %"class.blink::Member.1486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::HeapListHashSetNode.1488"* }
%"class.blink::HeapListHashSetNode.1488" = type { %"class.blink::Member.1519", %"class.blink::Member.1486", %"class.blink::Member.1486" }
%"class.blink::HeapListHashSet.1490" = type { %"class.WTF::ListHashSet.base.1500", [7 x i8] }
%"class.WTF::ListHashSet.base.1500" = type <{ %"class.WTF::HashTable.1495", %"class.blink::Member.1497", %"class.blink::Member.1497", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1495" = type <{ %"class.blink::Member.1497"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::HeapListHashSetNode.1499"* }
%"class.blink::HeapListHashSetNode.1499" = type { %"class.blink::Member.1502", %"class.blink::Member.1497", %"class.blink::Member.1497" }
%class.scoped_refptr.1501 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1190", %"class.WTF::Vector.538", i32, [4 x i8], %"class.blink::HeapHashMap.1508", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1508" = type { %"class.WTF::HashMap.1511" }
%"class.WTF::HashMap.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"struct.WTF::KeyValuePair.1514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1514" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1521" = type { %"class.blink::MemberBase.1522" }
%"class.blink::MemberBase.1522" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1523" = type { %"class.blink::MemberBase.1524" }
%"class.blink::MemberBase.1524" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1525" }
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1961" }
%"class.mojo::Remote.1961" = type { %"class.mojo::internal::InterfacePtrState.1962" }
%"class.mojo::internal::InterfacePtrState.1962" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1963" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1079, %"class.std::__1::unique_ptr.738", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.752, i32 }>
%class.scoped_refptr.1079 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.752, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1138", %"class.absl::optional.1143", %"class.absl::optional.1096", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1163", i8, [7 x i8], %class.scoped_refptr.752, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.765" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.752, %"class.std::__1::unique_ptr.1080", %"class.absl::optional.1090", %"struct.std::__1::atomic.359", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1096", %"class.std::__1::unique_ptr.1101", i8, i64, %class.scoped_refptr.1135, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1137" }
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.752, i8, %"class.mojo::ScopedHandleBase.1083", %class.scoped_refptr.1084, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1085", i8*, %"class.base::WeakPtrFactory.1086" }
%"class.mojo::ScopedHandleBase.1083" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1084 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1085" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1086" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1090" = type { %"class.absl::optional_internal::optional_data.1091" }
%"class.absl::optional_internal::optional_data.1091" = type { %"class.absl::optional_internal::optional_data_base.1092" }
%"class.absl::optional_internal::optional_data_base.1092" = type { %"class.absl::optional_internal::optional_data_dtor_base.1093" }
%"class.absl::optional_internal::optional_data_dtor_base.1093" = type { i8, %union.anon.1094 }
%union.anon.1094 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1095", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1095" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1104", i8, i64, %class.scoped_refptr.1105, %class.scoped_refptr.1130 }
%"class.base::RepeatingCallback.1104" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1105 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1106", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1108", %"class.std::__1::map.1119", i8, [7 x i8] }>
%"class.base::RefCounted.1106" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1107 }
%class.scoped_refptr.1107 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1108" = type { %"class.std::__1::__tree.1109" }
%"class.std::__1::__tree.1109" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.1119" = type { %"class.std::__1::__tree.1120" }
%"class.std::__1::__tree.1120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1121", %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%class.scoped_refptr.1130 = type { %"class.base::RefCountedData.1131"* }
%"class.base::RefCountedData.1131" = type opaque
%class.scoped_refptr.1135 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1136 }
%class.scoped_refptr.1136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1137" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1138" = type { %"class.absl::optional_internal::optional_data.1139" }
%"class.absl::optional_internal::optional_data.1139" = type { %"class.absl::optional_internal::optional_data_base.1140" }
%"class.absl::optional_internal::optional_data_base.1140" = type { %"class.absl::optional_internal::optional_data_dtor_base.1141" }
%"class.absl::optional_internal::optional_data_dtor_base.1141" = type { i8, %union.anon.1142 }
%union.anon.1142 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1143" = type { %"class.absl::optional_internal::optional_data.1144" }
%"class.absl::optional_internal::optional_data.1144" = type { %"class.absl::optional_internal::optional_data_base.1145" }
%"class.absl::optional_internal::optional_data_base.1145" = type { %"class.absl::optional_internal::optional_data_dtor_base.1146" }
%"class.absl::optional_internal::optional_data_dtor_base.1146" = type { i8, [7 x i8], %union.anon.1147 }
%union.anon.1147 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1096" = type { %"class.absl::optional_internal::optional_data.1097" }
%"class.absl::optional_internal::optional_data.1097" = type { %"class.absl::optional_internal::optional_data_base.1098" }
%"class.absl::optional_internal::optional_data_base.1098" = type { %"class.absl::optional_internal::optional_data_dtor_base.1099" }
%"class.absl::optional_internal::optional_data_dtor_base.1099" = type { i8, %union.anon.1100 }
%union.anon.1100 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1148 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1148 = type { %"class.std::__1::map.1151" }
%"class.std::__1::map.1151" = type { %"class.std::__1::__tree.1152" }
%"class.std::__1::__tree.1152" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1153", %"class.std::__1::__compressed_pair.1157" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1157" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1162"*, i64 }
%"class.std::__1::unique_ptr.1162" = type opaque
%"class.std::__1::map.1163" = type { %"class.std::__1::__tree.1164" }
%"class.std::__1::__tree.1164" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1165", %"class.std::__1::__compressed_pair.1169" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"class.std::__1::__compressed_pair.1169" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::unique_ptr.1963" = type { %"class.std::__1::__compressed_pair.1964" }
%"class.std::__1::__compressed_pair.1964" = type { %"struct.std::__1::__compressed_pair_elem.1965" }
%"struct.std::__1::__compressed_pair_elem.1965" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1527" = type { %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1529" }
%"struct.std::__1::__compressed_pair_elem.1529" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1533" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1534" = type { %"class.std::__1::__compressed_pair.1535" }
%"class.std::__1::__compressed_pair.1535" = type { %"struct.std::__1::__compressed_pair_elem.1536" }
%"struct.std::__1::__compressed_pair_elem.1536" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1540" = type { %"class.std::__1::__compressed_pair.1541" }
%"class.std::__1::__compressed_pair.1541" = type { %"struct.std::__1::__compressed_pair_elem.1542" }
%"struct.std::__1::__compressed_pair_elem.1542" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1546" }
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1971" }
%"class.mojo::AssociatedRemote.1971" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1972" }
%"class.mojo::internal::AssociatedInterfacePtrState.1972" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1973" }
%"class.std::__1::unique_ptr.1973" = type { %"class.std::__1::__compressed_pair.1974" }
%"class.std::__1::__compressed_pair.1974" = type { %"struct.std::__1::__compressed_pair_elem.1975" }
%"struct.std::__1::__compressed_pair_elem.1975" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1548" = type { %"class.blink::Member.1549" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1981" }
%"class.mojo::AssociatedRemote.1981" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1982" }
%"class.mojo::internal::AssociatedInterfacePtrState.1982" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1983" }
%"class.std::__1::unique_ptr.1983" = type { %"class.std::__1::__compressed_pair.1984" }
%"class.std::__1::__compressed_pair.1984" = type { %"struct.std::__1::__compressed_pair_elem.1985" }
%"struct.std::__1::__compressed_pair_elem.1985" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1551" }
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1991", %"class.blink::Member.1190", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1991" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1992" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.738" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1992" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1553" = type { %"class.blink::Member.1554" }
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1995", %"class.blink::Member.1190", %"class.mojo::AssociatedReceiver.1996" }
%"class.blink::ThreadState::PrefinalizerRegistration.1995" = type { i8 }
%"class.mojo::AssociatedReceiver.1996" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1997" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1997" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1556" }
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2000", %"class.blink::Member.1190", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2000" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1079, %"class.std::__1::unique_ptr.738", %"class.base::WeakPtrFactory.2001" }
%"class.base::WeakPtrFactory.2001" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1558" = type { %"class.blink::Member.1559" }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2004", %"class.blink::Member.1190", %"class.mojo::AssociatedReceiver.2005" }
%"class.blink::ThreadState::PrefinalizerRegistration.2004" = type { i8 }
%"class.mojo::AssociatedReceiver.2005" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2006" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2006" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::HeapHashMap.1569"* }
%"class.blink::HeapHashMap.1569" = type opaque
%"class.mojo::StructPtr.1570" = type { %"class.std::__1::unique_ptr.1571" }
%"class.std::__1::unique_ptr.1571" = type { %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.1573" }
%"struct.std::__1::__compressed_pair_elem.1573" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1574", %"class.mojo::InlinedStructPtr.1575" }
%"class.mojo::InlinedStructPtr.1574" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1575" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1581" = type { %"class.absl::optional_internal::optional_data.1582" }
%"class.absl::optional_internal::optional_data.1582" = type { %"class.absl::optional_internal::optional_data_base.1583" }
%"class.absl::optional_internal::optional_data_base.1583" = type { %"class.absl::optional_internal::optional_data_dtor_base.1584" }
%"class.absl::optional_internal::optional_data_dtor_base.1584" = type { i8, %union.anon.1585 }
%union.anon.1585 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1066", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1192" }
%"class.std::__1::vector.1192" = type { %"class.std::__1::__vector_base.1193" }
%"class.std::__1::__vector_base.1193" = type { %"struct.std::__1::pair.1194"*, %"struct.std::__1::pair.1194"*, %"class.std::__1::__compressed_pair.1195" }
%"struct.std::__1::pair.1194" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.std::__1::pair.1194"* }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1202" = type { %"class.absl::optional_internal::optional_data.1203" }
%"class.absl::optional_internal::optional_data.1203" = type { %"class.absl::optional_internal::optional_data_base.1204" }
%"class.absl::optional_internal::optional_data_base.1204" = type { %"class.absl::optional_internal::optional_data_dtor_base.1205" }
%"class.absl::optional_internal::optional_data_dtor_base.1205" = type { i8, %union.anon.1206 }
%union.anon.1206 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1207" }
%"class.blink::HeapHashSet.1207" = type { %"class.WTF::HashSet.1210" }
%"class.WTF::HashSet.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"class.blink::WeakMember.1213"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1213" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.1077", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.1077" = type { %"class.base::StrongAlias.1078" }
%"class.base::StrongAlias.1078" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1172" }
%"class.std::__1::unique_ptr.1172" = type { %"class.std::__1::__compressed_pair.1173" }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1924", i8, [7 x i8] }>
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.blink::ComputedStyle" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink13CharacterDataD2Ev = comdat any

$_ZN5blink13CharacterDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink13CharacterData18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink13CharacterData19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink4Node23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [12 x i8] c"The offset \00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c" is greater than the node's length (\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c").\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink16event_type_names25kDOMCharacterDataModifiedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink13CharacterDataE = hidden unnamed_addr constant { [74 x i8*] } { [74 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CharacterData"*)* @_ZN5blink13CharacterDataD2Ev to i8*), i8* bitcast (void (%"class.blink::CharacterData"*)* @_ZN5blink13CharacterDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Visitor"*)* @_ZNK5blink4Node5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CharacterData"*)* @_ZNK5blink13CharacterData18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CharacterData"*)* @_ZNK5blink13CharacterData9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::CharacterData"*, %"class.WTF::String"*)* @_ZN5blink13CharacterData12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::CharacterData"*)* @_ZNK5blink13CharacterData19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i1, i32)* @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::Node"*, i1)* @_ZN5blink4Node10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::Node"*)* @_ZNK5blink4Node11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*, i32)* @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE to i8*), i8* bitcast (void (%"class.blink::Node"*, i1)* @_ZN5blink4Node16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::ContainerNode"*)* @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::ContainerNode"*)* @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Document"*)* @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink8Document20global_tree_version_E = external local_unnamed_addr global i64, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@_ZN5blink13CharacterData18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.5 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.6 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData12MakeParkableEv(%"class.blink::CharacterData"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ParkableString", align 8
  %3 = alloca %class.scoped_refptr.6, align 8
  %4 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %68

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::ParkableString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = bitcast %class.scoped_refptr.6* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %12 = bitcast %"class.WTF::String"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %11, align 8
  %14 = getelementptr inbounds %class.scoped_refptr.6, %class.scoped_refptr.6* %3, i64 0, i32 0
  %15 = bitcast %class.scoped_refptr.6* %3 to i64*
  store i64 %13, i64* %15, align 8
  call void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"* nonnull %2, %class.scoped_refptr.6* nonnull dereferenceable(8) %3) #7
  %16 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %2, i64 0, i32 0, i32 0
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %7
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #7
  br label %22

22:                                               ; preds = %20, %7
  %23 = ptrtoint %"class.blink::ParkableStringImpl"* %18 to i64
  %24 = bitcast %"class.blink::ParkableString"* %16 to i64*
  %25 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %16, i64 0, i32 0, i32 0
  %26 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.blink::ParkableStringImpl"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #7
  %30 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  call void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"* nonnull %26) #7
  %34 = bitcast %"class.blink::ParkableStringImpl"* %26 to i8*
  call void @free(i8* %34) #7
  br label %35

35:                                               ; preds = %22, %28, %33
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %2) #7
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #7
  br label %51

51:                                               ; preds = %35, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  store i64 0, i64* %12, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %66, %63, %51
  store i8 1, i8* %4, align 8
  br label %68

68:                                               ; preds = %1, %67
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink14ParkableStringC1EO13scoped_refptrIN3WTF10StringImplEE(%"class.blink::ParkableString"*, %class.scoped_refptr.6* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData7setDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %7, align 8
  %9 = icmp eq %"class.blink::ParkableStringImpl"* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %11, align 8
  %13 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %8, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  br label %31

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %12, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  br label %31

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %31

31:                                               ; preds = %6, %14, %18, %21, %24, %28
  %32 = phi i32 [ 0, %6 ], [ %23, %21 ], [ %20, %18 ], [ 0, %14 ], [ %30, %28 ], [ 0, %24 ]
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi i32 [ %38, %36 ], [ 0, %31 ]
  tail call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* dereferenceable(8) %1, i32 0, i32 %32, i32 %40, i32 1)
  %41 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  tail call void @_ZN5blink8Document13DidRemoveTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %44, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 0, i32 %32) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::ParkableString", align 8
  %9 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %16 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %15) #7
  br label %19

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi %"class.WTF::String"* [ %16, %14 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %10, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #7
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  tail call void @llvm.trap() #7
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %19, %24, %39
  %42 = load i8, i8* %11, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %41
  store i8 0, i8* %11, align 8
  %45 = bitcast %"class.blink::ParkableString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #7
  %46 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %8, i64 0, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %48 = bitcast %"class.blink::ParkableString"* %47 to i64*
  %49 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %47, i64 0, i32 0, i32 0
  %50 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %49, align 8
  store i64 0, i64* %48, align 8
  %51 = icmp eq %"class.blink::ParkableStringImpl"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %50, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #7
  %54 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  tail call void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"* nonnull %50) #7
  %58 = bitcast %"class.blink::ParkableStringImpl"* %50 to i8*
  tail call void @free(i8* %58) #7
  br label %59

59:                                               ; preds = %44, %52, %57
  call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #7
  br label %60

60:                                               ; preds = %41, %59
  %61 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %82

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #7
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !3

79:                                               ; preds = %70
  call void @llvm.trap() #7
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %82

82:                                               ; preds = %80, %65, %60
  %83 = ptrtoint %"class.WTF::StringImpl"* %63 to i64
  %84 = bitcast %"class.WTF::String"* %61 to i64*
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #7
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = icmp eq %"class.blink::CharacterData"* %0, null
  br i1 %102, label %110, label %103

103:                                              ; preds = %101
  %104 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 12
  %107 = icmp eq i32 %106, 4
  br i1 %107, label %108, label %110

108:                                              ; preds = %103
  %109 = bitcast %"class.blink::CharacterData"* %0 to %"class.blink::Text"*
  call void @_ZN5blink4Text22UpdateTextLayoutObjectEjj(%"class.blink::Text"* nonnull %109, i32 %2, i32 %3) #7
  br label %110

110:                                              ; preds = %103, %101, %108
  %111 = icmp eq i32 %5, 0
  br i1 %111, label %128, label %112

112:                                              ; preds = %110
  br i1 %102, label %123, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0
  %115 = bitcast %"class.blink::CharacterData"* %0 to i32 (%"class.blink::Node"*)***
  %116 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %115, align 8
  %117 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %116, i64 30
  %118 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %117, align 8
  %119 = call i32 %118(%"class.blink::Node"* %114) #7
  %120 = icmp eq i32 %119, 7
  br i1 %120, label %121, label %123

121:                                              ; preds = %113
  %122 = bitcast %"class.blink::CharacterData"* %0 to %"class.blink::ProcessingInstruction"*
  call void @_ZN5blink21ProcessingInstruction19DidAttributeChangedEv(%"class.blink::ProcessingInstruction"* nonnull %122) #7
  br label %123

123:                                              ; preds = %113, %112, %121
  %124 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %125, i64 0, i32 2, i32 0, i32 0
  %127 = load %"class.blink::Document"*, %"class.blink::Document"** %126, align 8
  call void @_ZN5blink8Document25NotifyUpdateCharacterDataEPNS_13CharacterDataEjjj(%"class.blink::Document"* %127, %"class.blink::CharacterData"* %0, i32 %2, i32 %3, i32 %4) #7
  br label %128

128:                                              ; preds = %110, %123
  %129 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %130 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %130, i64 0, i32 2, i32 0, i32 0
  %132 = load %"class.blink::Document"*, %"class.blink::Document"** %131, align 8
  %133 = load i64, i64* @_ZN5blink8Document20global_tree_version_E, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* @_ZN5blink8Document20global_tree_version_E, align 8
  %135 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %132, i64 0, i32 52
  store i64 %134, i64* %135, align 8
  call void @_ZN5blink13CharacterData13DidModifyDataERKN3WTF6StringENS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 %5)
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #7
  br label %151

151:                                              ; preds = %128, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  ret void
}

declare void @_ZN5blink8Document13DidRemoveTextERKNS_13CharacterDataEjj(%"class.blink::Document"*, %"class.blink::CharacterData"* dereferenceable(88), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink13CharacterData13substringDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.834", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.834", align 8
  %11 = alloca %"class.WTF::StringAppend.835", align 8
  %12 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %16, align 8
  %18 = icmp eq %"class.blink::ParkableStringImpl"* %17, null
  br i1 %18, label %40, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %20, align 8
  %22 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %17, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  br label %40

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %21, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  br label %40

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %15, %23, %27, %30, %33, %37
  %41 = phi i32 [ 0, %15 ], [ %32, %30 ], [ %29, %27 ], [ 0, %23 ], [ %39, %37 ], [ 0, %33 ]
  %42 = icmp ult i32 %41, %1
  br i1 %42, label %43, label %445

43:                                               ; preds = %40
  %44 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #7
  %45 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #7
  %46 = bitcast %"class.WTF::StringAppend.834"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #7
  %47 = bitcast %"class.WTF::StringAppend.835"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #7
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 32, i1 false) #7
  store i8* %49, i8** %50, align 8
  %53 = urem i32 %1, 10
  %54 = udiv i32 %1, 10
  %55 = trunc i32 %53 to i8
  %56 = or i8 %55, 48
  store i8 %56, i8* %49, align 1
  %57 = icmp ugt i32 %1, 9
  br i1 %57, label %58, label %73

58:                                               ; preds = %43
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %59, i8** %50, align 8
  %60 = urem i32 %54, 10
  %61 = trunc i32 %60 to i8
  %62 = or i8 %61, 48
  store i8 %62, i8* %59, align 2
  %63 = icmp ugt i32 %1, 99
  br i1 %63, label %64, label %71

64:                                               ; preds = %58
  %65 = udiv i32 %1, 100
  %66 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %66, i8** %50, align 8
  %67 = urem i32 %65, 10
  %68 = trunc i32 %67 to i8
  %69 = or i8 %68, 48
  store i8 %69, i8* %66, align 1
  %70 = icmp ugt i32 %1, 999
  br i1 %70, label %75, label %84

71:                                               ; preds = %58
  %72 = ptrtoint i8* %59 to i64
  br label %87

73:                                               ; preds = %43
  %74 = ptrtoint i8* %49 to i64
  br label %87

75:                                               ; preds = %64, %75
  %76 = phi i32 [ %78, %75 ], [ %65, %64 ]
  %77 = load i8*, i8** %50, align 8
  %78 = udiv i32 %76, 10
  %79 = getelementptr inbounds i8, i8* %77, i64 -1
  store i8* %79, i8** %50, align 8
  %80 = urem i32 %78, 10
  %81 = trunc i32 %80 to i8
  %82 = or i8 %81, 48
  store i8 %82, i8* %79, align 1
  %83 = icmp ugt i32 %76, 99
  br i1 %83, label %75, label %84

84:                                               ; preds = %75, %64
  %85 = bitcast i8** %50 to i64*
  %86 = load i64, i64* %85, align 8
  br label %87

87:                                               ; preds = %84, %71, %73
  %88 = phi i64 [ %74, %73 ], [ %86, %84 ], [ %72, %71 ]
  %89 = ptrtoint i8* %52 to i64
  %90 = sub i64 %89, %88
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %51, align 8
  %92 = inttoptr i64 %88 to i8*
  %93 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %92, i32 %91) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #7
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %170, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #7
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %102
  call void @llvm.trap() #7
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %110, %95
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = load atomic i32, i32* %96 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %127

117:                                              ; preds = %112
  %118 = zext i32 %113 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #7
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !3

124:                                              ; preds = %117
  call void @llvm.trap() #7
  unreachable

125:                                              ; preds = %117
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %100, align 4
  br label %127

127:                                              ; preds = %125, %112
  %128 = phi i32 [ %126, %125 ], [ %113, %112 ]
  %129 = load atomic i32, i32* %96 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = add i32 %128, -1
  store i32 %133, i32* %100, align 4
  br label %134

134:                                              ; preds = %132, %127
  %135 = phi i32 [ %133, %132 ], [ %128, %127 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #7
  br label %138

138:                                              ; preds = %134, %137
  %139 = load atomic i32, i32* %96 monotonic, align 4, !noalias !4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = load i32, i32* %100, align 4
  br i1 %141, label %143, label %153

143:                                              ; preds = %138
  %144 = zext i32 %142 to i33
  %145 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #7
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !3

150:                                              ; preds = %143
  call void @llvm.trap() #7, !noalias !4
  unreachable

151:                                              ; preds = %143
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %100, align 4, !noalias !4
  br label %153

153:                                              ; preds = %138, %151
  %154 = phi i32 [ %152, %151 ], [ %142, %138 ]
  %155 = bitcast %"class.WTF::StringAppend.835"* %11 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %155, align 8, !alias.scope !4
  %156 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %156, align 8, !alias.scope !4
  %157 = load atomic i32, i32* %96 monotonic, align 4, !noalias !4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %174

160:                                              ; preds = %153
  %161 = zext i32 %154 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #7
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !3

167:                                              ; preds = %160
  call void @llvm.trap() #7, !noalias !4
  unreachable

168:                                              ; preds = %160
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %100, align 4, !noalias !4
  br label %174

170:                                              ; preds = %87
  %171 = bitcast %"class.WTF::StringAppend.835"* %11 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %171, align 8, !alias.scope !4
  %172 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %172, align 8, !alias.scope !4
  %173 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %173, align 8, !alias.scope !4
  br label %186

174:                                              ; preds = %168, %153
  %175 = phi i32 [ %169, %168 ], [ %154, %153 ]
  %176 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %176, align 8, !alias.scope !4
  %177 = load atomic i32, i32* %96 monotonic, align 4, !noalias !4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %182

180:                                              ; preds = %174
  %181 = add i32 %175, -1
  store i32 %181, i32* %100, align 4, !noalias !4
  br label %182

182:                                              ; preds = %180, %174
  %183 = phi i32 [ %181, %180 ], [ %175, %174 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #7, !noalias !4
  br label %186

186:                                              ; preds = %170, %182, %185
  %187 = load i8, i8* %12, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %207, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %191 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %190, align 8
  %192 = icmp eq %"class.blink::ParkableStringImpl"* %191, null
  br i1 %192, label %214, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0
  %195 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %194, align 8
  %196 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %195, null
  br i1 %196, label %197, label %204

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %191, i64 0, i32 1, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  br label %214

204:                                              ; preds = %193
  %205 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %195, i64 0, i32 8
  %206 = load i32, i32* %205, align 4
  br label %214

207:                                              ; preds = %186
  %208 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %214, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 1
  %213 = load i32, i32* %212, align 4
  br label %214

214:                                              ; preds = %189, %197, %201, %204, %207, %211
  %215 = phi i32 [ 0, %189 ], [ %206, %204 ], [ %203, %201 ], [ 0, %197 ], [ %213, %211 ], [ 0, %207 ]
  %216 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %216) #7
  %217 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %218 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %219 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %220 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 32, i1 false) #7
  store i8* %217, i8** %218, align 8
  %221 = urem i32 %215, 10
  %222 = udiv i32 %215, 10
  %223 = trunc i32 %221 to i8
  %224 = or i8 %223, 48
  store i8 %224, i8* %217, align 1
  %225 = icmp ugt i32 %215, 9
  br i1 %225, label %226, label %241

226:                                              ; preds = %214
  %227 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %227, i8** %218, align 8
  %228 = urem i32 %222, 10
  %229 = trunc i32 %228 to i8
  %230 = or i8 %229, 48
  store i8 %230, i8* %227, align 2
  %231 = icmp ugt i32 %215, 99
  br i1 %231, label %232, label %239

232:                                              ; preds = %226
  %233 = udiv i32 %215, 100
  %234 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %234, i8** %218, align 8
  %235 = urem i32 %233, 10
  %236 = trunc i32 %235 to i8
  %237 = or i8 %236, 48
  store i8 %237, i8* %234, align 1
  %238 = icmp ugt i32 %215, 999
  br i1 %238, label %243, label %252

239:                                              ; preds = %226
  %240 = ptrtoint i8* %227 to i64
  br label %255

241:                                              ; preds = %214
  %242 = ptrtoint i8* %217 to i64
  br label %255

243:                                              ; preds = %232, %243
  %244 = phi i32 [ %246, %243 ], [ %233, %232 ]
  %245 = load i8*, i8** %218, align 8
  %246 = udiv i32 %244, 10
  %247 = getelementptr inbounds i8, i8* %245, i64 -1
  store i8* %247, i8** %218, align 8
  %248 = urem i32 %246, 10
  %249 = trunc i32 %248 to i8
  %250 = or i8 %249, 48
  store i8 %250, i8* %247, align 1
  %251 = icmp ugt i32 %244, 99
  br i1 %251, label %243, label %252

252:                                              ; preds = %243, %232
  %253 = bitcast i8** %218 to i64*
  %254 = load i64, i64* %253, align 8
  br label %255

255:                                              ; preds = %252, %239, %241
  %256 = phi i64 [ %242, %241 ], [ %254, %252 ], [ %240, %239 ]
  %257 = ptrtoint i8* %220 to i64
  %258 = sub i64 %257, %256
  %259 = trunc i64 %258 to i32
  store i32 %259, i32* %219, align 8
  %260 = inttoptr i64 %256 to i8*
  %261 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %260, i32 %259) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %216) #7
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.834"* nonnull sret %10, %"class.WTF::StringAppend.835"* nonnull dereferenceable(24) %11, %"class.WTF::StringImpl"* %261)
  %262 = bitcast %"class.WTF::StringAppend.834"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %262)
  %263 = bitcast %"class.WTF::StringAppend.834"* %10 to i64*
  %264 = load i64, i64* %263, align 8, !noalias !7
  %265 = bitcast %"class.WTF::StringAppend.834"* %5 to i64*
  store i64 %264, i64* %265, align 8, !noalias !7
  %266 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8, !noalias !7
  %268 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %267, %"class.WTF::StringImpl"** %268, align 8, !noalias !7
  %269 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %269, label %287, label %270

270:                                              ; preds = %255
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %287

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #7
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !3

284:                                              ; preds = %275
  call void @llvm.trap() #7
  unreachable

285:                                              ; preds = %275
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %276, align 4
  br label %287

287:                                              ; preds = %285, %270, %255
  %288 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 0, i32 1
  %289 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 0, i32 1
  %290 = bitcast i8** %289 to i64*
  %291 = load i64, i64* %290, align 8, !noalias !7
  %292 = bitcast i8** %288 to i64*
  store i64 %291, i64* %292, align 8, !noalias !7
  %293 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 1, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8, !noalias !7
  %295 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %294, %"class.WTF::StringImpl"** %295, align 8, !noalias !7
  %296 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %296, label %314, label %297

297:                                              ; preds = %287
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %314

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i33
  %306 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %305, i33 1) #7
  %307 = extractvalue { i33, i1 } %306, 1
  %308 = extractvalue { i33, i1 } %306, 0
  %309 = icmp slt i33 %308, 0
  %310 = or i1 %307, %309
  br i1 %310, label %311, label %312, !prof !3

311:                                              ; preds = %302
  call void @llvm.trap() #7
  unreachable

312:                                              ; preds = %302
  %313 = trunc i33 %308 to i32
  store i32 %313, i32* %303, align 4
  br label %314

314:                                              ; preds = %287, %297, %312
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %9, %"class.WTF::StringAppend.834"* nonnull byval(%"class.WTF::StringAppend.834") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %262)
  %315 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %316 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %316, align 8
  %317 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %318 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %317, align 8
  %319 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %318, align 8
  call void %319(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #7
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %320, null
  br i1 %321, label %335, label %322

322:                                              ; preds = %314
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %320, i64 0, i32 0
  %328 = load i32, i32* %327, align 4
  br i1 %326, label %329, label %331

329:                                              ; preds = %322
  %330 = add i32 %328, -1
  store i32 %330, i32* %327, align 4
  br label %331

331:                                              ; preds = %329, %322
  %332 = phi i32 [ %330, %329 ], [ %328, %322 ]
  %333 = icmp eq i32 %332, 0
  br i1 %333, label %334, label %335

334:                                              ; preds = %331
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %320) #7
  br label %335

335:                                              ; preds = %314, %331, %334
  %336 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %352, label %339

339:                                              ; preds = %335
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %345 = load i32, i32* %344, align 4
  br i1 %343, label %346, label %348

346:                                              ; preds = %339
  %347 = add i32 %345, -1
  store i32 %347, i32* %344, align 4
  br label %348

348:                                              ; preds = %346, %339
  %349 = phi i32 [ %347, %346 ], [ %345, %339 ]
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %352

351:                                              ; preds = %348
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %337) #7
  br label %352

352:                                              ; preds = %351, %348, %335
  %353 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %353, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %352
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  br i1 %360, label %363, label %365

363:                                              ; preds = %356
  %364 = add i32 %362, -1
  store i32 %364, i32* %361, align 4
  br label %365

365:                                              ; preds = %363, %356
  %366 = phi i32 [ %364, %363 ], [ %362, %356 ]
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #7
  br label %369

369:                                              ; preds = %352, %365, %368
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #7
  br label %385

385:                                              ; preds = %384, %381, %369
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %401, label %388

388:                                              ; preds = %385
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 monotonic, align 4
  %391 = and i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  br i1 %392, label %395, label %397

395:                                              ; preds = %388
  %396 = add i32 %394, -1
  store i32 %396, i32* %393, align 4
  br label %397

397:                                              ; preds = %395, %388
  %398 = phi i32 [ %396, %395 ], [ %394, %388 ]
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %401

400:                                              ; preds = %397
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %386) #7
  br label %401

401:                                              ; preds = %385, %397, %400
  %402 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %402, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %403, null
  br i1 %404, label %418, label %405

405:                                              ; preds = %401
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load atomic i32, i32* %406 monotonic, align 4
  %408 = and i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  br i1 %409, label %412, label %414

412:                                              ; preds = %405
  %413 = add i32 %411, -1
  store i32 %413, i32* %410, align 4
  br label %414

414:                                              ; preds = %412, %405
  %415 = phi i32 [ %413, %412 ], [ %411, %405 ]
  %416 = icmp eq i32 %415, 0
  br i1 %416, label %417, label %418

417:                                              ; preds = %414
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %403) #7
  br label %418

418:                                              ; preds = %401, %414, %417
  br i1 %94, label %444, label %419

419:                                              ; preds = %418
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %421 = load atomic i32, i32* %420 monotonic, align 4
  %422 = and i32 %421, 2
  %423 = icmp eq i32 %422, 0
  %424 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %425 = load i32, i32* %424, align 4
  br i1 %423, label %426, label %428

426:                                              ; preds = %419
  %427 = add i32 %425, -1
  store i32 %427, i32* %424, align 4
  br label %428

428:                                              ; preds = %426, %419
  %429 = phi i32 [ %427, %426 ], [ %425, %419 ]
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %428
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #7
  %432 = load i32, i32* %424, align 4
  br label %433

433:                                              ; preds = %428, %431
  %434 = phi i32 [ %429, %428 ], [ %432, %431 ]
  %435 = load atomic i32, i32* %420 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %440

438:                                              ; preds = %433
  %439 = add i32 %434, -1
  store i32 %439, i32* %424, align 4
  br label %440

440:                                              ; preds = %438, %433
  %441 = phi i32 [ %439, %438 ], [ %434, %433 ]
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %444

443:                                              ; preds = %440
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #7
  br label %444

444:                                              ; preds = %418, %440, %443
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #7
  br label %454

445:                                              ; preds = %40
  br i1 %14, label %449, label %446

446:                                              ; preds = %445
  %447 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %448 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %447) #7
  br label %451

449:                                              ; preds = %445
  %450 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %451

451:                                              ; preds = %446, %449
  %452 = phi %"class.WTF::String"* [ %448, %446 ], [ %450, %449 ]
  %453 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %452, i32 %1, i32 %2) #7
  br label %454

454:                                              ; preds = %451, %444
  %455 = phi %"class.WTF::StringImpl"* [ null, %444 ], [ %453, %451 ]
  ret %"class.WTF::StringImpl"* %455
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.834"* noalias sret, %"class.WTF::StringAppend.835"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.835", align 8
  %5 = bitcast %"class.WTF::StringAppend.835"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.835"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #7
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #7
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #7
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #7
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.834"* %0, %"class.WTF::StringAppend.835"* nonnull byval(%"class.WTF::StringAppend.835") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.834"* %0, %"class.WTF::StringAppend.835"* nonnull byval(%"class.WTF::StringAppend.835") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #7
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #7
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.2025"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #7
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %3, i8* %15) #7
  %16 = bitcast %"class.WTF::StringTypeAdapter.2025"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #7
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #7
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %2, i8* %18) #7
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #7
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #7
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #7
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #7
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #7
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #7
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #7
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #7
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #7
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #7
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData16ParserAppendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.837", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = bitcast %"class.WTF::StringAppend.837"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %13 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %12) #7
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi %"class.WTF::String"* [ %13, %11 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #7
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #7
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %16, %21, %36
  %39 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %17, %"class.WTF::StringImpl"* %19)
  %40 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %39, 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %4, i64 0, i32 1, i32 0, i32 0
  %43 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %39, 1
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %42, align 8
  %44 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.837"* nonnull %4)
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %6, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #7
  br label %60

60:                                               ; preds = %59, %56, %38
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #7
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  %77 = load i8, i8* %8, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %81 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %80) #7
  br label %84

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi %"class.WTF::String"* [ %81, %79 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %84, %89
  %93 = phi i32 [ %91, %89 ], [ 0, %84 ]
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %92, %96
  %100 = phi i32 [ %98, %96 ], [ 0, %92 ]
  call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %93, i32 0, i32 %100, i32 0)
  %101 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #7
  br label %115

115:                                              ; preds = %99, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.837", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #7
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #7
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #7
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.837"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.837"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #7
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.837"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.837"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #7
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #7
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2027"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #7
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #7
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2027"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2028"* nonnull %67, i8* %30) #7
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2028"* nonnull %68, i8* %71) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #7
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #7
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #7
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.837"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #7
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2027"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #7
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #7
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2027"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #7
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #7
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2028"* nonnull %144, i16* %107) #7
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2028"* nonnull %145, i16* %148) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #7
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #7
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #7
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #7
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #7
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData10appendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.837", align 8
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = bitcast %"class.WTF::StringAppend.837"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %13 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %12) #7
  br label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi %"class.WTF::String"* [ %13, %11 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #7
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !3

35:                                               ; preds = %26
  tail call void @llvm.trap() #7
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %16, %21, %36
  %39 = tail call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8) %17, %"class.WTF::StringImpl"* %19)
  %40 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %4, i64 0, i32 0, i32 0, i32 0
  %41 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %39, 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %4, i64 0, i32 1, i32 0, i32 0
  %43 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %39, 1
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %42, align 8
  %44 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.837"* nonnull %4)
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %6, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #7
  br label %60

60:                                               ; preds = %59, %56, %38
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #7
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  %77 = load i8, i8* %8, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %81 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %80) #7
  br label %84

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi %"class.WTF::String"* [ %81, %79 ], [ %83, %82 ]
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  br label %92

92:                                               ; preds = %84, %89
  %93 = phi i32 [ %91, %89 ], [ 0, %84 ]
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %92, %96
  %100 = phi i32 [ %98, %96 ], [ 0, %92 ]
  call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %93, i32 0, i32 %100, i32 1)
  %101 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #7
  br label %115

115:                                              ; preds = %99, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData10insertDataEjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend.834", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::StringAppend.834", align 8
  %11 = alloca %"class.WTF::StringAppend.835", align 8
  %12 = alloca %"class.WTF::StringBuilder", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %21, align 8
  %23 = icmp eq %"class.blink::ParkableStringImpl"* %22, null
  br i1 %23, label %45, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %25, align 8
  %27 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, null
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %22, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  br label %45

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %26, i64 0, i32 8
  %37 = load i32, i32* %36, align 4
  br label %45

38:                                               ; preds = %4
  %39 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %20, %28, %32, %35, %38, %42
  %46 = phi i32 [ 0, %20 ], [ %37, %35 ], [ %34, %32 ], [ 0, %28 ], [ %44, %42 ], [ 0, %38 ]
  %47 = icmp ult i32 %46, %1
  br i1 %47, label %48, label %450

48:                                               ; preds = %45
  %49 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #7
  %50 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %50) #7
  %51 = bitcast %"class.WTF::StringAppend.834"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #7
  %52 = bitcast %"class.WTF::StringAppend.835"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #7
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %53) #7
  %54 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %55 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %56 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %57 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 32, i1 false) #7
  store i8* %54, i8** %55, align 8
  %58 = urem i32 %1, 10
  %59 = udiv i32 %1, 10
  %60 = trunc i32 %58 to i8
  %61 = or i8 %60, 48
  store i8 %61, i8* %54, align 1
  %62 = icmp ugt i32 %1, 9
  br i1 %62, label %63, label %78

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %64, i8** %55, align 8
  %65 = urem i32 %59, 10
  %66 = trunc i32 %65 to i8
  %67 = or i8 %66, 48
  store i8 %67, i8* %64, align 2
  %68 = icmp ugt i32 %1, 99
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = udiv i32 %1, 100
  %71 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %71, i8** %55, align 8
  %72 = urem i32 %70, 10
  %73 = trunc i32 %72 to i8
  %74 = or i8 %73, 48
  store i8 %74, i8* %71, align 1
  %75 = icmp ugt i32 %1, 999
  br i1 %75, label %80, label %89

76:                                               ; preds = %63
  %77 = ptrtoint i8* %64 to i64
  br label %92

78:                                               ; preds = %48
  %79 = ptrtoint i8* %54 to i64
  br label %92

80:                                               ; preds = %69, %80
  %81 = phi i32 [ %83, %80 ], [ %70, %69 ]
  %82 = load i8*, i8** %55, align 8
  %83 = udiv i32 %81, 10
  %84 = getelementptr inbounds i8, i8* %82, i64 -1
  store i8* %84, i8** %55, align 8
  %85 = urem i32 %83, 10
  %86 = trunc i32 %85 to i8
  %87 = or i8 %86, 48
  store i8 %87, i8* %84, align 1
  %88 = icmp ugt i32 %81, 99
  br i1 %88, label %80, label %89

89:                                               ; preds = %80, %69
  %90 = bitcast i8** %55 to i64*
  %91 = load i64, i64* %90, align 8
  br label %92

92:                                               ; preds = %89, %76, %78
  %93 = phi i64 [ %79, %78 ], [ %91, %89 ], [ %77, %76 ]
  %94 = ptrtoint i8* %57 to i64
  %95 = sub i64 %94, %93
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %56, align 8
  %97 = inttoptr i64 %93 to i8*
  %98 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %97, i32 %96) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %53) #7
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %175, label %100

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %117

107:                                              ; preds = %100
  %108 = zext i32 %106 to i33
  %109 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %108, i33 1) #7
  %110 = extractvalue { i33, i1 } %109, 1
  %111 = extractvalue { i33, i1 } %109, 0
  %112 = icmp slt i33 %111, 0
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115, !prof !3

114:                                              ; preds = %107
  call void @llvm.trap() #7
  unreachable

115:                                              ; preds = %107
  %116 = trunc i33 %111 to i32
  store i32 %116, i32* %105, align 4
  br label %117

117:                                              ; preds = %115, %100
  %118 = phi i32 [ %116, %115 ], [ %106, %100 ]
  %119 = load atomic i32, i32* %101 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %132

122:                                              ; preds = %117
  %123 = zext i32 %118 to i33
  %124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #7
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !3

129:                                              ; preds = %122
  call void @llvm.trap() #7
  unreachable

130:                                              ; preds = %122
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %105, align 4
  br label %132

132:                                              ; preds = %130, %117
  %133 = phi i32 [ %131, %130 ], [ %118, %117 ]
  %134 = load atomic i32, i32* %101 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %132
  %138 = add i32 %133, -1
  store i32 %138, i32* %105, align 4
  br label %139

139:                                              ; preds = %137, %132
  %140 = phi i32 [ %138, %137 ], [ %133, %132 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  br label %143

143:                                              ; preds = %139, %142
  %144 = load atomic i32, i32* %101 monotonic, align 4, !noalias !10
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = load i32, i32* %105, align 4
  br i1 %146, label %148, label %158

148:                                              ; preds = %143
  %149 = zext i32 %147 to i33
  %150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %149, i33 1) #7
  %151 = extractvalue { i33, i1 } %150, 1
  %152 = extractvalue { i33, i1 } %150, 0
  %153 = icmp slt i33 %152, 0
  %154 = or i1 %151, %153
  br i1 %154, label %155, label %156, !prof !3

155:                                              ; preds = %148
  call void @llvm.trap() #7, !noalias !10
  unreachable

156:                                              ; preds = %148
  %157 = trunc i33 %152 to i32
  store i32 %157, i32* %105, align 4, !noalias !10
  br label %158

158:                                              ; preds = %143, %156
  %159 = phi i32 [ %157, %156 ], [ %147, %143 ]
  %160 = bitcast %"class.WTF::StringAppend.835"* %11 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %160, align 8, !alias.scope !10
  %161 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %98, %"class.WTF::StringImpl"** %161, align 8, !alias.scope !10
  %162 = load atomic i32, i32* %101 monotonic, align 4, !noalias !10
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %179

165:                                              ; preds = %158
  %166 = zext i32 %159 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #7
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !3

172:                                              ; preds = %165
  call void @llvm.trap() #7, !noalias !10
  unreachable

173:                                              ; preds = %165
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %105, align 4, !noalias !10
  br label %179

175:                                              ; preds = %92
  %176 = bitcast %"class.WTF::StringAppend.835"* %11 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %176, align 8, !alias.scope !10
  %177 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %177, align 8, !alias.scope !10
  %178 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %178, align 8, !alias.scope !10
  br label %191

179:                                              ; preds = %173, %158
  %180 = phi i32 [ %174, %173 ], [ %159, %158 ]
  %181 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %181, align 8, !alias.scope !10
  %182 = load atomic i32, i32* %101 monotonic, align 4, !noalias !10
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  %186 = add i32 %180, -1
  store i32 %186, i32* %105, align 4, !noalias !10
  br label %187

187:                                              ; preds = %185, %179
  %188 = phi i32 [ %186, %185 ], [ %180, %179 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7, !noalias !10
  br label %191

191:                                              ; preds = %175, %187, %190
  %192 = load i8, i8* %17, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %212, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %196 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %195, align 8
  %197 = icmp eq %"class.blink::ParkableStringImpl"* %196, null
  br i1 %197, label %219, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0
  %200 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %199, align 8
  %201 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %200, null
  br i1 %201, label %202, label %209

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %196, i64 0, i32 1, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  br label %219

209:                                              ; preds = %198
  %210 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %200, i64 0, i32 8
  %211 = load i32, i32* %210, align 4
  br label %219

212:                                              ; preds = %191
  %213 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = icmp eq %"class.WTF::StringImpl"* %214, null
  br i1 %215, label %219, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %214, i64 0, i32 1
  %218 = load i32, i32* %217, align 4
  br label %219

219:                                              ; preds = %194, %202, %206, %209, %212, %216
  %220 = phi i32 [ 0, %194 ], [ %211, %209 ], [ %208, %206 ], [ 0, %202 ], [ %218, %216 ], [ 0, %212 ]
  %221 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #7
  %222 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %223 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %224 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  %225 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 -86, i64 32, i1 false) #7
  store i8* %222, i8** %223, align 8
  %226 = urem i32 %220, 10
  %227 = udiv i32 %220, 10
  %228 = trunc i32 %226 to i8
  %229 = or i8 %228, 48
  store i8 %229, i8* %222, align 1
  %230 = icmp ugt i32 %220, 9
  br i1 %230, label %231, label %246

231:                                              ; preds = %219
  %232 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %232, i8** %223, align 8
  %233 = urem i32 %227, 10
  %234 = trunc i32 %233 to i8
  %235 = or i8 %234, 48
  store i8 %235, i8* %232, align 2
  %236 = icmp ugt i32 %220, 99
  br i1 %236, label %237, label %244

237:                                              ; preds = %231
  %238 = udiv i32 %220, 100
  %239 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 9
  store i8* %239, i8** %223, align 8
  %240 = urem i32 %238, 10
  %241 = trunc i32 %240 to i8
  %242 = or i8 %241, 48
  store i8 %242, i8* %239, align 1
  %243 = icmp ugt i32 %220, 999
  br i1 %243, label %248, label %257

244:                                              ; preds = %231
  %245 = ptrtoint i8* %232 to i64
  br label %260

246:                                              ; preds = %219
  %247 = ptrtoint i8* %222 to i64
  br label %260

248:                                              ; preds = %237, %248
  %249 = phi i32 [ %251, %248 ], [ %238, %237 ]
  %250 = load i8*, i8** %223, align 8
  %251 = udiv i32 %249, 10
  %252 = getelementptr inbounds i8, i8* %250, i64 -1
  store i8* %252, i8** %223, align 8
  %253 = urem i32 %251, 10
  %254 = trunc i32 %253 to i8
  %255 = or i8 %254, 48
  store i8 %255, i8* %252, align 1
  %256 = icmp ugt i32 %249, 99
  br i1 %256, label %248, label %257

257:                                              ; preds = %248, %237
  %258 = bitcast i8** %223 to i64*
  %259 = load i64, i64* %258, align 8
  br label %260

260:                                              ; preds = %257, %244, %246
  %261 = phi i64 [ %247, %246 ], [ %259, %257 ], [ %245, %244 ]
  %262 = ptrtoint i8* %225 to i64
  %263 = sub i64 %262, %261
  %264 = trunc i64 %263 to i32
  store i32 %264, i32* %224, align 8
  %265 = inttoptr i64 %261 to i8*
  %266 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %265, i32 %264) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #7
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.834"* nonnull sret %10, %"class.WTF::StringAppend.835"* nonnull dereferenceable(24) %11, %"class.WTF::StringImpl"* %266)
  %267 = bitcast %"class.WTF::StringAppend.834"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %267)
  %268 = bitcast %"class.WTF::StringAppend.834"* %10 to i64*
  %269 = load i64, i64* %268, align 8, !noalias !13
  %270 = bitcast %"class.WTF::StringAppend.834"* %5 to i64*
  store i64 %269, i64* %270, align 8, !noalias !13
  %271 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8, !noalias !13
  %273 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %272, %"class.WTF::StringImpl"** %273, align 8, !noalias !13
  %274 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %274, label %292, label %275

275:                                              ; preds = %260
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %292

280:                                              ; preds = %275
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = zext i32 %282 to i33
  %284 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %283, i33 1) #7
  %285 = extractvalue { i33, i1 } %284, 1
  %286 = extractvalue { i33, i1 } %284, 0
  %287 = icmp slt i33 %286, 0
  %288 = or i1 %285, %287
  br i1 %288, label %289, label %290, !prof !3

289:                                              ; preds = %280
  call void @llvm.trap() #7
  unreachable

290:                                              ; preds = %280
  %291 = trunc i33 %286 to i32
  store i32 %291, i32* %281, align 4
  br label %292

292:                                              ; preds = %290, %275, %260
  %293 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 0, i32 1
  %294 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 0, i32 1
  %295 = bitcast i8** %294 to i64*
  %296 = load i64, i64* %295, align 8, !noalias !13
  %297 = bitcast i8** %293 to i64*
  store i64 %296, i64* %297, align 8, !noalias !13
  %298 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %10, i64 0, i32 1, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8, !noalias !13
  %300 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %299, %"class.WTF::StringImpl"** %300, align 8, !noalias !13
  %301 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %301, label %319, label %302

302:                                              ; preds = %292
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %319

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  %310 = zext i32 %309 to i33
  %311 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %310, i33 1) #7
  %312 = extractvalue { i33, i1 } %311, 1
  %313 = extractvalue { i33, i1 } %311, 0
  %314 = icmp slt i33 %313, 0
  %315 = or i1 %312, %314
  br i1 %315, label %316, label %317, !prof !3

316:                                              ; preds = %307
  call void @llvm.trap() #7
  unreachable

317:                                              ; preds = %307
  %318 = trunc i33 %313 to i32
  store i32 %318, i32* %308, align 4
  br label %319

319:                                              ; preds = %292, %302, %317
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %9, %"class.WTF::StringAppend.834"* nonnull byval(%"class.WTF::StringAppend.834") align 8 %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %267)
  %320 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %321 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %320, %"class.WTF::StringImpl"** %321, align 8
  %322 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %323 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %322, align 8
  %324 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %323, align 8
  call void %324(%"class.blink::ExceptionState"* %3, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #7
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %319
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #7
  br label %340

340:                                              ; preds = %319, %336, %339
  %341 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %341, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #7
  br label %357

357:                                              ; preds = %356, %353, %340
  %358 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %374, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %374

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %359) #7
  br label %374

374:                                              ; preds = %357, %370, %373
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %374
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #7
  br label %390

390:                                              ; preds = %389, %386, %374
  %391 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %392 = icmp eq %"class.WTF::StringImpl"* %391, null
  br i1 %392, label %406, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %395 = load atomic i32, i32* %394 monotonic, align 4
  %396 = and i32 %395, 2
  %397 = icmp eq i32 %396, 0
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %391, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  br i1 %397, label %400, label %402

400:                                              ; preds = %393
  %401 = add i32 %399, -1
  store i32 %401, i32* %398, align 4
  br label %402

402:                                              ; preds = %400, %393
  %403 = phi i32 [ %401, %400 ], [ %399, %393 ]
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %406

405:                                              ; preds = %402
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %391) #7
  br label %406

406:                                              ; preds = %390, %402, %405
  %407 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %423, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #7
  br label %423

423:                                              ; preds = %406, %419, %422
  br i1 %99, label %449, label %424

424:                                              ; preds = %423
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %438

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  %437 = load i32, i32* %429, align 4
  br label %438

438:                                              ; preds = %433, %436
  %439 = phi i32 [ %434, %433 ], [ %437, %436 ]
  %440 = load atomic i32, i32* %425 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %443, label %445

443:                                              ; preds = %438
  %444 = add i32 %439, -1
  store i32 %444, i32* %429, align 4
  br label %445

445:                                              ; preds = %443, %438
  %446 = phi i32 [ %444, %443 ], [ %439, %438 ]
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %445
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #7
  br label %449

449:                                              ; preds = %423, %445, %448
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %50) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #7
  br label %625

450:                                              ; preds = %45
  br i1 %19, label %454, label %451

451:                                              ; preds = %450
  %452 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %453 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %452) #7
  br label %456

454:                                              ; preds = %450
  %455 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %456

456:                                              ; preds = %451, %454
  %457 = phi %"class.WTF::String"* [ %453, %451 ], [ %455, %454 ]
  %458 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %457, i64 0, i32 0, i32 0
  %459 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %458, align 8
  %460 = icmp eq %"class.WTF::StringImpl"* %459, null
  br i1 %460, label %478, label %461

461:                                              ; preds = %456
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %478

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = zext i32 %468 to i33
  %470 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %469, i33 1) #7
  %471 = extractvalue { i33, i1 } %470, 1
  %472 = extractvalue { i33, i1 } %470, 0
  %473 = icmp slt i33 %472, 0
  %474 = or i1 %471, %473
  br i1 %474, label %475, label %476, !prof !3

475:                                              ; preds = %466
  tail call void @llvm.trap() #7
  unreachable

476:                                              ; preds = %466
  %477 = trunc i33 %472 to i32
  store i32 %477, i32* %467, align 4
  br label %478

478:                                              ; preds = %456, %461, %476
  %479 = bitcast %"class.WTF::StringBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %479) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 -86, i64 48, i1 false)
  %480 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %480, align 8
  %481 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 1
  %482 = bitcast %union.anon.838* %481 to i8*
  store i8 0, i8* %482, align 8
  %483 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 2
  store i32 0, i32* %483, align 8
  %484 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 3
  store i8 1, i8* %484, align 4
  %485 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %12, i64 0, i32 4
  store i8 0, i8* %485, align 1
  %486 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %492, label %489

489:                                              ; preds = %478
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 1
  %491 = load i32, i32* %490, align 4
  br label %492

492:                                              ; preds = %478, %489
  %493 = phi i32 [ %491, %489 ], [ 0, %478 ]
  br i1 %460, label %497, label %494

494:                                              ; preds = %492
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 1
  %496 = load i32, i32* %495, align 4
  br label %497

497:                                              ; preds = %492, %494
  %498 = phi i32 [ %496, %494 ], [ 0, %492 ]
  %499 = add i32 %498, %493
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %12, i32 %499) #7
  %500 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %500) #7
  %501 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  br i1 %460, label %509, label %502

502:                                              ; preds = %497
  store i32 %1, i32* %501, align 8
  %503 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %459, %"class.WTF::StringImpl"** %503, align 8
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 1
  %507 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %508 = bitcast i8** %507 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %506, %"class.WTF::StringImpl"** %508, align 8
  br label %513

509:                                              ; preds = %497
  store i32 0, i32* %501, align 8
  %510 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %510, align 8
  %511 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %512 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %511, i64* %512, align 8
  br label %513

513:                                              ; preds = %502, %509
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %500) #7
  %514 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %514) #7
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %515, null
  br i1 %516, label %517, label %521

517:                                              ; preds = %513
  %518 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %518, align 8
  %519 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %520 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %519, i64* %520, align 8
  br label %528

521:                                              ; preds = %513
  %522 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %515, %"class.WTF::StringImpl"** %522, align 8
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 0, i32 1
  %524 = load i32, i32* %523, align 4
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %515, i64 1
  %526 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %527 = bitcast i8** %526 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %525, %"class.WTF::StringImpl"** %527, align 8
  br label %528

528:                                              ; preds = %517, %521
  %529 = phi i32 [ %524, %521 ], [ 0, %517 ]
  %530 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %529, i32* %530, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %514) #7
  %531 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %531) #7
  br i1 %460, label %554, label %532

532:                                              ; preds = %528
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 1
  %534 = load i32, i32* %533, align 4
  %535 = sub i32 %534, %1
  %536 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %535, i32* %536, align 8
  %537 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %459, %"class.WTF::StringImpl"** %537, align 8
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 1
  %541 = icmp eq i32 %540, 0
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 1
  br i1 %541, label %548, label %543

543:                                              ; preds = %532
  %544 = bitcast %"class.WTF::StringImpl"* %542 to i8*
  %545 = zext i32 %1 to i64
  %546 = getelementptr inbounds i8, i8* %544, i64 %545
  %547 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* %546, i8** %547, align 8
  br label %559

548:                                              ; preds = %532
  %549 = bitcast %"class.WTF::StringImpl"* %542 to i16*
  %550 = zext i32 %1 to i64
  %551 = getelementptr inbounds i16, i16* %549, i64 %550
  %552 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %553 = bitcast i8** %552 to i16**
  store i16* %551, i16** %553, align 8
  br label %559

554:                                              ; preds = %528
  %555 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %555, align 8
  %556 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %556, align 8
  %557 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %558 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %557, i64* %558, align 8
  br label %559

559:                                              ; preds = %543, %548, %554
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %531) #7
  %560 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #7
  %561 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %12) #7
  %562 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %561, %"class.WTF::StringImpl"** %562, align 8
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %568, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 1
  %567 = load i32, i32* %566, align 4
  br label %568

568:                                              ; preds = %559, %565
  %569 = phi i32 [ %567, %565 ], [ 0, %559 ]
  call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %16, i32 %1, i32 0, i32 %569, i32 1)
  %570 = icmp eq %"class.WTF::StringImpl"* %561, null
  br i1 %570, label %584, label %571

571:                                              ; preds = %568
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  %576 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %561, i64 0, i32 0
  %577 = load i32, i32* %576, align 4
  br i1 %575, label %578, label %580

578:                                              ; preds = %571
  %579 = add i32 %577, -1
  store i32 %579, i32* %576, align 4
  br label %580

580:                                              ; preds = %578, %571
  %581 = phi i32 [ %579, %578 ], [ %577, %571 ]
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %584

583:                                              ; preds = %580
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %561) #7
  br label %584

584:                                              ; preds = %568, %580, %583
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %560) #7
  %585 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %586 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %585, align 8
  %587 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %586, i64 0, i32 2, i32 0, i32 0
  %588 = load %"class.blink::Document"*, %"class.blink::Document"** %587, align 8
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %594, label %591

591:                                              ; preds = %584
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 1
  %593 = load i32, i32* %592, align 4
  br label %594

594:                                              ; preds = %584, %591
  %595 = phi i32 [ %593, %591 ], [ 0, %584 ]
  call void @_ZN5blink8Document13DidInsertTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %588, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 %1, i32 %595) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %12) #7
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %611, label %598

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %596) #7
  br label %611

611:                                              ; preds = %594, %607, %610
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %479) #7
  br i1 %460, label %625, label %612

612:                                              ; preds = %611
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = load atomic i32, i32* %613 monotonic, align 4
  %615 = and i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %459, i64 0, i32 0
  %618 = load i32, i32* %617, align 4
  br i1 %616, label %619, label %621

619:                                              ; preds = %612
  %620 = add i32 %618, -1
  store i32 %620, i32* %617, align 4
  br label %621

621:                                              ; preds = %619, %612
  %622 = phi i32 [ %620, %619 ], [ %618, %612 ]
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %625

624:                                              ; preds = %621
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %459) #7
  br label %625

625:                                              ; preds = %624, %621, %611, %449
  ret void
}

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #7
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #7
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #7
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #7
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #7
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink8Document13DidInsertTextERKNS_13CharacterDataEjj(%"class.blink::Document"*, %"class.blink::CharacterData"* dereferenceable(88), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData10deleteDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #7
  store i32 0, i32* %5, align 4
  %11 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %15, align 8
  %17 = icmp eq %"class.blink::ParkableStringImpl"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %19, align 8
  %21 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %20, null
  br i1 %21, label %22, label %29

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %16, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  br label %39

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %20, i64 0, i32 8
  %31 = load i32, i32* %30, align 4
  br label %39

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %14, %22, %26, %29, %32, %36
  %40 = phi i32 [ 0, %14 ], [ %31, %29 ], [ %28, %26 ], [ 0, %22 ], [ %38, %36 ], [ 0, %32 ]
  %41 = call fastcc zeroext i1 @_ZN5blinkL19ValidateOffsetCountEjjjRjRNS_14ExceptionStateE(i32 %1, i32 %2, i32 %40, i32* nonnull dereferenceable(4) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %41, label %42, label %182

42:                                               ; preds = %39
  %43 = load i8, i8* %11, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %47 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %46) #7
  br label %50

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %50

50:                                               ; preds = %45, %48
  %51 = phi %"class.WTF::String"* [ %47, %45 ], [ %49, %48 ]
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %72, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = zext i32 %62 to i33
  %64 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %63, i33 1) #7
  %65 = extractvalue { i33, i1 } %64, 1
  %66 = extractvalue { i33, i1 } %64, 0
  %67 = icmp slt i33 %66, 0
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %60
  tail call void @llvm.trap() #7
  unreachable

70:                                               ; preds = %60
  %71 = trunc i33 %66 to i32
  store i32 %71, i32* %61, align 4
  br label %72

72:                                               ; preds = %50, %55, %70
  %73 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 48, i1 false)
  %74 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %76 = bitcast %union.anon.838* %75 to i8*
  store i8 0, i8* %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %77, align 8
  %78 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %78, align 4
  %79 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %79, align 1
  br i1 %54, label %83, label %80

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %72, %80
  %84 = phi i32 [ %82, %80 ], [ 0, %72 ]
  %85 = load i32, i32* %5, align 4
  %86 = sub i32 %84, %85
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %6, i32 %86) #7
  %87 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #7
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  br i1 %54, label %96, label %89

89:                                               ; preds = %83
  store i32 %1, i32* %88, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %100

96:                                               ; preds = %83
  store i32 0, i32* %88, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %97, align 8
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %98, i64* %99, align 8
  br label %100

100:                                              ; preds = %89, %96
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #7
  %101 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #7
  %102 = add i32 %85, %1
  br i1 %54, label %125, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = sub i32 %105, %102
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %106, i32* %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %108, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  br i1 %112, label %119, label %114

114:                                              ; preds = %103
  %115 = bitcast %"class.WTF::StringImpl"* %113 to i8*
  %116 = zext i32 %102 to i64
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %117, i8** %118, align 8
  br label %130

119:                                              ; preds = %103
  %120 = bitcast %"class.WTF::StringImpl"* %113 to i16*
  %121 = zext i32 %102 to i64
  %122 = getelementptr inbounds i16, i16* %120, i64 %121
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %124 = bitcast i8** %123 to i16**
  store i16* %122, i16** %124, align 8
  br label %130

125:                                              ; preds = %100
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %127, align 8
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %128, i64* %129, align 8
  br label %130

130:                                              ; preds = %114, %119, %125
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #7
  %131 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #7
  %132 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #7
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %133, align 8
  call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 %1, i32 %85, i32 0, i32 1)
  %134 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #7
  br label %148

148:                                              ; preds = %130, %144, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #7
  %149 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %150 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %150, i64 0, i32 2, i32 0, i32 0
  %152 = load %"class.blink::Document"*, %"class.blink::Document"** %151, align 8
  call void @_ZN5blink8Document13DidRemoveTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %152, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 %1, i32 %85) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #7
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #7
  br label %168

168:                                              ; preds = %148, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #7
  br i1 %54, label %182, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #7
  br label %182

182:                                              ; preds = %181, %178, %168, %39
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL19ValidateOffsetCountEjjjRjRNS_14ExceptionStateE(i32, i32, i32, i32* nocapture dereferenceable(4), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %6 = alloca %"class.WTF::StringAppend.834", align 8
  %7 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %8 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::StringAppend.834", align 8
  %12 = alloca %"class.WTF::StringAppend.835", align 8
  %13 = icmp ult i32 %2, %0
  br i1 %13, label %14, label %387

14:                                               ; preds = %5
  %15 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #7
  %16 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #7
  %17 = bitcast %"class.WTF::StringAppend.834"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #7
  %18 = bitcast %"class.WTF::StringAppend.835"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 11
  %21 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 3
  %23 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false) #7
  store i8* %20, i8** %21, align 8
  %24 = urem i32 %0, 10
  %25 = udiv i32 %0, 10
  %26 = trunc i32 %24 to i8
  %27 = or i8 %26, 48
  store i8 %27, i8* %20, align 1
  %28 = icmp ugt i32 %0, 9
  br i1 %28, label %29, label %44

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 10
  store i8* %30, i8** %21, align 8
  %31 = urem i32 %25, 10
  %32 = trunc i32 %31 to i8
  %33 = or i8 %32, 48
  store i8 %33, i8* %30, align 2
  %34 = icmp ugt i32 %0, 99
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = udiv i32 %0, 100
  %37 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %8, i64 0, i32 0, i64 9
  store i8* %37, i8** %21, align 8
  %38 = urem i32 %36, 10
  %39 = trunc i32 %38 to i8
  %40 = or i8 %39, 48
  store i8 %40, i8* %37, align 1
  %41 = icmp ugt i32 %0, 999
  br i1 %41, label %46, label %55

42:                                               ; preds = %29
  %43 = ptrtoint i8* %30 to i64
  br label %58

44:                                               ; preds = %14
  %45 = ptrtoint i8* %20 to i64
  br label %58

46:                                               ; preds = %35, %46
  %47 = phi i32 [ %49, %46 ], [ %36, %35 ]
  %48 = load i8*, i8** %21, align 8
  %49 = udiv i32 %47, 10
  %50 = getelementptr inbounds i8, i8* %48, i64 -1
  store i8* %50, i8** %21, align 8
  %51 = urem i32 %49, 10
  %52 = trunc i32 %51 to i8
  %53 = or i8 %52, 48
  store i8 %53, i8* %50, align 1
  %54 = icmp ugt i32 %47, 99
  br i1 %54, label %46, label %55

55:                                               ; preds = %46, %35
  %56 = bitcast i8** %21 to i64*
  %57 = load i64, i64* %56, align 8
  br label %58

58:                                               ; preds = %55, %42, %44
  %59 = phi i64 [ %45, %44 ], [ %57, %55 ], [ %43, %42 ]
  %60 = ptrtoint i8* %23 to i64
  %61 = sub i64 %60, %59
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %22, align 8
  %63 = inttoptr i64 %59 to i8*
  %64 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %63, i32 %62) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #7
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %141, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %83

73:                                               ; preds = %66
  %74 = zext i32 %72 to i33
  %75 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #7
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %73
  call void @llvm.trap() #7
  unreachable

81:                                               ; preds = %73
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %71, align 4
  br label %83

83:                                               ; preds = %81, %66
  %84 = phi i32 [ %82, %81 ], [ %72, %66 ]
  %85 = load atomic i32, i32* %67 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %83
  %89 = zext i32 %84 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #7
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !3

95:                                               ; preds = %88
  call void @llvm.trap() #7
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %71, align 4
  br label %98

98:                                               ; preds = %96, %83
  %99 = phi i32 [ %97, %96 ], [ %84, %83 ]
  %100 = load atomic i32, i32* %67 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = add i32 %99, -1
  store i32 %104, i32* %71, align 4
  br label %105

105:                                              ; preds = %103, %98
  %106 = phi i32 [ %104, %103 ], [ %99, %98 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #7
  br label %109

109:                                              ; preds = %105, %108
  %110 = load atomic i32, i32* %67 monotonic, align 4, !noalias !16
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = load i32, i32* %71, align 4
  br i1 %112, label %114, label %124

114:                                              ; preds = %109
  %115 = zext i32 %113 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #7
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !3

121:                                              ; preds = %114
  call void @llvm.trap() #7, !noalias !16
  unreachable

122:                                              ; preds = %114
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %71, align 4, !noalias !16
  br label %124

124:                                              ; preds = %109, %122
  %125 = phi i32 [ %123, %122 ], [ %113, %109 ]
  %126 = bitcast %"class.WTF::StringAppend.835"* %12 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %126, align 8, !alias.scope !16
  %127 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %127, align 8, !alias.scope !16
  %128 = load atomic i32, i32* %67 monotonic, align 4, !noalias !16
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %145

131:                                              ; preds = %124
  %132 = zext i32 %125 to i33
  %133 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %132, i33 1) #7
  %134 = extractvalue { i33, i1 } %133, 1
  %135 = extractvalue { i33, i1 } %133, 0
  %136 = icmp slt i33 %135, 0
  %137 = or i1 %134, %136
  br i1 %137, label %138, label %139, !prof !3

138:                                              ; preds = %131
  call void @llvm.trap() #7, !noalias !16
  unreachable

139:                                              ; preds = %131
  %140 = trunc i33 %135 to i32
  store i32 %140, i32* %71, align 4, !noalias !16
  br label %145

141:                                              ; preds = %58
  %142 = bitcast %"class.WTF::StringAppend.835"* %12 to i64*
  store i64 ptrtoint ([12 x i8]* @.str to i64), i64* %142, align 8, !alias.scope !16
  %143 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %143, align 8, !alias.scope !16
  %144 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %144, align 8, !alias.scope !16
  br label %157

145:                                              ; preds = %139, %124
  %146 = phi i32 [ %140, %139 ], [ %125, %124 ]
  %147 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8** %147, align 8, !alias.scope !16
  %148 = load atomic i32, i32* %67 monotonic, align 4, !noalias !16
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = add i32 %146, -1
  store i32 %152, i32* %71, align 4, !noalias !16
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i32 [ %152, %151 ], [ %146, %145 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #7, !noalias !16
  br label %157

157:                                              ; preds = %141, %153, %156
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #7
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 11
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 2
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 3
  %162 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 32, i1 false) #7
  store i8* %159, i8** %160, align 8
  %163 = urem i32 %2, 10
  %164 = udiv i32 %2, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %159, align 1
  %167 = icmp ugt i32 %2, 9
  br i1 %167, label %168, label %183

168:                                              ; preds = %157
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 10
  store i8* %169, i8** %160, align 8
  %170 = urem i32 %164, 10
  %171 = trunc i32 %170 to i8
  %172 = or i8 %171, 48
  store i8 %172, i8* %169, align 2
  %173 = icmp ugt i32 %2, 99
  br i1 %173, label %174, label %181

174:                                              ; preds = %168
  %175 = udiv i32 %2, 100
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %7, i64 0, i32 0, i64 9
  store i8* %176, i8** %160, align 8
  %177 = urem i32 %175, 10
  %178 = trunc i32 %177 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %176, align 1
  %180 = icmp ugt i32 %2, 999
  br i1 %180, label %185, label %194

181:                                              ; preds = %168
  %182 = ptrtoint i8* %169 to i64
  br label %197

183:                                              ; preds = %157
  %184 = ptrtoint i8* %159 to i64
  br label %197

185:                                              ; preds = %174, %185
  %186 = phi i32 [ %188, %185 ], [ %175, %174 ]
  %187 = load i8*, i8** %160, align 8
  %188 = udiv i32 %186, 10
  %189 = getelementptr inbounds i8, i8* %187, i64 -1
  store i8* %189, i8** %160, align 8
  %190 = urem i32 %188, 10
  %191 = trunc i32 %190 to i8
  %192 = or i8 %191, 48
  store i8 %192, i8* %189, align 1
  %193 = icmp ugt i32 %186, 99
  br i1 %193, label %185, label %194

194:                                              ; preds = %185, %174
  %195 = bitcast i8** %160 to i64*
  %196 = load i64, i64* %195, align 8
  br label %197

197:                                              ; preds = %194, %181, %183
  %198 = phi i64 [ %184, %183 ], [ %196, %194 ], [ %182, %181 ]
  %199 = ptrtoint i8* %162 to i64
  %200 = sub i64 %199, %198
  %201 = trunc i64 %200 to i32
  store i32 %201, i32* %161, align 8
  %202 = inttoptr i64 %198 to i8*
  %203 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %202, i32 %201) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #7
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.834"* nonnull sret %11, %"class.WTF::StringAppend.835"* nonnull dereferenceable(24) %12, %"class.WTF::StringImpl"* %203)
  %204 = bitcast %"class.WTF::StringAppend.834"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %204)
  %205 = bitcast %"class.WTF::StringAppend.834"* %11 to i64*
  %206 = load i64, i64* %205, align 8, !noalias !19
  %207 = bitcast %"class.WTF::StringAppend.834"* %6 to i64*
  store i64 %206, i64* %207, align 8, !noalias !19
  %208 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8, !noalias !19
  %210 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %210, align 8, !noalias !19
  %211 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %211, label %229, label %212

212:                                              ; preds = %197
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %229

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #7
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !3

226:                                              ; preds = %217
  call void @llvm.trap() #7
  unreachable

227:                                              ; preds = %217
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %218, align 4
  br label %229

229:                                              ; preds = %227, %212, %197
  %230 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %6, i64 0, i32 0, i32 1
  %231 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %11, i64 0, i32 0, i32 1
  %232 = bitcast i8** %231 to i64*
  %233 = load i64, i64* %232, align 8, !noalias !19
  %234 = bitcast i8** %230 to i64*
  store i64 %233, i64* %234, align 8, !noalias !19
  %235 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %11, i64 0, i32 1, i32 0, i32 0
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8, !noalias !19
  %237 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %6, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %236, %"class.WTF::StringImpl"** %237, align 8, !noalias !19
  %238 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %238, label %256, label %239

239:                                              ; preds = %229
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %256

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = zext i32 %246 to i33
  %248 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #7
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !3

253:                                              ; preds = %244
  call void @llvm.trap() #7
  unreachable

254:                                              ; preds = %244
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %245, align 4
  br label %256

256:                                              ; preds = %229, %239, %254
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"* nonnull %10, %"class.WTF::StringAppend.834"* nonnull byval(%"class.WTF::StringAppend.834") align 8 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %204)
  %257 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %10)
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %257, %"class.WTF::StringImpl"** %258, align 8
  %259 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %260 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %259, align 8
  %261 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %260, align 8
  call void %261(%"class.blink::ExceptionState"* %4, i32 1, %"class.WTF::String"* nonnull dereferenceable(8) %9) #7
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %256
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #7
  br label %277

277:                                              ; preds = %256, %273, %276
  %278 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #7
  br label %294

294:                                              ; preds = %293, %290, %277
  %295 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %295, align 8
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %311, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %307

305:                                              ; preds = %298
  %306 = add i32 %304, -1
  store i32 %306, i32* %303, align 4
  br label %307

307:                                              ; preds = %305, %298
  %308 = phi i32 [ %306, %305 ], [ %304, %298 ]
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %310, label %311

310:                                              ; preds = %307
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #7
  br label %311

311:                                              ; preds = %294, %307, %310
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #7
  br label %327

327:                                              ; preds = %326, %323, %311
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #7
  br label %343

343:                                              ; preds = %327, %339, %342
  %344 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  br i1 %351, label %354, label %356

354:                                              ; preds = %347
  %355 = add i32 %353, -1
  store i32 %355, i32* %352, align 4
  br label %356

356:                                              ; preds = %354, %347
  %357 = phi i32 [ %355, %354 ], [ %353, %347 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %360

359:                                              ; preds = %356
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %345) #7
  br label %360

360:                                              ; preds = %343, %356, %359
  br i1 %65, label %386, label %361

361:                                              ; preds = %360
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %367 = load i32, i32* %366, align 4
  br i1 %365, label %368, label %370

368:                                              ; preds = %361
  %369 = add i32 %367, -1
  store i32 %369, i32* %366, align 4
  br label %370

370:                                              ; preds = %368, %361
  %371 = phi i32 [ %369, %368 ], [ %367, %361 ]
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %370
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #7
  %374 = load i32, i32* %366, align 4
  br label %375

375:                                              ; preds = %370, %373
  %376 = phi i32 [ %371, %370 ], [ %374, %373 ]
  %377 = load atomic i32, i32* %362 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %375
  %381 = add i32 %376, -1
  store i32 %381, i32* %366, align 4
  br label %382

382:                                              ; preds = %380, %375
  %383 = phi i32 [ %381, %380 ], [ %376, %375 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #7
  br label %386

386:                                              ; preds = %360, %382, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #7
  br label %395

387:                                              ; preds = %5
  %388 = tail call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %0, i32 %1) #7
  %389 = extractvalue { i32, i1 } %388, 1
  %390 = add i32 %1, %0
  %391 = icmp ugt i32 %390, %2
  %392 = or i1 %389, %391
  %393 = sub i32 %2, %0
  %394 = select i1 %392, i32 %393, i32 %1
  store i32 %394, i32* %3, align 4
  br label %395

395:                                              ; preds = %387, %386
  %396 = phi i1 [ false, %386 ], [ true, %387 ]
  ret i1 %396
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData11replaceDataEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.WTF::StringBuilder", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #7
  store i32 0, i32* %6, align 4
  %13 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %17, align 8
  %19 = icmp eq %"class.blink::ParkableStringImpl"* %18, null
  br i1 %19, label %41, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %21, align 8
  %23 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %18, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  br label %41

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %22, i64 0, i32 8
  %33 = load i32, i32* %32, align 4
  br label %41

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %16, %24, %28, %31, %34, %38
  %42 = phi i32 [ 0, %16 ], [ %33, %31 ], [ %30, %28 ], [ 0, %24 ], [ %40, %38 ], [ 0, %34 ]
  %43 = call fastcc zeroext i1 @_ZN5blinkL19ValidateOffsetCountEjjjRjRNS_14ExceptionStateE(i32 %1, i32 %2, i32 %42, i32* nonnull dereferenceable(4) %6, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  br i1 %43, label %44, label %227

44:                                               ; preds = %41
  %45 = load i8, i8* %13, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %49 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %48) #7
  br label %52

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi %"class.WTF::String"* [ %49, %47 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %74, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #7
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %62
  tail call void @llvm.trap() #7
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %52, %57, %72
  %75 = bitcast %"class.WTF::StringBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %75) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 48, i1 false)
  %76 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 1
  %78 = bitcast %union.anon.838* %77 to i8*
  store i8 0, i8* %78, align 8
  %79 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 2
  store i32 0, i32* %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 3
  store i8 1, i8* %80, align 4
  %81 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %7, i64 0, i32 4
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  br label %88

88:                                               ; preds = %74, %85
  %89 = phi i32 [ %87, %85 ], [ 0, %74 ]
  br i1 %56, label %93, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %88, %90
  %94 = phi i32 [ %92, %90 ], [ 0, %88 ]
  %95 = add i32 %94, %89
  %96 = load i32, i32* %6, align 4
  %97 = sub i32 %95, %96
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %7, i32 %97) #7
  %98 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  br i1 %56, label %107, label %100

100:                                              ; preds = %93
  store i32 %1, i32* %99, align 8
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %106, align 8
  br label %111

107:                                              ; preds = %93
  store i32 0, i32* %99, align 8
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %110 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %109, i64* %110, align 8
  br label %111

111:                                              ; preds = %100, %107
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #7
  %112 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #7
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %116, align 8
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %117, i64* %118, align 8
  br label %126

119:                                              ; preds = %111
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  br label %126

126:                                              ; preds = %115, %119
  %127 = phi i32 [ %122, %119 ], [ 0, %115 ]
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %127, i32* %128, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #7
  %129 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #7
  %130 = add i32 %96, %1
  br i1 %56, label %153, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = sub i32 %133, %130
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %134, i32* %135, align 8
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %136, align 8
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 1
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 1
  br i1 %140, label %147, label %142

142:                                              ; preds = %131
  %143 = bitcast %"class.WTF::StringImpl"* %141 to i8*
  %144 = zext i32 %130 to i64
  %145 = getelementptr inbounds i8, i8* %143, i64 %144
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* %145, i8** %146, align 8
  br label %158

147:                                              ; preds = %131
  %148 = bitcast %"class.WTF::StringImpl"* %141 to i16*
  %149 = zext i32 %130 to i64
  %150 = getelementptr inbounds i16, i16* %148, i64 %149
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %152 = bitcast i8** %151 to i16**
  store i16* %150, i16** %152, align 8
  br label %158

153:                                              ; preds = %126
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %155, align 8
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %157 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %142, %147, %153
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #7
  %159 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #7
  %160 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %7) #7
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %161, align 8
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %167, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 1
  %166 = load i32, i32* %165, align 4
  br label %167

167:                                              ; preds = %158, %164
  %168 = phi i32 [ %166, %164 ], [ 0, %158 ]
  call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %11, i32 %1, i32 %96, i32 %168, i32 1)
  %169 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %167
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #7
  br label %183

183:                                              ; preds = %167, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #7
  %184 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %185 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %185, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::Document"*, %"class.blink::Document"** %186, align 8
  call void @_ZN5blink8Document13DidRemoveTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %187, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 %1, i32 %96) #7
  %188 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %184, align 8
  %189 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %188, i64 0, i32 2, i32 0, i32 0
  %190 = load %"class.blink::Document"*, %"class.blink::Document"** %189, align 8
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  br label %196

196:                                              ; preds = %183, %193
  %197 = phi i32 [ %195, %193 ], [ 0, %183 ]
  call void @_ZN5blink8Document13DidInsertTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %190, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 %1, i32 %197) #7
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %7) #7
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #7
  br label %213

213:                                              ; preds = %196, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %75) #7
  br i1 %56, label %227, label %214

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #7
  br label %227

227:                                              ; preds = %226, %223, %213, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13CharacterData9nodeValueEv(%"class.blink::CharacterData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %7 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %6) #7
  br label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi %"class.WTF::String"* [ %7, %5 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #7
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #7
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %10, %15, %30
  ret %"class.WTF::StringImpl"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CharacterData29ContainsOnlyWhitespaceOrEmptyEv(%"class.blink::CharacterData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %7 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %6) #7
  br label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi %"class.WTF::String"* [ %7, %5 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = tail call zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"* nonnull %13) #7
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i1 [ true, %10 ], [ %16, %15 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData12setNodeValueERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  %6 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %7 = select i1 %5, %"class.WTF::String"* %6, %"class.WTF::String"* %1
  %8 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %29, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %12, align 8
  %14 = icmp eq %"class.blink::ParkableStringImpl"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %16, align 8
  %18 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %13, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  br label %36

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %17, i64 0, i32 8
  %28 = load i32, i32* %27, align 4
  br label %36

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %33, %29, %26, %23, %19, %11
  %37 = phi i32 [ 0, %11 ], [ %28, %26 ], [ %25, %23 ], [ 0, %19 ], [ %35, %33 ], [ 0, %29 ]
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  br label %44

44:                                               ; preds = %36, %41
  %45 = phi i32 [ %43, %41 ], [ 0, %36 ]
  tail call void @_ZN5blink13CharacterData16SetDataAndUpdateERKN3WTF6StringEjjjNS0_12UpdateSourceE(%"class.blink::CharacterData"* %0, %"class.WTF::String"* dereferenceable(8) %7, i32 0, i32 %37, i32 %45, i32 1) #7
  %46 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  tail call void @_ZN5blink8Document13DidRemoveTextERKNS_13CharacterDataEjj(%"class.blink::Document"* %49, %"class.blink::CharacterData"* dereferenceable(88) %0, i32 0, i32 %37) #7
  ret void
}

declare void @_ZN5blink4Text22UpdateTextLayoutObjectEjj(%"class.blink::Text"*, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink21ProcessingInstruction19DidAttributeChangedEv(%"class.blink::ProcessingInstruction"*) local_unnamed_addr #2

declare void @_ZN5blink8Document25NotifyUpdateCharacterDataEPNS_13CharacterDataEjjj(%"class.blink::Document"*, %"class.blink::CharacterData"*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CharacterData13DidModifyDataERKN3WTF6StringENS0_12UpdateSourceE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::ContainerNode::ChildrenChange", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 57
  %12 = load i8, i8* %11, align 2
  %13 = and i8 %12, 4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %3
  %16 = tail call %"class.blink::MutationObserverInterestGroup"* @_ZN5blink29MutationObserverInterestGroup14CreateIfNeededERNS_4NodeENS_12MutationTypeEhPKNS_13QualifiedNameE(%"class.blink::Node"* dereferenceable(64) %6, i32 4, i8 zeroext 64, %"class.blink::QualifiedName"* null) #7
  %17 = icmp eq %"class.blink::MutationObserverInterestGroup"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = tail call %"class.blink::MutationRecord"* @_ZN5blink14MutationRecord19CreateCharacterDataEPNS_4NodeERKN3WTF6StringE(%"class.blink::Node"* %6, %"class.WTF::String"* dereferenceable(8) %1) #7
  tail call void @_ZN5blink29MutationObserverInterestGroup21EnqueueMutationRecordEPNS_14MutationRecordE(%"class.blink::MutationObserverInterestGroup"* nonnull %16, %"class.blink::MutationRecord"* %19) #7
  br label %20

20:                                               ; preds = %3, %15, %18
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %6) #7
  %22 = icmp eq %"class.blink::ContainerNode"* %21, null
  br i1 %22, label %43, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %24) #7
  %25 = bitcast %"struct.blink::ContainerNode::ChildrenChange"* %4 to i64*
  store i64 -6148914691236517206, i64* %25, align 8
  store i8 5, i8* %24, align 8
  %26 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 1
  %27 = icmp eq i32 %2, 0
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %26, align 1
  %29 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 2
  store %"class.blink::Node"* %6, %"class.blink::Node"** %29, align 8
  %30 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 3
  %31 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  %32 = bitcast %"class.blink::Node"** %31 to <2 x i64>*
  %33 = load <2 x i64>, <2 x i64>* %32, align 8
  %34 = bitcast %"class.blink::Node"** %30 to <2 x i64>*
  store <2 x i64> %33, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 5
  %36 = getelementptr inbounds %"struct.blink::ContainerNode::ChildrenChange", %"struct.blink::ContainerNode::ChildrenChange"* %4, i64 0, i32 6
  %37 = bitcast %"class.blink::HeapVector.1022"* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %36, align 8
  %38 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %6) #7
  %39 = bitcast %"class.blink::ContainerNode"* %38 to void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)***
  %40 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)**, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %40, i64 72
  %42 = load void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)*, void (%"class.blink::ContainerNode"*, %"struct.blink::ContainerNode::ChildrenChange"*)** %41, align 8
  call void %42(%"class.blink::ContainerNode"* %38, %"struct.blink::ContainerNode::ChildrenChange"* nonnull dereferenceable(56) %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %24) #7
  br label %43

43:                                               ; preds = %20, %23
  %44 = icmp eq i32 %2, 0
  br i1 %44, label %96, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 512
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %96

50:                                               ; preds = %45
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 56
  %55 = load i16, i16* %54, align 8
  %56 = and i16 %55, 32
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %95, label %58

58:                                               ; preds = %50
  %59 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kDOMCharacterDataModifiedE, align 8
  %60 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 1
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  %65 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %64) #7
  br label %68

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3
  br label %68

68:                                               ; preds = %63, %66
  %69 = phi %"class.WTF::String"* [ %65, %63 ], [ %67, %66 ]
  %70 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #7
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %71, align 8
  %72 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 144) #7
  %73 = bitcast i8* %72 to %"class.blink::MutationEvent"*
  call void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"* %73, %"class.WTF::AtomicString"* dereferenceable(8) %59, i32 0, i32 1, %"class.blink::Node"* null, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %69, %"class.WTF::String"* nonnull dereferenceable(8) %5, i16 zeroext 0) #7
  %74 = getelementptr inbounds i8, i8* %72, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = bitcast i8* %72 to %"class.blink::Event"*
  call void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"* %6, %"class.blink::Event"* dereferenceable(104) %78) #7
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %68
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #7
  br label %94

94:                                               ; preds = %68, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #7
  br label %95

95:                                               ; preds = %50, %94
  call void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"* %6) #7
  br label %96

96:                                               ; preds = %45, %43, %95
  %97 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %98 = and i32 %97, 320
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  call void @_ZN5blink5probe25CharacterDataModifiedImplEPNS_13CharacterDataE(%"class.blink::CharacterData"* %0) #7
  br label %101

101:                                              ; preds = %96, %100
  ret void
}

declare void @_ZN5blink29MutationObserverInterestGroup21EnqueueMutationRecordEPNS_14MutationRecordE(%"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationRecord"*) local_unnamed_addr #2

declare %"class.blink::MutationRecord"* @_ZN5blink14MutationRecord19CreateCharacterDataEPNS_4NodeERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink4Node19DispatchScopedEventERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN5blink4Node28DispatchSubtreeModifiedEventEv(%"class.blink::Node"*) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CharacterDataD2Ev(%"class.blink::CharacterData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [74 x i8*] }, { [74 x i8*] }* @_ZTVN5blink13CharacterDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #7
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 2
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %20) #7
  %21 = getelementptr inbounds %"class.blink::CharacterData", %"class.blink::CharacterData"* %0, i64 0, i32 0
  tail call void @_ZN5blink4NodeD2Ev(%"class.blink::Node"* %21) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CharacterDataD0Ev(%"class.blink::CharacterData"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #7
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare void @_ZNK5blink4Node5TraceEPNS_7VisitorE(%"class.blink::Node"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13CharacterData18GetWrapperTypeInfoEv(%"class.blink::CharacterData"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13CharacterData18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13CharacterData19IsCharacterDataNodeEv(%"class.blink::CharacterData"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node23CanContainRangeEndPointEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::Node"*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink4Node10SetDraggedEb(%"class.blink::Node"*, i1 zeroext) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #2

declare { i64, i64 } @_ZNK5blink4Node11BoundingBoxEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE(%"class.blink::Node"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN5blink4Node16DetachLayoutTreeEb(%"class.blink::Node"*, i1 zeroext) unnamed_addr #2

declare i32 @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104), %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #2

declare void @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Node"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #2

declare %"class.blink::ComputedStyle"* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Node"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18ParkableStringImplD1Ev(%"class.blink::ParkableStringImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #5

declare zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.blink::MutationObserverInterestGroup"* @_ZN5blink29MutationObserverInterestGroup14CreateIfNeededERNS_4NodeENS_12MutationTypeEhPKNS_13QualifiedNameE(%"class.blink::Node"* dereferenceable(64), i32, i8 zeroext, %"class.blink::QualifiedName"*) local_unnamed_addr #2

declare void @_ZN5blink13MutationEventC1ERKN3WTF12AtomicStringENS_5Event7BubblesENS5_10CancelableEPNS_4NodeERKNS1_6StringESC_SC_t(%"class.blink::MutationEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i16 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #7
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare void @_ZN5blink5probe25CharacterDataModifiedImplEPNS_13CharacterDataE(%"class.blink::CharacterData"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4NodeD2Ev(%"class.blink::Node"*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.834"*, %"class.WTF::StringAppend.835"* byval(%"class.WTF::StringAppend.835") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.835"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.834"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #7
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #7
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #7
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #7
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #7
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #7
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.834"* byval(%"class.WTF::StringAppend.834") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.834"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #7
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #7
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #7
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #7
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #7
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #7
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2025", %"class.WTF::StringTypeAdapter.2025"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %14) #7
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.834"* %9) #7
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.834"* %9) #7
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %25, i8* %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #7
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.835"* %10, i8* %1) #7
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.835"* %10) #7
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2028"* nonnull %30, i8* %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.834"* %5) #7
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %36) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #7
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.2027"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.835"* %10, i16* %1) #7
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.835"* %10) #7
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2028"* nonnull %30, i16* %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.834"* %5) #7
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i16* %36) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.834"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.834", %"class.WTF::StringAppend.834"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.835"* %8) #7
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.835"* %8) #7
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #7
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %26, i8* %27) #7
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #7
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.835"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2025", %"class.WTF::StringTypeAdapter.2025"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %14) #7
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.836"* %9) #7
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.836"* %9) #7
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %25, i8* %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #7
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %41, i8* %42) #7
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #7
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #7
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.836"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2025", %"class.WTF::StringTypeAdapter.2025"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.836", %"class.WTF::StringAppend.836"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2025"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %4, i8* %13) #7
  %14 = getelementptr inbounds %"class.WTF::StringAppend.836", %"class.WTF::StringAppend.836"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %30, i8* %31) #7
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #7
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #7
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #7
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %45, i8* %46) #7
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #7
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #7
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2025"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2028"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.835"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2025"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2025"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.2025"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2025", %"class.WTF::StringTypeAdapter.2025"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2025"* nonnull %3, i8* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2028"* nonnull %34, i8* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.836"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2025"* nonnull %5, i8* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2025"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2028"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.835"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2027", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2025", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2025"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2025"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %5, i8* %10) #7
  %11 = bitcast %"class.WTF::StringTypeAdapter.2025"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2025", %"class.WTF::StringTypeAdapter.2025"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #7
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2025"* nonnull %3, i8* %14) #7
  %15 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.835", %"class.WTF::StringAppend.835"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #7
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2027"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2025"* nonnull %3, i16* %1) #7
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2027", %"class.WTF::StringTypeAdapter.2027"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2028"* nonnull %34, i16* %37) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #7
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.836"* %6) #7
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2025"* nonnull %5, i16* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.837"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #7
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #7
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #7
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #7
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #7
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #7
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.837"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.837", %"class.WTF::StringAppend.837"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #7
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %31, i8* %32) #7
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #7
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #7
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %46, i8* %47) #7
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.6, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #7
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #7
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  ret i32 %24
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!6 = distinct !{!6, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
