; ModuleID = '../../third_party/blink/renderer/platform/graphics/memory_managed_paint_canvas.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/memory_managed_paint_canvas.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MemoryManagedPaintCanvas" = type { %"class.cc::RecordPaintCanvas", %"class.WTF::HashSet", i64, %"class.base::RepeatingCallback" }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional", %struct.SkRect }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp, [384 x i64], %class.sk_sp.0, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.2" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.0 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkRect = type { float, float, float, float }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::DisplayItemList" = type opaque
%"class.cc::PaintImage" = type { %class.sk_sp.9, %class.sk_sp.16, %"class.gfx::Rect", i32, %class.sk_sp.21, %class.sk_sp.22, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.9, %class.scoped_refptr.23 }
%class.sk_sp.16 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.17", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i8* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.21 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.22 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.9 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.10, i32, i32 }
%class.sk_sp.10 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.11" }
%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl.14" }
%"struct.std::__1::__cxx_atomic_impl.14" = type { %"struct.std::__1::__cxx_atomic_base_impl.15" }
%"struct.std::__1::__cxx_atomic_base_impl.15" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.scoped_refptr.23 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.24, %class.sk_sp.25, %class.sk_sp.55, %class.sk_sp.56, %class.sk_sp.57, %class.sk_sp.58, i32, float, float, i32, %union.anon.59, [4 x i8] }>
%class.sk_sp.24 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.25 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.26", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.16, i32, %"class.absl::optional.35", %"class.std::__1::vector", %"class.std::__1::vector.43", %class.sk_sp.50, %class.sk_sp.9, i32, [4 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, %union.anon.39 }
%union.anon.39 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i32* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { float*, float*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { float* }
%class.sk_sp.50 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.51", [7 x i8] }>
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%class.sk_sp.55 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.56 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.57 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.58 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.59 = type { i32 }
%struct.SkIPoint = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkPath = type <{ %class.sk_sp.60, i32, %"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11", i8, i8 }>
%class.sk_sp.60 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.61, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.62, %class.SkTDArray.63, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.61 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.62 = type { i8*, i32, i32 }
%class.SkTDArray.63 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.64 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.64 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.51", [3 x i8] }
%"class.cc::SkottieWrapper" = type opaque
%class.sk_sp.66 = type { %class.SkTextBlob* }
%class.SkTextBlob = type { %class.SkNVRefCnt.67, %struct.SkRect, i32, %"struct.std::__1::atomic.68" }
%class.SkNVRefCnt.67 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__cxx_atomic_impl.71" }
%"struct.std::__1::__cxx_atomic_impl.71" = type { %"struct.std::__1::__cxx_atomic_base_impl.72" }
%"struct.std::__1::__cxx_atomic_base_impl.72" = type { i32 }
%class.sk_sp.73 = type { %"class.cc::PaintOpBuffer"* }
%class.sk_sp.74 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.75, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.75 = type { %"struct.std::__1::atomic" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.78 }
%union.anon.78 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_ = comdat any

@_ZTVN5blink24MemoryManagedPaintCanvasE = hidden unnamed_addr constant { [49 x i8*] } { [49 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MemoryManagedPaintCanvas"*)* @_ZN5blink24MemoryManagedPaintCanvasD2Ev to i8*), i8* bitcast (void (%"class.blink::MemoryManagedPaintCanvas"*)* @_ZN5blink24MemoryManagedPaintCanvasD0Ev to i8*), i8* bitcast (void (%struct.SkImageInfo*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas9imageInfoEv to i8*), i8* bitcast (i8* (%"class.cc::RecordPaintCanvas"*, %struct.SkImageInfo*, i64*, %struct.SkIPoint*)* @_ZN2cc17RecordPaintCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas5flushEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas4saveEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8)* @_ZN2cc17RecordPaintCanvas14saveLayerAlphaEPK6SkRecth to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*)* @_ZN2cc17RecordPaintCanvas7restoreEv to i8*), i8* bitcast (i32 (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas12getSaveCountEv to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas14restoreToCountEi to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float)* @_ZN2cc17RecordPaintCanvas9translateEff to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float)* @_ZN2cc17RecordPaintCanvas5scaleEff to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float)* @_ZN2cc17RecordPaintCanvas6rotateEf to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkMatrix*)* @_ZN2cc17RecordPaintCanvas6concatERK8SkMatrix to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkMatrix*)* @_ZN2cc17RecordPaintCanvas9setMatrixERK8SkMatrix to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkM44*)* @_ZN2cc17RecordPaintCanvas6concatERK5SkM44 to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkM44*)* @_ZN2cc17RecordPaintCanvas9setMatrixERK5SkM44 to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i32, i1)* @_ZN2cc17RecordPaintCanvas8clipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, i32, i1)* @_ZN2cc17RecordPaintCanvas9clipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkPath*, i32, i1)* @_ZN2cc17RecordPaintCanvas8clipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEv to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*)* @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEP6SkRect to i8*), i8* bitcast ({ i64, i64 } (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEv to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*, %struct.SkIRect*)* @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEP7SkIRect to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32, i32)* @_ZN2cc17RecordPaintCanvas9drawColorEj11SkBlendMode to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas5clearEj to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawLineEffffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawRectERK6SkRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkIRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9drawIRectERK7SkIRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawOvalERK6SkRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas9drawRRectERK7SkRRectRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkRRect*, %class.SkRRect*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas10drawDRRectERK7SkRRectS3_RKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas13drawRoundRectERK6SkRectffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.SkPath*, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas8drawPathERK6SkPathRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::PaintImage"*, float, float, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*)* @_ZN5blink24MemoryManagedPaintCanvas9drawImageERKN2cc10PaintImageEffRK17SkSamplingOptionsPKNS1_10PaintFlagsE to i8*), i8* bitcast (void (%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::PaintImage"*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %"class.cc::PaintFlags"*, i32)* @_ZN5blink24MemoryManagedPaintCanvas13drawImageRectERKN2cc10PaintImageERK6SkRectS7_RK17SkSamplingOptionsPKNS1_10PaintFlagsEN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect*, float)* @_ZN2cc17RecordPaintCanvas11drawSkottieE13scoped_refptrINS_14SkottieWrapperEERK6SkRectf to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.66*, float, float, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.66*, float, float, i32, %"class.cc::PaintFlags"*)* @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, %class.sk_sp.73*)* @_ZN2cc17RecordPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE to i8*), i8* bitcast (i1 (%"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas11isClipEmptyEv to i8*), i8* bitcast (void (%class.SkMatrix*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas14getTotalMatrixEv to i8*), i8* bitcast (void (%class.SkM44*, %"class.cc::RecordPaintCanvas"*)* @_ZNK2cc17RecordPaintCanvas16getLocalToDeviceEv to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32, %struct.SkRect*, %class.sk_sp.74*)* @_ZN2cc17RecordPaintCanvas8AnnotateENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas16recordCustomDataEj to i8*), i8* bitcast (void (%"class.cc::RecordPaintCanvas"*, i32)* @_ZN2cc17RecordPaintCanvas9setNodeIdEi to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1

@_ZN5blink24MemoryManagedPaintCanvasC1EPN2cc15DisplayItemListERK6SkRectN4base17RepeatingCallbackIFvvEEE = hidden unnamed_addr alias void (%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect*, %"class.base::RepeatingCallback"*), void (%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect*, %"class.base::RepeatingCallback"*)* @_ZN5blink24MemoryManagedPaintCanvasC2EPN2cc15DisplayItemListERK6SkRectN4base17RepeatingCallbackIFvvEEE
@_ZN5blink24MemoryManagedPaintCanvasD1Ev = hidden unnamed_addr alias void (%"class.blink::MemoryManagedPaintCanvas"*), void (%"class.blink::MemoryManagedPaintCanvas"*)* @_ZN5blink24MemoryManagedPaintCanvasD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvasC2EPN2cc15DisplayItemListERK6SkRectN4base17RepeatingCallbackIFvvEEE(%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect* dereferenceable(16), %"class.base::RepeatingCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0
  tail call void @_ZN2cc17RecordPaintCanvasC2EPNS_15DisplayItemListERK6SkRect(%"class.cc::RecordPaintCanvas"* %5, %"class.cc::DisplayItemList"* %1, %struct.SkRect* dereferenceable(16) %2) #6
  %6 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN5blink24MemoryManagedPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::HashSet"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #6
  %9 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 2
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::RepeatingCallback"* %10 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  ret void
}

declare void @_ZN2cc17RecordPaintCanvasC2EPNS_15DisplayItemListERK6SkRect(%"class.cc::RecordPaintCanvas"*, %"class.cc::DisplayItemList"*, %struct.SkRect* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvasD2Ev(%"class.blink::MemoryManagedPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN5blink24MemoryManagedPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast i32* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #6
  store i32* null, i32** %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0
  tail call void @_ZN2cc17RecordPaintCanvasD2Ev(%"class.cc::RecordPaintCanvas"* %10) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc17RecordPaintCanvasD2Ev(%"class.cc::RecordPaintCanvas"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvasD0Ev(%"class.blink::MemoryManagedPaintCanvas"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*] }, { [49 x i8*] }* @_ZTVN5blink24MemoryManagedPaintCanvasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #6
  %4 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast i32* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %8) #6
  store i32* null, i32** %4, align 8
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0
  tail call void @_ZN2cc17RecordPaintCanvasD2Ev(%"class.cc::RecordPaintCanvas"* %10) #6
  %11 = bitcast %"class.blink::MemoryManagedPaintCanvas"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvas9drawImageERKN2cc10PaintImageEffRK17SkSamplingOptionsPKNS1_10PaintFlagsE(%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::PaintImage"* dereferenceable(104), float, float, %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0
  tail call void @_ZN2cc17RecordPaintCanvas9drawImageERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"* %7, %"class.cc::PaintImage"* dereferenceable(104) %1, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"* %5) #6
  tail call void @_ZN5blink24MemoryManagedPaintCanvas17UpdateMemoryUsageERKN2cc10PaintImageE(%"class.blink::MemoryManagedPaintCanvas"* %0, %"class.cc::PaintImage"* dereferenceable(104) %1)
  ret void
}

declare void @_ZN2cc17RecordPaintCanvas9drawImageERKNS_10PaintImageEffRK17SkSamplingOptionsPKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %"class.cc::PaintImage"* dereferenceable(104), float, float, %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvas17UpdateMemoryUsageERKN2cc10PaintImageE(%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.SkImageInfo, align 8
  %5 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"* %1, i64 0) #6
  %7 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %65, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add i32 %12, -1
  %14 = zext i32 %13 to i64
  %15 = shl i32 %6, 15
  %16 = xor i32 %15, -1
  %17 = add i32 %6, %16
  %18 = lshr i32 %17, 10
  %19 = xor i32 %18, %17
  %20 = mul i32 %19, 9
  %21 = lshr i32 %20, 6
  %22 = xor i32 %21, %20
  %23 = shl i32 %22, 11
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = and i32 %13, %27
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %8, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, %6
  br i1 %32, label %62, label %33

33:                                               ; preds = %10
  %34 = xor i32 %27, -1
  %35 = lshr i32 %25, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %52, %33
  %48 = phi i32 [ %31, %33 ], [ %58, %52 ]
  %49 = phi i64 [ %29, %33 ], [ %56, %52 ]
  %50 = phi i64 [ 0, %33 ], [ %54, %52 ]
  %51 = icmp eq i32 %48, 2147483647
  br i1 %51, label %65, label %52

52:                                               ; preds = %47
  %53 = icmp eq i64 %50, 0
  %54 = select i1 %53, i64 %46, i64 %50
  %55 = add i64 %54, %49
  %56 = and i64 %55, %14
  %57 = getelementptr inbounds i32, i32* %8, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %6
  br i1 %59, label %60, label %47

60:                                               ; preds = %52
  %61 = getelementptr inbounds i32, i32* %8, i64 %56
  br label %62

62:                                               ; preds = %60, %10
  %63 = phi i32* [ %30, %10 ], [ %61, %60 ]
  %64 = icmp eq i32* %63, null
  br i1 %64, label %65, label %104

65:                                               ; preds = %47, %62, %2
  %66 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #6
  %67 = tail call i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"* %1, i64 0) #6
  store i32 %67, i32* %3, align 4
  %68 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0
  %69 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"* %68, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #6
  %70 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #6
  call void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* nonnull sret %4, %"class.cc::PaintImage"* %1) #6
  %71 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0
  %75 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %74) #6
  %76 = sext i32 %75 to i64
  %77 = mul nsw i64 %76, %73
  %78 = icmp ult i64 %77, 2147483648
  %79 = select i1 %78, i64 %77, i64 0
  %80 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %4, i64 %79) #6
  %81 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  store i64 %83, i64* %81, align 8
  %84 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %85 = load %class.SkColorSpace*, %class.SkColorSpace** %84, align 8
  %86 = icmp eq %class.SkColorSpace* %85, null
  br i1 %86, label %95, label %87

87:                                               ; preds = %65
  %88 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = bitcast %class.SkColorSpace* %85 to i8*
  call void @_ZdlPv(i8* %92) #7
  br label %93

93:                                               ; preds = %91, %87
  %94 = load i64, i64* %81, align 8
  br label %95

95:                                               ; preds = %93, %65
  %96 = phi i64 [ %94, %93 ], [ %83, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #6
  %97 = icmp ugt i64 %96, 67108864
  br i1 %97, label %98, label %104

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %99, align 8
  %101 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %100, i64 0, i32 1
  %102 = bitcast void ()** %101 to void (%"class.base::internal::BindStateBase"*)**
  %103 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %102, align 8
  call void %103(%"class.base::internal::BindStateBase"* %100) #6
  br label %104

104:                                              ; preds = %62, %98, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24MemoryManagedPaintCanvas13drawImageRectERKN2cc10PaintImageERK6SkRectS7_RK17SkSamplingOptionsPKNS1_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.blink::MemoryManagedPaintCanvas"*, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*, i32) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 0
  tail call void @_ZN2cc17RecordPaintCanvas13drawImageRectERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.cc::RecordPaintCanvas"* %8, %"class.cc::PaintImage"* dereferenceable(104) %1, %struct.SkRect* dereferenceable(16) %2, %struct.SkRect* dereferenceable(16) %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %"class.cc::PaintFlags"* %5, i32 %6) #6
  tail call void @_ZN5blink24MemoryManagedPaintCanvas17UpdateMemoryUsageERKN2cc10PaintImageE(%"class.blink::MemoryManagedPaintCanvas"* %0, %"class.cc::PaintImage"* dereferenceable(104) %1)
  ret void
}

declare void @_ZN2cc17RecordPaintCanvas13drawImageRectERKNS_10PaintImageERK6SkRectS6_RK17SkSamplingOptionsPKNS_10PaintFlagsEN8SkCanvas17SrcRectConstraintE(%"class.cc::RecordPaintCanvas"*, %"class.cc::PaintImage"* dereferenceable(104), %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %"class.cc::PaintFlags"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZNK2cc10PaintImage20GetContentIdForFrameEm(%"class.cc::PaintImage"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZNK2cc10PaintImage14GetSkImageInfoEv(%struct.SkImageInfo* sret, %"class.cc::PaintImage"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24MemoryManagedPaintCanvas14IsCachingImageEi(%"class.blink::MemoryManagedPaintCanvas"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MemoryManagedPaintCanvas", %"class.blink::MemoryManagedPaintCanvas"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = shl i32 %1, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %12, %1
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %9, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %4, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %58, label %29

29:                                               ; preds = %6
  %30 = xor i32 %23, -1
  %31 = lshr i32 %21, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  br label %43

43:                                               ; preds = %48, %29
  %44 = phi i32 [ %27, %29 ], [ %54, %48 ]
  %45 = phi i64 [ %25, %29 ], [ %52, %48 ]
  %46 = phi i64 [ 0, %29 ], [ %50, %48 ]
  %47 = icmp eq i32 %44, 2147483647
  br i1 %47, label %58, label %48

48:                                               ; preds = %43
  %49 = icmp eq i64 %46, 0
  %50 = select i1 %49, i64 %42, i64 %46
  %51 = add i64 %50, %45
  %52 = and i64 %51, %10
  %53 = getelementptr inbounds i32, i32* %4, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %56, label %43

56:                                               ; preds = %48
  %57 = getelementptr inbounds i32, i32* %4, i64 %52
  br label %58

58:                                               ; preds = %43, %56, %2, %6
  %59 = phi i32* [ null, %2 ], [ %26, %6 ], [ %57, %56 ], [ null, %43 ]
  %60 = icmp ne i32* %59, null
  ret i1 %60
}

declare void @_ZNK2cc17RecordPaintCanvas9imageInfoEv(%struct.SkImageInfo* sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare i8* @_ZN2cc17RecordPaintCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint(%"class.cc::RecordPaintCanvas"*, %struct.SkImageInfo*, i64*, %struct.SkIPoint*) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas5flushEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare i32 @_ZN2cc17RecordPaintCanvas4saveEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare i32 @_ZN2cc17RecordPaintCanvas9saveLayerEPK6SkRectPKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, %"class.cc::PaintFlags"*) unnamed_addr #1

declare i32 @_ZN2cc17RecordPaintCanvas14saveLayerAlphaEPK6SkRecth(%"class.cc::RecordPaintCanvas"*, %struct.SkRect*, i8 zeroext) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas7restoreEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare i32 @_ZNK2cc17RecordPaintCanvas12getSaveCountEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas14restoreToCountEi(%"class.cc::RecordPaintCanvas"*, i32) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9translateEff(%"class.cc::RecordPaintCanvas"*, float, float) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas5scaleEff(%"class.cc::RecordPaintCanvas"*, float, float) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas6rotateEf(%"class.cc::RecordPaintCanvas"*, float) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas6concatERK8SkMatrix(%"class.cc::RecordPaintCanvas"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9setMatrixERK8SkMatrix(%"class.cc::RecordPaintCanvas"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas6concatERK5SkM44(%"class.cc::RecordPaintCanvas"*, %class.SkM44* dereferenceable(64)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9setMatrixERK5SkM44(%"class.cc::RecordPaintCanvas"*, %class.SkM44* dereferenceable(64)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8clipRectERK6SkRect8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9clipRRectERK7SkRRect8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8clipPathERK6SkPath8SkClipOpb(%"class.cc::RecordPaintCanvas"*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc17RecordPaintCanvas18getLocalClipBoundsEP6SkRect(%"class.cc::RecordPaintCanvas"*, %struct.SkRect*) unnamed_addr #1

declare { i64, i64 } @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc17RecordPaintCanvas19getDeviceClipBoundsEP7SkIRect(%"class.cc::RecordPaintCanvas"*, %struct.SkIRect*) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9drawColorEj11SkBlendMode(%"class.cc::RecordPaintCanvas"*, i32, i32) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas5clearEj(%"class.cc::RecordPaintCanvas"*, i32) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8drawLineEffffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, float, float, float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8drawRectERK6SkRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9drawIRectERK7SkIRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkIRect* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8drawOvalERK6SkRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9drawRRectERK7SkRRectRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.SkRRect* dereferenceable(52), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas10drawDRRectERK7SkRRectS3_RKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas13drawRoundRectERK6SkRectffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %struct.SkRect* dereferenceable(16), float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8drawPathERK6SkPathRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas11drawSkottieE13scoped_refptrINS_14SkottieWrapperEERK6SkRectf(%"class.cc::RecordPaintCanvas"*, %"class.cc::SkottieWrapper"*, %struct.SkRect* dereferenceable(16), float) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.sk_sp.66*, float, float, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas12drawTextBlobE5sk_spI10SkTextBlobEffiRKNS_10PaintFlagsE(%"class.cc::RecordPaintCanvas"*, %class.sk_sp.66*, float, float, i32, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas11drawPictureE5sk_spIKNS_13PaintOpBufferEE(%"class.cc::RecordPaintCanvas"*, %class.sk_sp.73*) unnamed_addr #1

declare zeroext i1 @_ZNK2cc17RecordPaintCanvas11isClipEmptyEv(%"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare void @_ZNK2cc17RecordPaintCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare void @_ZNK2cc17RecordPaintCanvas16getLocalToDeviceEv(%class.SkM44* sret, %"class.cc::RecordPaintCanvas"*) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas8AnnotateENS_11PaintCanvas14AnnotationTypeERK6SkRect5sk_spI6SkDataE(%"class.cc::RecordPaintCanvas"*, i32, %struct.SkRect* dereferenceable(16), %class.sk_sp.74*) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas16recordCustomDataEj(%"class.cc::RecordPaintCanvas"*, i32) unnamed_addr #1

declare void @_ZN2cc17RecordPaintCanvas9setNodeIdEi(%"class.cc::RecordPaintCanvas"*, i32) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 2147483647
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, 2147483646
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 2147483647
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 2147483647, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #6
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #6
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #6
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #6
  %36 = bitcast i8* %35 to i32*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %116, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 8
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967288
  %42 = add nsw i64 %41, -8
  %43 = lshr exact i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 56
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds i32, i32* %36, i64 %50
  %53 = bitcast i32* %52 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %53, align 4
  %54 = getelementptr inbounds i32, i32* %52, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %55, align 4
  %56 = or i64 %50, 8
  %57 = getelementptr inbounds i32, i32* %36, i64 %56
  %58 = bitcast i32* %57 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %58, align 4
  %59 = getelementptr inbounds i32, i32* %57, i64 4
  %60 = bitcast i32* %59 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %60, align 4
  %61 = or i64 %50, 16
  %62 = getelementptr inbounds i32, i32* %36, i64 %61
  %63 = bitcast i32* %62 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %63, align 4
  %64 = getelementptr inbounds i32, i32* %62, i64 4
  %65 = bitcast i32* %64 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %65, align 4
  %66 = or i64 %50, 24
  %67 = getelementptr inbounds i32, i32* %36, i64 %66
  %68 = bitcast i32* %67 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %68, align 4
  %69 = getelementptr inbounds i32, i32* %67, i64 4
  %70 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %70, align 4
  %71 = or i64 %50, 32
  %72 = getelementptr inbounds i32, i32* %36, i64 %71
  %73 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %73, align 4
  %74 = getelementptr inbounds i32, i32* %72, i64 4
  %75 = bitcast i32* %74 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %75, align 4
  %76 = or i64 %50, 40
  %77 = getelementptr inbounds i32, i32* %36, i64 %76
  %78 = bitcast i32* %77 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %78, align 4
  %79 = getelementptr inbounds i32, i32* %77, i64 4
  %80 = bitcast i32* %79 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %80, align 4
  %81 = or i64 %50, 48
  %82 = getelementptr inbounds i32, i32* %36, i64 %81
  %83 = bitcast i32* %82 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %83, align 4
  %84 = getelementptr inbounds i32, i32* %82, i64 4
  %85 = bitcast i32* %84 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %85, align 4
  %86 = or i64 %50, 56
  %87 = getelementptr inbounds i32, i32* %36, i64 %86
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %88, align 4
  %89 = getelementptr inbounds i32, i32* %87, i64 4
  %90 = bitcast i32* %89 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %90, align 4
  %91 = add i64 %50, 64
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !3

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds i32, i32* %36, i64 %98
  %101 = bitcast i32* %100 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %101, align 4
  %102 = getelementptr inbounds i32, i32* %100, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> <i32 2147483647, i32 2147483647, i32 2147483647, i32 2147483647>, <4 x i32>* %103, align 4
  %104 = add i64 %98, 8
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !5

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %116, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %114, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds i32, i32* %36, i64 %112
  store i32 2147483647, i32* %113, align 4
  %114 = add nuw nsw i64 %112, 1
  %115 = icmp eq i64 %114, %33
  br i1 %115, label %116, label %111, !llvm.loop !7

116:                                              ; preds = %111, %107, %31
  %117 = call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"* %0, i32* %36, i32 %32, i32* %1) #6
  ret i32* %117
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_29UnsignedWithZeroKeyHashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #6
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = or i32 %39, 1
  %41 = icmp eq i32 %40, 2147483647
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 2147483647
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, 2147483646
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 2147483647
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.isvectorized", i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !8, !4}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
