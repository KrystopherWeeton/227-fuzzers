; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/cng/audio_encoder_cng.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/cng/audio_encoder_cng.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::AudioEncoderCngConfig" = type { i64, i32, %"class.std::__1::unique_ptr", i32, i32, i32, %"class.webrtc::Vad"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::AudioEncoder"* }
%"class.webrtc::AudioEncoder" = type { i32 (...)** }
%"class.webrtc::Vad" = type { i32 (...)** }
%"class.webrtc::ComfortNoiseEncoder" = type { i64, i32, i16, i16, i32, [13 x i16], [13 x i32], i32 }
%"class.webrtc::(anonymous namespace)::AudioEncoderCng" = type { %"class.webrtc::AudioEncoder", %"class.std::__1::unique_ptr", i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.7", i8, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i16* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.webrtc::Vad"* }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.webrtc::ComfortNoiseEncoder"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::RtcEventLog" = type opaque
%"struct.webrtc::BitrateAllocationUpdate" = type { %"class.webrtc::DataRate", %"class.webrtc::DataRate", double, %"class.webrtc::TimeDelta", %"class.webrtc::TimeDelta", double }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.webrtc::TimeDelta" = type { %"class.webrtc::rtc_units_impl::RelativeUnit.35" }
%"class.webrtc::rtc_units_impl::RelativeUnit.35" = type { %"class.webrtc::rtc_units_impl::UnitBase.36" }
%"class.webrtc::rtc_units_impl::UnitBase.36" = type { i64 }
%"struct.webrtc::ANAStats" = type { %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.37", %"class.absl::optional.42" }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { i32 }
%"class.absl::optional.42" = type { %"class.absl::optional_internal::optional_data.43" }
%"class.absl::optional_internal::optional_data.43" = type { %"class.absl::optional_internal::optional_data_base.44" }
%"class.absl::optional_internal::optional_data_base.44" = type { %"class.absl::optional_internal::optional_data_dtor_base.45" }
%"class.absl::optional_internal::optional_data_dtor_base.45" = type { i8, %union.anon.46 }
%union.anon.46 = type { float }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.webrtc::TimeDelta", %"class.webrtc::TimeDelta" }
%"struct.webrtc::AudioEncoder::EncodedInfo" = type { %"struct.webrtc::AudioEncoder::EncodedInfoLeaf", %"class.std::__1::vector.54" }
%"struct.webrtc::AudioEncoder::EncodedInfoLeaf" = type { i64, i32, i32, i8, i8, i32 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.webrtc::AudioEncoder::EncodedInfoLeaf"*, %"struct.webrtc::AudioEncoder::EncodedInfoLeaf"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.webrtc::AudioEncoder::EncodedInfoLeaf"* }
%"class.rtc::BufferT" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_ = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJNS0_3ValILNS0_12CheckArgTypeE9EPKcEEEEEvS7_iS7_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEES7_SA_EEEvS9_iS9_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = comdat any

$_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEEEEEvS9_iS9_DpRKT_E1t = comdat any

@_ZTVN6webrtc12_GLOBAL__N_115AudioEncoderCngE = internal unnamed_addr constant { [31 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCngD2Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCngD0Ev to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng12SampleRateHzEv to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng11NumChannelsEv to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng18RtpTimestampRateHzEv to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng25Num10MsFramesInNextPacketEv to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng22Max10MsFramesInAPacketEv to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng16GetTargetBitrateEv to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng5ResetEv to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i1)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng6SetFecEb to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i1)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng6SetDtxEb to i8*), i8* bitcast (i1 (%"class.webrtc::AudioEncoder"*)* @_ZNK6webrtc12AudioEncoder6GetDtxEv to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i32)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng14SetApplicationENS_12AudioEncoder11ApplicationE to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i32)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng18SetMaxPlaybackRateEi to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, i32)* @_ZN6webrtc12AudioEncoder16SetTargetBitrateEi to i8*), i8* bitcast ({ %"class.std::__1::unique_ptr"*, i64 } (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng24ReclaimContainedEncodersEv to i8*), i8* bitcast (i1 (%"class.webrtc::AudioEncoder"*, %"class.std::__1::basic_string"*, %"class.webrtc::RtcEventLog"*)* @_ZN6webrtc12AudioEncoder25EnableAudioNetworkAdaptorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_11RtcEventLogE to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*)* @_ZN6webrtc12AudioEncoder26DisableAudioNetworkAdaptorEv to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, float)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng34OnReceivedUplinkPacketLossFractionEf to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, float)* @_ZN6webrtc12AudioEncoder45OnReceivedUplinkRecoverablePacketLossFractionEf to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, i32)* @_ZN6webrtc12AudioEncoder28OnReceivedTargetAudioBitrateEi to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i32, i8, i64)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng25OnReceivedUplinkBandwidthEiN4absl8optionalIlEE to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, %"struct.webrtc::BitrateAllocationUpdate"*)* @_ZN6webrtc12AudioEncoder26OnReceivedUplinkAllocationENS_23BitrateAllocationUpdateE to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, i32)* @_ZN6webrtc12AudioEncoder13OnReceivedRttEi to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, i64)* @_ZN6webrtc12AudioEncoder18OnReceivedOverheadEm to i8*), i8* bitcast (void (%"class.webrtc::AudioEncoder"*, i32, i32)* @_ZN6webrtc12AudioEncoder27SetReceiverFrameLengthRangeEii to i8*), i8* bitcast (void (%"struct.webrtc::ANAStats"*, %"class.webrtc::AudioEncoder"*)* @_ZNK6webrtc12AudioEncoder11GetANAStatsEv to i8*), i8* bitcast (void (%"class.absl::optional.47"*, %"class.webrtc::(anonymous namespace)::AudioEncoderCng"*)* @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng19GetFrameLengthRangeEv to i8*), i8* bitcast (void (%"struct.webrtc::AudioEncoder::EncodedInfo"*, %"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i32, i16*, i64, %"class.rtc::BufferT"*)* @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng10EncodeImplEjN3rtc9ArrayViewIKsLln4711EEEPNS2_7BufferTIhLb0EEE to i8*)] }, align 8
@.str = private unnamed_addr constant [78 x i8] c"../../third_party/webrtc/modules/audio_coding/codecs/cng/audio_encoder_cng.cc\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"config.IsOk()\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Invalid configuration.\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJNS0_3ValILNS0_12CheckArgTypeE9EPKcEEEEEvS7_iS7_DpRKT_E1t = linkonce_odr hidden constant [2 x i8] c"\09\00", comdat, align 1
@.str.3 = private unnamed_addr constant [73 x i8] c"speech_buffer_.size() == rtp_timestamps_.size() * samples_per_10ms_frame\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"frames_to_encode * 10 <= kMaxFrameSizeMs\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Frame size cannot be larger than \00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c" ms when using VAD/CNG.\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"frames_to_encode >= blocks_in_first_vad_call\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"../../third_party/webrtc/rtc_base/checks.h\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"a % b == 0\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c" is not evenly divisible by \00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\01\01\01\09\01\00", comdat, align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t = linkonce_odr hidden constant [4 x i8] c"\0D\05\05\00", comdat, align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEES7_SA_EEEvS9_iS9_DpRKT_E1t = linkonce_odr hidden constant [7 x i8] c"\0D\05\01\09\01\09\00", comdat, align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"!output_produced\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t = linkonce_odr hidden constant [1 x i8] zeroinitializer, comdat, align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"info.encoded_bytes > 0\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"Encoder didn't deliver data.\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"info.encoded_bytes == 0\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"Encoder delivered data too early.\00", align 1
@_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEEEEEvS9_iS9_DpRKT_E1t = linkonce_odr hidden constant [5 x i8] c"\0D\05\01\09\00", comdat, align 1

@_ZN6webrtc21AudioEncoderCngConfigC1Ev = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderCngConfig"*), void (%"struct.webrtc::AudioEncoderCngConfig"*)* @_ZN6webrtc21AudioEncoderCngConfigC2Ev
@_ZN6webrtc21AudioEncoderCngConfigC1EOS0_ = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderCngConfig"*, %"struct.webrtc::AudioEncoderCngConfig"*), void (%"struct.webrtc::AudioEncoderCngConfig"*, %"struct.webrtc::AudioEncoderCngConfig"*)* @_ZN6webrtc21AudioEncoderCngConfigC2EOS0_
@_ZN6webrtc21AudioEncoderCngConfigD1Ev = hidden unnamed_addr alias void (%"struct.webrtc::AudioEncoderCngConfig"*), void (%"struct.webrtc::AudioEncoderCngConfig"*)* @_ZN6webrtc21AudioEncoderCngConfigD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21AudioEncoderCngConfigC2Ev(%"struct.webrtc::AudioEncoderCngConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 0
  store i64 1, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 1
  store i32 13, i32* %3, align 8
  %4 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 4
  store i32 100, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 5
  store i32 8, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 6
  store %"class.webrtc::Vad"* null, %"class.webrtc::Vad"** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21AudioEncoderCngConfigC2EOS0_(%"struct.webrtc::AudioEncoderCngConfig"* nocapture, %"struct.webrtc::AudioEncoderCngConfig"* nocapture dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.webrtc::AudioEncoderCngConfig"* %0 to i8*
  %4 = bitcast %"struct.webrtc::AudioEncoderCngConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 12, i1 false)
  %5 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %1, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.webrtc::AudioEncoder"* null, %"class.webrtc::AudioEncoder"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %1, i64 0, i32 3
  %13 = bitcast i32* %11 to i8*
  %14 = bitcast i32* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21AudioEncoderCngConfigD2Ev(%"struct.webrtc::AudioEncoderCngConfig"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  store %"class.webrtc::AudioEncoder"* null, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = icmp eq %"class.webrtc::AudioEncoder"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::AudioEncoder"* %3 to void (%"class.webrtc::AudioEncoder"*)***
  %7 = load void (%"class.webrtc::AudioEncoder"*)**, void (%"class.webrtc::AudioEncoder"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %7, i64 1
  %9 = load void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %8, align 8
  tail call void %9(%"class.webrtc::AudioEncoder"* nonnull %3) #10
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21AudioEncoderCngConfig4IsOkEv(%"struct.webrtc::AudioEncoderCngConfig"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 1
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %6, align 8
  %8 = icmp eq %"class.webrtc::AudioEncoder"* %7, null
  br i1 %8, label %33, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.webrtc::AudioEncoder"* %7 to i64 (%"class.webrtc::AudioEncoder"*)***
  %11 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %11, i64 3
  %13 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %12, align 8
  %14 = tail call i64 %13(%"class.webrtc::AudioEncoder"* nonnull %7) #10
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %33

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %6, align 8
  %20 = bitcast %"class.webrtc::AudioEncoder"* %19 to i64 (%"class.webrtc::AudioEncoder"*)***
  %21 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %21, i64 6
  %23 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %22, align 8
  %24 = tail call i64 %23(%"class.webrtc::AudioEncoder"* %19) #10
  %25 = trunc i64 %24 to i32
  %26 = mul i32 %25, 10
  %27 = icmp slt i32 %18, %26
  br i1 %27, label %33, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  %32 = icmp ult i32 %31, 12
  ret i1 %32

33:                                               ; preds = %5, %16, %9, %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::AudioEncoder"* @_ZN6webrtc25CreateComfortNoiseEncoderEONS_21AudioEncoderCngConfigE(%"struct.webrtc::AudioEncoderCngConfig"* nocapture dereferenceable(48)) local_unnamed_addr #1 {
  %2 = tail call i8* @_Znwm(i64 104) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_115AudioEncoderCngE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 1
  br i1 %7, label %8, label %36

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %9, align 8
  %11 = icmp eq %"class.webrtc::AudioEncoder"* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.webrtc::AudioEncoder"* %10 to i64 (%"class.webrtc::AudioEncoder"*)***
  %14 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %14, i64 3
  %16 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %15, align 8
  %17 = tail call i64 %16(%"class.webrtc::AudioEncoder"* nonnull %10) #10
  %18 = icmp eq i64 %17, 1
  br i1 %18, label %19, label %36

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 4
  %22 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %9, align 8
  %23 = bitcast %"class.webrtc::AudioEncoder"* %22 to i64 (%"class.webrtc::AudioEncoder"*)***
  %24 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %24, i64 6
  %26 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %25, align 8
  %27 = tail call i64 %26(%"class.webrtc::AudioEncoder"* %22) #10
  %28 = trunc i64 %27 to i32
  %29 = mul i32 %28, 10
  %30 = icmp slt i32 %21, %29
  br i1 %30, label %36, label %31

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 5
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, -1
  %35 = icmp ult i32 %34, 12
  br i1 %35, label %37, label %36

36:                                               ; preds = %31, %19, %12, %8, %1
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJNS0_3ValILNS0_12CheckArgTypeE9EPKcEEEEEvS7_iS7_DpRKT_E1t, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr"* %38 to i64*
  %41 = load i64, i64* %40, align 8
  store %"class.webrtc::AudioEncoder"* null, %"class.webrtc::AudioEncoder"** %39, align 8
  %42 = bitcast i8* %4 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %2, i64 16
  %44 = bitcast i8* %43 to i32*
  %45 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  store i32 %46, i32* %44, align 8
  %47 = getelementptr inbounds i8, i8* %2, i64 20
  %48 = bitcast i8* %47 to i32*
  store i32 %33, i32* %48, align 4
  %49 = getelementptr inbounds i8, i8* %2, i64 24
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %20, align 4
  store i32 %51, i32* %50, align 8
  %52 = getelementptr inbounds i8, i8* %2, i64 32
  %53 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 48, i1 false) #10
  store i8 1, i8* %53, align 8
  %54 = getelementptr inbounds i8, i8* %2, i64 88
  %55 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 6
  %56 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %55, align 8
  %57 = icmp eq %"class.webrtc::Vad"* %56, null
  %58 = inttoptr i64 %41 to %"class.webrtc::AudioEncoder"*
  br i1 %57, label %62, label %59

59:                                               ; preds = %37
  %60 = ptrtoint %"class.webrtc::Vad"* %56 to i64
  %61 = bitcast i8* %54 to i64*
  store i64 %60, i64* %61, align 8
  br label %67

62:                                               ; preds = %37
  %63 = getelementptr inbounds %"struct.webrtc::AudioEncoderCngConfig", %"struct.webrtc::AudioEncoderCngConfig"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = tail call %"class.webrtc::Vad"* @_ZN6webrtc9CreateVadENS_3Vad14AggressivenessE(i32 %64) #10
  %66 = bitcast i8* %54 to %"class.webrtc::Vad"**
  store %"class.webrtc::Vad"* %65, %"class.webrtc::Vad"** %66, align 8
  br label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds i8, i8* %2, i64 96
  %69 = tail call i8* @_Znwm(i64 104) #11
  %70 = bitcast i8* %69 to %"class.webrtc::ComfortNoiseEncoder"*
  %71 = inttoptr i64 %41 to i32 (%"class.webrtc::AudioEncoder"*)***
  %72 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %71, align 8
  %73 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %72, i64 2
  %74 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %73, align 8
  %75 = tail call i32 %74(%"class.webrtc::AudioEncoder"* %58) #10
  tail call void @_ZN6webrtc19ComfortNoiseEncoderC1Eiii(%"class.webrtc::ComfortNoiseEncoder"* nonnull %70, i32 %75, i32 %51, i32 %33) #10
  %76 = ptrtoint i8* %69 to i64
  %77 = bitcast i8* %68 to i64*
  store i64 %76, i64* %77, align 8
  %78 = bitcast i8* %2 to %"class.webrtc::AudioEncoder"*
  ret %"class.webrtc::AudioEncoder"* %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare %"class.webrtc::Vad"* @_ZN6webrtc9CreateVadENS_3Vad14AggressivenessE(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng12SampleRateHzEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to i32 (%"class.webrtc::AudioEncoder"*)***
  %5 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %5, i64 2
  %7 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::AudioEncoder"* %3) #10
  ret i32 %8
}

declare void @_ZN6webrtc19ComfortNoiseEncoderC1Eiii(%"class.webrtc::ComfortNoiseEncoder"*, i32, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCngD2Ev(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_115AudioEncoderCngE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::ComfortNoiseEncoder"*, %"class.webrtc::ComfortNoiseEncoder"** %3, align 8
  store %"class.webrtc::ComfortNoiseEncoder"* null, %"class.webrtc::ComfortNoiseEncoder"** %3, align 8
  %5 = icmp eq %"class.webrtc::ComfortNoiseEncoder"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::ComfortNoiseEncoder"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %9, align 8
  store %"class.webrtc::Vad"* null, %"class.webrtc::Vad"** %9, align 8
  %11 = icmp eq %"class.webrtc::Vad"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.webrtc::Vad"* %10 to void (%"class.webrtc::Vad"*)***
  %14 = load void (%"class.webrtc::Vad"*)**, void (%"class.webrtc::Vad"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %14, i64 1
  %16 = load void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %15, align 8
  tail call void %16(%"class.webrtc::Vad"* nonnull %10) #10
  br label %17

17:                                               ; preds = %8, %12
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i32* %19 to i64
  %23 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast i32* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %17, %21
  %27 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = icmp eq i16* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i16* %28 to i64
  %32 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5, i32 0, i32 1
  %33 = bitcast i16** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i16* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %26, %30
  %36 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %36, align 8
  store %"class.webrtc::AudioEncoder"* null, %"class.webrtc::AudioEncoder"** %36, align 8
  %38 = icmp eq %"class.webrtc::AudioEncoder"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.webrtc::AudioEncoder"* %37 to void (%"class.webrtc::AudioEncoder"*)***
  %41 = load void (%"class.webrtc::AudioEncoder"*)**, void (%"class.webrtc::AudioEncoder"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %41, i64 1
  %43 = load void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %42, align 8
  tail call void %43(%"class.webrtc::AudioEncoder"* nonnull %37) #10
  br label %44

44:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCngD0Ev(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*] }, { [31 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_115AudioEncoderCngE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::ComfortNoiseEncoder"*, %"class.webrtc::ComfortNoiseEncoder"** %3, align 8
  store %"class.webrtc::ComfortNoiseEncoder"* null, %"class.webrtc::ComfortNoiseEncoder"** %3, align 8
  %5 = icmp eq %"class.webrtc::ComfortNoiseEncoder"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::ComfortNoiseEncoder"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %9, align 8
  store %"class.webrtc::Vad"* null, %"class.webrtc::Vad"** %9, align 8
  %11 = icmp eq %"class.webrtc::Vad"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.webrtc::Vad"* %10 to void (%"class.webrtc::Vad"*)***
  %14 = load void (%"class.webrtc::Vad"*)**, void (%"class.webrtc::Vad"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %14, i64 1
  %16 = load void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %15, align 8
  tail call void %16(%"class.webrtc::Vad"* nonnull %10) #10
  br label %17

17:                                               ; preds = %12, %8
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = ptrtoint i32* %19 to i64
  %23 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast i32* %19 to i8*
  tail call void @_ZdlPv(i8* %25) #11
  br label %26

26:                                               ; preds = %21, %17
  %27 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = icmp eq i16* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i16* %28 to i64
  %32 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5, i32 0, i32 1
  %33 = bitcast i16** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i16* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %30, %26
  %36 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %36, align 8
  store %"class.webrtc::AudioEncoder"* null, %"class.webrtc::AudioEncoder"** %36, align 8
  %38 = icmp eq %"class.webrtc::AudioEncoder"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.webrtc::AudioEncoder"* %37 to void (%"class.webrtc::AudioEncoder"*)***
  %41 = load void (%"class.webrtc::AudioEncoder"*)**, void (%"class.webrtc::AudioEncoder"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %41, i64 1
  %43 = load void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %42, align 8
  tail call void %43(%"class.webrtc::AudioEncoder"* nonnull %37) #10
  br label %44

44:                                               ; preds = %35, %39
  %45 = bitcast %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0 to i8*
  tail call void @_ZdlPv(i8* %45) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng11NumChannelsEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng18RtpTimestampRateHzEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to i32 (%"class.webrtc::AudioEncoder"*)***
  %5 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %5, i64 4
  %7 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::AudioEncoder"* %3) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng25Num10MsFramesInNextPacketEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to i64 (%"class.webrtc::AudioEncoder"*)***
  %5 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %5, i64 5
  %7 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %6, align 8
  %8 = tail call i64 %7(%"class.webrtc::AudioEncoder"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng22Max10MsFramesInAPacketEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to i64 (%"class.webrtc::AudioEncoder"*)***
  %5 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %5, i64 6
  %7 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %6, align 8
  %8 = tail call i64 %7(%"class.webrtc::AudioEncoder"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng16GetTargetBitrateEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to i32 (%"class.webrtc::AudioEncoder"*)***
  %5 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %5, i64 7
  %7 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %6, align 8
  %8 = tail call i32 %7(%"class.webrtc::AudioEncoder"* %3) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng5ResetEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %4 = bitcast %"class.webrtc::AudioEncoder"* %3 to void (%"class.webrtc::AudioEncoder"*)***
  %5 = load void (%"class.webrtc::AudioEncoder"*)**, void (%"class.webrtc::AudioEncoder"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %5, i64 8
  %7 = load void (%"class.webrtc::AudioEncoder"*)*, void (%"class.webrtc::AudioEncoder"*)** %6, align 8
  tail call void %7(%"class.webrtc::AudioEncoder"* %3) #10
  %8 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::vector"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 5, i32 0, i32 1
  %12 = bitcast i16** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6
  %14 = bitcast %"class.std::__1::vector.7"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 6, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 7
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %20 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %19, align 8
  %21 = bitcast %"class.webrtc::Vad"* %20 to void (%"class.webrtc::Vad"*)***
  %22 = load void (%"class.webrtc::Vad"*)**, void (%"class.webrtc::Vad"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %22, i64 3
  %24 = load void (%"class.webrtc::Vad"*)*, void (%"class.webrtc::Vad"*)** %23, align 8
  tail call void %24(%"class.webrtc::Vad"* %20) #10
  %25 = tail call i8* @_Znwm(i64 104) #11
  %26 = bitcast i8* %25 to %"class.webrtc::ComfortNoiseEncoder"*
  %27 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %2, align 8
  %28 = bitcast %"class.webrtc::AudioEncoder"* %27 to i32 (%"class.webrtc::AudioEncoder"*)***
  %29 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %29, i64 2
  %31 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %30, align 8
  %32 = tail call i32 %31(%"class.webrtc::AudioEncoder"* %27) #10
  %33 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  tail call void @_ZN6webrtc19ComfortNoiseEncoderC1Eiii(%"class.webrtc::ComfortNoiseEncoder"* nonnull %26, i32 %32, i32 %34, i32 %36) #10
  %37 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %38 = load %"class.webrtc::ComfortNoiseEncoder"*, %"class.webrtc::ComfortNoiseEncoder"** %37, align 8
  %39 = bitcast %"class.webrtc::ComfortNoiseEncoder"** %37 to i8**
  store i8* %25, i8** %39, align 8
  %40 = icmp eq %"class.webrtc::ComfortNoiseEncoder"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %1
  %42 = bitcast %"class.webrtc::ComfortNoiseEncoder"* %38 to i8*
  tail call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %1, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng6SetFecEb(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to i1 (%"class.webrtc::AudioEncoder"*, i1)***
  %6 = load i1 (%"class.webrtc::AudioEncoder"*, i1)**, i1 (%"class.webrtc::AudioEncoder"*, i1)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.webrtc::AudioEncoder"*, i1)*, i1 (%"class.webrtc::AudioEncoder"*, i1)** %6, i64 9
  %8 = load i1 (%"class.webrtc::AudioEncoder"*, i1)*, i1 (%"class.webrtc::AudioEncoder"*, i1)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.webrtc::AudioEncoder"* %4, i1 zeroext %1) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng6SetDtxEb(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, i1 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to i1 (%"class.webrtc::AudioEncoder"*, i1)***
  %6 = load i1 (%"class.webrtc::AudioEncoder"*, i1)**, i1 (%"class.webrtc::AudioEncoder"*, i1)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.webrtc::AudioEncoder"*, i1)*, i1 (%"class.webrtc::AudioEncoder"*, i1)** %6, i64 10
  %8 = load i1 (%"class.webrtc::AudioEncoder"*, i1)*, i1 (%"class.webrtc::AudioEncoder"*, i1)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.webrtc::AudioEncoder"* %4, i1 zeroext %1) #10
  ret i1 %9
}

declare zeroext i1 @_ZNK6webrtc12AudioEncoder6GetDtxEv(%"class.webrtc::AudioEncoder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng14SetApplicationENS_12AudioEncoder11ApplicationE(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to i1 (%"class.webrtc::AudioEncoder"*, i32)***
  %6 = load i1 (%"class.webrtc::AudioEncoder"*, i32)**, i1 (%"class.webrtc::AudioEncoder"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.webrtc::AudioEncoder"*, i32)*, i1 (%"class.webrtc::AudioEncoder"*, i32)** %6, i64 12
  %8 = load i1 (%"class.webrtc::AudioEncoder"*, i32)*, i1 (%"class.webrtc::AudioEncoder"*, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.webrtc::AudioEncoder"* %4, i32 %1) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng18SetMaxPlaybackRateEi(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, i32) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to void (%"class.webrtc::AudioEncoder"*, i32)***
  %6 = load void (%"class.webrtc::AudioEncoder"*, i32)**, void (%"class.webrtc::AudioEncoder"*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*, i32)*, void (%"class.webrtc::AudioEncoder"*, i32)** %6, i64 13
  %8 = load void (%"class.webrtc::AudioEncoder"*, i32)*, void (%"class.webrtc::AudioEncoder"*, i32)** %7, align 8
  tail call void %8(%"class.webrtc::AudioEncoder"* %4, i32 %1) #10
  ret void
}

declare void @_ZN6webrtc12AudioEncoder16SetTargetBitrateEi(%"class.webrtc::AudioEncoder"*, i32) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal { %"class.std::__1::unique_ptr"*, i64 } @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng24ReclaimContainedEncodersEv(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1
  %3 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } undef, %"class.std::__1::unique_ptr"* %2, 0
  %4 = insertvalue { %"class.std::__1::unique_ptr"*, i64 } %3, i64 1, 1
  ret { %"class.std::__1::unique_ptr"*, i64 } %4
}

declare zeroext i1 @_ZN6webrtc12AudioEncoder25EnableAudioNetworkAdaptorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_11RtcEventLogE(%"class.webrtc::AudioEncoder"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.webrtc::RtcEventLog"*) unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder26DisableAudioNetworkAdaptorEv(%"class.webrtc::AudioEncoder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng34OnReceivedUplinkPacketLossFractionEf(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, float) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to void (%"class.webrtc::AudioEncoder"*, float)***
  %6 = load void (%"class.webrtc::AudioEncoder"*, float)**, void (%"class.webrtc::AudioEncoder"*, float)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*, float)*, void (%"class.webrtc::AudioEncoder"*, float)** %6, i64 18
  %8 = load void (%"class.webrtc::AudioEncoder"*, float)*, void (%"class.webrtc::AudioEncoder"*, float)** %7, align 8
  tail call void %8(%"class.webrtc::AudioEncoder"* %4, float %1) #10
  ret void
}

declare void @_ZN6webrtc12AudioEncoder45OnReceivedUplinkRecoverablePacketLossFractionEf(%"class.webrtc::AudioEncoder"*, float) unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder28OnReceivedTargetAudioBitrateEi(%"class.webrtc::AudioEncoder"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng25OnReceivedUplinkBandwidthEiN4absl8optionalIlEE(%"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly, i32, i8, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %5, align 8
  %7 = bitcast %"class.webrtc::AudioEncoder"* %6 to void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)***
  %8 = load void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)**, void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)*, void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)** %8, i64 21
  %10 = load void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)*, void (%"class.webrtc::AudioEncoder"*, i32, i8, i64)** %9, align 8
  tail call void %10(%"class.webrtc::AudioEncoder"* %6, i32 %1, i8 %2, i64 %3) #10
  ret void
}

declare void @_ZN6webrtc12AudioEncoder26OnReceivedUplinkAllocationENS_23BitrateAllocationUpdateE(%"class.webrtc::AudioEncoder"*, %"struct.webrtc::BitrateAllocationUpdate"* byval(%"struct.webrtc::BitrateAllocationUpdate") align 8) unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder13OnReceivedRttEi(%"class.webrtc::AudioEncoder"*, i32) unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder18OnReceivedOverheadEm(%"class.webrtc::AudioEncoder"*, i64) unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder27SetReceiverFrameLengthRangeEii(%"class.webrtc::AudioEncoder"*, i32, i32) unnamed_addr #4

declare void @_ZNK6webrtc12AudioEncoder11GetANAStatsEv(%"struct.webrtc::ANAStats"* sret, %"class.webrtc::AudioEncoder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK6webrtc12_GLOBAL__N_115AudioEncoderCng19GetFrameLengthRangeEv(%"class.absl::optional.47"* noalias sret, %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* nocapture readonly) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %3, align 8
  %5 = bitcast %"class.webrtc::AudioEncoder"* %4 to void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)***
  %6 = load void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)**, void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)*, void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)** %6, i64 27
  %8 = load void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)*, void (%"class.absl::optional.47"*, %"class.webrtc::AudioEncoder"*)** %7, align 8
  tail call void %8(%"class.absl::optional.47"* sret %0, %"class.webrtc::AudioEncoder"* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng10EncodeImplEjN3rtc9ArrayViewIKsLln4711EEEPNS2_7BufferTIhLb0EEE(%"struct.webrtc::AudioEncoder::EncodedInfo"* noalias sret, %"class.webrtc::(anonymous namespace)::AudioEncoderCng"*, i32, i16*, i64, %"class.rtc::BufferT"*) unnamed_addr #1 align 2 {
  %7 = alloca %"struct.webrtc::AudioEncoder::EncodedInfo", align 8
  %8 = alloca %"struct.webrtc::AudioEncoder::EncodedInfo", align 8
  %9 = alloca %"struct.webrtc::AudioEncoder::EncodedInfo", align 8
  %10 = alloca %"struct.webrtc::AudioEncoder::EncodedInfo", align 8
  %11 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8
  %13 = bitcast %"class.webrtc::AudioEncoder"* %12 to i32 (%"class.webrtc::AudioEncoder"*)***
  %14 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %14, i64 2
  %16 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %15, align 8
  %17 = tail call i32 %16(%"class.webrtc::AudioEncoder"* %12) #10
  %18 = mul nsw i32 %17, 10
  %19 = srem i32 %18, 1000
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %6
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %19, i32 0, i32 %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 1000) #12
  unreachable

22:                                               ; preds = %6
  %23 = sdiv i32 %17, 100
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 5
  %26 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 5, i32 0, i32 1
  %27 = bitcast i16** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 1
  %33 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 6
  %34 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 6, i32 0, i32 1
  %35 = bitcast i32** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.7"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 2
  %41 = mul i64 %40, %24
  %42 = icmp eq i64 %32, %41
  %43 = inttoptr i64 %36 to i32*
  br i1 %42, label %45, label %44

44:                                               ; preds = %22
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %32, i64 %41) #12
  unreachable

45:                                               ; preds = %22
  %46 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, %43
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  store i32 %2, i32* %43, align 4
  %50 = getelementptr inbounds i32, i32* %43, i64 1
  %51 = ptrtoint i32* %50 to i64
  store i64 %51, i64* %35, align 8
  br label %103

52:                                               ; preds = %45
  %53 = ptrtoint i32* %47 to i64
  %54 = sub i64 %53, %38
  %55 = ashr exact i64 %54, 2
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = bitcast %"class.std::__1::vector.7"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #12
  unreachable

60:                                               ; preds = %52
  %61 = bitcast i32** %46 to i64*
  %62 = icmp ult i64 %55, 2305843009213693951
  br i1 %62, label %63, label %71

63:                                               ; preds = %60
  %64 = ashr exact i64 %54, 1
  %65 = icmp ult i64 %64, %56
  %66 = select i1 %65, i64 %56, i64 %64
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = icmp ugt i64 %66, 4611686018427387903
  br i1 %69, label %70, label %71

70:                                               ; preds = %68
  tail call void @abort() #12
  unreachable

71:                                               ; preds = %68, %60
  %72 = phi i64 [ %66, %68 ], [ 4611686018427387903, %60 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #11
  %75 = bitcast i8* %74 to i32*
  br label %76

76:                                               ; preds = %71, %63
  %77 = phi i64 [ %72, %71 ], [ 0, %63 ]
  %78 = phi i32* [ %75, %71 ], [ null, %63 ]
  %79 = getelementptr inbounds i32, i32* %78, i64 %55
  %80 = getelementptr inbounds i32, i32* %78, i64 %77
  %81 = ptrtoint i32* %80 to i64
  store i32 %2, i32* %79, align 4
  %82 = getelementptr inbounds i32, i32* %79, i64 1
  %83 = ptrtoint i32* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %33, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = load i64, i64* %35, align 8
  %87 = ptrtoint i32* %85 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 2
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds i32, i32* %79, i64 %90
  %92 = ptrtoint i32* %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %76
  %95 = bitcast i32* %91 to i8*
  %96 = bitcast i32* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %95, i8* align 4 %96, i64 %88, i1 false) #10
  %97 = load i32*, i32** %84, align 8
  br label %98

98:                                               ; preds = %94, %76
  %99 = phi i32* [ %85, %76 ], [ %97, %94 ]
  store i64 %92, i64* %37, align 8
  store i64 %83, i64* %35, align 8
  store i64 %81, i64* %61, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %98
  %102 = bitcast i32* %99 to i8*
  tail call void @_ZdlPv(i8* %102) #11
  br label %103

103:                                              ; preds = %49, %98, %101
  %104 = load i16*, i16** %26, align 8
  %105 = getelementptr inbounds i16, i16* %3, i64 %4
  %106 = tail call i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"* %25, i16* %104, i16* %3, i16* %105)
  %107 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8
  %108 = bitcast %"class.webrtc::AudioEncoder"* %107 to i64 (%"class.webrtc::AudioEncoder"*)***
  %109 = load i64 (%"class.webrtc::AudioEncoder"*)**, i64 (%"class.webrtc::AudioEncoder"*)*** %108, align 8
  %110 = getelementptr inbounds i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %109, i64 5
  %111 = load i64 (%"class.webrtc::AudioEncoder"*)*, i64 (%"class.webrtc::AudioEncoder"*)** %110, align 8
  %112 = tail call i64 %111(%"class.webrtc::AudioEncoder"* %107) #10
  %113 = load i64, i64* %35, align 8
  %114 = load i64, i64* %37, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 2
  %117 = icmp ult i64 %116, %112
  br i1 %117, label %118, label %119

118:                                              ; preds = %103
  tail call void @_ZN6webrtc12AudioEncoder11EncodedInfoC1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* %0) #10
  br label %306

119:                                              ; preds = %103
  %120 = mul i64 %112, 10
  %121 = icmp ult i64 %120, 61
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 134, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEES7_SA_EEEvS9_iS9_DpRKT_E1t, i64 0, i64 0), i64 %120, i32 60, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0)) #12
  unreachable

123:                                              ; preds = %119
  %124 = icmp ult i64 %112, 3
  %125 = select i1 %124, i64 %112, i64 3
  %126 = icmp eq i64 %112, 4
  %127 = select i1 %126, i64 2, i64 %125
  %128 = icmp ult i64 %112, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %123
  tail call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 146, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEES6_EEEvPKciS8_DpRKT_E1t, i64 0, i64 0), i64 %112, i64 %127) #12
  unreachable

130:                                              ; preds = %123
  %131 = sub i64 %112, %127
  %132 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %133 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %135 = load i16*, i16** %134, align 8
  %136 = mul nsw i64 %127, %24
  %137 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8
  %138 = bitcast %"class.webrtc::AudioEncoder"* %137 to i32 (%"class.webrtc::AudioEncoder"*)***
  %139 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %138, align 8
  %140 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %139, i64 2
  %141 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %140, align 8
  %142 = tail call i32 %141(%"class.webrtc::AudioEncoder"* %137) #10
  %143 = bitcast %"class.webrtc::Vad"* %133 to i32 (%"class.webrtc::Vad"*, i16*, i64, i32)***
  %144 = load i32 (%"class.webrtc::Vad"*, i16*, i64, i32)**, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*** %143, align 8
  %145 = getelementptr inbounds i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)** %144, i64 2
  %146 = load i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)** %145, align 8
  %147 = tail call i32 %146(%"class.webrtc::Vad"* %133, i16* %135, i64 %136, i32 %142) #10
  %148 = icmp eq i32 %147, 0
  %149 = icmp ne i64 %131, 0
  %150 = and i1 %149, %148
  br i1 %150, label %151, label %167

151:                                              ; preds = %130
  %152 = load %"class.webrtc::Vad"*, %"class.webrtc::Vad"** %132, align 8
  %153 = load i16*, i16** %134, align 8
  %154 = getelementptr inbounds i16, i16* %153, i64 %136
  %155 = mul i64 %131, %24
  %156 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8
  %157 = bitcast %"class.webrtc::AudioEncoder"* %156 to i32 (%"class.webrtc::AudioEncoder"*)***
  %158 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %157, align 8
  %159 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %158, i64 2
  %160 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %159, align 8
  %161 = tail call i32 %160(%"class.webrtc::AudioEncoder"* %156) #10
  %162 = bitcast %"class.webrtc::Vad"* %152 to i32 (%"class.webrtc::Vad"*, i16*, i64, i32)***
  %163 = load i32 (%"class.webrtc::Vad"*, i16*, i64, i32)**, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*** %162, align 8
  %164 = getelementptr inbounds i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)** %163, i64 2
  %165 = load i32 (%"class.webrtc::Vad"*, i16*, i64, i32)*, i32 (%"class.webrtc::Vad"*, i16*, i64, i32)** %164, align 8
  %166 = tail call i32 %165(%"class.webrtc::Vad"* %152, i16* %154, i64 %155, i32 %161) #10
  br label %167

167:                                              ; preds = %151, %130
  %168 = phi i32 [ %166, %151 ], [ %147, %130 ]
  %169 = bitcast %"struct.webrtc::AudioEncoder::EncodedInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %169) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 48, i1 false)
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoC1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %8) #10
  switch i32 %168, label %272 [
    i32 0, label %170
    i32 1, label %228
  ]

170:                                              ; preds = %167
  %171 = bitcast %"struct.webrtc::AudioEncoder::EncodedInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %171) #10
  %172 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 7
  %173 = load i8, i8* %172, align 8, !range !2, !noalias !3
  %174 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8, !noalias !3
  %175 = bitcast %"class.webrtc::AudioEncoder"* %174 to i32 (%"class.webrtc::AudioEncoder"*)***
  %176 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %175, align 8, !noalias !3
  %177 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %176, i64 2
  %178 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %177, align 8, !noalias !3
  %179 = call i32 %178(%"class.webrtc::AudioEncoder"* %174) #10, !noalias !3
  %180 = mul nsw i32 %179, 10
  %181 = srem i32 %180, 1000
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %170
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %181, i32 0, i32 %180, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 1000) #12
  unreachable

184:                                              ; preds = %170
  %185 = sdiv i32 %179, 100
  %186 = sext i32 %185 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 48, i1 false) #10, !alias.scope !3
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoC1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %9) #10
  %187 = icmp eq i64 %112, 0
  br i1 %187, label %217, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %190 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 5, i32 0, i32 0
  %191 = add i32 %179, 99
  %192 = icmp ult i32 %191, 199
  %193 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %9, i64 0, i32 0, i32 0
  br label %194

194:                                              ; preds = %212, %188
  %195 = phi i64 [ 0, %188 ], [ %215, %212 ]
  %196 = phi i8 [ 0, %188 ], [ %214, %212 ]
  %197 = phi i8 [ %173, %188 ], [ %213, %212 ]
  %198 = load %"class.webrtc::ComfortNoiseEncoder"*, %"class.webrtc::ComfortNoiseEncoder"** %189, align 8, !noalias !3
  %199 = mul i64 %195, %186
  %200 = load i16*, i16** %190, align 8, !noalias !3
  %201 = getelementptr inbounds i16, i16* %200, i64 %199
  %202 = select i1 %192, i16* null, i16* %201
  %203 = and i8 %197, 1
  %204 = icmp ne i8 %203, 0
  %205 = call i64 @_ZN6webrtc19ComfortNoiseEncoder6EncodeEN3rtc9ArrayViewIKsLln4711EEEbPNS1_7BufferTIhLb0EEE(%"class.webrtc::ComfortNoiseEncoder"* %198, i16* %202, i64 %186, i1 zeroext %204, %"class.rtc::BufferT"* %5) #10
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %194
  %208 = and i8 %196, 1
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %211, label %210

210:                                              ; preds = %207
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE4CallIJEEEvPKciS5_DpRKT_E1t, i64 0, i64 0)) #12
  unreachable

211:                                              ; preds = %207
  store i64 %205, i64* %193, align 8, !alias.scope !3
  br label %212

212:                                              ; preds = %211, %194
  %213 = phi i8 [ 0, %211 ], [ %197, %194 ]
  %214 = phi i8 [ 1, %211 ], [ %196, %194 ]
  %215 = add nuw i64 %195, 1
  %216 = icmp eq i64 %215, %112
  br i1 %216, label %217, label %194

217:                                              ; preds = %212, %184
  %218 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 6, i32 0, i32 0
  %219 = load i32*, i32** %218, align 8, !noalias !3
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %9, i64 0, i32 0, i32 1
  store i32 %220, i32* %221, align 8, !alias.scope !3
  %222 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 2
  %223 = load i32, i32* %222, align 8, !noalias !3
  %224 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %9, i64 0, i32 0, i32 2
  store i32 %223, i32* %224, align 4, !alias.scope !3
  %225 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %9, i64 0, i32 0, i32 3
  store i8 1, i8* %225, align 8, !alias.scope !3
  %226 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %9, i64 0, i32 0, i32 4
  store i8 0, i8* %226, align 1, !alias.scope !3
  %227 = call dereferenceable(48) %"struct.webrtc::AudioEncoder::EncodedInfo"* @_ZN6webrtc12AudioEncoder11EncodedInfoaSEOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %8, %"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull dereferenceable(48) %9) #10
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoD1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %171) #10
  store i8 0, i8* %172, align 8
  br label %273

228:                                              ; preds = %167
  %229 = bitcast %"struct.webrtc::AudioEncoder::EncodedInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %229) #10
  %230 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8, !noalias !6
  %231 = bitcast %"class.webrtc::AudioEncoder"* %230 to i32 (%"class.webrtc::AudioEncoder"*)***
  %232 = load i32 (%"class.webrtc::AudioEncoder"*)**, i32 (%"class.webrtc::AudioEncoder"*)*** %231, align 8, !noalias !6
  %233 = getelementptr inbounds i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %232, i64 2
  %234 = load i32 (%"class.webrtc::AudioEncoder"*)*, i32 (%"class.webrtc::AudioEncoder"*)** %233, align 8, !noalias !6
  %235 = call i32 %234(%"class.webrtc::AudioEncoder"* %230) #10, !noalias !6
  %236 = mul nsw i32 %235, 10
  %237 = srem i32 %236, 1000
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %240, label %239

239:                                              ; preds = %228
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i32 466, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE1EiEES6_S6_NS4_ILS5_9EPKcEES6_EEEvS8_iS8_DpRKT_E1t, i64 0, i64 0), i32 %237, i32 0, i32 %236, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 1000) #12
  unreachable

240:                                              ; preds = %228
  %241 = sdiv i32 %235, 100
  %242 = sext i32 %241 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %229, i8 -86, i64 48, i1 false) #10, !alias.scope !6
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoC1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %10) #10
  %243 = icmp eq i64 %112, 0
  br i1 %243, label %269, label %244

244:                                              ; preds = %240
  %245 = bitcast %"struct.webrtc::AudioEncoder::EncodedInfo"* %7 to i8*
  %246 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 6, i32 0, i32 0
  %247 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 5, i32 0, i32 0
  %248 = add i32 %235, 99
  %249 = icmp ult i32 %248, 199
  %250 = getelementptr inbounds %"struct.webrtc::AudioEncoder::EncodedInfo", %"struct.webrtc::AudioEncoder::EncodedInfo"* %10, i64 0, i32 0, i32 0
  br label %251

251:                                              ; preds = %267, %244
  %252 = phi i64 [ 0, %244 ], [ %261, %267 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %245) #10, !noalias !6
  %253 = load %"class.webrtc::AudioEncoder"*, %"class.webrtc::AudioEncoder"** %11, align 8, !noalias !6
  %254 = load i32*, i32** %246, align 8, !noalias !6
  %255 = load i32, i32* %254, align 4
  %256 = mul i64 %252, %242
  %257 = load i16*, i16** %247, align 8, !noalias !6
  %258 = getelementptr inbounds i16, i16* %257, i64 %256
  %259 = select i1 %249, i16* null, i16* %258
  call void @_ZN6webrtc12AudioEncoder6EncodeEjN3rtc9ArrayViewIKsLln4711EEEPNS1_7BufferTIhLb0EEE(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull sret %7, %"class.webrtc::AudioEncoder"* %253, i32 %255, i16* %259, i64 %242, %"class.rtc::BufferT"* %5) #10
  %260 = call dereferenceable(48) %"struct.webrtc::AudioEncoder::EncodedInfo"* @_ZN6webrtc12AudioEncoder11EncodedInfoaSEOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %10, %"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull dereferenceable(48) %7) #10
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoD1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %245) #10, !noalias !6
  %261 = add nuw i64 %252, 1
  %262 = icmp eq i64 %261, %112
  %263 = load i64, i64* %250, align 8, !alias.scope !6
  %264 = icmp eq i64 %263, 0
  br i1 %262, label %265, label %267

265:                                              ; preds = %251
  br i1 %264, label %266, label %269

266:                                              ; preds = %265
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 282, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEEEEEvS9_iS9_DpRKT_E1t, i64 0, i64 0), i64 0, i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0)) #12
  unreachable

267:                                              ; preds = %251
  br i1 %264, label %251, label %268

268:                                              ; preds = %267
  call void (i8*, i32, i8*, i8*, ...) @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str, i64 0, i64 0), i32 284, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZZN3rtc18webrtc_checks_impl11LogStreamerIJEE11CallCheckOpIJNS0_3ValILNS0_12CheckArgTypeE5EmEENS4_ILS5_1EiEENS4_ILS5_9EPKcEEEEEvS9_iS9_DpRKT_E1t, i64 0, i64 0), i64 %263, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #12
  unreachable

269:                                              ; preds = %265, %240
  %270 = call dereferenceable(48) %"struct.webrtc::AudioEncoder::EncodedInfo"* @_ZN6webrtc12AudioEncoder11EncodedInfoaSEOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %8, %"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull dereferenceable(48) %10) #10
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoD1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %229) #10
  %271 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::AudioEncoderCng", %"class.webrtc::(anonymous namespace)::AudioEncoderCng"* %1, i64 0, i32 7
  store i8 1, i8* %271, align 8
  br label %273

272:                                              ; preds = %167
  call void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() #12
  unreachable

273:                                              ; preds = %269, %217
  %274 = load i16*, i16** %134, align 8
  %275 = mul i64 %112, %24
  %276 = getelementptr inbounds i16, i16* %274, i64 %275
  %277 = icmp eq i64 %275, 0
  br i1 %277, label %289, label %278

278:                                              ; preds = %273
  %279 = ptrtoint i16* %276 to i64
  %280 = load i64, i64* %27, align 8
  %281 = sub i64 %280, %279
  %282 = ashr exact i64 %281, 1
  %283 = icmp eq i64 %281, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %278
  %285 = bitcast i16* %274 to i8*
  %286 = bitcast i16* %276 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %285, i8* align 2 %286, i64 %281, i1 false) #10
  br label %287

287:                                              ; preds = %284, %278
  %288 = getelementptr inbounds i16, i16* %274, i64 %282
  store i16* %288, i16** %26, align 8
  br label %289

289:                                              ; preds = %273, %287
  %290 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %33, i64 0, i32 0, i32 0
  %291 = load i32*, i32** %290, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 %112
  %293 = icmp eq i64 %112, 0
  br i1 %293, label %305, label %294

294:                                              ; preds = %289
  %295 = ptrtoint i32* %292 to i64
  %296 = load i64, i64* %35, align 8
  %297 = sub i64 %296, %295
  %298 = ashr exact i64 %297, 2
  %299 = icmp eq i64 %297, 0
  br i1 %299, label %303, label %300

300:                                              ; preds = %294
  %301 = bitcast i32* %291 to i8*
  %302 = bitcast i32* %292 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %301, i8* align 4 %302, i64 %297, i1 false) #10
  br label %303

303:                                              ; preds = %300, %294
  %304 = getelementptr inbounds i32, i32* %291, i64 %298
  store i32* %304, i32** %34, align 8
  br label %305

305:                                              ; preds = %289, %303
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoC1EOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"* %0, %"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull dereferenceable(48) %8) #10
  call void @_ZN6webrtc12AudioEncoder11EncodedInfoD1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %169) #10
  br label %306

306:                                              ; preds = %305, %118
  ret void
}

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl8FatalLogEPKciS2_PKNS0_12CheckArgTypeEz(i8*, i32, i8*, i8*, ...) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZNSt3__16vectorIsNS_9allocatorIsEEE6insertIPKsEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIsNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPsEEE4typeENSC_IS6_EES8_S8_(%"class.std::__1::vector"*, i16*, i16*, i16*) local_unnamed_addr #1 comdat align 2 {
  %5 = bitcast i16* %2 to i8*
  %6 = bitcast i16* %1 to i8*
  %7 = ptrtoint i16* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint i16* %3 to i64
  %10 = ptrtoint i16* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %547

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i16** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load i16*, i16** %18, align 8
  %20 = ptrtoint i16* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 1
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast i16** %18 to i64*
  br i1 %23, label %188, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 1
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds i16, i16* %2, i64 %27
  %31 = ptrtoint i16* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 1
  %36 = bitcast i16* %19 to i8*
  %37 = bitcast i16* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %36, i8* align 2 %37, i64 %32, i1 false) #10
  %38 = getelementptr inbounds i16, i16* %19, i64 %35
  %39 = ptrtoint i16* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %547

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to i16*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi i16* [ %44, %43 ], [ %19, %25 ]
  %48 = phi i16* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds i16, i16* %1, i64 %12
  %50 = ptrtoint i16* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 1
  %53 = getelementptr inbounds i16, i16* %1, i64 %52
  %54 = icmp ult i16* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr i16, i16* %19, i64 %56
  %58 = bitcast i16* %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 1
  %63 = add nuw i64 %62, 1
  %64 = icmp ult i64 %63, 16
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi i16* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi i16* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr i16, i16* %19, i64 %69
  %71 = bitcast i16* %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 1
  %76 = add nuw i64 %75, 1
  %77 = getelementptr i16, i16* %47, i64 %76
  %78 = add i64 %52, %75
  %79 = add i64 %78, 1
  %80 = getelementptr i16, i16* %1, i64 %79
  %81 = icmp ult i16* %47, %80
  %82 = icmp ult i16* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, -16
  %86 = getelementptr i16, i16* %47, i64 %85
  %87 = getelementptr i16, i16* %53, i64 %85
  %88 = add i64 %85, -16
  %89 = lshr exact i64 %88, 4
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 48
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i16, i16* %47, i64 %96
  %99 = getelementptr i16, i16* %53, i64 %96
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !9
  %102 = getelementptr i16, i16* %99, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !9
  %105 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !12, !noalias !9
  %106 = getelementptr i16, i16* %98, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !12, !noalias !9
  %108 = or i64 %96, 16
  %109 = getelementptr i16, i16* %47, i64 %108
  %110 = getelementptr i16, i16* %53, i64 %108
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !9
  %113 = getelementptr i16, i16* %110, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !9
  %116 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !12, !noalias !9
  %117 = getelementptr i16, i16* %109, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !12, !noalias !9
  %119 = or i64 %96, 32
  %120 = getelementptr i16, i16* %47, i64 %119
  %121 = getelementptr i16, i16* %53, i64 %119
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !9
  %124 = getelementptr i16, i16* %121, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !9
  %127 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !12, !noalias !9
  %128 = getelementptr i16, i16* %120, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !12, !noalias !9
  %130 = or i64 %96, 48
  %131 = getelementptr i16, i16* %47, i64 %130
  %132 = getelementptr i16, i16* %53, i64 %130
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !9
  %135 = getelementptr i16, i16* %132, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !9
  %138 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %138, align 2, !alias.scope !12, !noalias !9
  %139 = getelementptr i16, i16* %131, i64 8
  %140 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %140, align 2, !alias.scope !12, !noalias !9
  %141 = add i64 %96, 64
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !14

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i16, i16* %47, i64 %148
  %151 = getelementptr i16, i16* %53, i64 %148
  %152 = bitcast i16* %151 to <8 x i16>*
  %153 = load <8 x i16>, <8 x i16>* %152, align 2, !alias.scope !9
  %154 = getelementptr i16, i16* %151, i64 8
  %155 = bitcast i16* %154 to <8 x i16>*
  %156 = load <8 x i16>, <8 x i16>* %155, align 2, !alias.scope !9
  %157 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %153, <8 x i16>* %157, align 2, !alias.scope !12, !noalias !9
  %158 = getelementptr i16, i16* %150, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %156, <8 x i16>* %159, align 2, !alias.scope !12, !noalias !9
  %160 = add i64 %148, 16
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !16

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi i16* [ %86, %163 ], [ %181, %176 ]
  %167 = ptrtoint i16* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %183, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds i16, i16* %47, i64 %172
  %174 = bitcast i16* %173 to i8*
  %175 = bitcast i16* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %174, i8* align 2 %175, i64 %51, i1 false) #10
  br label %183

176:                                              ; preds = %65, %176
  %177 = phi i16* [ %181, %176 ], [ %66, %65 ]
  %178 = phi i16* [ %180, %176 ], [ %67, %65 ]
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = icmp ult i16* %180, %19
  br i1 %182, label %176, label %165, !llvm.loop !18

183:                                              ; preds = %168, %171
  %184 = ptrtoint i16* %48 to i64
  %185 = sub i64 %184, %10
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %547, label %187

187:                                              ; preds = %183
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %6, i8* align 2 %5, i64 %185, i1 false) #10
  br label %547

188:                                              ; preds = %14
  %189 = bitcast %"class.std::__1::vector"* %0 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = sub i64 %20, %190
  %192 = ashr exact i64 %191, 1
  %193 = add nsw i64 %192, %12
  %194 = icmp slt i64 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %188
  %196 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %196) #12
  unreachable

197:                                              ; preds = %188
  %198 = sub i64 %17, %190
  %199 = ashr exact i64 %198, 1
  %200 = icmp ult i64 %199, 4611686018427387903
  %201 = icmp ult i64 %198, %193
  %202 = select i1 %201, i64 %193, i64 %198
  %203 = select i1 %200, i64 %202, i64 9223372036854775807
  %204 = sub i64 %7, %190
  %205 = ashr exact i64 %204, 1
  %206 = icmp eq i64 %203, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %197
  %208 = icmp slt i64 %203, 0
  br i1 %208, label %209, label %210

209:                                              ; preds = %207
  tail call void @abort() #12
  unreachable

210:                                              ; preds = %207
  %211 = shl i64 %203, 1
  %212 = tail call i8* @_Znwm(i64 %211) #11
  %213 = bitcast i8* %212 to i16*
  br label %214

214:                                              ; preds = %210, %197
  %215 = phi i16* [ %213, %210 ], [ null, %197 ]
  %216 = getelementptr inbounds i16, i16* %215, i64 %205
  %217 = getelementptr inbounds i16, i16* %215, i64 %203
  %218 = ptrtoint i16* %217 to i64
  %219 = getelementptr inbounds i16, i16* %216, i64 %12
  %220 = add i64 %11, -2
  %221 = lshr i64 %220, 1
  %222 = add nuw i64 %221, 1
  %223 = icmp ult i64 %222, 16
  br i1 %223, label %316, label %224

224:                                              ; preds = %214
  %225 = add i64 %11, -2
  %226 = lshr i64 %225, 1
  %227 = add i64 %205, %226
  %228 = add i64 %227, 1
  %229 = getelementptr i16, i16* %215, i64 %228
  %230 = add nuw i64 %226, 1
  %231 = getelementptr i16, i16* %2, i64 %230
  %232 = icmp ult i16* %216, %231
  %233 = icmp ugt i16* %229, %2
  %234 = and i1 %232, %233
  br i1 %234, label %316, label %235

235:                                              ; preds = %224
  %236 = and i64 %222, -16
  %237 = getelementptr i16, i16* %216, i64 %236
  %238 = getelementptr i16, i16* %2, i64 %236
  %239 = add i64 %236, -16
  %240 = lshr exact i64 %239, 4
  %241 = add nuw nsw i64 %240, 1
  %242 = and i64 %241, 3
  %243 = icmp ult i64 %239, 48
  br i1 %243, label %295, label %244

244:                                              ; preds = %235
  %245 = sub nsw i64 %241, %242
  br label %246

246:                                              ; preds = %246, %244
  %247 = phi i64 [ 0, %244 ], [ %292, %246 ]
  %248 = phi i64 [ %245, %244 ], [ %293, %246 ]
  %249 = getelementptr i16, i16* %216, i64 %247
  %250 = getelementptr i16, i16* %2, i64 %247
  %251 = bitcast i16* %250 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !19
  %253 = getelementptr i16, i16* %250, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !19
  %256 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !22, !noalias !19
  %257 = getelementptr i16, i16* %249, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !22, !noalias !19
  %259 = or i64 %247, 16
  %260 = getelementptr i16, i16* %216, i64 %259
  %261 = getelementptr i16, i16* %2, i64 %259
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !19
  %264 = getelementptr i16, i16* %261, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !19
  %267 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !22, !noalias !19
  %268 = getelementptr i16, i16* %260, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !22, !noalias !19
  %270 = or i64 %247, 32
  %271 = getelementptr i16, i16* %216, i64 %270
  %272 = getelementptr i16, i16* %2, i64 %270
  %273 = bitcast i16* %272 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !19
  %275 = getelementptr i16, i16* %272, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !19
  %278 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !22, !noalias !19
  %279 = getelementptr i16, i16* %271, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !22, !noalias !19
  %281 = or i64 %247, 48
  %282 = getelementptr i16, i16* %216, i64 %281
  %283 = getelementptr i16, i16* %2, i64 %281
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !19
  %286 = getelementptr i16, i16* %283, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !19
  %289 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !22, !noalias !19
  %290 = getelementptr i16, i16* %282, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !22, !noalias !19
  %292 = add i64 %247, 64
  %293 = add i64 %248, -4
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %246, !llvm.loop !24

295:                                              ; preds = %246, %235
  %296 = phi i64 [ 0, %235 ], [ %292, %246 ]
  %297 = icmp eq i64 %242, 0
  br i1 %297, label %314, label %298

298:                                              ; preds = %295, %298
  %299 = phi i64 [ %311, %298 ], [ %296, %295 ]
  %300 = phi i64 [ %312, %298 ], [ %242, %295 ]
  %301 = getelementptr i16, i16* %216, i64 %299
  %302 = getelementptr i16, i16* %2, i64 %299
  %303 = bitcast i16* %302 to <8 x i16>*
  %304 = load <8 x i16>, <8 x i16>* %303, align 2, !alias.scope !19
  %305 = getelementptr i16, i16* %302, i64 8
  %306 = bitcast i16* %305 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !19
  %308 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %304, <8 x i16>* %308, align 2, !alias.scope !22, !noalias !19
  %309 = getelementptr i16, i16* %301, i64 8
  %310 = bitcast i16* %309 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %310, align 2, !alias.scope !22, !noalias !19
  %311 = add i64 %299, 16
  %312 = add i64 %300, -1
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %314, label %298, !llvm.loop !25

314:                                              ; preds = %298, %295
  %315 = icmp eq i64 %222, %236
  br i1 %315, label %370, label %316

316:                                              ; preds = %314, %224, %214
  %317 = phi i16* [ %216, %224 ], [ %216, %214 ], [ %237, %314 ]
  %318 = phi i16* [ %2, %224 ], [ %2, %214 ], [ %238, %314 ]
  %319 = ptrtoint i16* %317 to i64
  %320 = add nsw i64 %12, %205
  %321 = add i64 %320, -1
  %322 = getelementptr i16, i16* %215, i64 %321
  %323 = ptrtoint i16* %322 to i64
  %324 = sub i64 %323, %319
  %325 = lshr i64 %324, 1
  %326 = add nuw i64 %325, 1
  %327 = and i64 %326, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %338, label %329

329:                                              ; preds = %316, %329
  %330 = phi i16* [ %334, %329 ], [ %317, %316 ]
  %331 = phi i16* [ %335, %329 ], [ %318, %316 ]
  %332 = phi i64 [ %336, %329 ], [ %327, %316 ]
  %333 = load i16, i16* %331, align 2
  store i16 %333, i16* %330, align 2
  %334 = getelementptr inbounds i16, i16* %330, i64 1
  %335 = getelementptr inbounds i16, i16* %331, i64 1
  %336 = add i64 %332, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %329, !llvm.loop !26

338:                                              ; preds = %329, %316
  %339 = phi i16* [ %317, %316 ], [ %334, %329 ]
  %340 = phi i16* [ %318, %316 ], [ %335, %329 ]
  %341 = icmp ult i64 %324, 14
  br i1 %341, label %370, label %342

342:                                              ; preds = %338, %342
  %343 = phi i16* [ %367, %342 ], [ %339, %338 ]
  %344 = phi i16* [ %368, %342 ], [ %340, %338 ]
  %345 = load i16, i16* %344, align 2
  store i16 %345, i16* %343, align 2
  %346 = getelementptr inbounds i16, i16* %343, i64 1
  %347 = getelementptr inbounds i16, i16* %344, i64 1
  %348 = load i16, i16* %347, align 2
  store i16 %348, i16* %346, align 2
  %349 = getelementptr inbounds i16, i16* %343, i64 2
  %350 = getelementptr inbounds i16, i16* %344, i64 2
  %351 = load i16, i16* %350, align 2
  store i16 %351, i16* %349, align 2
  %352 = getelementptr inbounds i16, i16* %343, i64 3
  %353 = getelementptr inbounds i16, i16* %344, i64 3
  %354 = load i16, i16* %353, align 2
  store i16 %354, i16* %352, align 2
  %355 = getelementptr inbounds i16, i16* %343, i64 4
  %356 = getelementptr inbounds i16, i16* %344, i64 4
  %357 = load i16, i16* %356, align 2
  store i16 %357, i16* %355, align 2
  %358 = getelementptr inbounds i16, i16* %343, i64 5
  %359 = getelementptr inbounds i16, i16* %344, i64 5
  %360 = load i16, i16* %359, align 2
  store i16 %360, i16* %358, align 2
  %361 = getelementptr inbounds i16, i16* %343, i64 6
  %362 = getelementptr inbounds i16, i16* %344, i64 6
  %363 = load i16, i16* %362, align 2
  store i16 %363, i16* %361, align 2
  %364 = getelementptr inbounds i16, i16* %343, i64 7
  %365 = getelementptr inbounds i16, i16* %344, i64 7
  %366 = load i16, i16* %365, align 2
  store i16 %366, i16* %364, align 2
  %367 = getelementptr inbounds i16, i16* %343, i64 8
  %368 = getelementptr inbounds i16, i16* %344, i64 8
  %369 = icmp eq i16* %219, %367
  br i1 %369, label %370, label %342, !llvm.loop !27

370:                                              ; preds = %338, %342, %314
  %371 = load i16*, i16** %8, align 8
  %372 = ptrtoint i16* %371 to i64
  %373 = sub i64 %7, %372
  %374 = ashr exact i64 %373, 1
  %375 = sub nsw i64 0, %374
  %376 = getelementptr inbounds i16, i16* %216, i64 %375
  %377 = ptrtoint i16* %376 to i64
  %378 = icmp sgt i64 %373, 0
  br i1 %378, label %379, label %382

379:                                              ; preds = %370
  %380 = bitcast i16* %376 to i8*
  %381 = bitcast i16* %371 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %380, i8* align 2 %381, i64 %373, i1 false) #10
  br label %382

382:                                              ; preds = %379, %370
  %383 = load i16*, i16** %18, align 8
  %384 = icmp eq i16* %383, %1
  br i1 %384, label %540, label %385

385:                                              ; preds = %382
  %386 = getelementptr i16, i16* %383, i64 -1
  %387 = ptrtoint i16* %386 to i64
  %388 = sub i64 %387, %7
  %389 = lshr i64 %388, 1
  %390 = add nuw i64 %389, 1
  %391 = icmp ult i64 %390, 16
  br i1 %391, label %487, label %392

392:                                              ; preds = %385
  %393 = add nsw i64 %12, %205
  %394 = getelementptr i16, i16* %383, i64 -1
  %395 = ptrtoint i16* %394 to i64
  %396 = sub i64 %395, %7
  %397 = lshr i64 %396, 1
  %398 = add i64 %393, %397
  %399 = add i64 %398, 1
  %400 = getelementptr i16, i16* %215, i64 %399
  %401 = add nuw i64 %397, 1
  %402 = getelementptr i16, i16* %1, i64 %401
  %403 = icmp ult i16* %219, %402
  %404 = icmp ugt i16* %400, %1
  %405 = and i1 %403, %404
  br i1 %405, label %487, label %406

406:                                              ; preds = %392
  %407 = and i64 %390, -16
  %408 = getelementptr i16, i16* %219, i64 %407
  %409 = getelementptr i16, i16* %1, i64 %407
  %410 = add i64 %407, -16
  %411 = lshr exact i64 %410, 4
  %412 = add nuw nsw i64 %411, 1
  %413 = and i64 %412, 3
  %414 = icmp ult i64 %410, 48
  br i1 %414, label %466, label %415

415:                                              ; preds = %406
  %416 = sub nsw i64 %412, %413
  br label %417

417:                                              ; preds = %417, %415
  %418 = phi i64 [ 0, %415 ], [ %463, %417 ]
  %419 = phi i64 [ %416, %415 ], [ %464, %417 ]
  %420 = getelementptr i16, i16* %219, i64 %418
  %421 = getelementptr i16, i16* %1, i64 %418
  %422 = bitcast i16* %421 to <8 x i16>*
  %423 = load <8 x i16>, <8 x i16>* %422, align 2, !alias.scope !28
  %424 = getelementptr i16, i16* %421, i64 8
  %425 = bitcast i16* %424 to <8 x i16>*
  %426 = load <8 x i16>, <8 x i16>* %425, align 2, !alias.scope !28
  %427 = bitcast i16* %420 to <8 x i16>*
  store <8 x i16> %423, <8 x i16>* %427, align 2, !alias.scope !31, !noalias !28
  %428 = getelementptr i16, i16* %420, i64 8
  %429 = bitcast i16* %428 to <8 x i16>*
  store <8 x i16> %426, <8 x i16>* %429, align 2, !alias.scope !31, !noalias !28
  %430 = or i64 %418, 16
  %431 = getelementptr i16, i16* %219, i64 %430
  %432 = getelementptr i16, i16* %1, i64 %430
  %433 = bitcast i16* %432 to <8 x i16>*
  %434 = load <8 x i16>, <8 x i16>* %433, align 2, !alias.scope !28
  %435 = getelementptr i16, i16* %432, i64 8
  %436 = bitcast i16* %435 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !28
  %438 = bitcast i16* %431 to <8 x i16>*
  store <8 x i16> %434, <8 x i16>* %438, align 2, !alias.scope !31, !noalias !28
  %439 = getelementptr i16, i16* %431, i64 8
  %440 = bitcast i16* %439 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %440, align 2, !alias.scope !31, !noalias !28
  %441 = or i64 %418, 32
  %442 = getelementptr i16, i16* %219, i64 %441
  %443 = getelementptr i16, i16* %1, i64 %441
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !28
  %446 = getelementptr i16, i16* %443, i64 8
  %447 = bitcast i16* %446 to <8 x i16>*
  %448 = load <8 x i16>, <8 x i16>* %447, align 2, !alias.scope !28
  %449 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %449, align 2, !alias.scope !31, !noalias !28
  %450 = getelementptr i16, i16* %442, i64 8
  %451 = bitcast i16* %450 to <8 x i16>*
  store <8 x i16> %448, <8 x i16>* %451, align 2, !alias.scope !31, !noalias !28
  %452 = or i64 %418, 48
  %453 = getelementptr i16, i16* %219, i64 %452
  %454 = getelementptr i16, i16* %1, i64 %452
  %455 = bitcast i16* %454 to <8 x i16>*
  %456 = load <8 x i16>, <8 x i16>* %455, align 2, !alias.scope !28
  %457 = getelementptr i16, i16* %454, i64 8
  %458 = bitcast i16* %457 to <8 x i16>*
  %459 = load <8 x i16>, <8 x i16>* %458, align 2, !alias.scope !28
  %460 = bitcast i16* %453 to <8 x i16>*
  store <8 x i16> %456, <8 x i16>* %460, align 2, !alias.scope !31, !noalias !28
  %461 = getelementptr i16, i16* %453, i64 8
  %462 = bitcast i16* %461 to <8 x i16>*
  store <8 x i16> %459, <8 x i16>* %462, align 2, !alias.scope !31, !noalias !28
  %463 = add i64 %418, 64
  %464 = add i64 %419, -4
  %465 = icmp eq i64 %464, 0
  br i1 %465, label %466, label %417, !llvm.loop !33

466:                                              ; preds = %417, %406
  %467 = phi i64 [ 0, %406 ], [ %463, %417 ]
  %468 = icmp eq i64 %413, 0
  br i1 %468, label %485, label %469

469:                                              ; preds = %466, %469
  %470 = phi i64 [ %482, %469 ], [ %467, %466 ]
  %471 = phi i64 [ %483, %469 ], [ %413, %466 ]
  %472 = getelementptr i16, i16* %219, i64 %470
  %473 = getelementptr i16, i16* %1, i64 %470
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !28
  %476 = getelementptr i16, i16* %473, i64 8
  %477 = bitcast i16* %476 to <8 x i16>*
  %478 = load <8 x i16>, <8 x i16>* %477, align 2, !alias.scope !28
  %479 = bitcast i16* %472 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %479, align 2, !alias.scope !31, !noalias !28
  %480 = getelementptr i16, i16* %472, i64 8
  %481 = bitcast i16* %480 to <8 x i16>*
  store <8 x i16> %478, <8 x i16>* %481, align 2, !alias.scope !31, !noalias !28
  %482 = add i64 %470, 16
  %483 = add i64 %471, -1
  %484 = icmp eq i64 %483, 0
  br i1 %484, label %485, label %469, !llvm.loop !34

485:                                              ; preds = %469, %466
  %486 = icmp eq i64 %390, %407
  br i1 %486, label %540, label %487

487:                                              ; preds = %485, %392, %385
  %488 = phi i16* [ %219, %392 ], [ %219, %385 ], [ %408, %485 ]
  %489 = phi i16* [ %1, %392 ], [ %1, %385 ], [ %409, %485 ]
  %490 = ptrtoint i16* %489 to i64
  %491 = getelementptr i16, i16* %383, i64 -1
  %492 = ptrtoint i16* %491 to i64
  %493 = sub i64 %492, %490
  %494 = lshr i64 %493, 1
  %495 = add nuw i64 %494, 1
  %496 = and i64 %495, 7
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %507, label %498

498:                                              ; preds = %487, %498
  %499 = phi i16* [ %504, %498 ], [ %488, %487 ]
  %500 = phi i16* [ %503, %498 ], [ %489, %487 ]
  %501 = phi i64 [ %505, %498 ], [ %496, %487 ]
  %502 = load i16, i16* %500, align 2
  store i16 %502, i16* %499, align 2
  %503 = getelementptr inbounds i16, i16* %500, i64 1
  %504 = getelementptr inbounds i16, i16* %499, i64 1
  %505 = add i64 %501, -1
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %507, label %498, !llvm.loop !35

507:                                              ; preds = %498, %487
  %508 = phi i16* [ undef, %487 ], [ %504, %498 ]
  %509 = phi i16* [ %488, %487 ], [ %504, %498 ]
  %510 = phi i16* [ %489, %487 ], [ %503, %498 ]
  %511 = icmp ult i64 %493, 14
  br i1 %511, label %540, label %512

512:                                              ; preds = %507, %512
  %513 = phi i16* [ %538, %512 ], [ %509, %507 ]
  %514 = phi i16* [ %537, %512 ], [ %510, %507 ]
  %515 = load i16, i16* %514, align 2
  store i16 %515, i16* %513, align 2
  %516 = getelementptr inbounds i16, i16* %514, i64 1
  %517 = getelementptr inbounds i16, i16* %513, i64 1
  %518 = load i16, i16* %516, align 2
  store i16 %518, i16* %517, align 2
  %519 = getelementptr inbounds i16, i16* %514, i64 2
  %520 = getelementptr inbounds i16, i16* %513, i64 2
  %521 = load i16, i16* %519, align 2
  store i16 %521, i16* %520, align 2
  %522 = getelementptr inbounds i16, i16* %514, i64 3
  %523 = getelementptr inbounds i16, i16* %513, i64 3
  %524 = load i16, i16* %522, align 2
  store i16 %524, i16* %523, align 2
  %525 = getelementptr inbounds i16, i16* %514, i64 4
  %526 = getelementptr inbounds i16, i16* %513, i64 4
  %527 = load i16, i16* %525, align 2
  store i16 %527, i16* %526, align 2
  %528 = getelementptr inbounds i16, i16* %514, i64 5
  %529 = getelementptr inbounds i16, i16* %513, i64 5
  %530 = load i16, i16* %528, align 2
  store i16 %530, i16* %529, align 2
  %531 = getelementptr inbounds i16, i16* %514, i64 6
  %532 = getelementptr inbounds i16, i16* %513, i64 6
  %533 = load i16, i16* %531, align 2
  store i16 %533, i16* %532, align 2
  %534 = getelementptr inbounds i16, i16* %514, i64 7
  %535 = getelementptr inbounds i16, i16* %513, i64 7
  %536 = load i16, i16* %534, align 2
  store i16 %536, i16* %535, align 2
  %537 = getelementptr inbounds i16, i16* %514, i64 8
  %538 = getelementptr inbounds i16, i16* %513, i64 8
  %539 = icmp eq i16* %537, %383
  br i1 %539, label %540, label %512, !llvm.loop !36

540:                                              ; preds = %507, %512, %485, %382
  %541 = phi i16* [ %219, %382 ], [ %408, %485 ], [ %508, %507 ], [ %538, %512 ]
  %542 = ptrtoint i16* %541 to i64
  %543 = load i16*, i16** %8, align 8
  store i64 %377, i64* %189, align 8
  store i64 %542, i64* %24, align 8
  store i64 %218, i64* %16, align 8
  %544 = icmp eq i16* %543, null
  br i1 %544, label %547, label %545

545:                                              ; preds = %540
  %546 = bitcast i16* %543 to i8*
  tail call void @_ZdlPv(i8* %546) #11
  br label %547

547:                                              ; preds = %545, %540, %40, %183, %187, %4
  %548 = phi i16* [ %1, %4 ], [ %1, %187 ], [ %1, %183 ], [ %1, %40 ], [ %216, %540 ], [ %216, %545 ]
  ret i16* %548
}

declare void @_ZN6webrtc12AudioEncoder11EncodedInfoC1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dereferenceable(48) %"struct.webrtc::AudioEncoder::EncodedInfo"* @_ZN6webrtc12AudioEncoder11EncodedInfoaSEOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"*, %"struct.webrtc::AudioEncoder::EncodedInfo"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc12AudioEncoder11EncodedInfoD1Ev(%"struct.webrtc::AudioEncoder::EncodedInfo"*) unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZN3rtc18webrtc_checks_impl22UnreachableCodeReachedEv() local_unnamed_addr #6

declare void @_ZN6webrtc12AudioEncoder11EncodedInfoC1EOS1_(%"struct.webrtc::AudioEncoder::EncodedInfo"*, %"struct.webrtc::AudioEncoder::EncodedInfo"* dereferenceable(48)) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN6webrtc19ComfortNoiseEncoder6EncodeEN3rtc9ArrayViewIKsLln4711EEEbPNS1_7BufferTIhLb0EEE(%"class.webrtc::ComfortNoiseEncoder"*, i16*, i64, i1 zeroext, %"class.rtc::BufferT"*) local_unnamed_addr #4

declare void @_ZN6webrtc12AudioEncoder6EncodeEjN3rtc9ArrayViewIKsLln4711EEEPNS1_7BufferTIhLb0EEE(%"struct.webrtc::AudioEncoder::EncodedInfo"* sret, %"class.webrtc::AudioEncoder"*, i32, i16*, i64, %"class.rtc::BufferT"*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng13EncodePassiveEmPN3rtc7BufferTIhLb0EEE: argument 0"}
!5 = distinct !{!5, !"_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng13EncodePassiveEmPN3rtc7BufferTIhLb0EEE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng12EncodeActiveEmPN3rtc7BufferTIhLb0EEE: argument 0"}
!8 = distinct !{!8, !"_ZN6webrtc12_GLOBAL__N_115AudioEncoderCng12EncodeActiveEmPN3rtc7BufferTIhLb0EEE"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !15}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !15}
!25 = distinct !{!25, !17}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !15}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !15}
!34 = distinct !{!34, !17}
!35 = distinct !{!35, !17}
!36 = distinct !{!36, !15}
