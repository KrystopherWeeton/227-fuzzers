; ModuleID = '../../third_party/fontconfig/src/src/fcdbg.c'
source_filename = "../../third_party/fontconfig/src/src/fcdbg.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._FcPattern = type { i32, i32, i64, %struct._FcRef }
%struct._FcRef = type { i32 }
%struct._FcFontSet = type { i32, i32, %struct._FcPattern** }
%struct._FcCharSet = type { %struct._FcRef, i32, i64, i64 }
%struct._FcLangSet = type opaque
%struct._FcValueList = type { %struct._FcValueList*, %struct._FcValue, i32 }
%struct._FcValue = type { i32, %union.anon }
%union.anon = type { i8* }
%struct._FcStrBuf = type { i8*, i32, i32, i32, i32, [128 x i8] }
%struct._FcCharLeaf = type { [8 x i32] }
%struct._FcPatternIter = type { i8*, i8* }
%struct._FcObjectSet = type { i32, i32, i8** }
%struct._FcPatternElt = type { i32, %struct._FcValueList* }
%struct._FcExpr = type { i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon }
%struct.anon = type { %struct._FcExpr*, %struct._FcExpr* }
%struct._FcExprMatrix = type { %struct._FcExpr*, %struct._FcExpr*, %struct._FcExpr*, %struct._FcExpr* }
%struct._FcRange = type { double, double }
%struct._FcExprName = type { i32, i32 }
%struct._FcTest = type { i32, i32, i32, i32, %struct._FcExpr* }
%struct._FcEdit = type { i32, i32, %struct._FcExpr*, i32 }
%struct._FcRule = type { %struct._FcRule*, i32, %union.anon.1 }
%union.anon.1 = type { %struct._FcTest* }

@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c" [marker] \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c" [marker]\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"langset (alloc error)\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"%04x:\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c" %08x\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"Pattern has %d elts (size %d)\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"\09%s:\00", align 1
@.str.12 = private unnamed_addr constant [50 x i8] c"Pattern has %d elts (size %d), %d elts (size %d)\0A\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"\09%s: (None) -> \00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"Integer\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Double\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"String\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Range\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"Bool\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"CharSet\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"LangSet\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"Field\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Const\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"Assign\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"AssignReplace\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"Prepend\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"PrependFirst\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"Append\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"AppendLast\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"DeleteAll\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"Quest\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"Or\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"And\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"Equal\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"(ignore blanks)\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"NotEqual\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"Less\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"LessEqual\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"More\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"MoreEqual\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"Contains\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c"NotContains\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"Plus\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"Minus\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"Times\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"Divide\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"Not\00", align 1
@.str.51 = private unnamed_addr constant [4 x i8] c"Nil\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"Comma\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"Floor\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"Ceil\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"Round\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"Trunc\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"Listing\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"Invalid\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.60 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"; \00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"(%g, %g)\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.68 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"langset:\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"(pattern) \00", align 1
@.str.74 = private unnamed_addr constant [8 x i8] c"(font) \00", align 1
@.str.75 = private unnamed_addr constant [8 x i8] c" quest \00", align 1
@.str.76 = private unnamed_addr constant [8 x i8] c" colon \00", align 1
@.str.77 = private unnamed_addr constant [5 x i8] c"Not \00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"Floor \00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"Ceil \00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"Round \00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"Trunc \00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"pattern \00", align 1
@.str.83 = private unnamed_addr constant [6 x i8] c"font \00", align 1
@.str.84 = private unnamed_addr constant [6 x i8] c"scan \00", align 1
@.str.85 = private unnamed_addr constant [5 x i8] c"any \00", align 1
@.str.86 = private unnamed_addr constant [5 x i8] c"all \00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"first \00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c"not_first \00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"Edit %s \00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"FontSet %d of %d\0A\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"Font %d \00", align 1
@FcDebugVal = common hidden local_unnamed_addr global i32 0, align 4
@.str.95 = private unnamed_addr constant [9 x i8] c"FC_DEBUG\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"FC_DEBUG=%s\0A\00", align 1
@.str.97 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"<void>\00", align 1
@.str.99 = private unnamed_addr constant [6 x i8] c"%d(i)\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"%g(f)\00", align 1
@.str.101 = private unnamed_addr constant [5 x i8] c"True\00", align 1
@.str.102 = private unnamed_addr constant [6 x i8] c"False\00", align 1
@.str.103 = private unnamed_addr constant [9 x i8] c"DontCare\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"[%g %g; %g %g]\00", align 1
@.str.105 = private unnamed_addr constant [5 x i8] c"face\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"[%g %g]\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"(w)\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"(s)\00", align 1
@.str.109 = private unnamed_addr constant [4 x i8] c"(=)\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"(?)\00", align 1
@str = private unnamed_addr constant [13 x i8] c"Null pattern\00", align 1
@str.111 = private unnamed_addr constant [11 x i8] c" -> (None)\00", align 1
@str.112 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@str.113 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@str.114 = private unnamed_addr constant [2 x i8] c";\00", align 1
@str.115 = private unnamed_addr constant [7 x i8] c"[edit]\00", align 1
@str.116 = private unnamed_addr constant [7 x i8] c"[test]\00", align 1
@switch.table.FcValueListPrint = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.109, i64 0, i64 0)], align 8
@switch.table.FcTestPrint = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i64 0, i64 0)], align 8

@FcValuePrint = hidden alias void (i32, i8*), void (i32, i8*)* @IA__FcValuePrint
@FcPatternPrint = hidden alias void (%struct._FcPattern*), void (%struct._FcPattern*)* @IA__FcPatternPrint
@FcFontSetPrint = hidden alias void (%struct._FcFontSet*), void (%struct._FcFontSet*)* @IA__FcFontSetPrint

; Function Attrs: nounwind ssp uwtable
define hidden void @FcValuePrintFile(%struct._IO_FILE* nocapture, i32, i8*) local_unnamed_addr #0 {
  %4 = tail call i32 @fputc(i32 32, %struct._IO_FILE* %0)
  tail call fastcc void @_FcValuePrintFile(%struct._IO_FILE* %0, i32 %1, i8* %2)
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_FcValuePrintFile(%struct._IO_FILE* nocapture, i32, i8*) unnamed_addr #0 {
  %4 = ptrtoint i8* %2 to i64
  %5 = trunc i64 %4 to i32
  switch i32 %1, label %52 [
    i32 -1, label %6
    i32 0, label %8
    i32 1, label %10
    i32 2, label %12
    i32 3, label %15
    i32 4, label %17
    i32 5, label %23
    i32 6, label %36
    i32 8, label %41
    i32 7, label %43
    i32 9, label %45
  ]

6:                                                ; preds = %3
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.97, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %0)
  br label %52

8:                                                ; preds = %3
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i64 6, i64 1, %struct._IO_FILE* %0)
  br label %52

10:                                               ; preds = %3
  %11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.99, i64 0, i64 0), i32 %5)
  br label %52

12:                                               ; preds = %3
  %13 = bitcast i64 %4 to double
  %14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), double %13)
  br label %52

15:                                               ; preds = %3
  %16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i8* %2)
  br label %52

17:                                               ; preds = %3
  %18 = icmp eq i32 %5, 1
  %19 = icmp eq i32 %5, 0
  %20 = select i1 %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.103, i64 0, i64 0)
  %21 = select i1 %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.101, i64 0, i64 0), i8* %20
  %22 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* %21)
  br label %52

23:                                               ; preds = %3
  %24 = bitcast i8* %2 to double*
  %25 = load double, double* %24, align 8
  %26 = getelementptr inbounds i8, i8* %2, i64 8
  %27 = bitcast i8* %26 to double*
  %28 = load double, double* %27, align 8
  %29 = getelementptr inbounds i8, i8* %2, i64 16
  %30 = bitcast i8* %29 to double*
  %31 = load double, double* %30, align 8
  %32 = getelementptr inbounds i8, i8* %2, i64 24
  %33 = bitcast i8* %32 to double*
  %34 = load double, double* %33, align 8
  %35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i64 0, i64 0), double %25, double %28, double %31, double %34)
  br label %52

36:                                               ; preds = %3
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %38 = icmp eq %struct._IO_FILE* %37, %0
  br i1 %38, label %39, label %52

39:                                               ; preds = %36
  %40 = bitcast i8* %2 to %struct._FcCharSet*
  tail call void @FcCharSetPrint(%struct._FcCharSet* %40)
  br label %52

41:                                               ; preds = %3
  %42 = bitcast i8* %2 to %struct._FcLangSet*
  tail call void @FcLangSetPrint(%struct._FcLangSet* %42)
  br label %52

43:                                               ; preds = %3
  %44 = tail call i64 @fwrite(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.105, i64 0, i64 0), i64 4, i64 1, %struct._IO_FILE* %0)
  br label %52

45:                                               ; preds = %3
  %46 = bitcast i8* %2 to double*
  %47 = load double, double* %46, align 8
  %48 = getelementptr inbounds i8, i8* %2, i64 8
  %49 = bitcast i8* %48 to double*
  %50 = load double, double* %49, align 8
  %51 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0), double %47, double %50)
  br label %52

52:                                               ; preds = %36, %39, %3, %45, %43, %41, %23, %17, %15, %12, %10, %8, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcValuePrint(i32, i8*) #0 {
  %3 = tail call i32 @putchar(i32 32)
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call fastcc void @_FcValuePrintFile(%struct._IO_FILE* %4, i32 %0, i8* %1)
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @FcValuePrintWithPosition(i32, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  br label %9

7:                                                ; preds = %3
  %8 = tail call i32 @putchar(i32 32)
  br label %9

9:                                                ; preds = %7, %5
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call fastcc void @_FcValuePrintFile(%struct._IO_FILE* %10, i32 %0, i8* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcValueListPrintWithPosition(%struct._FcValueList*, %struct._FcValueList* readnone) local_unnamed_addr #0 {
  %3 = icmp eq %struct._FcValueList* %0, null
  br i1 %3, label %38, label %4

4:                                                ; preds = %2, %24
  %5 = phi %struct._FcValueList* [ %36, %24 ], [ %0, %2 ]
  %6 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %5, i64 0, i32 1
  %7 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %6) #7
  %8 = extractvalue { i32, i8* } %7, 0
  %9 = extractvalue { i32, i8* } %7, 1
  %10 = icmp eq %struct._FcValueList* %5, %1
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %15

13:                                               ; preds = %4
  %14 = tail call i32 @putchar(i32 32) #7
  br label %15

15:                                               ; preds = %11, %13
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call fastcc void @_FcValuePrintFile(%struct._IO_FILE* %16, i32 %8, i8* %9) #7
  %17 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %5, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, 3
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.FcValueListPrint, i64 0, i64 %21
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi i8* [ %23, %20 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), %15 ]
  %26 = tail call i32 (i8*, ...) @printf(i8* %25) #7
  %27 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %5, i64 0, i32 0
  %28 = load %struct._FcValueList*, %struct._FcValueList** %27, align 8
  %29 = ptrtoint %struct._FcValueList* %28 to i64
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  %32 = ptrtoint %struct._FcValueList* %5 to i64
  %33 = and i64 %29, -2
  %34 = add nsw i64 %33, %32
  %35 = inttoptr i64 %34 to %struct._FcValueList*
  %36 = select i1 %31, %struct._FcValueList* %28, %struct._FcValueList* %35
  %37 = icmp eq %struct._FcValueList* %36, null
  br i1 %37, label %38, label %4

38:                                               ; preds = %24, %2
  %39 = icmp eq %struct._FcValueList* %1, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  br label %42

42:                                               ; preds = %38, %40
  ret void
}

declare hidden { i32, i8* } @FcValueCanonicalize(%struct._FcValue*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FcValueListPrint(%struct._FcValueList*) local_unnamed_addr #0 {
  %2 = icmp eq %struct._FcValueList* %0, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %1, %18
  %4 = phi %struct._FcValueList* [ %30, %18 ], [ %0, %1 ]
  %5 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %4, i64 0, i32 1
  %6 = tail call { i32, i8* } @FcValueCanonicalize(%struct._FcValue* %5) #7
  %7 = extractvalue { i32, i8* } %6, 0
  %8 = extractvalue { i32, i8* } %6, 1
  %9 = tail call i32 @putchar(i32 32) #7
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  tail call fastcc void @_FcValuePrintFile(%struct._IO_FILE* %10, i32 %7, i8* %8) #7
  %11 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %4, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, 3
  br i1 %13, label %14, label %18

14:                                               ; preds = %3
  %15 = sext i32 %12 to i64
  %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table.FcValueListPrint, i64 0, i64 %15
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %3, %14
  %19 = phi i8* [ %17, %14 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i64 0, i64 0), %3 ]
  %20 = tail call i32 (i8*, ...) @printf(i8* %19) #7
  %21 = getelementptr inbounds %struct._FcValueList, %struct._FcValueList* %4, i64 0, i32 0
  %22 = load %struct._FcValueList*, %struct._FcValueList** %21, align 8
  %23 = ptrtoint %struct._FcValueList* %22 to i64
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %struct._FcValueList* %4 to i64
  %27 = and i64 %23, -2
  %28 = add nsw i64 %27, %26
  %29 = inttoptr i64 %28 to %struct._FcValueList*
  %30 = select i1 %25, %struct._FcValueList* %22, %struct._FcValueList* %29
  %31 = icmp eq %struct._FcValueList* %30, null
  br i1 %31, label %32, label %3

32:                                               ; preds = %18, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcLangSetPrint(%struct._FcLangSet*) local_unnamed_addr #0 {
  %2 = alloca %struct._FcStrBuf, align 8
  %3 = alloca [1024 x i8], align 16
  %4 = bitcast %struct._FcStrBuf* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %4) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 152, i1 false)
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %5) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 1024, i1 false)
  call void @FcStrBufInit(%struct._FcStrBuf* nonnull %2, i8* nonnull %5, i32 1024) #7
  %6 = call i32 @FcNameUnparseLangSet(%struct._FcStrBuf* nonnull %2, %struct._FcLangSet* %0) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = call i32 @FcStrBufChar(%struct._FcStrBuf* nonnull %2, i8 zeroext 0) #7
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct._FcStrBuf, %struct._FcStrBuf* %2, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %13)
  br label %17

15:                                               ; preds = %8, %1
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0))
  br label %17

17:                                               ; preds = %15, %11
  call void @FcStrBufDestroy(%struct._FcStrBuf* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %4) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare hidden void @FcStrBufInit(%struct._FcStrBuf*, i8*, i32) local_unnamed_addr #2

declare hidden i32 @FcNameUnparseLangSet(%struct._FcStrBuf*, %struct._FcLangSet*) local_unnamed_addr #2

declare hidden i32 @FcStrBufChar(%struct._FcStrBuf*, i8 zeroext) local_unnamed_addr #2

declare hidden void @FcStrBufDestroy(%struct._FcStrBuf*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @FcCharSetPrint(%struct._FcCharSet*) local_unnamed_addr #4 {
  %2 = ptrtoint %struct._FcCharSet* %0 to i64
  %3 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, %2
  %6 = inttoptr i64 %5 to i64*
  %7 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %8, %2
  %10 = inttoptr i64 %9 to i16*
  %11 = tail call i32 @putchar(i32 10)
  %12 = getelementptr inbounds %struct._FcCharSet, %struct._FcCharSet* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %55

15:                                               ; preds = %1, %15
  %16 = phi i64 [ %51, %15 ], [ 0, %1 ]
  %17 = getelementptr inbounds i64, i64* %6, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, %5
  %20 = inttoptr i64 %19 to %struct._FcCharLeaf*
  %21 = tail call i32 @putchar(i32 9)
  %22 = getelementptr inbounds i16, i16* %10, i64 %16
  %23 = load i16, i16* %22, align 2
  %24 = zext i16 %23 to i32
  %25 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %24)
  %26 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %27)
  %29 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 1
  %30 = load i32, i32* %29, align 4
  %31 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %30)
  %32 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 2
  %33 = load i32, i32* %32, align 4
  %34 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %33)
  %35 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 3
  %36 = load i32, i32* %35, align 4
  %37 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %36)
  %38 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 4
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %39)
  %41 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 5
  %42 = load i32, i32* %41, align 4
  %43 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %42)
  %44 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 6
  %45 = load i32, i32* %44, align 4
  %46 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %45)
  %47 = getelementptr inbounds %struct._FcCharLeaf, %struct._FcCharLeaf* %20, i64 0, i32 0, i64 7
  %48 = load i32, i32* %47, align 4
  %49 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %48)
  %50 = tail call i32 @putchar(i32 10)
  %51 = add nuw nsw i64 %16, 1
  %52 = load i32, i32* %12, align 4
  %53 = sext i32 %52 to i64
  %54 = icmp slt i64 %51, %53
  br i1 %54, label %15, label %55

55:                                               ; preds = %15, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcPatternPrint(%struct._FcPattern*) #0 {
  %2 = alloca %struct._FcPatternIter, align 8
  %3 = bitcast %struct._FcPatternIter* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7
  %4 = icmp eq %struct._FcPattern* %0, null
  %5 = bitcast %struct._FcPatternIter* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  br i1 %4, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @str, i64 0, i64 0))
  br label %22

8:                                                ; preds = %1
  %9 = tail call i32 @IA__FcPatternObjectCount(%struct._FcPattern* nonnull %0) #7
  %10 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i32 %9, i32 %11)
  call void @IA__FcPatternIterStart(%struct._FcPattern* nonnull %0, %struct._FcPatternIter* nonnull %2) #7
  br label %13

13:                                               ; preds = %13, %8
  %14 = call i8* @IA__FcPatternIterGetObject(%struct._FcPattern* nonnull %0, %struct._FcPatternIter* nonnull %2) #7
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* %14)
  %16 = call %struct._FcValueList* @FcPatternIterGetValues(%struct._FcPattern* nonnull %0, %struct._FcPatternIter* nonnull %2) #7
  call void @FcValueListPrint(%struct._FcValueList* %16)
  %17 = call i32 @putchar(i32 10)
  %18 = call i32 @IA__FcPatternIterNext(%struct._FcPattern* nonnull %0, %struct._FcPatternIter* nonnull %2) #7
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %13

20:                                               ; preds = %13
  %21 = call i32 @putchar(i32 10)
  br label %22

22:                                               ; preds = %20, %6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7
  ret void
}

declare hidden i32 @IA__FcPatternObjectCount(%struct._FcPattern*) local_unnamed_addr #2

declare hidden void @IA__FcPatternIterStart(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

declare hidden i8* @IA__FcPatternIterGetObject(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

declare hidden %struct._FcValueList* @FcPatternIterGetValues(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

declare hidden i32 @IA__FcPatternIterNext(%struct._FcPattern*, %struct._FcPatternIter*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @FcPatternPrint2(%struct._FcPattern*, %struct._FcPattern*, %struct._FcObjectSet*) local_unnamed_addr #0 {
  %4 = icmp eq %struct._FcObjectSet* %2, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = tail call %struct._FcPattern* @IA__FcPatternFilter(%struct._FcPattern* %0, %struct._FcObjectSet* nonnull %2) #7
  %7 = tail call %struct._FcPattern* @IA__FcPatternFilter(%struct._FcPattern* %1, %struct._FcObjectSet* nonnull %2) #7
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi %struct._FcPattern* [ %6, %5 ], [ %0, %3 ]
  %10 = phi %struct._FcPattern* [ %7, %5 ], [ %1, %3 ]
  %11 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %9, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %9, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %10, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %10, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12, i64 0, i64 0), i32 %12, i32 %14, i32 %16, i32 %18)
  %20 = load i32, i32* %11, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %134

22:                                               ; preds = %8
  %23 = ptrtoint %struct._FcPattern* %9 to i64
  %24 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %9, i64 0, i32 2
  %25 = ptrtoint %struct._FcPattern* %10 to i64
  %26 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %10, i64 0, i32 2
  br label %27

27:                                               ; preds = %22, %128
  %28 = phi i64 [ 0, %22 ], [ %130, %128 ]
  %29 = phi i32 [ 0, %22 ], [ %129, %128 ]
  %30 = load i64, i64* %24, align 8
  %31 = add nsw i64 %30, %23
  %32 = inttoptr i64 %31 to %struct._FcPatternElt*
  %33 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %32, i64 %28
  %34 = load i64, i64* %26, align 8
  %35 = add nsw i64 %34, %25
  %36 = inttoptr i64 %35 to %struct._FcPatternElt*
  %37 = sext i32 %29 to i64
  %38 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %36, i64 %37
  %39 = icmp eq %struct._FcPatternElt* %38, null
  %40 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  br i1 %39, label %46, label %42

42:                                               ; preds = %27
  %43 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %38, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %41, %44
  br i1 %45, label %92, label %46

46:                                               ; preds = %27, %42
  %47 = tail call i8* @FcObjectName(i32 %41) #7
  %48 = tail call i32 @FcPatternPosition(%struct._FcPattern* %10, i8* %47) #7
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %50, label %76

50:                                               ; preds = %46
  %51 = icmp slt i32 %29, %48
  br i1 %51, label %52, label %92

52:                                               ; preds = %50, %52
  %53 = phi i64 [ %73, %52 ], [ %37, %50 ]
  %54 = load i64, i64* %26, align 8
  %55 = add nsw i64 %54, %25
  %56 = inttoptr i64 %55 to %struct._FcPatternElt*
  %57 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %56, i64 %53
  %58 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = tail call i8* @FcObjectName(i32 %59) #7
  %61 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* %60)
  %62 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %56, i64 %53, i32 1
  %63 = load %struct._FcValueList*, %struct._FcValueList** %62, align 8
  %64 = ptrtoint %struct._FcValueList* %63 to i64
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = ptrtoint %struct._FcPatternElt* %57 to i64
  %68 = and i64 %64, -2
  %69 = add nsw i64 %68, %67
  %70 = inttoptr i64 %69 to %struct._FcValueList*
  %71 = select i1 %66, %struct._FcValueList* %63, %struct._FcValueList* %70
  tail call void @FcValueListPrint(%struct._FcValueList* %71)
  %72 = tail call i32 @putchar(i32 10)
  %73 = add nsw i64 %53, 1
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i32 %48, %74
  br i1 %75, label %92, label %52

76:                                               ; preds = %46
  %77 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %33, i64 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = tail call i8* @FcObjectName(i32 %78) #7
  %80 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* %79)
  %81 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %32, i64 %28, i32 1
  %82 = load %struct._FcValueList*, %struct._FcValueList** %81, align 8
  %83 = ptrtoint %struct._FcValueList* %82 to i64
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  %86 = ptrtoint %struct._FcPatternElt* %33 to i64
  %87 = and i64 %83, -2
  %88 = add nsw i64 %87, %86
  %89 = inttoptr i64 %88 to %struct._FcValueList*
  %90 = select i1 %85, %struct._FcValueList* %82, %struct._FcValueList* %89
  tail call void @FcValueListPrint(%struct._FcValueList* %90)
  %91 = tail call i32 @puts(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @str.111, i64 0, i64 0))
  br label %128

92:                                               ; preds = %52, %50, %42
  %93 = phi i32 [ %29, %42 ], [ %48, %50 ], [ %48, %52 ]
  %94 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %33, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  %96 = tail call i8* @FcObjectName(i32 %95) #7
  %97 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* %96)
  %98 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %32, i64 %28, i32 1
  %99 = load %struct._FcValueList*, %struct._FcValueList** %98, align 8
  %100 = ptrtoint %struct._FcValueList* %99 to i64
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  %103 = ptrtoint %struct._FcPatternElt* %33 to i64
  %104 = and i64 %100, -2
  %105 = add nsw i64 %104, %103
  %106 = inttoptr i64 %105 to %struct._FcValueList*
  %107 = select i1 %102, %struct._FcValueList* %99, %struct._FcValueList* %106
  tail call void @FcValueListPrint(%struct._FcValueList* %107)
  %108 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0))
  %109 = load i64, i64* %26, align 8
  %110 = add nsw i64 %109, %25
  %111 = inttoptr i64 %110 to %struct._FcPatternElt*
  %112 = sext i32 %93 to i64
  %113 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %111, i64 %112, i32 1
  %114 = load %struct._FcValueList*, %struct._FcValueList** %113, align 8
  %115 = ptrtoint %struct._FcValueList* %114 to i64
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %92
  %119 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %111, i64 %112
  %120 = ptrtoint %struct._FcPatternElt* %119 to i64
  %121 = and i64 %115, -2
  %122 = add nsw i64 %121, %120
  %123 = inttoptr i64 %122 to %struct._FcValueList*
  br label %124

124:                                              ; preds = %92, %118
  %125 = phi %struct._FcValueList* [ %123, %118 ], [ %114, %92 ]
  tail call void @FcValueListPrint(%struct._FcValueList* %125)
  %126 = tail call i32 @putchar(i32 10)
  %127 = add nsw i32 %93, 1
  br label %128

128:                                              ; preds = %76, %124
  %129 = phi i32 [ %127, %124 ], [ %29, %76 ]
  %130 = add nuw nsw i64 %28, 1
  %131 = load i32, i32* %11, align 8
  %132 = sext i32 %131 to i64
  %133 = icmp slt i64 %130, %132
  br i1 %133, label %27, label %134

134:                                              ; preds = %128, %8
  %135 = phi i32 [ 0, %8 ], [ %129, %128 ]
  %136 = load i32, i32* %15, align 8
  %137 = icmp slt i32 %135, %136
  br i1 %137, label %138, label %172

138:                                              ; preds = %134
  %139 = ptrtoint %struct._FcPattern* %10 to i64
  %140 = getelementptr inbounds %struct._FcPattern, %struct._FcPattern* %10, i64 0, i32 2
  %141 = sext i32 %135 to i64
  br label %142

142:                                              ; preds = %138, %167
  %143 = phi i64 [ %141, %138 ], [ %168, %167 ]
  %144 = load i64, i64* %140, align 8
  %145 = add nsw i64 %144, %139
  %146 = inttoptr i64 %145 to %struct._FcPatternElt*
  %147 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %146, i64 %143
  %148 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %147, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = tail call i8* @FcObjectName(i32 %149) #7
  %151 = icmp eq i8* %150, null
  br i1 %151, label %167, label %152

152:                                              ; preds = %142
  %153 = load i32, i32* %148, align 8
  %154 = tail call i8* @FcObjectName(i32 %153) #7
  %155 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* %154)
  %156 = getelementptr inbounds %struct._FcPatternElt, %struct._FcPatternElt* %146, i64 %143, i32 1
  %157 = load %struct._FcValueList*, %struct._FcValueList** %156, align 8
  %158 = ptrtoint %struct._FcValueList* %157 to i64
  %159 = and i64 %158, 1
  %160 = icmp eq i64 %159, 0
  %161 = ptrtoint %struct._FcPatternElt* %147 to i64
  %162 = and i64 %158, -2
  %163 = add nsw i64 %162, %161
  %164 = inttoptr i64 %163 to %struct._FcValueList*
  %165 = select i1 %160, %struct._FcValueList* %157, %struct._FcValueList* %164
  tail call void @FcValueListPrint(%struct._FcValueList* %165)
  %166 = tail call i32 @putchar(i32 10)
  br label %167

167:                                              ; preds = %142, %152
  %168 = add nsw i64 %143, 1
  %169 = load i32, i32* %15, align 8
  %170 = sext i32 %169 to i64
  %171 = icmp slt i64 %168, %170
  br i1 %171, label %142, label %172

172:                                              ; preds = %167, %134
  %173 = icmp eq %struct._FcPattern* %9, %0
  br i1 %173, label %175, label %174

174:                                              ; preds = %172
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %9) #7
  br label %175

175:                                              ; preds = %172, %174
  %176 = icmp eq %struct._FcPattern* %10, %1
  br i1 %176, label %178, label %177

177:                                              ; preds = %175
  tail call void @IA__FcPatternDestroy(%struct._FcPattern* %10) #7
  br label %178

178:                                              ; preds = %175, %177
  ret void
}

declare hidden %struct._FcPattern* @IA__FcPatternFilter(%struct._FcPattern*, %struct._FcObjectSet*) local_unnamed_addr #2

declare hidden i32 @FcPatternPosition(%struct._FcPattern*, i8*) local_unnamed_addr #2

declare hidden i8* @FcObjectName(i32) local_unnamed_addr #2

declare hidden void @IA__FcPatternDestroy(%struct._FcPattern*) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @FcOpPrint(i32) local_unnamed_addr #4 {
  %2 = trunc i32 %0 to i16
  switch i16 %2, label %99 [
    i16 0, label %3
    i16 1, label %5
    i16 2, label %7
    i16 3, label %9
    i16 4, label %11
    i16 5, label %13
    i16 6, label %15
    i16 7, label %17
    i16 9, label %19
    i16 10, label %21
    i16 11, label %23
    i16 12, label %25
    i16 14, label %27
    i16 13, label %29
    i16 15, label %31
    i16 16, label %33
    i16 17, label %35
    i16 18, label %37
    i16 19, label %39
    i16 20, label %41
    i16 21, label %43
    i16 22, label %45
    i16 23, label %51
    i16 27, label %57
    i16 28, label %59
    i16 29, label %61
    i16 30, label %63
    i16 24, label %65
    i16 26, label %67
    i16 31, label %69
    i16 32, label %71
    i16 33, label %73
    i16 34, label %75
    i16 35, label %77
    i16 8, label %79
    i16 36, label %81
    i16 37, label %83
    i16 38, label %85
    i16 39, label %87
    i16 40, label %89
    i16 25, label %91
    i16 41, label %97
  ]

3:                                                ; preds = %1
  %4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0))
  br label %99

5:                                                ; preds = %1
  %6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0))
  br label %99

7:                                                ; preds = %1
  %8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  br label %99

9:                                                ; preds = %1
  %10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0))
  br label %99

11:                                               ; preds = %1
  %12 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0))
  br label %99

13:                                               ; preds = %1
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0))
  br label %99

15:                                               ; preds = %1
  %16 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0))
  br label %99

17:                                               ; preds = %1
  %18 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  br label %99

19:                                               ; preds = %1
  %20 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0))
  br label %99

21:                                               ; preds = %1
  %22 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0))
  br label %99

23:                                               ; preds = %1
  %24 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0))
  br label %99

25:                                               ; preds = %1
  %26 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0))
  br label %99

27:                                               ; preds = %1
  %28 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0))
  br label %99

29:                                               ; preds = %1
  %30 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0))
  br label %99

31:                                               ; preds = %1
  %32 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0))
  br label %99

33:                                               ; preds = %1
  %34 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0))
  br label %99

35:                                               ; preds = %1
  %36 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0))
  br label %99

37:                                               ; preds = %1
  %38 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0))
  br label %99

39:                                               ; preds = %1
  %40 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0))
  br label %99

41:                                               ; preds = %1
  %42 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0))
  br label %99

43:                                               ; preds = %1
  %44 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  br label %99

45:                                               ; preds = %1
  %46 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %47 = and i32 %0, 65536
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %99, label %49

49:                                               ; preds = %45
  %50 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %99

51:                                               ; preds = %1
  %52 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0))
  %53 = and i32 %0, 65536
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %99, label %55

55:                                               ; preds = %51
  %56 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %99

57:                                               ; preds = %1
  %58 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0))
  br label %99

59:                                               ; preds = %1
  %60 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0))
  br label %99

61:                                               ; preds = %1
  %62 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0))
  br label %99

63:                                               ; preds = %1
  %64 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0))
  br label %99

65:                                               ; preds = %1
  %66 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0))
  br label %99

67:                                               ; preds = %1
  %68 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0))
  br label %99

69:                                               ; preds = %1
  %70 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0))
  br label %99

71:                                               ; preds = %1
  %72 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  br label %99

73:                                               ; preds = %1
  %74 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  br label %99

75:                                               ; preds = %1
  %76 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0))
  br label %99

77:                                               ; preds = %1
  %78 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0))
  br label %99

79:                                               ; preds = %1
  %80 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.51, i64 0, i64 0))
  br label %99

81:                                               ; preds = %1
  %82 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  br label %99

83:                                               ; preds = %1
  %84 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  br label %99

85:                                               ; preds = %1
  %86 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0))
  br label %99

87:                                               ; preds = %1
  %88 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0))
  br label %99

89:                                               ; preds = %1
  %90 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i64 0, i64 0))
  br label %99

91:                                               ; preds = %1
  %92 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0))
  %93 = and i32 %0, 65536
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %99

97:                                               ; preds = %1
  %98 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0))
  br label %99

99:                                               ; preds = %95, %91, %55, %51, %49, %45, %1, %97, %89, %87, %85, %83, %81, %79, %77, %75, %73, %71, %69, %67, %65, %63, %61, %59, %57, %43, %41, %39, %37, %35, %33, %31, %29, %27, %25, %23, %21, %19, %17, %15, %13, %11, %9, %7, %5, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcExprPrint(%struct._FcExpr* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._FcExpr* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %183, %1
  %4 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0))
  br label %189

5:                                                ; preds = %1, %183
  %6 = phi %struct._FcExpr* [ %185, %183 ], [ %0, %1 ]
  %7 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i16
  switch i16 %9, label %189 [
    i16 0, label %10
    i16 1, label %15
    i16 2, label %20
    i16 3, label %25
    i16 4, label %45
    i16 5, label %54
    i16 6, label %61
    i16 7, label %63
    i16 8, label %69
    i16 9, label %71
    i16 10, label %84
    i16 19, label %89
    i16 11, label %100
    i16 12, label %100
    i16 13, label %100
    i16 14, label %100
    i16 15, label %100
    i16 16, label %100
    i16 20, label %100
    i16 21, label %100
    i16 22, label %100
    i16 23, label %100
    i16 27, label %100
    i16 28, label %100
    i16 29, label %100
    i16 30, label %100
    i16 24, label %100
    i16 25, label %100
    i16 26, label %100
    i16 31, label %100
    i16 32, label %100
    i16 33, label %100
    i16 34, label %100
    i16 36, label %100
    i16 35, label %168
    i16 37, label %171
    i16 38, label %174
    i16 39, label %177
    i16 40, label %180
    i16 41, label %187
  ]

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %12 = bitcast %union.anon.0* %11 to i32*
  %13 = load i32, i32* %12, align 8
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.60, i64 0, i64 0), i32 %13)
  br label %189

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %17 = bitcast %union.anon.0* %16 to double*
  %18 = load double, double* %17, align 8
  %19 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), double %18)
  br label %189

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %22 = bitcast %union.anon.0* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i8* %23)
  br label %189

25:                                               ; preds = %5
  %26 = tail call i32 @putchar(i32 91)
  %27 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %28 = bitcast %union.anon.0* %27 to %struct._FcExprMatrix**
  %29 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %28, align 8
  %30 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %29, i64 0, i32 0
  %31 = load %struct._FcExpr*, %struct._FcExpr** %30, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %31)
  %32 = tail call i32 @putchar(i32 32)
  %33 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %28, align 8
  %34 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %33, i64 0, i32 1
  %35 = load %struct._FcExpr*, %struct._FcExpr** %34, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %35)
  %36 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0))
  %37 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %28, align 8
  %38 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %37, i64 0, i32 2
  %39 = load %struct._FcExpr*, %struct._FcExpr** %38, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %39)
  %40 = tail call i32 @putchar(i32 32)
  %41 = load %struct._FcExprMatrix*, %struct._FcExprMatrix** %28, align 8
  %42 = getelementptr inbounds %struct._FcExprMatrix, %struct._FcExprMatrix* %41, i64 0, i32 3
  %43 = load %struct._FcExpr*, %struct._FcExpr** %42, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %43)
  %44 = tail call i32 @putchar(i32 93)
  ret void

45:                                               ; preds = %5
  %46 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %47 = bitcast %union.anon.0* %46 to %struct._FcRange**
  %48 = load %struct._FcRange*, %struct._FcRange** %47, align 8
  %49 = getelementptr inbounds %struct._FcRange, %struct._FcRange* %48, i64 0, i32 0
  %50 = load double, double* %49, align 8
  %51 = getelementptr inbounds %struct._FcRange, %struct._FcRange* %48, i64 0, i32 1
  %52 = load double, double* %51, align 8
  %53 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), double %50, double %52)
  br label %189

54:                                               ; preds = %5
  %55 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %56 = bitcast %union.anon.0* %55 to i32*
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 0
  %59 = select i1 %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0)
  %60 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %59)
  br label %189

61:                                               ; preds = %5
  %62 = tail call i32 @puts(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @str.113, i64 0, i64 0))
  br label %189

63:                                               ; preds = %5
  %64 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0))
  %65 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %66 = bitcast %union.anon.0* %65 to %struct._FcLangSet**
  %67 = load %struct._FcLangSet*, %struct._FcLangSet** %66, align 8
  tail call void @FcLangSetPrint(%struct._FcLangSet* %67)
  %68 = tail call i32 @putchar(i32 10)
  br label %189

69:                                               ; preds = %5
  %70 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.112, i64 0, i64 0))
  br label %189

71:                                               ; preds = %5
  %72 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %73 = bitcast %union.anon.0* %72 to %struct._FcExprName*
  %74 = bitcast %union.anon.0* %72 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = tail call i8* @FcObjectName(i32 %75) #7
  %77 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %76)
  %78 = getelementptr inbounds %struct._FcExprName, %struct._FcExprName* %73, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %189 [
    i32 0, label %80
    i32 1, label %82
  ]

80:                                               ; preds = %71
  %81 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0))
  br label %189

82:                                               ; preds = %71
  %83 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.74, i64 0, i64 0))
  br label %189

84:                                               ; preds = %5
  %85 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1
  %86 = bitcast %union.anon.0* %85 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %87)
  br label %189

89:                                               ; preds = %5
  %90 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  %91 = load %struct._FcExpr*, %struct._FcExpr** %90, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %91)
  %92 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.75, i64 0, i64 0))
  %93 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 1
  %94 = load %struct._FcExpr*, %struct._FcExpr** %93, align 8
  %95 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %94, i64 0, i32 1, i32 0, i32 0
  %96 = load %struct._FcExpr*, %struct._FcExpr** %95, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %96)
  %97 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.76, i64 0, i64 0))
  %98 = load %struct._FcExpr*, %struct._FcExpr** %93, align 8
  %99 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %98, i64 0, i32 1, i32 0, i32 1
  br label %183

100:                                              ; preds = %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5, %5
  %101 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  %102 = load %struct._FcExpr*, %struct._FcExpr** %101, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %102)
  %103 = tail call i32 @putchar(i32 32)
  %104 = load i32, i32* %7, align 8
  %105 = trunc i32 %104 to i16
  switch i16 %105, label %165 [
    i16 11, label %106
    i16 12, label %108
    i16 13, label %110
    i16 14, label %112
    i16 15, label %114
    i16 16, label %116
    i16 20, label %118
    i16 21, label %120
    i16 22, label %122
    i16 23, label %129
    i16 27, label %136
    i16 28, label %138
    i16 29, label %140
    i16 30, label %142
    i16 24, label %144
    i16 25, label %146
    i16 26, label %153
    i16 31, label %155
    i16 32, label %157
    i16 33, label %159
    i16 34, label %161
    i16 36, label %163
  ]

106:                                              ; preds = %100
  %107 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0))
  br label %165

108:                                              ; preds = %100
  %109 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0))
  br label %165

110:                                              ; preds = %100
  %111 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0))
  br label %165

112:                                              ; preds = %100
  %113 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0))
  br label %165

114:                                              ; preds = %100
  %115 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0))
  br label %165

116:                                              ; preds = %100
  %117 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0))
  br label %165

118:                                              ; preds = %100
  %119 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0))
  br label %165

120:                                              ; preds = %100
  %121 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  br label %165

122:                                              ; preds = %100
  %123 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0))
  %124 = load i32, i32* %7, align 8
  %125 = and i32 %124, 65536
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %165, label %127

127:                                              ; preds = %122
  %128 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %165

129:                                              ; preds = %100
  %130 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0))
  %131 = load i32, i32* %7, align 8
  %132 = and i32 %131, 65536
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %165, label %134

134:                                              ; preds = %129
  %135 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %165

136:                                              ; preds = %100
  %137 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0))
  br label %165

138:                                              ; preds = %100
  %139 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0))
  br label %165

140:                                              ; preds = %100
  %141 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0))
  br label %165

142:                                              ; preds = %100
  %143 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0))
  br label %165

144:                                              ; preds = %100
  %145 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0))
  br label %165

146:                                              ; preds = %100
  %147 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0))
  %148 = load i32, i32* %7, align 8
  %149 = and i32 %148, 65536
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %165, label %151

151:                                              ; preds = %146
  %152 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0))
  br label %165

153:                                              ; preds = %100
  %154 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0))
  br label %165

155:                                              ; preds = %100
  %156 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0))
  br label %165

157:                                              ; preds = %100
  %158 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0))
  br label %165

159:                                              ; preds = %100
  %160 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  br label %165

161:                                              ; preds = %100
  %162 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0))
  br label %165

163:                                              ; preds = %100
  %164 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0))
  br label %165

165:                                              ; preds = %151, %146, %134, %129, %127, %122, %100, %163, %161, %159, %157, %155, %153, %144, %142, %140, %138, %136, %120, %118, %116, %114, %112, %110, %108, %106
  %166 = tail call i32 @putchar(i32 32)
  %167 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 1
  br label %183

168:                                              ; preds = %5
  %169 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.77, i64 0, i64 0))
  %170 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  br label %183

171:                                              ; preds = %5
  %172 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i64 0, i64 0))
  %173 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  br label %183

174:                                              ; preds = %5
  %175 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %176 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  br label %183

177:                                              ; preds = %5
  %178 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0))
  %179 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  br label %183

180:                                              ; preds = %5
  %181 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i64 0, i64 0))
  %182 = getelementptr inbounds %struct._FcExpr, %struct._FcExpr* %6, i64 0, i32 1, i32 0, i32 0
  br label %183

183:                                              ; preds = %180, %177, %174, %171, %168, %165, %89
  %184 = phi %struct._FcExpr** [ %182, %180 ], [ %179, %177 ], [ %176, %174 ], [ %173, %171 ], [ %170, %168 ], [ %167, %165 ], [ %99, %89 ]
  %185 = load %struct._FcExpr*, %struct._FcExpr** %184, align 8
  %186 = icmp eq %struct._FcExpr* %185, null
  br i1 %186, label %3, label %5

187:                                              ; preds = %5
  %188 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i64 0, i64 0))
  br label %189

189:                                              ; preds = %5, %10, %15, %20, %45, %54, %61, %63, %69, %84, %187, %71, %82, %80, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcTestPrint(%struct._FcTest* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %9 [
    i32 0, label %6
    i32 1, label %4
    i32 2, label %5
    i32 3, label %29
  ]

4:                                                ; preds = %1
  br label %6

5:                                                ; preds = %1
  br label %6

6:                                                ; preds = %1, %4, %5
  %7 = phi i8* [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.84, i64 0, i64 0), %5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i64 0, i64 0), %4 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i64 0, i64 0), %1 ]
  %8 = tail call i32 (i8*, ...) @printf(i8* %7)
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, 4
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table.FcTestPrint, i64 0, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = tail call i32 (i8*, ...) @printf(i8* %16)
  br label %18

18:                                               ; preds = %9, %13
  %19 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = tail call i8* @FcObjectName(i32 %20) #7
  %22 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i64 0, i64 0), i8* %21)
  %23 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  tail call void @FcOpPrint(i32 %24)
  %25 = tail call i32 @putchar(i32 32)
  %26 = getelementptr inbounds %struct._FcTest, %struct._FcTest* %0, i64 0, i32 4
  %27 = load %struct._FcExpr*, %struct._FcExpr** %26, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %27)
  %28 = tail call i32 @putchar(i32 10)
  br label %29

29:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcEditPrint(%struct._FcEdit* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = tail call i8* @FcObjectName(i32 %3) #7
  %5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0), i8* %4)
  %6 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  tail call void @FcOpPrint(i32 %7)
  %8 = tail call i32 @putchar(i32 32)
  %9 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %0, i64 0, i32 2
  %10 = load %struct._FcExpr*, %struct._FcExpr** %9, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FcRulePrint(%struct._FcRule* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._FcRule* %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1, %37
  %4 = phi %struct._FcRule* [ %39, %37 ], [ %0, %1 ]
  %5 = phi i32 [ %17, %37 ], [ 0, %1 ]
  %6 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %4, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  switch i32 %7, label %14 [
    i32 1, label %11
    i32 2, label %10
  ]

10:                                               ; preds = %9
  br label %11

11:                                               ; preds = %9, %10
  %12 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @str.115, i64 0, i64 0), %10 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @str.116, i64 0, i64 0), %9 ]
  %13 = tail call i32 @puts(i8* %12)
  br label %14

14:                                               ; preds = %11, %9
  %15 = load i32, i32* %6, align 8
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i32 [ %15, %14 ], [ %5, %3 ]
  %18 = tail call i32 @putchar(i32 9)
  %19 = load i32, i32* %6, align 8
  switch i32 %19, label %37 [
    i32 1, label %20
    i32 2, label %23
  ]

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %4, i64 0, i32 2, i32 0
  %22 = load %struct._FcTest*, %struct._FcTest** %21, align 8
  tail call void @FcTestPrint(%struct._FcTest* %22)
  br label %37

23:                                               ; preds = %16
  %24 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %4, i64 0, i32 2
  %25 = bitcast %union.anon.1* %24 to %struct._FcEdit**
  %26 = load %struct._FcEdit*, %struct._FcEdit** %25, align 8
  %27 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = tail call i8* @FcObjectName(i32 %28) #7
  %30 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0), i8* %29) #7
  %31 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %26, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  tail call void @FcOpPrint(i32 %32) #7
  %33 = tail call i32 @putchar(i32 32) #7
  %34 = getelementptr inbounds %struct._FcEdit, %struct._FcEdit* %26, i64 0, i32 2
  %35 = load %struct._FcExpr*, %struct._FcExpr** %34, align 8
  tail call void @FcExprPrint(%struct._FcExpr* %35) #7
  %36 = tail call i32 @puts(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @str.114, i64 0, i64 0))
  br label %37

37:                                               ; preds = %20, %23, %16
  %38 = getelementptr inbounds %struct._FcRule, %struct._FcRule* %4, i64 0, i32 0
  %39 = load %struct._FcRule*, %struct._FcRule** %38, align 8
  %40 = icmp eq %struct._FcRule* %39, null
  br i1 %40, label %41, label %3

41:                                               ; preds = %37, %1
  %42 = tail call i32 @putchar(i32 10)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @IA__FcFontSetPrint(%struct._FcFontSet* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0), i32 %3, i32 %5)
  %7 = load i32, i32* %2, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct._FcFontSet, %struct._FcFontSet* %0, i64 0, i32 2
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi i64 [ 0, %9 ], [ %18, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.94, i64 0, i64 0), i32 %13)
  %15 = load %struct._FcPattern**, %struct._FcPattern*** %10, align 8
  %16 = getelementptr inbounds %struct._FcPattern*, %struct._FcPattern** %15, i64 %12
  %17 = load %struct._FcPattern*, %struct._FcPattern** %16, align 8
  tail call void @IA__FcPatternPrint(%struct._FcPattern* %17)
  %18 = add nuw nsw i64 %12, 1
  %19 = load i32, i32* %2, align 8
  %20 = sext i32 %19 to i64
  %21 = icmp slt i64 %18, %20
  br i1 %21, label %11, label %22

22:                                               ; preds = %11, %1
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @FcInitDebug() local_unnamed_addr #4 {
  %1 = load i32, i32* @FcDebugVal, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %3, label %12

3:                                                ; preds = %0
  %4 = tail call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i64 0, i64 0)) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %3
  %7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i64 0, i64 0), i8* nonnull %4)
  %8 = tail call i64 @strtol(i8* nocapture nonnull %4, i8** null, i32 10) #7
  %9 = trunc i64 %8 to i32
  %10 = icmp sgt i32 %9, 0
  %11 = select i1 %10, i32 %9, i32 0
  store i32 %11, i32* @FcDebugVal, align 4
  br label %12

12:                                               ; preds = %6, %3, %0
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @putchar(i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
