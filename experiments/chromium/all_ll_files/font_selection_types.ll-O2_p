; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_selection_types.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_selection_types.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%"struct.blink::FontSelectionRequestKey" = type <{ %"struct.blink::FontSelectionRequest", i8, i8 }>
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"weight=%s, width=%s, slope=%s\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = sext i16 %3 to i32
  %5 = lshr i32 %4, 16
  %6 = and i32 %4, 65535
  %7 = add nuw nsw i32 %6, -1640531527
  %8 = shl i32 %7, 16
  %9 = shl nuw nsw i32 %5, 11
  %10 = xor i32 %7, %9
  %11 = xor i32 %10, %8
  %12 = lshr i32 %11, 11
  %13 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 1, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = lshr i32 %15, 16
  %17 = and i32 %15, 65535
  %18 = add i32 %11, %17
  %19 = add i32 %18, %12
  %20 = shl i32 %19, 16
  %21 = shl nuw nsw i32 %16, 11
  %22 = xor i32 %19, %21
  %23 = xor i32 %22, %20
  %24 = lshr i32 %23, 11
  %25 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 2, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = lshr i32 %27, 16
  %29 = and i32 %27, 65535
  %30 = add i32 %23, %29
  %31 = add i32 %30, %24
  %32 = shl i32 %31, 16
  %33 = shl nuw nsw i32 %28, 11
  %34 = xor i32 %31, %33
  %35 = xor i32 %34, %32
  %36 = lshr i32 %35, 11
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 3
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 5
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 15
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 %47
  ret i32 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink27FontSelectionRequestKeyHash7GetHashERKNS_23FontSelectionRequestKeyE(%"struct.blink::FontSelectionRequestKey"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = sext i16 %3 to i32
  %5 = lshr i32 %4, 16
  %6 = and i32 %4, 65535
  %7 = add nuw nsw i32 %6, -1640531527
  %8 = shl i32 %7, 16
  %9 = shl nuw nsw i32 %5, 11
  %10 = xor i32 %7, %9
  %11 = xor i32 %10, %8
  %12 = lshr i32 %11, 11
  %13 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %0, i64 0, i32 0, i32 1, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = lshr i32 %15, 16
  %17 = and i32 %15, 65535
  %18 = add i32 %11, %17
  %19 = add i32 %18, %12
  %20 = shl i32 %19, 16
  %21 = shl nuw nsw i32 %16, 11
  %22 = xor i32 %19, %21
  %23 = xor i32 %22, %20
  %24 = lshr i32 %23, 11
  %25 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %0, i64 0, i32 0, i32 2, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = sext i16 %26 to i32
  %28 = lshr i32 %27, 16
  %29 = and i32 %27, 65535
  %30 = add i32 %23, %29
  %31 = add i32 %30, %24
  %32 = shl i32 %31, 16
  %33 = shl nuw nsw i32 %28, 11
  %34 = xor i32 %31, %33
  %35 = xor i32 %34, %32
  %36 = lshr i32 %35, 11
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 3
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 5
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 15
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = icmp eq i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 %47
  %50 = lshr i32 %49, 16
  %51 = and i32 %49, 65535
  %52 = add nuw nsw i32 %51, -1640531527
  %53 = shl i32 %52, 16
  %54 = shl nuw nsw i32 %50, 11
  %55 = xor i32 %52, %54
  %56 = xor i32 %55, %53
  %57 = lshr i32 %56, 11
  %58 = getelementptr inbounds %"struct.blink::FontSelectionRequestKey", %"struct.blink::FontSelectionRequestKey"* %0, i64 0, i32 1
  %59 = load i8, i8* %58, align 2, !range !2
  %60 = zext i8 %59 to i32
  %61 = add i32 %56, %60
  %62 = add i32 %61, %57
  %63 = shl i32 %62, 16
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 11
  %66 = add i32 %65, %64
  %67 = shl i32 %66, 3
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 5
  %70 = add i32 %69, %68
  %71 = shl i32 %70, 2
  %72 = xor i32 %71, %70
  %73 = lshr i32 %72, 15
  %74 = add i32 %73, %72
  %75 = shl i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = icmp eq i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 %76
  ret i32 %78
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink29FontSelectionCapabilitiesHash7GetHashERKNS_25FontSelectionCapabilitiesE(%"struct.blink::FontSelectionCapabilities"* nocapture readonly dereferenceable(14)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = zext i16 %3 to i32
  %5 = shl nuw i32 %4, 16
  %6 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 0, i32 1, i32 0
  %7 = load i16, i16* %6, align 2
  %8 = sext i16 %7 to i32
  %9 = or i32 %5, %8
  %10 = lshr i32 %9, 16
  %11 = and i32 %8, 65535
  %12 = add nuw nsw i32 %11, -1640531527
  %13 = shl i32 %12, 16
  %14 = shl nuw nsw i32 %10, 11
  %15 = xor i32 %14, %12
  %16 = xor i32 %15, %13
  %17 = lshr i32 %16, 11
  %18 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  %21 = shl nuw i32 %20, 16
  %22 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 1, i32 1, i32 0
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = or i32 %21, %24
  %26 = lshr i32 %25, 16
  %27 = and i32 %24, 65535
  %28 = add i32 %16, %27
  %29 = add i32 %28, %17
  %30 = shl i32 %29, 16
  %31 = shl nuw nsw i32 %26, 11
  %32 = xor i32 %29, %31
  %33 = xor i32 %32, %30
  %34 = lshr i32 %33, 11
  %35 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 0, i32 0
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = shl nuw i32 %37, 16
  %39 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 2, i32 1, i32 0
  %40 = load i16, i16* %39, align 2
  %41 = sext i16 %40 to i32
  %42 = or i32 %38, %41
  %43 = lshr i32 %42, 16
  %44 = and i32 %41, 65535
  %45 = add i32 %33, %44
  %46 = add i32 %45, %34
  %47 = shl i32 %46, 16
  %48 = shl nuw nsw i32 %43, 11
  %49 = xor i32 %46, %48
  %50 = xor i32 %49, %47
  %51 = lshr i32 %50, 11
  %52 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %0, i64 0, i32 3
  %53 = load i8, i8* %52, align 2, !range !2
  %54 = zext i8 %53 to i32
  %55 = add i32 %50, %54
  %56 = add i32 %55, %51
  %57 = shl i32 %56, 16
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 11
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 3
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 5
  %64 = add i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 15
  %68 = add i32 %67, %66
  %69 = shl i32 %68, 10
  %70 = xor i32 %69, %68
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 %70
  ret i32 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18FontSelectionValue8ToStringEv(%"class.blink::FontSelectionValue"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 2
  %4 = sitofp i16 %3 to float
  %5 = fmul float %4, 2.500000e-01
  %6 = fpext float %5 to double
  %7 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %6) #5
  ret %"class.WTF::StringImpl"* %7
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink20FontSelectionRequest8ToStringEv(%"struct.blink::FontSelectionRequest"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #5
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = sitofp i16 %11 to float
  %13 = fmul float %12, 2.500000e-01
  %14 = fpext float %13 to double
  %15 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %14) #5
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3) #5
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = select i1 %20, i8* %22, i8* %8
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #5
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #5
  %26 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 1, i32 0
  %27 = load i16, i16* %26, align 2
  %28 = sitofp i16 %27 to float
  %29 = fmul float %28, 2.500000e-01
  %30 = fpext float %29 to double
  %31 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %30) #5
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5) #5
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %36, i8* %38, i8* %24
  %40 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #5
  %41 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #5
  %42 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %0, i64 0, i32 2, i32 0
  %43 = load i16, i16* %42, align 2
  %44 = sitofp i16 %43 to float
  %45 = fmul float %44, 2.500000e-01
  %46 = fpext float %45 to double
  %47 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), double %46) #5
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %48, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %7) #5
  %49 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %40
  %56 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* %23, i8* %39, i8* %55) #5
  %57 = load i8, i8* %50, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %1
  %60 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %60) #6
  br label %61

61:                                               ; preds = %1, %59
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #5
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #5
  %78 = load i8, i8* %34, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %81) #6
  br label %82

82:                                               ; preds = %77, %80
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #5
  br label %98

98:                                               ; preds = %82, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #5
  %99 = load i8, i8* %18, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %98
  %102 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %102) #6
  br label %103

103:                                              ; preds = %98, %101
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #5
  br label %119

119:                                              ; preds = %103, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #5
  ret %"class.WTF::StringImpl"* %56
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
