; ModuleID = '../../third_party/blink/renderer/platform/fonts/shaping/shape_result_buffer.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/shaping/shape_result_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i32 }
%"class.blink::ShapeResultBuffer" = type <{ %"class.WTF::Vector", i8, [7 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [512 x i8] }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted", float, %"class.blink::FloatRect", %"class.WTF::Vector.0", %class.scoped_refptr.41, %"class.std::__1::unique_ptr.42", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::Vector.0" = type { %"class.WTF::VectorBuffer.1" }
%"class.WTF::VectorBuffer.1" = type { %"class.WTF::VectorBufferBase.2" }
%"class.WTF::VectorBufferBase.2" = type { %class.scoped_refptr.3*, i32, i32 }
%class.scoped_refptr.3 = type { %"struct.blink::ShapeResult::RunInfo"* }
%"struct.blink::ShapeResult::RunInfo" = type <{ %"class.WTF::RefCounted.4", [4 x i8], %"class.blink::ShapeResult::RunInfo::GlyphDataCollection", %class.scoped_refptr.13, %"class.WTF::Vector.36", i32, i32, float, i32, i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.4" = type { %"class.base::RefCounted.5" }
%"class.base::RefCounted.5" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::ShapeResult::RunInfo::GlyphDataCollection" = type { %"class.std::__1::unique_ptr", %"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HarfBuzzRunGlyphData"* }
%"struct.blink::HarfBuzzRunGlyphData" = type { i32, float }
%"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" = type <{ %"class.std::__1::unique_ptr.7", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ShapeResult::GlyphOffset"* }
%"class.blink::ShapeResult::GlyphOffset" = type { %"class.blink::FloatSize" }
%class.scoped_refptr.13 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.27", %class.scoped_refptr.33, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.14" }>
%"class.WTF::RefCounted.14" = type { %"class.base::RefCounted.15" }
%"class.base::RefCounted.15" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.26, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.26 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.13, %class.scoped_refptr.13 }
%class.scoped_refptr.33 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.34", [4 x i8] }>
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.WTF::VectorBufferBase.38" = type { i32*, i32, i32 }
%class.scoped_refptr.41 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.45", i32, float }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"struct.blink::CharacterRange"*, i32, i32 }
%"struct.blink::CharacterRange" = type { float, float, float, float }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { double*, i32, i32 }
%"class.blink::TextRun" = type <{ %union.anon.70, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.70 = type { i8* }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"struct.blink::ShapeResult::RunFontData"*, i32, i32 }
%"struct.blink::ShapeResult::RunFontData" = type { %"class.blink::SimpleFontData"*, i32 }
%"struct.blink::GlyphData" = type <{ i16, [6 x i8], %"class.blink::SimpleFontData"*, i8, [7 x i8] }>
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.78, %class.scoped_refptr.86, %class.scoped_refptr.96, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.102 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.77 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.76 }
%class.scoped_refptr.76 = type { %"class.WTF::StringImpl"* }
%class.scoped_refptr.77 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.103", [4 x i8] }>
%"class.WTF::RefCounted.103" = type { %"class.base::RefCounted.104" }
%"class.base::RefCounted.104" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.78 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.84", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.84" = type { %"class.base::RefCounted.85" }
%"class.base::RefCounted.85" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.86 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.87", %"class.WTF::RefCounted.94", [4 x i8] }>
%"class.blink::FontSettings.87" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::FontTagValuePair.91"*, i32, i32 }
%"class.blink::FontTagValuePair.91" = type { i32, float }
%"class.WTF::RefCounted.94" = type { %"class.base::RefCounted.95" }
%"class.base::RefCounted.95" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.96 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.97", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.99, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.97" = type { %"class.base::RefCounted.98" }
%"class.base::RefCounted.98" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.99 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.100", [4 x i8] }>
%"class.WTF::RefCounted.100" = type { %"class.base::RefCounted.101" }
%"class.base::RefCounted.101" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.102 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.14", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK5blink11ShapeResult7RunInfo33ExpandRangeToIncludePartialGlyphsEiPiS2_ = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIKN5blink11ShapeResultEELj64ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_ = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPd = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRdEEvOT_ = comdat any

@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF10StringImpl12empty16_bit_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink17ShapeResultBuffer17GetCharacterRangeERKN3WTF10StringViewENS_13TextDirectionEfjj(%"class.blink::ShapeResultBuffer"*, %"class.WTF::StringView"* nocapture readonly dereferenceable(24), i8 zeroext, float, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = icmp eq i8 %2, 1
  %9 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %6
  %13 = select i1 %8, float %3, float 0.000000e+00
  %14 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0
  %15 = bitcast %"class.WTF::StringView"* %7 to i8*
  %16 = bitcast %"class.WTF::StringView"* %1 to i64*
  %17 = bitcast %"class.WTF::StringView"* %7 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %21 = bitcast i8** %19 to i16**
  %22 = bitcast i8** %20 to i16**
  br label %60

23:                                               ; preds = %266, %6
  %24 = phi float [ 0.000000e+00, %6 ], [ %242, %266 ]
  %25 = phi float [ 0.000000e+00, %6 ], [ %243, %266 ]
  %26 = phi float [ 0.000000e+00, %6 ], [ %245, %266 ]
  %27 = phi float [ 0.000000e+00, %6 ], [ %246, %266 ]
  %28 = phi i8 [ 0, %6 ], [ %247, %266 ]
  %29 = phi i8 [ 0, %6 ], [ %248, %266 ]
  %30 = phi i32 [ 0, %6 ], [ %258, %266 ]
  %31 = and i8 %28, 1
  %32 = icmp eq i8 %31, 0
  %33 = icmp eq i32 %30, %4
  %34 = and i1 %32, %33
  %35 = select i1 %8, float 0.000000e+00, float %3
  %36 = select i1 %34, float %35, float %26
  %37 = and i8 %29, 1
  %38 = icmp eq i8 %37, 0
  %39 = icmp eq i32 %30, %5
  %40 = and i1 %38, %39
  %41 = select i1 %40, float %35, float %27
  %42 = icmp ne i8 %31, 0
  %43 = or i1 %42, %33
  %44 = select i1 %43, float %36, float 0.000000e+00
  %45 = icmp ne i8 %37, 0
  %46 = or i1 %45, %39
  %47 = select i1 %46, float %41, float %35
  %48 = select i1 %43, float %47, float 0.000000e+00
  %49 = select i1 %46, float %41, float %48
  %50 = fcmp olt float %44, %49
  %51 = fsub float -0.000000e+00, %25
  %52 = select i1 %50, float %44, float %49
  %53 = select i1 %50, float %49, float %44
  %54 = insertelement <2 x float> undef, float %52, i32 0
  %55 = insertelement <2 x float> %54, float %53, i32 1
  %56 = insertelement <2 x float> undef, float %51, i32 0
  %57 = insertelement <2 x float> %56, float %24, i32 1
  %58 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %55, 0
  %59 = insertvalue { <2 x float>, <2 x float> } %58, <2 x float> %57, 1
  ret { <2 x float>, <2 x float> } %59

60:                                               ; preds = %12, %266
  %61 = phi float [ 0.000000e+00, %12 ], [ %242, %266 ]
  %62 = phi float [ 0.000000e+00, %12 ], [ %243, %266 ]
  %63 = phi i32 [ 0, %12 ], [ %267, %266 ]
  %64 = phi i32 [ 0, %12 ], [ %258, %266 ]
  %65 = phi i32 [ %5, %12 ], [ %250, %266 ]
  %66 = phi i32 [ %4, %12 ], [ %249, %266 ]
  %67 = phi i8 [ 0, %12 ], [ %248, %266 ]
  %68 = phi i8 [ 0, %12 ], [ %247, %266 ]
  %69 = phi float [ 0.000000e+00, %12 ], [ %246, %266 ]
  %70 = phi float [ 0.000000e+00, %12 ], [ %245, %266 ]
  %71 = phi float [ %13, %12 ], [ %256, %266 ]
  %72 = call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink11ShapeResultEELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %63) #5
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %72, i64 0, i32 0
  %74 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %73, align 8
  %75 = icmp eq %"class.blink::ShapeResult"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %77) #5
  br label %78

78:                                               ; preds = %60, %76
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5
  %79 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 7
  %80 = load i32, i32* %79, align 4
  %81 = load i64, i64* %16, align 8
  store i64 %81, i64* %17, align 8
  store i32 %80, i32* %18, align 8
  %82 = inttoptr i64 %81 to %"class.WTF::StringImpl"*
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %78
  %88 = load i8*, i8** %19, align 8
  %89 = zext i32 %64 to i64
  %90 = getelementptr inbounds i8, i8* %88, i64 %89
  store i8* %90, i8** %20, align 8
  br label %95

91:                                               ; preds = %78
  %92 = load i16*, i16** %21, align 8
  %93 = zext i32 %64 to i64
  %94 = getelementptr inbounds i16, i16* %92, i64 %93
  store i16* %94, i16** %22, align 8
  br label %95

95:                                               ; preds = %87, %91
  call void @_ZNK5blink11ShapeResult15EnsureGraphemesERKN3WTF10StringViewE(%"class.blink::ShapeResult"* %74, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5
  br i1 %8, label %96, label %124

96:                                               ; preds = %95
  %97 = and i8 %68, 1
  %98 = icmp eq i8 %97, 0
  %99 = icmp sgt i32 %66, -1
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %107

101:                                              ; preds = %96
  %102 = load i32, i32* %79, align 4
  %103 = icmp ult i32 %66, %102
  br i1 %103, label %104, label %107

104:                                              ; preds = %101
  %105 = xor i32 %66, -1
  %106 = add i32 %102, %105
  br label %107

107:                                              ; preds = %96, %104, %101
  %108 = phi i32 [ %106, %104 ], [ %66, %101 ], [ %66, %96 ]
  %109 = and i8 %67, 1
  %110 = icmp eq i8 %109, 0
  %111 = icmp sgt i32 %65, -1
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = load i32, i32* %79, align 4
  %115 = icmp ult i32 %65, %114
  br i1 %115, label %116, label %119

116:                                              ; preds = %113
  %117 = xor i32 %65, -1
  %118 = add i32 %114, %117
  br label %119

119:                                              ; preds = %107, %116, %113
  %120 = phi i32 [ %118, %116 ], [ %65, %113 ], [ %65, %107 ]
  %121 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 1
  %122 = load float, float* %121, align 4
  %123 = fsub float %71, %122
  br label %124

124:                                              ; preds = %119, %95
  %125 = phi float [ %123, %119 ], [ %71, %95 ]
  %126 = phi i32 [ %108, %119 ], [ %66, %95 ]
  %127 = phi i32 [ %120, %119 ], [ %65, %95 ]
  %128 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 3
  %129 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 3, i32 0, i32 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %241, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 2
  %134 = bitcast %"class.blink::FloatRect"* %133 to <2 x float>*
  %135 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 2, i32 1
  %136 = bitcast %"class.blink::FloatSize"* %135 to <2 x float>*
  br label %137

137:                                              ; preds = %132, %228
  %138 = phi float [ %61, %132 ], [ %229, %228 ]
  %139 = phi float [ %62, %132 ], [ %230, %228 ]
  %140 = phi i32 [ 0, %132 ], [ %238, %228 ]
  %141 = phi i32 [ %127, %132 ], [ %237, %228 ]
  %142 = phi i32 [ %126, %132 ], [ %236, %228 ]
  %143 = phi i8 [ %67, %132 ], [ %235, %228 ]
  %144 = phi i8 [ %68, %132 ], [ %234, %228 ]
  %145 = phi float [ %69, %132 ], [ %233, %228 ]
  %146 = phi float [ %70, %132 ], [ %232, %228 ]
  %147 = phi float [ %125, %132 ], [ %231, %228 ]
  %148 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %128, i32 %140) #5
  %149 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %148, i64 0, i32 0
  %150 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %149, align 8
  %151 = icmp eq %"struct.blink::ShapeResult::RunInfo"* %150, null
  br i1 %151, label %228, label %152

152:                                              ; preds = %137
  %153 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %128, i32 %140) #5
  %154 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %153, i64 0, i32 0
  %155 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %154, align 8
  %156 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %155, i64 0, i32 6
  %157 = load i32, i32* %156, align 4
  %158 = and i8 %144, 1
  %159 = icmp eq i8 %158, 0
  %160 = icmp sgt i32 %142, -1
  %161 = and i1 %159, %160
  %162 = icmp slt i32 %142, %157
  %163 = and i1 %161, %162
  br i1 %163, label %164, label %170

164:                                              ; preds = %152
  %165 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %128, i32 %140) #5
  %166 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %165, i64 0, i32 0
  %167 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %166, align 8
  %168 = call float @_ZNK5blink11ShapeResult7RunInfo24XPositionForVisualOffsetEjNS_16AdjustMidClusterE(%"struct.blink::ShapeResult::RunInfo"* %167, i32 %142, i32 1) #5
  %169 = fadd float %147, %168
  br label %172

170:                                              ; preds = %152
  %171 = sub nsw i32 %142, %157
  br label %172

172:                                              ; preds = %170, %164
  %173 = phi float [ %169, %164 ], [ %146, %170 ]
  %174 = phi i8 [ 1, %164 ], [ %144, %170 ]
  %175 = phi i32 [ %142, %164 ], [ %171, %170 ]
  %176 = and i8 %143, 1
  %177 = icmp eq i8 %176, 0
  %178 = icmp sgt i32 %141, -1
  %179 = and i1 %177, %178
  %180 = icmp slt i32 %141, %157
  %181 = and i1 %179, %180
  br i1 %181, label %182, label %190

182:                                              ; preds = %172
  %183 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %128, i32 %140) #5
  %184 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %183, i64 0, i32 0
  %185 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %184, align 8
  %186 = call float @_ZNK5blink11ShapeResult7RunInfo24XPositionForVisualOffsetEjNS_16AdjustMidClusterE(%"struct.blink::ShapeResult::RunInfo"* %185, i32 %141, i32 0) #5
  %187 = fadd float %147, %186
  %188 = and i8 %174, 1
  %189 = icmp eq i8 %188, 0
  br label %197

190:                                              ; preds = %172
  %191 = sub nsw i32 %141, %157
  %192 = and i8 %174, 1
  %193 = icmp eq i8 %192, 0
  %194 = or i8 %174, %143
  %195 = and i8 %194, 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %212, label %197

197:                                              ; preds = %182, %190
  %198 = phi i1 [ false, %182 ], [ %177, %190 ]
  %199 = phi i1 [ %189, %182 ], [ %193, %190 ]
  %200 = phi i32 [ %141, %182 ], [ %191, %190 ]
  %201 = phi i8 [ 1, %182 ], [ %143, %190 ]
  %202 = phi float [ %187, %182 ], [ %145, %190 ]
  %203 = load <2 x float>, <2 x float>* %134, align 8
  %204 = load <2 x float>, <2 x float>* %136, align 8
  %205 = extractelement <2 x float> %203, i32 1
  %206 = fcmp olt float %205, %139
  %207 = select i1 %206, float %205, float %139
  %208 = extractelement <2 x float> %204, i32 1
  %209 = fadd float %205, %208
  %210 = fcmp olt float %138, %209
  %211 = select i1 %210, float %209, float %138
  br label %212

212:                                              ; preds = %190, %197
  %213 = phi float [ %138, %190 ], [ %211, %197 ]
  %214 = phi float [ %139, %190 ], [ %207, %197 ]
  %215 = phi i1 [ %177, %190 ], [ %198, %197 ]
  %216 = phi i1 [ %193, %190 ], [ %199, %197 ]
  %217 = phi i32 [ %191, %190 ], [ %200, %197 ]
  %218 = phi i8 [ %143, %190 ], [ %201, %197 ]
  %219 = phi float [ %145, %190 ], [ %202, %197 ]
  %220 = or i1 %215, %216
  br i1 %220, label %221, label %241

221:                                              ; preds = %212
  %222 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %128, i32 %140) #5
  %223 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %222, i64 0, i32 0
  %224 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %223, align 8
  %225 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %224, i64 0, i32 7
  %226 = load float, float* %225, align 8
  %227 = fadd float %147, %226
  br label %228

228:                                              ; preds = %137, %221
  %229 = phi float [ %138, %137 ], [ %213, %221 ]
  %230 = phi float [ %139, %137 ], [ %214, %221 ]
  %231 = phi float [ %147, %137 ], [ %227, %221 ]
  %232 = phi float [ %146, %137 ], [ %173, %221 ]
  %233 = phi float [ %145, %137 ], [ %219, %221 ]
  %234 = phi i8 [ %144, %137 ], [ %174, %221 ]
  %235 = phi i8 [ %143, %137 ], [ %218, %221 ]
  %236 = phi i32 [ %142, %137 ], [ %175, %221 ]
  %237 = phi i32 [ %141, %137 ], [ %217, %221 ]
  %238 = add nuw i32 %140, 1
  %239 = load i32, i32* %129, align 4
  %240 = icmp ult i32 %238, %239
  br i1 %240, label %137, label %241

241:                                              ; preds = %228, %212, %124
  %242 = phi float [ %61, %124 ], [ %213, %212 ], [ %229, %228 ]
  %243 = phi float [ %62, %124 ], [ %214, %212 ], [ %230, %228 ]
  %244 = phi float [ %125, %124 ], [ %147, %212 ], [ %231, %228 ]
  %245 = phi float [ %70, %124 ], [ %173, %212 ], [ %232, %228 ]
  %246 = phi float [ %69, %124 ], [ %219, %212 ], [ %233, %228 ]
  %247 = phi i8 [ %68, %124 ], [ %174, %212 ], [ %234, %228 ]
  %248 = phi i8 [ %67, %124 ], [ %218, %212 ], [ %235, %228 ]
  %249 = phi i32 [ %126, %124 ], [ %175, %212 ], [ %236, %228 ]
  %250 = phi i32 [ %127, %124 ], [ %217, %212 ], [ %237, %228 ]
  br i1 %8, label %251, label %255

251:                                              ; preds = %241
  %252 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 1
  %253 = load float, float* %252, align 4
  %254 = fsub float %244, %253
  br label %255

255:                                              ; preds = %251, %241
  %256 = phi float [ %254, %251 ], [ %244, %241 ]
  %257 = load i32, i32* %79, align 4
  %258 = add i32 %257, %64
  br i1 %75, label %266, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %260) #5
  %261 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %266

264:                                              ; preds = %259
  call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %74) #5
  %265 = bitcast %"class.blink::ShapeResult"* %74 to i8*
  call void @free(i8* %265) #5
  br label %266

266:                                              ; preds = %255, %259, %264
  %267 = add nuw i32 %63, 1
  %268 = load i32, i32* %9, align 4
  %269 = icmp ult i32 %267, %268
  br i1 %269, label %60, label %23
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink11ShapeResult15EnsureGraphemesERKN3WTF10StringViewE(%"class.blink::ShapeResult"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare float @_ZNK5blink11ShapeResult7RunInfo24XPositionForVisualOffsetEjNS_16AdjustMidClusterE(%"struct.blink::ShapeResult::RunInfo"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ShapeResultBuffer25IndividualCharacterRangesENS_13TextDirectionEf(%"class.WTF::Vector.60"* noalias sret, %"class.blink::ShapeResultBuffer"* nocapture readonly, i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.WTF::Vector.60"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #5
  %6 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %4
  %14 = icmp eq i8 %2, 1
  %15 = select i1 %14, float %3, float 0.000000e+00
  br label %16

16:                                               ; preds = %13, %16
  %17 = phi %class.scoped_refptr* [ %22, %16 ], [ %7, %13 ]
  %18 = phi float [ %21, %16 ], [ %15, %13 ]
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %20 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %19, align 8
  %21 = tail call float @_ZNK5blink11ShapeResult25IndividualCharacterRangesEPN3WTF6VectorINS_14CharacterRangeELj0ENS1_18PartitionAllocatorEEEf(%"class.blink::ShapeResult"* %20, %"class.WTF::Vector.60"* %0, float %18) #5
  %22 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 1
  %23 = icmp eq %class.scoped_refptr* %22, %11
  br i1 %23, label %24, label %16

24:                                               ; preds = %16, %4
  ret void
}

declare float @_ZNK5blink11ShapeResult25IndividualCharacterRangesEPN3WTF6VectorINS_14CharacterRangeELj0ENS1_18PartitionAllocatorEEEf(%"class.blink::ShapeResult"*, %"class.WTF::Vector.60"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17ShapeResultBuffer18AddRunInfoAdvancesERKNS_11ShapeResult7RunInfoEdRN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEE(%"struct.blink::ShapeResult::RunInfo"* dereferenceable(80), double, %"class.WTF::Vector.65"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  store double %1, double* %4, align 8
  %6 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 2, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, -3
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %14, label %19

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 7
  %16 = load float, float* %15, align 8
  %17 = fpext float %16 to double
  %18 = fadd double %17, %1
  store double %18, double* %4, align 8
  br label %19

19:                                               ; preds = %14, %3
  %20 = icmp eq i32 %7, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = add i32 %7, -2
  %24 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %2, i64 0, i32 0, i32 0, i32 2
  %25 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %2, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast double* %4 to i64*
  %28 = bitcast double* %5 to i8*
  br label %30

29:                                               ; preds = %127, %19
  ret void

30:                                               ; preds = %130, %21
  %31 = phi i32 [ %11, %21 ], [ %131, %130 ]
  %32 = phi i32 [ 0, %21 ], [ %39, %130 ]
  %33 = phi double [ 0.000000e+00, %21 ], [ %128, %130 ]
  %34 = and i32 %31, -3
  %35 = icmp eq i32 %34, 5
  %36 = xor i32 %32, -1
  %37 = add i32 %7, %36
  %38 = select i1 %35, i32 %37, i32 %32
  %39 = add nuw i32 %32, 1
  %40 = zext i32 %38 to i64
  %41 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %22, align 8
  %42 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %41, i64 %40, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 16
  %45 = and i32 %44, 32767
  %46 = icmp eq i32 %39, %7
  br i1 %46, label %55, label %47

47:                                               ; preds = %30
  %48 = sub i32 %23, %32
  %49 = select i1 %35, i32 %48, i32 %39
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %41, i64 %50, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = lshr i32 %52, 16
  %54 = and i32 %53, 32767
  br label %55

55:                                               ; preds = %30, %47
  %56 = phi i32 [ %54, %47 ], [ %9, %30 ]
  %57 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %41, i64 %40, i32 1
  %58 = load float, float* %57, align 4
  %59 = fpext float %58 to double
  %60 = fadd double %33, %59
  %61 = icmp eq i32 %56, %45
  br i1 %61, label %127, label %62

62:                                               ; preds = %55
  %63 = call i32 @_ZNK5blink11ShapeResult7RunInfo12NumGraphemesEjj(%"struct.blink::ShapeResult::RunInfo"* %0, i32 %45, i32 %56) #5
  %64 = icmp ugt i32 %56, %45
  br i1 %64, label %67, label %65

65:                                               ; preds = %62
  %66 = sub i32 %56, %45
  br label %72

67:                                               ; preds = %62
  %68 = uitofp i32 %63 to double
  %69 = fdiv double %60, %68
  %70 = sub i32 %56, %45
  %71 = icmp eq i32 %63, %70
  br label %75

72:                                               ; preds = %116, %65
  %73 = phi i32 [ %66, %65 ], [ %70, %116 ]
  %74 = icmp eq i32 %63, %73
  br i1 %74, label %127, label %119

75:                                               ; preds = %116, %67
  %76 = phi i32 [ %45, %67 ], [ %117, %116 ]
  %77 = load i32, i32* %10, align 8
  %78 = and i32 %77, -3
  %79 = icmp eq i32 %78, 5
  br i1 %79, label %80, label %94

80:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  %81 = load double, double* %4, align 8
  %82 = fsub double %81, %69
  store double %82, double* %5, align 8
  %83 = load i32, i32* %24, align 4
  %84 = load i32, i32* %25, align 8
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %92, label %86, !prof !2

86:                                               ; preds = %80
  %87 = load double*, double** %26, align 8
  %88 = zext i32 %83 to i64
  %89 = getelementptr inbounds double, double* %87, i64 %88
  store double %82, double* %89, align 8
  %90 = load i32, i32* %24, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %24, align 4
  br label %93

92:                                               ; preds = %80
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.65"* %2, double* nonnull dereferenceable(8) %5) #5
  br label %93

93:                                               ; preds = %86, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  br label %107

94:                                               ; preds = %75
  %95 = load i32, i32* %24, align 4
  %96 = load i32, i32* %25, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %106, label %98, !prof !2

98:                                               ; preds = %94
  %99 = load double*, double** %26, align 8
  %100 = zext i32 %95 to i64
  %101 = getelementptr inbounds double, double* %99, i64 %100
  %102 = load i64, i64* %27, align 8
  %103 = bitcast double* %101 to i64*
  store i64 %102, i64* %103, align 8
  %104 = load i32, i32* %24, align 4
  %105 = add i32 %104, 1
  store i32 %105, i32* %24, align 4
  br label %107

106:                                              ; preds = %94
  call void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRdEEvOT_(%"class.WTF::Vector.65"* %2, double* nonnull dereferenceable(8) %4) #5
  br label %107

107:                                              ; preds = %106, %98, %93
  br i1 %71, label %108, label %116

108:                                              ; preds = %107
  %109 = load i32, i32* %10, align 8
  %110 = and i32 %109, -3
  %111 = icmp eq i32 %110, 5
  %112 = select i1 %111, double -1.000000e+00, double 1.000000e+00
  %113 = fmul double %69, %112
  %114 = load double, double* %4, align 8
  %115 = fadd double %114, %113
  store double %115, double* %4, align 8
  br label %116

116:                                              ; preds = %107, %108
  %117 = add i32 %76, 1
  %118 = icmp eq i32 %117, %56
  br i1 %118, label %72, label %75

119:                                              ; preds = %72
  %120 = load i32, i32* %10, align 8
  %121 = and i32 %120, -3
  %122 = icmp eq i32 %121, 5
  %123 = select i1 %122, double -1.000000e+00, double 1.000000e+00
  %124 = fmul double %60, %123
  %125 = load double, double* %4, align 8
  %126 = fadd double %125, %124
  store double %126, double* %4, align 8
  br label %127

127:                                              ; preds = %119, %72, %55
  %128 = phi double [ %60, %55 ], [ 0.000000e+00, %72 ], [ 0.000000e+00, %119 ]
  %129 = icmp eq i32 %39, %7
  br i1 %129, label %29, label %130

130:                                              ; preds = %127
  %131 = load i32, i32* %10, align 8
  br label %30
}

declare i32 @_ZNK5blink11ShapeResult7RunInfo12NumGraphemesEjj(%"struct.blink::ShapeResult::RunInfo"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ShapeResultBuffer27IndividualCharacterAdvancesERKN3WTF10StringViewENS_13TextDirectionEf(%"class.WTF::Vector.65"* noalias sret, %"class.blink::ShapeResultBuffer"* nocapture readonly, %"class.WTF::StringView"* nocapture readonly dereferenceable(24), i8 zeroext, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::Vector.65"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #5
  %8 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %112, label %15

15:                                               ; preds = %5
  %16 = icmp eq i8 %3, 1
  %17 = fpext float %4 to double
  %18 = select i1 %16, double %17, double 0.000000e+00
  %19 = bitcast %"class.WTF::StringView"* %6 to i8*
  %20 = bitcast %"class.WTF::StringView"* %2 to i64*
  %21 = bitcast %"class.WTF::StringView"* %6 to i64*
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %25 = bitcast i8** %23 to i16**
  %26 = bitcast i8** %24 to i16**
  br label %27

27:                                               ; preds = %15, %104
  %28 = phi %class.scoped_refptr* [ %9, %15 ], [ %110, %104 ]
  %29 = phi i32 [ 0, %15 ], [ %109, %104 ]
  %30 = phi double [ %18, %15 ], [ %105, %104 ]
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %32 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %32, i64 0, i32 3, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #5
  %35 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %32, i64 0, i32 7
  %36 = load i32, i32* %35, align 4
  %37 = load i64, i64* %20, align 8
  store i64 %37, i64* %21, align 8
  store i32 %36, i32* %22, align 8
  %38 = inttoptr i64 %37 to %"class.WTF::StringImpl"*
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %27
  %44 = load i8*, i8** %23, align 8
  %45 = zext i32 %29 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  store i8* %46, i8** %24, align 8
  br label %51

47:                                               ; preds = %27
  %48 = load i16*, i16** %25, align 8
  %49 = zext i32 %29 to i64
  %50 = getelementptr inbounds i16, i16* %48, i64 %49
  store i16* %50, i16** %26, align 8
  br label %51

51:                                               ; preds = %43, %47
  call void @_ZNK5blink11ShapeResult15EnsureGraphemesERKN3WTF10StringViewE(%"class.blink::ShapeResult"* %32, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #5
  %52 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  %53 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %52, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = and i32 %54, 536870912
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = add i32 %34, -1
  %59 = icmp sgt i32 %58, -1
  br i1 %59, label %62, label %104

60:                                               ; preds = %51
  %61 = icmp eq i32 %34, 0
  br i1 %61, label %104, label %83

62:                                               ; preds = %57, %81
  %63 = phi %"class.blink::ShapeResult"* [ %82, %81 ], [ %52, %57 ]
  %64 = phi i32 [ %79, %81 ], [ %58, %57 ]
  %65 = phi double [ %73, %81 ], [ %30, %57 ]
  %66 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %63, i64 0, i32 3
  %67 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %66, i32 %64) #5
  %68 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %67, i64 0, i32 0
  %69 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %69, i64 0, i32 7
  %71 = load float, float* %70, align 8
  %72 = fpext float %71 to double
  %73 = fsub double %65, %72
  %74 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  %75 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %74, i64 0, i32 3
  %76 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %75, i32 %64) #5
  %77 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %76, i64 0, i32 0
  %78 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %77, align 8
  call void @_ZN5blink17ShapeResultBuffer18AddRunInfoAdvancesERKNS_11ShapeResult7RunInfoEdRN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEE(%"struct.blink::ShapeResult::RunInfo"* dereferenceable(80) %78, double %73, %"class.WTF::Vector.65"* dereferenceable(16) %0)
  %79 = add i32 %64, -1
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %81, label %104

81:                                               ; preds = %62
  %82 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  br label %62

83:                                               ; preds = %60, %102
  %84 = phi %"class.blink::ShapeResult"* [ %103, %102 ], [ %52, %60 ]
  %85 = phi i32 [ %100, %102 ], [ 0, %60 ]
  %86 = phi double [ %99, %102 ], [ %30, %60 ]
  %87 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %84, i64 0, i32 3
  %88 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %87, i32 %85) #5
  %89 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %88, i64 0, i32 0
  %90 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %89, align 8
  call void @_ZN5blink17ShapeResultBuffer18AddRunInfoAdvancesERKNS_11ShapeResult7RunInfoEdRN3WTF6VectorIdLj0ENS5_18PartitionAllocatorEEE(%"struct.blink::ShapeResult::RunInfo"* dereferenceable(80) %90, double %86, %"class.WTF::Vector.65"* dereferenceable(16) %0)
  %91 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  %92 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %91, i64 0, i32 3
  %93 = call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %92, i32 %85) #5
  %94 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %93, i64 0, i32 0
  %95 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %94, align 8
  %96 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %95, i64 0, i32 7
  %97 = load float, float* %96, align 8
  %98 = fpext float %97 to double
  %99 = fadd double %86, %98
  %100 = add nuw i32 %85, 1
  %101 = icmp eq i32 %100, %34
  br i1 %101, label %104, label %102

102:                                              ; preds = %83
  %103 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  br label %83

104:                                              ; preds = %62, %83, %60, %57
  %105 = phi double [ %30, %60 ], [ %30, %57 ], [ %99, %83 ], [ %73, %62 ]
  %106 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %31, align 8
  %107 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %106, i64 0, i32 7
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, %29
  %110 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %111 = icmp eq %class.scoped_refptr* %110, %13
  br i1 %111, label %112, label %27

112:                                              ; preds = %104, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink17ShapeResultBuffer17OffsetForPositionERKNS_7TextRunEfNS_26IncludePartialGlyphsOptionENS_17BreakGlyphsOptionE(%"class.blink::ShapeResultBuffer"*, %"class.blink::TextRun"* nocapture readonly dereferenceable(40), float, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 5
  %9 = load i16, i16* %8, align 8, !noalias !3
  %10 = and i16 %9, 4
  %11 = icmp eq i16 %10, 0
  %12 = bitcast %"class.blink::TextRun"* %1 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !3
  %14 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 4, !noalias !3
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl12empty16_bit_E to i64*), align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = select i1 %11, i64 %16, i64 %17
  %19 = and i16 %9, 16
  %20 = icmp eq i16 %19, 0
  %21 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0
  br i1 %20, label %82, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %155, label %26

26:                                               ; preds = %22, %75
  %27 = phi float [ %77, %75 ], [ %2, %22 ]
  %28 = phi i32 [ %76, %75 ], [ %15, %22 ]
  %29 = phi i32 [ %30, %75 ], [ %24, %22 ]
  %30 = add i32 %29, -1
  %31 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink11ShapeResultEELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %21, i32 %30) #5
  %32 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %31, i64 0, i32 0
  %33 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %32, align 8
  %34 = icmp eq %"class.blink::ShapeResult"* %33, null
  br i1 %34, label %75, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %33, i64 0, i32 7
  %37 = load i32, i32* %36, align 4
  %38 = sub i32 %28, %37
  %39 = fcmp ult float %27, 0.000000e+00
  %40 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %33, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = fcmp ugt float %27, %41
  %43 = or i1 %39, %42
  br i1 %43, label %73, label %44

44:                                               ; preds = %35
  %45 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #5
  %46 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %18, i64* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %37, i32* %47, align 8
  %48 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %44
  %54 = inttoptr i64 %13 to i8*
  %55 = zext i32 %38 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* %56, i8** %57, align 8
  br label %64

58:                                               ; preds = %44
  %59 = inttoptr i64 %13 to i16*
  %60 = zext i32 %38 to i64
  %61 = getelementptr inbounds i16, i16* %59, i64 %60
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %63 = bitcast i8** %62 to i16**
  store i16* %61, i16** %63, align 8
  br label %64

64:                                               ; preds = %53, %58
  %65 = icmp eq i32 %3, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %64
  %67 = icmp eq i32 %4, 1
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  call void @_ZNK5blink11ShapeResult15EnsureGraphemesERKN3WTF10StringViewE(%"class.blink::ShapeResult"* nonnull %33, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #5
  br label %69

69:                                               ; preds = %68, %66
  %70 = call i32 @_ZNK5blink11ShapeResult17OffsetForPositionEfNS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"* nonnull %33, float %27, i32 %4) #5
  br label %79

71:                                               ; preds = %64
  %72 = call i32 @_ZNK5blink11ShapeResult21CaretOffsetForHitTestEfRKN3WTF10StringViewENS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"* nonnull %33, float %27, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, i32 %4) #5
  br label %79

73:                                               ; preds = %35
  %74 = fsub float %27, %41
  br label %75

75:                                               ; preds = %26, %73
  %76 = phi i32 [ %28, %26 ], [ %38, %73 ]
  %77 = phi float [ %27, %26 ], [ %74, %73 ]
  %78 = icmp eq i32 %30, 0
  br i1 %78, label %155, label %26

79:                                               ; preds = %69, %71
  %80 = phi i32 [ %70, %69 ], [ %72, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #5
  %81 = add i32 %80, %38
  br label %155

82:                                               ; preds = %5
  %83 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %class.scoped_refptr*, %class.scoped_refptr** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %84, i64 %87
  %89 = icmp eq i32 %86, 0
  br i1 %89, label %155, label %90

90:                                               ; preds = %82
  %91 = bitcast %"class.WTF::StringView"* %7 to i8*
  %92 = bitcast %"class.WTF::StringView"* %7 to i64*
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %94 = inttoptr i64 %18 to %"class.WTF::StringImpl"*
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %97 = bitcast i8** %96 to i16**
  %98 = icmp eq i32 %3, 0
  %99 = icmp eq i32 %4, 1
  br label %100

100:                                              ; preds = %90, %149
  %101 = phi %class.scoped_refptr* [ %84, %90 ], [ %153, %149 ]
  %102 = phi float [ %2, %90 ], [ %150, %149 ]
  %103 = phi i32 [ 0, %90 ], [ %151, %149 ]
  %104 = phi i64 [ %13, %90 ], [ %152, %149 ]
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 0, i32 0
  %106 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %105, align 8
  %107 = icmp eq %"class.blink::ShapeResult"* %106, null
  br i1 %107, label %149, label %108

108:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #5
  %109 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %106, i64 0, i32 7
  %110 = load i32, i32* %109, align 4
  store i64 %18, i64* %92, align 8
  store i32 %110, i32* %93, align 8
  %111 = load atomic i32, i32* %95 monotonic, align 4
  %112 = and i32 %111, 1
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %108
  %115 = inttoptr i64 %104 to i8*
  store i8* %115, i8** %96, align 8
  br label %118

116:                                              ; preds = %108
  %117 = inttoptr i64 %104 to i16*
  store i16* %117, i16** %97, align 8
  br label %118

118:                                              ; preds = %114, %116
  br i1 %98, label %119, label %123

119:                                              ; preds = %118
  br i1 %99, label %120, label %121

120:                                              ; preds = %119
  call void @_ZNK5blink11ShapeResult15EnsureGraphemesERKN3WTF10StringViewE(%"class.blink::ShapeResult"* nonnull %106, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #5
  br label %121

121:                                              ; preds = %120, %119
  %122 = call i32 @_ZNK5blink11ShapeResult17OffsetForPositionEfNS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"* nonnull %106, float %102, i32 %4) #5
  br label %125

123:                                              ; preds = %118
  %124 = call i32 @_ZNK5blink11ShapeResult21CaretOffsetForHitTestEfRKN3WTF10StringViewENS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"* nonnull %106, float %102, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 %4) #5
  br label %125

125:                                              ; preds = %121, %123
  %126 = phi i32 [ %122, %121 ], [ %124, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #5
  %127 = add i32 %126, %103
  %128 = fcmp ult float %102, 0.000000e+00
  %129 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %105, align 8
  %130 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %129, i64 0, i32 1
  %131 = load float, float* %130, align 4
  %132 = fcmp ugt float %102, %131
  %133 = or i1 %128, %132
  br i1 %133, label %134, label %155

134:                                              ; preds = %125
  %135 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %129, i64 0, i32 7
  %136 = load i32, i32* %135, align 4
  %137 = load atomic i32, i32* %95 monotonic, align 4
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  %140 = inttoptr i64 %104 to i16*
  %141 = zext i32 %136 to i64
  %142 = getelementptr inbounds i16, i16* %140, i64 %141
  %143 = bitcast i16* %142 to i8*
  %144 = inttoptr i64 %104 to i8*
  %145 = getelementptr inbounds i8, i8* %144, i64 %141
  %146 = select i1 %139, i8* %143, i8* %145
  %147 = ptrtoint i8* %146 to i64
  %148 = fsub float %102, %131
  br label %149

149:                                              ; preds = %100, %134
  %150 = phi float [ %148, %134 ], [ %102, %100 ]
  %151 = phi i32 [ %127, %134 ], [ %103, %100 ]
  %152 = phi i64 [ %147, %134 ], [ %104, %100 ]
  %153 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 1
  %154 = icmp eq %class.scoped_refptr* %153, %88
  br i1 %154, label %155, label %100

155:                                              ; preds = %75, %149, %125, %22, %82, %79
  %156 = phi i32 [ %81, %79 ], [ 0, %82 ], [ %15, %22 ], [ %151, %149 ], [ %127, %125 ], [ %76, %75 ]
  ret i32 %156
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ShapeResultBuffer33ExpandRangeToIncludePartialGlyphsEPiS1_(%"class.blink::ShapeResultBuffer"*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %0, i64 0, i32 0
  br label %10

9:                                                ; preds = %33, %3
  ret void

10:                                               ; preds = %7, %33
  %11 = phi i32 [ 0, %7 ], [ %34, %33 ]
  %12 = phi i32 [ 0, %7 ], [ %25, %33 ]
  %13 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink11ShapeResultEELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %11) #5
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %13, i64 0, i32 0
  %15 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %14, align 8
  %16 = icmp eq %"class.blink::ShapeResult"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #5
  br label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %15, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %15, i64 0, i32 3, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %37

24:                                               ; preds = %54, %19
  %25 = phi i32 [ %12, %19 ], [ %55, %54 ]
  br i1 %16, label %33, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %27) #5
  %28 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  tail call void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"* nonnull %15) #5
  %32 = bitcast %"class.blink::ShapeResult"* %15 to i8*
  tail call void @free(i8* %32) #5
  br label %33

33:                                               ; preds = %24, %26, %31
  %34 = add nuw i32 %11, 1
  %35 = load i32, i32* %4, align 4
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %10, label %9

37:                                               ; preds = %19, %54
  %38 = phi i32 [ %56, %54 ], [ 0, %19 ]
  %39 = phi i32 [ %55, %54 ], [ %12, %19 ]
  %40 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %20, i32 %38) #5
  %41 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %40, i64 0, i32 0
  %42 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %41, align 8
  %43 = icmp eq %"struct.blink::ShapeResult::RunInfo"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %37
  %45 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %20, i32 %38) #5
  %46 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %45, i64 0, i32 0
  %47 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %46, align 8
  tail call void @_ZNK5blink11ShapeResult7RunInfo33ExpandRangeToIncludePartialGlyphsEiPiS2_(%"struct.blink::ShapeResult::RunInfo"* %47, i32 %39, i32* %1, i32* %2)
  %48 = tail call dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"* %20, i32 %38) #5
  %49 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %48, i64 0, i32 0
  %50 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %49, align 8
  %51 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %50, i64 0, i32 6
  %52 = load i32, i32* %51, align 4
  %53 = add i32 %52, %39
  br label %54

54:                                               ; preds = %37, %44
  %55 = phi i32 [ %53, %44 ], [ %39, %37 ]
  %56 = add nuw i32 %38, 1
  %57 = load i32, i32* %21, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %37, label %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11ShapeResult7RunInfo33ExpandRangeToIncludePartialGlyphsEiPiS2_(%"struct.blink::ShapeResult::RunInfo"*, i32, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, -3
  %8 = icmp eq i32 %7, 4
  %9 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %1
  %12 = select i1 %8, i32 %1, i32 %11
  %13 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 6
  %14 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 2, i32 1, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  br label %24

19:                                               ; preds = %60, %4
  %20 = phi i32 [ %12, %4 ], [ %63, %60 ]
  %21 = phi i32 [ %11, %4 ], [ %64, %60 ]
  %22 = load i32, i32* %2, align 4
  %23 = icmp sgt i32 %21, %22
  br i1 %23, label %69, label %78

24:                                               ; preds = %17, %60
  %25 = phi i32 [ %6, %17 ], [ %61, %60 ]
  %26 = phi i32 [ %6, %17 ], [ %62, %60 ]
  %27 = phi i64 [ 0, %17 ], [ %65, %60 ]
  %28 = phi i32 [ %11, %17 ], [ %64, %60 ]
  %29 = phi i32 [ %12, %17 ], [ %63, %60 ]
  %30 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %18, align 8
  %31 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %30, i64 %27, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = lshr i32 %32, 16
  %34 = and i32 %33, 32767
  %35 = add nsw i32 %34, %1
  %36 = icmp eq i32 %29, %35
  br i1 %36, label %60, label %37

37:                                               ; preds = %24
  %38 = and i32 %26, -3
  %39 = icmp eq i32 %38, 4
  %40 = select i1 %39, i32 %35, i32 %28
  %41 = load i32, i32* %2, align 4
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %37
  %44 = load i32, i32* %3, align 4
  %45 = icmp slt i32 %29, %44
  br i1 %45, label %46, label %53

46:                                               ; preds = %43
  %47 = icmp slt i32 %29, %41
  %48 = select i1 %47, i32 %29, i32 %41
  store i32 %48, i32* %2, align 4
  %49 = load i32, i32* %3, align 4
  %50 = icmp slt i32 %49, %40
  %51 = select i1 %50, i32 %40, i32 %49
  store i32 %51, i32* %3, align 4
  %52 = load i32, i32* %5, align 8
  br label %53

53:                                               ; preds = %46, %43, %37
  %54 = phi i32 [ %52, %46 ], [ %25, %43 ], [ %25, %37 ]
  %55 = and i32 %54, -3
  %56 = icmp eq i32 %55, 4
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  %58 = load i32, i32* %13, align 4
  %59 = add i32 %58, %1
  br label %60

60:                                               ; preds = %57, %53, %24
  %61 = phi i32 [ %25, %24 ], [ %54, %53 ], [ %54, %57 ]
  %62 = phi i32 [ %26, %24 ], [ %54, %53 ], [ %54, %57 ]
  %63 = phi i32 [ %29, %24 ], [ %35, %53 ], [ %35, %57 ]
  %64 = phi i32 [ %28, %24 ], [ %29, %53 ], [ %59, %57 ]
  %65 = add nuw nsw i64 %27, 1
  %66 = load i32, i32* %14, align 8
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %24, label %19

69:                                               ; preds = %19
  %70 = load i32, i32* %3, align 4
  %71 = icmp slt i32 %20, %70
  br i1 %71, label %72, label %78

72:                                               ; preds = %69
  %73 = icmp slt i32 %20, %22
  %74 = select i1 %73, i32 %20, i32 %22
  store i32 %74, i32* %2, align 4
  %75 = load i32, i32* %3, align 4
  %76 = icmp slt i32 %75, %21
  %77 = select i1 %76, i32 %21, i32 %75
  store i32 %77, i32* %3, align 4
  br label %78

78:                                               ; preds = %72, %69, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ShapeResultBuffer14GetRunFontDataEv(%"class.WTF::Vector.71"* noalias sret, %"class.blink::ShapeResultBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.WTF::Vector.71"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #5
  %4 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2, %11
  %12 = phi %class.scoped_refptr* [ %15, %11 ], [ %5, %2 ]
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %14 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %13, align 8
  tail call void @_ZNK5blink11ShapeResult14GetRunFontDataEPN3WTF6VectorINS0_11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResult"* %14, %"class.WTF::Vector.71"* %0) #5
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 1
  %16 = icmp eq %class.scoped_refptr* %15, %9
  br i1 %16, label %17, label %11

17:                                               ; preds = %11, %2
  ret void
}

declare void @_ZNK5blink11ShapeResult14GetRunFontDataEPN3WTF6VectorINS0_11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResult"*, %"class.WTF::Vector.71"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17ShapeResultBuffer21EmphasisMarkGlyphDataERKNS_15FontDescriptionE(%"struct.blink::GlyphData"* noalias nocapture sret, %"class.blink::ShapeResultBuffer"* nocapture readonly, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ShapeResultBuffer", %"class.blink::ShapeResultBuffer"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %65, label %11

11:                                               ; preds = %3, %62
  %12 = phi %class.scoped_refptr* [ %63, %62 ], [ %5, %3 ]
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %14 = load %"class.blink::ShapeResult"*, %"class.blink::ShapeResult"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ShapeResult", %"class.blink::ShapeResult"* %14, i64 0, i32 3, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %62, label %24

22:                                               ; preds = %24
  %23 = icmp eq %class.scoped_refptr.3* %31, %20
  br i1 %23, label %62, label %24

24:                                               ; preds = %11, %22
  %25 = phi %class.scoped_refptr.3* [ %31, %22 ], [ %16, %11 ]
  %26 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %25, i64 0, i32 0
  %27 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %26, align 8
  %28 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %27, i64 0, i32 2, i32 1, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %25, i64 1
  br i1 %30, label %22, label %32

32:                                               ; preds = %24
  %33 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %25, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %34, align 8
  %36 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = trunc i32 %37 to i16
  %39 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %27, i64 0, i32 3, i32 0
  %40 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %39, align 8
  %41 = tail call %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20EmphasisMarkFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"* %40, %"class.blink::FontDescription"* dereferenceable(80) %2) #5
  %42 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %33, align 8
  %43 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %42, i64 0, i32 10
  %44 = load i8, i8* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 0
  store i16 %38, i16* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 2
  store %"class.blink::SimpleFontData"* %41, %"class.blink::SimpleFontData"** %46, align 8
  %47 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 3
  store i8 %44, i8* %47, align 8
  %48 = icmp eq %"class.blink::SimpleFontData"* %41, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %41, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.base::RefCounted.15", %"class.base::RefCounted.15"* %50, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #5
  %52 = getelementptr inbounds %"class.base::RefCounted.15", %"class.base::RefCounted.15"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %69

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted.15", %"class.base::RefCounted.15"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted.15"* %56 to %"class.blink::FontData"*
  %58 = bitcast %"class.base::RefCounted.15"* %56 to void (%"class.blink::FontData"*)***
  %59 = load void (%"class.blink::FontData"*)**, void (%"class.blink::FontData"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %59, i64 1
  %61 = load void (%"class.blink::FontData"*)*, void (%"class.blink::FontData"*)** %60, align 8
  tail call void %61(%"class.blink::FontData"* nonnull %57) #5
  br label %69

62:                                               ; preds = %22, %11
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 1
  %64 = icmp eq %class.scoped_refptr* %63, %9
  br i1 %64, label %65, label %11

65:                                               ; preds = %62, %3
  %66 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 0
  store i16 0, i16* %66, align 8
  %67 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 2
  store %"class.blink::SimpleFontData"* null, %"class.blink::SimpleFontData"** %67, align 8
  %68 = getelementptr inbounds %"struct.blink::GlyphData", %"struct.blink::GlyphData"* %0, i64 0, i32 3
  store i8 0, i8* %68, align 8
  br label %69

69:                                               ; preds = %32, %49, %55, %65
  ret void
}

declare %"class.blink::SimpleFontData"* @_ZNK5blink14SimpleFontData20EmphasisMarkFontDataERKNS_15FontDescriptionE(%"class.blink::SimpleFontData"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare i32 @_ZNK5blink11ShapeResult17OffsetForPositionEfNS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"*, float, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink11ShapeResult21CaretOffsetForHitTestEfRKN3WTF10StringViewENS_17BreakGlyphsOptionE(%"class.blink::ShapeResult"*, float, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11ShapeResultD1Ev(%"class.blink::ShapeResult"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink11ShapeResultEELj64ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.3* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.0"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.0", %"class.WTF::Vector.0"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.3*, %class.scoped_refptr.3** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.3, %class.scoped_refptr.3* %24, i64 %25
  ret %class.scoped_refptr.3* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIdEEvOT_(%"class.WTF::Vector.65"*, double* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPd(%"class.WTF::Vector.65"* %0, i32 %5, double* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds double, double* %8, i64 %10
  %12 = bitcast double* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast double* %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPd(%"class.WTF::Vector.65"*, i32, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load double*, double** %4, align 8
  %6 = icmp ugt double* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds double, double* %5, i64 %10
  %12 = icmp ugt double* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq double* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %26) #5
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #5
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load double*, double** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne double* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast double* %37 to i8*
  br i1 %40, label %42, label %49, !prof !6

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #5
  %47 = bitcast %"class.WTF::Vector.65"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #5
  %51 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint double* %2 to i64
  %55 = ptrtoint double* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !6

68:                                               ; preds = %53
  %69 = icmp eq double* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %70) #5
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #5
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load double*, double** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne double* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast double* %77 to i8*
  br i1 %80, label %82, label %88, !prof !6

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #5
  %86 = bitcast %"class.WTF::Vector.65"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #5
  %90 = bitcast %"class.WTF::Vector.65"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to double*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi double* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds double, double* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi double* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret double* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRdEEvOT_(%"class.WTF::Vector.65"*, double* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPd(%"class.WTF::Vector.65"* %0, i32 %5, double* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.65", %"class.WTF::Vector.65"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds double, double* %8, i64 %10
  %12 = bitcast double* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast double* %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink7TextRun12ToStringViewEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink7TextRun12ToStringViewEv"}
!6 = !{!"branch_weights", i32 2000, i32 1}
