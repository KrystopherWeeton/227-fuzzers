; ModuleID = '../../media/base/channel_mixing_matrix.cc'
source_filename = "../../media/base/channel_mixing_matrix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::ChannelMixingMatrix" = type { %"class.std::__1::vector"*, i32, i32, i32, i32, %"class.std::__1::vector.8" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { float*, float*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::vector.0"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@.str = private unnamed_addr constant [47 x i8] c"output_layout != CHANNEL_LAYOUT_STEREO_DOWNMIX\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../media/base/channel_mixing_matrix.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"layout != CHANNEL_LAYOUT_NONE\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"layout <= CHANNEL_LAYOUT_MAX\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"layout != CHANNEL_LAYOUT_UNSUPPORTED\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"layout != CHANNEL_LAYOUT_DISCRETE\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"layout != CHANNEL_LAYOUT_STEREO_AND_KEYBOARD_MIC\00", align 1

@_ZN5media19ChannelMixingMatrixC1ENS_13ChannelLayoutEiS1_i = hidden unnamed_addr alias void (%"class.media::ChannelMixingMatrix"*, i32, i32, i32, i32), void (%"class.media::ChannelMixingMatrix"*, i32, i32, i32, i32)* @_ZN5media19ChannelMixingMatrixC2ENS_13ChannelLayoutEiS1_i
@_ZN5media19ChannelMixingMatrixD1Ev = hidden unnamed_addr alias void (%"class.media::ChannelMixingMatrix"*), void (%"class.media::ChannelMixingMatrix"*)* @_ZN5media19ChannelMixingMatrixD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19ChannelMixingMatrixC2ENS_13ChannelLayoutEiS1_i(%"class.media::ChannelMixingMatrix"* nocapture, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 2
  store i32 %2, i32* %10, align 4
  %11 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 3
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 4
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5
  %14 = bitcast %"class.std::__1::vector.8"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #10
  %15 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %16, align 8
  %17 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = icmp eq i32 %3, 16
  br i1 %18, label %20, label %19

19:                                               ; preds = %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  store i8* null, i8** %16, align 8
  br label %29

20:                                               ; preds = %5
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 16) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  store i8* %24, i8** %16, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 56, %"class.logging::CheckOpResult"* nonnull %7) #10
  %28 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %19, %20, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %30 = icmp eq i32 %1, 29
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  call fastcc void @_ZN5mediaL14ValidateLayoutENS_13ChannelLayoutE(i32 %1)
  br label %32

32:                                               ; preds = %29, %31
  %33 = icmp eq i32 %3, 29
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  call fastcc void @_ZN5mediaL14ValidateLayoutENS_13ChannelLayoutE(i32 %3)
  br label %35

35:                                               ; preds = %32, %34
  %36 = load i32, i32* %9, align 8
  switch i32 %36, label %45 [
    i32 11, label %37
    i32 12, label %41
  ]

37:                                               ; preds = %35
  %38 = load i32, i32* %11, align 8
  %39 = icmp eq i32 %38, 13
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  store i32 9, i32* %9, align 8
  br label %45

41:                                               ; preds = %35
  %42 = load i32, i32* %11, align 8
  %43 = icmp eq i32 %42, 14
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store i32 10, i32* %9, align 8
  br label %45

45:                                               ; preds = %35, %37, %41, %44, %40
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5mediaL14ValidateLayoutENS_13ChannelLayoutE(i32) unnamed_addr #0 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = alloca %"class.logging::CheckOpResult", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.logging::CheckOpResult", align 8
  %14 = alloca %"class.logging::CheckError", align 8
  %15 = alloca %"class.logging::CheckOpResult", align 8
  %16 = alloca %"class.logging::CheckError", align 8
  %17 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %0, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %1
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* %23, i8* %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 17, %"class.logging::CheckOpResult"* nonnull %7) #10
  %30 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %32 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp sgt i32 %0, 32
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %33, align 8
  br label %46

37:                                               ; preds = %31
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %0) #10
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 32) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* %38, i8* %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %33, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 18, %"class.logging::CheckOpResult"* nonnull %9) #10
  %45 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #10
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  %47 = bitcast %"class.logging::CheckOpResult"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %11, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  %49 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = icmp eq i32 %0, 1
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* null, i8** %48, align 8
  br label %61

52:                                               ; preds = %46
  %53 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #10
  %54 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* %53, i8* %54) #10
  %55 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  store i8* %56, i8** %48, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.logging::CheckError"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 19, %"class.logging::CheckOpResult"* nonnull %11) #10
  %60 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #10
  br label %61

61:                                               ; preds = %51, %52, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  %62 = bitcast %"class.logging::CheckOpResult"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #10
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %13, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %63, align 8
  %64 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64)
  %65 = icmp eq i32 %0, 29
  br i1 %65, label %67, label %66

66:                                               ; preds = %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  store i8* null, i8** %63, align 8
  br label %76

67:                                               ; preds = %61
  %68 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 29) #10
  %69 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 29) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %68, i8* %69) #10
  %70 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64)
  store i8* %71, i8** %63, align 8
  %72 = icmp eq i8* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = bitcast %"class.logging::CheckError"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 20, %"class.logging::CheckOpResult"* nonnull %13) #10
  %75 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %14) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #10
  br label %76

76:                                               ; preds = %66, %67, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #10
  %77 = bitcast %"class.logging::CheckOpResult"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #10
  %78 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %15, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %78, align 8
  %79 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = icmp eq i32 %0, 30
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  store i8* null, i8** %78, align 8
  br label %91

82:                                               ; preds = %76
  %83 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 30) #10
  %84 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 30) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0), i8* %83, i8* %84) #10
  %85 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  store i8* %86, i8** %78, align 8
  %87 = icmp eq i8* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.logging::CheckError"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 21, %"class.logging::CheckOpResult"* nonnull %15) #10
  %90 = call %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %16) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #10
  br label %91

91:                                               ; preds = %81, %82, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #10
  %92 = call i32 @_ZN5media27ChannelLayoutToChannelCountENS_13ChannelLayoutE(i32 %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19ChannelMixingMatrixD2Ev(%"class.media::ChannelMixingMatrix"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media19ChannelMixingMatrix26CreateTransformationMatrixEPNSt3__16vectorINS2_IfNS1_9allocatorIfEEEENS3_IS5_EEEE(%"class.media::ChannelMixingMatrix"*, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.0", align 8
  %4 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 0
  store %"class.std::__1::vector"* %1, %"class.std::__1::vector"** %4, align 8
  %5 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  tail call void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"* %1, i64 %7)
  %8 = load i32, i32* %5, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %2
  %11 = bitcast %"class.std::__1::vector.0"* %3 to i8*
  %12 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %3, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector.0"* %3 to i8**
  %15 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast float** %13 to i64*
  %17 = bitcast %"class.std::__1::vector.0"* %3 to i64*
  %18 = bitcast float** %15 to i64*
  %19 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %3, i64 0, i32 0, i32 0
  br label %25

20:                                               ; preds = %66, %2
  %21 = phi i32 [ %8, %2 ], [ %68, %66 ]
  %22 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 29
  br i1 %24, label %82, label %70

25:                                               ; preds = %10, %66
  %26 = phi i32 [ 0, %10 ], [ %67, %66 ]
  %27 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %28 = load i32, i32* %12, align 4
  %29 = sext i32 %28 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %30 = icmp eq i32 %28, 0
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = icmp slt i32 %28, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.0"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %34) #12
  unreachable

35:                                               ; preds = %31
  %36 = shl nsw i64 %29, 2
  %37 = call i8* @_Znwm(i64 %36) #11
  %38 = bitcast i8* %37 to float*
  store i8* %37, i8** %14, align 8
  %39 = getelementptr inbounds float, float* %38, i64 %29
  store float* %39, float** %15, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 %36, i1 false)
  %40 = ptrtoint float* %39 to i64
  store i64 %40, i64* %16, align 8
  br label %41

41:                                               ; preds = %25, %35
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 1
  %43 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %44, align 8
  %46 = icmp ult %"class.std::__1::vector.0"* %43, %45
  br i1 %46, label %47, label %60

47:                                               ; preds = %41
  %48 = bitcast %"class.std::__1::vector.0"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = load i64, i64* %17, align 8
  %50 = bitcast %"class.std::__1::vector.0"* %43 to i64*
  store i64 %49, i64* %50, align 8
  %51 = load i64, i64* %16, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %43, i64 0, i32 0, i32 1
  %53 = bitcast float** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = load i64, i64* %18, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %43, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast float** %55 to i64*
  store i64 %54, i64* %56, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %43, i64 1
  %58 = ptrtoint %"class.std::__1::vector.0"* %57 to i64
  %59 = bitcast %"class.std::__1::vector.0"** %42 to i64*
  store i64 %58, i64* %59, align 8
  br label %66

60:                                               ; preds = %41
  call void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %27, %"class.std::__1::vector.0"* nonnull dereferenceable(24) %3) #10
  %61 = load float*, float** %19, align 8
  %62 = icmp eq float* %61, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %60
  %64 = bitcast float* %61 to i8*
  %65 = ptrtoint float* %61 to i64
  store i64 %65, i64* %16, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %66

66:                                               ; preds = %47, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  %67 = add nuw nsw i32 %26, 1
  %68 = load i32, i32* %5, align 4
  %69 = icmp slt i32 %67, %68
  br i1 %69, label %25, label %20

70:                                               ; preds = %20
  %71 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 29
  br i1 %73, label %82, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5
  %76 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 1
  %77 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast i32** %76 to i64*
  %79 = bitcast %"class.std::__1::vector.8"* %75 to i64*
  %80 = bitcast i32** %77 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %75, i64 0, i32 0, i32 0
  br label %119

82:                                               ; preds = %70, %20
  %83 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %21, %84
  %86 = select i1 %85, i32* %5, i32* %83
  %87 = load i32, i32* %86, align 4
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %89, label %1473

89:                                               ; preds = %82
  %90 = zext i32 %87 to i64
  %91 = and i64 %90, 1
  %92 = icmp eq i32 %87, 1
  br i1 %92, label %1463, label %93

93:                                               ; preds = %89
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %111, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %112, %95 ]
  %98 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %100, i64 %96, i32 0, i32 0
  %102 = load float*, float** %101, align 8
  %103 = getelementptr inbounds float, float* %102, i64 %96
  store float 1.000000e+00, float* %103, align 4
  %104 = or i64 %96, 1
  %105 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %107, i64 %104, i32 0, i32 0
  %109 = load float*, float** %108, align 8
  %110 = getelementptr inbounds float, float* %109, i64 %104
  store float 1.000000e+00, float* %110, align 4
  %111 = add nuw nsw i64 %96, 2
  %112 = add i64 %97, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %1463, label %95

114:                                              ; preds = %205
  %115 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = load i32*, i32** %76, align 8
  %118 = icmp eq i32* %116, %117
  br i1 %118, label %1473, label %210

119:                                              ; preds = %208, %74
  %120 = phi i32 [ %23, %74 ], [ %209, %208 ]
  %121 = phi i32 [ 0, %74 ], [ %206, %208 ]
  %122 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %120, i32 %121) #10
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %205, label %124

124:                                              ; preds = %119
  %125 = load i32, i32* %71, align 8
  %126 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %125, i32 %121) #10
  %127 = icmp slt i32 %126, 0
  br i1 %127, label %136, label %128

128:                                              ; preds = %124
  %129 = icmp eq i32 %121, 2
  br i1 %129, label %130, label %196

130:                                              ; preds = %128
  %131 = load i32, i32* %22, align 8
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %133, label %196

133:                                              ; preds = %130
  %134 = load i32, i32* %71, align 8
  %135 = icmp eq i32 %134, 2
  br i1 %135, label %196, label %136

136:                                              ; preds = %133, %124
  %137 = load i32*, i32** %76, align 8
  %138 = load i32*, i32** %77, align 8
  %139 = icmp eq i32* %137, %138
  %140 = ptrtoint i32* %138 to i64
  br i1 %139, label %144, label %141

141:                                              ; preds = %136
  store i32 %121, i32* %137, align 4
  %142 = getelementptr inbounds i32, i32* %137, i64 1
  %143 = ptrtoint i32* %142 to i64
  store i64 %143, i64* %78, align 8
  br label %205

144:                                              ; preds = %136
  %145 = ptrtoint i32* %137 to i64
  %146 = load i64, i64* %79, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 2
  %149 = add nsw i64 %148, 1
  %150 = icmp ugt i64 %149, 4611686018427387903
  br i1 %150, label %151, label %153

151:                                              ; preds = %144
  %152 = bitcast %"class.std::__1::vector.8"* %75 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %152) #12
  unreachable

153:                                              ; preds = %144
  %154 = sub i64 %140, %146
  %155 = ashr exact i64 %154, 2
  %156 = icmp ult i64 %155, 2305843009213693951
  br i1 %156, label %157, label %165

157:                                              ; preds = %153
  %158 = ashr exact i64 %154, 1
  %159 = icmp ult i64 %158, %149
  %160 = select i1 %159, i64 %149, i64 %158
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %170, label %162

162:                                              ; preds = %157
  %163 = icmp ugt i64 %160, 4611686018427387903
  br i1 %163, label %164, label %165

164:                                              ; preds = %162
  call void @abort() #12
  unreachable

165:                                              ; preds = %162, %153
  %166 = phi i64 [ %160, %162 ], [ 4611686018427387903, %153 ]
  %167 = shl i64 %166, 2
  %168 = call i8* @_Znwm(i64 %167) #11
  %169 = bitcast i8* %168 to i32*
  br label %170

170:                                              ; preds = %165, %157
  %171 = phi i64 [ %166, %165 ], [ 0, %157 ]
  %172 = phi i32* [ %169, %165 ], [ null, %157 ]
  %173 = getelementptr inbounds i32, i32* %172, i64 %148
  %174 = getelementptr inbounds i32, i32* %172, i64 %171
  %175 = ptrtoint i32* %174 to i64
  store i32 %121, i32* %173, align 4
  %176 = getelementptr inbounds i32, i32* %173, i64 1
  %177 = ptrtoint i32* %176 to i64
  %178 = load i32*, i32** %81, align 8
  %179 = load i64, i64* %78, align 8
  %180 = ptrtoint i32* %178 to i64
  %181 = sub i64 %179, %180
  %182 = ashr exact i64 %181, 2
  %183 = sub nsw i64 0, %182
  %184 = getelementptr inbounds i32, i32* %173, i64 %183
  %185 = ptrtoint i32* %184 to i64
  %186 = icmp sgt i64 %181, 0
  br i1 %186, label %187, label %191

187:                                              ; preds = %170
  %188 = bitcast i32* %184 to i8*
  %189 = bitcast i32* %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 %181, i1 false) #10
  %190 = load i32*, i32** %81, align 8
  br label %191

191:                                              ; preds = %187, %170
  %192 = phi i32* [ %178, %170 ], [ %190, %187 ]
  store i64 %185, i64* %79, align 8
  store i64 %177, i64* %78, align 8
  store i64 %175, i64* %80, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %205, label %194

194:                                              ; preds = %191
  %195 = bitcast i32* %192 to i8*
  call void @_ZdlPv(i8* %195) #11
  br label %205

196:                                              ; preds = %133, %130, %128
  %197 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %198 = sext i32 %126 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 0
  %200 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %199, align 8
  %201 = sext i32 %122 to i64
  %202 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %200, i64 %198, i32 0, i32 0
  %203 = load float*, float** %202, align 8
  %204 = getelementptr inbounds float, float* %203, i64 %201
  store float 1.000000e+00, float* %204, align 4
  br label %205

205:                                              ; preds = %194, %191, %141, %196, %119
  %206 = add nuw nsw i32 %121, 1
  %207 = icmp eq i32 %206, 11
  br i1 %207, label %114, label %208

208:                                              ; preds = %205
  %209 = load i32, i32* %22, align 8
  br label %119

210:                                              ; preds = %114, %214
  %211 = phi i32* [ %215, %214 ], [ %116, %114 ]
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds i32, i32* %211, i64 1
  %216 = icmp eq i32* %215, %117
  br i1 %216, label %301, label %210

217:                                              ; preds = %210
  %218 = icmp eq i32* %211, %117
  br i1 %218, label %301, label %219

219:                                              ; preds = %217
  %220 = load i32, i32* %71, align 8
  %221 = icmp eq i32 %220, 2
  br i1 %221, label %222, label %227

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 2
  %226 = select i1 %225, float 5.000000e-01, float 0x3FE6A09E60000000
  br label %227

227:                                              ; preds = %222, %219
  %228 = phi float [ 0x3FE6A09E60000000, %219 ], [ %226, %222 ]
  %229 = load i32, i32* %22, align 8
  %230 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %229, i32 0) #10
  %231 = load i32, i32* %71, align 8
  %232 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %231, i32 2) #10
  %233 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %234 = sext i32 %232 to i64
  %235 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %233, i64 0, i32 0, i32 0
  %236 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %235, align 8
  %237 = sext i32 %230 to i64
  %238 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %236, i64 %234, i32 0, i32 0
  %239 = load float*, float** %238, align 8
  %240 = getelementptr inbounds float, float* %239, i64 %237
  store float %228, float* %240, align 4
  %241 = load i32*, i32** %115, align 8
  %242 = load i32*, i32** %76, align 8
  %243 = icmp eq i32* %241, %242
  %244 = ptrtoint i32* %242 to i64
  br i1 %243, label %252, label %245

245:                                              ; preds = %227, %249
  %246 = phi i32* [ %250, %249 ], [ %241, %227 ]
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %245
  %250 = getelementptr inbounds i32, i32* %246, i64 1
  %251 = icmp eq i32* %250, %242
  br i1 %251, label %252, label %245

252:                                              ; preds = %249, %245, %227
  %253 = phi i32* [ %241, %227 ], [ %246, %245 ], [ %242, %249 ]
  %254 = getelementptr inbounds i32, i32* %253, i64 1
  %255 = ptrtoint i32* %254 to i64
  %256 = sub i64 %244, %255
  %257 = ashr exact i64 %256, 2
  %258 = icmp eq i64 %256, 0
  br i1 %258, label %262, label %259

259:                                              ; preds = %252
  %260 = bitcast i32* %253 to i8*
  %261 = bitcast i32* %254 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %260, i8* align 4 %261, i64 %256, i1 false) #10
  br label %262

262:                                              ; preds = %252, %259
  %263 = getelementptr inbounds i32, i32* %253, i64 %257
  store i32* %263, i32** %76, align 8
  %264 = load i32, i32* %22, align 8
  %265 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %264, i32 1) #10
  %266 = load i32, i32* %71, align 8
  %267 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %266, i32 2) #10
  %268 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %269 = sext i32 %267 to i64
  %270 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %268, i64 0, i32 0, i32 0
  %271 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %270, align 8
  %272 = sext i32 %265 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %271, i64 %269, i32 0, i32 0
  %274 = load float*, float** %273, align 8
  %275 = getelementptr inbounds float, float* %274, i64 %272
  store float %228, float* %275, align 4
  %276 = load i32*, i32** %115, align 8
  %277 = load i32*, i32** %76, align 8
  %278 = icmp eq i32* %276, %277
  %279 = ptrtoint i32* %277 to i64
  br i1 %278, label %287, label %280

280:                                              ; preds = %262, %284
  %281 = phi i32* [ %285, %284 ], [ %276, %262 ]
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 1
  br i1 %283, label %287, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds i32, i32* %281, i64 1
  %286 = icmp eq i32* %285, %277
  br i1 %286, label %287, label %280

287:                                              ; preds = %284, %280, %262
  %288 = phi i32* [ %276, %262 ], [ %281, %280 ], [ %277, %284 ]
  %289 = getelementptr inbounds i32, i32* %288, i64 1
  %290 = ptrtoint i32* %289 to i64
  %291 = sub i64 %279, %290
  %292 = ashr exact i64 %291, 2
  %293 = icmp eq i64 %291, 0
  br i1 %293, label %298, label %294

294:                                              ; preds = %287
  %295 = bitcast i32* %288 to i8*
  %296 = bitcast i32* %289 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %295, i8* align 4 %296, i64 %291, i1 false) #10
  %297 = load i32*, i32** %115, align 8
  br label %298

298:                                              ; preds = %287, %294
  %299 = phi i32* [ %276, %287 ], [ %297, %294 ]
  %300 = getelementptr inbounds i32, i32* %288, i64 %292
  store i32* %300, i32** %76, align 8
  br label %301

301:                                              ; preds = %214, %217, %298
  %302 = phi i32* [ %117, %217 ], [ %300, %298 ], [ %117, %214 ]
  %303 = phi i32* [ %116, %217 ], [ %299, %298 ], [ %116, %214 ]
  %304 = icmp eq i32* %303, %302
  br i1 %304, label %366, label %305

305:                                              ; preds = %301, %309
  %306 = phi i32* [ %310, %309 ], [ %303, %301 ]
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 2
  br i1 %308, label %312, label %309

309:                                              ; preds = %305
  %310 = getelementptr inbounds i32, i32* %306, i64 1
  %311 = icmp eq i32* %310, %302
  br i1 %311, label %366, label %305

312:                                              ; preds = %305
  %313 = icmp eq i32* %306, %302
  br i1 %313, label %366, label %314

314:                                              ; preds = %312
  %315 = load i32, i32* %22, align 8
  %316 = icmp eq i32 %315, 2
  %317 = select i1 %316, float 1.000000e+00, float 0x3FE6A09E60000000
  %318 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %315, i32 2) #10
  %319 = load i32, i32* %71, align 8
  %320 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %319, i32 0) #10
  %321 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %322 = sext i32 %320 to i64
  %323 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %321, i64 0, i32 0, i32 0
  %324 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %323, align 8
  %325 = sext i32 %318 to i64
  %326 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %324, i64 %322, i32 0, i32 0
  %327 = load float*, float** %326, align 8
  %328 = getelementptr inbounds float, float* %327, i64 %325
  store float %317, float* %328, align 4
  %329 = load i32, i32* %22, align 8
  %330 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %329, i32 2) #10
  %331 = load i32, i32* %71, align 8
  %332 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %331, i32 1) #10
  %333 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %334 = sext i32 %332 to i64
  %335 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %333, i64 0, i32 0, i32 0
  %336 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %335, align 8
  %337 = sext i32 %330 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %336, i64 %334, i32 0, i32 0
  %339 = load float*, float** %338, align 8
  %340 = getelementptr inbounds float, float* %339, i64 %337
  store float %317, float* %340, align 4
  %341 = load i32*, i32** %115, align 8
  %342 = load i32*, i32** %76, align 8
  %343 = icmp eq i32* %341, %342
  %344 = ptrtoint i32* %342 to i64
  br i1 %343, label %352, label %345

345:                                              ; preds = %314, %349
  %346 = phi i32* [ %350, %349 ], [ %341, %314 ]
  %347 = load i32, i32* %346, align 4
  %348 = icmp eq i32 %347, 2
  br i1 %348, label %352, label %349

349:                                              ; preds = %345
  %350 = getelementptr inbounds i32, i32* %346, i64 1
  %351 = icmp eq i32* %350, %342
  br i1 %351, label %352, label %345

352:                                              ; preds = %349, %345, %314
  %353 = phi i32* [ %341, %314 ], [ %346, %345 ], [ %342, %349 ]
  %354 = getelementptr inbounds i32, i32* %353, i64 1
  %355 = ptrtoint i32* %354 to i64
  %356 = sub i64 %344, %355
  %357 = ashr exact i64 %356, 2
  %358 = icmp eq i64 %356, 0
  br i1 %358, label %363, label %359

359:                                              ; preds = %352
  %360 = bitcast i32* %353 to i8*
  %361 = bitcast i32* %354 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %360, i8* align 4 %361, i64 %356, i1 false) #10
  %362 = load i32*, i32** %115, align 8
  br label %363

363:                                              ; preds = %352, %359
  %364 = phi i32* [ %341, %352 ], [ %362, %359 ]
  %365 = getelementptr inbounds i32, i32* %353, i64 %357
  store i32* %365, i32** %76, align 8
  br label %366

366:                                              ; preds = %309, %301, %312, %363
  %367 = phi i32* [ %302, %312 ], [ %365, %363 ], [ %302, %301 ], [ %302, %309 ]
  %368 = phi i32* [ %303, %312 ], [ %364, %363 ], [ %303, %301 ], [ %303, %309 ]
  %369 = icmp eq i32* %368, %367
  br i1 %369, label %675, label %370

370:                                              ; preds = %366, %374
  %371 = phi i32* [ %375, %374 ], [ %368, %366 ]
  %372 = load i32, i32* %371, align 4
  %373 = icmp eq i32 %372, 4
  br i1 %373, label %377, label %374

374:                                              ; preds = %370
  %375 = getelementptr inbounds i32, i32* %371, i64 1
  %376 = icmp eq i32* %375, %367
  br i1 %376, label %675, label %370

377:                                              ; preds = %370
  %378 = icmp eq i32* %371, %367
  br i1 %378, label %675, label %379

379:                                              ; preds = %377
  %380 = load i32, i32* %71, align 8
  %381 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %380, i32 9) #10
  %382 = icmp sgt i32 %381, -1
  br i1 %382, label %383, label %458

383:                                              ; preds = %379
  %384 = load i32, i32* %22, align 8
  %385 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %384, i32 9) #10
  %386 = icmp sgt i32 %385, -1
  %387 = select i1 %386, float 0x3FE6A09E60000000, float 1.000000e+00
  %388 = load i32, i32* %22, align 8
  %389 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %388, i32 4) #10
  %390 = load i32, i32* %71, align 8
  %391 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %390, i32 9) #10
  %392 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %393 = sext i32 %391 to i64
  %394 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %392, i64 0, i32 0, i32 0
  %395 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %394, align 8
  %396 = sext i32 %389 to i64
  %397 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %395, i64 %393, i32 0, i32 0
  %398 = load float*, float** %397, align 8
  %399 = getelementptr inbounds float, float* %398, i64 %396
  store float %387, float* %399, align 4
  %400 = load i32*, i32** %115, align 8
  %401 = load i32*, i32** %76, align 8
  %402 = icmp eq i32* %400, %401
  %403 = ptrtoint i32* %401 to i64
  br i1 %402, label %411, label %404

404:                                              ; preds = %383, %408
  %405 = phi i32* [ %409, %408 ], [ %400, %383 ]
  %406 = load i32, i32* %405, align 4
  %407 = icmp eq i32 %406, 4
  br i1 %407, label %411, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds i32, i32* %405, i64 1
  %410 = icmp eq i32* %409, %401
  br i1 %410, label %411, label %404

411:                                              ; preds = %408, %404, %383
  %412 = phi i32* [ %400, %383 ], [ %405, %404 ], [ %401, %408 ]
  %413 = getelementptr inbounds i32, i32* %412, i64 1
  %414 = ptrtoint i32* %413 to i64
  %415 = sub i64 %403, %414
  %416 = ashr exact i64 %415, 2
  %417 = icmp eq i64 %415, 0
  br i1 %417, label %421, label %418

418:                                              ; preds = %411
  %419 = bitcast i32* %412 to i8*
  %420 = bitcast i32* %413 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %419, i8* align 4 %420, i64 %415, i1 false) #10
  br label %421

421:                                              ; preds = %411, %418
  %422 = getelementptr inbounds i32, i32* %412, i64 %416
  store i32* %422, i32** %76, align 8
  %423 = load i32, i32* %22, align 8
  %424 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %423, i32 5) #10
  %425 = load i32, i32* %71, align 8
  %426 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %425, i32 10) #10
  %427 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %428 = sext i32 %426 to i64
  %429 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %427, i64 0, i32 0, i32 0
  %430 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %429, align 8
  %431 = sext i32 %424 to i64
  %432 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %430, i64 %428, i32 0, i32 0
  %433 = load float*, float** %432, align 8
  %434 = getelementptr inbounds float, float* %433, i64 %431
  store float %387, float* %434, align 4
  %435 = load i32*, i32** %115, align 8
  %436 = load i32*, i32** %76, align 8
  %437 = icmp eq i32* %435, %436
  %438 = ptrtoint i32* %436 to i64
  br i1 %437, label %446, label %439

439:                                              ; preds = %421, %443
  %440 = phi i32* [ %444, %443 ], [ %435, %421 ]
  %441 = load i32, i32* %440, align 4
  %442 = icmp eq i32 %441, 5
  br i1 %442, label %446, label %443

443:                                              ; preds = %439
  %444 = getelementptr inbounds i32, i32* %440, i64 1
  %445 = icmp eq i32* %444, %436
  br i1 %445, label %446, label %439

446:                                              ; preds = %443, %439, %421
  %447 = phi i32* [ %435, %421 ], [ %440, %439 ], [ %436, %443 ]
  %448 = getelementptr inbounds i32, i32* %447, i64 1
  %449 = ptrtoint i32* %448 to i64
  %450 = sub i64 %438, %449
  %451 = ashr exact i64 %450, 2
  %452 = icmp eq i64 %450, 0
  br i1 %452, label %456, label %453

453:                                              ; preds = %446
  %454 = bitcast i32* %447 to i8*
  %455 = bitcast i32* %448 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %454, i8* align 4 %455, i64 %450, i1 false) #10
  br label %456

456:                                              ; preds = %446, %453
  %457 = getelementptr inbounds i32, i32* %447, i64 %451
  store i32* %457, i32** %76, align 8
  br label %675

458:                                              ; preds = %379
  %459 = load i32, i32* %71, align 8
  %460 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %459, i32 8) #10
  %461 = icmp sgt i32 %460, -1
  br i1 %461, label %462, label %533

462:                                              ; preds = %458
  %463 = load i32, i32* %22, align 8
  %464 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %463, i32 4) #10
  %465 = load i32, i32* %71, align 8
  %466 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %465, i32 8) #10
  %467 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %468 = sext i32 %466 to i64
  %469 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %467, i64 0, i32 0, i32 0
  %470 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %469, align 8
  %471 = sext i32 %464 to i64
  %472 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %470, i64 %468, i32 0, i32 0
  %473 = load float*, float** %472, align 8
  %474 = getelementptr inbounds float, float* %473, i64 %471
  store float 0x3FE6A09E60000000, float* %474, align 4
  %475 = load i32*, i32** %115, align 8
  %476 = load i32*, i32** %76, align 8
  %477 = icmp eq i32* %475, %476
  %478 = ptrtoint i32* %476 to i64
  br i1 %477, label %486, label %479

479:                                              ; preds = %462, %483
  %480 = phi i32* [ %484, %483 ], [ %475, %462 ]
  %481 = load i32, i32* %480, align 4
  %482 = icmp eq i32 %481, 4
  br i1 %482, label %486, label %483

483:                                              ; preds = %479
  %484 = getelementptr inbounds i32, i32* %480, i64 1
  %485 = icmp eq i32* %484, %476
  br i1 %485, label %486, label %479

486:                                              ; preds = %483, %479, %462
  %487 = phi i32* [ %475, %462 ], [ %480, %479 ], [ %476, %483 ]
  %488 = getelementptr inbounds i32, i32* %487, i64 1
  %489 = ptrtoint i32* %488 to i64
  %490 = sub i64 %478, %489
  %491 = ashr exact i64 %490, 2
  %492 = icmp eq i64 %490, 0
  br i1 %492, label %496, label %493

493:                                              ; preds = %486
  %494 = bitcast i32* %487 to i8*
  %495 = bitcast i32* %488 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %494, i8* align 4 %495, i64 %490, i1 false) #10
  br label %496

496:                                              ; preds = %486, %493
  %497 = getelementptr inbounds i32, i32* %487, i64 %491
  store i32* %497, i32** %76, align 8
  %498 = load i32, i32* %22, align 8
  %499 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %498, i32 5) #10
  %500 = load i32, i32* %71, align 8
  %501 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %500, i32 8) #10
  %502 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %503 = sext i32 %501 to i64
  %504 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %502, i64 0, i32 0, i32 0
  %505 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %504, align 8
  %506 = sext i32 %499 to i64
  %507 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %505, i64 %503, i32 0, i32 0
  %508 = load float*, float** %507, align 8
  %509 = getelementptr inbounds float, float* %508, i64 %506
  store float 0x3FE6A09E60000000, float* %509, align 4
  %510 = load i32*, i32** %115, align 8
  %511 = load i32*, i32** %76, align 8
  %512 = icmp eq i32* %510, %511
  %513 = ptrtoint i32* %511 to i64
  br i1 %512, label %521, label %514

514:                                              ; preds = %496, %518
  %515 = phi i32* [ %519, %518 ], [ %510, %496 ]
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i32 %516, 5
  br i1 %517, label %521, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds i32, i32* %515, i64 1
  %520 = icmp eq i32* %519, %511
  br i1 %520, label %521, label %514

521:                                              ; preds = %518, %514, %496
  %522 = phi i32* [ %510, %496 ], [ %515, %514 ], [ %511, %518 ]
  %523 = getelementptr inbounds i32, i32* %522, i64 1
  %524 = ptrtoint i32* %523 to i64
  %525 = sub i64 %513, %524
  %526 = ashr exact i64 %525, 2
  %527 = icmp eq i64 %525, 0
  br i1 %527, label %531, label %528

528:                                              ; preds = %521
  %529 = bitcast i32* %522 to i8*
  %530 = bitcast i32* %523 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %529, i8* align 4 %530, i64 %525, i1 false) #10
  br label %531

531:                                              ; preds = %521, %528
  %532 = getelementptr inbounds i32, i32* %522, i64 %526
  store i32* %532, i32** %76, align 8
  br label %675

533:                                              ; preds = %458
  %534 = load i32, i32* %71, align 8
  %535 = icmp sgt i32 %534, 2
  %536 = load i32, i32* %22, align 8
  %537 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %536, i32 4) #10
  %538 = load i32, i32* %71, align 8
  br i1 %535, label %539, label %607

539:                                              ; preds = %533
  %540 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %538, i32 0) #10
  %541 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %542 = sext i32 %540 to i64
  %543 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %541, i64 0, i32 0, i32 0
  %544 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %543, align 8
  %545 = sext i32 %537 to i64
  %546 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %544, i64 %542, i32 0, i32 0
  %547 = load float*, float** %546, align 8
  %548 = getelementptr inbounds float, float* %547, i64 %545
  store float 0x3FE6A09E60000000, float* %548, align 4
  %549 = load i32*, i32** %115, align 8
  %550 = load i32*, i32** %76, align 8
  %551 = icmp eq i32* %549, %550
  %552 = ptrtoint i32* %550 to i64
  br i1 %551, label %560, label %553

553:                                              ; preds = %539, %557
  %554 = phi i32* [ %558, %557 ], [ %549, %539 ]
  %555 = load i32, i32* %554, align 4
  %556 = icmp eq i32 %555, 4
  br i1 %556, label %560, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds i32, i32* %554, i64 1
  %559 = icmp eq i32* %558, %550
  br i1 %559, label %560, label %553

560:                                              ; preds = %557, %553, %539
  %561 = phi i32* [ %549, %539 ], [ %554, %553 ], [ %550, %557 ]
  %562 = getelementptr inbounds i32, i32* %561, i64 1
  %563 = ptrtoint i32* %562 to i64
  %564 = sub i64 %552, %563
  %565 = ashr exact i64 %564, 2
  %566 = icmp eq i64 %564, 0
  br i1 %566, label %570, label %567

567:                                              ; preds = %560
  %568 = bitcast i32* %561 to i8*
  %569 = bitcast i32* %562 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %568, i8* align 4 %569, i64 %564, i1 false) #10
  br label %570

570:                                              ; preds = %560, %567
  %571 = getelementptr inbounds i32, i32* %561, i64 %565
  store i32* %571, i32** %76, align 8
  %572 = load i32, i32* %22, align 8
  %573 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %572, i32 5) #10
  %574 = load i32, i32* %71, align 8
  %575 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %574, i32 1) #10
  %576 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %577 = sext i32 %575 to i64
  %578 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %576, i64 0, i32 0, i32 0
  %579 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %578, align 8
  %580 = sext i32 %573 to i64
  %581 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %579, i64 %577, i32 0, i32 0
  %582 = load float*, float** %581, align 8
  %583 = getelementptr inbounds float, float* %582, i64 %580
  store float 0x3FE6A09E60000000, float* %583, align 4
  %584 = load i32*, i32** %115, align 8
  %585 = load i32*, i32** %76, align 8
  %586 = icmp eq i32* %584, %585
  %587 = ptrtoint i32* %585 to i64
  br i1 %586, label %595, label %588

588:                                              ; preds = %570, %592
  %589 = phi i32* [ %593, %592 ], [ %584, %570 ]
  %590 = load i32, i32* %589, align 4
  %591 = icmp eq i32 %590, 5
  br i1 %591, label %595, label %592

592:                                              ; preds = %588
  %593 = getelementptr inbounds i32, i32* %589, i64 1
  %594 = icmp eq i32* %593, %585
  br i1 %594, label %595, label %588

595:                                              ; preds = %592, %588, %570
  %596 = phi i32* [ %584, %570 ], [ %589, %588 ], [ %585, %592 ]
  %597 = getelementptr inbounds i32, i32* %596, i64 1
  %598 = ptrtoint i32* %597 to i64
  %599 = sub i64 %587, %598
  %600 = ashr exact i64 %599, 2
  %601 = icmp eq i64 %599, 0
  br i1 %601, label %605, label %602

602:                                              ; preds = %595
  %603 = bitcast i32* %596 to i8*
  %604 = bitcast i32* %597 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %603, i8* align 4 %604, i64 %599, i1 false) #10
  br label %605

605:                                              ; preds = %595, %602
  %606 = getelementptr inbounds i32, i32* %596, i64 %600
  store i32* %606, i32** %76, align 8
  br label %675

607:                                              ; preds = %533
  %608 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %538, i32 2) #10
  %609 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %610 = sext i32 %608 to i64
  %611 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 0, i32 0, i32 0
  %612 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %611, align 8
  %613 = sext i32 %537 to i64
  %614 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %612, i64 %610, i32 0, i32 0
  %615 = load float*, float** %614, align 8
  %616 = getelementptr inbounds float, float* %615, i64 %613
  store float 0x3FE6A09E60000000, float* %616, align 4
  %617 = load i32*, i32** %115, align 8
  %618 = load i32*, i32** %76, align 8
  %619 = icmp eq i32* %617, %618
  %620 = ptrtoint i32* %618 to i64
  br i1 %619, label %628, label %621

621:                                              ; preds = %607, %625
  %622 = phi i32* [ %626, %625 ], [ %617, %607 ]
  %623 = load i32, i32* %622, align 4
  %624 = icmp eq i32 %623, 4
  br i1 %624, label %628, label %625

625:                                              ; preds = %621
  %626 = getelementptr inbounds i32, i32* %622, i64 1
  %627 = icmp eq i32* %626, %618
  br i1 %627, label %628, label %621

628:                                              ; preds = %625, %621, %607
  %629 = phi i32* [ %617, %607 ], [ %622, %621 ], [ %618, %625 ]
  %630 = getelementptr inbounds i32, i32* %629, i64 1
  %631 = ptrtoint i32* %630 to i64
  %632 = sub i64 %620, %631
  %633 = ashr exact i64 %632, 2
  %634 = icmp eq i64 %632, 0
  br i1 %634, label %638, label %635

635:                                              ; preds = %628
  %636 = bitcast i32* %629 to i8*
  %637 = bitcast i32* %630 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %636, i8* align 4 %637, i64 %632, i1 false) #10
  br label %638

638:                                              ; preds = %628, %635
  %639 = getelementptr inbounds i32, i32* %629, i64 %633
  store i32* %639, i32** %76, align 8
  %640 = load i32, i32* %22, align 8
  %641 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %640, i32 5) #10
  %642 = load i32, i32* %71, align 8
  %643 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %642, i32 2) #10
  %644 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %645 = sext i32 %643 to i64
  %646 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %644, i64 0, i32 0, i32 0
  %647 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %646, align 8
  %648 = sext i32 %641 to i64
  %649 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %647, i64 %645, i32 0, i32 0
  %650 = load float*, float** %649, align 8
  %651 = getelementptr inbounds float, float* %650, i64 %648
  store float 0x3FE6A09E60000000, float* %651, align 4
  %652 = load i32*, i32** %115, align 8
  %653 = load i32*, i32** %76, align 8
  %654 = icmp eq i32* %652, %653
  %655 = ptrtoint i32* %653 to i64
  br i1 %654, label %663, label %656

656:                                              ; preds = %638, %660
  %657 = phi i32* [ %661, %660 ], [ %652, %638 ]
  %658 = load i32, i32* %657, align 4
  %659 = icmp eq i32 %658, 5
  br i1 %659, label %663, label %660

660:                                              ; preds = %656
  %661 = getelementptr inbounds i32, i32* %657, i64 1
  %662 = icmp eq i32* %661, %653
  br i1 %662, label %663, label %656

663:                                              ; preds = %660, %656, %638
  %664 = phi i32* [ %652, %638 ], [ %657, %656 ], [ %653, %660 ]
  %665 = getelementptr inbounds i32, i32* %664, i64 1
  %666 = ptrtoint i32* %665 to i64
  %667 = sub i64 %655, %666
  %668 = ashr exact i64 %667, 2
  %669 = icmp eq i64 %667, 0
  br i1 %669, label %673, label %670

670:                                              ; preds = %663
  %671 = bitcast i32* %664 to i8*
  %672 = bitcast i32* %665 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %671, i8* align 4 %672, i64 %667, i1 false) #10
  br label %673

673:                                              ; preds = %663, %670
  %674 = getelementptr inbounds i32, i32* %664, i64 %668
  store i32* %674, i32** %76, align 8
  br label %675

675:                                              ; preds = %374, %366, %377, %456, %605, %673, %531
  %676 = phi i32* [ %367, %377 ], [ %457, %456 ], [ %606, %605 ], [ %674, %673 ], [ %532, %531 ], [ %367, %366 ], [ %367, %374 ]
  %677 = load i32*, i32** %115, align 8
  %678 = icmp eq i32* %677, %676
  br i1 %678, label %984, label %679

679:                                              ; preds = %675, %683
  %680 = phi i32* [ %684, %683 ], [ %677, %675 ]
  %681 = load i32, i32* %680, align 4
  %682 = icmp eq i32 %681, 9
  br i1 %682, label %686, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds i32, i32* %680, i64 1
  %685 = icmp eq i32* %684, %676
  br i1 %685, label %984, label %679

686:                                              ; preds = %679
  %687 = icmp eq i32* %680, %676
  br i1 %687, label %984, label %688

688:                                              ; preds = %686
  %689 = load i32, i32* %71, align 8
  %690 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %689, i32 4) #10
  %691 = icmp sgt i32 %690, -1
  br i1 %691, label %692, label %767

692:                                              ; preds = %688
  %693 = load i32, i32* %22, align 8
  %694 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %693, i32 4) #10
  %695 = icmp sgt i32 %694, -1
  %696 = select i1 %695, float 0x3FE6A09E60000000, float 1.000000e+00
  %697 = load i32, i32* %22, align 8
  %698 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %697, i32 9) #10
  %699 = load i32, i32* %71, align 8
  %700 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %699, i32 4) #10
  %701 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %702 = sext i32 %700 to i64
  %703 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %701, i64 0, i32 0, i32 0
  %704 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %703, align 8
  %705 = sext i32 %698 to i64
  %706 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %704, i64 %702, i32 0, i32 0
  %707 = load float*, float** %706, align 8
  %708 = getelementptr inbounds float, float* %707, i64 %705
  store float %696, float* %708, align 4
  %709 = load i32*, i32** %115, align 8
  %710 = load i32*, i32** %76, align 8
  %711 = icmp eq i32* %709, %710
  %712 = ptrtoint i32* %710 to i64
  br i1 %711, label %720, label %713

713:                                              ; preds = %692, %717
  %714 = phi i32* [ %718, %717 ], [ %709, %692 ]
  %715 = load i32, i32* %714, align 4
  %716 = icmp eq i32 %715, 9
  br i1 %716, label %720, label %717

717:                                              ; preds = %713
  %718 = getelementptr inbounds i32, i32* %714, i64 1
  %719 = icmp eq i32* %718, %710
  br i1 %719, label %720, label %713

720:                                              ; preds = %717, %713, %692
  %721 = phi i32* [ %709, %692 ], [ %714, %713 ], [ %710, %717 ]
  %722 = getelementptr inbounds i32, i32* %721, i64 1
  %723 = ptrtoint i32* %722 to i64
  %724 = sub i64 %712, %723
  %725 = ashr exact i64 %724, 2
  %726 = icmp eq i64 %724, 0
  br i1 %726, label %730, label %727

727:                                              ; preds = %720
  %728 = bitcast i32* %721 to i8*
  %729 = bitcast i32* %722 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %728, i8* align 4 %729, i64 %724, i1 false) #10
  br label %730

730:                                              ; preds = %720, %727
  %731 = getelementptr inbounds i32, i32* %721, i64 %725
  store i32* %731, i32** %76, align 8
  %732 = load i32, i32* %22, align 8
  %733 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %732, i32 10) #10
  %734 = load i32, i32* %71, align 8
  %735 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %734, i32 5) #10
  %736 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %737 = sext i32 %735 to i64
  %738 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %736, i64 0, i32 0, i32 0
  %739 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %738, align 8
  %740 = sext i32 %733 to i64
  %741 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %739, i64 %737, i32 0, i32 0
  %742 = load float*, float** %741, align 8
  %743 = getelementptr inbounds float, float* %742, i64 %740
  store float %696, float* %743, align 4
  %744 = load i32*, i32** %115, align 8
  %745 = load i32*, i32** %76, align 8
  %746 = icmp eq i32* %744, %745
  %747 = ptrtoint i32* %745 to i64
  br i1 %746, label %755, label %748

748:                                              ; preds = %730, %752
  %749 = phi i32* [ %753, %752 ], [ %744, %730 ]
  %750 = load i32, i32* %749, align 4
  %751 = icmp eq i32 %750, 10
  br i1 %751, label %755, label %752

752:                                              ; preds = %748
  %753 = getelementptr inbounds i32, i32* %749, i64 1
  %754 = icmp eq i32* %753, %745
  br i1 %754, label %755, label %748

755:                                              ; preds = %752, %748, %730
  %756 = phi i32* [ %744, %730 ], [ %749, %748 ], [ %745, %752 ]
  %757 = getelementptr inbounds i32, i32* %756, i64 1
  %758 = ptrtoint i32* %757 to i64
  %759 = sub i64 %747, %758
  %760 = ashr exact i64 %759, 2
  %761 = icmp eq i64 %759, 0
  br i1 %761, label %765, label %762

762:                                              ; preds = %755
  %763 = bitcast i32* %756 to i8*
  %764 = bitcast i32* %757 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %763, i8* align 4 %764, i64 %759, i1 false) #10
  br label %765

765:                                              ; preds = %755, %762
  %766 = getelementptr inbounds i32, i32* %756, i64 %760
  store i32* %766, i32** %76, align 8
  br label %984

767:                                              ; preds = %688
  %768 = load i32, i32* %71, align 8
  %769 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %768, i32 8) #10
  %770 = icmp sgt i32 %769, -1
  br i1 %770, label %771, label %842

771:                                              ; preds = %767
  %772 = load i32, i32* %22, align 8
  %773 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %772, i32 9) #10
  %774 = load i32, i32* %71, align 8
  %775 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %774, i32 8) #10
  %776 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %777 = sext i32 %775 to i64
  %778 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %776, i64 0, i32 0, i32 0
  %779 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %778, align 8
  %780 = sext i32 %773 to i64
  %781 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %779, i64 %777, i32 0, i32 0
  %782 = load float*, float** %781, align 8
  %783 = getelementptr inbounds float, float* %782, i64 %780
  store float 0x3FE6A09E60000000, float* %783, align 4
  %784 = load i32*, i32** %115, align 8
  %785 = load i32*, i32** %76, align 8
  %786 = icmp eq i32* %784, %785
  %787 = ptrtoint i32* %785 to i64
  br i1 %786, label %795, label %788

788:                                              ; preds = %771, %792
  %789 = phi i32* [ %793, %792 ], [ %784, %771 ]
  %790 = load i32, i32* %789, align 4
  %791 = icmp eq i32 %790, 9
  br i1 %791, label %795, label %792

792:                                              ; preds = %788
  %793 = getelementptr inbounds i32, i32* %789, i64 1
  %794 = icmp eq i32* %793, %785
  br i1 %794, label %795, label %788

795:                                              ; preds = %792, %788, %771
  %796 = phi i32* [ %784, %771 ], [ %789, %788 ], [ %785, %792 ]
  %797 = getelementptr inbounds i32, i32* %796, i64 1
  %798 = ptrtoint i32* %797 to i64
  %799 = sub i64 %787, %798
  %800 = ashr exact i64 %799, 2
  %801 = icmp eq i64 %799, 0
  br i1 %801, label %805, label %802

802:                                              ; preds = %795
  %803 = bitcast i32* %796 to i8*
  %804 = bitcast i32* %797 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %803, i8* align 4 %804, i64 %799, i1 false) #10
  br label %805

805:                                              ; preds = %795, %802
  %806 = getelementptr inbounds i32, i32* %796, i64 %800
  store i32* %806, i32** %76, align 8
  %807 = load i32, i32* %22, align 8
  %808 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %807, i32 10) #10
  %809 = load i32, i32* %71, align 8
  %810 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %809, i32 8) #10
  %811 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %812 = sext i32 %810 to i64
  %813 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %811, i64 0, i32 0, i32 0
  %814 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %813, align 8
  %815 = sext i32 %808 to i64
  %816 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %814, i64 %812, i32 0, i32 0
  %817 = load float*, float** %816, align 8
  %818 = getelementptr inbounds float, float* %817, i64 %815
  store float 0x3FE6A09E60000000, float* %818, align 4
  %819 = load i32*, i32** %115, align 8
  %820 = load i32*, i32** %76, align 8
  %821 = icmp eq i32* %819, %820
  %822 = ptrtoint i32* %820 to i64
  br i1 %821, label %830, label %823

823:                                              ; preds = %805, %827
  %824 = phi i32* [ %828, %827 ], [ %819, %805 ]
  %825 = load i32, i32* %824, align 4
  %826 = icmp eq i32 %825, 10
  br i1 %826, label %830, label %827

827:                                              ; preds = %823
  %828 = getelementptr inbounds i32, i32* %824, i64 1
  %829 = icmp eq i32* %828, %820
  br i1 %829, label %830, label %823

830:                                              ; preds = %827, %823, %805
  %831 = phi i32* [ %819, %805 ], [ %824, %823 ], [ %820, %827 ]
  %832 = getelementptr inbounds i32, i32* %831, i64 1
  %833 = ptrtoint i32* %832 to i64
  %834 = sub i64 %822, %833
  %835 = ashr exact i64 %834, 2
  %836 = icmp eq i64 %834, 0
  br i1 %836, label %840, label %837

837:                                              ; preds = %830
  %838 = bitcast i32* %831 to i8*
  %839 = bitcast i32* %832 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %838, i8* align 4 %839, i64 %834, i1 false) #10
  br label %840

840:                                              ; preds = %830, %837
  %841 = getelementptr inbounds i32, i32* %831, i64 %835
  store i32* %841, i32** %76, align 8
  br label %984

842:                                              ; preds = %767
  %843 = load i32, i32* %71, align 8
  %844 = icmp sgt i32 %843, 2
  %845 = load i32, i32* %22, align 8
  %846 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %845, i32 9) #10
  %847 = load i32, i32* %71, align 8
  br i1 %844, label %848, label %916

848:                                              ; preds = %842
  %849 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %847, i32 0) #10
  %850 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %851 = sext i32 %849 to i64
  %852 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %850, i64 0, i32 0, i32 0
  %853 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %852, align 8
  %854 = sext i32 %846 to i64
  %855 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %853, i64 %851, i32 0, i32 0
  %856 = load float*, float** %855, align 8
  %857 = getelementptr inbounds float, float* %856, i64 %854
  store float 0x3FE6A09E60000000, float* %857, align 4
  %858 = load i32*, i32** %115, align 8
  %859 = load i32*, i32** %76, align 8
  %860 = icmp eq i32* %858, %859
  %861 = ptrtoint i32* %859 to i64
  br i1 %860, label %869, label %862

862:                                              ; preds = %848, %866
  %863 = phi i32* [ %867, %866 ], [ %858, %848 ]
  %864 = load i32, i32* %863, align 4
  %865 = icmp eq i32 %864, 9
  br i1 %865, label %869, label %866

866:                                              ; preds = %862
  %867 = getelementptr inbounds i32, i32* %863, i64 1
  %868 = icmp eq i32* %867, %859
  br i1 %868, label %869, label %862

869:                                              ; preds = %866, %862, %848
  %870 = phi i32* [ %858, %848 ], [ %863, %862 ], [ %859, %866 ]
  %871 = getelementptr inbounds i32, i32* %870, i64 1
  %872 = ptrtoint i32* %871 to i64
  %873 = sub i64 %861, %872
  %874 = ashr exact i64 %873, 2
  %875 = icmp eq i64 %873, 0
  br i1 %875, label %879, label %876

876:                                              ; preds = %869
  %877 = bitcast i32* %870 to i8*
  %878 = bitcast i32* %871 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %877, i8* align 4 %878, i64 %873, i1 false) #10
  br label %879

879:                                              ; preds = %869, %876
  %880 = getelementptr inbounds i32, i32* %870, i64 %874
  store i32* %880, i32** %76, align 8
  %881 = load i32, i32* %22, align 8
  %882 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %881, i32 10) #10
  %883 = load i32, i32* %71, align 8
  %884 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %883, i32 1) #10
  %885 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %886 = sext i32 %884 to i64
  %887 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %885, i64 0, i32 0, i32 0
  %888 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %887, align 8
  %889 = sext i32 %882 to i64
  %890 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %888, i64 %886, i32 0, i32 0
  %891 = load float*, float** %890, align 8
  %892 = getelementptr inbounds float, float* %891, i64 %889
  store float 0x3FE6A09E60000000, float* %892, align 4
  %893 = load i32*, i32** %115, align 8
  %894 = load i32*, i32** %76, align 8
  %895 = icmp eq i32* %893, %894
  %896 = ptrtoint i32* %894 to i64
  br i1 %895, label %904, label %897

897:                                              ; preds = %879, %901
  %898 = phi i32* [ %902, %901 ], [ %893, %879 ]
  %899 = load i32, i32* %898, align 4
  %900 = icmp eq i32 %899, 10
  br i1 %900, label %904, label %901

901:                                              ; preds = %897
  %902 = getelementptr inbounds i32, i32* %898, i64 1
  %903 = icmp eq i32* %902, %894
  br i1 %903, label %904, label %897

904:                                              ; preds = %901, %897, %879
  %905 = phi i32* [ %893, %879 ], [ %898, %897 ], [ %894, %901 ]
  %906 = getelementptr inbounds i32, i32* %905, i64 1
  %907 = ptrtoint i32* %906 to i64
  %908 = sub i64 %896, %907
  %909 = ashr exact i64 %908, 2
  %910 = icmp eq i64 %908, 0
  br i1 %910, label %914, label %911

911:                                              ; preds = %904
  %912 = bitcast i32* %905 to i8*
  %913 = bitcast i32* %906 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %912, i8* align 4 %913, i64 %908, i1 false) #10
  br label %914

914:                                              ; preds = %904, %911
  %915 = getelementptr inbounds i32, i32* %905, i64 %909
  store i32* %915, i32** %76, align 8
  br label %984

916:                                              ; preds = %842
  %917 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %847, i32 2) #10
  %918 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %919 = sext i32 %917 to i64
  %920 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %918, i64 0, i32 0, i32 0
  %921 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %920, align 8
  %922 = sext i32 %846 to i64
  %923 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %921, i64 %919, i32 0, i32 0
  %924 = load float*, float** %923, align 8
  %925 = getelementptr inbounds float, float* %924, i64 %922
  store float 0x3FE6A09E60000000, float* %925, align 4
  %926 = load i32*, i32** %115, align 8
  %927 = load i32*, i32** %76, align 8
  %928 = icmp eq i32* %926, %927
  %929 = ptrtoint i32* %927 to i64
  br i1 %928, label %937, label %930

930:                                              ; preds = %916, %934
  %931 = phi i32* [ %935, %934 ], [ %926, %916 ]
  %932 = load i32, i32* %931, align 4
  %933 = icmp eq i32 %932, 9
  br i1 %933, label %937, label %934

934:                                              ; preds = %930
  %935 = getelementptr inbounds i32, i32* %931, i64 1
  %936 = icmp eq i32* %935, %927
  br i1 %936, label %937, label %930

937:                                              ; preds = %934, %930, %916
  %938 = phi i32* [ %926, %916 ], [ %931, %930 ], [ %927, %934 ]
  %939 = getelementptr inbounds i32, i32* %938, i64 1
  %940 = ptrtoint i32* %939 to i64
  %941 = sub i64 %929, %940
  %942 = ashr exact i64 %941, 2
  %943 = icmp eq i64 %941, 0
  br i1 %943, label %947, label %944

944:                                              ; preds = %937
  %945 = bitcast i32* %938 to i8*
  %946 = bitcast i32* %939 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %945, i8* align 4 %946, i64 %941, i1 false) #10
  br label %947

947:                                              ; preds = %937, %944
  %948 = getelementptr inbounds i32, i32* %938, i64 %942
  store i32* %948, i32** %76, align 8
  %949 = load i32, i32* %22, align 8
  %950 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %949, i32 10) #10
  %951 = load i32, i32* %71, align 8
  %952 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %951, i32 2) #10
  %953 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %954 = sext i32 %952 to i64
  %955 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %953, i64 0, i32 0, i32 0
  %956 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %955, align 8
  %957 = sext i32 %950 to i64
  %958 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %956, i64 %954, i32 0, i32 0
  %959 = load float*, float** %958, align 8
  %960 = getelementptr inbounds float, float* %959, i64 %957
  store float 0x3FE6A09E60000000, float* %960, align 4
  %961 = load i32*, i32** %115, align 8
  %962 = load i32*, i32** %76, align 8
  %963 = icmp eq i32* %961, %962
  %964 = ptrtoint i32* %962 to i64
  br i1 %963, label %972, label %965

965:                                              ; preds = %947, %969
  %966 = phi i32* [ %970, %969 ], [ %961, %947 ]
  %967 = load i32, i32* %966, align 4
  %968 = icmp eq i32 %967, 10
  br i1 %968, label %972, label %969

969:                                              ; preds = %965
  %970 = getelementptr inbounds i32, i32* %966, i64 1
  %971 = icmp eq i32* %970, %962
  br i1 %971, label %972, label %965

972:                                              ; preds = %969, %965, %947
  %973 = phi i32* [ %961, %947 ], [ %966, %965 ], [ %962, %969 ]
  %974 = getelementptr inbounds i32, i32* %973, i64 1
  %975 = ptrtoint i32* %974 to i64
  %976 = sub i64 %964, %975
  %977 = ashr exact i64 %976, 2
  %978 = icmp eq i64 %976, 0
  br i1 %978, label %982, label %979

979:                                              ; preds = %972
  %980 = bitcast i32* %973 to i8*
  %981 = bitcast i32* %974 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %980, i8* align 4 %981, i64 %976, i1 false) #10
  br label %982

982:                                              ; preds = %972, %979
  %983 = getelementptr inbounds i32, i32* %973, i64 %977
  store i32* %983, i32** %76, align 8
  br label %984

984:                                              ; preds = %683, %675, %686, %765, %914, %982, %840
  %985 = phi i32* [ %676, %686 ], [ %766, %765 ], [ %915, %914 ], [ %983, %982 ], [ %841, %840 ], [ %676, %675 ], [ %676, %683 ]
  %986 = load i32*, i32** %115, align 8
  %987 = icmp eq i32* %986, %985
  br i1 %987, label %1185, label %988

988:                                              ; preds = %984, %992
  %989 = phi i32* [ %993, %992 ], [ %986, %984 ]
  %990 = load i32, i32* %989, align 4
  %991 = icmp eq i32 %990, 8
  br i1 %991, label %995, label %992

992:                                              ; preds = %988
  %993 = getelementptr inbounds i32, i32* %989, i64 1
  %994 = icmp eq i32* %993, %985
  br i1 %994, label %1185, label %988

995:                                              ; preds = %988
  %996 = icmp eq i32* %989, %985
  br i1 %996, label %1185, label %997

997:                                              ; preds = %995
  %998 = load i32, i32* %71, align 8
  %999 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %998, i32 4) #10
  %1000 = icmp sgt i32 %999, -1
  br i1 %1000, label %1001, label %1049

1001:                                             ; preds = %997
  %1002 = load i32, i32* %22, align 8
  %1003 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1002, i32 8) #10
  %1004 = load i32, i32* %71, align 8
  %1005 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1004, i32 4) #10
  %1006 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1007 = sext i32 %1005 to i64
  %1008 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1006, i64 0, i32 0, i32 0
  %1009 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1008, align 8
  %1010 = sext i32 %1003 to i64
  %1011 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1009, i64 %1007, i32 0, i32 0
  %1012 = load float*, float** %1011, align 8
  %1013 = getelementptr inbounds float, float* %1012, i64 %1010
  store float 0x3FE6A09E60000000, float* %1013, align 4
  %1014 = load i32, i32* %22, align 8
  %1015 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1014, i32 8) #10
  %1016 = load i32, i32* %71, align 8
  %1017 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1016, i32 5) #10
  %1018 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1019 = sext i32 %1017 to i64
  %1020 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1018, i64 0, i32 0, i32 0
  %1021 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1020, align 8
  %1022 = sext i32 %1015 to i64
  %1023 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1021, i64 %1019, i32 0, i32 0
  %1024 = load float*, float** %1023, align 8
  %1025 = getelementptr inbounds float, float* %1024, i64 %1022
  store float 0x3FE6A09E60000000, float* %1025, align 4
  %1026 = load i32*, i32** %115, align 8
  %1027 = load i32*, i32** %76, align 8
  %1028 = icmp eq i32* %1026, %1027
  %1029 = ptrtoint i32* %1027 to i64
  br i1 %1028, label %1037, label %1030

1030:                                             ; preds = %1001, %1034
  %1031 = phi i32* [ %1035, %1034 ], [ %1026, %1001 ]
  %1032 = load i32, i32* %1031, align 4
  %1033 = icmp eq i32 %1032, 8
  br i1 %1033, label %1037, label %1034

1034:                                             ; preds = %1030
  %1035 = getelementptr inbounds i32, i32* %1031, i64 1
  %1036 = icmp eq i32* %1035, %1027
  br i1 %1036, label %1037, label %1030

1037:                                             ; preds = %1034, %1030, %1001
  %1038 = phi i32* [ %1026, %1001 ], [ %1031, %1030 ], [ %1027, %1034 ]
  %1039 = getelementptr inbounds i32, i32* %1038, i64 1
  %1040 = ptrtoint i32* %1039 to i64
  %1041 = sub i64 %1029, %1040
  %1042 = ashr exact i64 %1041, 2
  %1043 = icmp eq i64 %1041, 0
  br i1 %1043, label %1047, label %1044

1044:                                             ; preds = %1037
  %1045 = bitcast i32* %1038 to i8*
  %1046 = bitcast i32* %1039 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1045, i8* align 4 %1046, i64 %1041, i1 false) #10
  br label %1047

1047:                                             ; preds = %1037, %1044
  %1048 = getelementptr inbounds i32, i32* %1038, i64 %1042
  store i32* %1048, i32** %76, align 8
  br label %1185

1049:                                             ; preds = %997
  %1050 = load i32, i32* %71, align 8
  %1051 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1050, i32 9) #10
  %1052 = icmp sgt i32 %1051, -1
  br i1 %1052, label %1053, label %1101

1053:                                             ; preds = %1049
  %1054 = load i32, i32* %22, align 8
  %1055 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1054, i32 8) #10
  %1056 = load i32, i32* %71, align 8
  %1057 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1056, i32 9) #10
  %1058 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1059 = sext i32 %1057 to i64
  %1060 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1058, i64 0, i32 0, i32 0
  %1061 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1060, align 8
  %1062 = sext i32 %1055 to i64
  %1063 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1061, i64 %1059, i32 0, i32 0
  %1064 = load float*, float** %1063, align 8
  %1065 = getelementptr inbounds float, float* %1064, i64 %1062
  store float 0x3FE6A09E60000000, float* %1065, align 4
  %1066 = load i32, i32* %22, align 8
  %1067 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1066, i32 8) #10
  %1068 = load i32, i32* %71, align 8
  %1069 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1068, i32 10) #10
  %1070 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1071 = sext i32 %1069 to i64
  %1072 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1070, i64 0, i32 0, i32 0
  %1073 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1072, align 8
  %1074 = sext i32 %1067 to i64
  %1075 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1073, i64 %1071, i32 0, i32 0
  %1076 = load float*, float** %1075, align 8
  %1077 = getelementptr inbounds float, float* %1076, i64 %1074
  store float 0x3FE6A09E60000000, float* %1077, align 4
  %1078 = load i32*, i32** %115, align 8
  %1079 = load i32*, i32** %76, align 8
  %1080 = icmp eq i32* %1078, %1079
  %1081 = ptrtoint i32* %1079 to i64
  br i1 %1080, label %1089, label %1082

1082:                                             ; preds = %1053, %1086
  %1083 = phi i32* [ %1087, %1086 ], [ %1078, %1053 ]
  %1084 = load i32, i32* %1083, align 4
  %1085 = icmp eq i32 %1084, 8
  br i1 %1085, label %1089, label %1086

1086:                                             ; preds = %1082
  %1087 = getelementptr inbounds i32, i32* %1083, i64 1
  %1088 = icmp eq i32* %1087, %1079
  br i1 %1088, label %1089, label %1082

1089:                                             ; preds = %1086, %1082, %1053
  %1090 = phi i32* [ %1078, %1053 ], [ %1083, %1082 ], [ %1079, %1086 ]
  %1091 = getelementptr inbounds i32, i32* %1090, i64 1
  %1092 = ptrtoint i32* %1091 to i64
  %1093 = sub i64 %1081, %1092
  %1094 = ashr exact i64 %1093, 2
  %1095 = icmp eq i64 %1093, 0
  br i1 %1095, label %1099, label %1096

1096:                                             ; preds = %1089
  %1097 = bitcast i32* %1090 to i8*
  %1098 = bitcast i32* %1091 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1097, i8* align 4 %1098, i64 %1093, i1 false) #10
  br label %1099

1099:                                             ; preds = %1089, %1096
  %1100 = getelementptr inbounds i32, i32* %1090, i64 %1094
  store i32* %1100, i32** %76, align 8
  br label %1185

1101:                                             ; preds = %1049
  %1102 = load i32, i32* %71, align 8
  %1103 = icmp sgt i32 %1102, 2
  %1104 = load i32, i32* %22, align 8
  %1105 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1104, i32 8) #10
  %1106 = load i32, i32* %71, align 8
  br i1 %1103, label %1107, label %1152

1107:                                             ; preds = %1101
  %1108 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1106, i32 0) #10
  %1109 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1110 = sext i32 %1108 to i64
  %1111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1109, i64 0, i32 0, i32 0
  %1112 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1111, align 8
  %1113 = sext i32 %1105 to i64
  %1114 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1112, i64 %1110, i32 0, i32 0
  %1115 = load float*, float** %1114, align 8
  %1116 = getelementptr inbounds float, float* %1115, i64 %1113
  store float 0x3FE6A09E60000000, float* %1116, align 4
  %1117 = load i32, i32* %22, align 8
  %1118 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1117, i32 8) #10
  %1119 = load i32, i32* %71, align 8
  %1120 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1119, i32 1) #10
  %1121 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1122 = sext i32 %1120 to i64
  %1123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1121, i64 0, i32 0, i32 0
  %1124 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1123, align 8
  %1125 = sext i32 %1118 to i64
  %1126 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1124, i64 %1122, i32 0, i32 0
  %1127 = load float*, float** %1126, align 8
  %1128 = getelementptr inbounds float, float* %1127, i64 %1125
  store float 0x3FE6A09E60000000, float* %1128, align 4
  %1129 = load i32*, i32** %115, align 8
  %1130 = load i32*, i32** %76, align 8
  %1131 = icmp eq i32* %1129, %1130
  %1132 = ptrtoint i32* %1130 to i64
  br i1 %1131, label %1140, label %1133

1133:                                             ; preds = %1107, %1137
  %1134 = phi i32* [ %1138, %1137 ], [ %1129, %1107 ]
  %1135 = load i32, i32* %1134, align 4
  %1136 = icmp eq i32 %1135, 8
  br i1 %1136, label %1140, label %1137

1137:                                             ; preds = %1133
  %1138 = getelementptr inbounds i32, i32* %1134, i64 1
  %1139 = icmp eq i32* %1138, %1130
  br i1 %1139, label %1140, label %1133

1140:                                             ; preds = %1137, %1133, %1107
  %1141 = phi i32* [ %1129, %1107 ], [ %1134, %1133 ], [ %1130, %1137 ]
  %1142 = getelementptr inbounds i32, i32* %1141, i64 1
  %1143 = ptrtoint i32* %1142 to i64
  %1144 = sub i64 %1132, %1143
  %1145 = ashr exact i64 %1144, 2
  %1146 = icmp eq i64 %1144, 0
  br i1 %1146, label %1150, label %1147

1147:                                             ; preds = %1140
  %1148 = bitcast i32* %1141 to i8*
  %1149 = bitcast i32* %1142 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1148, i8* align 4 %1149, i64 %1144, i1 false) #10
  br label %1150

1150:                                             ; preds = %1140, %1147
  %1151 = getelementptr inbounds i32, i32* %1141, i64 %1145
  store i32* %1151, i32** %76, align 8
  br label %1185

1152:                                             ; preds = %1101
  %1153 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1106, i32 2) #10
  %1154 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1155 = sext i32 %1153 to i64
  %1156 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1154, i64 0, i32 0, i32 0
  %1157 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1156, align 8
  %1158 = sext i32 %1105 to i64
  %1159 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1157, i64 %1155, i32 0, i32 0
  %1160 = load float*, float** %1159, align 8
  %1161 = getelementptr inbounds float, float* %1160, i64 %1158
  store float 0x3FE6A09E60000000, float* %1161, align 4
  %1162 = load i32*, i32** %115, align 8
  %1163 = load i32*, i32** %76, align 8
  %1164 = icmp eq i32* %1162, %1163
  %1165 = ptrtoint i32* %1163 to i64
  br i1 %1164, label %1173, label %1166

1166:                                             ; preds = %1152, %1170
  %1167 = phi i32* [ %1171, %1170 ], [ %1162, %1152 ]
  %1168 = load i32, i32* %1167, align 4
  %1169 = icmp eq i32 %1168, 8
  br i1 %1169, label %1173, label %1170

1170:                                             ; preds = %1166
  %1171 = getelementptr inbounds i32, i32* %1167, i64 1
  %1172 = icmp eq i32* %1171, %1163
  br i1 %1172, label %1173, label %1166

1173:                                             ; preds = %1170, %1166, %1152
  %1174 = phi i32* [ %1162, %1152 ], [ %1167, %1166 ], [ %1163, %1170 ]
  %1175 = getelementptr inbounds i32, i32* %1174, i64 1
  %1176 = ptrtoint i32* %1175 to i64
  %1177 = sub i64 %1165, %1176
  %1178 = ashr exact i64 %1177, 2
  %1179 = icmp eq i64 %1177, 0
  br i1 %1179, label %1183, label %1180

1180:                                             ; preds = %1173
  %1181 = bitcast i32* %1174 to i8*
  %1182 = bitcast i32* %1175 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1181, i8* align 4 %1182, i64 %1177, i1 false) #10
  br label %1183

1183:                                             ; preds = %1173, %1180
  %1184 = getelementptr inbounds i32, i32* %1174, i64 %1178
  store i32* %1184, i32** %76, align 8
  br label %1185

1185:                                             ; preds = %992, %984, %995, %1047, %1150, %1183, %1099
  %1186 = phi i32* [ %985, %995 ], [ %1048, %1047 ], [ %1151, %1150 ], [ %1184, %1183 ], [ %1100, %1099 ], [ %985, %984 ], [ %985, %992 ]
  %1187 = load i32*, i32** %115, align 8
  %1188 = icmp eq i32* %1187, %1186
  br i1 %1188, label %1341, label %1189

1189:                                             ; preds = %1185, %1193
  %1190 = phi i32* [ %1194, %1193 ], [ %1187, %1185 ]
  %1191 = load i32, i32* %1190, align 4
  %1192 = icmp eq i32 %1191, 6
  br i1 %1192, label %1196, label %1193

1193:                                             ; preds = %1189
  %1194 = getelementptr inbounds i32, i32* %1190, i64 1
  %1195 = icmp eq i32* %1194, %1186
  br i1 %1195, label %1341, label %1189

1196:                                             ; preds = %1189
  %1197 = icmp eq i32* %1190, %1186
  br i1 %1197, label %1341, label %1198

1198:                                             ; preds = %1196
  %1199 = load i32, i32* %71, align 8
  %1200 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1199, i32 0) #10
  %1201 = icmp sgt i32 %1200, -1
  %1202 = load i32, i32* %22, align 8
  %1203 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1202, i32 6) #10
  %1204 = load i32, i32* %71, align 8
  br i1 %1201, label %1205, label %1273

1205:                                             ; preds = %1198
  %1206 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1204, i32 0) #10
  %1207 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1208 = sext i32 %1206 to i64
  %1209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1207, i64 0, i32 0, i32 0
  %1210 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1209, align 8
  %1211 = sext i32 %1203 to i64
  %1212 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1210, i64 %1208, i32 0, i32 0
  %1213 = load float*, float** %1212, align 8
  %1214 = getelementptr inbounds float, float* %1213, i64 %1211
  store float 0x3FE6A09E60000000, float* %1214, align 4
  %1215 = load i32*, i32** %115, align 8
  %1216 = load i32*, i32** %76, align 8
  %1217 = icmp eq i32* %1215, %1216
  %1218 = ptrtoint i32* %1216 to i64
  br i1 %1217, label %1226, label %1219

1219:                                             ; preds = %1205, %1223
  %1220 = phi i32* [ %1224, %1223 ], [ %1215, %1205 ]
  %1221 = load i32, i32* %1220, align 4
  %1222 = icmp eq i32 %1221, 6
  br i1 %1222, label %1226, label %1223

1223:                                             ; preds = %1219
  %1224 = getelementptr inbounds i32, i32* %1220, i64 1
  %1225 = icmp eq i32* %1224, %1216
  br i1 %1225, label %1226, label %1219

1226:                                             ; preds = %1223, %1219, %1205
  %1227 = phi i32* [ %1215, %1205 ], [ %1220, %1219 ], [ %1216, %1223 ]
  %1228 = getelementptr inbounds i32, i32* %1227, i64 1
  %1229 = ptrtoint i32* %1228 to i64
  %1230 = sub i64 %1218, %1229
  %1231 = ashr exact i64 %1230, 2
  %1232 = icmp eq i64 %1230, 0
  br i1 %1232, label %1236, label %1233

1233:                                             ; preds = %1226
  %1234 = bitcast i32* %1227 to i8*
  %1235 = bitcast i32* %1228 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1234, i8* align 4 %1235, i64 %1230, i1 false) #10
  br label %1236

1236:                                             ; preds = %1226, %1233
  %1237 = getelementptr inbounds i32, i32* %1227, i64 %1231
  store i32* %1237, i32** %76, align 8
  %1238 = load i32, i32* %22, align 8
  %1239 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1238, i32 7) #10
  %1240 = load i32, i32* %71, align 8
  %1241 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1240, i32 1) #10
  %1242 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1243 = sext i32 %1241 to i64
  %1244 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1242, i64 0, i32 0, i32 0
  %1245 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1244, align 8
  %1246 = sext i32 %1239 to i64
  %1247 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1245, i64 %1243, i32 0, i32 0
  %1248 = load float*, float** %1247, align 8
  %1249 = getelementptr inbounds float, float* %1248, i64 %1246
  store float 0x3FE6A09E60000000, float* %1249, align 4
  %1250 = load i32*, i32** %115, align 8
  %1251 = load i32*, i32** %76, align 8
  %1252 = icmp eq i32* %1250, %1251
  %1253 = ptrtoint i32* %1251 to i64
  br i1 %1252, label %1261, label %1254

1254:                                             ; preds = %1236, %1258
  %1255 = phi i32* [ %1259, %1258 ], [ %1250, %1236 ]
  %1256 = load i32, i32* %1255, align 4
  %1257 = icmp eq i32 %1256, 7
  br i1 %1257, label %1261, label %1258

1258:                                             ; preds = %1254
  %1259 = getelementptr inbounds i32, i32* %1255, i64 1
  %1260 = icmp eq i32* %1259, %1251
  br i1 %1260, label %1261, label %1254

1261:                                             ; preds = %1258, %1254, %1236
  %1262 = phi i32* [ %1250, %1236 ], [ %1255, %1254 ], [ %1251, %1258 ]
  %1263 = getelementptr inbounds i32, i32* %1262, i64 1
  %1264 = ptrtoint i32* %1263 to i64
  %1265 = sub i64 %1253, %1264
  %1266 = ashr exact i64 %1265, 2
  %1267 = icmp eq i64 %1265, 0
  br i1 %1267, label %1271, label %1268

1268:                                             ; preds = %1261
  %1269 = bitcast i32* %1262 to i8*
  %1270 = bitcast i32* %1263 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1269, i8* align 4 %1270, i64 %1265, i1 false) #10
  br label %1271

1271:                                             ; preds = %1261, %1268
  %1272 = getelementptr inbounds i32, i32* %1262, i64 %1266
  store i32* %1272, i32** %76, align 8
  br label %1341

1273:                                             ; preds = %1198
  %1274 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1204, i32 2) #10
  %1275 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1276 = sext i32 %1274 to i64
  %1277 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1275, i64 0, i32 0, i32 0
  %1278 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1277, align 8
  %1279 = sext i32 %1203 to i64
  %1280 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1278, i64 %1276, i32 0, i32 0
  %1281 = load float*, float** %1280, align 8
  %1282 = getelementptr inbounds float, float* %1281, i64 %1279
  store float 0x3FE6A09E60000000, float* %1282, align 4
  %1283 = load i32*, i32** %115, align 8
  %1284 = load i32*, i32** %76, align 8
  %1285 = icmp eq i32* %1283, %1284
  %1286 = ptrtoint i32* %1284 to i64
  br i1 %1285, label %1294, label %1287

1287:                                             ; preds = %1273, %1291
  %1288 = phi i32* [ %1292, %1291 ], [ %1283, %1273 ]
  %1289 = load i32, i32* %1288, align 4
  %1290 = icmp eq i32 %1289, 6
  br i1 %1290, label %1294, label %1291

1291:                                             ; preds = %1287
  %1292 = getelementptr inbounds i32, i32* %1288, i64 1
  %1293 = icmp eq i32* %1292, %1284
  br i1 %1293, label %1294, label %1287

1294:                                             ; preds = %1291, %1287, %1273
  %1295 = phi i32* [ %1283, %1273 ], [ %1288, %1287 ], [ %1284, %1291 ]
  %1296 = getelementptr inbounds i32, i32* %1295, i64 1
  %1297 = ptrtoint i32* %1296 to i64
  %1298 = sub i64 %1286, %1297
  %1299 = ashr exact i64 %1298, 2
  %1300 = icmp eq i64 %1298, 0
  br i1 %1300, label %1304, label %1301

1301:                                             ; preds = %1294
  %1302 = bitcast i32* %1295 to i8*
  %1303 = bitcast i32* %1296 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1302, i8* align 4 %1303, i64 %1298, i1 false) #10
  br label %1304

1304:                                             ; preds = %1294, %1301
  %1305 = getelementptr inbounds i32, i32* %1295, i64 %1299
  store i32* %1305, i32** %76, align 8
  %1306 = load i32, i32* %22, align 8
  %1307 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1306, i32 7) #10
  %1308 = load i32, i32* %71, align 8
  %1309 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1308, i32 2) #10
  %1310 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1311 = sext i32 %1309 to i64
  %1312 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1310, i64 0, i32 0, i32 0
  %1313 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1312, align 8
  %1314 = sext i32 %1307 to i64
  %1315 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1313, i64 %1311, i32 0, i32 0
  %1316 = load float*, float** %1315, align 8
  %1317 = getelementptr inbounds float, float* %1316, i64 %1314
  store float 0x3FE6A09E60000000, float* %1317, align 4
  %1318 = load i32*, i32** %115, align 8
  %1319 = load i32*, i32** %76, align 8
  %1320 = icmp eq i32* %1318, %1319
  %1321 = ptrtoint i32* %1319 to i64
  br i1 %1320, label %1329, label %1322

1322:                                             ; preds = %1304, %1326
  %1323 = phi i32* [ %1327, %1326 ], [ %1318, %1304 ]
  %1324 = load i32, i32* %1323, align 4
  %1325 = icmp eq i32 %1324, 7
  br i1 %1325, label %1329, label %1326

1326:                                             ; preds = %1322
  %1327 = getelementptr inbounds i32, i32* %1323, i64 1
  %1328 = icmp eq i32* %1327, %1319
  br i1 %1328, label %1329, label %1322

1329:                                             ; preds = %1326, %1322, %1304
  %1330 = phi i32* [ %1318, %1304 ], [ %1323, %1322 ], [ %1319, %1326 ]
  %1331 = getelementptr inbounds i32, i32* %1330, i64 1
  %1332 = ptrtoint i32* %1331 to i64
  %1333 = sub i64 %1321, %1332
  %1334 = ashr exact i64 %1333, 2
  %1335 = icmp eq i64 %1333, 0
  br i1 %1335, label %1339, label %1336

1336:                                             ; preds = %1329
  %1337 = bitcast i32* %1330 to i8*
  %1338 = bitcast i32* %1331 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1337, i8* align 4 %1338, i64 %1333, i1 false) #10
  br label %1339

1339:                                             ; preds = %1329, %1336
  %1340 = getelementptr inbounds i32, i32* %1330, i64 %1334
  store i32* %1340, i32** %76, align 8
  br label %1341

1341:                                             ; preds = %1193, %1185, %1196, %1271, %1339
  %1342 = phi i32* [ %1186, %1196 ], [ %1272, %1271 ], [ %1340, %1339 ], [ %1186, %1185 ], [ %1186, %1193 ]
  %1343 = load i32*, i32** %115, align 8
  %1344 = icmp eq i32* %1343, %1342
  br i1 %1344, label %1439, label %1345

1345:                                             ; preds = %1341, %1349
  %1346 = phi i32* [ %1350, %1349 ], [ %1343, %1341 ]
  %1347 = load i32, i32* %1346, align 4
  %1348 = icmp eq i32 %1347, 3
  br i1 %1348, label %1352, label %1349

1349:                                             ; preds = %1345
  %1350 = getelementptr inbounds i32, i32* %1346, i64 1
  %1351 = icmp eq i32* %1350, %1342
  br i1 %1351, label %1439, label %1345

1352:                                             ; preds = %1345
  %1353 = icmp eq i32* %1346, %1342
  br i1 %1353, label %1439, label %1354

1354:                                             ; preds = %1352
  %1355 = load i32, i32* %71, align 8
  %1356 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1355, i32 2) #10
  %1357 = icmp sgt i32 %1356, -1
  %1358 = load i32, i32* %22, align 8
  %1359 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1358, i32 3) #10
  %1360 = load i32, i32* %71, align 8
  br i1 %1357, label %1406, label %1361

1361:                                             ; preds = %1354
  %1362 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1360, i32 0) #10
  %1363 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1364 = sext i32 %1362 to i64
  %1365 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1363, i64 0, i32 0, i32 0
  %1366 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1365, align 8
  %1367 = sext i32 %1359 to i64
  %1368 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1366, i64 %1364, i32 0, i32 0
  %1369 = load float*, float** %1368, align 8
  %1370 = getelementptr inbounds float, float* %1369, i64 %1367
  store float 0x3FE6A09E60000000, float* %1370, align 4
  %1371 = load i32, i32* %22, align 8
  %1372 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1371, i32 3) #10
  %1373 = load i32, i32* %71, align 8
  %1374 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1373, i32 1) #10
  %1375 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1376 = sext i32 %1374 to i64
  %1377 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1375, i64 0, i32 0, i32 0
  %1378 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1377, align 8
  %1379 = sext i32 %1372 to i64
  %1380 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1378, i64 %1376, i32 0, i32 0
  %1381 = load float*, float** %1380, align 8
  %1382 = getelementptr inbounds float, float* %1381, i64 %1379
  store float 0x3FE6A09E60000000, float* %1382, align 4
  %1383 = load i32*, i32** %115, align 8
  %1384 = load i32*, i32** %76, align 8
  %1385 = icmp eq i32* %1383, %1384
  %1386 = ptrtoint i32* %1384 to i64
  br i1 %1385, label %1394, label %1387

1387:                                             ; preds = %1361, %1391
  %1388 = phi i32* [ %1392, %1391 ], [ %1383, %1361 ]
  %1389 = load i32, i32* %1388, align 4
  %1390 = icmp eq i32 %1389, 3
  br i1 %1390, label %1394, label %1391

1391:                                             ; preds = %1387
  %1392 = getelementptr inbounds i32, i32* %1388, i64 1
  %1393 = icmp eq i32* %1392, %1384
  br i1 %1393, label %1394, label %1387

1394:                                             ; preds = %1391, %1387, %1361
  %1395 = phi i32* [ %1383, %1361 ], [ %1388, %1387 ], [ %1384, %1391 ]
  %1396 = getelementptr inbounds i32, i32* %1395, i64 1
  %1397 = ptrtoint i32* %1396 to i64
  %1398 = sub i64 %1386, %1397
  %1399 = ashr exact i64 %1398, 2
  %1400 = icmp eq i64 %1398, 0
  br i1 %1400, label %1404, label %1401

1401:                                             ; preds = %1394
  %1402 = bitcast i32* %1395 to i8*
  %1403 = bitcast i32* %1396 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1402, i8* align 4 %1403, i64 %1398, i1 false) #10
  br label %1404

1404:                                             ; preds = %1394, %1401
  %1405 = getelementptr inbounds i32, i32* %1395, i64 %1399
  store i32* %1405, i32** %76, align 8
  br label %1439

1406:                                             ; preds = %1354
  %1407 = call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %1360, i32 2) #10
  %1408 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1409 = sext i32 %1407 to i64
  %1410 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1408, i64 0, i32 0, i32 0
  %1411 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1410, align 8
  %1412 = sext i32 %1359 to i64
  %1413 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1411, i64 %1409, i32 0, i32 0
  %1414 = load float*, float** %1413, align 8
  %1415 = getelementptr inbounds float, float* %1414, i64 %1412
  store float 0x3FE6A09E60000000, float* %1415, align 4
  %1416 = load i32*, i32** %115, align 8
  %1417 = load i32*, i32** %76, align 8
  %1418 = icmp eq i32* %1416, %1417
  %1419 = ptrtoint i32* %1417 to i64
  br i1 %1418, label %1427, label %1420

1420:                                             ; preds = %1406, %1424
  %1421 = phi i32* [ %1425, %1424 ], [ %1416, %1406 ]
  %1422 = load i32, i32* %1421, align 4
  %1423 = icmp eq i32 %1422, 3
  br i1 %1423, label %1427, label %1424

1424:                                             ; preds = %1420
  %1425 = getelementptr inbounds i32, i32* %1421, i64 1
  %1426 = icmp eq i32* %1425, %1417
  br i1 %1426, label %1427, label %1420

1427:                                             ; preds = %1424, %1420, %1406
  %1428 = phi i32* [ %1416, %1406 ], [ %1421, %1420 ], [ %1417, %1424 ]
  %1429 = getelementptr inbounds i32, i32* %1428, i64 1
  %1430 = ptrtoint i32* %1429 to i64
  %1431 = sub i64 %1419, %1430
  %1432 = ashr exact i64 %1431, 2
  %1433 = icmp eq i64 %1431, 0
  br i1 %1433, label %1437, label %1434

1434:                                             ; preds = %1427
  %1435 = bitcast i32* %1428 to i8*
  %1436 = bitcast i32* %1429 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %1435, i8* align 4 %1436, i64 %1431, i1 false) #10
  br label %1437

1437:                                             ; preds = %1427, %1434
  %1438 = getelementptr inbounds i32, i32* %1428, i64 %1432
  store i32* %1438, i32** %76, align 8
  br label %1439

1439:                                             ; preds = %1349, %1341, %1352, %1404, %1437
  %1440 = load i32, i32* %5, align 4
  %1441 = icmp sgt i32 %1440, 0
  br i1 %1441, label %1442, label %1473

1442:                                             ; preds = %1439
  %1443 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 2
  %1444 = load i32, i32* %1443, align 4
  %1445 = icmp sgt i32 %1444, 0
  %1446 = sext i32 %1440 to i64
  %1447 = icmp sgt i32 %1444, 1
  br label %1448

1448:                                             ; preds = %1442, %1460
  %1449 = phi i64 [ 0, %1442 ], [ %1461, %1460 ]
  br i1 %1445, label %1450, label %1460

1450:                                             ; preds = %1448
  %1451 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1452 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1451, i64 0, i32 0, i32 0
  %1453 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1452, align 8
  %1454 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1453, i64 %1449, i32 0, i32 0
  %1455 = load float*, float** %1454, align 8
  %1456 = load float, float* %1455, align 4
  %1457 = fcmp oeq float %1456, 1.000000e+00
  %1458 = xor i1 %1457, true
  %1459 = or i1 %1458, %1447
  br i1 %1459, label %1473, label %1460

1460:                                             ; preds = %1450, %1448
  %1461 = add nuw nsw i64 %1449, 1
  %1462 = icmp slt i64 %1461, %1446
  br i1 %1462, label %1448, label %1473

1463:                                             ; preds = %95, %89
  %1464 = phi i64 [ 0, %89 ], [ %111, %95 ]
  %1465 = icmp eq i64 %91, 0
  br i1 %1465, label %1473, label %1466

1466:                                             ; preds = %1463
  %1467 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %1468 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1467, i64 0, i32 0, i32 0
  %1469 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %1468, align 8
  %1470 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1469, i64 %1464, i32 0, i32 0
  %1471 = load float*, float** %1470, align 8
  %1472 = getelementptr inbounds float, float* %1471, i64 %1464
  store float 1.000000e+00, float* %1472, align 4
  br label %1473

1473:                                             ; preds = %1450, %1460, %1466, %1463, %1439, %82, %114
  %1474 = phi i1 [ true, %114 ], [ true, %82 ], [ true, %1439 ], [ true, %1463 ], [ true, %1466 ], [ false, %1450 ], [ true, %1460 ]
  ret i1 %1474
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector.0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::vector.0"*
  br i1 %10, label %12, label %76

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::vector.0"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::vector.0"*
  %24 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::vector.0"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::vector.0"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::vector.0"*
  %29 = icmp eq %"class.std::__1::vector.0"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %71

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::vector.0"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::vector.0"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 -1
  %36 = bitcast %"class.std::__1::vector.0"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #10
  %37 = bitcast %"class.std::__1::vector.0"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector.0"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 -1, i32 0, i32 1
  %41 = bitcast float** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %32, i64 -1, i32 0, i32 1
  %44 = bitcast float** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 -1, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast float** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %32, i64 -1, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast float** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"class.std::__1::vector.0"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #10
  %51 = icmp eq %"class.std::__1::vector.0"* %35, %11
  br i1 %51, label %52, label %31

52:                                               ; preds = %31
  %53 = ptrtoint %"class.std::__1::vector.0"* %34 to i64
  %54 = load i64, i64* %6, align 8
  %55 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %13, align 8
  %56 = inttoptr i64 %54 to %"class.std::__1::vector.0"*
  store i64 %53, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %57 = icmp eq %"class.std::__1::vector.0"* %55, %56
  br i1 %57, label %71, label %58

58:                                               ; preds = %52, %69
  %59 = phi %"class.std::__1::vector.0"* [ %60, %69 ], [ %55, %52 ]
  %60 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %60, i64 0, i32 0, i32 0
  %62 = load float*, float** %61, align 8
  %63 = icmp eq float* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = ptrtoint float* %62 to i64
  %66 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %59, i64 -1, i32 0, i32 1
  %67 = bitcast float** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = bitcast float* %62 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::vector.0"* %60, %56
  br i1 %70, label %71, label %58

71:                                               ; preds = %69, %30, %52
  %72 = phi i64 [ %7, %30 ], [ %54, %52 ], [ %54, %69 ]
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %71
  %75 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %74, %71, %2
  ret void
}

declare i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media19ChannelMixingMatrix13IsUnaccountedENS_8ChannelsE(%"class.media::ChannelMixingMatrix"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2, %12
  %9 = phi i32* [ %13, %12 ], [ %4, %2 ]
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %9, i64 1
  %14 = icmp eq i32* %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12, %2
  %16 = phi i32* [ %4, %2 ], [ %9, %8 ], [ %6, %12 ]
  %17 = icmp ne i32* %16, %6
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19ChannelMixingMatrix3MixENS_8ChannelsES1_f(%"class.media::ChannelMixingMatrix"* nocapture, i32, i32, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %6, i32 %1) #10
  %8 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %9, i32 %2) #10
  %11 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 0
  %12 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, align 8
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %14, align 8
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %15, i64 %13, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = getelementptr inbounds float, float* %18, i64 %16
  store float %3, float* %19, align 4
  %20 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 1
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %21, %23
  %25 = ptrtoint i32* %23 to i64
  br i1 %24, label %33, label %26

26:                                               ; preds = %4, %30
  %27 = phi i32* [ %31, %30 ], [ %21, %4 ]
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds i32, i32* %27, i64 1
  %32 = icmp eq i32* %31, %23
  br i1 %32, label %33, label %26

33:                                               ; preds = %30, %26, %4
  %34 = phi i32* [ %21, %4 ], [ %23, %30 ], [ %27, %26 ]
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = ptrtoint i32* %35 to i64
  %37 = sub i64 %25, %36
  %38 = ashr exact i64 %37, 2
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = bitcast i32* %34 to i8*
  %42 = bitcast i32* %35 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %42, i64 %37, i1 false) #10
  br label %43

43:                                               ; preds = %33, %40
  %44 = getelementptr inbounds i32, i32* %34, i64 %38
  store i32* %44, i32** %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19ChannelMixingMatrix20MixWithoutAccountingENS_8ChannelsES1_f(%"class.media::ChannelMixingMatrix"* nocapture readonly, i32, i32, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %6, i32 %1) #10
  %8 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %9, i32 %2) #10
  %11 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 0
  %12 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, align 8
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %14, align 8
  %16 = sext i32 %7 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %15, i64 %13, i32 0, i32 0
  %18 = load float*, float** %17, align 8
  %19 = getelementptr inbounds float, float* %18, i64 %16
  store float %3, float* %19, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5media19ChannelMixingMatrix16HasOutputChannelENS_8ChannelsE(%"class.media::ChannelMixingMatrix"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %4, i32 %1) #10
  %6 = icmp sgt i32 %5, -1
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5media19ChannelMixingMatrix15HasInputChannelENS_8ChannelsE(%"class.media::ChannelMixingMatrix"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZN5media12ChannelOrderENS_13ChannelLayoutENS_8ChannelsE(i32 %4, i32 %1) #10
  %6 = icmp sgt i32 %5, -1
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media19ChannelMixingMatrix10AccountForENS_8ChannelsE(%"class.media::ChannelMixingMatrix"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"class.media::ChannelMixingMatrix", %"class.media::ChannelMixingMatrix"* %0, i64 0, i32 5, i32 0, i32 1
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %16, label %9

9:                                                ; preds = %2, %13
  %10 = phi i32* [ %14, %13 ], [ %4, %2 ]
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i32, i32* %10, i64 1
  %15 = icmp eq i32* %14, %6
  br i1 %15, label %16, label %9

16:                                               ; preds = %9, %13, %2
  %17 = phi i32* [ %4, %2 ], [ %10, %9 ], [ %6, %13 ]
  %18 = getelementptr inbounds i32, i32* %17, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = sub i64 %8, %19
  %21 = ashr exact i64 %20, 2
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast i32* %17 to i8*
  %25 = bitcast i32* %18 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 %20, i1 false) #10
  br label %26

26:                                               ; preds = %16, %23
  %27 = getelementptr inbounds i32, i32* %17, i64 %21
  store i32* %27, i32** %5, align 8
  ret void
}

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i32 @_ZN5media27ChannelLayoutToChannelCountENS_13ChannelLayoutE(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IfNS_9allocatorIfEEEENS1_IS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::vector.0"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.0"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector.0"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::vector.0"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector.0"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector.0"* %35 to i64
  %37 = bitcast %"class.std::__1::vector.0"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = bitcast %"class.std::__1::vector.0"* %1 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::vector.0"* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1, i64 0, i32 0, i32 1
  %42 = bitcast float** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 %9, i32 0, i32 1
  %45 = bitcast float** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast float** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast float** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector.0"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10
  %52 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %34, i64 1
  %53 = ptrtoint %"class.std::__1::vector.0"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %54, align 8
  %56 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %3, align 8
  %57 = icmp eq %"class.std::__1::vector.0"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %31
  %59 = ptrtoint %"class.std::__1::vector.0"* %55 to i64
  br label %84

60:                                               ; preds = %31, %60
  %61 = phi %"class.std::__1::vector.0"* [ %63, %60 ], [ %34, %31 ]
  %62 = phi %"class.std::__1::vector.0"* [ %64, %60 ], [ %56, %31 ]
  %63 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %62, i64 -1
  %65 = bitcast %"class.std::__1::vector.0"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10
  %66 = bitcast %"class.std::__1::vector.0"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::vector.0"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %62, i64 -1, i32 0, i32 1
  %70 = bitcast float** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 -1, i32 0, i32 1
  %73 = bitcast float** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %75 = bitcast float** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %61, i64 -1, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast float** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast %"class.std::__1::vector.0"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 24, i1 false) #10
  %80 = icmp eq %"class.std::__1::vector.0"* %64, %55
  br i1 %80, label %81, label %60

81:                                               ; preds = %60
  %82 = load i64, i64* %6, align 8
  %83 = load %"class.std::__1::vector.0"*, %"class.std::__1::vector.0"** %3, align 8
  br label %84

84:                                               ; preds = %58, %81
  %85 = phi %"class.std::__1::vector.0"* [ %55, %58 ], [ %83, %81 ]
  %86 = phi %"class.std::__1::vector.0"* [ %34, %58 ], [ %63, %81 ]
  %87 = phi i64 [ %59, %58 ], [ %82, %81 ]
  %88 = ptrtoint %"class.std::__1::vector.0"* %86 to i64
  store i64 %88, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %89 = inttoptr i64 %87 to %"class.std::__1::vector.0"*
  %90 = icmp eq %"class.std::__1::vector.0"* %85, %89
  br i1 %90, label %104, label %91

91:                                               ; preds = %84, %102
  %92 = phi %"class.std::__1::vector.0"* [ %93, %102 ], [ %85, %84 ]
  %93 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %92, i64 -1
  %94 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %93, i64 0, i32 0, i32 0
  %95 = load float*, float** %94, align 8
  %96 = icmp eq float* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = ptrtoint float* %95 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %92, i64 -1, i32 0, i32 1
  %100 = bitcast float** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast float* %95 to i8*
  tail call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %97, %91
  %103 = icmp eq %"class.std::__1::vector.0"* %93, %89
  br i1 %103, label %104, label %91

104:                                              ; preds = %102, %84
  %105 = icmp eq i64 %87, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = inttoptr i64 %87 to i8*
  tail call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %104, %106
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
