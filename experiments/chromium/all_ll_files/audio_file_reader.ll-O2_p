; ModuleID = '../../media/filters/audio_file_reader.cc'
source_filename = "../../media/filters/audio_file_reader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVRational = type { i32, i32 }
%"class.media::AudioFileReader" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", i32, %"class.media::FFmpegURLProtocol"*, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::FFmpegGlue"* }
%"class.media::FFmpegGlue" = type <{ i8, i8, [6 x i8], %struct.AVFormatContext*, %"class.std::__1::unique_ptr.0", i32, [4 x i8] }>
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon, double, double, i32, i8* }
%union.anon = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type opaque
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type opaque
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVDictionary = type opaque
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type opaque
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVCodecHWConfigInternal = type opaque
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %struct.AVIOContext* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %struct.AVCodecContext* }
%"class.media::FFmpegURLProtocol" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.12", i8, i64, i32, %"class.std::__1::vector.16", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { float* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { float**, float**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr.9"* }
%"class.media::FFmpegDecodingLoop" = type <{ i8, [7 x i8], %struct.AVCodecContext*, %"class.std::__1::unique_ptr.30", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %struct.AVFrame* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.36 }
%union.anon.36 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS6_10unique_ptrINS3_8AudioBusENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS4_EES5_SG_EEEFbSI_EE3RunEPNS0_13BindStateBaseESI_ = comdat any

$_ZN4base8internal9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS5_10unique_ptrINS2_8AudioBusENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS3_EES4_SF_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5media8AudioBusENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_ = comdat any

@_ZTVN5media15AudioFileReaderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::AudioFileReader"*)* @_ZN5media15AudioFileReaderD2Ev to i8*), i8* bitcast (void (%"class.media::AudioFileReader"*)* @_ZN5media15AudioFileReaderD0Ev to i8*)] }, align 8
@_ZZNK5media15AudioFileReader11GetDurationEvE12av_time_base = internal constant %struct.AVRational { i32 1, i32 1000000 }, align 4
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1

@_ZN5media15AudioFileReaderC1EPNS_17FFmpegURLProtocolE = hidden unnamed_addr alias void (%"class.media::AudioFileReader"*, %"class.media::FFmpegURLProtocol"*), void (%"class.media::AudioFileReader"*, %"class.media::FFmpegURLProtocol"*)* @_ZN5media15AudioFileReaderC2EPNS_17FFmpegURLProtocolE
@_ZN5media15AudioFileReaderD1Ev = hidden unnamed_addr alias void (%"class.media::AudioFileReader"*), void (%"class.media::AudioFileReader"*)* @_ZN5media15AudioFileReaderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media15AudioFileReaderC2EPNS_17FFmpegURLProtocolE(%"class.media::AudioFileReader"* nocapture, %"class.media::FFmpegURLProtocol"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media15AudioFileReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  store %"class.media::FFmpegURLProtocol"* %1, %"class.media::FFmpegURLProtocol"** %5, align 8
  %7 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 5
  %8 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15AudioFileReaderD2Ev(%"class.media::AudioFileReader"* nocapture) unnamed_addr #1 align 2 {
  %2 = alloca %struct.AVCodecContext*, align 8
  %3 = alloca %struct.AVCodecContext*, align 8
  %4 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media15AudioFileReaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %struct.AVCodecContext*, %struct.AVCodecContext** %5, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %5, align 8
  %7 = icmp eq %struct.AVCodecContext* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %struct.AVCodecContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  store %struct.AVCodecContext* %6, %struct.AVCodecContext** %3, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %11, align 8
  store %"class.media::FFmpegGlue"* null, %"class.media::FFmpegGlue"** %11, align 8
  %13 = icmp eq %"class.media::FFmpegGlue"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  call void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"* nonnull %12) #13
  %15 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %12, i64 0, i32 0
  call void @_ZdlPv(i8* %15) #14
  br label %16

16:                                               ; preds = %10, %14
  %17 = load %struct.AVCodecContext*, %struct.AVCodecContext** %5, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %5, align 8
  %18 = icmp eq %struct.AVCodecContext* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = bitcast %struct.AVCodecContext** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  store %struct.AVCodecContext* %17, %struct.AVCodecContext** %2, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %21

21:                                               ; preds = %16, %19
  %22 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %11, align 8
  store %"class.media::FFmpegGlue"* null, %"class.media::FFmpegGlue"** %11, align 8
  %23 = icmp eq %"class.media::FFmpegGlue"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  call void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"* nonnull %22) #13
  %25 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %22, i64 0, i32 0
  call void @_ZdlPv(i8* %25) #14
  br label %26

26:                                               ; preds = %21, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15AudioFileReader5CloseEv(%"class.media::AudioFileReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.AVCodecContext*, align 8
  %3 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %struct.AVCodecContext*, %struct.AVCodecContext** %3, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %3, align 8
  %5 = icmp eq %struct.AVCodecContext* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %struct.AVCodecContext** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  store %struct.AVCodecContext* %4, %struct.AVCodecContext** %2, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %9, align 8
  store %"class.media::FFmpegGlue"* null, %"class.media::FFmpegGlue"** %9, align 8
  %11 = icmp eq %"class.media::FFmpegGlue"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  call void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"* nonnull %10) #13
  %13 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %10, i64 0, i32 0
  call void @_ZdlPv(i8* %13) #14
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media15AudioFileReaderD0Ev(%"class.media::AudioFileReader"*) unnamed_addr #1 align 2 {
  tail call void @_ZN5media15AudioFileReaderD2Ev(%"class.media::AudioFileReader"* %0) #13
  %2 = bitcast %"class.media::AudioFileReader"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader4OpenEv(%"class.media::AudioFileReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZN5media15AudioFileReader11OpenDemuxerEv(%"class.media::AudioFileReader"* %0)
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN5media15AudioFileReader11OpenDecoderEv(%"class.media::AudioFileReader"* %0)
  br label %5

5:                                                ; preds = %3, %1
  %6 = phi i1 [ false, %1 ], [ %4, %3 ]
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader11OpenDemuxerEv(%"class.media::AudioFileReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %struct.AVCodecContext*, align 8
  %3 = alloca %struct.AVCodecContext*, align 8
  %4 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 4
  %5 = tail call i8* @_Znwm(i64 32) #14
  %6 = bitcast i8* %5 to %"class.media::FFmpegGlue"*
  %7 = load %"class.media::FFmpegURLProtocol"*, %"class.media::FFmpegURLProtocol"** %4, align 8
  tail call void @_ZN5media10FFmpegGlueC1EPNS_17FFmpegURLProtocolE(%"class.media::FFmpegGlue"* nonnull %6, %"class.media::FFmpegURLProtocol"* %7) #13
  %8 = ptrtoint i8* %5 to i64
  %9 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %10, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  store i64 %8, i64* %12, align 8
  %13 = icmp eq %"class.media::FFmpegGlue"* %11, null
  %14 = bitcast i8* %5 to %"class.media::FFmpegGlue"*
  br i1 %13, label %18, label %15

15:                                               ; preds = %1
  tail call void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"* nonnull %11) #13
  %16 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %11, i64 0, i32 0
  tail call void @_ZdlPv(i8* %16) #14
  %17 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %10, align 8
  br label %18

18:                                               ; preds = %15, %1
  %19 = phi %"class.media::FFmpegGlue"* [ %17, %15 ], [ %14, %1 ]
  %20 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %19, i64 0, i32 3
  %21 = load %struct.AVFormatContext*, %struct.AVFormatContext** %20, align 8
  %22 = tail call zeroext i1 @_ZN5media10FFmpegGlue11OpenContextEb(%"class.media::FFmpegGlue"* %19, i1 zeroext false) #13
  br i1 %22, label %23, label %72

23:                                               ; preds = %18
  %24 = tail call i32 @avformat_find_stream_info(%struct.AVFormatContext* %21, %struct.AVDictionary** null) #13
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %72, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %struct.AVCodecContext*, %struct.AVCodecContext** %28, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %28, align 8
  %30 = icmp eq %struct.AVCodecContext* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = bitcast %struct.AVCodecContext** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  store %struct.AVCodecContext* %29, %struct.AVCodecContext** %3, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %33

33:                                               ; preds = %26, %31
  %34 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i64 0, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %72, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %21, i64 0, i32 7
  %39 = load %struct.AVStream**, %struct.AVStream*** %38, align 8
  %40 = zext i32 %35 to i64
  br label %41

41:                                               ; preds = %37, %69
  %42 = phi i64 [ 0, %37 ], [ %70, %69 ]
  %43 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %39, i64 %42
  %44 = load %struct.AVStream*, %struct.AVStream** %43, align 8
  %45 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %44, i64 0, i32 19
  %46 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %45, align 8
  %47 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %69

50:                                               ; preds = %41
  %51 = trunc i64 %42 to i32
  %52 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  store i32 %51, i32* %52, align 8
  %53 = load %struct.AVStream**, %struct.AVStream*** %38, align 8
  %54 = shl i64 %42, 32
  %55 = ashr exact i64 %54, 32
  %56 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %53, i64 %55
  %57 = load %struct.AVStream*, %struct.AVStream** %56, align 8
  %58 = call %struct.AVCodecContext* @_ZN5media24AVStreamToAVCodecContextEPK8AVStream(%struct.AVStream* %57) #13
  %59 = ptrtoint %struct.AVCodecContext* %58 to i64
  %60 = load %struct.AVCodecContext*, %struct.AVCodecContext** %28, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.5"* %27 to i64*
  store i64 %59, i64* %61, align 8
  %62 = icmp eq %struct.AVCodecContext* %60, null
  br i1 %62, label %66, label %63

63:                                               ; preds = %50
  %64 = bitcast %struct.AVCodecContext** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  store %struct.AVCodecContext* %60, %struct.AVCodecContext** %2, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  %65 = load %struct.AVCodecContext*, %struct.AVCodecContext** %28, align 8
  br label %66

66:                                               ; preds = %63, %50
  %67 = phi %struct.AVCodecContext* [ %65, %63 ], [ %58, %50 ]
  %68 = icmp ne %struct.AVCodecContext* %67, null
  ret i1 %68

69:                                               ; preds = %41
  %70 = add nuw nsw i64 %42, 1
  %71 = icmp ult i64 %70, %40
  br i1 %71, label %41, label %72

72:                                               ; preds = %69, %33, %23, %18
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader11OpenDecoderEv(%"class.media::AudioFileReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  %4 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %3, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = tail call %struct.AVCodec* @avcodec_find_decoder(i32 %5) #13
  %7 = icmp eq %struct.AVCodec* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %1
  %9 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  %10 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i64 0, i32 84
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 6
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %9, i64 0, i32 92
  store i32 1, i32* %14, align 4
  %15 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  br label %16

16:                                               ; preds = %13, %8
  %17 = phi %struct.AVCodecContext* [ %15, %13 ], [ %9, %8 ]
  %18 = tail call i32 @avcodec_open2(%struct.AVCodecContext* %17, %struct.AVCodec* nonnull %6, %struct.AVDictionary** null) #13
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  %22 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i64 0, i32 84
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 6
  br i1 %24, label %48, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i64 0, i32 89
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %21, i64 0, i32 83
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 @_ZN5media34ChannelLayoutToChromeChannelLayoutEli(i64 %27, i32 %29) #13
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %48, label %32

32:                                               ; preds = %25
  %33 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  %34 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i64 0, i32 83
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 6
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %33, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = tail call i32 @_ZN5media19CodecIDToAudioCodecE9AVCodecID(i32 %38) #13
  %40 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 5
  store i32 %39, i32* %40, align 8
  %41 = load %struct.AVCodecContext*, %struct.AVCodecContext** %2, align 8
  %42 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i64 0, i32 82
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 7
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %41, i64 0, i32 84
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 8
  store i32 %46, i32* %47, align 4
  br label %48

48:                                               ; preds = %20, %16, %25, %1, %32
  %49 = phi i1 [ true, %32 ], [ false, %20 ], [ false, %1 ], [ false, %25 ], [ false, %16 ]
  ret i1 %49
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN5media10FFmpegGlue11OpenContextEb(%"class.media::FFmpegGlue"*, i1 zeroext) local_unnamed_addr #4

declare i32 @avformat_find_stream_info(%struct.AVFormatContext*, %struct.AVDictionary**) local_unnamed_addr #4

declare %struct.AVCodecContext* @_ZN5media24AVStreamToAVCodecContextEPK8AVStream(%struct.AVStream*) local_unnamed_addr #4

declare %struct.AVCodec* @avcodec_find_decoder(i32) local_unnamed_addr #4

declare i32 @avcodec_open2(%struct.AVCodecContext*, %struct.AVCodec*, %struct.AVDictionary**) local_unnamed_addr #4

declare i32 @_ZN5media34ChannelLayoutToChromeChannelLayoutEli(i64, i32) local_unnamed_addr #4

declare i32 @_ZN5media19CodecIDToAudioCodecE9AVCodecID(i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5media15AudioFileReader16HasKnownDurationEv(%"class.media::AudioFileReader"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %2, align 8
  %4 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %3, i64 0, i32 3
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, -9223372036854775808
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media15AudioFileReader4ReadEPNSt3__16vectorINS1_10unique_ptrINS_8AudioBusENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEEi(%"class.media::AudioFileReader"*, %"class.std::__1::vector"*, i32) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.media::FFmpegDecodingLoop", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %struct.AVPacket, align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = ptrtoint %"class.std::__1::vector"* %1 to i64
  %10 = getelementptr inbounds %"class.media::FFmpegDecodingLoop", %"class.media::FFmpegDecodingLoop"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #13
  %11 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %12 = load %struct.AVCodecContext*, %struct.AVCodecContext** %11, align 8
  call void @_ZN5media18FFmpegDecodingLoopC1EP14AVCodecContextb(%"class.media::FFmpegDecodingLoop"* nonnull %4, %struct.AVCodecContext* %12, i1 zeroext false) #13
  %13 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #13
  store i32 0, i32* %5, align 4
  %14 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = ptrtoint %"class.media::AudioFileReader"* %0 to i64
  %16 = ptrtoint i32* %5 to i64
  %17 = call i8* @_Znwm(i64 72) #14, !noalias !2
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %struct.AVFrame*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS6_10unique_ptrINS3_8AudioBusENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS4_EES5_SG_EEEFbSI_EE3RunEPNS0_13BindStateBaseESI_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS5_10unique_ptrINS2_8AudioBusENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS3_EES4_SF_EE7DestroyEPKNS0_13BindStateBaseE) #13, !noalias !2
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)* @_ZN5media15AudioFileReader10OnNewFrameEPiPNSt3__16vectorINS2_10unique_ptrINS_8AudioBusENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEP7AVFrame to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to i64*
  store i64 %15, i64* %22, align 8, !noalias !2
  %23 = getelementptr inbounds i8, i8* %17, i64 56
  %24 = bitcast i8* %23 to i64*
  store i64 %16, i64* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %17, i64 64
  %26 = bitcast i8* %25 to i64*
  store i64 %9, i64* %26, align 8, !noalias !2
  %27 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %17, i8** %27, align 8, !alias.scope !2
  %28 = bitcast %struct.AVPacket* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %28) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 88, i1 false)
  %29 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %7, i64 0, i32 5
  %30 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %55, %3
  %36 = phi i32 [ 0, %3 ], [ %37, %55 ]
  %37 = add nuw nsw i32 %36, 1
  %38 = icmp slt i32 %36, %2
  br i1 %38, label %39, label %58

39:                                               ; preds = %35
  %40 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %30, align 8
  %41 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %40, i64 0, i32 3
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %41, align 8
  %43 = call i32 @av_read_frame(%struct.AVFormatContext* %42, %struct.AVPacket* nonnull %7) #13
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %45, label %58

45:                                               ; preds = %39, %49
  %46 = load i32, i32* %29, align 4
  %47 = load i32, i32* %31, align 8
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  call void @av_packet_unref(%struct.AVPacket* nonnull %7) #13
  %50 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %30, align 8
  %51 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %50, i64 0, i32 3
  %52 = load %struct.AVFormatContext*, %struct.AVFormatContext** %51, align 8
  %53 = call i32 @av_read_frame(%struct.AVFormatContext* %52, %struct.AVPacket* nonnull %7) #13
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %45, label %58

55:                                               ; preds = %45
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %32, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %33) #13
  %56 = call i32 @_ZN5media18FFmpegDecodingLoop12DecodePacketEPK8AVPacketN4base17RepeatingCallbackIFbP7AVFrameEEE(%"class.media::FFmpegDecodingLoop"* nonnull %4, %struct.AVPacket* nonnull %7, %"class.base::RepeatingCallback"* nonnull %8) #13
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #13
  call void @av_packet_unref(%struct.AVPacket* nonnull %7) #13
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %35, label %58

58:                                               ; preds = %39, %35, %55, %49
  %59 = load i32, i32* %5, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %28) #13
  %60 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #13
  call void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #13
  ret i32 %59
}

declare void @_ZN5media18FFmpegDecodingLoopC1EP14AVCodecContextb(%"class.media::FFmpegDecodingLoop"*, %struct.AVCodecContext*, i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader10OnNewFrameEPiPNSt3__16vectorINS2_10unique_ptrINS_8AudioBusENS2_14default_deleteIS5_EEEENS2_9allocatorIS8_EEEEP7AVFrame(%"class.media::AudioFileReader"* nocapture readonly, i32* nocapture, %"class.std::__1::vector"*, %struct.AVFrame* nocapture readonly) #1 align 2 {
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = alloca %"class.std::__1::unique_ptr.9", align 8
  %7 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %664, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 41
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 23
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %664

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %12, %20
  br i1 %21, label %22, label %664

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %664

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %87

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 38
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %87, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.base::TimeDelta"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #13
  %38 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 -6148914691236517206, i64* %38, align 8
  %39 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %39, align 8
  %41 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %40, i64 0, i32 3
  %42 = load %struct.AVFormatContext*, %struct.AVFormatContext** %41, align 8
  %43 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %42, i64 0, i32 7
  %44 = load %struct.AVStream**, %struct.AVStream*** %43, align 8
  %45 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %44, i64 %47
  %49 = load %struct.AVStream*, %struct.AVStream** %48, align 8
  %50 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %49, i64 0, i32 4
  %51 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 10
  %52 = load i64, i64* %51, align 8
  %53 = icmp slt i64 %52, 0
  %54 = select i1 %53, i64 %52, i64 0
  %55 = add nsw i64 %54, %34
  %56 = tail call i64 @_ZN5media19ConvertFromTimeBaseERK10AVRationall(%struct.AVRational* dereferenceable(8) %50, i64 %55) #13
  store i64 %56, i64* %38, align 8
  %57 = sitofp i32 %8 to double
  %58 = load i32, i32* %15, align 8
  %59 = sitofp i32 %58 to double
  %60 = fdiv double %57, %59
  %61 = fmul double %60, 1.000000e+06
  %62 = fcmp ult double %61, 0xC3E0000000000000
  %63 = fcmp ugt double %61, 0x43DFFFFFFFFFFFFF
  %64 = fcmp ogt double %61, 0xC3E0000000000000
  %65 = select i1 %64, double %61, double 0xC3E0000000000000
  %66 = fptosi double %65 to i64
  %67 = select i1 %62, i64 0, i64 9223372036854775807
  %68 = select i1 %63, i64 %67, i64 %66
  %69 = icmp slt i64 %56, %68
  %70 = icmp sgt i64 %56, 0
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %84

72:                                               ; preds = %36
  %73 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %5, i64 %68)
  %74 = fmul double %73, %57
  %75 = call double @llvm.floor.f64(double %74) #13
  %76 = fcmp ult double %75, 0xC1E0000000000000
  %77 = fcmp ugt double %75, 0x41DFFFFFFFC00000
  %78 = fcmp ogt double %75, 0xC1E0000000000000
  %79 = select i1 %78, double %75, double 0xC1E0000000000000
  %80 = fptosi double %79 to i32
  %81 = select i1 %76, i32 0, i32 2147483647
  %82 = select i1 %77, i32 %81, i32 %80
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %72, %36
  %85 = phi i32 [ %82, %72 ], [ %8, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %87

86:                                               ; preds = %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #13
  br label %664

87:                                               ; preds = %84, %32, %28
  %88 = phi i32 [ %8, %32 ], [ %8, %28 ], [ %85, %84 ]
  %89 = bitcast %"class.std::__1::unique_ptr.9"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = call %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32 %12, i32 %88) #13
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.media::AudioBus"* %90, %"class.media::AudioBus"** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %93 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %95 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %94, align 8
  %96 = icmp ult %"class.std::__1::unique_ptr.9"* %93, %95
  br i1 %96, label %97, label %103

97:                                               ; preds = %87
  %98 = ptrtoint %"class.media::AudioBus"* %90 to i64
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %91, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.9"* %93 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %93, i64 1
  %101 = ptrtoint %"class.std::__1::unique_ptr.9"* %100 to i64
  %102 = bitcast %"class.std::__1::unique_ptr.9"** %92 to i64*
  store i64 %101, i64* %102, align 8
  br label %104

103:                                              ; preds = %87
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5media8AudioBusENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"* %2, %"class.std::__1::unique_ptr.9"* nonnull dereferenceable(8) %6) #13
  br label %104

104:                                              ; preds = %97, %103
  %105 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %91, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %91, align 8
  %106 = icmp eq %"class.media::AudioBus"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.media::AudioBus"* %105 to void (%"class.media::AudioBus"*)***
  %109 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %109, i64 1
  %111 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %110, align 8
  call void %111(%"class.media::AudioBus"* nonnull %105) #13
  br label %112

112:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %113 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %92, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %113, i64 -1, i32 0, i32 0, i32 0
  %115 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %114, align 8
  %116 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %117 = load %struct.AVCodecContext*, %struct.AVCodecContext** %116, align 8
  %118 = getelementptr inbounds %struct.AVCodecContext, %struct.AVCodecContext* %117, i64 0, i32 84
  %119 = load i32, i32* %118, align 8
  switch i32 %119, label %244 [
    i32 3, label %135
    i32 8, label %120
  ]

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5
  %122 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 1
  %123 = bitcast float*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.std::__1::vector.16"* %121 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = lshr exact i64 %127, 3
  %129 = trunc i64 %128 to i32
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %661

131:                                              ; preds = %120
  %132 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 2
  %133 = sext i32 %88 to i64
  %134 = shl nsw i64 %133, 2
  br label %227

135:                                              ; preds = %112
  %136 = bitcast %struct.AVFrame* %3 to float**
  %137 = load float*, float** %136, align 8
  %138 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 6
  %139 = load i32, i32* %138, align 8
  call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %88, i32 %139) #13
  %140 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5
  %141 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 1
  %142 = bitcast float*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.std::__1::vector.16"* %140 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %143, %145
  %147 = lshr exact i64 %146, 3
  %148 = trunc i64 %147 to i32
  %149 = icmp sgt i32 %148, 0
  br i1 %149, label %150, label %224

150:                                              ; preds = %135
  %151 = inttoptr i64 %145 to float**
  %152 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 0
  %153 = icmp sgt i32 %88, 0
  %154 = shl i64 %146, 29
  %155 = ashr exact i64 %154, 32
  %156 = sext i32 %88 to i64
  %157 = and i64 %147, 4294967295
  %158 = add nsw i64 %156, -1
  %159 = and i64 %156, 3
  %160 = icmp ult i64 %158, 3
  %161 = sub nsw i64 %156, %159
  %162 = icmp eq i64 %159, 0
  br label %163

163:                                              ; preds = %188, %150
  %164 = phi float** [ %151, %150 ], [ %189, %188 ]
  %165 = phi i64 [ 0, %150 ], [ %186, %188 ]
  %166 = getelementptr inbounds float*, float** %164, i64 %165
  %167 = load float*, float** %166, align 8
  br i1 %153, label %168, label %185

168:                                              ; preds = %163
  br i1 %160, label %169, label %190

169:                                              ; preds = %190, %168
  %170 = phi i64 [ 0, %168 ], [ %220, %190 ]
  %171 = phi i64 [ %165, %168 ], [ %221, %190 ]
  br i1 %162, label %185, label %172

172:                                              ; preds = %169, %172
  %173 = phi i64 [ %181, %172 ], [ %170, %169 ]
  %174 = phi i64 [ %182, %172 ], [ %171, %169 ]
  %175 = phi i64 [ %183, %172 ], [ %159, %169 ]
  %176 = getelementptr inbounds float, float* %137, i64 %174
  %177 = bitcast float* %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = getelementptr inbounds float, float* %167, i64 %173
  %180 = bitcast float* %179 to i32*
  store i32 %178, i32* %180, align 4
  %181 = add nuw nsw i64 %173, 1
  %182 = add i64 %174, %155
  %183 = add i64 %175, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %172, !llvm.loop !7

185:                                              ; preds = %169, %172, %163
  %186 = add nuw nsw i64 %165, 1
  %187 = icmp eq i64 %186, %157
  br i1 %187, label %224, label %188

188:                                              ; preds = %185
  %189 = load float**, float*** %152, align 8
  br label %163

190:                                              ; preds = %168, %190
  %191 = phi i64 [ %220, %190 ], [ 0, %168 ]
  %192 = phi i64 [ %221, %190 ], [ %165, %168 ]
  %193 = phi i64 [ %222, %190 ], [ %161, %168 ]
  %194 = getelementptr inbounds float, float* %137, i64 %192
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds float, float* %167, i64 %191
  %198 = bitcast float* %197 to i32*
  store i32 %196, i32* %198, align 4
  %199 = or i64 %191, 1
  %200 = add i64 %192, %155
  %201 = getelementptr inbounds float, float* %137, i64 %200
  %202 = bitcast float* %201 to i32*
  %203 = load i32, i32* %202, align 4
  %204 = getelementptr inbounds float, float* %167, i64 %199
  %205 = bitcast float* %204 to i32*
  store i32 %203, i32* %205, align 4
  %206 = or i64 %191, 2
  %207 = add i64 %200, %155
  %208 = getelementptr inbounds float, float* %137, i64 %207
  %209 = bitcast float* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds float, float* %167, i64 %206
  %212 = bitcast float* %211 to i32*
  store i32 %210, i32* %212, align 4
  %213 = or i64 %191, 3
  %214 = add i64 %207, %155
  %215 = getelementptr inbounds float, float* %137, i64 %214
  %216 = bitcast float* %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds float, float* %167, i64 %213
  %219 = bitcast float* %218 to i32*
  store i32 %217, i32* %219, align 4
  %220 = add nuw nsw i64 %191, 4
  %221 = add i64 %214, %155
  %222 = add i64 %193, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %169, label %190

224:                                              ; preds = %185, %135
  %225 = load i32, i32* %138, align 8
  %226 = sub nsw i32 %225, %88
  call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* %115, i32 %88, i32 %226) #13
  br label %661

227:                                              ; preds = %131, %227
  %228 = phi i64 [ %126, %131 ], [ %239, %227 ]
  %229 = phi i64 [ 0, %131 ], [ %237, %227 ]
  %230 = inttoptr i64 %228 to float**
  %231 = getelementptr inbounds float*, float** %230, i64 %229
  %232 = bitcast float** %231 to i8**
  %233 = load i8*, i8** %232, align 8
  %234 = load i8**, i8*** %132, align 8
  %235 = getelementptr inbounds i8*, i8** %234, i64 %229
  %236 = load i8*, i8** %235, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %233, i8* align 1 %236, i64 %134, i1 false)
  %237 = add nuw nsw i64 %229, 1
  %238 = load i64, i64* %123, align 8
  %239 = load i64, i64* %125, align 8
  %240 = sub i64 %238, %239
  %241 = shl i64 %240, 29
  %242 = ashr i64 %241, 32
  %243 = icmp slt i64 %237, %242
  br i1 %243, label %227, label %661

244:                                              ; preds = %112
  %245 = call i32 @av_get_bytes_per_sample(i32 %119) #13
  switch i32 %245, label %660 [
    i32 1, label %246
    i32 2, label %379
    i32 4, label %502
  ]

246:                                              ; preds = %244
  %247 = getelementptr inbounds %struct.AVFrame, %struct.AVFrame* %3, i64 0, i32 0, i64 0
  %248 = load i8*, i8** %247, align 8
  %249 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 6
  %250 = load i32, i32* %249, align 8
  call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %88, i32 %250) #13
  %251 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5
  %252 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 1
  %253 = bitcast float*** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.std::__1::vector.16"* %251 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = sub i64 %254, %256
  %258 = lshr exact i64 %257, 3
  %259 = trunc i64 %258 to i32
  %260 = icmp sgt i32 %259, 0
  br i1 %260, label %261, label %376

261:                                              ; preds = %246
  %262 = inttoptr i64 %256 to float**
  %263 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 0
  %264 = icmp sgt i32 %88, 0
  %265 = shl i64 %257, 29
  %266 = ashr exact i64 %265, 32
  %267 = sext i32 %88 to i64
  %268 = and i64 %258, 4294967295
  %269 = icmp ugt i32 %88, 7
  %270 = icmp eq i64 %265, 4294967296
  %271 = and i1 %269, %270
  %272 = and i64 %267, -8
  %273 = mul nsw i64 %272, %266
  %274 = icmp eq i64 %272, %267
  %275 = and i64 %267, 1
  %276 = icmp eq i64 %275, 0
  %277 = sub nsw i64 0, %267
  br label %278

278:                                              ; preds = %348, %261
  %279 = phi float** [ %262, %261 ], [ %349, %348 ]
  %280 = phi i64 [ 0, %261 ], [ %346, %348 ]
  %281 = getelementptr i8, i8* %248, i64 %280
  %282 = add i64 %280, %267
  %283 = getelementptr i8, i8* %248, i64 %282
  %284 = getelementptr inbounds float*, float** %279, i64 %280
  %285 = load float*, float** %284, align 8
  %286 = bitcast float* %285 to i8*
  br i1 %264, label %287, label %345

287:                                              ; preds = %278
  br i1 %271, label %288, label %294

288:                                              ; preds = %287
  %289 = getelementptr float, float* %285, i64 %267
  %290 = bitcast float* %289 to i8*
  %291 = icmp ugt i8* %283, %286
  %292 = icmp ult i8* %281, %290
  %293 = and i1 %291, %292
  br i1 %293, label %294, label %314

294:                                              ; preds = %287, %344, %288
  %295 = phi i64 [ 0, %288 ], [ 0, %287 ], [ %272, %344 ]
  %296 = phi i64 [ %280, %288 ], [ %280, %287 ], [ %315, %344 ]
  %297 = xor i64 %295, -1
  br i1 %276, label %310, label %298

298:                                              ; preds = %294
  %299 = getelementptr inbounds i8, i8* %248, i64 %296
  %300 = load i8, i8* %299, align 1
  %301 = zext i8 %300 to i32
  %302 = add nsw i32 %301, -128
  %303 = sitofp i32 %302 to float
  %304 = icmp slt i32 %302, 0
  %305 = select i1 %304, float 7.812500e-03, float 0x3F80204080000000
  %306 = fmul float %305, %303
  %307 = getelementptr inbounds float, float* %285, i64 %295
  store float %306, float* %307, align 4
  %308 = or i64 %295, 1
  %309 = add i64 %296, %266
  br label %310

310:                                              ; preds = %298, %294
  %311 = phi i64 [ %308, %298 ], [ %295, %294 ]
  %312 = phi i64 [ %309, %298 ], [ %296, %294 ]
  %313 = icmp eq i64 %297, %277
  br i1 %313, label %345, label %350

314:                                              ; preds = %288
  %315 = add i64 %280, %273
  br label %316

316:                                              ; preds = %316, %314
  %317 = phi i64 [ 0, %314 ], [ %342, %316 ]
  %318 = mul i64 %317, %266
  %319 = add i64 %280, %318
  %320 = getelementptr inbounds i8, i8* %248, i64 %319
  %321 = bitcast i8* %320 to <4 x i8>*
  %322 = load <4 x i8>, <4 x i8>* %321, align 1, !alias.scope !9
  %323 = getelementptr inbounds i8, i8* %320, i64 4
  %324 = bitcast i8* %323 to <4 x i8>*
  %325 = load <4 x i8>, <4 x i8>* %324, align 1, !alias.scope !9
  %326 = zext <4 x i8> %322 to <4 x i32>
  %327 = zext <4 x i8> %325 to <4 x i32>
  %328 = add nsw <4 x i32> %326, <i32 -128, i32 -128, i32 -128, i32 -128>
  %329 = add nsw <4 x i32> %327, <i32 -128, i32 -128, i32 -128, i32 -128>
  %330 = sitofp <4 x i32> %328 to <4 x float>
  %331 = sitofp <4 x i32> %329 to <4 x float>
  %332 = icmp slt <4 x i32> %328, zeroinitializer
  %333 = icmp slt <4 x i32> %329, zeroinitializer
  %334 = select <4 x i1> %332, <4 x float> <float 7.812500e-03, float 7.812500e-03, float 7.812500e-03, float 7.812500e-03>, <4 x float> <float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000>
  %335 = select <4 x i1> %333, <4 x float> <float 7.812500e-03, float 7.812500e-03, float 7.812500e-03, float 7.812500e-03>, <4 x float> <float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000, float 0x3F80204080000000>
  %336 = fmul <4 x float> %334, %330
  %337 = fmul <4 x float> %335, %331
  %338 = getelementptr inbounds float, float* %285, i64 %317
  %339 = bitcast float* %338 to <4 x float>*
  store <4 x float> %336, <4 x float>* %339, align 4, !alias.scope !12, !noalias !9
  %340 = getelementptr inbounds float, float* %338, i64 4
  %341 = bitcast float* %340 to <4 x float>*
  store <4 x float> %337, <4 x float>* %341, align 4, !alias.scope !12, !noalias !9
  %342 = add i64 %317, 8
  %343 = icmp eq i64 %342, %272
  br i1 %343, label %344, label %316, !llvm.loop !14

344:                                              ; preds = %316
  br i1 %274, label %345, label %294

345:                                              ; preds = %310, %350, %344, %278
  %346 = add nuw nsw i64 %280, 1
  %347 = icmp eq i64 %346, %268
  br i1 %347, label %376, label %348

348:                                              ; preds = %345
  %349 = load float**, float*** %263, align 8
  br label %278

350:                                              ; preds = %310, %350
  %351 = phi i64 [ %373, %350 ], [ %311, %310 ]
  %352 = phi i64 [ %374, %350 ], [ %312, %310 ]
  %353 = getelementptr inbounds i8, i8* %248, i64 %352
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  %356 = add nsw i32 %355, -128
  %357 = sitofp i32 %356 to float
  %358 = icmp slt i32 %356, 0
  %359 = select i1 %358, float 7.812500e-03, float 0x3F80204080000000
  %360 = fmul float %359, %357
  %361 = getelementptr inbounds float, float* %285, i64 %351
  store float %360, float* %361, align 4
  %362 = add nuw nsw i64 %351, 1
  %363 = add i64 %352, %266
  %364 = getelementptr inbounds i8, i8* %248, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = zext i8 %365 to i32
  %367 = add nsw i32 %366, -128
  %368 = sitofp i32 %367 to float
  %369 = icmp slt i32 %367, 0
  %370 = select i1 %369, float 7.812500e-03, float 0x3F80204080000000
  %371 = fmul float %370, %368
  %372 = getelementptr inbounds float, float* %285, i64 %362
  store float %371, float* %372, align 4
  %373 = add nuw nsw i64 %351, 2
  %374 = add i64 %363, %266
  %375 = icmp eq i64 %373, %267
  br i1 %375, label %345, label %350, !llvm.loop !16

376:                                              ; preds = %345, %246
  %377 = load i32, i32* %249, align 8
  %378 = sub nsw i32 %377, %88
  call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* %115, i32 %88, i32 %378) #13
  br label %661

379:                                              ; preds = %244
  %380 = bitcast %struct.AVFrame* %3 to i16**
  %381 = load i16*, i16** %380, align 8
  %382 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 6
  %383 = load i32, i32* %382, align 8
  call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %88, i32 %383) #13
  %384 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5
  %385 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 1
  %386 = bitcast float*** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = bitcast %"class.std::__1::vector.16"* %384 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = sub i64 %387, %389
  %391 = lshr exact i64 %390, 3
  %392 = trunc i64 %391 to i32
  %393 = icmp sgt i32 %392, 0
  br i1 %393, label %394, label %499

394:                                              ; preds = %379
  %395 = inttoptr i64 %389 to float**
  %396 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 0
  %397 = icmp sgt i32 %88, 0
  %398 = shl i64 %390, 29
  %399 = ashr exact i64 %398, 32
  %400 = sext i32 %88 to i64
  %401 = and i64 %391, 4294967295
  %402 = icmp ugt i32 %88, 7
  %403 = icmp eq i64 %398, 4294967296
  %404 = and i1 %402, %403
  %405 = and i64 %400, -8
  %406 = mul nsw i64 %405, %399
  %407 = icmp eq i64 %405, %400
  %408 = and i64 %400, 1
  %409 = icmp eq i64 %408, 0
  %410 = sub nsw i64 0, %400
  br label %411

411:                                              ; preds = %475, %394
  %412 = phi float** [ %395, %394 ], [ %476, %475 ]
  %413 = phi i64 [ 0, %394 ], [ %473, %475 ]
  %414 = getelementptr i16, i16* %381, i64 %413
  %415 = add i64 %413, %400
  %416 = getelementptr i16, i16* %381, i64 %415
  %417 = getelementptr inbounds float*, float** %412, i64 %413
  %418 = load float*, float** %417, align 8
  br i1 %397, label %419, label %472

419:                                              ; preds = %411
  br i1 %404, label %420, label %427

420:                                              ; preds = %419
  %421 = getelementptr float, float* %418, i64 %400
  %422 = bitcast i16* %416 to float*
  %423 = icmp ult float* %418, %422
  %424 = bitcast float* %421 to i16*
  %425 = icmp ult i16* %414, %424
  %426 = and i1 %423, %425
  br i1 %426, label %427, label %445

427:                                              ; preds = %419, %471, %420
  %428 = phi i64 [ 0, %420 ], [ 0, %419 ], [ %405, %471 ]
  %429 = phi i64 [ %413, %420 ], [ %413, %419 ], [ %446, %471 ]
  %430 = xor i64 %428, -1
  br i1 %409, label %441, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds i16, i16* %381, i64 %429
  %433 = load i16, i16* %432, align 2
  %434 = sitofp i16 %433 to float
  %435 = icmp slt i16 %433, 0
  %436 = select i1 %435, float 0x3F00000000000000, float 0x3F00002000000000
  %437 = fmul float %436, %434
  %438 = getelementptr inbounds float, float* %418, i64 %428
  store float %437, float* %438, align 4
  %439 = or i64 %428, 1
  %440 = add i64 %429, %399
  br label %441

441:                                              ; preds = %431, %427
  %442 = phi i64 [ %439, %431 ], [ %428, %427 ]
  %443 = phi i64 [ %440, %431 ], [ %429, %427 ]
  %444 = icmp eq i64 %430, %410
  br i1 %444, label %472, label %477

445:                                              ; preds = %420
  %446 = add i64 %413, %406
  br label %447

447:                                              ; preds = %447, %445
  %448 = phi i64 [ 0, %445 ], [ %469, %447 ]
  %449 = mul i64 %448, %399
  %450 = add i64 %413, %449
  %451 = getelementptr inbounds i16, i16* %381, i64 %450
  %452 = bitcast i16* %451 to <4 x i16>*
  %453 = load <4 x i16>, <4 x i16>* %452, align 2, !alias.scope !17
  %454 = getelementptr inbounds i16, i16* %451, i64 4
  %455 = bitcast i16* %454 to <4 x i16>*
  %456 = load <4 x i16>, <4 x i16>* %455, align 2, !alias.scope !17
  %457 = sitofp <4 x i16> %453 to <4 x float>
  %458 = sitofp <4 x i16> %456 to <4 x float>
  %459 = icmp slt <4 x i16> %453, zeroinitializer
  %460 = icmp slt <4 x i16> %456, zeroinitializer
  %461 = select <4 x i1> %459, <4 x float> <float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000>, <4 x float> <float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000>
  %462 = select <4 x i1> %460, <4 x float> <float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000, float 0x3F00000000000000>, <4 x float> <float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000, float 0x3F00002000000000>
  %463 = fmul <4 x float> %461, %457
  %464 = fmul <4 x float> %462, %458
  %465 = getelementptr inbounds float, float* %418, i64 %448
  %466 = bitcast float* %465 to <4 x float>*
  store <4 x float> %463, <4 x float>* %466, align 4, !alias.scope !20, !noalias !17
  %467 = getelementptr inbounds float, float* %465, i64 4
  %468 = bitcast float* %467 to <4 x float>*
  store <4 x float> %464, <4 x float>* %468, align 4, !alias.scope !20, !noalias !17
  %469 = add i64 %448, 8
  %470 = icmp eq i64 %469, %405
  br i1 %470, label %471, label %447, !llvm.loop !22

471:                                              ; preds = %447
  br i1 %407, label %472, label %427

472:                                              ; preds = %441, %477, %471, %411
  %473 = add nuw nsw i64 %413, 1
  %474 = icmp eq i64 %473, %401
  br i1 %474, label %499, label %475

475:                                              ; preds = %472
  %476 = load float**, float*** %396, align 8
  br label %411

477:                                              ; preds = %441, %477
  %478 = phi i64 [ %496, %477 ], [ %442, %441 ]
  %479 = phi i64 [ %497, %477 ], [ %443, %441 ]
  %480 = getelementptr inbounds i16, i16* %381, i64 %479
  %481 = load i16, i16* %480, align 2
  %482 = sitofp i16 %481 to float
  %483 = icmp slt i16 %481, 0
  %484 = select i1 %483, float 0x3F00000000000000, float 0x3F00002000000000
  %485 = fmul float %484, %482
  %486 = getelementptr inbounds float, float* %418, i64 %478
  store float %485, float* %486, align 4
  %487 = add nuw nsw i64 %478, 1
  %488 = add i64 %479, %399
  %489 = getelementptr inbounds i16, i16* %381, i64 %488
  %490 = load i16, i16* %489, align 2
  %491 = sitofp i16 %490 to float
  %492 = icmp slt i16 %490, 0
  %493 = select i1 %492, float 0x3F00000000000000, float 0x3F00002000000000
  %494 = fmul float %493, %491
  %495 = getelementptr inbounds float, float* %418, i64 %487
  store float %494, float* %495, align 4
  %496 = add nuw nsw i64 %478, 2
  %497 = add i64 %488, %399
  %498 = icmp eq i64 %496, %400
  br i1 %498, label %472, label %477, !llvm.loop !23

499:                                              ; preds = %472, %379
  %500 = load i32, i32* %382, align 8
  %501 = sub nsw i32 %500, %88
  call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* %115, i32 %88, i32 %501) #13
  br label %661

502:                                              ; preds = %244
  %503 = bitcast %struct.AVFrame* %3 to i32**
  %504 = load i32*, i32** %503, align 8
  %505 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 6
  %506 = load i32, i32* %505, align 8
  call void @_ZN5media8AudioBus13CheckOverflowEiii(i32 0, i32 %88, i32 %506) #13
  %507 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5
  %508 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 1
  %509 = bitcast float*** %508 to i64*
  %510 = load i64, i64* %509, align 8
  %511 = bitcast %"class.std::__1::vector.16"* %507 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = sub i64 %510, %512
  %514 = lshr exact i64 %513, 3
  %515 = trunc i64 %514 to i32
  %516 = icmp sgt i32 %515, 0
  br i1 %516, label %517, label %657

517:                                              ; preds = %502
  %518 = inttoptr i64 %512 to float**
  %519 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %115, i64 0, i32 5, i32 0, i32 0
  %520 = icmp sgt i32 %88, 0
  %521 = shl i64 %513, 29
  %522 = ashr exact i64 %521, 32
  %523 = sext i32 %88 to i64
  %524 = and i64 %514, 4294967295
  %525 = add nsw i64 %523, -8
  %526 = lshr i64 %525, 3
  %527 = add nuw nsw i64 %526, 1
  %528 = icmp ugt i32 %88, 7
  %529 = icmp eq i64 %521, 4294967296
  %530 = and i1 %528, %529
  %531 = and i64 %523, -8
  %532 = mul nsw i64 %531, %522
  %533 = and i64 %527, 1
  %534 = icmp eq i64 %526, 0
  %535 = sub nuw nsw i64 %527, %533
  %536 = icmp eq i64 %533, 0
  %537 = icmp eq i64 %531, %523
  %538 = and i64 %523, 1
  %539 = icmp eq i64 %538, 0
  %540 = sub nsw i64 0, %523
  br label %541

541:                                              ; preds = %637, %517
  %542 = phi float** [ %518, %517 ], [ %638, %637 ]
  %543 = phi i64 [ 0, %517 ], [ %635, %637 ]
  %544 = getelementptr i32, i32* %504, i64 %543
  %545 = add i64 %543, %523
  %546 = getelementptr i32, i32* %504, i64 %545
  %547 = getelementptr inbounds float*, float** %542, i64 %543
  %548 = load float*, float** %547, align 8
  br i1 %520, label %549, label %634

549:                                              ; preds = %541
  br i1 %530, label %550, label %557

550:                                              ; preds = %549
  %551 = getelementptr float, float* %548, i64 %523
  %552 = bitcast i32* %546 to float*
  %553 = icmp ult float* %548, %552
  %554 = bitcast float* %551 to i32*
  %555 = icmp ult i32* %544, %554
  %556 = and i1 %553, %555
  br i1 %556, label %557, label %573

557:                                              ; preds = %549, %633, %550
  %558 = phi i64 [ 0, %550 ], [ 0, %549 ], [ %531, %633 ]
  %559 = phi i64 [ %543, %550 ], [ %543, %549 ], [ %574, %633 ]
  %560 = xor i64 %558, -1
  br i1 %539, label %569, label %561

561:                                              ; preds = %557
  %562 = getelementptr inbounds i32, i32* %504, i64 %559
  %563 = load i32, i32* %562, align 4
  %564 = sitofp i32 %563 to float
  %565 = fmul float %564, 0x3E00000000000000
  %566 = getelementptr inbounds float, float* %548, i64 %558
  store float %565, float* %566, align 4
  %567 = or i64 %558, 1
  %568 = add i64 %559, %522
  br label %569

569:                                              ; preds = %561, %557
  %570 = phi i64 [ %567, %561 ], [ %558, %557 ]
  %571 = phi i64 [ %568, %561 ], [ %559, %557 ]
  %572 = icmp eq i64 %560, %540
  br i1 %572, label %634, label %639

573:                                              ; preds = %550
  %574 = add i64 %543, %532
  br i1 %534, label %614, label %575

575:                                              ; preds = %573, %575
  %576 = phi i64 [ %611, %575 ], [ 0, %573 ]
  %577 = phi i64 [ %612, %575 ], [ %535, %573 ]
  %578 = mul i64 %576, %522
  %579 = add i64 %543, %578
  %580 = getelementptr inbounds i32, i32* %504, i64 %579
  %581 = bitcast i32* %580 to <4 x i32>*
  %582 = load <4 x i32>, <4 x i32>* %581, align 4, !alias.scope !24
  %583 = getelementptr inbounds i32, i32* %580, i64 4
  %584 = bitcast i32* %583 to <4 x i32>*
  %585 = load <4 x i32>, <4 x i32>* %584, align 4, !alias.scope !24
  %586 = sitofp <4 x i32> %582 to <4 x float>
  %587 = sitofp <4 x i32> %585 to <4 x float>
  %588 = fmul <4 x float> %586, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %589 = fmul <4 x float> %587, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %590 = getelementptr inbounds float, float* %548, i64 %576
  %591 = bitcast float* %590 to <4 x float>*
  store <4 x float> %588, <4 x float>* %591, align 4, !alias.scope !27, !noalias !24
  %592 = getelementptr inbounds float, float* %590, i64 4
  %593 = bitcast float* %592 to <4 x float>*
  store <4 x float> %589, <4 x float>* %593, align 4, !alias.scope !27, !noalias !24
  %594 = or i64 %576, 8
  %595 = mul i64 %594, %522
  %596 = add i64 %543, %595
  %597 = getelementptr inbounds i32, i32* %504, i64 %596
  %598 = bitcast i32* %597 to <4 x i32>*
  %599 = load <4 x i32>, <4 x i32>* %598, align 4, !alias.scope !24
  %600 = getelementptr inbounds i32, i32* %597, i64 4
  %601 = bitcast i32* %600 to <4 x i32>*
  %602 = load <4 x i32>, <4 x i32>* %601, align 4, !alias.scope !24
  %603 = sitofp <4 x i32> %599 to <4 x float>
  %604 = sitofp <4 x i32> %602 to <4 x float>
  %605 = fmul <4 x float> %603, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %606 = fmul <4 x float> %604, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %607 = getelementptr inbounds float, float* %548, i64 %594
  %608 = bitcast float* %607 to <4 x float>*
  store <4 x float> %605, <4 x float>* %608, align 4, !alias.scope !27, !noalias !24
  %609 = getelementptr inbounds float, float* %607, i64 4
  %610 = bitcast float* %609 to <4 x float>*
  store <4 x float> %606, <4 x float>* %610, align 4, !alias.scope !27, !noalias !24
  %611 = add i64 %576, 16
  %612 = add i64 %577, -2
  %613 = icmp eq i64 %612, 0
  br i1 %613, label %614, label %575, !llvm.loop !29

614:                                              ; preds = %575, %573
  %615 = phi i64 [ 0, %573 ], [ %611, %575 ]
  br i1 %536, label %633, label %616

616:                                              ; preds = %614
  %617 = mul i64 %615, %522
  %618 = add i64 %543, %617
  %619 = getelementptr inbounds i32, i32* %504, i64 %618
  %620 = bitcast i32* %619 to <4 x i32>*
  %621 = load <4 x i32>, <4 x i32>* %620, align 4, !alias.scope !24
  %622 = getelementptr inbounds i32, i32* %619, i64 4
  %623 = bitcast i32* %622 to <4 x i32>*
  %624 = load <4 x i32>, <4 x i32>* %623, align 4, !alias.scope !24
  %625 = sitofp <4 x i32> %621 to <4 x float>
  %626 = sitofp <4 x i32> %624 to <4 x float>
  %627 = fmul <4 x float> %625, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %628 = fmul <4 x float> %626, <float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000, float 0x3E00000000000000>
  %629 = getelementptr inbounds float, float* %548, i64 %615
  %630 = bitcast float* %629 to <4 x float>*
  store <4 x float> %627, <4 x float>* %630, align 4, !alias.scope !27, !noalias !24
  %631 = getelementptr inbounds float, float* %629, i64 4
  %632 = bitcast float* %631 to <4 x float>*
  store <4 x float> %628, <4 x float>* %632, align 4, !alias.scope !27, !noalias !24
  br label %633

633:                                              ; preds = %614, %616
  br i1 %537, label %634, label %557

634:                                              ; preds = %569, %639, %633, %541
  %635 = add nuw nsw i64 %543, 1
  %636 = icmp eq i64 %635, %524
  br i1 %636, label %657, label %637

637:                                              ; preds = %634
  %638 = load float**, float*** %519, align 8
  br label %541

639:                                              ; preds = %569, %639
  %640 = phi i64 [ %654, %639 ], [ %570, %569 ]
  %641 = phi i64 [ %655, %639 ], [ %571, %569 ]
  %642 = getelementptr inbounds i32, i32* %504, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = sitofp i32 %643 to float
  %645 = fmul float %644, 0x3E00000000000000
  %646 = getelementptr inbounds float, float* %548, i64 %640
  store float %645, float* %646, align 4
  %647 = add nuw nsw i64 %640, 1
  %648 = add i64 %641, %522
  %649 = getelementptr inbounds i32, i32* %504, i64 %648
  %650 = load i32, i32* %649, align 4
  %651 = sitofp i32 %650 to float
  %652 = fmul float %651, 0x3E00000000000000
  %653 = getelementptr inbounds float, float* %548, i64 %647
  store float %652, float* %653, align 4
  %654 = add nuw nsw i64 %640, 2
  %655 = add i64 %648, %522
  %656 = icmp eq i64 %654, %523
  br i1 %656, label %634, label %639, !llvm.loop !30

657:                                              ; preds = %634, %502
  %658 = load i32, i32* %505, align 8
  %659 = sub nsw i32 %658, %88
  call void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"* %115, i32 %88, i32 %659) #13
  br label %661

660:                                              ; preds = %244
  call void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"* %115, i32 %88) #13
  br label %661

661:                                              ; preds = %227, %120, %376, %499, %657, %660, %224
  %662 = load i32, i32* %1, align 4
  %663 = add nsw i32 %662, %88
  store i32 %663, i32* %1, align 4
  br label %664

664:                                              ; preds = %86, %661, %22, %18, %10, %4
  %665 = phi i1 [ false, %4 ], [ true, %661 ], [ true, %86 ], [ false, %22 ], [ false, %18 ], [ false, %10 ]
  ret i1 %665
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader10ReadPacketEP8AVPacket(%"class.media::AudioFileReader"* nocapture readonly, %struct.AVPacket*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %4, align 8
  %6 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %5, i64 0, i32 3
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %6, align 8
  %8 = tail call i32 @av_read_frame(%struct.AVFormatContext* %7, %struct.AVPacket* %1) #13
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  br label %12

12:                                               ; preds = %10, %16
  %13 = load i32, i32* %3, align 4
  %14 = load i32, i32* %11, align 8
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  tail call void @av_packet_unref(%struct.AVPacket* %1) #13
  %17 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %4, align 8
  %18 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %17, i64 0, i32 3
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %18, align 8
  %20 = tail call i32 @av_read_frame(%struct.AVFormatContext* %19, %struct.AVPacket* %1) #13
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %16, %2
  %23 = phi i1 [ false, %2 ], [ false, %16 ], [ true, %12 ]
  ret i1 %23
}

declare i32 @_ZN5media18FFmpegDecodingLoop12DecodePacketEPK8AVPacketN4base17RepeatingCallbackIFbP7AVFrameEEE(%"class.media::FFmpegDecodingLoop"*, %struct.AVPacket*, %"class.base::RepeatingCallback"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5media15AudioFileReader11GetDurationEv(%"class.media::AudioFileReader"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %2, align 8
  %4 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %3, i64 0, i32 3
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %23

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  %15 = fdiv double 2.631000e+09, %14
  %16 = tail call double @llvm.ceil.f64(double %15)
  %17 = sitofp i64 %7 to double
  %18 = fadd double %16, %17
  %19 = fcmp oge double %18, 0xC3E0000000000000
  %20 = fcmp ole double %18, 0x43DFFFFFFFFFFFFF
  %21 = and i1 %20, %19
  %22 = fptosi double %18 to i64
  br i1 %21, label %28, label %27, !prof !31

23:                                               ; preds = %1
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 1) #13
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  br i1 %25, label %27, label %28, !prof !32

27:                                               ; preds = %23, %11
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %23, %11
  %29 = phi i64 [ %22, %11 ], [ %26, %23 ]
  %30 = tail call i64 @_ZN5media19ConvertFromTimeBaseERK10AVRationall(%struct.AVRational* nonnull dereferenceable(8) @_ZZNK5media15AudioFileReader11GetDurationEvE12av_time_base, i64 %29) #13
  ret i64 %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #7

declare i64 @_ZN5media19ConvertFromTimeBaseERK10AVRationall(%struct.AVRational* dereferenceable(8), i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media15AudioFileReader17GetNumberOfFramesEv(%"class.media::AudioFileReader"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %2, align 8
  %4 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %3, i64 0, i32 3
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i64 0, i32 11
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %23

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = sitofp i32 %13 to double
  %15 = fdiv double 2.631000e+09, %14
  %16 = tail call double @llvm.ceil.f64(double %15) #13
  %17 = sitofp i64 %7 to double
  %18 = fadd double %16, %17
  %19 = fcmp oge double %18, 0xC3E0000000000000
  %20 = fcmp ole double %18, 0x43DFFFFFFFFFFFFF
  %21 = and i1 %20, %19
  %22 = fptosi double %18 to i64
  br i1 %21, label %28, label %27, !prof !31

23:                                               ; preds = %1
  %24 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 1) #13
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  br i1 %25, label %27, label %28, !prof !32

27:                                               ; preds = %23, %11
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %11, %23
  %29 = phi i64 [ %22, %11 ], [ %26, %23 ]
  %30 = tail call i64 @_ZN5media19ConvertFromTimeBaseERK10AVRationall(%struct.AVRational* nonnull dereferenceable(8) @_ZZNK5media15AudioFileReader11GetDurationEvE12av_time_base, i64 %29) #13
  %31 = add i64 %30, -9223372036854775807
  %32 = icmp ult i64 %31, 2
  br i1 %32, label %36, label %33

33:                                               ; preds = %28
  %34 = sitofp i64 %30 to double
  %35 = fdiv double %34, 1.000000e+06
  br label %39

36:                                               ; preds = %28
  %37 = icmp slt i64 %30, 0
  %38 = select i1 %37, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %39

39:                                               ; preds = %33, %36
  %40 = phi double [ %38, %36 ], [ %35, %33 ]
  %41 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 7
  %42 = load i32, i32* %41, align 8
  %43 = sitofp i32 %42 to double
  %44 = fmul double %40, %43
  %45 = tail call double @llvm.ceil.f64(double %44) #13
  %46 = fcmp ult double %45, 0xC1E0000000000000
  %47 = fcmp ugt double %45, 0x41DFFFFFFFC00000
  %48 = fcmp ogt double %45, 0xC1E0000000000000
  %49 = select i1 %48, double %45, double 0xC1E0000000000000
  %50 = fptosi double %49 to i32
  %51 = select i1 %46, i32 0, i32 2147483647
  %52 = select i1 %47, i32 %51, i32 %50
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader21OpenDemuxerForTestingEv(%"class.media::AudioFileReader"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZN5media15AudioFileReader11OpenDemuxerEv(%"class.media::AudioFileReader"* %0)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader20ReadPacketForTestingEP8AVPacket(%"class.media::AudioFileReader"* nocapture readonly, %struct.AVPacket*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %1, i64 0, i32 5
  %4 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %4, align 8
  %6 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %5, i64 0, i32 3
  %7 = load %struct.AVFormatContext*, %struct.AVFormatContext** %6, align 8
  %8 = tail call i32 @av_read_frame(%struct.AVFormatContext* %7, %struct.AVPacket* %1) #13
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %22

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  br label %12

12:                                               ; preds = %16, %10
  %13 = load i32, i32* %3, align 4
  %14 = load i32, i32* %11, align 8
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  tail call void @av_packet_unref(%struct.AVPacket* %1) #13
  %17 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %4, align 8
  %18 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %17, i64 0, i32 3
  %19 = load %struct.AVFormatContext*, %struct.AVFormatContext** %18, align 8
  %20 = tail call i32 @av_read_frame(%struct.AVFormatContext* %19, %struct.AVPacket* %1) #13
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %12, label %22

22:                                               ; preds = %12, %16, %2
  %23 = phi i1 [ false, %2 ], [ true, %12 ], [ false, %16 ]
  ret i1 %23
}

declare i32 @av_read_frame(%struct.AVFormatContext*, %struct.AVPacket*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #13
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #13
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32, i32) local_unnamed_addr #4

declare i32 @av_get_bytes_per_sample(i32) local_unnamed_addr #4

declare void @_ZN5media8AudioBus10ZeroFramesEi(%"class.media::AudioBus"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media15AudioFileReader14SeekForTestingEN4base9TimeDeltaE(%"class.media::AudioFileReader"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %5, align 8
  %7 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %6, i64 0, i32 3
  %8 = load %struct.AVFormatContext*, %struct.AVFormatContext** %7, align 8
  %9 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %8, i64 0, i32 7
  %12 = load %struct.AVStream**, %struct.AVStream*** %11, align 8
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %12, i64 %13
  %15 = load %struct.AVStream*, %struct.AVStream** %14, align 8
  %16 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %15, i64 0, i32 4
  %17 = call i64 @_ZN5media17ConvertToTimeBaseERK10AVRationalRKN4base9TimeDeltaE(%struct.AVRational* dereferenceable(8) %16, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #13
  %18 = call i32 @av_seek_frame(%struct.AVFormatContext* %8, i32 %10, i64 %17, i32 1) #13
  %19 = icmp sgt i32 %18, -1
  ret i1 %19
}

declare i32 @av_seek_frame(%struct.AVFormatContext*, i32, i64, i32) local_unnamed_addr #4

declare i64 @_ZN5media17ConvertToTimeBaseERK10AVRationalRKN4base9TimeDeltaE(%struct.AVRational* dereferenceable(8), %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.AVStream* @_ZNK5media15AudioFileReader21GetAVStreamForTestingEv(%"class.media::AudioFileReader"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.media::FFmpegGlue"*, %"class.media::FFmpegGlue"** %2, align 8
  %4 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %3, i64 0, i32 3
  %5 = load %struct.AVFormatContext*, %struct.AVFormatContext** %4, align 8
  %6 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %5, i64 0, i32 7
  %7 = load %struct.AVStream**, %struct.AVStream*** %6, align 8
  %8 = getelementptr inbounds %"class.media::AudioFileReader", %"class.media::AudioFileReader"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %7, i64 %10
  %12 = load %struct.AVStream*, %struct.AVStream** %11, align 8
  ret %struct.AVStream* %12
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN5media10FFmpegGlueC1EPNS_17FFmpegURLProtocolE(%"class.media::FFmpegGlue"*, %"class.media::FFmpegURLProtocol"*) unnamed_addr #4

declare void @avcodec_free_context(%struct.AVCodecContext**) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal7InvokerINS0_9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS6_10unique_ptrINS3_8AudioBusENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS4_EES5_SG_EEEFbSI_EE3RunEPNS0_13BindStateBaseESI_(%"class.base::internal::BindStateBase"*, %struct.AVFrame*) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32**
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.std::__1::vector"**
  %11 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 %15
  %17 = bitcast i8* %16 to %"class.media::AudioFileReader"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %2
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)**
  %26 = load i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)*, i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)** %25, align 8
  br label %29

27:                                               ; preds = %2
  %28 = inttoptr i64 %12 to i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi i1 (%"class.media::AudioFileReader"*, i32*, %"class.std::__1::vector"*, %struct.AVFrame*)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i32*, i32** %8, align 8
  %32 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %10, align 8
  %33 = tail call zeroext i1 %30(%"class.media::AudioFileReader"* %17, i32* %31, %"class.std::__1::vector"* %32, %struct.AVFrame* %1) #13
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS5_10unique_ptrINS2_8AudioBusENS5_14default_deleteIS8_EEEENS5_9allocatorISB_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS3_EES4_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5media8AudioBusENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE24__emplace_back_slow_pathIJS6_EEEvDpOT_(%"class.std::__1::vector"*, %"class.std::__1::unique_ptr.9"* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.9"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.9"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.9"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.9"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.9"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.9"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.9"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.9"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.9"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.9"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.media::AudioBus"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.9"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.9"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.9"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.9"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !33

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.9"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.9"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.9"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.9"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.9"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.9"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.9"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.9"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.9"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.9"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.9"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.9"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.9"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.9"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.9"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.9"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.9"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.9"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.9"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.9"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.9"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.9"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.9"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.9"*, %"class.std::__1::unique_ptr.9"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.9"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.9"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.9"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.9"*
  %138 = icmp eq %"class.std::__1::unique_ptr.9"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.9"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %142, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %142, align 8
  %144 = icmp eq %"class.media::AudioBus"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.media::AudioBus"* %143 to void (%"class.media::AudioBus"*)***
  %147 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %147, i64 1
  %149 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %148, align 8
  tail call void %149(%"class.media::AudioBus"* nonnull %143) #13
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.9"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #14
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

declare void @_ZN5media8AudioBus17ZeroFramesPartialEii(%"class.media::AudioBus"*, i32, i32) local_unnamed_addr #4

declare void @_ZN5media8AudioBus13CheckOverflowEiii(i32, i32, i32) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS6_10unique_ptrINS3_8AudioBusENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS4_EES5_RSG_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS6_10unique_ptrINS3_8AudioBusENS6_14default_deleteIS9_EEEENS6_9allocatorISC_EEEEP7AVFrameEJNS0_17UnretainedWrapperIS4_EES5_RSG_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS4_10unique_ptrINS1_8AudioBusENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEP7AVFrameEJNS_8internal17UnretainedWrapperIS2_EES3_RSE_EEENS_17RepeatingCallbackINSJ_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN5media15AudioFileReaderEFbPiPNSt3__16vectorINS4_10unique_ptrINS1_8AudioBusENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEP7AVFrameEJNS_8internal17UnretainedWrapperIS2_EES3_RSE_EEENS_17RepeatingCallbackINSJ_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !15}
!23 = distinct !{!23, !15}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !15}
!30 = distinct !{!30, !15}
!31 = !{!"branch_weights", i32 2000, i32 1}
!32 = !{!"branch_weights", i32 1, i32 2000}
!33 = distinct !{!33, !8}
