; ModuleID = '../../v8/src/compiler/verifier.cc'
source_filename = "../../v8/src/compiler/verifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::Verifier::Visitor" = type <{ %"class.v8::internal::Zone"*, i32, i32, i32, [4 x i8] }>
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::compiler::AllNodes" = type <{ %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.11", i8, [7 x i8] }>
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.11" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { i64*, i64, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.14" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.v8::internal::ZoneAllocator.16" }
%"class.v8::internal::ZoneAllocator.16" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.30", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { float }
%"class.v8::internal::compiler::IfValueParameters" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::internal::compiler::StateValuesAccess" = type { %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::compiler::FrameStateInfo" = type { %"class.v8::internal::BytecodeOffset", %"class.v8::internal::compiler::OutputFrameStateCombine", %"class.v8::internal::compiler::FrameStateFunctionInfo"* }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::compiler::OutputFrameStateCombine" = type { i64 }
%"class.v8::internal::compiler::FrameStateFunctionInfo" = type { i32, i32, i32, %"class.v8::internal::Handle" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::compiler::PropertyAccess" = type { %"struct.v8::internal::compiler::FeedbackSource", i8, [7 x i8] }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.33", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.33" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.v8::internal::compiler::LoadGlobalParameters" = type <{ %"class.v8::internal::Handle.34", %"struct.v8::internal::compiler::FeedbackSource", i32, [4 x i8] }>
%"class.v8::internal::Handle.34" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::compiler::StoreGlobalParameters" = type { i8, %"class.v8::internal::Handle.34", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::StoreNamedOwnParameters" = type { %"class.v8::internal::Handle.34", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::FeedbackParameter" = type { %"struct.v8::internal::compiler::FeedbackSource" }
%"class.v8::internal::compiler::TypeCache" = type { %"class.v8::internal::AccountingAllocator", %"class.v8::internal::Zone", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type" }
%"class.v8::internal::compiler::TypeBase" = type { i32 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector.35" }
%"class.v8::internal::ZoneVector.35" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.38" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39", %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::ZoneAllocator.41" }
%"class.v8::internal::ZoneAllocator.41" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Schedule" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneVector.42", %"class.v8::internal::ZoneVector.42", %"class.v8::internal::ZoneVector.42", %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"* }
%"class.v8::internal::ZoneVector.42" = type { %"class.std::__1::vector.43" }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"**, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.v8::internal::compiler::BasicBlock"** }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.v8::internal::ZoneAllocator.48" }
%"class.v8::internal::ZoneAllocator.48" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::BasicBlock" = type { i32, i32, i8, i32, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"*, i32, i32, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector.42", %"class.v8::internal::ZoneVector.42", %"class.v8::internal::compiler::BasicBlock::Id" }
%"class.v8::internal::compiler::BasicBlock::Id" = type { i64 }
%"class.v8::internal::ZoneAllocator.77" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.54" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.v8::internal::compiler::BasicBlock"*** }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.53", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.53" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.14", %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.v8::internal::RecyclingZoneAllocator.56" }
%"class.v8::internal::RecyclingZoneAllocator.56" = type { %"class.v8::internal::ZoneAllocator.48", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, i64 }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneVector.57" = type { %"class.std::__1::vector.58" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"**, %"class.std::__1::__compressed_pair.60" }
%"class.v8::internal::BitVector" = type { i32, i32, %"union.v8::internal::BitVector::DataStorage" }
%"union.v8::internal::BitVector::DataStorage" = type { i64* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61", %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.v8::internal::BitVector"** }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.v8::internal::ZoneAllocator.63" }
%"class.v8::internal::ZoneAllocator.63" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.78" = type { %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"***, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE = comdat any

$_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc = comdat any

$_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE = comdat any

$_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE = comdat any

$_ZNK2v88internal8compiler4Type11IsSingletonEv = comdat any

$_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_ = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__16vectorIPN2v88internal9BitVectorENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"all.IsLive(use)\00", align 1
@.str.2 = private unnamed_addr constant [76 x i8] c"if_value_parameters.emplace(IfValueParametersOf(use->op()).value()) .second\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"expect_default\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Switch #%d illegally used by #%d:%s\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"!expect_default\00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c"node->op()->ControlOutputCount() == case_count + 1\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"input_count == node->InputCount()\00", align 1
@.str.8 = private unnamed_addr constant [137 x i8] c"frame_state->opcode() == IrOpcode::kFrameState || (node->opcode() == IrOpcode::kFrameState && frame_state->opcode() == IrOpcode::kStart)\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.10 = private unnamed_addr constant [122 x i8] c"node->opcode() == IrOpcode::kParameter || node->opcode() == IrOpcode::kProjection || value->op()->ValueOutputCount() <= 1\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"effect\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"control\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"(discovered_if_success) == nullptr\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"(discovered_if_exception) == nullptr\00", align 1
@.str.16 = private unnamed_addr constant [90 x i8] c"#%d:%s should be followed by IfSuccess/IfException, but is only followed by single #%d:%s\00", align 1
@.str.17 = private unnamed_addr constant [117 x i8] c"#%d:%s if followed by IfSuccess/IfException, there should be no direct control uses, but direct use #%d:%s was found\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"0 == input_count\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"param_indices.count(index) == 0\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"0 == node->op()->ValueOutputCount()\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"0 == node->op()->EffectOutputCount()\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"0 == node->op()->ControlOutputCount()\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"IrOpcode::IsGraphTerminator(input->opcode())\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.25 = private unnamed_addr constant [38 x i8] c"IrOpcode::kDeadValue == use->opcode()\00", align 1
@.str.26 = private unnamed_addr constant [95 x i8] c"all.IsLive(use) && (use->opcode() == IrOpcode::kIfTrue || use->opcode() == IrOpcode::kIfFalse)\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"1 == count_true\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"1 == count_false\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"IrOpcode::kBranch == control->opcode()\00", align 1
@.str.30 = private unnamed_addr constant [46 x i8] c"!input->op()->HasProperty(Operator::kNoThrow)\00", align 1
@.str.31 = private unnamed_addr constant [69 x i8] c"IrOpcode::kSwitch == NodeProperties::GetControlInput(node)->opcode()\00", align 1
@.str.32 = private unnamed_addr constant [29 x i8] c"control_count == input_count\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"has_terminate\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"IrOpcode::kEnd == use->opcode()\00", align 1
@.str.35 = private unnamed_addr constant [19 x i8] c"1 == control_count\00", align 1
@.str.36 = private unnamed_addr constant [18 x i8] c"1 == effect_count\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"2 == input_count\00", align 1
@.str.38 = private unnamed_addr constant [67 x i8] c"IrOpcode::kLoop == NodeProperties::GetControlInput(node)->opcode()\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"1 == input_count\00", align 1
@.str.40 = private unnamed_addr constant [12 x i8] c"-1 <= index\00", align 1
@.str.41 = private unnamed_addr constant [59 x i8] c"index <= start.LastParameterIndex_MaybeNonStandardLayout()\00", align 1
@.str.42 = private unnamed_addr constant [40 x i8] c"input->op()->ValueOutputCount() > index\00", align 1
@.str.43 = private unnamed_addr constant [18 x i8] c"0 == effect_count\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"0 == control_count\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"3 == value_count\00", align 1
@.str.46 = private unnamed_addr constant [50 x i8] c"value_count == control->op()->ControlInputCount()\00", align 1
@.str.47 = private unnamed_addr constant [31 x i8] c"input_count == 1 + value_count\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"0 == value_count\00", align 1
@.str.49 = private unnamed_addr constant [51 x i8] c"effect_count == control->op()->ControlInputCount()\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"input_count == 1 + effect_count\00", align 1
@.str.51 = private unnamed_addr constant [18 x i8] c"non_phi_use_found\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"2 == control_count\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"IrOpcode::kLoop == loop->opcode()\00", align 1
@.str.54 = private unnamed_addr constant [43 x i8] c"IrOpcode::kLoopExit == loop_exit->opcode()\00", align 1
@.str.55 = private unnamed_addr constant [63 x i8] c"NodeProperties::GetType(val).Is(NodeProperties::GetType(node))\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"5 == value_count\00", align 1
@.str.57 = private unnamed_addr constant [17 x i8] c"6 == input_count\00", align 1
@.str.58 = private unnamed_addr constant [118 x i8] c"state.parameters()->opcode() == IrOpcode::kStateValues || state.parameters()->opcode() == IrOpcode::kTypedStateValues\00", align 1
@.str.59 = private unnamed_addr constant [110 x i8] c"state.locals()->opcode() == IrOpcode::kStateValues || state.locals()->opcode() == IrOpcode::kTypedStateValues\00", align 1
@.str.60 = private unnamed_addr constant [77 x i8] c"func_info->parameter_count() == StateValuesAccess(state.parameters()).size()\00", align 1
@.str.61 = private unnamed_addr constant [69 x i8] c"func_info->local_count() == StateValuesAccess(state.locals()).size()\00", align 1
@.str.62 = private unnamed_addr constant [48 x i8] c"accumulator->opcode() != IrOpcode::kStateValues\00", align 1
@.str.63 = private unnamed_addr constant [43 x i8] c"1 == StateValuesAccess(accumulator).size()\00", align 1
@.str.64 = private unnamed_addr constant [104 x i8] c"accumulator->opcode() == IrOpcode::kTypedStateValues || accumulator->opcode() == IrOpcode::kStateValues\00", align 1
@.str.65 = private unnamed_addr constant [43 x i8] c"0 == StateValuesAccess(accumulator).size()\00", align 1
@.str.66 = private unnamed_addr constant [50 x i8] c"PropertyAccessOf(node->op()).feedback().IsValid()\00", align 1
@.str.67 = private unnamed_addr constant [56 x i8] c"LoadGlobalParametersOf(node->op()).feedback().IsValid()\00", align 1
@.str.68 = private unnamed_addr constant [57 x i8] c"StoreGlobalParametersOf(node->op()).feedback().IsValid()\00", align 1
@.str.69 = private unnamed_addr constant [59 x i8] c"StoreNamedOwnParametersOf(node->op()).feedback().IsValid()\00", align 1
@.str.70 = private unnamed_addr constant [53 x i8] c"FeedbackParameterOf(node->op()).feedback().IsValid()\00", align 1
@.str.71 = private unnamed_addr constant [70 x i8] c"NodeProperties::GetType(node).Equals( NodeProperties::GetType(input))\00", align 1
@.str.72 = private unnamed_addr constant [19 x i8] c"type.IsSingleton()\00", align 1
@.str.73 = private unnamed_addr constant [55 x i8] c"type.Equals(NodeProperties::GetType(node->InputAt(0)))\00", align 1
@.str.74 = private unnamed_addr constant [55 x i8] c"type.Equals(NodeProperties::GetType(node->InputAt(1)))\00", align 1
@.str.75 = private unnamed_addr constant [17 x i8] c"value_count >= 2\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"value_count >= 3\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"(graph->start()) != nullptr\00", align 1
@.str.78 = private unnamed_addr constant [26 x i8] c"(graph->end()) != nullptr\00", align 1
@__func__._ZN2v88internal8compiler8Verifier3RunEPNS1_5GraphENS2_6TypingENS2_11CheckInputsENS2_8CodeTypeE = private unnamed_addr constant [4 x i8] c"Run\00", align 1
@.str.79 = private unnamed_addr constant [50 x i8] c"Node #%d:%s has duplicate projections #%d and #%d\00", align 1
@.str.80 = private unnamed_addr constant [27 x i8] c"count >= rpo_order->size()\00", align 1
@.str.81 = private unnamed_addr constant [43 x i8] c"(*b) == schedule->GetBlockById((*b)->id())\00", align 1
@.str.82 = private unnamed_addr constant [31 x i8] c"predecessor->rpo_number() >= 0\00", align 1
@.str.83 = private unnamed_addr constant [57 x i8] c"predecessor == schedule->GetBlockById(predecessor->id())\00", align 1
@.str.84 = private unnamed_addr constant [29 x i8] c"successor->rpo_number() >= 0\00", align 1
@.str.85 = private unnamed_addr constant [53 x i8] c"successor == schedule->GetBlockById(successor->id())\00", align 1
@.str.86 = private unnamed_addr constant [26 x i8] c"start == rpo_order->at(0)\00", align 1
@.str.87 = private unnamed_addr constant [43 x i8] c"static_cast<int>(b) == block->rpo_number()\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"(dom) == nullptr\00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"(dom) != nullptr\00", align 1
@.str.90 = private unnamed_addr constant [40 x i8] c"dom->rpo_number() < block->rpo_number()\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"block->rpo_number() >= 0\00", align 1
@.str.92 = private unnamed_addr constant [44 x i8] c"block == rpo_order->at(block->rpo_number())\00", align 1
@.str.93 = private unnamed_addr constant [40 x i8] c"marked[rpo_order->at(b)->id().ToSize()]\00", align 1
@.str.94 = private unnamed_addr constant [34 x i8] c"Block B%d is not dominated by B%d\00", align 1
@.str.95 = private unnamed_addr constant [46 x i8] c"Block B%d is not immediately dominated by B%d\00", align 1
@.str.96 = private unnamed_addr constant [78 x i8] c"control->opcode() == IrOpcode::kMerge || control->opcode() == IrOpcode::kLoop\00", align 1
@.str.97 = private unnamed_addr constant [33 x i8] c"(*b) == schedule->block(control)\00", align 1
@.str.98 = private unnamed_addr constant [34 x i8] c"block == schedule->block(control)\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"only_inputs_\00", align 1
@.str.100 = private unnamed_addr constant [18 x i8] c"TypeError: node #\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.102 = private unnamed_addr constant [26 x i8] c" should never have a type\00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.105 = private unnamed_addr constant [51 x i8] c"OperatorProperties::HasFrameStateInput(node->op())\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"0 <= index\00", align 1
@.str.107 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"GraphError: node #\00", align 1
@.str.109 = private unnamed_addr constant [19 x i8] c" does not produce \00", align 1
@.str.110 = private unnamed_addr constant [23 x i8] c" output used by node #\00", align 1
@.str.111 = private unnamed_addr constant [48 x i8] c"OperatorProperties::HasContextInput(node->op())\00", align 1
@.str.112 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.113 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c" type \00", align 1
@.str.115 = private unnamed_addr constant [9 x i8] c" is not \00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"(input @\00", align 1
@.str.117 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c") type \00", align 1
@.str.119 = private unnamed_addr constant [55 x i8] c"Node #%d:%s in B%d is not dominated by input@%d #%d:%s\00", align 1
@.str.120 = private unnamed_addr constant [60 x i8] c"Node #%d:%s in B%d is not dominated by control input #%d:%s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Verifier7Visitor11CheckSwitchEPNS1_4NodeERKNS1_8AllNodesE(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::AllNodes"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unordered_set", align 8
  %5 = alloca i32, align 4
  %6 = bitcast %"class.std::__1::unordered_set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::__compressed_pair.30"* %7 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %10 = bitcast %"struct.v8::internal::compiler::Node::Use"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %96, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  %17 = bitcast i32* %5 to i8*
  %18 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0
  br label %22

19:                                               ; preds = %90
  %20 = and i8 %91, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %97, label %96, !prof !2

22:                                               ; preds = %13, %90
  %23 = phi i64 [ %11, %13 ], [ %94, %90 ]
  %24 = phi i32 [ 0, %13 ], [ %92, %90 ]
  %25 = phi i8 [ 1, %13 ], [ %91, %90 ]
  %26 = inttoptr i64 %23 to %"struct.v8::internal::compiler::Node::Use"*
  %27 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %26, i64 1
  %28 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %26, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = lshr i32 %29, 1
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %27, i64 %31
  %33 = and i32 %29, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %22
  %36 = bitcast %"struct.v8::internal::compiler::Node::Use"* %32 to %"class.v8::internal::compiler::Node"*
  br label %40

37:                                               ; preds = %22
  %38 = bitcast %"struct.v8::internal::compiler::Node::Use"* %32 to %"class.v8::internal::compiler::Node"**
  %39 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %38, align 8
  br label %40

40:                                               ; preds = %35, %37
  %41 = phi %"class.v8::internal::compiler::Node"* [ %36, %35 ], [ %39, %37 ]
  %42 = load i8, i8* %14, align 8, !range !3
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

45:                                               ; preds = %40
  %46 = icmp eq %"class.v8::internal::compiler::Node"* %41, null
  br i1 %46, label %63, label %47, !prof !4

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 16777215
  %51 = zext i32 %50 to i64
  %52 = load i64, i64* %15, align 8
  %53 = icmp ugt i64 %52, %51
  br i1 %53, label %54, label %63, !prof !5

54:                                               ; preds = %47
  %55 = load i64*, i64** %16, align 8
  %56 = lshr i64 %51, 6
  %57 = getelementptr inbounds i64, i64* %55, i64 %56
  %58 = and i64 %51, 63
  %59 = shl i64 1, %58
  %60 = load i64, i64* %57, align 8
  %61 = and i64 %60, %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %64, !prof !6

63:                                               ; preds = %54, %47, %45
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %41, i64 0, i32 0
  %66 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %66, i64 0, i32 2
  %68 = load i16, i16* %67, align 8
  switch i16 %68, label %84 [
    i16 8, label %69
    i16 9, label %80
  ]

69:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  %70 = call dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %66) #11
  %71 = getelementptr inbounds %"class.v8::internal::compiler::IfValueParameters", %"class.v8::internal::compiler::IfValueParameters"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %5, align 4
  %73 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %18, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #11
  %74 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %73, 1
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  br i1 %76, label %77, label %78, !prof !6

77:                                               ; preds = %69
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0)) #12
  unreachable

78:                                               ; preds = %69
  %79 = add nsw i32 %24, 1
  br label %90

80:                                               ; preds = %64
  %81 = and i8 %25, 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %90, !prof !6

83:                                               ; preds = %80
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

84:                                               ; preds = %64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = and i32 %86, 16777215
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %66, i64 0, i32 1
  %89 = load i8*, i8** %88, align 8
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0), i32 %87, i32 %50, i8* %89) #12
  unreachable

90:                                               ; preds = %80, %78
  %91 = phi i8 [ %25, %78 ], [ 0, %80 ]
  %92 = phi i32 [ %79, %78 ], [ %24, %80 ]
  %93 = inttoptr i64 %23 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %19, label %22

96:                                               ; preds = %3, %19
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #12
  unreachable

97:                                               ; preds = %19
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %99 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %99, i64 0, i32 11
  %101 = load i32, i32* %100, align 8
  %102 = add nsw i32 %92, 1
  %103 = icmp eq i32 %101, %102
  br i1 %103, label %105, label %104, !prof !2

104:                                              ; preds = %97
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0)) #12
  unreachable

105:                                              ; preds = %97
  call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %106 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"struct.std::__1::__hash_node_base"* [ %112, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %110, i64 0, i32 0
  %112 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %111, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8*
  call void @_ZdlPv(i8* %113) #13
  %114 = icmp eq %"struct.std::__1::__hash_node_base"* %112, null
  br i1 %114, label %115, label %109

115:                                              ; preds = %109, %105
  %116 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %116, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base"** %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast %"struct.std::__1::__hash_node_base"** %117 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

declare dereferenceable(12) %"class.v8::internal::compiler::IfValueParameters"* @_ZN2v88internal8compiler19IfValueParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_ostringstream", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %58, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %3 to i8**
  %18 = inttoptr i64 %14 to i8*
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %9, i64 %21
  %23 = bitcast i8* %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = load i8*, i8** %17, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %9, i64 %27
  %29 = bitcast i8* %28 to %"class.std::__1::ios_base"*
  %30 = bitcast %"class.std::__1::basic_stringbuf"* %12 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %29, i8* %30) #11
  %31 = getelementptr inbounds i8, i8* %28, i64 136
  %32 = bitcast i8* %31 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %28, i64 144
  %34 = bitcast i8* %33 to i32*
  store i32 -1, i32* %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %10, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %13) #11
  %35 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %12, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %3, i64 0, i32 1, i32 3
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %37, align 8
  %39 = bitcast %"class.std::__1::basic_ostringstream"* %3 to %"class.std::__1::basic_ostream"*
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i64 0, i64 0), i64 17) #11
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, 16777215
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %40, i32 %43) #11
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %44, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %46 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %47 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %46, align 8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %45, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %47) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.102, i64 0, i64 0), i64 25) #11
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.std::__1::basic_stringbuf"* %12) #11
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = select i1 %54, i8* %56, i8* %50
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8* %57) #12
  unreachable

58:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Verifier7Visitor5CheckEPNS1_4NodeERKNS1_8AllNodesE(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::AllNodes"* readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::compiler::Type", align 8
  %5 = alloca %"class.v8::internal::compiler::Type", align 8
  %6 = alloca %"class.v8::internal::compiler::Type", align 8
  %7 = alloca %"class.std::__1::unordered_set", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.v8::internal::compiler::Type", align 8
  %10 = alloca %"class.v8::internal::compiler::StateValuesAccess", align 8
  %11 = alloca %"class.v8::internal::compiler::StateValuesAccess", align 8
  %12 = alloca %"class.v8::internal::compiler::StateValuesAccess", align 8
  %13 = alloca %"class.v8::internal::compiler::StateValuesAccess", align 8
  %14 = alloca %"class.v8::internal::compiler::Type", align 8
  %15 = alloca %"class.v8::internal::compiler::Type", align 8
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %17 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %17, i64 0, i32 5
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %17) #11
  %21 = zext i1 %20 to i32
  %22 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %23 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %22) #11
  %24 = zext i1 %23 to i32
  %25 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %25, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %25, i64 0, i32 7
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %19, %21
  %31 = add nsw i32 %30, %24
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 1
  %35 = add nsw i32 %29, %27
  %36 = select i1 %34, i32 %35, i32 0
  %37 = add nsw i32 %31, %36
  %38 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = and i32 %39, 251658240
  %41 = icmp eq i32 %40, 251658240
  br i1 %41, label %45, label %42

42:                                               ; preds = %3
  %43 = lshr i32 %39, 24
  %44 = and i32 %43, 15
  br label %52

45:                                               ; preds = %3
  %46 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %47 = add i64 %46, 32
  %48 = inttoptr i64 %47 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %49 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %48, align 8
  %50 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %49, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  br label %52

52:                                               ; preds = %42, %45
  %53 = phi i32 [ %44, %42 ], [ %51, %45 ]
  %54 = icmp eq i32 %37, %53
  br i1 %54, label %56, label %55, !prof !2

55:                                               ; preds = %52
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0)) #12
  unreachable

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %121, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %25, i64 0, i32 9
  %62 = load i8, i8* %61, align 4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %121, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %66 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  %67 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %66, null
  br i1 %67, label %121, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %70 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %71 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br label %72

72:                                               ; preds = %119, %68
  %73 = phi %"struct.v8::internal::compiler::Node::Use"* [ %66, %68 ], [ %75, %119 ]
  %74 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %73, i64 0, i32 0
  %75 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %74, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %73, i64 0, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = lshr i32 %77, 1
  %79 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %73, i64 1
  %80 = zext i32 %78 to i64
  %81 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %79, i64 %80
  %82 = and i32 %77, 1
  %83 = icmp eq i32 %82, 0
  %84 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %81 to i64
  %85 = select i1 %83, i64 16, i64 32
  %86 = add i64 %85, %84
  %87 = inttoptr i64 %86 to %"class.v8::internal::compiler::Node"**
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %87, i64 %80
  br i1 %83, label %91, label %89

89:                                               ; preds = %72
  %90 = bitcast %"struct.v8::internal::compiler::Node::Use"* %81 to %"class.v8::internal::compiler::Node"*
  br label %94

91:                                               ; preds = %72
  %92 = bitcast %"struct.v8::internal::compiler::Node::Use"* %81 to %"class.v8::internal::compiler::Node"**
  %93 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %92, align 8
  br label %94

94:                                               ; preds = %89, %91
  %95 = phi %"class.v8::internal::compiler::Node"* [ %90, %89 ], [ %93, %91 ]
  %96 = load i8, i8* %69, align 8, !range !3
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %99, label %98, !prof !2

98:                                               ; preds = %94
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

99:                                               ; preds = %94
  %100 = icmp eq %"class.v8::internal::compiler::Node"* %95, null
  br i1 %100, label %119, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %95, i64 0, i32 3
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 16777215
  %105 = zext i32 %104 to i64
  %106 = load i64, i64* %70, align 8
  %107 = icmp ugt i64 %106, %105
  br i1 %107, label %108, label %119

108:                                              ; preds = %101
  %109 = load i64*, i64** %71, align 8
  %110 = lshr i64 %105, 6
  %111 = getelementptr inbounds i64, i64* %109, i64 %110
  %112 = and i64 %105, 63
  %113 = shl i64 1, %112
  %114 = load i64, i64* %111, align 8
  %115 = and i64 %114, %113
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %108
  %118 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %73, %"class.v8::internal::compiler::Node"** %88) #11
  br label %119

119:                                              ; preds = %108, %101, %99, %117
  %120 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %75, null
  br i1 %120, label %121, label %72

121:                                              ; preds = %119, %64, %60, %56
  br i1 %23, label %122, label %128

122:                                              ; preds = %121
  %123 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %124 = add i64 %123, 32
  %125 = inttoptr i64 %124 to i64*
  %126 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %127 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %126) #11
  br i1 %127, label %137, label %136, !prof !2

128:                                              ; preds = %150, %161, %121
  %129 = icmp sgt i32 %19, 0
  br i1 %129, label %130, label %169

130:                                              ; preds = %128
  %131 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %132 = add i64 %131, 32
  %133 = inttoptr i64 %132 to i64*
  %134 = zext i32 %19 to i64
  %135 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  br label %176

136:                                              ; preds = %122
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.105, i64 0, i64 0)) #12
  unreachable

137:                                              ; preds = %122
  %138 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %138, i64 0, i32 5
  %140 = load i32, i32* %139, align 4
  %141 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %138) #11
  %142 = zext i1 %141 to i32
  %143 = add nsw i32 %140, %142
  %144 = load i32, i32* %38, align 4
  %145 = and i32 %144, 251658240
  %146 = icmp eq i32 %145, 251658240
  br i1 %146, label %147, label %150

147:                                              ; preds = %137
  %148 = load i64, i64* %125, align 8
  %149 = add i64 %148, 16
  br label %150

150:                                              ; preds = %137, %147
  %151 = phi i64 [ %149, %147 ], [ %124, %137 ]
  %152 = inttoptr i64 %151 to %"class.v8::internal::compiler::Node"**
  %153 = sext i32 %143 to i64
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 %153
  %155 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %155, i64 0, i32 0
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 2
  %159 = load i16, i16* %158, align 8
  %160 = icmp eq i16 %159, 41
  br i1 %160, label %128, label %161

161:                                              ; preds = %150
  %162 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %162, i64 0, i32 2
  %164 = load i16, i16* %163, align 8
  %165 = icmp eq i16 %164, 41
  %166 = icmp eq i16 %159, 0
  %167 = and i1 %166, %165
  br i1 %167, label %128, label %168, !prof !7

168:                                              ; preds = %161
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str.8, i64 0, i64 0)) #12
  unreachable

169:                                              ; preds = %209, %128
  br i1 %20, label %170, label %212

170:                                              ; preds = %169
  %171 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %172 = add i64 %171, 32
  %173 = inttoptr i64 %172 to i64*
  %174 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %175 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %174) #11
  br i1 %175, label %222, label %221, !prof !2

176:                                              ; preds = %209, %130
  %177 = phi %"class.v8::internal::compiler::Operator"* [ %135, %130 ], [ %200, %209 ]
  %178 = phi i64 [ 0, %130 ], [ %210, %209 ]
  %179 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %177, i64 0, i32 5
  %180 = load i32, i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = icmp slt i64 %178, %181
  br i1 %182, label %184, label %183, !prof !2

183:                                              ; preds = %176
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

184:                                              ; preds = %176
  %185 = load i32, i32* %38, align 4
  %186 = and i32 %185, 251658240
  %187 = icmp eq i32 %186, 251658240
  br i1 %187, label %188, label %191

188:                                              ; preds = %184
  %189 = load i64, i64* %133, align 8
  %190 = add i64 %189, 16
  br label %191

191:                                              ; preds = %184, %188
  %192 = phi i64 [ %190, %188 ], [ %132, %184 ]
  %193 = inttoptr i64 %192 to %"class.v8::internal::compiler::Node"**
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %193, i64 %178
  %195 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %194, align 8
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %195, i64 0, i32 0
  %197 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %196, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %197, i64 0, i32 8
  %199 = load i32, i32* %198, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %195, %"class.v8::internal::compiler::Node"* %1, i32 %199, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0))
  %200 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %200, i64 0, i32 2
  %202 = load i16, i16* %201, align 8
  switch i16 %202, label %203 [
    i16 50, label %209
    i16 55, label %209
  ]

203:                                              ; preds = %191
  %204 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %196, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %204, i64 0, i32 8
  %206 = load i32, i32* %205, align 8
  %207 = icmp slt i32 %206, 2
  br i1 %207, label %209, label %208, !prof !2

208:                                              ; preds = %203
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.10, i64 0, i64 0)) #12
  unreachable

209:                                              ; preds = %191, %191, %203
  %210 = add nuw nsw i64 %178, 1
  %211 = icmp eq i64 %210, %134
  br i1 %211, label %169, label %176

212:                                              ; preds = %232, %169
  %213 = load i32, i32* %32, align 4
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %444

215:                                              ; preds = %212
  %216 = icmp sgt i32 %27, 0
  br i1 %216, label %217, label %242

217:                                              ; preds = %215
  %218 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %219 = add i64 %218, 32
  %220 = inttoptr i64 %219 to i64*
  br label %249

221:                                              ; preds = %170
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.111, i64 0, i64 0)) #12
  unreachable

222:                                              ; preds = %170
  %223 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %223, i64 0, i32 5
  %225 = load i32, i32* %224, align 4
  %226 = load i32, i32* %38, align 4
  %227 = and i32 %226, 251658240
  %228 = icmp eq i32 %227, 251658240
  br i1 %228, label %229, label %232

229:                                              ; preds = %222
  %230 = load i64, i64* %173, align 8
  %231 = add i64 %230, 16
  br label %232

232:                                              ; preds = %222, %229
  %233 = phi i64 [ %231, %229 ], [ %172, %222 ]
  %234 = inttoptr i64 %233 to %"class.v8::internal::compiler::Node"**
  %235 = sext i32 %225 to i64
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %234, i64 %235
  %237 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, align 8
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %237, i64 0, i32 0
  %239 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %239, i64 0, i32 8
  %241 = load i32, i32* %240, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %237, %"class.v8::internal::compiler::Node"* %1, i32 %241, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0))
  br label %212

242:                                              ; preds = %272, %215
  %243 = icmp sgt i32 %29, 0
  %244 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  br i1 %243, label %245, label %285

245:                                              ; preds = %242
  %246 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %247 = add i64 %246, 32
  %248 = inttoptr i64 %247 to i64*
  br label %291

249:                                              ; preds = %272, %217
  %250 = phi i32 [ 0, %217 ], [ %283, %272 ]
  %251 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %251, i64 0, i32 6
  %253 = load i32, i32* %252, align 8
  %254 = icmp sgt i32 %253, 0
  br i1 %254, label %256, label %255, !prof !2

255:                                              ; preds = %249
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.112, i64 0, i64 0)) #12
  unreachable

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %251, i64 0, i32 5
  %258 = load i32, i32* %257, align 4
  %259 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %251) #11
  %260 = zext i1 %259 to i32
  %261 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %262 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %261) #11
  %263 = zext i1 %262 to i32
  %264 = add i32 %258, %260
  %265 = add i32 %264, %263
  %266 = load i32, i32* %38, align 4
  %267 = and i32 %266, 251658240
  %268 = icmp eq i32 %267, 251658240
  br i1 %268, label %269, label %272

269:                                              ; preds = %256
  %270 = load i64, i64* %220, align 8
  %271 = add i64 %270, 16
  br label %272

272:                                              ; preds = %256, %269
  %273 = phi i64 [ %271, %269 ], [ %219, %256 ]
  %274 = inttoptr i64 %273 to %"class.v8::internal::compiler::Node"**
  %275 = sext i32 %265 to i64
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %274, i64 %275
  %277 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %276, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %277, i64 0, i32 0
  %279 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %278, align 8
  %280 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %279, i64 0, i32 9
  %281 = load i8, i8* %280, align 4
  %282 = zext i8 %281 to i32
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %277, %"class.v8::internal::compiler::Node"* %1, i32 %282, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0))
  %283 = add nuw nsw i32 %250, 1
  %284 = icmp eq i32 %283, %27
  br i1 %284, label %242, label %249

285:                                              ; preds = %319, %242
  %286 = phi %"class.v8::internal::compiler::Operator"* [ %244, %242 ], [ %330, %319 ]
  %287 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %286, i64 0, i32 3, i32 0
  %288 = load i8, i8* %287, align 2
  %289 = and i8 %288, 32
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %332, label %444

291:                                              ; preds = %319, %245
  %292 = phi %"class.v8::internal::compiler::Operator"* [ %244, %245 ], [ %330, %319 ]
  %293 = phi i32 [ 0, %245 ], [ %329, %319 ]
  %294 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %292, i64 0, i32 7
  %295 = load i32, i32* %294, align 4
  %296 = icmp sgt i32 %295, %293
  br i1 %296, label %298, label %297, !prof !2

297:                                              ; preds = %291
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %292, i64 0, i32 5
  %300 = load i32, i32* %299, align 4
  %301 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %292) #11
  %302 = zext i1 %301 to i32
  %303 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %304 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %303) #11
  %305 = zext i1 %304 to i32
  %306 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %307 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %306, i64 0, i32 6
  %308 = load i32, i32* %307, align 8
  %309 = add i32 %300, %293
  %310 = add i32 %309, %302
  %311 = add i32 %310, %305
  %312 = add i32 %311, %308
  %313 = load i32, i32* %38, align 4
  %314 = and i32 %313, 251658240
  %315 = icmp eq i32 %314, 251658240
  br i1 %315, label %316, label %319

316:                                              ; preds = %298
  %317 = load i64, i64* %248, align 8
  %318 = add i64 %317, 16
  br label %319

319:                                              ; preds = %298, %316
  %320 = phi i64 [ %318, %316 ], [ %247, %298 ]
  %321 = inttoptr i64 %320 to %"class.v8::internal::compiler::Node"**
  %322 = sext i32 %312 to i64
  %323 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %321, i64 %322
  %324 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, align 8
  %325 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %324, i64 0, i32 0
  %326 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %325, align 8
  %327 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %326, i64 0, i32 11
  %328 = load i32, i32* %327, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %324, %"class.v8::internal::compiler::Node"* %1, i32 %328, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0))
  %329 = add nuw nsw i32 %293, 1
  %330 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %331 = icmp eq i32 %329, %29
  br i1 %331, label %285, label %291

332:                                              ; preds = %285
  %333 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %334 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %333, align 8
  %335 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %334, null
  br i1 %335, label %423, label %340

336:                                              ; preds = %387
  %337 = icmp eq %"class.v8::internal::compiler::Node"* %390, null
  %338 = icmp ne %"class.v8::internal::compiler::Node"* %391, null
  %339 = or i1 %337, %338
  br i1 %339, label %406, label %393

340:                                              ; preds = %332, %387
  %341 = phi %"class.v8::internal::compiler::Node"* [ %391, %387 ], [ null, %332 ]
  %342 = phi %"class.v8::internal::compiler::Node"* [ %390, %387 ], [ null, %332 ]
  %343 = phi %"class.v8::internal::compiler::Node"* [ %389, %387 ], [ null, %332 ]
  %344 = phi i32 [ %388, %387 ], [ 0, %332 ]
  %345 = phi %"struct.v8::internal::compiler::Node::Use"* [ %347, %387 ], [ %334, %332 ]
  %346 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %345, i64 0, i32 0
  %347 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %346, align 8
  %348 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %345, i64 0, i32 2
  %349 = load i32, i32* %348, align 8
  %350 = lshr i32 %349, 1
  %351 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %345, i64 1
  %352 = zext i32 %350 to i64
  %353 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %351, i64 %352
  %354 = and i32 %349, 1
  %355 = icmp eq i32 %354, 0
  %356 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %353 to i64
  %357 = select i1 %355, i64 16, i64 32
  %358 = add i64 %357, %356
  %359 = inttoptr i64 %358 to %"class.v8::internal::compiler::Node"**
  %360 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %359, i64 %352
  %361 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %345, %"class.v8::internal::compiler::Node"** %360) #11
  br i1 %361, label %362, label %387

362:                                              ; preds = %340
  %363 = add nsw i32 %344, 1
  %364 = load i32, i32* %348, align 8
  %365 = lshr i32 %364, 1
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %351, i64 %366
  %368 = and i32 %364, 1
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %362
  %371 = bitcast %"struct.v8::internal::compiler::Node::Use"* %367 to %"class.v8::internal::compiler::Node"*
  br label %375

372:                                              ; preds = %362
  %373 = bitcast %"struct.v8::internal::compiler::Node::Use"* %367 to %"class.v8::internal::compiler::Node"**
  %374 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %373, align 8
  br label %375

375:                                              ; preds = %370, %372
  %376 = phi %"class.v8::internal::compiler::Node"* [ %371, %370 ], [ %374, %372 ]
  %377 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %376, i64 0, i32 0
  %378 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %377, align 8
  %379 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %378, i64 0, i32 2
  %380 = load i16, i16* %379, align 8
  switch i16 %380, label %387 [
    i16 6, label %381
    i16 7, label %384
  ]

381:                                              ; preds = %375
  %382 = icmp eq %"class.v8::internal::compiler::Node"* %342, null
  br i1 %382, label %387, label %383, !prof !2

383:                                              ; preds = %381
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0)) #12
  unreachable

384:                                              ; preds = %375
  %385 = icmp eq %"class.v8::internal::compiler::Node"* %341, null
  br i1 %385, label %387, label %386, !prof !2

386:                                              ; preds = %384
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0)) #12
  unreachable

387:                                              ; preds = %375, %381, %384, %340
  %388 = phi i32 [ %344, %340 ], [ %363, %384 ], [ %363, %381 ], [ %363, %375 ]
  %389 = phi %"class.v8::internal::compiler::Node"* [ %343, %340 ], [ %343, %384 ], [ %343, %381 ], [ %376, %375 ]
  %390 = phi %"class.v8::internal::compiler::Node"* [ %342, %340 ], [ %342, %384 ], [ %376, %381 ], [ %342, %375 ]
  %391 = phi %"class.v8::internal::compiler::Node"* [ %341, %340 ], [ %376, %384 ], [ %341, %381 ], [ %341, %375 ]
  %392 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %347, null
  br i1 %392, label %336, label %340

393:                                              ; preds = %336
  %394 = load i32, i32* %38, align 4
  %395 = and i32 %394, 16777215
  %396 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %397 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %396, i64 0, i32 1
  %398 = load i8*, i8** %397, align 8
  %399 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %390, i64 0, i32 3
  %400 = load i32, i32* %399, align 4
  %401 = and i32 %400, 16777215
  %402 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %390, i64 0, i32 0
  %403 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %402, align 8
  %404 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %403, i64 0, i32 1
  %405 = load i8*, i8** %404, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.16, i64 0, i64 0), i32 %395, i8* %398, i32 %401, i8* %405) #12
  unreachable

406:                                              ; preds = %336
  %407 = icmp eq %"class.v8::internal::compiler::Node"* %391, null
  %408 = icmp ne %"class.v8::internal::compiler::Node"* %390, null
  %409 = or i1 %408, %407
  br i1 %409, label %423, label %410

410:                                              ; preds = %406
  %411 = load i32, i32* %38, align 4
  %412 = and i32 %411, 16777215
  %413 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %413, i64 0, i32 1
  %415 = load i8*, i8** %414, align 8
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %391, i64 0, i32 3
  %417 = load i32, i32* %416, align 4
  %418 = and i32 %417, 16777215
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %391, i64 0, i32 0
  %420 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %419, align 8
  %421 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %420, i64 0, i32 1
  %422 = load i8*, i8** %421, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.16, i64 0, i64 0), i32 %412, i8* %415, i32 %418, i8* %422) #12
  unreachable

423:                                              ; preds = %332, %406
  %424 = phi i1 [ %408, %406 ], [ false, %332 ]
  %425 = phi i32 [ %388, %406 ], [ 0, %332 ]
  %426 = phi %"class.v8::internal::compiler::Node"* [ %389, %406 ], [ null, %332 ]
  %427 = phi i1 [ %338, %406 ], [ false, %332 ]
  %428 = or i1 %424, %427
  %429 = icmp ne i32 %425, 2
  %430 = and i1 %429, %428
  br i1 %430, label %431, label %444

431:                                              ; preds = %423
  %432 = load i32, i32* %38, align 4
  %433 = and i32 %432, 16777215
  %434 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %435 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %434, i64 0, i32 1
  %436 = load i8*, i8** %435, align 8
  %437 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %426, i64 0, i32 3
  %438 = load i32, i32* %437, align 4
  %439 = and i32 %438, 16777215
  %440 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %426, i64 0, i32 0
  %441 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %440, align 8
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %441, i64 0, i32 1
  %443 = load i8*, i8** %442, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([117 x i8], [117 x i8]* @.str.17, i64 0, i64 0), i32 %433, i8* %436, i32 %439, i8* %443) #12
  unreachable

444:                                              ; preds = %285, %423, %212
  %445 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 2
  %447 = load i16, i16* %446, align 8
  switch i16 %447, label %2210 [
    i16 0, label %448
    i16 21, label %603
    i16 62, label %651
    i16 61, label %652
    i16 60, label %653
    i16 2, label %717
    i16 4, label %791
    i16 5, label %791
    i16 6, label %832
    i16 7, label %874
    i16 3, label %916
    i16 8, label %917
    i16 9, label %917
    i16 1, label %958
    i16 10, label %1019
    i16 12, label %1023
    i16 13, label %1023
    i16 14, label %1023
    i16 15, label %1024
    i16 16, label %1024
    i16 11, label %1025
    i16 17, label %1025
    i16 20, label %1025
    i16 19, label %1084
    i16 50, label %1192
    i16 22, label %1227
    i16 23, label %1227
    i16 24, label %1227
    i16 25, label %1227
    i16 26, label %1227
    i16 32, label %1227
    i16 33, label %1227
    i16 28, label %1231
    i16 30, label %1235
    i16 31, label %1235
    i16 27, label %1239
    i16 29, label %1239
    i16 51, label %1243
    i16 55, label %1250
    i16 34, label %1279
    i16 35, label %1289
    i16 37, label %1339
    i16 36, label %1340
    i16 52, label %1460
    i16 53, label %1504
    i16 54, label %1547
    i16 38, label %1590
    i16 824, label %2206
    i16 40, label %1591
    i16 41, label %1625
    i16 47, label %1789
    i16 225, label %2202
    i16 191, label %2201
    i16 221, label %2197
    i16 58, label %2126
    i16 59, label %2124
    i16 57, label %2123
    i16 189, label %2122
    i16 270, label %2121
    i16 744, label %1790
    i16 745, label %1790
    i16 746, label %1790
    i16 747, label %1790
    i16 748, label %1790
    i16 749, label %1790
    i16 756, label %1791
    i16 750, label %1792
    i16 751, label %1792
    i16 752, label %1792
    i16 753, label %1792
    i16 754, label %1792
    i16 755, label %1792
    i16 757, label %1792
    i16 758, label %1792
    i16 759, label %1792
    i16 760, label %1792
    i16 761, label %1792
    i16 767, label %1792
    i16 765, label %1792
    i16 766, label %1792
    i16 768, label %1792
    i16 290, label %1793
    i16 769, label %1794
    i16 770, label %1798
    i16 771, label %1799
    i16 772, label %1799
    i16 773, label %1800
    i16 775, label %1801
    i16 774, label %1802
    i16 776, label %1803
    i16 854, label %1804
    i16 778, label %1805
    i16 779, label %1806
    i16 780, label %1807
    i16 782, label %1808
    i16 783, label %1809
    i16 786, label %1810
    i16 784, label %1811
    i16 785, label %1812
    i16 790, label %1813
    i16 797, label %1814
    i16 791, label %1815
    i16 795, label %1816
    i16 796, label %1817
    i16 798, label %1818
    i16 792, label %1819
    i16 787, label %1820
    i16 781, label %1821
    i16 793, label %1822
    i16 788, label %1822
    i16 777, label %1822
    i16 794, label %1822
    i16 799, label %1823
    i16 800, label %1824
    i16 801, label %1835
    i16 802, label %1836
    i16 803, label %1837
    i16 804, label %1848
    i16 805, label %1859
    i16 807, label %1860
    i16 806, label %1871
    i16 836, label %1882
    i16 808, label %1883
    i16 809, label %1883
    i16 810, label %1894
    i16 811, label %1894
    i16 762, label %1894
    i16 763, label %1894
    i16 764, label %1894
    i16 295, label %1895
    i16 289, label %1896
    i16 296, label %1896
    i16 812, label %1897
    i16 813, label %1898
    i16 814, label %1899
    i16 815, label %1900
    i16 816, label %1901
    i16 817, label %1901
    i16 818, label %1901
    i16 819, label %1901
    i16 825, label %1902
    i16 826, label %1902
    i16 827, label %1902
    i16 828, label %1902
    i16 821, label %1903
    i16 820, label %1903
    i16 822, label %1903
    i16 823, label %1903
    i16 832, label %1903
    i16 833, label %1904
    i16 835, label %1905
    i16 834, label %1906
    i16 276, label %2120
    i16 274, label %2119
    i16 839, label %1910
    i16 840, label %1911
    i16 841, label %1912
    i16 842, label %1913
    i16 789, label %1914
    i16 843, label %1915
    i16 844, label %1919
    i16 845, label %1920
    i16 846, label %1921
    i16 852, label %1922
    i16 855, label %1922
    i16 829, label %1923
    i16 830, label %1924
    i16 831, label %1925
    i16 847, label %1926
    i16 848, label %1927
    i16 849, label %1928
    i16 850, label %1929
    i16 851, label %1930
    i16 853, label %1931
    i16 436, label %1932
    i16 434, label %1932
    i16 435, label %1932
    i16 56, label %1932
    i16 520, label %1932
    i16 269, label %1932
    i16 201, label %1933
    i16 112, label %1934
    i16 113, label %1935
    i16 114, label %1935
    i16 154, label %1936
    i16 155, label %1936
    i16 143, label %1936
    i16 144, label %1936
    i16 145, label %1936
    i16 146, label %1936
    i16 147, label %1936
    i16 115, label %1937
    i16 116, label %1937
    i16 117, label %1937
    i16 195, label %1938
    i16 196, label %1938
    i16 194, label %1939
    i16 193, label %1940
    i16 141, label %1941
    i16 142, label %1941
    i16 190, label %1942
    i16 125, label %1943
    i16 126, label %1943
    i16 127, label %1943
    i16 128, label %1943
    i16 129, label %1944
    i16 130, label %1945
    i16 131, label %1945
    i16 132, label %1945
    i16 149, label %1946
    i16 150, label %1946
    i16 148, label %1946
    i16 133, label %1947
    i16 134, label %1947
    i16 151, label %1948
    i16 152, label %1948
    i16 135, label %1949
    i16 153, label %1950
    i16 137, label %1951
    i16 165, label %1952
    i16 136, label %1953
    i16 138, label %1953
    i16 139, label %1953
    i16 140, label %1953
    i16 156, label %1954
    i16 164, label %1954
    i16 170, label %1954
    i16 171, label %1954
    i16 157, label %1954
    i16 158, label %1954
    i16 159, label %1954
    i16 160, label %1954
    i16 161, label %1954
    i16 162, label %1954
    i16 166, label %1954
    i16 167, label %1954
    i16 168, label %1954
    i16 169, label %1954
    i16 172, label %1954
    i16 173, label %1954
    i16 174, label %1954
    i16 175, label %1954
    i16 163, label %1954
    i16 176, label %1954
    i16 177, label %1954
    i16 178, label %1954
    i16 179, label %1954
    i16 180, label %1954
    i16 181, label %1954
    i16 182, label %1954
    i16 183, label %1954
    i16 184, label %1955
    i16 185, label %1956
    i16 186, label %1957
    i16 187, label %1958
    i16 188, label %1958
    i16 192, label %1959
    i16 265, label %1960
    i16 266, label %1961
    i16 264, label %1962
    i16 279, label %1963
    i16 122, label %1967
    i16 123, label %1967
    i16 124, label %1967
    i16 287, label %1968
    i16 277, label %1969
    i16 278, label %1973
    i16 281, label %1977
    i16 282, label %1978
    i16 280, label %1979
    i16 283, label %1980
    i16 284, label %1987
    i16 286, label %1991
    i16 288, label %1991
    i16 285, label %1992
    i16 118, label %1999
    i16 119, label %2000
    i16 120, label %2000
    i16 121, label %2001
    i16 247, label %2002
    i16 248, label %2002
    i16 249, label %2002
    i16 250, label %2002
    i16 251, label %2002
    i16 254, label %2002
    i16 255, label %2002
    i16 256, label %2002
    i16 257, label %2002
    i16 258, label %2002
    i16 260, label %2002
    i16 261, label %2002
    i16 262, label %2002
    i16 263, label %2002
    i16 242, label %2003
    i16 241, label %2004
    i16 244, label %2005
    i16 245, label %2005
    i16 252, label %2006
    i16 243, label %2007
    i16 259, label %2008
    i16 246, label %2009
    i16 253, label %2010
    i16 226, label %2011
    i16 227, label %2015
    i16 199, label %2019
    i16 268, label %2019
    i16 239, label %2023
    i16 240, label %2023
    i16 237, label %2027
    i16 238, label %2031
    i16 222, label %2035
    i16 197, label %2036
    i16 292, label %2118
    i16 224, label %2037
    i16 236, label %2038
    i16 294, label %2039
    i16 293, label %2117
    i16 291, label %2116
    i16 271, label %2115
    i16 273, label %2114
    i16 272, label %2114
    i16 232, label %2113
    i16 231, label %2109
    i16 205, label %2108
    i16 204, label %2107
    i16 220, label %2106
    i16 211, label %2105
    i16 206, label %2104
    i16 297, label %2064
    i16 219, label %2063
    i16 217, label %2062
    i16 216, label %2061
    i16 215, label %2060
    i16 214, label %2059
    i16 81, label %2040
    i16 80, label %2041
    i16 213, label %2058
    i16 212, label %2057
    i16 202, label %2042
    i16 267, label %2049
    i16 203, label %2050
    i16 207, label %2051
    i16 208, label %2052
    i16 209, label %2053
    i16 210, label %2054
    i16 223, label %2055
    i16 218, label %2056
  ]

448:                                              ; preds = %444
  %449 = icmp eq i32 %37, 0
  br i1 %449, label %451, label %450, !prof !2

450:                                              ; preds = %448
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #12
  unreachable

451:                                              ; preds = %448
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 327155713)
  %452 = bitcast %"class.std::__1::unordered_set"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %452) #11
  %453 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 3
  %454 = bitcast %"class.std::__1::__compressed_pair.30"* %453 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %454, align 8
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %456 = bitcast %"struct.v8::internal::compiler::Node::Use"** %455 to i64*
  %457 = load i64, i64* %456, align 8
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %477, label %459

459:                                              ; preds = %451
  %460 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %461 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %462 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  %463 = bitcast i32* %8 to i8*
  %464 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %465 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0
  br label %484

467:                                              ; preds = %599
  %468 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %469 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %468, align 8
  %470 = icmp eq %"struct.std::__1::__hash_node_base"* %469, null
  br i1 %470, label %477, label %471

471:                                              ; preds = %467, %471
  %472 = phi %"struct.std::__1::__hash_node_base"* [ %474, %471 ], [ %469, %467 ]
  %473 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %472, i64 0, i32 0
  %474 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %473, align 8
  %475 = bitcast %"struct.std::__1::__hash_node_base"* %472 to i8*
  call void @_ZdlPv(i8* %475) #13
  %476 = icmp eq %"struct.std::__1::__hash_node_base"* %474, null
  br i1 %476, label %477, label %471

477:                                              ; preds = %471, %451, %467
  %478 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %478, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %478, align 8
  %480 = icmp eq %"struct.std::__1::__hash_node_base"** %479, null
  br i1 %480, label %483, label %481

481:                                              ; preds = %477
  %482 = bitcast %"struct.std::__1::__hash_node_base"** %479 to i8*
  call void @_ZdlPv(i8* %482) #13
  br label %483

483:                                              ; preds = %477, %481
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %452) #11
  br label %2210

484:                                              ; preds = %459, %599
  %485 = phi i64 [ %457, %459 ], [ %601, %599 ]
  %486 = inttoptr i64 %485 to %"struct.v8::internal::compiler::Node::Use"*
  %487 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %486, i64 1
  %488 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %486, i64 0, i32 2
  %489 = load i32, i32* %488, align 8
  %490 = lshr i32 %489, 1
  %491 = zext i32 %490 to i64
  %492 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %487, i64 %491
  %493 = and i32 %489, 1
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %497, label %495

495:                                              ; preds = %484
  %496 = bitcast %"struct.v8::internal::compiler::Node::Use"* %492 to %"class.v8::internal::compiler::Node"*
  br label %500

497:                                              ; preds = %484
  %498 = bitcast %"struct.v8::internal::compiler::Node::Use"* %492 to %"class.v8::internal::compiler::Node"**
  %499 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %498, align 8
  br label %500

500:                                              ; preds = %495, %497
  %501 = phi %"class.v8::internal::compiler::Node"* [ %496, %495 ], [ %499, %497 ]
  %502 = load i8, i8* %460, align 8, !range !3
  %503 = icmp eq i8 %502, 1
  br i1 %503, label %505, label %504, !prof !2

504:                                              ; preds = %500
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

505:                                              ; preds = %500
  %506 = icmp eq %"class.v8::internal::compiler::Node"* %501, null
  br i1 %506, label %599, label %507

507:                                              ; preds = %505
  %508 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %501, i64 0, i32 3
  %509 = load i32, i32* %508, align 4
  %510 = and i32 %509, 16777215
  %511 = zext i32 %510 to i64
  %512 = load i64, i64* %461, align 8
  %513 = icmp ugt i64 %512, %511
  br i1 %513, label %514, label %599

514:                                              ; preds = %507
  %515 = load i64*, i64** %462, align 8
  %516 = lshr i64 %511, 6
  %517 = getelementptr inbounds i64, i64* %515, i64 %516
  %518 = and i64 %511, 63
  %519 = shl i64 1, %518
  %520 = load i64, i64* %517, align 8
  %521 = and i64 %520, %519
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %599, label %523

523:                                              ; preds = %514
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %501, i64 0, i32 0
  %525 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %524, align 8
  %526 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %525, i64 0, i32 2
  %527 = load i16, i16* %526, align 8
  %528 = icmp eq i16 %527, 50
  br i1 %528, label %529, label %599

529:                                              ; preds = %523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %463) #11
  %530 = call i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %525) #11
  store i32 %530, i32* %8, align 4
  %531 = sext i32 %530 to i64
  %532 = load i64, i64* %464, align 8
  %533 = icmp eq i64 %532, 0
  br i1 %533, label %597, label %534

534:                                              ; preds = %529
  %535 = call i64 @llvm.ctpop.i64(i64 %532) #11, !range !8
  %536 = icmp ugt i64 %535, 1
  br i1 %536, label %540, label %537

537:                                              ; preds = %534
  %538 = add i64 %532, -1
  %539 = and i64 %538, %531
  br label %544

540:                                              ; preds = %534
  %541 = icmp ugt i64 %532, %531
  br i1 %541, label %544, label %542

542:                                              ; preds = %540
  %543 = urem i64 %531, %532
  br label %544

544:                                              ; preds = %542, %540, %537
  %545 = phi i64 [ %539, %537 ], [ %543, %542 ], [ %531, %540 ]
  %546 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %465, align 8
  %547 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %546, i64 %545
  %548 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %547, align 8
  %549 = icmp eq %"struct.std::__1::__hash_node_base"* %548, null
  br i1 %549, label %597, label %550

550:                                              ; preds = %544
  %551 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %548, i64 0, i32 0
  %552 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %551, align 8
  %553 = icmp eq %"struct.std::__1::__hash_node_base"* %552, null
  br i1 %553, label %597, label %554

554:                                              ; preds = %550
  %555 = add i64 %532, -1
  br i1 %536, label %556, label %578

556:                                              ; preds = %554, %574
  %557 = phi %"struct.std::__1::__hash_node_base"* [ %576, %574 ], [ %552, %554 ]
  %558 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %557, i64 1
  %559 = bitcast %"struct.std::__1::__hash_node_base"* %558 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = icmp eq i64 %560, %531
  br i1 %561, label %569, label %562

562:                                              ; preds = %556
  %563 = icmp ult i64 %560, %532
  br i1 %563, label %566, label %564

564:                                              ; preds = %562
  %565 = urem i64 %560, %532
  br label %566

566:                                              ; preds = %564, %562
  %567 = phi i64 [ %565, %564 ], [ %560, %562 ]
  %568 = icmp eq i64 %567, %545
  br i1 %568, label %574, label %597

569:                                              ; preds = %556
  %570 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %557, i64 2
  %571 = bitcast %"struct.std::__1::__hash_node_base"* %570 to i32*
  %572 = load i32, i32* %571, align 4
  %573 = icmp eq i32 %572, %530
  br i1 %573, label %596, label %574

574:                                              ; preds = %569, %566
  %575 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %557, i64 0, i32 0
  %576 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %575, align 8
  %577 = icmp eq %"struct.std::__1::__hash_node_base"* %576, null
  br i1 %577, label %597, label %556

578:                                              ; preds = %554, %592
  %579 = phi %"struct.std::__1::__hash_node_base"* [ %594, %592 ], [ %552, %554 ]
  %580 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %579, i64 1
  %581 = bitcast %"struct.std::__1::__hash_node_base"* %580 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = icmp eq i64 %582, %531
  br i1 %583, label %587, label %584

584:                                              ; preds = %578
  %585 = and i64 %582, %555
  %586 = icmp eq i64 %585, %545
  br i1 %586, label %592, label %597

587:                                              ; preds = %578
  %588 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %579, i64 2
  %589 = bitcast %"struct.std::__1::__hash_node_base"* %588 to i32*
  %590 = load i32, i32* %589, align 4
  %591 = icmp eq i32 %590, %530
  br i1 %591, label %596, label %592

592:                                              ; preds = %587, %584
  %593 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %579, i64 0, i32 0
  %594 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %593, align 8
  %595 = icmp eq %"struct.std::__1::__hash_node_base"* %594, null
  br i1 %595, label %597, label %578

596:                                              ; preds = %587, %569
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0)) #12
  unreachable

597:                                              ; preds = %592, %584, %574, %566, %544, %529, %550
  %598 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* nonnull %466, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %463) #11
  br label %599

599:                                              ; preds = %514, %507, %505, %597, %523
  %600 = inttoptr i64 %485 to i64*
  %601 = load i64, i64* %600, align 8
  %602 = icmp eq i64 %601, 0
  br i1 %602, label %467, label %484

603:                                              ; preds = %444
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 8
  %605 = load i32, i32* %604, align 8
  %606 = icmp eq i32 %605, 0
  br i1 %606, label %608, label %607, !prof !2

607:                                              ; preds = %603
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0)) #12
  unreachable

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 9
  %610 = load i8, i8* %609, align 4
  %611 = icmp eq i8 %610, 0
  br i1 %611, label %613, label %612, !prof !2

612:                                              ; preds = %608
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0)) #12
  unreachable

613:                                              ; preds = %608
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 11
  %615 = load i32, i32* %614, align 8
  %616 = icmp eq i32 %615, 0
  br i1 %616, label %618, label %617, !prof !2

617:                                              ; preds = %613
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0)) #12
  unreachable

618:                                              ; preds = %613
  %619 = load i32, i32* %38, align 4
  %620 = lshr i32 %619, 24
  %621 = and i32 %620, 15
  %622 = icmp eq i32 %621, 15
  %623 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %624 = add i64 %623, 32
  br i1 %622, label %625, label %632

625:                                              ; preds = %618
  %626 = inttoptr i64 %624 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %627 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %626, align 8
  %628 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %627 to i64
  %629 = add i64 %628, 16
  %630 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %627, i64 0, i32 1
  %631 = load i32, i32* %630, align 8
  br label %632

632:                                              ; preds = %618, %625
  %633 = phi i32 [ %631, %625 ], [ %621, %618 ]
  %634 = phi i64 [ %629, %625 ], [ %624, %618 ]
  %635 = inttoptr i64 %634 to %"class.v8::internal::compiler::Node"**
  %636 = sext i32 %633 to i64
  %637 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %635, i64 %636
  %638 = icmp eq i32 %633, 0
  br i1 %638, label %639, label %640, !prof !5

639:                                              ; preds = %648, %632
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

640:                                              ; preds = %632, %648
  %641 = phi %"class.v8::internal::compiler::Node"** [ %649, %648 ], [ %635, %632 ]
  %642 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %641, align 8
  %643 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %642, i64 0, i32 0
  %644 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %643, align 8
  %645 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %644, i64 0, i32 2
  %646 = load i16, i16* %645, align 8
  switch i16 %646, label %647 [
    i16 19, label %648
    i16 18, label %648
    i16 17, label %648
    i16 11, label %648
    i16 20, label %648
  ]

647:                                              ; preds = %640
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0)) #12
  unreachable

648:                                              ; preds = %640, %640, %640, %640, %640
  %649 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %641, i64 1
  %650 = icmp eq %"class.v8::internal::compiler::Node"** %649, %637
  br i1 %650, label %639, label %640, !prof !5

651:                                              ; preds = %444
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #12
  unreachable

652:                                              ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1)
  br label %2210

653:                                              ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1)
  %654 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %655 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %654, align 8
  %656 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %655, null
  br i1 %656, label %2210, label %657

657:                                              ; preds = %653
  %658 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %659 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %660 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br label %661

661:                                              ; preds = %715, %657
  %662 = phi %"struct.v8::internal::compiler::Node::Use"* [ %655, %657 ], [ %664, %715 ]
  %663 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %662, i64 0, i32 0
  %664 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %663, align 8
  %665 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %662, i64 0, i32 2
  %666 = load i32, i32* %665, align 8
  %667 = lshr i32 %666, 1
  %668 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %662, i64 1
  %669 = zext i32 %667 to i64
  %670 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %668, i64 %669
  %671 = and i32 %666, 1
  %672 = icmp eq i32 %671, 0
  %673 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %670 to i64
  %674 = select i1 %672, i64 16, i64 32
  %675 = add i64 %674, %673
  %676 = inttoptr i64 %675 to %"class.v8::internal::compiler::Node"**
  %677 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %676, i64 %669
  br i1 %672, label %680, label %678

678:                                              ; preds = %661
  %679 = bitcast %"struct.v8::internal::compiler::Node::Use"* %670 to %"class.v8::internal::compiler::Node"*
  br label %683

680:                                              ; preds = %661
  %681 = bitcast %"struct.v8::internal::compiler::Node::Use"* %670 to %"class.v8::internal::compiler::Node"**
  %682 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %681, align 8
  br label %683

683:                                              ; preds = %678, %680
  %684 = phi %"class.v8::internal::compiler::Node"* [ %679, %678 ], [ %682, %680 ]
  %685 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %662, %"class.v8::internal::compiler::Node"** %677) #11
  br i1 %685, label %686, label %715

686:                                              ; preds = %683
  %687 = load i8, i8* %658, align 8, !range !3
  %688 = icmp eq i8 %687, 1
  br i1 %688, label %690, label %689, !prof !2

689:                                              ; preds = %686
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

690:                                              ; preds = %686
  %691 = icmp eq %"class.v8::internal::compiler::Node"* %684, null
  br i1 %691, label %715, label %692

692:                                              ; preds = %690
  %693 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %684, i64 0, i32 3
  %694 = load i32, i32* %693, align 4
  %695 = and i32 %694, 16777215
  %696 = zext i32 %695 to i64
  %697 = load i64, i64* %659, align 8
  %698 = icmp ugt i64 %697, %696
  br i1 %698, label %699, label %715

699:                                              ; preds = %692
  %700 = load i64*, i64** %660, align 8
  %701 = lshr i64 %696, 6
  %702 = getelementptr inbounds i64, i64* %700, i64 %701
  %703 = and i64 %696, 63
  %704 = shl i64 1, %703
  %705 = load i64, i64* %702, align 8
  %706 = and i64 %705, %704
  %707 = icmp eq i64 %706, 0
  br i1 %707, label %715, label %708

708:                                              ; preds = %699
  %709 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %684, i64 0, i32 0
  %710 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %709, align 8
  %711 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %710, i64 0, i32 2
  %712 = load i16, i16* %711, align 8
  %713 = icmp eq i16 %712, 61
  br i1 %713, label %715, label %714, !prof !2

714:                                              ; preds = %708
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #12
  unreachable

715:                                              ; preds = %699, %692, %690, %708, %683
  %716 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %664, null
  br i1 %716, label %2210, label %661

717:                                              ; preds = %444
  %718 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %719 = bitcast %"struct.v8::internal::compiler::Node::Use"** %718 to i64*
  %720 = load i64, i64* %719, align 8
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %786, label %722, !prof !4

722:                                              ; preds = %717
  %723 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %724 = load i8, i8* %723, align 8, !range !3
  %725 = icmp eq i8 %724, 1
  %726 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %727 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %725, label %728, label %784, !prof !2

728:                                              ; preds = %722, %772
  %729 = phi i64 [ %780, %772 ], [ %720, %722 ]
  %730 = phi i32 [ %775, %772 ], [ 0, %722 ]
  %731 = phi i32 [ %778, %772 ], [ 0, %722 ]
  %732 = inttoptr i64 %729 to %"struct.v8::internal::compiler::Node::Use"*
  %733 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %732, i64 1
  %734 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %732, i64 0, i32 2
  %735 = load i32, i32* %734, align 8
  %736 = lshr i32 %735, 1
  %737 = zext i32 %736 to i64
  %738 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %733, i64 %737
  %739 = and i32 %735, 1
  %740 = icmp eq i32 %739, 0
  br i1 %740, label %743, label %741

741:                                              ; preds = %728
  %742 = bitcast %"struct.v8::internal::compiler::Node::Use"* %738 to %"class.v8::internal::compiler::Node"*
  br label %746

743:                                              ; preds = %728
  %744 = bitcast %"struct.v8::internal::compiler::Node::Use"* %738 to %"class.v8::internal::compiler::Node"**
  %745 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, align 8
  br label %746

746:                                              ; preds = %741, %743
  %747 = phi %"class.v8::internal::compiler::Node"* [ %742, %741 ], [ %745, %743 ]
  %748 = icmp eq %"class.v8::internal::compiler::Node"* %747, null
  br i1 %748, label %785, label %749, !prof !4

749:                                              ; preds = %746
  %750 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %747, i64 0, i32 3
  %751 = load i32, i32* %750, align 4
  %752 = and i32 %751, 16777215
  %753 = zext i32 %752 to i64
  %754 = load i64, i64* %726, align 8
  %755 = icmp ugt i64 %754, %753
  br i1 %755, label %756, label %785, !prof !5

756:                                              ; preds = %749
  %757 = load i64*, i64** %727, align 8
  %758 = lshr i64 %753, 6
  %759 = getelementptr inbounds i64, i64* %757, i64 %758
  %760 = and i64 %753, 63
  %761 = shl i64 1, %760
  %762 = load i64, i64* %759, align 8
  %763 = and i64 %762, %761
  %764 = icmp eq i64 %763, 0
  br i1 %764, label %785, label %765, !prof !6

765:                                              ; preds = %756
  %766 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %747, i64 0, i32 0
  %767 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %766, align 8
  %768 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %767, i64 0, i32 2
  %769 = load i16, i16* %768, align 8
  %770 = and i16 %769, -2
  %771 = icmp eq i16 %770, 4
  br i1 %771, label %772, label %785

772:                                              ; preds = %765
  %773 = icmp eq i16 %769, 4
  %774 = zext i1 %773 to i32
  %775 = add nuw nsw i32 %730, %774
  %776 = icmp eq i16 %769, 5
  %777 = zext i1 %776 to i32
  %778 = add nuw nsw i32 %731, %777
  %779 = inttoptr i64 %729 to i64*
  %780 = load i64, i64* %779, align 8
  %781 = icmp eq i64 %780, 0
  br i1 %781, label %782, label %728

782:                                              ; preds = %772
  %783 = icmp eq i32 %775, 1
  br i1 %783, label %787, label %786, !prof !2

784:                                              ; preds = %722
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

785:                                              ; preds = %746, %749, %756, %765
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.26, i64 0, i64 0)) #12
  unreachable

786:                                              ; preds = %717, %782
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0)) #12
  unreachable

787:                                              ; preds = %782
  %788 = icmp eq i32 %778, 1
  br i1 %788, label %790, label %789, !prof !2

789:                                              ; preds = %787
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0)) #12
  unreachable

790:                                              ; preds = %787
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

791:                                              ; preds = %444, %444
  %792 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %793 = load i32, i32* %792, align 4
  %794 = icmp sgt i32 %793, 0
  br i1 %794, label %796, label %795, !prof !2

795:                                              ; preds = %791
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

796:                                              ; preds = %791
  %797 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %798 = load i32, i32* %797, align 4
  %799 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %800 = zext i1 %799 to i32
  %801 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %802 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %801) #11
  %803 = zext i1 %802 to i32
  %804 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %805 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %804, i64 0, i32 6
  %806 = load i32, i32* %805, align 8
  %807 = add i32 %798, %800
  %808 = add i32 %807, %803
  %809 = add i32 %808, %806
  %810 = load i32, i32* %38, align 4
  %811 = and i32 %810, 251658240
  %812 = icmp eq i32 %811, 251658240
  %813 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %814 = add i64 %813, 32
  br i1 %812, label %815, label %819

815:                                              ; preds = %796
  %816 = inttoptr i64 %814 to i64*
  %817 = load i64, i64* %816, align 8
  %818 = add i64 %817, 16
  br label %819

819:                                              ; preds = %796, %815
  %820 = phi i64 [ %818, %815 ], [ %814, %796 ]
  %821 = inttoptr i64 %820 to %"class.v8::internal::compiler::Node"**
  %822 = sext i32 %809 to i64
  %823 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %821, i64 %822
  %824 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %823, align 8
  %825 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %824, i64 0, i32 0
  %826 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %825, align 8
  %827 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %826, i64 0, i32 2
  %828 = load i16, i16* %827, align 8
  %829 = icmp eq i16 %828, 2
  br i1 %829, label %831, label %830, !prof !2

830:                                              ; preds = %819
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0)) #12
  unreachable

831:                                              ; preds = %819
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

832:                                              ; preds = %444
  %833 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %834 = load i32, i32* %833, align 4
  %835 = icmp sgt i32 %834, 0
  br i1 %835, label %837, label %836, !prof !2

836:                                              ; preds = %832
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

837:                                              ; preds = %832
  %838 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %839 = load i32, i32* %838, align 4
  %840 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %841 = zext i1 %840 to i32
  %842 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %843 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %842) #11
  %844 = zext i1 %843 to i32
  %845 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %846 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %845, i64 0, i32 6
  %847 = load i32, i32* %846, align 8
  %848 = add i32 %839, %841
  %849 = add i32 %848, %844
  %850 = add i32 %849, %847
  %851 = load i32, i32* %38, align 4
  %852 = and i32 %851, 251658240
  %853 = icmp eq i32 %852, 251658240
  %854 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %855 = add i64 %854, 32
  br i1 %853, label %856, label %860

856:                                              ; preds = %837
  %857 = inttoptr i64 %855 to i64*
  %858 = load i64, i64* %857, align 8
  %859 = add i64 %858, 16
  br label %860

860:                                              ; preds = %837, %856
  %861 = phi i64 [ %859, %856 ], [ %855, %837 ]
  %862 = inttoptr i64 %861 to %"class.v8::internal::compiler::Node"**
  %863 = sext i32 %850 to i64
  %864 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %862, i64 %863
  %865 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %864, align 8
  %866 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %865, i64 0, i32 0
  %867 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %866, align 8
  %868 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %867, i64 0, i32 3, i32 0
  %869 = load i8, i8* %868, align 2
  %870 = and i8 %869, 32
  %871 = icmp eq i8 %870, 0
  br i1 %871, label %873, label %872, !prof !2

872:                                              ; preds = %860
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i64 0, i64 0)) #12
  unreachable

873:                                              ; preds = %860
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

874:                                              ; preds = %444
  %875 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %876 = load i32, i32* %875, align 4
  %877 = icmp sgt i32 %876, 0
  br i1 %877, label %879, label %878, !prof !2

878:                                              ; preds = %874
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

879:                                              ; preds = %874
  %880 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %881 = load i32, i32* %880, align 4
  %882 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %883 = zext i1 %882 to i32
  %884 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %885 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %884) #11
  %886 = zext i1 %885 to i32
  %887 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %888 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %887, i64 0, i32 6
  %889 = load i32, i32* %888, align 8
  %890 = add i32 %881, %883
  %891 = add i32 %890, %886
  %892 = add i32 %891, %889
  %893 = load i32, i32* %38, align 4
  %894 = and i32 %893, 251658240
  %895 = icmp eq i32 %894, 251658240
  %896 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %897 = add i64 %896, 32
  br i1 %895, label %898, label %902

898:                                              ; preds = %879
  %899 = inttoptr i64 %897 to i64*
  %900 = load i64, i64* %899, align 8
  %901 = add i64 %900, 16
  br label %902

902:                                              ; preds = %879, %898
  %903 = phi i64 [ %901, %898 ], [ %897, %879 ]
  %904 = inttoptr i64 %903 to %"class.v8::internal::compiler::Node"**
  %905 = sext i32 %892 to i64
  %906 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %904, i64 %905
  %907 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %906, align 8
  %908 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %907, i64 0, i32 0
  %909 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %908, align 8
  %910 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %909, i64 0, i32 3, i32 0
  %911 = load i8, i8* %910, align 2
  %912 = and i8 %911, 32
  %913 = icmp eq i8 %912, 0
  br i1 %913, label %915, label %914, !prof !2

914:                                              ; preds = %902
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.30, i64 0, i64 0)) #12
  unreachable

915:                                              ; preds = %902
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

916:                                              ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckSwitchEPNS1_4NodeERKNS1_8AllNodesE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::AllNodes"* dereferenceable(72) %2)
  br label %2210

917:                                              ; preds = %444, %444
  %918 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %919 = load i32, i32* %918, align 4
  %920 = icmp sgt i32 %919, 0
  br i1 %920, label %922, label %921, !prof !2

921:                                              ; preds = %917
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

922:                                              ; preds = %917
  %923 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %924 = load i32, i32* %923, align 4
  %925 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %926 = zext i1 %925 to i32
  %927 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %928 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %927) #11
  %929 = zext i1 %928 to i32
  %930 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %931 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %930, i64 0, i32 6
  %932 = load i32, i32* %931, align 8
  %933 = add i32 %924, %926
  %934 = add i32 %933, %929
  %935 = add i32 %934, %932
  %936 = load i32, i32* %38, align 4
  %937 = and i32 %936, 251658240
  %938 = icmp eq i32 %937, 251658240
  %939 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %940 = add i64 %939, 32
  br i1 %938, label %941, label %945

941:                                              ; preds = %922
  %942 = inttoptr i64 %940 to i64*
  %943 = load i64, i64* %942, align 8
  %944 = add i64 %943, 16
  br label %945

945:                                              ; preds = %922, %941
  %946 = phi i64 [ %944, %941 ], [ %940, %922 ]
  %947 = inttoptr i64 %946 to %"class.v8::internal::compiler::Node"**
  %948 = sext i32 %935 to i64
  %949 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %947, i64 %948
  %950 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %949, align 8
  %951 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %950, i64 0, i32 0
  %952 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %951, align 8
  %953 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %952, i64 0, i32 2
  %954 = load i16, i16* %953, align 8
  %955 = icmp eq i16 %954, 3
  br i1 %955, label %957, label %956, !prof !2

956:                                              ; preds = %945
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.31, i64 0, i64 0)) #12
  unreachable

957:                                              ; preds = %945
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

958:                                              ; preds = %444
  %959 = icmp eq i32 %29, %37
  br i1 %959, label %961, label %960, !prof !2

960:                                              ; preds = %958
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i64 0, i64 0)) #12
  unreachable

961:                                              ; preds = %958
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %962 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %963 = bitcast %"struct.v8::internal::compiler::Node::Use"** %962 to i64*
  %964 = load i64, i64* %963, align 8
  %965 = icmp eq i64 %964, 0
  br i1 %965, label %1018, label %966

966:                                              ; preds = %961
  %967 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %968 = load i8, i8* %967, align 8, !range !3
  %969 = icmp eq i8 %968, 1
  %970 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %971 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %969, label %972, label %1017, !prof !2

972:                                              ; preds = %966, %1013
  %973 = phi i64 [ %1015, %1013 ], [ %964, %966 ]
  %974 = inttoptr i64 %973 to %"struct.v8::internal::compiler::Node::Use"*
  %975 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %974, i64 1
  %976 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %974, i64 0, i32 2
  %977 = load i32, i32* %976, align 8
  %978 = lshr i32 %977, 1
  %979 = zext i32 %978 to i64
  %980 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %975, i64 %979
  %981 = and i32 %977, 1
  %982 = icmp eq i32 %981, 0
  br i1 %982, label %985, label %983

983:                                              ; preds = %972
  %984 = bitcast %"struct.v8::internal::compiler::Node::Use"* %980 to %"class.v8::internal::compiler::Node"*
  br label %988

985:                                              ; preds = %972
  %986 = bitcast %"struct.v8::internal::compiler::Node::Use"* %980 to %"class.v8::internal::compiler::Node"**
  %987 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %986, align 8
  br label %988

988:                                              ; preds = %983, %985
  %989 = phi %"class.v8::internal::compiler::Node"* [ %984, %983 ], [ %987, %985 ]
  %990 = icmp eq %"class.v8::internal::compiler::Node"* %989, null
  br i1 %990, label %1013, label %991

991:                                              ; preds = %988
  %992 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %989, i64 0, i32 3
  %993 = load i32, i32* %992, align 4
  %994 = and i32 %993, 16777215
  %995 = zext i32 %994 to i64
  %996 = load i64, i64* %970, align 8
  %997 = icmp ugt i64 %996, %995
  br i1 %997, label %998, label %1013

998:                                              ; preds = %991
  %999 = load i64*, i64** %971, align 8
  %1000 = lshr i64 %995, 6
  %1001 = getelementptr inbounds i64, i64* %999, i64 %1000
  %1002 = and i64 %995, 63
  %1003 = shl i64 1, %1002
  %1004 = load i64, i64* %1001, align 8
  %1005 = and i64 %1004, %1003
  %1006 = icmp eq i64 %1005, 0
  br i1 %1006, label %1013, label %1007

1007:                                             ; preds = %998
  %1008 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %989, i64 0, i32 0
  %1009 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1008, align 8
  %1010 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1009, i64 0, i32 2
  %1011 = load i16, i16* %1010, align 8
  %1012 = icmp eq i16 %1011, 19
  br i1 %1012, label %2210, label %1013

1013:                                             ; preds = %1007, %998, %991, %988
  %1014 = inttoptr i64 %973 to i64*
  %1015 = load i64, i64* %1014, align 8
  %1016 = icmp eq i64 %1015, 0
  br i1 %1016, label %1018, label %972

1017:                                             ; preds = %966
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

1018:                                             ; preds = %1013, %961
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0)) #12
  unreachable

1019:                                             ; preds = %444
  %1020 = icmp eq i32 %29, %37
  br i1 %1020, label %1022, label %1021, !prof !2

1021:                                             ; preds = %1019
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i64 0, i64 0)) #12
  unreachable

1022:                                             ; preds = %1019
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1023:                                             ; preds = %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1024:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1025:                                             ; preds = %444, %444, %444
  %1026 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %1027 = bitcast %"struct.v8::internal::compiler::Node::Use"** %1026 to i64*
  %1028 = load i64, i64* %1027, align 8
  %1029 = icmp eq i64 %1028, 0
  br i1 %1029, label %1081, label %1030

1030:                                             ; preds = %1025
  %1031 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %1032 = load i8, i8* %1031, align 8, !range !3
  %1033 = icmp eq i8 %1032, 1
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %1035 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %1033, label %1036, label %1082, !prof !2

1036:                                             ; preds = %1030, %1077
  %1037 = phi i64 [ %1079, %1077 ], [ %1028, %1030 ]
  %1038 = inttoptr i64 %1037 to %"struct.v8::internal::compiler::Node::Use"*
  %1039 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1038, i64 1
  %1040 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1038, i64 0, i32 2
  %1041 = load i32, i32* %1040, align 8
  %1042 = lshr i32 %1041, 1
  %1043 = zext i32 %1042 to i64
  %1044 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1039, i64 %1043
  %1045 = and i32 %1041, 1
  %1046 = icmp eq i32 %1045, 0
  br i1 %1046, label %1049, label %1047

1047:                                             ; preds = %1036
  %1048 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1044 to %"class.v8::internal::compiler::Node"*
  br label %1052

1049:                                             ; preds = %1036
  %1050 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1044 to %"class.v8::internal::compiler::Node"**
  %1051 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1050, align 8
  br label %1052

1052:                                             ; preds = %1047, %1049
  %1053 = phi %"class.v8::internal::compiler::Node"* [ %1048, %1047 ], [ %1051, %1049 ]
  %1054 = icmp eq %"class.v8::internal::compiler::Node"* %1053, null
  br i1 %1054, label %1077, label %1055

1055:                                             ; preds = %1052
  %1056 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1053, i64 0, i32 3
  %1057 = load i32, i32* %1056, align 4
  %1058 = and i32 %1057, 16777215
  %1059 = zext i32 %1058 to i64
  %1060 = load i64, i64* %1034, align 8
  %1061 = icmp ugt i64 %1060, %1059
  br i1 %1061, label %1062, label %1077

1062:                                             ; preds = %1055
  %1063 = load i64*, i64** %1035, align 8
  %1064 = lshr i64 %1059, 6
  %1065 = getelementptr inbounds i64, i64* %1063, i64 %1064
  %1066 = and i64 %1059, 63
  %1067 = shl i64 1, %1066
  %1068 = load i64, i64* %1065, align 8
  %1069 = and i64 %1068, %1067
  %1070 = icmp eq i64 %1069, 0
  br i1 %1070, label %1077, label %1071

1071:                                             ; preds = %1062
  %1072 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1053, i64 0, i32 0
  %1073 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1072, align 8
  %1074 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1073, i64 0, i32 2
  %1075 = load i16, i16* %1074, align 8
  %1076 = icmp eq i16 %1075, 21
  br i1 %1076, label %1077, label %1083, !prof !2

1077:                                             ; preds = %1071, %1062, %1055, %1052
  %1078 = inttoptr i64 %1037 to i64*
  %1079 = load i64, i64* %1078, align 8
  %1080 = icmp eq i64 %1079, 0
  br i1 %1080, label %1081, label %1036

1081:                                             ; preds = %1077, %1025
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1082:                                             ; preds = %1030
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

1083:                                             ; preds = %1071
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0)) #12
  unreachable

1084:                                             ; preds = %444
  %1085 = icmp eq i32 %29, 1
  br i1 %1085, label %1087, label %1086, !prof !2

1086:                                             ; preds = %1084
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1087:                                             ; preds = %1084
  %1088 = icmp eq i32 %27, 1
  br i1 %1088, label %1090, label %1089, !prof !2

1089:                                             ; preds = %1087
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0)) #12
  unreachable

1090:                                             ; preds = %1087
  %1091 = icmp eq i32 %37, 2
  br i1 %1091, label %1093, label %1092, !prof !2

1092:                                             ; preds = %1090
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0)) #12
  unreachable

1093:                                             ; preds = %1090
  %1094 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1095 = load i32, i32* %1094, align 4
  %1096 = icmp sgt i32 %1095, 0
  br i1 %1096, label %1098, label %1097, !prof !2

1097:                                             ; preds = %1093
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1098:                                             ; preds = %1093
  %1099 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1100 = load i32, i32* %1099, align 4
  %1101 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1102 = zext i1 %1101 to i32
  %1103 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1104 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1103) #11
  %1105 = zext i1 %1104 to i32
  %1106 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1107 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1106, i64 0, i32 6
  %1108 = load i32, i32* %1107, align 8
  %1109 = add i32 %1100, %1102
  %1110 = add i32 %1109, %1105
  %1111 = add i32 %1110, %1108
  %1112 = load i32, i32* %38, align 4
  %1113 = and i32 %1112, 251658240
  %1114 = icmp eq i32 %1113, 251658240
  %1115 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1116 = add i64 %1115, 32
  br i1 %1114, label %1117, label %1121

1117:                                             ; preds = %1098
  %1118 = inttoptr i64 %1116 to i64*
  %1119 = load i64, i64* %1118, align 8
  %1120 = add i64 %1119, 16
  br label %1121

1121:                                             ; preds = %1098, %1117
  %1122 = phi i64 [ %1120, %1117 ], [ %1116, %1098 ]
  %1123 = inttoptr i64 %1122 to %"class.v8::internal::compiler::Node"**
  %1124 = sext i32 %1111 to i64
  %1125 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1123, i64 %1124
  %1126 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1125, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1126, i64 0, i32 0
  %1128 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1127, align 8
  %1129 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1128, i64 0, i32 2
  %1130 = load i16, i16* %1129, align 8
  %1131 = icmp eq i16 %1130, 1
  br i1 %1131, label %1133, label %1132, !prof !2

1132:                                             ; preds = %1121
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.38, i64 0, i64 0)) #12
  unreachable

1133:                                             ; preds = %1121
  %1134 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %1135 = bitcast %"struct.v8::internal::compiler::Node::Use"** %1134 to i64*
  %1136 = load i64, i64* %1135, align 8
  %1137 = icmp eq i64 %1136, 0
  br i1 %1137, label %1189, label %1138

1138:                                             ; preds = %1133
  %1139 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %1140 = load i8, i8* %1139, align 8, !range !3
  %1141 = icmp eq i8 %1140, 1
  %1142 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %1143 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %1141, label %1144, label %1190, !prof !2

1144:                                             ; preds = %1138, %1185
  %1145 = phi i64 [ %1187, %1185 ], [ %1136, %1138 ]
  %1146 = inttoptr i64 %1145 to %"struct.v8::internal::compiler::Node::Use"*
  %1147 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1146, i64 1
  %1148 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1146, i64 0, i32 2
  %1149 = load i32, i32* %1148, align 8
  %1150 = lshr i32 %1149, 1
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1147, i64 %1151
  %1153 = and i32 %1149, 1
  %1154 = icmp eq i32 %1153, 0
  br i1 %1154, label %1157, label %1155

1155:                                             ; preds = %1144
  %1156 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1152 to %"class.v8::internal::compiler::Node"*
  br label %1160

1157:                                             ; preds = %1144
  %1158 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1152 to %"class.v8::internal::compiler::Node"**
  %1159 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1158, align 8
  br label %1160

1160:                                             ; preds = %1155, %1157
  %1161 = phi %"class.v8::internal::compiler::Node"* [ %1156, %1155 ], [ %1159, %1157 ]
  %1162 = icmp eq %"class.v8::internal::compiler::Node"* %1161, null
  br i1 %1162, label %1185, label %1163

1163:                                             ; preds = %1160
  %1164 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1161, i64 0, i32 3
  %1165 = load i32, i32* %1164, align 4
  %1166 = and i32 %1165, 16777215
  %1167 = zext i32 %1166 to i64
  %1168 = load i64, i64* %1142, align 8
  %1169 = icmp ugt i64 %1168, %1167
  br i1 %1169, label %1170, label %1185

1170:                                             ; preds = %1163
  %1171 = load i64*, i64** %1143, align 8
  %1172 = lshr i64 %1167, 6
  %1173 = getelementptr inbounds i64, i64* %1171, i64 %1172
  %1174 = and i64 %1167, 63
  %1175 = shl i64 1, %1174
  %1176 = load i64, i64* %1173, align 8
  %1177 = and i64 %1176, %1175
  %1178 = icmp eq i64 %1177, 0
  br i1 %1178, label %1185, label %1179

1179:                                             ; preds = %1170
  %1180 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1161, i64 0, i32 0
  %1181 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1180, align 8
  %1182 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1181, i64 0, i32 2
  %1183 = load i16, i16* %1182, align 8
  %1184 = icmp eq i16 %1183, 21
  br i1 %1184, label %1185, label %1191, !prof !2

1185:                                             ; preds = %1179, %1170, %1163, %1160
  %1186 = inttoptr i64 %1145 to i64*
  %1187 = load i64, i64* %1186, align 8
  %1188 = icmp eq i64 %1187, 0
  br i1 %1188, label %1189, label %1144

1189:                                             ; preds = %1185, %1133
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1190:                                             ; preds = %1138
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

1191:                                             ; preds = %1179
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0)) #12
  unreachable

1192:                                             ; preds = %444
  %1193 = icmp eq i32 %37, 1
  br i1 %1193, label %1195, label %1194, !prof !2

1194:                                             ; preds = %1192
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0)) #12
  unreachable

1195:                                             ; preds = %1192
  %1196 = tail call i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1197 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1198 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1197, i64 0, i32 5
  %1199 = load i32, i32* %1198, align 4
  %1200 = icmp sgt i32 %1199, 0
  br i1 %1200, label %1202, label %1201, !prof !2

1201:                                             ; preds = %1195
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

1202:                                             ; preds = %1195
  %1203 = load i32, i32* %38, align 4
  %1204 = and i32 %1203, 251658240
  %1205 = icmp eq i32 %1204, 251658240
  %1206 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1207 = add i64 %1206, 32
  br i1 %1205, label %1208, label %1212

1208:                                             ; preds = %1202
  %1209 = inttoptr i64 %1207 to i64*
  %1210 = load i64, i64* %1209, align 8
  %1211 = add i64 %1210, 16
  br label %1212

1212:                                             ; preds = %1202, %1208
  %1213 = phi i64 [ %1211, %1208 ], [ %1207, %1202 ]
  %1214 = icmp sgt i32 %1196, -2
  br i1 %1214, label %1216, label %1215, !prof !2

1215:                                             ; preds = %1212
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.40, i64 0, i64 0)) #12
  unreachable

1216:                                             ; preds = %1212
  %1217 = inttoptr i64 %1213 to %"class.v8::internal::compiler::Node"**
  %1218 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1217, align 8
  %1219 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1218, i64 0, i32 0
  %1220 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1219, align 8
  %1221 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1220, i64 0, i32 8
  %1222 = load i32, i32* %1221, align 8
  %1223 = add nsw i32 %1222, -2
  %1224 = icmp sgt i32 %1196, %1223
  br i1 %1224, label %1225, label %1226, !prof !6

1225:                                             ; preds = %1216
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.41, i64 0, i64 0)) #12
  unreachable

1226:                                             ; preds = %1216
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1227:                                             ; preds = %444, %444, %444, %444, %444, %444, %444
  %1228 = icmp eq i32 %37, 0
  br i1 %1228, label %1230, label %1229, !prof !2

1229:                                             ; preds = %1227
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #12
  unreachable

1230:                                             ; preds = %1227
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1231:                                             ; preds = %444
  %1232 = icmp eq i32 %37, 0
  br i1 %1232, label %1234, label %1233, !prof !2

1233:                                             ; preds = %1231
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #12
  unreachable

1234:                                             ; preds = %1231
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1235:                                             ; preds = %444, %444
  %1236 = icmp eq i32 %37, 0
  br i1 %1236, label %1238, label %1237, !prof !2

1237:                                             ; preds = %1235
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #12
  unreachable

1238:                                             ; preds = %1235
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1239:                                             ; preds = %444, %444
  %1240 = icmp eq i32 %37, 0
  br i1 %1240, label %1242, label %1241, !prof !2

1241:                                             ; preds = %1239
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #12
  unreachable

1242:                                             ; preds = %1239
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 33554433)
  br label %2210

1243:                                             ; preds = %444
  %1244 = icmp eq i32 %29, 1
  br i1 %1244, label %1246, label %1245, !prof !2

1245:                                             ; preds = %1243
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1246:                                             ; preds = %1243
  %1247 = icmp eq i32 %37, 1
  br i1 %1247, label %1249, label %1248, !prof !2

1248:                                             ; preds = %1246
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0)) #12
  unreachable

1249:                                             ; preds = %1246
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1250:                                             ; preds = %444
  %1251 = tail call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1252 = trunc i64 %1251 to i32
  %1253 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1254 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1253, i64 0, i32 5
  %1255 = load i32, i32* %1254, align 4
  %1256 = icmp sgt i32 %1255, 0
  br i1 %1256, label %1258, label %1257, !prof !2

1257:                                             ; preds = %1250
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

1258:                                             ; preds = %1250
  %1259 = load i32, i32* %38, align 4
  %1260 = and i32 %1259, 251658240
  %1261 = icmp eq i32 %1260, 251658240
  %1262 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1263 = add i64 %1262, 32
  br i1 %1261, label %1264, label %1268

1264:                                             ; preds = %1258
  %1265 = inttoptr i64 %1263 to i64*
  %1266 = load i64, i64* %1265, align 8
  %1267 = add i64 %1266, 16
  br label %1268

1268:                                             ; preds = %1258, %1264
  %1269 = phi i64 [ %1267, %1264 ], [ %1263, %1258 ]
  %1270 = inttoptr i64 %1269 to %"class.v8::internal::compiler::Node"**
  %1271 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1270, align 8
  %1272 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1271, i64 0, i32 0
  %1273 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1272, align 8
  %1274 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1273, i64 0, i32 8
  %1275 = load i32, i32* %1274, align 8
  %1276 = icmp sgt i32 %1275, %1252
  br i1 %1276, label %1278, label %1277, !prof !2

1277:                                             ; preds = %1268
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.42, i64 0, i64 0)) #12
  unreachable

1278:                                             ; preds = %1268
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1279:                                             ; preds = %444
  %1280 = icmp eq i32 %27, 0
  br i1 %1280, label %1282, label %1281, !prof !2

1281:                                             ; preds = %1279
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #12
  unreachable

1282:                                             ; preds = %1279
  %1283 = icmp eq i32 %29, 0
  br i1 %1283, label %1285, label %1284, !prof !2

1284:                                             ; preds = %1282
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0)) #12
  unreachable

1285:                                             ; preds = %1282
  %1286 = icmp eq i32 %19, 3
  br i1 %1286, label %1288, label %1287, !prof !2

1287:                                             ; preds = %1285
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)) #12
  unreachable

1288:                                             ; preds = %1285
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1289:                                             ; preds = %444
  %1290 = icmp eq i32 %27, 0
  br i1 %1290, label %1292, label %1291, !prof !2

1291:                                             ; preds = %1289
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #12
  unreachable

1292:                                             ; preds = %1289
  %1293 = icmp eq i32 %29, 1
  br i1 %1293, label %1295, label %1294, !prof !2

1294:                                             ; preds = %1292
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1295:                                             ; preds = %1292
  %1296 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1297 = load i32, i32* %1296, align 4
  %1298 = icmp sgt i32 %1297, 0
  br i1 %1298, label %1300, label %1299, !prof !2

1299:                                             ; preds = %1295
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1300:                                             ; preds = %1295
  %1301 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1302 = load i32, i32* %1301, align 4
  %1303 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1304 = zext i1 %1303 to i32
  %1305 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1306 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1305) #11
  %1307 = zext i1 %1306 to i32
  %1308 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1308, i64 0, i32 6
  %1310 = load i32, i32* %1309, align 8
  %1311 = add i32 %1302, %1304
  %1312 = add i32 %1311, %1307
  %1313 = add i32 %1312, %1310
  %1314 = load i32, i32* %38, align 4
  %1315 = and i32 %1314, 251658240
  %1316 = icmp eq i32 %1315, 251658240
  %1317 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1318 = add i64 %1317, 32
  br i1 %1316, label %1319, label %1323

1319:                                             ; preds = %1300
  %1320 = inttoptr i64 %1318 to i64*
  %1321 = load i64, i64* %1320, align 8
  %1322 = add i64 %1321, 16
  br label %1323

1323:                                             ; preds = %1300, %1319
  %1324 = phi i64 [ %1322, %1319 ], [ %1318, %1300 ]
  %1325 = inttoptr i64 %1324 to %"class.v8::internal::compiler::Node"**
  %1326 = sext i32 %1313 to i64
  %1327 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1325, i64 %1326
  %1328 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1327, align 8
  %1329 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1328, i64 0, i32 0
  %1330 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1329, align 8
  %1331 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1330, i64 0, i32 7
  %1332 = load i32, i32* %1331, align 4
  %1333 = icmp eq i32 %19, %1332
  br i1 %1333, label %1335, label %1334, !prof !2

1334:                                             ; preds = %1323
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.46, i64 0, i64 0)) #12
  unreachable

1335:                                             ; preds = %1323
  %1336 = add nsw i32 %19, 1
  %1337 = icmp eq i32 %37, %1336
  br i1 %1337, label %2210, label %1338, !prof !2

1338:                                             ; preds = %1335
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i64 0, i64 0)) #12
  unreachable

1339:                                             ; preds = %444
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)) #12
  unreachable

1340:                                             ; preds = %444
  %1341 = icmp eq i32 %19, 0
  br i1 %1341, label %1343, label %1342, !prof !2

1342:                                             ; preds = %1340
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0)) #12
  unreachable

1343:                                             ; preds = %1340
  %1344 = icmp eq i32 %29, 1
  br i1 %1344, label %1346, label %1345, !prof !2

1345:                                             ; preds = %1343
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1346:                                             ; preds = %1343
  %1347 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1348 = load i32, i32* %1347, align 4
  %1349 = icmp sgt i32 %1348, 0
  br i1 %1349, label %1351, label %1350, !prof !2

1350:                                             ; preds = %1346
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1351:                                             ; preds = %1346
  %1352 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1353 = load i32, i32* %1352, align 4
  %1354 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1355 = zext i1 %1354 to i32
  %1356 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1357 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1356) #11
  %1358 = zext i1 %1357 to i32
  %1359 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1360 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1359, i64 0, i32 6
  %1361 = load i32, i32* %1360, align 8
  %1362 = add i32 %1353, %1355
  %1363 = add i32 %1362, %1358
  %1364 = add i32 %1363, %1361
  %1365 = load i32, i32* %38, align 4
  %1366 = and i32 %1365, 251658240
  %1367 = icmp eq i32 %1366, 251658240
  %1368 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1369 = add i64 %1368, 32
  br i1 %1367, label %1370, label %1374

1370:                                             ; preds = %1351
  %1371 = inttoptr i64 %1369 to i64*
  %1372 = load i64, i64* %1371, align 8
  %1373 = add i64 %1372, 16
  br label %1374

1374:                                             ; preds = %1351, %1370
  %1375 = phi i64 [ %1373, %1370 ], [ %1369, %1351 ]
  %1376 = inttoptr i64 %1375 to %"class.v8::internal::compiler::Node"**
  %1377 = sext i32 %1364 to i64
  %1378 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1376, i64 %1377
  %1379 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1378, align 8
  %1380 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1379, i64 0, i32 0
  %1381 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1380, align 8
  %1382 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1381, i64 0, i32 7
  %1383 = load i32, i32* %1382, align 4
  %1384 = icmp eq i32 %27, %1383
  br i1 %1384, label %1386, label %1385, !prof !2

1385:                                             ; preds = %1374
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.49, i64 0, i64 0)) #12
  unreachable

1386:                                             ; preds = %1374
  %1387 = add nsw i32 %27, 1
  %1388 = icmp eq i32 %37, %1387
  br i1 %1388, label %1390, label %1389, !prof !2

1389:                                             ; preds = %1386
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i64 0, i64 0)) #12
  unreachable

1390:                                             ; preds = %1386
  %1391 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1381, i64 0, i32 2
  %1392 = load i16, i16* %1391, align 8
  %1393 = icmp eq i16 %1392, 10
  br i1 %1393, label %1394, label %2210

1394:                                             ; preds = %1390
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1379, i64 0, i32 4
  %1396 = bitcast %"struct.v8::internal::compiler::Node::Use"** %1395 to i64*
  %1397 = load i64, i64* %1396, align 8
  %1398 = icmp eq i64 %1397, 0
  br i1 %1398, label %1459, label %1399

1399:                                             ; preds = %1394
  %1400 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 2
  %1401 = load i8, i8* %1400, align 8, !range !3
  %1402 = icmp eq i8 %1401, 1
  %1403 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 1
  %1404 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %1402, label %1405, label %1458, !prof !2

1405:                                             ; preds = %1399, %1450
  %1406 = phi i64 [ %1453, %1450 ], [ %1397, %1399 ]
  %1407 = phi i8 [ %1451, %1450 ], [ 0, %1399 ]
  %1408 = inttoptr i64 %1406 to %"struct.v8::internal::compiler::Node::Use"*
  %1409 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1408, i64 1
  %1410 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1408, i64 0, i32 2
  %1411 = load i32, i32* %1410, align 8
  %1412 = lshr i32 %1411, 1
  %1413 = zext i32 %1412 to i64
  %1414 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1409, i64 %1413
  %1415 = and i32 %1411, 1
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1419, label %1417

1417:                                             ; preds = %1405
  %1418 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1414 to %"class.v8::internal::compiler::Node"*
  br label %1422

1419:                                             ; preds = %1405
  %1420 = bitcast %"struct.v8::internal::compiler::Node::Use"* %1414 to %"class.v8::internal::compiler::Node"**
  %1421 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1420, align 8
  br label %1422

1422:                                             ; preds = %1417, %1419
  %1423 = phi %"class.v8::internal::compiler::Node"* [ %1418, %1417 ], [ %1421, %1419 ]
  %1424 = icmp eq %"class.v8::internal::compiler::Node"* %1423, null
  br i1 %1424, label %1450, label %1425

1425:                                             ; preds = %1422
  %1426 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1423, i64 0, i32 3
  %1427 = load i32, i32* %1426, align 4
  %1428 = and i32 %1427, 16777215
  %1429 = zext i32 %1428 to i64
  %1430 = load i64, i64* %1403, align 8
  %1431 = icmp ugt i64 %1430, %1429
  br i1 %1431, label %1432, label %1450

1432:                                             ; preds = %1425
  %1433 = load i64*, i64** %1404, align 8
  %1434 = lshr i64 %1429, 6
  %1435 = getelementptr inbounds i64, i64* %1433, i64 %1434
  %1436 = and i64 %1429, 63
  %1437 = shl i64 1, %1436
  %1438 = load i64, i64* %1435, align 8
  %1439 = and i64 %1438, %1437
  %1440 = icmp eq i64 %1439, 0
  br i1 %1440, label %1450, label %1441

1441:                                             ; preds = %1432
  %1442 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1423, i64 0, i32 0
  %1443 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1442, align 8
  %1444 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1443, i64 0, i32 2
  %1445 = load i16, i16* %1444, align 8
  %1446 = icmp eq i16 %1445, 36
  br i1 %1446, label %1450, label %1447

1447:                                             ; preds = %1441
  %1448 = icmp eq i16 %1445, 35
  %1449 = select i1 %1448, i8 %1407, i8 1
  br label %1450

1450:                                             ; preds = %1447, %1441, %1432, %1425, %1422
  %1451 = phi i8 [ %1407, %1441 ], [ %1407, %1432 ], [ %1449, %1447 ], [ %1407, %1422 ], [ %1407, %1425 ]
  %1452 = inttoptr i64 %1406 to i64*
  %1453 = load i64, i64* %1452, align 8
  %1454 = icmp eq i64 %1453, 0
  br i1 %1454, label %1455, label %1405

1455:                                             ; preds = %1450
  %1456 = and i8 %1451, 1
  %1457 = icmp eq i8 %1456, 0
  br i1 %1457, label %1459, label %2210, !prof !6

1458:                                             ; preds = %1399
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

1459:                                             ; preds = %1394, %1455
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.51, i64 0, i64 0)) #12
  unreachable

1460:                                             ; preds = %444
  %1461 = icmp eq i32 %29, 2
  br i1 %1461, label %1463, label %1462, !prof !2

1462:                                             ; preds = %1460
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0)) #12
  unreachable

1463:                                             ; preds = %1460
  %1464 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1465 = load i32, i32* %1464, align 4
  %1466 = icmp sgt i32 %1465, 1
  br i1 %1466, label %1468, label %1467, !prof !2

1467:                                             ; preds = %1463
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1468:                                             ; preds = %1463
  %1469 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1470 = load i32, i32* %1469, align 4
  %1471 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1472 = zext i1 %1471 to i32
  %1473 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1474 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1473) #11
  %1475 = zext i1 %1474 to i32
  %1476 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1477 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1476, i64 0, i32 6
  %1478 = load i32, i32* %1477, align 8
  %1479 = add i32 %1470, 1
  %1480 = add i32 %1479, %1472
  %1481 = add i32 %1480, %1475
  %1482 = add i32 %1481, %1478
  %1483 = load i32, i32* %38, align 4
  %1484 = and i32 %1483, 251658240
  %1485 = icmp eq i32 %1484, 251658240
  %1486 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1487 = add i64 %1486, 32
  br i1 %1485, label %1488, label %1492

1488:                                             ; preds = %1468
  %1489 = inttoptr i64 %1487 to i64*
  %1490 = load i64, i64* %1489, align 8
  %1491 = add i64 %1490, 16
  br label %1492

1492:                                             ; preds = %1468, %1488
  %1493 = phi i64 [ %1491, %1488 ], [ %1487, %1468 ]
  %1494 = inttoptr i64 %1493 to %"class.v8::internal::compiler::Node"**
  %1495 = sext i32 %1482 to i64
  %1496 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1494, i64 %1495
  %1497 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1496, align 8
  %1498 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1497, i64 0, i32 0
  %1499 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1498, align 8
  %1500 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1499, i64 0, i32 2
  %1501 = load i16, i16* %1500, align 8
  %1502 = icmp eq i16 %1501, 1
  br i1 %1502, label %2210, label %1503, !prof !2

1503:                                             ; preds = %1492
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0)) #12
  unreachable

1504:                                             ; preds = %444
  %1505 = icmp eq i32 %29, 1
  br i1 %1505, label %1507, label %1506, !prof !2

1506:                                             ; preds = %1504
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1507:                                             ; preds = %1504
  %1508 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1509 = load i32, i32* %1508, align 4
  %1510 = icmp sgt i32 %1509, 0
  br i1 %1510, label %1512, label %1511, !prof !2

1511:                                             ; preds = %1507
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1512:                                             ; preds = %1507
  %1513 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1514 = load i32, i32* %1513, align 4
  %1515 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1516 = zext i1 %1515 to i32
  %1517 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1518 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1517) #11
  %1519 = zext i1 %1518 to i32
  %1520 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1521 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1520, i64 0, i32 6
  %1522 = load i32, i32* %1521, align 8
  %1523 = add i32 %1514, %1516
  %1524 = add i32 %1523, %1519
  %1525 = add i32 %1524, %1522
  %1526 = load i32, i32* %38, align 4
  %1527 = and i32 %1526, 251658240
  %1528 = icmp eq i32 %1527, 251658240
  %1529 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1530 = add i64 %1529, 32
  br i1 %1528, label %1531, label %1535

1531:                                             ; preds = %1512
  %1532 = inttoptr i64 %1530 to i64*
  %1533 = load i64, i64* %1532, align 8
  %1534 = add i64 %1533, 16
  br label %1535

1535:                                             ; preds = %1512, %1531
  %1536 = phi i64 [ %1534, %1531 ], [ %1530, %1512 ]
  %1537 = inttoptr i64 %1536 to %"class.v8::internal::compiler::Node"**
  %1538 = sext i32 %1525 to i64
  %1539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1537, i64 %1538
  %1540 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1539, align 8
  %1541 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1540, i64 0, i32 0
  %1542 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1541, align 8
  %1543 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1542, i64 0, i32 2
  %1544 = load i16, i16* %1543, align 8
  %1545 = icmp eq i16 %1544, 52
  br i1 %1545, label %2210, label %1546, !prof !2

1546:                                             ; preds = %1535
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i64 0, i64 0)) #12
  unreachable

1547:                                             ; preds = %444
  %1548 = icmp eq i32 %29, 1
  br i1 %1548, label %1550, label %1549, !prof !2

1549:                                             ; preds = %1547
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0)) #12
  unreachable

1550:                                             ; preds = %1547
  %1551 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 7
  %1552 = load i32, i32* %1551, align 4
  %1553 = icmp sgt i32 %1552, 0
  br i1 %1553, label %1555, label %1554, !prof !2

1554:                                             ; preds = %1550
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1555:                                             ; preds = %1550
  %1556 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1557 = load i32, i32* %1556, align 4
  %1558 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  %1559 = zext i1 %1558 to i32
  %1560 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1561 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1560) #11
  %1562 = zext i1 %1561 to i32
  %1563 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1564 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1563, i64 0, i32 6
  %1565 = load i32, i32* %1564, align 8
  %1566 = add i32 %1557, %1559
  %1567 = add i32 %1566, %1562
  %1568 = add i32 %1567, %1565
  %1569 = load i32, i32* %38, align 4
  %1570 = and i32 %1569, 251658240
  %1571 = icmp eq i32 %1570, 251658240
  %1572 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1573 = add i64 %1572, 32
  br i1 %1571, label %1574, label %1578

1574:                                             ; preds = %1555
  %1575 = inttoptr i64 %1573 to i64*
  %1576 = load i64, i64* %1575, align 8
  %1577 = add i64 %1576, 16
  br label %1578

1578:                                             ; preds = %1555, %1574
  %1579 = phi i64 [ %1577, %1574 ], [ %1573, %1555 ]
  %1580 = inttoptr i64 %1579 to %"class.v8::internal::compiler::Node"**
  %1581 = sext i32 %1568 to i64
  %1582 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1580, i64 %1581
  %1583 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1582, align 8
  %1584 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1583, i64 0, i32 0
  %1585 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1584, align 8
  %1586 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1585, i64 0, i32 2
  %1587 = load i16, i16* %1586, align 8
  %1588 = icmp eq i16 %1587, 52
  br i1 %1588, label %2210, label %1589, !prof !2

1589:                                             ; preds = %1578
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.54, i64 0, i64 0)) #12
  unreachable

1590:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1591:                                             ; preds = %444
  %1592 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 1
  %1593 = load i32, i32* %1592, align 8
  %1594 = icmp eq i32 %1593, 0
  br i1 %1594, label %1595, label %2210

1595:                                             ; preds = %1591
  %1596 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %1597 = load i32, i32* %1596, align 4
  %1598 = icmp sgt i32 %1597, 0
  br i1 %1598, label %1600, label %1599, !prof !2

1599:                                             ; preds = %1595
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

1600:                                             ; preds = %1595
  %1601 = load i32, i32* %38, align 4
  %1602 = and i32 %1601, 251658240
  %1603 = icmp eq i32 %1602, 251658240
  %1604 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1605 = add i64 %1604, 32
  br i1 %1603, label %1606, label %1610

1606:                                             ; preds = %1600
  %1607 = inttoptr i64 %1605 to i64*
  %1608 = load i64, i64* %1607, align 8
  %1609 = add i64 %1608, 16
  br label %1610

1610:                                             ; preds = %1600, %1606
  %1611 = phi i64 [ %1609, %1606 ], [ %1605, %1600 ]
  %1612 = inttoptr i64 %1611 to %"class.v8::internal::compiler::Node"**
  %1613 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1612, align 8
  %1614 = bitcast %"class.v8::internal::compiler::Type"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1614) #11
  %1615 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1613, i64 0, i32 1, i32 0
  %1616 = load i64, i64* %1615, align 8
  %1617 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %9, i64 0, i32 0
  store i64 %1616, i64* %1617, align 8
  %1618 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %1619 = load i64, i64* %1618, align 8
  %1620 = icmp eq i64 %1616, %1619
  br i1 %1620, label %1621, label %1622

1621:                                             ; preds = %1610
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1614) #11
  br label %2210

1622:                                             ; preds = %1610
  %1623 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %9, i64 %1619) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1614) #11
  br i1 %1623, label %2210, label %1624, !prof !2

1624:                                             ; preds = %1622
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.55, i64 0, i64 0)) #12
  unreachable

1625:                                             ; preds = %444
  %1626 = icmp eq i32 %19, 5
  br i1 %1626, label %1628, label %1627, !prof !2

1627:                                             ; preds = %1625
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0)) #12
  unreachable

1628:                                             ; preds = %1625
  %1629 = icmp eq i32 %29, 0
  br i1 %1629, label %1631, label %1630, !prof !2

1630:                                             ; preds = %1628
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0)) #12
  unreachable

1631:                                             ; preds = %1628
  %1632 = icmp eq i32 %27, 0
  br i1 %1632, label %1634, label %1633, !prof !2

1633:                                             ; preds = %1631
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.43, i64 0, i64 0)) #12
  unreachable

1634:                                             ; preds = %1631
  %1635 = icmp eq i32 %37, 6
  br i1 %1635, label %1637, label %1636, !prof !2

1636:                                             ; preds = %1634
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.57, i64 0, i64 0)) #12
  unreachable

1637:                                             ; preds = %1634
  %1638 = load i32, i32* %38, align 4
  %1639 = and i32 %1638, 251658240
  %1640 = icmp eq i32 %1639, 251658240
  %1641 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %1642 = add i64 %1641, 32
  br i1 %1640, label %1643, label %1647

1643:                                             ; preds = %1637
  %1644 = inttoptr i64 %1642 to i64*
  %1645 = load i64, i64* %1644, align 8
  %1646 = add i64 %1645, 16
  br label %1647

1647:                                             ; preds = %1637, %1643
  %1648 = phi i64 [ %1646, %1643 ], [ %1642, %1637 ]
  %1649 = inttoptr i64 %1648 to %"class.v8::internal::compiler::Node"**
  %1650 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1649, align 8
  %1651 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1650, i64 0, i32 0
  %1652 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1651, align 8
  %1653 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1652, i64 0, i32 2
  %1654 = load i16, i16* %1653, align 8
  %1655 = icmp eq i16 %1654, 42
  br i1 %1655, label %1671, label %1656

1656:                                             ; preds = %1647
  br i1 %1640, label %1657, label %1661

1657:                                             ; preds = %1656
  %1658 = inttoptr i64 %1642 to i64*
  %1659 = load i64, i64* %1658, align 8
  %1660 = add i64 %1659, 16
  br label %1661

1661:                                             ; preds = %1656, %1657
  %1662 = phi i64 [ %1660, %1657 ], [ %1642, %1656 ]
  %1663 = inttoptr i64 %1662 to %"class.v8::internal::compiler::Node"**
  %1664 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1663, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1664, i64 0, i32 0
  %1666 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1665, align 8
  %1667 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1666, i64 0, i32 2
  %1668 = load i16, i16* %1667, align 8
  %1669 = icmp eq i16 %1668, 43
  br i1 %1669, label %1671, label %1670, !prof !2

1670:                                             ; preds = %1661
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.58, i64 0, i64 0)) #12
  unreachable

1671:                                             ; preds = %1661, %1647
  br i1 %1640, label %1672, label %1676

1672:                                             ; preds = %1671
  %1673 = inttoptr i64 %1642 to i64*
  %1674 = load i64, i64* %1673, align 8
  %1675 = add i64 %1674, 16
  br label %1676

1676:                                             ; preds = %1671, %1672
  %1677 = phi i64 [ %1675, %1672 ], [ %1642, %1671 ]
  %1678 = inttoptr i64 %1677 to %"class.v8::internal::compiler::Node"**
  %1679 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1678, i64 1
  %1680 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1679, align 8
  %1681 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1680, i64 0, i32 0
  %1682 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1681, align 8
  %1683 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1682, i64 0, i32 2
  %1684 = load i16, i16* %1683, align 8
  %1685 = icmp eq i16 %1684, 42
  br i1 %1685, label %1702, label %1686

1686:                                             ; preds = %1676
  br i1 %1640, label %1687, label %1691

1687:                                             ; preds = %1686
  %1688 = inttoptr i64 %1642 to i64*
  %1689 = load i64, i64* %1688, align 8
  %1690 = add i64 %1689, 16
  br label %1691

1691:                                             ; preds = %1686, %1687
  %1692 = phi i64 [ %1690, %1687 ], [ %1642, %1686 ]
  %1693 = inttoptr i64 %1692 to %"class.v8::internal::compiler::Node"**
  %1694 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1693, i64 1
  %1695 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1694, align 8
  %1696 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1695, i64 0, i32 0
  %1697 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1696, align 8
  %1698 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1697, i64 0, i32 2
  %1699 = load i16, i16* %1698, align 8
  %1700 = icmp eq i16 %1699, 43
  br i1 %1700, label %1702, label %1701, !prof !2

1701:                                             ; preds = %1691
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.59, i64 0, i64 0)) #12
  unreachable

1702:                                             ; preds = %1691, %1676
  %1703 = tail call dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11, !noalias !9
  %1704 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateInfo", %"class.v8::internal::compiler::FrameStateInfo"* %1703, i64 0, i32 2
  %1705 = load %"class.v8::internal::compiler::FrameStateFunctionInfo"*, %"class.v8::internal::compiler::FrameStateFunctionInfo"** %1704, align 8
  %1706 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %1705, i64 0, i32 1
  %1707 = load i32, i32* %1706, align 4
  %1708 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1708) #11
  %1709 = load i32, i32* %38, align 4
  %1710 = and i32 %1709, 251658240
  %1711 = icmp eq i32 %1710, 251658240
  br i1 %1711, label %1712, label %1716

1712:                                             ; preds = %1702
  %1713 = inttoptr i64 %1642 to i64*
  %1714 = load i64, i64* %1713, align 8
  %1715 = add i64 %1714, 16
  br label %1716

1716:                                             ; preds = %1702, %1712
  %1717 = phi i64 [ %1715, %1712 ], [ %1642, %1702 ]
  %1718 = inttoptr i64 %1717 to i64*
  %1719 = load i64, i64* %1718, align 8
  %1720 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %10 to i64*
  store i64 %1719, i64* %1720, align 8
  %1721 = call i64 @_ZNK2v88internal8compiler17StateValuesAccess4sizeEv(%"class.v8::internal::compiler::StateValuesAccess"* nonnull %10) #11
  %1722 = icmp sgt i32 %1707, -1
  %1723 = zext i32 %1707 to i64
  %1724 = icmp eq i64 %1721, %1723
  %1725 = and i1 %1722, %1724
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1708) #11
  br i1 %1725, label %1727, label %1726, !prof !2

1726:                                             ; preds = %1716
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.60, i64 0, i64 0)) #12
  unreachable

1727:                                             ; preds = %1716
  %1728 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %1705, i64 0, i32 2
  %1729 = load i32, i32* %1728, align 8
  %1730 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1730) #11
  %1731 = load i32, i32* %38, align 4
  %1732 = and i32 %1731, 251658240
  %1733 = icmp eq i32 %1732, 251658240
  br i1 %1733, label %1734, label %1738

1734:                                             ; preds = %1727
  %1735 = inttoptr i64 %1642 to i64*
  %1736 = load i64, i64* %1735, align 8
  %1737 = add i64 %1736, 16
  br label %1738

1738:                                             ; preds = %1727, %1734
  %1739 = phi i64 [ %1737, %1734 ], [ %1642, %1727 ]
  %1740 = inttoptr i64 %1739 to %"class.v8::internal::compiler::Node"**
  %1741 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1740, i64 1
  %1742 = bitcast %"class.v8::internal::compiler::Node"** %1741 to i64*
  %1743 = load i64, i64* %1742, align 8
  %1744 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %11 to i64*
  store i64 %1743, i64* %1744, align 8
  %1745 = call i64 @_ZNK2v88internal8compiler17StateValuesAccess4sizeEv(%"class.v8::internal::compiler::StateValuesAccess"* nonnull %11) #11
  %1746 = icmp sgt i32 %1729, -1
  %1747 = zext i32 %1729 to i64
  %1748 = icmp eq i64 %1745, %1747
  %1749 = and i1 %1746, %1748
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1730) #11
  br i1 %1749, label %1751, label %1750, !prof !2

1750:                                             ; preds = %1738
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.61, i64 0, i64 0)) #12
  unreachable

1751:                                             ; preds = %1738
  %1752 = load i32, i32* %38, align 4
  %1753 = and i32 %1752, 251658240
  %1754 = icmp eq i32 %1753, 251658240
  br i1 %1754, label %1755, label %1759

1755:                                             ; preds = %1751
  %1756 = inttoptr i64 %1642 to i64*
  %1757 = load i64, i64* %1756, align 8
  %1758 = add i64 %1757, 16
  br label %1759

1759:                                             ; preds = %1751, %1755
  %1760 = phi i64 [ %1758, %1755 ], [ %1642, %1751 ]
  %1761 = inttoptr i64 %1760 to %"class.v8::internal::compiler::Node"**
  %1762 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1761, i64 2
  %1763 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1762, align 8
  %1764 = getelementptr inbounds %"class.v8::internal::compiler::FrameStateFunctionInfo", %"class.v8::internal::compiler::FrameStateFunctionInfo"* %1705, i64 0, i32 0
  %1765 = load i32, i32* %1764, align 8
  %1766 = icmp eq i32 %1765, 0
  %1767 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1763, i64 0, i32 0
  %1768 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1767, align 8
  %1769 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1768, i64 0, i32 2
  %1770 = load i16, i16* %1769, align 8
  br i1 %1766, label %1771, label %1779

1771:                                             ; preds = %1759
  switch i16 %1770, label %2210 [
    i16 42, label %1772
    i16 43, label %1773
  ], !prof !12

1772:                                             ; preds = %1771
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.62, i64 0, i64 0)) #12
  unreachable

1773:                                             ; preds = %1771
  %1774 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1774) #11
  %1775 = getelementptr inbounds %"class.v8::internal::compiler::StateValuesAccess", %"class.v8::internal::compiler::StateValuesAccess"* %12, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1763, %"class.v8::internal::compiler::Node"** %1775, align 8
  %1776 = call i64 @_ZNK2v88internal8compiler17StateValuesAccess4sizeEv(%"class.v8::internal::compiler::StateValuesAccess"* nonnull %12) #11
  %1777 = icmp eq i64 %1776, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1774) #11
  br i1 %1777, label %2210, label %1778, !prof !2

1778:                                             ; preds = %1773
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.63, i64 0, i64 0)) #12
  unreachable

1779:                                             ; preds = %1759
  %1780 = and i16 %1770, -2
  %1781 = icmp eq i16 %1780, 42
  br i1 %1781, label %1783, label %1782, !prof !13

1782:                                             ; preds = %1779
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.64, i64 0, i64 0)) #12
  unreachable

1783:                                             ; preds = %1779
  %1784 = bitcast %"class.v8::internal::compiler::StateValuesAccess"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1784) #11
  %1785 = getelementptr inbounds %"class.v8::internal::compiler::StateValuesAccess", %"class.v8::internal::compiler::StateValuesAccess"* %13, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1763, %"class.v8::internal::compiler::Node"** %1785, align 8
  %1786 = call i64 @_ZNK2v88internal8compiler17StateValuesAccess4sizeEv(%"class.v8::internal::compiler::StateValuesAccess"* nonnull %13) #11
  %1787 = icmp eq i64 %1786, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1784) #11
  br i1 %1787, label %2210, label %1788, !prof !2

1788:                                             ; preds = %1783
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.65, i64 0, i64 0)) #12
  unreachable

1789:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 73859073)
  br label %2210

1790:                                             ; preds = %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1791:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134241407)
  br label %2210

1792:                                             ; preds = %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134224991)
  br label %2210

1793:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1794:                                             ; preds = %444
  %1795 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 0
  %1796 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1795, align 8
  %1797 = tail call i64 @_ZN2v88internal8compiler4Type5RangeEddPNS0_4ZoneE(double 0.000000e+00, double 0x433FFFFFFFFFFFFF, %"class.v8::internal::Zone"* %1796) #11
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1797)
  br label %2210

1798:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 24609)
  br label %2210

1799:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1800:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134224991)
  br label %2210

1801:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1802:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

1803:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1804:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1805:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 73859073)
  br label %2210

1806:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67239937)
  br label %2210

1807:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67108865)
  br label %2210

1808:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1809:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1810:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1811:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4194305)
  br label %2210

1812:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 2097153)
  br label %2210

1813:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1814:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1815:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1816:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1817:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1818:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1819:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67108865)
  br label %2210

1820:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67108865)
  br label %2210

1821:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67108865)
  br label %2210

1822:                                             ; preds = %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1823:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 67108865)
  br label %2210

1824:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  %1825 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1826 = tail call dereferenceable(24) %"class.v8::internal::compiler::PropertyAccess"* @_ZN2v88internal8compiler16PropertyAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1825) #11
  %1827 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccess", %"class.v8::internal::compiler::PropertyAccess"* %1826, i64 0, i32 0, i32 0, i32 0, i32 0
  %1828 = load i64*, i64** %1827, align 8
  %1829 = icmp eq i64* %1828, null
  br i1 %1829, label %1834, label %1830, !prof !4

1830:                                             ; preds = %1824
  %1831 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccess", %"class.v8::internal::compiler::PropertyAccess"* %1826, i64 0, i32 0, i32 1, i32 0
  %1832 = load i32, i32* %1831, align 4
  %1833 = icmp eq i32 %1832, -1
  br i1 %1833, label %1834, label %2210, !prof !6

1834:                                             ; preds = %1830, %1824
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i64 0, i64 0)) #12
  unreachable

1835:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1836:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1837:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  %1838 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1839 = tail call dereferenceable(32) %"class.v8::internal::compiler::LoadGlobalParameters"* @_ZN2v88internal8compiler22LoadGlobalParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1838) #11
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::LoadGlobalParameters", %"class.v8::internal::compiler::LoadGlobalParameters"* %1839, i64 0, i32 1, i32 0, i32 0, i32 0
  %1841 = load i64*, i64** %1840, align 8
  %1842 = icmp eq i64* %1841, null
  br i1 %1842, label %1847, label %1843, !prof !4

1843:                                             ; preds = %1837
  %1844 = getelementptr inbounds %"class.v8::internal::compiler::LoadGlobalParameters", %"class.v8::internal::compiler::LoadGlobalParameters"* %1839, i64 0, i32 1, i32 1, i32 0
  %1845 = load i32, i32* %1844, align 4
  %1846 = icmp eq i32 %1845, -1
  br i1 %1846, label %1847, label %2210, !prof !6

1847:                                             ; preds = %1843, %1837
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.67, i64 0, i64 0)) #12
  unreachable

1848:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %1849 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1850 = tail call dereferenceable(24) %"class.v8::internal::compiler::PropertyAccess"* @_ZN2v88internal8compiler16PropertyAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1849) #11
  %1851 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccess", %"class.v8::internal::compiler::PropertyAccess"* %1850, i64 0, i32 0, i32 0, i32 0, i32 0
  %1852 = load i64*, i64** %1851, align 8
  %1853 = icmp eq i64* %1852, null
  br i1 %1853, label %1858, label %1854, !prof !4

1854:                                             ; preds = %1848
  %1855 = getelementptr inbounds %"class.v8::internal::compiler::PropertyAccess", %"class.v8::internal::compiler::PropertyAccess"* %1850, i64 0, i32 0, i32 1, i32 0
  %1856 = load i32, i32* %1855, align 4
  %1857 = icmp eq i32 %1856, -1
  br i1 %1857, label %1858, label %2210, !prof !6

1858:                                             ; preds = %1854, %1848
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.66, i64 0, i64 0)) #12
  unreachable

1859:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1860:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %1861 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1862 = tail call dereferenceable(32) %"class.v8::internal::compiler::StoreGlobalParameters"* @_ZN2v88internal8compiler23StoreGlobalParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1861) #11
  %1863 = getelementptr inbounds %"class.v8::internal::compiler::StoreGlobalParameters", %"class.v8::internal::compiler::StoreGlobalParameters"* %1862, i64 0, i32 2, i32 0, i32 0, i32 0
  %1864 = load i64*, i64** %1863, align 8
  %1865 = icmp eq i64* %1864, null
  br i1 %1865, label %1870, label %1866, !prof !4

1866:                                             ; preds = %1860
  %1867 = getelementptr inbounds %"class.v8::internal::compiler::StoreGlobalParameters", %"class.v8::internal::compiler::StoreGlobalParameters"* %1862, i64 0, i32 2, i32 1, i32 0
  %1868 = load i32, i32* %1867, align 4
  %1869 = icmp eq i32 %1868, -1
  br i1 %1869, label %1870, label %2210, !prof !6

1870:                                             ; preds = %1866, %1860
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.68, i64 0, i64 0)) #12
  unreachable

1871:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %1872 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1873 = tail call dereferenceable(24) %"class.v8::internal::compiler::StoreNamedOwnParameters"* @_ZN2v88internal8compiler25StoreNamedOwnParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1872) #11
  %1874 = getelementptr inbounds %"class.v8::internal::compiler::StoreNamedOwnParameters", %"class.v8::internal::compiler::StoreNamedOwnParameters"* %1873, i64 0, i32 1, i32 0, i32 0, i32 0
  %1875 = load i64*, i64** %1874, align 8
  %1876 = icmp eq i64* %1875, null
  br i1 %1876, label %1881, label %1877, !prof !4

1877:                                             ; preds = %1871
  %1878 = getelementptr inbounds %"class.v8::internal::compiler::StoreNamedOwnParameters", %"class.v8::internal::compiler::StoreNamedOwnParameters"* %1873, i64 0, i32 1, i32 1, i32 0
  %1879 = load i32, i32* %1878, align 4
  %1880 = icmp eq i32 %1879, -1
  br i1 %1880, label %1881, label %2210, !prof !6

1881:                                             ; preds = %1877, %1871
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.69, i64 0, i64 0)) #12
  unreachable

1882:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1883:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  %1884 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %16, align 8
  %1885 = tail call dereferenceable(16) %"class.v8::internal::compiler::FeedbackParameter"* @_ZN2v88internal8compiler19FeedbackParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1884) #11
  %1886 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackParameter", %"class.v8::internal::compiler::FeedbackParameter"* %1885, i64 0, i32 0, i32 0, i32 0, i32 0
  %1887 = load i64*, i64** %1886, align 8
  %1888 = icmp eq i64* %1887, null
  br i1 %1888, label %1893, label %1889, !prof !4

1889:                                             ; preds = %1883
  %1890 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackParameter", %"class.v8::internal::compiler::FeedbackParameter"* %1885, i64 0, i32 0, i32 1, i32 0
  %1891 = load i32, i32* %1890, align 4
  %1892 = icmp eq i32 %1891, -1
  br i1 %1892, label %1893, label %2210, !prof !6

1893:                                             ; preds = %1889, %1883
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.70, i64 0, i64 0)) #12
  unreachable

1894:                                             ; preds = %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1895:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16385)
  br label %2210

1896:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1897:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 209682431)
  br label %2210

1898:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1899:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1900:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1901:                                             ; preds = %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16777217)
  br label %2210

1902:                                             ; preds = %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

1903:                                             ; preds = %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1904:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16777217)
  br label %2210

1905:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1906:                                             ; preds = %444
  %1907 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 0
  %1908 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1907, align 8
  %1909 = tail call i64 @_ZN2v88internal8compiler4Type5UnionES2_S2_PNS0_4ZoneE(i64 24609, i64 257, %"class.v8::internal::Zone"* %1908) #11
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1909)
  br label %2210

1910:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1911:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1912:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1913:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1914:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1915:                                             ; preds = %444
  %1916 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %1917 = or i32 %1916, 1
  %1918 = zext i32 %1917 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1918)
  br label %2210

1919:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1920:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1921:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  br label %2210

1922:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1923:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1924:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1925:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 131073)
  br label %2210

1926:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 257)
  br label %2210

1927:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 3, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

1928:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

1929:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 257)
  br label %2210

1930:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 257)
  br label %2210

1931:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1932:                                             ; preds = %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

1933:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1934:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1935:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1936:                                             ; preds = %444, %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1937:                                             ; preds = %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1938:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

1939:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

1940:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

1941:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 134217729)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 134217729)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

1942:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 134217729)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

1943:                                             ; preds = %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1944:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1945:                                             ; preds = %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1099)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1099)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1946:                                             ; preds = %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1947:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1099)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1948:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1949:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1031)
  br label %2210

1950:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1031)
  br label %2210

1951:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1952:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1031)
  br label %2210

1953:                                             ; preds = %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1954:                                             ; preds = %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1955:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1956:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1099)
  br label %2210

1957:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1958:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1031)
  br label %2210

1959:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1960:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 24575)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1961:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 24575)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1103)
  br label %2210

1962:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 24575)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1963:                                             ; preds = %444
  %1964 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %1965 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %1964, i64 0, i32 52, i32 0
  %1966 = load i64, i64* %1965, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 %1966)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1967:                                             ; preds = %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

1968:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

1969:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  %1970 = tail call i32 @_ZN2v88internal8compiler10BitsetType13UnsignedSmallEv() #11
  %1971 = or i32 %1970, 1
  %1972 = zext i32 %1971 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1972)
  br label %2210

1973:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  %1974 = tail call i32 @_ZN2v88internal8compiler10BitsetType13UnsignedSmallEv() #11
  %1975 = or i32 %1974, 1
  %1976 = zext i32 %1975 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1976)
  br label %2210

1977:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1978:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1979:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1980:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 16417)
  %1981 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %1982 = or i32 %1981, 1
  %1983 = zext i32 %1982 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 %1983)
  %1984 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %1985 = or i32 %1984, 1
  %1986 = zext i32 %1985 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1986)
  br label %2210

1987:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  %1988 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %1989 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %1988, i64 0, i32 52, i32 0
  %1990 = load i64, i64* %1989, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %1990)
  br label %2210

1991:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1992:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16417)
  %1993 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %1994 = or i32 %1993, 1
  %1995 = zext i32 %1994 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 %1995)
  %1996 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %1997 = or i32 %1996, 1
  %1998 = zext i32 %1997 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 %1998)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

1999:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2000:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2001:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2002:                                             ; preds = %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2003:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 8395871)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2004:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2005:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2006:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2007:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2008:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2009:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2010:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2011:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  %2012 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %2013 = or i32 %2012, 1
  %2014 = zext i32 %2013 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %2014)
  br label %2210

2015:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 1099)
  %2016 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %2017 = or i32 %2016, 1
  %2018 = zext i32 %2017 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %2018)
  br label %2210

2019:                                             ; preds = %444, %444
  %2020 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %2021 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %2020, i64 0, i32 62, i32 0
  %2022 = load i64, i64* %2021, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %2022)
  br label %2210

2023:                                             ; preds = %444, %444
  %2024 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 0
  %2025 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2024, align 8
  %2026 = tail call i64 @_ZN2v88internal8compiler4Type5RangeEddPNS0_4ZoneE(double 0.000000e+00, double 0x419FFFFFF4000000, %"class.v8::internal::Zone"* %2025) #11
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 %2026)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16777217)
  br label %2210

2027:                                             ; preds = %444
  %2028 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 0
  %2029 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2028, align 8
  %2030 = tail call i64 @_ZN2v88internal8compiler4Type5RangeEddPNS0_4ZoneE(double 0.000000e+00, double 0x419FFFFFF4000000, %"class.v8::internal::Zone"* %2029) #11
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 %2030)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16777217)
  br label %2210

2031:                                             ; preds = %444
  %2032 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %2033 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %2032, i64 0, i32 52, i32 0
  %2034 = load i64, i64* %2033, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 %2034)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 16417)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

2035:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

2036:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1119)
  br label %2210

2037:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 327155713)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 327155713)
  br label %2210

2038:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 327155713)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 2, i64 1027)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 3, i64 1027)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 327155713)
  br label %2210

2039:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2040:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 134217729)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

2041:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 134217729)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

2042:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  %2043 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %2044 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %2043, i64 0, i32 43, i32 0
  %2045 = load i64, i64* %2044, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 %2045)
  %2046 = tail call %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() #11
  %2047 = getelementptr inbounds %"class.v8::internal::compiler::TypeCache", %"class.v8::internal::compiler::TypeCache"* %2046, i64 0, i32 43, i32 0
  %2048 = load i64, i64* %2047, align 8
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %2048)
  br label %2210

2049:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 1031)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 1031)
  br label %2210

2050:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 2097153)
  br label %2210

2051:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  br label %2210

2052:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 513)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2053:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16385)
  br label %2210

2054:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2055:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2056:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 513)
  br label %2210

2057:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

2058:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

2059:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75432321)
  br label %2210

2060:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  br label %2210

2061:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 16417)
  br label %2210

2062:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 8193)
  br label %2210

2063:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 75431937)
  br label %2210

2064:                                             ; preds = %444
  %2065 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %2066 = load i64, i64* %2065, align 8
  %2067 = icmp eq i64 %2066, 0
  br i1 %2067, label %2210, label %2068

2068:                                             ; preds = %2064
  %2069 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %445, i64 0, i32 5
  %2070 = load i32, i32* %2069, align 4
  %2071 = icmp sgt i32 %2070, 0
  br i1 %2071, label %2073, label %2072, !prof !2

2072:                                             ; preds = %2068
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

2073:                                             ; preds = %2068
  %2074 = load i32, i32* %38, align 4
  %2075 = and i32 %2074, 251658240
  %2076 = icmp eq i32 %2075, 251658240
  %2077 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %2078 = add i64 %2077, 32
  br i1 %2076, label %2079, label %2083

2079:                                             ; preds = %2073
  %2080 = inttoptr i64 %2078 to i64*
  %2081 = load i64, i64* %2080, align 8
  %2082 = add i64 %2081, 16
  br label %2083

2083:                                             ; preds = %2073, %2079
  %2084 = phi i64 [ %2082, %2079 ], [ %2078, %2073 ]
  %2085 = inttoptr i64 %2084 to %"class.v8::internal::compiler::Node"**
  %2086 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2085, align 8
  %2087 = bitcast %"class.v8::internal::compiler::Type"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2087) #11
  %2088 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %14, i64 0, i32 0
  store i64 %2066, i64* %2088, align 8
  %2089 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2086, i64 0, i32 1, i32 0
  %2090 = load i64, i64* %2089, align 8
  %2091 = bitcast %"class.v8::internal::compiler::Type"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2091)
  %2092 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %4, i64 0, i32 0
  store i64 %2090, i64* %2092, align 8
  %2093 = icmp eq i64 %2066, %2090
  br i1 %2093, label %2100, label %2094

2094:                                             ; preds = %2083
  %2095 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %14, i64 %2090) #11
  br i1 %2095, label %2097, label %2096, !prof !5

2096:                                             ; preds = %2094
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2091)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2087) #11
  br label %2103

2097:                                             ; preds = %2094
  %2098 = load i64, i64* %2088, align 8
  %2099 = icmp eq i64 %2098, %2090
  br i1 %2099, label %2100, label %2101

2100:                                             ; preds = %2097, %2083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2091)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2087) #11
  br label %2210

2101:                                             ; preds = %2097
  %2102 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %4, i64 %2098) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2091)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2087) #11
  br i1 %2102, label %2210, label %2103, !prof !2

2103:                                             ; preds = %2096, %2101
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.71, i64 0, i64 0)) #12
  unreachable

2104:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 8395871)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7519)
  br label %2210

2105:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 209682431)
  br label %2210

2106:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 209682431)
  br label %2210

2107:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 16385)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2108:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 8193)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2109:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  %2110 = tail call i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() #11
  %2111 = or i32 %2110, 1
  %2112 = zext i32 %2111 to i64
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 %2112)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 209682431)
  br label %2210

2113:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 75431937)
  br label %2210

2114:                                             ; preds = %444, %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2115:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2116:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2117:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2118:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2119:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2120:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2121:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2122:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 7263)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

2123:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor13CheckNotTypedEPNS1_4NodeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %2210

2124:                                             ; preds = %444
  %2125 = tail call i64 @_ZN2v88internal8compiler15TypeGuardTypeOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %445) #11
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 %2125)
  br label %2210

2126:                                             ; preds = %444
  %2127 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 1
  %2128 = load i32, i32* %2127, align 8
  %2129 = icmp eq i32 %2128, 0
  br i1 %2129, label %2130, label %2210

2130:                                             ; preds = %2126
  %2131 = bitcast %"class.v8::internal::compiler::Type"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2131) #11
  %2132 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %2133 = load i64, i64* %2132, align 8
  %2134 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %15, i64 0, i32 0
  store i64 %2133, i64* %2134, align 8
  %2135 = call zeroext i1 @_ZNK2v88internal8compiler4Type11IsSingletonEv(%"class.v8::internal::compiler::Type"* nonnull %15)
  br i1 %2135, label %2137, label %2136, !prof !2

2136:                                             ; preds = %2130
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.72, i64 0, i64 0)) #12
  unreachable

2137:                                             ; preds = %2130
  %2138 = load i32, i32* %38, align 4
  %2139 = and i32 %2138, 251658240
  %2140 = icmp eq i32 %2139, 251658240
  %2141 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %2142 = add i64 %2141, 32
  br i1 %2140, label %2143, label %2147

2143:                                             ; preds = %2137
  %2144 = inttoptr i64 %2142 to i64*
  %2145 = load i64, i64* %2144, align 8
  %2146 = add i64 %2145, 16
  br label %2147

2147:                                             ; preds = %2137, %2143
  %2148 = phi i64 [ %2146, %2143 ], [ %2142, %2137 ]
  %2149 = inttoptr i64 %2148 to %"class.v8::internal::compiler::Node"**
  %2150 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2149, align 8
  %2151 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2150, i64 0, i32 1, i32 0
  %2152 = load i64, i64* %2151, align 8
  %2153 = bitcast %"class.v8::internal::compiler::Type"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2153)
  %2154 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %5, i64 0, i32 0
  store i64 %2152, i64* %2154, align 8
  %2155 = load i64, i64* %2134, align 8
  %2156 = icmp eq i64 %2155, %2152
  br i1 %2156, label %2163, label %2157

2157:                                             ; preds = %2147
  %2158 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %15, i64 %2152) #11
  br i1 %2158, label %2160, label %2159, !prof !5

2159:                                             ; preds = %2157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2153)
  br label %2166

2160:                                             ; preds = %2157
  %2161 = load i64, i64* %2134, align 8
  %2162 = icmp eq i64 %2161, %2152
  br i1 %2162, label %2163, label %2164

2163:                                             ; preds = %2160, %2147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2153)
  br label %2167

2164:                                             ; preds = %2160
  %2165 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %5, i64 %2161) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2153)
  br i1 %2165, label %2167, label %2166, !prof !2

2166:                                             ; preds = %2159, %2164
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.73, i64 0, i64 0)) #12
  unreachable

2167:                                             ; preds = %2163, %2164
  %2168 = load i32, i32* %38, align 4
  %2169 = and i32 %2168, 251658240
  %2170 = icmp eq i32 %2169, 251658240
  br i1 %2170, label %2171, label %2175

2171:                                             ; preds = %2167
  %2172 = inttoptr i64 %2142 to i64*
  %2173 = load i64, i64* %2172, align 8
  %2174 = add i64 %2173, 16
  br label %2175

2175:                                             ; preds = %2167, %2171
  %2176 = phi i64 [ %2174, %2171 ], [ %2142, %2167 ]
  %2177 = inttoptr i64 %2176 to %"class.v8::internal::compiler::Node"**
  %2178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2177, i64 1
  %2179 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2178, align 8
  %2180 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2179, i64 0, i32 1, i32 0
  %2181 = load i64, i64* %2180, align 8
  %2182 = bitcast %"class.v8::internal::compiler::Type"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2182)
  %2183 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %6, i64 0, i32 0
  store i64 %2181, i64* %2183, align 8
  %2184 = load i64, i64* %2134, align 8
  %2185 = icmp eq i64 %2184, %2181
  br i1 %2185, label %2192, label %2186

2186:                                             ; preds = %2175
  %2187 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %15, i64 %2181) #11
  br i1 %2187, label %2189, label %2188, !prof !5

2188:                                             ; preds = %2186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2182)
  br label %2195

2189:                                             ; preds = %2186
  %2190 = load i64, i64* %2134, align 8
  %2191 = icmp eq i64 %2190, %2181
  br i1 %2191, label %2192, label %2193

2192:                                             ; preds = %2189, %2175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2182)
  br label %2196

2193:                                             ; preds = %2189
  %2194 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %6, i64 %2190) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2182)
  br i1 %2194, label %2196, label %2195, !prof !2

2195:                                             ; preds = %2188, %2193
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.74, i64 0, i64 0)) #12
  unreachable

2196:                                             ; preds = %2192, %2193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2131) #11
  br label %2210

2197:                                             ; preds = %444
  %2198 = icmp eq i32 %19, 0
  br i1 %2198, label %2200, label %2199, !prof !2

2199:                                             ; preds = %2197
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0)) #12
  unreachable

2200:                                             ; preds = %2197
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 7263)
  br label %2210

2201:                                             ; preds = %444
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 134217729)
  br label %2210

2202:                                             ; preds = %444
  %2203 = icmp sgt i32 %19, 1
  br i1 %2203, label %2205, label %2204, !prof !2

2204:                                             ; preds = %2202
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i64 0, i64 0)) #12
  unreachable

2205:                                             ; preds = %2202
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 33554433)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 1, i64 4294967295)
  br label %2210

2206:                                             ; preds = %444
  %2207 = icmp sgt i32 %19, 2
  br i1 %2207, label %2209, label %2208, !prof !2

2208:                                             ; preds = %2206
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0)) #12
  unreachable

2209:                                             ; preds = %2206
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i64 4294967295)
  tail call void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"* %0, %"class.v8::internal::compiler::Node"* %1, i32 0, i64 4294967295)
  br label %2210

2210:                                             ; preds = %1007, %715, %653, %1830, %1843, %1854, %1866, %1877, %1889, %2064, %1771, %2100, %1773, %1783, %1621, %2101, %1622, %1578, %1535, %1492, %1390, %1455, %1335, %2126, %2196, %1591, %444, %2209, %2205, %2201, %2200, %2124, %2123, %2122, %2121, %2120, %2119, %2118, %2117, %2116, %2115, %2114, %2113, %2109, %2108, %2107, %2106, %2105, %2104, %2063, %2062, %2061, %2060, %2059, %2058, %2057, %2056, %2055, %2054, %2053, %2052, %2051, %2050, %2049, %2042, %2041, %2040, %2039, %2038, %2037, %2036, %2035, %2031, %2027, %2023, %2019, %2015, %2011, %2010, %2009, %2008, %2007, %2006, %2005, %2004, %2003, %2002, %2001, %2000, %1999, %1992, %1991, %1987, %1980, %1979, %1978, %1977, %1973, %1969, %1968, %1967, %1963, %1962, %1961, %1960, %1959, %1958, %1957, %1956, %1955, %1954, %1953, %1952, %1951, %1950, %1949, %1948, %1947, %1946, %1945, %1944, %1943, %1942, %1941, %1940, %1939, %1938, %1937, %1936, %1935, %1934, %1933, %1932, %1931, %1930, %1929, %1928, %1927, %1926, %1925, %1924, %1923, %1922, %1921, %1920, %1919, %1915, %1914, %1913, %1912, %1911, %1910, %1906, %1905, %1904, %1903, %1902, %1901, %1900, %1899, %1898, %1897, %1896, %1895, %1894, %1882, %1859, %1836, %1835, %1823, %1822, %1821, %1820, %1819, %1818, %1817, %1816, %1815, %1814, %1813, %1812, %1811, %1810, %1809, %1808, %1807, %1806, %1805, %1804, %1803, %1802, %1801, %1800, %1799, %1798, %1794, %1793, %1792, %1791, %1790, %1789, %1590, %1288, %1278, %1249, %1242, %1238, %1234, %1230, %1226, %1189, %1081, %1024, %1023, %1022, %957, %916, %915, %873, %831, %790, %652, %639, %483
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler8Verifier7Visitor11CheckOutputEPNS1_4NodeES5_iPKc(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::basic_ostringstream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp slt i32 %3, 1
  br i1 %8, label %9, label %70

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %19 = inttoptr i64 %15 to i8*
  %20 = getelementptr i8, i8* %19, i64 -24
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %10, i64 %22
  %24 = bitcast i8* %23 to i64*
  store i64 %17, i64* %24, align 8
  %25 = load i8*, i8** %18, align 8
  %26 = getelementptr i8, i8* %25, i64 -24
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds i8, i8* %10, i64 %28
  %30 = bitcast i8* %29 to %"class.std::__1::ios_base"*
  %31 = bitcast %"class.std::__1::basic_stringbuf"* %13 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %30, i8* %31) #11
  %32 = getelementptr inbounds i8, i8* %29, i64 136
  %33 = bitcast i8* %32 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %29, i64 144
  %35 = bitcast i8* %34 to i32*
  store i32 -1, i32* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %14) #11
  %36 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %13, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %38, align 8
  %40 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %40, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i64 0, i64 0), i64 18) #11
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 16777215
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %41, i32 %44) #11
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %45, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %47 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %48 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %47, align 8
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %46, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %48) #11
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %49, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.109, i64 0, i64 0), i64 18) #11
  %51 = call i64 @strlen(i8* %4) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* %4, i64 %51) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.110, i64 0, i64 0), i64 22) #11
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 16777215
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %53, i32 %56) #11
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %57, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %60 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %59, align 8
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %60) #11
  %62 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %13) #11
  %63 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = select i1 %66, i8* %68, i8* %62
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8* %69) #12
  unreachable

70:                                               ; preds = %5
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler8Verifier7Visitor11CheckTypeIsEPNS1_4NodeENS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::internal::compiler::Type", align 8
  %5 = alloca %"class.std::__1::basic_ostringstream", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = bitcast %"class.v8::internal::compiler::Type"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  br i1 %9, label %11, label %72

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 1, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %4, i64 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = icmp eq i64 %13, %2
  br i1 %15, label %72, label %16

16:                                               ; preds = %11
  %17 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %4, i64 %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br i1 %17, label %73, label %18

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0
  %24 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %5 to i8**
  %28 = inttoptr i64 %24 to i8*
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %19, i64 %31
  %33 = bitcast i8* %32 to i64*
  store i64 %26, i64* %33, align 8
  %34 = load i8*, i8** %27, align 8
  %35 = getelementptr i8, i8* %34, i64 -24
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %19, i64 %37
  %39 = bitcast i8* %38 to %"class.std::__1::ios_base"*
  %40 = bitcast %"class.std::__1::basic_stringbuf"* %22 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %39, i8* %40) #11
  %41 = getelementptr inbounds i8, i8* %38, i64 136
  %42 = bitcast i8* %41 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 144
  %44 = bitcast i8* %43 to i32*
  store i32 -1, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %23) #11
  %45 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %5, i64 0, i32 1, i32 3
  %48 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %47, align 8
  %49 = bitcast %"class.std::__1::basic_ostringstream"* %5 to %"class.std::__1::basic_ostream"*
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %49, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i64 0, i64 0), i64 17) #11
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 16777215
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %50, i32 %53) #11
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %57 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %56, align 8
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %55, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %57) #11
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), i64 6) #11
  %60 = load i64, i64* %12, align 8
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %59, i64 %60) #11
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i64 8) #11
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %62, i64 %2) #11
  %64 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_stringbuf"* %22) #11
  %65 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = select i1 %68, i8* %70, i8* %64
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8* %71) #12
  unreachable

72:                                               ; preds = %3, %11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %73

73:                                               ; preds = %72, %16
  ret void
}

declare i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler8Verifier7Visitor17CheckValueInputIsEPNS1_4NodeEiNS1_4TypeE(%"class.v8::internal::compiler::Verifier::Visitor"*, %"class.v8::internal::compiler::Node"*, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::compiler::Type", align 8
  %6 = alloca %"class.std::__1::basic_ostringstream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp sgt i32 %2, -1
  br i1 %8, label %10, label %9, !prof !2

9:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i64 0, i64 0)) #12
  unreachable

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %12 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %12, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %2
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.107, i64 0, i64 0)) #12
  unreachable

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 251658240
  %21 = icmp eq i32 %20, 251658240
  %22 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %23 = add i64 %22, 32
  br i1 %21, label %24, label %28

24:                                               ; preds = %17
  %25 = inttoptr i64 %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 16
  br label %28

28:                                               ; preds = %17, %24
  %29 = phi i64 [ %27, %24 ], [ %23, %17 ]
  %30 = inttoptr i64 %29 to %"class.v8::internal::compiler::Node"**
  %31 = sext i32 %2 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %30, i64 %31
  %33 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.v8::internal::compiler::Type"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  br i1 %36, label %38, label %112

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 1, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %5, i64 0, i32 0
  store i64 %40, i64* %41, align 8
  %42 = icmp eq i64 %40, %3
  br i1 %42, label %112, label %43

43:                                               ; preds = %38
  %44 = call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* nonnull %5, i64 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br i1 %44, label %113, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 2, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1
  %50 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %49, i64 0, i32 0
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %52 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i64*
  store i64 %51, i64* %52, align 8
  %53 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %54 = bitcast %"class.std::__1::basic_ostringstream"* %6 to i8**
  %55 = inttoptr i64 %51 to i8*
  %56 = getelementptr i8, i8* %55, i64 -24
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds i8, i8* %46, i64 %58
  %60 = bitcast i8* %59 to i64*
  store i64 %53, i64* %60, align 8
  %61 = load i8*, i8** %54, align 8
  %62 = getelementptr i8, i8* %61, i64 -24
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds i8, i8* %46, i64 %64
  %66 = bitcast i8* %65 to %"class.std::__1::ios_base"*
  %67 = bitcast %"class.std::__1::basic_stringbuf"* %49 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %66, i8* %67) #11
  %68 = getelementptr inbounds i8, i8* %65, i64 136
  %69 = bitcast i8* %68 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %69, align 8
  %70 = getelementptr inbounds i8, i8* %65, i64 144
  %71 = bitcast i8* %70 to i32*
  store i32 -1, i32* %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %48, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %47, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %50) #11
  %72 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %49, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 1
  %74 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %6, i64 0, i32 1, i32 3
  %75 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 32, i1 false) #11
  store i32 16, i32* %74, align 8
  %76 = bitcast %"class.std::__1::basic_ostringstream"* %6 to %"class.std::__1::basic_ostream"*
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %76, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.100, i64 0, i64 0), i64 17) #11
  %78 = load i32, i32* %18, align 4
  %79 = and i32 %78, 16777215
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %77, i32 %79) #11
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %80, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %82 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %11, align 8
  %83 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160) %81, %"class.v8::internal::compiler::Operator"* dereferenceable(48) %82) #11
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %83, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i64 0, i64 0), i64 8) #11
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %84, i32 %2) #11
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %85, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.117, i64 0, i64 0), i64 3) #11
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 0
  %88 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %88, i64 0, i32 2
  %90 = load i16, i16* %89, align 8
  %91 = zext i16 %90 to i32
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_8IrOpcode5ValueE(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i32 %91) #11
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0), i64 1) #11
  %94 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %87, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %94, i64 0, i32 1
  %96 = load i8*, i8** %95, align 8
  %97 = call i64 @strlen(i8* %96) #11
  %98 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %93, i8* %96, i64 %97) #11
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %98, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i64 0, i64 0), i64 7) #11
  %100 = load i64, i64* %39, align 8
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %99, i64 %100) #11
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %101, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.115, i64 0, i64 0), i64 8) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160) %102, i64 %3) #11
  %104 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.std::__1::basic_stringbuf"* %49) #11
  %105 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  %111 = select i1 %108, i8* %110, i8* %104
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8* %111) #12
  unreachable

112:                                              ; preds = %28, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  br label %113

113:                                              ; preds = %112, %43
  ret void
}

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties11IsValueEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #3

declare i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal8compiler17StateValuesAccess4sizeEv(%"class.v8::internal::compiler::StateValuesAccess"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal8compiler4Type5RangeEddPNS0_4ZoneE(double, double, %"class.v8::internal::Zone"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.v8::internal::compiler::PropertyAccess"* @_ZN2v88internal8compiler16PropertyAccessOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare dereferenceable(32) %"class.v8::internal::compiler::LoadGlobalParameters"* @_ZN2v88internal8compiler22LoadGlobalParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare dereferenceable(32) %"class.v8::internal::compiler::StoreGlobalParameters"* @_ZN2v88internal8compiler23StoreGlobalParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare dereferenceable(24) %"class.v8::internal::compiler::StoreNamedOwnParameters"* @_ZN2v88internal8compiler25StoreNamedOwnParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare dereferenceable(16) %"class.v8::internal::compiler::FeedbackParameter"* @_ZN2v88internal8compiler19FeedbackParameterOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal8compiler4Type5UnionES2_S2_PNS0_4ZoneE(i64, i64, %"class.v8::internal::Zone"*) local_unnamed_addr #3

declare %"class.v8::internal::compiler::TypeCache"* @_ZN2v88internal8compiler9TypeCache3GetEv() local_unnamed_addr #3

declare i64 @_ZN2v88internal8compiler15TypeGuardTypeOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal8compiler4Type11IsSingletonEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::Type", %"class.v8::internal::compiler::Type"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 1, label %44
    i64 129, label %43
  ]

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 129) #11
  br i1 %5, label %44, label %6

6:                                                ; preds = %4
  %7 = load i64, i64* %2, align 8
  %8 = icmp eq i64 %7, 257
  br i1 %8, label %44, label %9

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 257) #11
  br i1 %10, label %44, label %11

11:                                               ; preds = %9
  %12 = load i64, i64* %2, align 8
  %13 = icmp eq i64 %12, 2049
  br i1 %13, label %44, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 2049) #11
  br i1 %15, label %44, label %16

16:                                               ; preds = %14
  %17 = load i64, i64* %2, align 8
  %18 = icmp eq i64 %17, 4097
  br i1 %18, label %44, label %19

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 4097) #11
  br i1 %20, label %44, label %21

21:                                               ; preds = %19
  %22 = load i64, i64* %2, align 8
  %23 = icmp eq i64 %22, 8388609
  br i1 %23, label %44, label %24

24:                                               ; preds = %21
  %25 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 8388609) #11
  br i1 %25, label %44, label %26

26:                                               ; preds = %24
  %27 = load i64, i64* %2, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = inttoptr i64 %27 to %"class.v8::internal::compiler::TypeBase"*
  %32 = getelementptr inbounds %"class.v8::internal::compiler::TypeBase", %"class.v8::internal::compiler::TypeBase"* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %26, %30
  %36 = icmp eq i64 %27, 1119
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = tail call zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"* %0, i64 1119) #11
  br i1 %38, label %39, label %44

39:                                               ; preds = %35, %37
  %40 = tail call double @_ZNK2v88internal8compiler4Type3MinEv(%"class.v8::internal::compiler::Type"* %0) #11
  %41 = tail call double @_ZNK2v88internal8compiler4Type3MaxEv(%"class.v8::internal::compiler::Type"* %0) #11
  %42 = fcmp oeq double %40, %41
  br label %44

43:                                               ; preds = %1
  br label %44

44:                                               ; preds = %1, %43, %21, %16, %11, %6, %4, %9, %14, %19, %24, %30, %39, %37
  %45 = phi i1 [ false, %1 ], [ true, %30 ], [ true, %24 ], [ true, %19 ], [ true, %14 ], [ true, %9 ], [ true, %4 ], [ false, %37 ], [ %42, %39 ], [ true, %6 ], [ true, %11 ], [ true, %16 ], [ true, %21 ], [ true, %43 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler8Verifier3RunEPNS1_5GraphENS2_6TypingENS2_11CheckInputsENS2_8CodeTypeE(%"class.v8::internal::compiler::Graph"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::Zone", align 8
  %6 = alloca %"class.v8::internal::compiler::Verifier::Visitor", align 8
  %7 = alloca %"class.v8::internal::compiler::AllNodes", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 1
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::Node"* %9, null
  br i1 %10, label %11, label %12, !prof !6

11:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 2
  %14 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %13, align 8
  %15 = icmp eq %"class.v8::internal::compiler::Node"* %14, null
  br i1 %15, label %16, label %17, !prof !6

16:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.78, i64 0, i64 0)) #12
  unreachable

17:                                               ; preds = %12
  %18 = bitcast %"class.v8::internal::Zone"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %0, i64 0, i32 0
  %20 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %20, i64 0, i32 4
  %22 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %21, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %5, %"class.v8::internal::AccountingAllocator"* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__func__._ZN2v88internal8compiler8Verifier3RunEPNS1_5GraphENS2_6TypingENS2_11CheckInputsENS2_8CodeTypeE, i64 0, i64 0), i1 zeroext false) #11
  %23 = bitcast %"class.v8::internal::compiler::Verifier::Visitor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %6, i64 0, i32 0
  store %"class.v8::internal::Zone"* %5, %"class.v8::internal::Zone"** %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %6, i64 0, i32 1
  store i32 %1, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %6, i64 0, i32 2
  store i32 %2, i32* %26, align 4
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Verifier::Visitor", %"class.v8::internal::compiler::Verifier::Visitor"* %6, i64 0, i32 3
  store i32 %3, i32* %27, align 8
  %28 = bitcast %"class.v8::internal::compiler::AllNodes"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %28) #11
  call void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"* nonnull %7, %"class.v8::internal::Zone"* nonnull %5, %"class.v8::internal::compiler::Graph"* %0, i1 zeroext true) #11
  %29 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, align 8
  %33 = icmp eq %"class.v8::internal::compiler::Node"** %30, %32
  br i1 %33, label %49, label %42

34:                                               ; preds = %42
  %35 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %29, align 8
  %36 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %31, align 8
  %37 = icmp eq %"class.v8::internal::compiler::Node"** %35, %36
  br i1 %37, label %49, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %7, i64 0, i32 2
  %40 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %7, i64 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %7, i64 0, i32 1, i32 0, i32 0
  br label %56

42:                                               ; preds = %17, %42
  %43 = phi %"class.v8::internal::compiler::Node"** [ %45, %42 ], [ %30, %17 ]
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  call void @_ZN2v88internal8compiler8Verifier7Visitor5CheckEPNS1_4NodeERKNS1_8AllNodesE(%"class.v8::internal::compiler::Verifier::Visitor"* nonnull %6, %"class.v8::internal::compiler::Node"* %44, %"class.v8::internal::compiler::AllNodes"* nonnull dereferenceable(72) %7)
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, i64 1
  %46 = icmp eq %"class.v8::internal::compiler::Node"** %45, %32
  br i1 %46, label %34, label %42

47:                                               ; preds = %167
  %48 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %29, align 8
  br label %49

49:                                               ; preds = %17, %47, %34
  %50 = phi %"class.v8::internal::compiler::Node"** [ %48, %47 ], [ %36, %34 ], [ %30, %17 ]
  %51 = icmp eq %"class.v8::internal::compiler::Node"** %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = ptrtoint %"class.v8::internal::compiler::Node"** %50 to i64
  %54 = bitcast %"class.v8::internal::compiler::Node"*** %31 to i64*
  store i64 %53, i64* %54, align 8
  br label %55

55:                                               ; preds = %49, %52
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #11
  ret void

56:                                               ; preds = %38, %167
  %57 = phi %"class.v8::internal::compiler::Node"** [ %35, %38 ], [ %168, %167 ]
  %58 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 0
  %60 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %60, i64 0, i32 2
  %62 = load i16, i16* %61, align 8
  %63 = icmp eq i16 %62, 55
  br i1 %63, label %64, label %167

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 251658240
  %68 = icmp eq i32 %67, 251658240
  %69 = ptrtoint %"class.v8::internal::compiler::Node"* %58 to i64
  %70 = add i64 %69, 32
  br i1 %68, label %71, label %75

71:                                               ; preds = %64
  %72 = inttoptr i64 %70 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 16
  br label %75

75:                                               ; preds = %64, %71
  %76 = phi i64 [ %74, %71 ], [ %70, %64 ]
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::Node"**
  %78 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %78, i64 0, i32 4
  %80 = bitcast %"struct.v8::internal::compiler::Node::Use"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %167, label %83

83:                                               ; preds = %75, %163
  %84 = phi i64 [ %165, %163 ], [ %81, %75 ]
  %85 = inttoptr i64 %84 to %"struct.v8::internal::compiler::Node::Use"*
  %86 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %85, i64 1
  %87 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %85, i64 0, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = lshr i32 %88, 1
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %86, i64 %90
  %92 = and i32 %88, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %83
  %95 = bitcast %"struct.v8::internal::compiler::Node::Use"* %91 to %"class.v8::internal::compiler::Node"*
  br label %99

96:                                               ; preds = %83
  %97 = bitcast %"struct.v8::internal::compiler::Node::Use"* %91 to %"class.v8::internal::compiler::Node"**
  %98 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %97, align 8
  br label %99

99:                                               ; preds = %94, %96
  %100 = phi %"class.v8::internal::compiler::Node"* [ %95, %94 ], [ %98, %96 ]
  %101 = load i8, i8* %39, align 8, !range !3
  %102 = icmp eq i8 %101, 1
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i64 0, i64 0)) #12
  unreachable

104:                                              ; preds = %99
  %105 = icmp eq %"class.v8::internal::compiler::Node"* %100, null
  br i1 %105, label %163, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %100, i64 0, i32 3
  %108 = load i32, i32* %107, align 4
  %109 = and i32 %108, 16777215
  %110 = zext i32 %109 to i64
  %111 = load i64, i64* %40, align 8
  %112 = icmp ugt i64 %111, %110
  br i1 %112, label %113, label %163

113:                                              ; preds = %106
  %114 = load i64*, i64** %41, align 8
  %115 = lshr i64 %110, 6
  %116 = getelementptr inbounds i64, i64* %114, i64 %115
  %117 = and i64 %110, 63
  %118 = shl i64 1, %117
  %119 = load i64, i64* %116, align 8
  %120 = and i64 %119, %118
  %121 = icmp eq i64 %120, 0
  %122 = icmp eq %"class.v8::internal::compiler::Node"* %100, %58
  %123 = or i1 %122, %121
  br i1 %123, label %163, label %124

124:                                              ; preds = %113
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %100, i64 0, i32 0
  %126 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %126, i64 0, i32 2
  %128 = load i16, i16* %127, align 8
  %129 = icmp eq i16 %128, 55
  br i1 %129, label %130, label %163

130:                                              ; preds = %124
  %131 = and i32 %108, 251658240
  %132 = icmp eq i32 %131, 251658240
  %133 = ptrtoint %"class.v8::internal::compiler::Node"* %100 to i64
  %134 = add i64 %133, 32
  br i1 %132, label %135, label %139

135:                                              ; preds = %130
  %136 = inttoptr i64 %134 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, 16
  br label %139

139:                                              ; preds = %130, %135
  %140 = phi i64 [ %138, %135 ], [ %134, %130 ]
  %141 = inttoptr i64 %140 to %"class.v8::internal::compiler::Node"**
  %142 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %141, align 8
  %143 = icmp eq %"class.v8::internal::compiler::Node"* %142, %78
  br i1 %143, label %144, label %163

144:                                              ; preds = %139
  %145 = call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %126) #11
  %146 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %59, align 8
  %147 = call i64 @_ZN2v88internal8compiler17ProjectionIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %146) #11
  %148 = icmp eq i64 %145, %147
  br i1 %148, label %149, label %163

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %58, i64 0, i32 3
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %100, i64 0, i32 3
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %78, i64 0, i32 3
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, 16777215
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %78, i64 0, i32 0
  %156 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %156, i64 0, i32 1
  %158 = load i8*, i8** %157, align 8
  %159 = load i32, i32* %150, align 4
  %160 = and i32 %159, 16777215
  %161 = load i32, i32* %151, align 4
  %162 = and i32 %161, 16777215
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.79, i64 0, i64 0), i32 %154, i8* %158, i32 %160, i32 %162) #12
  unreachable

163:                                              ; preds = %106, %104, %113, %144, %139, %124
  %164 = inttoptr i64 %84 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %83

167:                                              ; preds = %163, %75, %56
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 1
  %169 = icmp eq %"class.v8::internal::compiler::Node"** %168, %36
  br i1 %169, label %47, label %56
}

declare void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"*, %"class.v8::internal::AccountingAllocator"*, i8*, i1 zeroext) unnamed_addr #3

declare void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Graph"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler16ScheduleVerifier3RunEPNS1_8ScheduleE(%"class.v8::internal::compiler::Schedule"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.v8::internal::ZoneAllocator.77", align 8
  %4 = alloca %"class.v8::internal::ZoneDeque", align 8
  %5 = alloca %"class.v8::internal::ZoneDeque", align 8
  %6 = alloca %"class.v8::internal::Zone", align 8
  %7 = alloca %"class.v8::internal::Zone"*, align 8
  %8 = alloca %"class.v8::internal::ZoneVector.11", align 8
  %9 = alloca %"class.v8::internal::ZoneQueue", align 8
  %10 = alloca %"class.v8::internal::ZoneVector.57", align 8
  %11 = alloca %"class.v8::internal::BitVector"*, align 8
  %12 = alloca %"class.v8::internal::ZoneQueue", align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.43"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = ashr exact i64 %21, 3
  %23 = bitcast %"class.v8::internal::Zone"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 0
  %25 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %25, i64 0, i32 4
  %27 = load %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::AccountingAllocator"** %26, align 8
  call void @_ZN2v88internal4ZoneC1EPNS0_19AccountingAllocatorEPKcb(%"class.v8::internal::Zone"* nonnull %6, %"class.v8::internal::AccountingAllocator"* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__func__._ZN2v88internal8compiler8Verifier3RunEPNS1_5GraphENS2_6TypingENS2_11CheckInputsENS2_8CodeTypeE, i64 0, i64 0), i1 zeroext false) #11
  %28 = bitcast %"class.v8::internal::Zone"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store %"class.v8::internal::Zone"* %6, %"class.v8::internal::Zone"** %7, align 8
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 4
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %29, align 8
  %31 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %30 to i64
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 3, i32 0
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Schedule", %"class.v8::internal::compiler::Schedule"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %34 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.43"* %32 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %35, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %22, %39
  %41 = inttoptr i64 %37 to %"class.v8::internal::compiler::BasicBlock"**
  br i1 %40, label %42, label %43, !prof !6

42:                                               ; preds = %1
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.80, i64 0, i64 0)) #12
  unreachable

43:                                               ; preds = %1
  %44 = inttoptr i64 %35 to %"class.v8::internal::compiler::BasicBlock"**
  %45 = getelementptr inbounds %"class.std::__1::vector.43", %"class.std::__1::vector.43"* %32, i64 0, i32 0, i32 0
  %46 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %41, %44
  br i1 %46, label %50, label %66

47:                                               ; preds = %108
  %48 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %110 to i64
  %49 = load i64, i64* %36, align 8
  br label %50

50:                                               ; preds = %47, %43
  %51 = phi i64 [ %49, %47 ], [ %37, %43 ]
  %52 = phi i64 [ %48, %47 ], [ %35, %43 ]
  %53 = sub i64 %52, %51
  %54 = ashr exact i64 %53, 3
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %50
  %57 = bitcast %"class.std::__1::vector.43"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %57) #12
  unreachable

58:                                               ; preds = %50
  %59 = inttoptr i64 %51 to %"class.v8::internal::compiler::BasicBlock"**
  %60 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, align 8
  %61 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %30, %60
  br i1 %61, label %62, label %126, !prof !2

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %218, label %217, !prof !2

66:                                               ; preds = %43, %108
  %67 = phi %"class.v8::internal::compiler::BasicBlock"** [ %109, %108 ], [ %41, %43 ]
  %68 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 14, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %70) #11
  %72 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %68, %71
  br i1 %72, label %74, label %73, !prof !2

73:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.81, i64 0, i64 0)) #12
  unreachable

74:                                               ; preds = %66
  %75 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %75, i64 0, i32 13, i32 0, i32 0, i32 0
  %77 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %75, i64 0, i32 13, i32 0, i32 0, i32 1
  %79 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %77, %79
  br i1 %80, label %85, label %92

81:                                               ; preds = %99
  %82 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %104, %79
  br i1 %82, label %83, label %92

83:                                               ; preds = %81
  %84 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  br label %85

85:                                               ; preds = %83, %74
  %86 = phi %"class.v8::internal::compiler::BasicBlock"* [ %84, %83 ], [ %75, %74 ]
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %86, i64 0, i32 12, i32 0, i32 0, i32 0
  %88 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %86, i64 0, i32 12, i32 0, i32 0, i32 1
  %90 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %89, align 8
  %91 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %88, %90
  br i1 %91, label %108, label %112

92:                                               ; preds = %74, %81
  %93 = phi %"class.v8::internal::compiler::BasicBlock"** [ %104, %81 ], [ %77, %74 ]
  %94 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, align 8
  %95 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %94, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, -1
  br i1 %97, label %99, label %98, !prof !2

98:                                               ; preds = %92
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.82, i64 0, i64 0)) #12
  unreachable

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %94, i64 0, i32 14, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %101) #11
  %103 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %94, %102
  %104 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %93, i64 1
  br i1 %103, label %81, label %105, !prof !2

105:                                              ; preds = %99
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.83, i64 0, i64 0)) #12
  unreachable

106:                                              ; preds = %119
  %107 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %124, %90
  br i1 %107, label %108, label %112

108:                                              ; preds = %106, %85
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, i64 1
  %110 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  %111 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %109, %110
  br i1 %111, label %47, label %66

112:                                              ; preds = %85, %106
  %113 = phi %"class.v8::internal::compiler::BasicBlock"** [ %124, %106 ], [ %88, %85 ]
  %114 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %114, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, -1
  br i1 %117, label %119, label %118, !prof !2

118:                                              ; preds = %112
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.84, i64 0, i64 0)) #12
  unreachable

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %114, i64 0, i32 14, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %121) #11
  %123 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %114, %122
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %113, i64 1
  br i1 %123, label %106, label %125, !prof !2

125:                                              ; preds = %119
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.85, i64 0, i64 0)) #12
  unreachable

126:                                              ; preds = %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.86, i64 0, i64 0)) #12
  unreachable

127:                                              ; preds = %235
  %128 = bitcast %"class.v8::internal::ZoneVector.11"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %128) #11
  %129 = trunc i64 %22 to i32
  %130 = shl i64 %21, 29
  %131 = ashr exact i64 %130, 32
  %132 = bitcast %"class.v8::internal::Zone"** %7 to i64*
  %133 = load i64, i64* %132, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2)
  store i8 0, i8* %2, align 1
  %134 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %8, i64 0, i32 0
  %135 = bitcast %"class.v8::internal::ZoneAllocator.77"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #11
  %136 = bitcast %"class.v8::internal::ZoneAllocator.77"* %3 to i64*
  store i64 %133, i64* %136, align 8
  call void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.12"* nonnull %134, i64 %131, i8* nonnull dereferenceable(1) %2, %"class.v8::internal::ZoneAllocator.77"* nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2)
  %137 = bitcast %"class.v8::internal::ZoneQueue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %137) #11
  %138 = load i64, i64* %132, align 8
  %139 = bitcast %"class.v8::internal::ZoneDeque"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %139) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 32, i1 false) #11
  %140 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %141 = bitcast %"struct.std::__1::__compressed_pair_elem.52"* %140 to i64*
  store i64 %138, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %143 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #11
  %144 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1
  %145 = bitcast %"struct.std::__1::__compressed_pair_elem.55"* %144 to i64*
  store i64 %138, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %148 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 0, i32 3
  %149 = bitcast %"class.std::__1::__compressed_pair.50"* %147 to i8*
  %150 = bitcast %"class.std::__1::__compressed_pair.50"* %148 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 24, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 0, i64 32, i1 false) #11
  %151 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %154 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0, i32 2
  %155 = bitcast %"class.std::__1::__compressed_pair.54"* %153 to i8*
  %156 = bitcast %"class.std::__1::__compressed_pair.54"* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 24, i1 false) #11
  %157 = bitcast i64* %152 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 16, i1 false) #11
  %158 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %4, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %158) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %139) #11
  %159 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %163 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = sub i64 %161, %164
  %166 = icmp eq i64 %165, 0
  %167 = shl i64 %165, 6
  %168 = add i64 %167, -1
  %169 = select i1 %166, i64 0, i64 %168
  %170 = load i64, i64* %151, align 8
  %171 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, %170
  %174 = icmp eq i64 %169, %173
  %175 = inttoptr i64 %164 to %"class.v8::internal::compiler::BasicBlock"***
  %176 = inttoptr i64 %161 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %174, label %177, label %184

177:                                              ; preds = %127
  %178 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %178) #11
  %179 = load i64, i64* %171, align 8
  %180 = load i64, i64* %151, align 8
  %181 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %162, align 8
  %182 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %159, align 8
  %183 = add i64 %180, %179
  br label %184

184:                                              ; preds = %177, %127
  %185 = phi i64 [ %183, %177 ], [ %173, %127 ]
  %186 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %182, %177 ], [ %176, %127 ]
  %187 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %181, %177 ], [ %175, %127 ]
  %188 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %186, %187
  br i1 %188, label %196, label %189

189:                                              ; preds = %184
  %190 = lshr i64 %185, 9
  %191 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %187, i64 %190
  %192 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %191, align 8
  %193 = and i64 %185, 511
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %192, i64 %193
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"** %194 to i64*
  br label %196

196:                                              ; preds = %184, %189
  %197 = phi i64* [ %195, %189 ], [ null, %184 ]
  store i64 %31, i64* %197, align 8
  %198 = load i64, i64* %171, align 8
  %199 = add i64 %198, 1
  store i64 %199, i64* %171, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 14, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = getelementptr inbounds %"class.v8::internal::ZoneVector.11", %"class.v8::internal::ZoneVector.11"* %8, i64 0, i32 0, i32 0
  %203 = load i64*, i64** %202, align 8
  %204 = lshr i64 %201, 6
  %205 = getelementptr inbounds i64, i64* %203, i64 %204
  %206 = and i64 %201, 63
  %207 = shl i64 1, %206
  %208 = load i64, i64* %205, align 8
  %209 = or i64 %208, %207
  store i64 %209, i64* %205, align 8
  %210 = load i64, i64* %171, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %353, label %212

212:                                              ; preds = %196
  %213 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %214 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %213 to i64*
  %215 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %213 to %"class.v8::internal::compiler::BasicBlock"***
  %216 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0
  br label %248

217:                                              ; preds = %238, %62
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.87, i64 0, i64 0)) #12
  unreachable

218:                                              ; preds = %62, %238
  %219 = phi i32 [ %241, %238 ], [ 0, %62 ]
  %220 = phi i64 [ %236, %238 ], [ 0, %62 ]
  %221 = phi %"class.v8::internal::compiler::BasicBlock"* [ %240, %238 ], [ %30, %62 ]
  %222 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %221, i64 0, i32 4
  %223 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %222, align 8
  %224 = icmp eq i64 %220, 0
  %225 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %223, null
  br i1 %224, label %226, label %228

226:                                              ; preds = %218
  br i1 %225, label %235, label %227, !prof !2

227:                                              ; preds = %226
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i64 0, i64 0)) #12
  unreachable

228:                                              ; preds = %218
  br i1 %225, label %229, label %230, !prof !6

229:                                              ; preds = %228
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0)) #12
  unreachable

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %223, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp slt i32 %232, %219
  br i1 %233, label %235, label %234, !prof !2

234:                                              ; preds = %230
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.90, i64 0, i64 0)) #12
  unreachable

235:                                              ; preds = %230, %226
  %236 = add nuw i64 %220, 1
  %237 = icmp ult i64 %236, %54
  br i1 %237, label %238, label %127

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %59, i64 %236
  %240 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %239, align 8
  %241 = trunc i64 %236 to i32
  %242 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %240, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %243, %241
  br i1 %244, label %218, label %217, !prof !2

245:                                              ; preds = %346, %281
  %246 = load i64, i64* %171, align 8
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %353, label %248

248:                                              ; preds = %212, %245
  %249 = phi i64 [ %210, %212 ], [ %246, %245 ]
  %250 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %162, align 8
  %251 = load i64, i64* %151, align 8
  %252 = lshr i64 %251, 9
  %253 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %250, i64 %252
  %254 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %253, align 8
  %255 = and i64 %251, 511
  %256 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %254, i64 %255
  %257 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %256, align 8
  %258 = add i64 %249, -1
  store i64 %258, i64* %171, align 8
  %259 = add i64 %251, 1
  store i64 %259, i64* %151, align 8
  %260 = icmp ult i64 %259, 1024
  br i1 %260, label %281, label %261

261:                                              ; preds = %248
  %262 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %250, align 8
  %263 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %213, align 8
  %264 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %263, null
  br i1 %264, label %269, label %265

265:                                              ; preds = %261
  %266 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %263, i64 0, i32 1
  %267 = load i64, i64* %266, align 8
  %268 = icmp ugt i64 %267, 512
  br i1 %268, label %276, label %269

269:                                              ; preds = %265, %261
  %270 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %262, i64 1
  %271 = bitcast %"class.v8::internal::compiler::BasicBlock"** %270 to i64*
  store i64 512, i64* %271, align 8
  %272 = load i64, i64* %214, align 8
  %273 = bitcast %"class.v8::internal::compiler::BasicBlock"** %262 to i64*
  store i64 %272, i64* %273, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %262, %"class.v8::internal::compiler::BasicBlock"*** %215, align 8
  %274 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %162, align 8
  %275 = load i64, i64* %151, align 8
  br label %276

276:                                              ; preds = %269, %265
  %277 = phi i64 [ %259, %265 ], [ %275, %269 ]
  %278 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %250, %265 ], [ %274, %269 ]
  %279 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %278, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %279, %"class.v8::internal::compiler::BasicBlock"**** %162, align 8
  %280 = add i64 %277, -512
  store i64 %280, i64* %151, align 8
  br label %281

281:                                              ; preds = %248, %276
  %282 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %257, i64 0, i32 12, i32 0
  %283 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %257, i64 0, i32 12, i32 0, i32 0, i32 1
  %284 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.std::__1::vector.43"* %282 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = icmp eq i64 %285, %287
  br i1 %288, label %245, label %289

289:                                              ; preds = %281, %346
  %290 = phi i64 [ %347, %346 ], [ %287, %281 ]
  %291 = phi i64 [ %348, %346 ], [ %285, %281 ]
  %292 = phi i64 [ %349, %346 ], [ 0, %281 ]
  %293 = inttoptr i64 %290 to %"class.v8::internal::compiler::BasicBlock"**
  %294 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %293, i64 %292
  %295 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %294, align 8
  %296 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %295 to i64
  %297 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %295, i64 0, i32 14, i32 0
  %298 = load i64, i64* %297, align 8
  %299 = load i64*, i64** %202, align 8
  %300 = lshr i64 %298, 6
  %301 = getelementptr inbounds i64, i64* %299, i64 %300
  %302 = and i64 %298, 63
  %303 = shl i64 1, %302
  %304 = load i64, i64* %301, align 8
  %305 = and i64 %303, %304
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %346

307:                                              ; preds = %289
  %308 = or i64 %304, %303
  store i64 %308, i64* %301, align 8
  %309 = load i64, i64* %160, align 8
  %310 = load i64, i64* %163, align 8
  %311 = sub i64 %309, %310
  %312 = icmp eq i64 %311, 0
  %313 = shl i64 %311, 6
  %314 = add i64 %313, -1
  %315 = select i1 %312, i64 0, i64 %314
  %316 = load i64, i64* %151, align 8
  %317 = load i64, i64* %171, align 8
  %318 = add i64 %317, %316
  %319 = icmp eq i64 %315, %318
  %320 = inttoptr i64 %310 to %"class.v8::internal::compiler::BasicBlock"***
  %321 = inttoptr i64 %309 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %319, label %322, label %328

322:                                              ; preds = %307
  call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %216) #11
  %323 = load i64, i64* %171, align 8
  %324 = load i64, i64* %151, align 8
  %325 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %162, align 8
  %326 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %159, align 8
  %327 = add i64 %324, %323
  br label %328

328:                                              ; preds = %322, %307
  %329 = phi i64 [ %327, %322 ], [ %318, %307 ]
  %330 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %326, %322 ], [ %321, %307 ]
  %331 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %325, %322 ], [ %320, %307 ]
  %332 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %330, %331
  br i1 %332, label %340, label %333

333:                                              ; preds = %328
  %334 = lshr i64 %329, 9
  %335 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %331, i64 %334
  %336 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %335, align 8
  %337 = and i64 %329, 511
  %338 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %336, i64 %337
  %339 = bitcast %"class.v8::internal::compiler::BasicBlock"** %338 to i64*
  br label %340

340:                                              ; preds = %328, %333
  %341 = phi i64* [ %339, %333 ], [ null, %328 ]
  store i64 %296, i64* %341, align 8
  %342 = load i64, i64* %171, align 8
  %343 = add i64 %342, 1
  store i64 %343, i64* %171, align 8
  %344 = load i64, i64* %284, align 8
  %345 = load i64, i64* %286, align 8
  br label %346

346:                                              ; preds = %289, %340
  %347 = phi i64 [ %290, %289 ], [ %345, %340 ]
  %348 = phi i64 [ %291, %289 ], [ %344, %340 ]
  %349 = add nuw i64 %292, 1
  %350 = sub i64 %348, %347
  %351 = ashr exact i64 %350, 3
  %352 = icmp ult i64 %349, %351
  br i1 %352, label %289, label %245

353:                                              ; preds = %245, %196
  %354 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %354) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %137) #11
  %355 = icmp eq i64 %21, 0
  br i1 %355, label %356, label %365

356:                                              ; preds = %396, %353
  %357 = load i64, i64* %34, align 8
  %358 = load i64, i64* %36, align 8
  %359 = icmp eq i64 %357, %358
  br i1 %359, label %401, label %360

360:                                              ; preds = %356
  %361 = load i64*, i64** %202, align 8
  %362 = inttoptr i64 %358 to %"class.v8::internal::compiler::BasicBlock"**
  %363 = sub i64 %357, %358
  %364 = ashr exact i64 %363, 3
  br label %492

365:                                              ; preds = %353, %396
  %366 = phi i64 [ %397, %396 ], [ 0, %353 ]
  %367 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %366) #11
  %368 = load i64*, i64** %202, align 8
  %369 = lshr i64 %366, 6
  %370 = getelementptr inbounds i64, i64* %368, i64 %369
  %371 = and i64 %366, 63
  %372 = shl i64 1, %371
  %373 = load i64, i64* %370, align 8
  %374 = and i64 %373, %372
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %396, label %376

376:                                              ; preds = %365
  %377 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %367, i64 0, i32 1
  %378 = load i32, i32* %377, align 4
  %379 = icmp sgt i32 %378, -1
  br i1 %379, label %381, label %380, !prof !2

380:                                              ; preds = %376
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i64 0, i64 0)) #12
  unreachable

381:                                              ; preds = %376
  %382 = sext i32 %378 to i64
  %383 = load i64, i64* %34, align 8
  %384 = load i64, i64* %36, align 8
  %385 = sub i64 %383, %384
  %386 = ashr exact i64 %385, 3
  %387 = icmp ugt i64 %386, %382
  br i1 %387, label %390, label %388

388:                                              ; preds = %381
  %389 = bitcast %"class.std::__1::vector.43"* %32 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %389) #12
  unreachable

390:                                              ; preds = %381
  %391 = inttoptr i64 %384 to %"class.v8::internal::compiler::BasicBlock"**
  %392 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %391, i64 %382
  %393 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %392, align 8
  %394 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %367, %393
  br i1 %394, label %396, label %395, !prof !2

395:                                              ; preds = %390
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.92, i64 0, i64 0)) #12
  unreachable

396:                                              ; preds = %365, %390
  %397 = add nuw i64 %366, 1
  %398 = icmp ult i64 %397, %22
  br i1 %398, label %365, label %356

399:                                              ; preds = %492
  %400 = icmp ult i64 %505, %364
  br i1 %400, label %492, label %401

401:                                              ; preds = %399, %356
  %402 = bitcast %"class.v8::internal::ZoneVector.57"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %402) #11
  %403 = load i64, i64* %132, align 8
  %404 = getelementptr inbounds %"class.v8::internal::ZoneVector.57", %"class.v8::internal::ZoneVector.57"* %10, i64 0, i32 0, i32 0, i32 2, i32 1
  %405 = bitcast %"struct.std::__1::__compressed_pair_elem.62"* %404 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %402, i8 0, i64 24, i1 false) #11
  store i64 %403, i64* %405, align 8
  %406 = bitcast %"class.v8::internal::BitVector"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #11
  store %"class.v8::internal::BitVector"* null, %"class.v8::internal::BitVector"** %11, align 8
  %407 = getelementptr inbounds %"class.v8::internal::ZoneVector.57", %"class.v8::internal::ZoneVector.57"* %10, i64 0, i32 0, i32 0, i32 1
  %408 = bitcast %"class.v8::internal::BitVector"*** %407 to i64*
  %409 = icmp eq i64 %21, 0
  br i1 %409, label %413, label %410

410:                                              ; preds = %401
  %411 = getelementptr inbounds %"class.v8::internal::ZoneVector.57", %"class.v8::internal::ZoneVector.57"* %10, i64 0, i32 0
  call void @_ZNSt3__16vectorIPN2v88internal9BitVectorENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.58"* nonnull %411, i64 %22, %"class.v8::internal::BitVector"** nonnull dereferenceable(8) %11) #11
  %412 = load i64, i64* %132, align 8
  br label %413

413:                                              ; preds = %401, %410
  %414 = phi i64 [ %412, %410 ], [ %403, %401 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #11
  %415 = bitcast %"class.v8::internal::ZoneQueue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %415) #11
  %416 = bitcast %"class.v8::internal::ZoneDeque"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %416) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 32, i1 false) #11
  %417 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %418 = bitcast %"struct.std::__1::__compressed_pair_elem.52"* %417 to i64*
  store i64 %414, i64* %418, align 8
  %419 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %420 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %419 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %420, i8 0, i64 24, i1 false) #11
  %421 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %422 = bitcast %"struct.std::__1::__compressed_pair_elem.55"* %421 to i64*
  store i64 %414, i64* %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  store %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* null, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %423, align 8
  %424 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3
  %425 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 0, i32 3
  %426 = bitcast %"class.std::__1::__compressed_pair.50"* %424 to i8*
  %427 = bitcast %"class.std::__1::__compressed_pair.50"* %425 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %415, i8 0, i64 24, i1 false) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* align 8 %427, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 0, i64 32, i1 false) #11
  %428 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %429 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %428, align 8
  %430 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %431 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0, i32 2
  %432 = bitcast %"class.std::__1::__compressed_pair.54"* %430 to i8*
  %433 = bitcast %"class.std::__1::__compressed_pair.54"* %431 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %432, i8* align 8 %433, i64 24, i1 false) #11
  %434 = bitcast i64* %429 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %434, i8 0, i64 16, i1 false) #11
  %435 = getelementptr inbounds %"class.v8::internal::ZoneDeque", %"class.v8::internal::ZoneDeque"* %5, i64 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %435) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %416) #11
  %436 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %437 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %436 to i64*
  %438 = load i64, i64* %437, align 8
  %439 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %440 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %439 to i64*
  %441 = load i64, i64* %440, align 8
  %442 = sub i64 %438, %441
  %443 = icmp eq i64 %442, 0
  %444 = shl i64 %442, 6
  %445 = add i64 %444, -1
  %446 = select i1 %443, i64 0, i64 %445
  %447 = load i64, i64* %428, align 8
  %448 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %449 = load i64, i64* %448, align 8
  %450 = add i64 %449, %447
  %451 = icmp eq i64 %446, %450
  %452 = inttoptr i64 %441 to %"class.v8::internal::compiler::BasicBlock"***
  %453 = inttoptr i64 %438 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %451, label %454, label %461

454:                                              ; preds = %413
  %455 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %455) #11
  %456 = load i64, i64* %448, align 8
  %457 = load i64, i64* %428, align 8
  %458 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %459 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %436, align 8
  %460 = add i64 %457, %456
  br label %461

461:                                              ; preds = %454, %413
  %462 = phi i64 [ %460, %454 ], [ %450, %413 ]
  %463 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %459, %454 ], [ %453, %413 ]
  %464 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %458, %454 ], [ %452, %413 ]
  %465 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %463, %464
  br i1 %465, label %473, label %466

466:                                              ; preds = %461
  %467 = lshr i64 %462, 9
  %468 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %464, i64 %467
  %469 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %468, align 8
  %470 = and i64 %462, 511
  %471 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %469, i64 %470
  %472 = bitcast %"class.v8::internal::compiler::BasicBlock"** %471 to i64*
  br label %473

473:                                              ; preds = %461, %466
  %474 = phi i64* [ %472, %466 ], [ null, %461 ]
  store i64 %31, i64* %474, align 8
  %475 = load i64, i64* %448, align 8
  %476 = add i64 %475, 1
  store i64 %476, i64* %448, align 8
  %477 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %478 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %478) #11
  store i32 %129, i32* %13, align 4
  %479 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %477, i32* nonnull dereferenceable(4) %13, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %7)
  %480 = load i64, i64* %200, align 8
  %481 = getelementptr inbounds %"class.v8::internal::ZoneVector.57", %"class.v8::internal::ZoneVector.57"* %10, i64 0, i32 0, i32 0, i32 0
  %482 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %483 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %482, i64 %480
  store %"class.v8::internal::BitVector"* %479, %"class.v8::internal::BitVector"** %483, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %478) #11
  %484 = load i64, i64* %448, align 8
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %906, label %486

486:                                              ; preds = %473
  %487 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %488 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %487 to i64*
  %489 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %487 to %"class.v8::internal::compiler::BasicBlock"***
  %490 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0
  %491 = bitcast i32* %14 to i8*
  br label %510

492:                                              ; preds = %360, %399
  %493 = phi i64 [ 0, %360 ], [ %505, %399 ]
  %494 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %362, i64 %493
  %495 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %494, align 8
  %496 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %495, i64 0, i32 14, i32 0
  %497 = load i64, i64* %496, align 8
  %498 = lshr i64 %497, 6
  %499 = getelementptr inbounds i64, i64* %361, i64 %498
  %500 = and i64 %497, 63
  %501 = shl i64 1, %500
  %502 = load i64, i64* %499, align 8
  %503 = and i64 %501, %502
  %504 = icmp eq i64 %503, 0
  %505 = add nuw i64 %493, 1
  br i1 %504, label %506, label %399, !prof !6

506:                                              ; preds = %492
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.93, i64 0, i64 0)) #12
  unreachable

507:                                              ; preds = %897, %581
  %508 = load i64, i64* %448, align 8
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %906, label %510

510:                                              ; preds = %486, %507
  %511 = phi i64 [ %484, %486 ], [ %508, %507 ]
  %512 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %513 = load i64, i64* %428, align 8
  %514 = lshr i64 %513, 9
  %515 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %512, i64 %514
  %516 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %515, align 8
  %517 = and i64 %513, 511
  %518 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %516, i64 %517
  %519 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %518, align 8
  %520 = add i64 %511, -1
  store i64 %520, i64* %448, align 8
  %521 = add i64 %513, 1
  store i64 %521, i64* %428, align 8
  %522 = icmp ult i64 %521, 1024
  br i1 %522, label %543, label %523

523:                                              ; preds = %510
  %524 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %512, align 8
  %525 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %487, align 8
  %526 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %525, null
  br i1 %526, label %531, label %527

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %525, i64 0, i32 1
  %529 = load i64, i64* %528, align 8
  %530 = icmp ugt i64 %529, 512
  br i1 %530, label %538, label %531

531:                                              ; preds = %527, %523
  %532 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %524, i64 1
  %533 = bitcast %"class.v8::internal::compiler::BasicBlock"** %532 to i64*
  store i64 512, i64* %533, align 8
  %534 = load i64, i64* %488, align 8
  %535 = bitcast %"class.v8::internal::compiler::BasicBlock"** %524 to i64*
  store i64 %534, i64* %535, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %524, %"class.v8::internal::compiler::BasicBlock"*** %489, align 8
  %536 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %537 = load i64, i64* %428, align 8
  br label %538

538:                                              ; preds = %531, %527
  %539 = phi i64 [ %521, %527 ], [ %537, %531 ]
  %540 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %512, %527 ], [ %536, %531 ]
  %541 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %540, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %541, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %542 = add i64 %539, -512
  store i64 %542, i64* %428, align 8
  br label %543

543:                                              ; preds = %510, %538
  %544 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %519, i64 0, i32 14, i32 0
  %545 = load i64, i64* %544, align 8
  %546 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %547 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %546, i64 %545
  %548 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %547, align 8
  %549 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %519, i64 0, i32 4
  %550 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %549, align 8
  %551 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %550, null
  br i1 %551, label %581, label %552

552:                                              ; preds = %543
  %553 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %550, i64 0, i32 14, i32 0
  %554 = load i64, i64* %553, align 8
  %555 = trunc i64 %554 to i32
  %556 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %548, i64 0, i32 1
  %557 = load i32, i32* %556, align 4
  %558 = icmp eq i32 %557, 1
  %559 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %548, i64 0, i32 2
  br i1 %558, label %560, label %562

560:                                              ; preds = %552
  %561 = bitcast %"union.v8::internal::BitVector::DataStorage"* %559 to i64*
  br label %568

562:                                              ; preds = %552
  %563 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %559, i64 0, i32 0
  %564 = load i64*, i64** %563, align 8
  %565 = sdiv i32 %555, 64
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds i64, i64* %564, i64 %566
  br label %568

568:                                              ; preds = %560, %562
  %569 = phi i64* [ %561, %560 ], [ %567, %562 ]
  %570 = load i64, i64* %569, align 8
  %571 = srem i32 %555, 64
  %572 = zext i32 %571 to i64
  %573 = shl i64 1, %572
  %574 = and i64 %570, %573
  %575 = icmp eq i64 %574, 0
  br i1 %575, label %576, label %581

576:                                              ; preds = %568
  %577 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %519, i64 0, i32 1
  %578 = load i32, i32* %577, align 4
  %579 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %550, i64 0, i32 1
  %580 = load i32, i32* %579, align 4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.94, i64 0, i64 0), i32 %578, i32 %580) #12
  unreachable

581:                                              ; preds = %568, %543
  %582 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %519, i64 0, i32 12, i32 0
  %583 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %519, i64 0, i32 12, i32 0, i32 0, i32 1
  %584 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = bitcast %"class.std::__1::vector.43"* %582 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = icmp eq i64 %585, %587
  br i1 %588, label %507, label %589

589:                                              ; preds = %581
  %590 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %548, i64 0, i32 2, i32 0
  %591 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %548, i64 0, i32 2
  %592 = bitcast %"union.v8::internal::BitVector::DataStorage"* %591 to i64*
  %593 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %548, i64 0, i32 1
  br label %594

594:                                              ; preds = %904, %589
  %595 = phi %"class.v8::internal::BitVector"** [ %546, %589 ], [ %905, %904 ]
  %596 = phi i64 [ %587, %589 ], [ %900, %904 ]
  %597 = phi i64 [ 0, %589 ], [ %898, %904 ]
  %598 = inttoptr i64 %596 to %"class.v8::internal::compiler::BasicBlock"**
  %599 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %598, i64 %597
  %600 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %599, align 8
  %601 = ptrtoint %"class.v8::internal::compiler::BasicBlock"* %600 to i64
  %602 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %600, i64 0, i32 14, i32 0
  %603 = load i64, i64* %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %595, i64 %603
  %605 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %604, align 8
  %606 = icmp eq %"class.v8::internal::BitVector"* %605, null
  br i1 %606, label %607, label %761

607:                                              ; preds = %594
  %608 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %491) #11
  store i32 %129, i32* %14, align 4
  %609 = call %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"* %608, i32* nonnull dereferenceable(4) %14, %"class.v8::internal::Zone"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %491) #11
  %610 = load i64*, i64** %590, align 8
  %611 = load i32, i32* %593, align 4
  %612 = ptrtoint i64* %610 to i64
  %613 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 1
  %614 = load i32, i32* %613, align 4
  %615 = icmp eq i32 %614, 1
  br i1 %615, label %616, label %620

616:                                              ; preds = %607
  %617 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2
  %618 = bitcast %"union.v8::internal::BitVector::DataStorage"* %617 to i64*
  store i64 %612, i64* %618, align 8
  %619 = load i64, i64* %544, align 8
  br label %704

620:                                              ; preds = %607
  %621 = icmp eq i32 %611, 1
  br i1 %621, label %632, label %622

622:                                              ; preds = %620
  %623 = icmp sgt i32 %611, 0
  br i1 %623, label %624, label %660

624:                                              ; preds = %622
  %625 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2, i32 0
  %626 = zext i32 %611 to i64
  %627 = add nsw i64 %626, -1
  %628 = and i64 %626, 3
  %629 = icmp ult i64 %627, 3
  br i1 %629, label %645, label %630

630:                                              ; preds = %624
  %631 = sub nsw i64 %626, %628
  br label %666

632:                                              ; preds = %620
  %633 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2, i32 0
  %634 = load i64*, i64** %633, align 8
  store i64 %612, i64* %634, align 8
  %635 = load i32, i32* %613, align 4
  %636 = icmp sgt i32 %635, 1
  br i1 %636, label %637, label %699

637:                                              ; preds = %632, %637
  %638 = phi i64 [ %641, %637 ], [ 1, %632 ]
  %639 = load i64*, i64** %633, align 8
  %640 = getelementptr inbounds i64, i64* %639, i64 %638
  store i64 0, i64* %640, align 8
  %641 = add nuw nsw i64 %638, 1
  %642 = load i32, i32* %613, align 4
  %643 = sext i32 %642 to i64
  %644 = icmp slt i64 %641, %643
  br i1 %644, label %637, label %699

645:                                              ; preds = %666, %624
  %646 = phi i64 [ 0, %624 ], [ %688, %666 ]
  %647 = icmp eq i64 %628, 0
  br i1 %647, label %658, label %648

648:                                              ; preds = %645, %648
  %649 = phi i64 [ %655, %648 ], [ %646, %645 ]
  %650 = phi i64 [ %656, %648 ], [ %628, %645 ]
  %651 = getelementptr inbounds i64, i64* %610, i64 %649
  %652 = load i64, i64* %651, align 8
  %653 = load i64*, i64** %625, align 8
  %654 = getelementptr inbounds i64, i64* %653, i64 %649
  store i64 %652, i64* %654, align 8
  %655 = add nuw nsw i64 %649, 1
  %656 = add i64 %650, -1
  %657 = icmp eq i64 %656, 0
  br i1 %657, label %658, label %648, !llvm.loop !14

658:                                              ; preds = %648, %645
  %659 = load i32, i32* %613, align 4
  br label %660

660:                                              ; preds = %658, %622
  %661 = phi i32 [ %659, %658 ], [ %614, %622 ]
  %662 = icmp sgt i32 %661, %611
  br i1 %662, label %663, label %699

663:                                              ; preds = %660
  %664 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2, i32 0
  %665 = sext i32 %611 to i64
  br label %691

666:                                              ; preds = %666, %630
  %667 = phi i64 [ 0, %630 ], [ %688, %666 ]
  %668 = phi i64 [ %631, %630 ], [ %689, %666 ]
  %669 = getelementptr inbounds i64, i64* %610, i64 %667
  %670 = load i64, i64* %669, align 8
  %671 = load i64*, i64** %625, align 8
  %672 = getelementptr inbounds i64, i64* %671, i64 %667
  store i64 %670, i64* %672, align 8
  %673 = or i64 %667, 1
  %674 = getelementptr inbounds i64, i64* %610, i64 %673
  %675 = load i64, i64* %674, align 8
  %676 = load i64*, i64** %625, align 8
  %677 = getelementptr inbounds i64, i64* %676, i64 %673
  store i64 %675, i64* %677, align 8
  %678 = or i64 %667, 2
  %679 = getelementptr inbounds i64, i64* %610, i64 %678
  %680 = load i64, i64* %679, align 8
  %681 = load i64*, i64** %625, align 8
  %682 = getelementptr inbounds i64, i64* %681, i64 %678
  store i64 %680, i64* %682, align 8
  %683 = or i64 %667, 3
  %684 = getelementptr inbounds i64, i64* %610, i64 %683
  %685 = load i64, i64* %684, align 8
  %686 = load i64*, i64** %625, align 8
  %687 = getelementptr inbounds i64, i64* %686, i64 %683
  store i64 %685, i64* %687, align 8
  %688 = add nuw nsw i64 %667, 4
  %689 = add i64 %668, -4
  %690 = icmp eq i64 %689, 0
  br i1 %690, label %645, label %666

691:                                              ; preds = %691, %663
  %692 = phi i64 [ %665, %663 ], [ %695, %691 ]
  %693 = load i64*, i64** %664, align 8
  %694 = getelementptr inbounds i64, i64* %693, i64 %692
  store i64 0, i64* %694, align 8
  %695 = add nsw i64 %692, 1
  %696 = load i32, i32* %613, align 4
  %697 = sext i32 %696 to i64
  %698 = icmp slt i64 %695, %697
  br i1 %698, label %691, label %699

699:                                              ; preds = %691, %637, %660, %632
  %700 = phi i32 [ %635, %632 ], [ %661, %660 ], [ %642, %637 ], [ %696, %691 ]
  %701 = load i64, i64* %544, align 8
  %702 = trunc i64 %701 to i32
  %703 = icmp eq i32 %700, 1
  br i1 %703, label %704, label %709

704:                                              ; preds = %616, %699
  %705 = phi i64 [ %619, %616 ], [ %701, %699 ]
  %706 = and i64 %705, 4294967295
  %707 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2
  %708 = bitcast %"union.v8::internal::BitVector::DataStorage"* %707 to i64*
  br label %717

709:                                              ; preds = %699
  %710 = srem i32 %702, 64
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %609, i64 0, i32 2, i32 0
  %713 = load i64*, i64** %712, align 8
  %714 = sdiv i32 %702, 64
  %715 = sext i32 %714 to i64
  %716 = getelementptr inbounds i64, i64* %713, i64 %715
  br label %717

717:                                              ; preds = %704, %709
  %718 = phi i64* [ %708, %704 ], [ %716, %709 ]
  %719 = phi i64 [ %706, %704 ], [ %711, %709 ]
  %720 = shl i64 1, %719
  %721 = load i64, i64* %718, align 8
  %722 = or i64 %721, %720
  store i64 %722, i64* %718, align 8
  %723 = load i64, i64* %602, align 8
  %724 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %725 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %724, i64 %723
  store %"class.v8::internal::BitVector"* %609, %"class.v8::internal::BitVector"** %725, align 8
  %726 = load i64, i64* %437, align 8
  %727 = load i64, i64* %440, align 8
  %728 = sub i64 %726, %727
  %729 = icmp eq i64 %728, 0
  %730 = shl i64 %728, 6
  %731 = add i64 %730, -1
  %732 = select i1 %729, i64 0, i64 %731
  %733 = load i64, i64* %428, align 8
  %734 = load i64, i64* %448, align 8
  %735 = add i64 %734, %733
  %736 = icmp eq i64 %732, %735
  %737 = inttoptr i64 %727 to %"class.v8::internal::compiler::BasicBlock"***
  %738 = inttoptr i64 %726 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %736, label %739, label %745

739:                                              ; preds = %717
  call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %490) #11
  %740 = load i64, i64* %448, align 8
  %741 = load i64, i64* %428, align 8
  %742 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %743 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %436, align 8
  %744 = add i64 %741, %740
  br label %745

745:                                              ; preds = %739, %717
  %746 = phi i64 [ %744, %739 ], [ %735, %717 ]
  %747 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %743, %739 ], [ %738, %717 ]
  %748 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %742, %739 ], [ %737, %717 ]
  %749 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %747, %748
  br i1 %749, label %757, label %750

750:                                              ; preds = %745
  %751 = lshr i64 %746, 9
  %752 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %748, i64 %751
  %753 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %752, align 8
  %754 = and i64 %746, 511
  %755 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %753, i64 %754
  %756 = bitcast %"class.v8::internal::compiler::BasicBlock"** %755 to i64*
  br label %757

757:                                              ; preds = %745, %750
  %758 = phi i64* [ %756, %750 ], [ null, %745 ]
  store i64 %601, i64* %758, align 8
  %759 = load i64, i64* %448, align 8
  %760 = add i64 %759, 1
  store i64 %760, i64* %448, align 8
  br label %897

761:                                              ; preds = %594
  %762 = load i64, i64* %544, align 8
  %763 = trunc i64 %762 to i32
  %764 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %605, i64 0, i32 1
  %765 = load i32, i32* %764, align 4
  %766 = icmp eq i32 %765, 1
  %767 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %605, i64 0, i32 2
  br i1 %766, label %768, label %770

768:                                              ; preds = %761
  %769 = bitcast %"union.v8::internal::BitVector::DataStorage"* %767 to i64*
  br label %776

770:                                              ; preds = %761
  %771 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %767, i64 0, i32 0
  %772 = load i64*, i64** %771, align 8
  %773 = sdiv i32 %763, 64
  %774 = sext i32 %773 to i64
  %775 = getelementptr inbounds i64, i64* %772, i64 %774
  br label %776

776:                                              ; preds = %768, %770
  %777 = phi i64* [ %769, %768 ], [ %775, %770 ]
  %778 = load i64, i64* %777, align 8
  %779 = srem i32 %763, 64
  %780 = sdiv i32 %763, 64
  %781 = zext i32 %779 to i64
  %782 = shl i64 1, %781
  %783 = and i64 %778, %782
  %784 = icmp ne i64 %783, 0
  br i1 %784, label %785, label %802

785:                                              ; preds = %776
  br i1 %766, label %786, label %793

786:                                              ; preds = %785
  %787 = and i64 %762, 4294967295
  %788 = shl i64 1, %787
  %789 = xor i64 %788, -1
  %790 = bitcast %"union.v8::internal::BitVector::DataStorage"* %767 to i64*
  %791 = load i64, i64* %790, align 8
  %792 = and i64 %791, %789
  store i64 %792, i64* %790, align 8
  br label %810

793:                                              ; preds = %785
  %794 = xor i64 %782, -1
  %795 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %605, i64 0, i32 2, i32 0
  %796 = load i64*, i64** %795, align 8
  %797 = sext i32 %780 to i64
  %798 = getelementptr inbounds i64, i64* %796, i64 %797
  %799 = load i64, i64* %798, align 8
  %800 = and i64 %799, %794
  store i64 %800, i64* %798, align 8
  %801 = load i32, i32* %764, align 4
  br label %802

802:                                              ; preds = %793, %776
  %803 = phi i32 [ %801, %793 ], [ %765, %776 ]
  %804 = icmp eq i32 %803, 1
  br i1 %804, label %810, label %805

805:                                              ; preds = %802
  %806 = icmp sgt i32 %803, 0
  br i1 %806, label %807, label %874

807:                                              ; preds = %805
  %808 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %605, i64 0, i32 2, i32 0
  %809 = load i64*, i64** %808, align 8
  br label %816

810:                                              ; preds = %786, %802
  %811 = bitcast %"union.v8::internal::BitVector::DataStorage"* %767 to i64*
  %812 = load i64, i64* %811, align 8
  %813 = load i64, i64* %592, align 8
  %814 = and i64 %813, %812
  store i64 %814, i64* %811, align 8
  %815 = icmp eq i64 %814, %812
  br i1 %815, label %874, label %838

816:                                              ; preds = %816, %807
  %817 = phi i64* [ %809, %807 ], [ %826, %816 ]
  %818 = phi i64 [ 0, %807 ], [ %831, %816 ]
  %819 = phi i8 [ 0, %807 ], [ %830, %816 ]
  %820 = getelementptr inbounds i64, i64* %817, i64 %818
  %821 = load i64, i64* %820, align 8
  %822 = load i64*, i64** %590, align 8
  %823 = getelementptr inbounds i64, i64* %822, i64 %818
  %824 = load i64, i64* %823, align 8
  %825 = and i64 %824, %821
  store i64 %825, i64* %820, align 8
  %826 = load i64*, i64** %808, align 8
  %827 = getelementptr inbounds i64, i64* %826, i64 %818
  %828 = load i64, i64* %827, align 8
  %829 = icmp eq i64 %828, %821
  %830 = select i1 %829, i8 %819, i8 1
  %831 = add nuw nsw i64 %818, 1
  %832 = load i32, i32* %764, align 4
  %833 = sext i32 %832 to i64
  %834 = icmp slt i64 %831, %833
  br i1 %834, label %816, label %835

835:                                              ; preds = %816
  %836 = and i8 %830, 1
  %837 = icmp eq i8 %836, 0
  br i1 %837, label %874, label %838

838:                                              ; preds = %810, %835
  %839 = load i64, i64* %437, align 8
  %840 = load i64, i64* %440, align 8
  %841 = sub i64 %839, %840
  %842 = icmp eq i64 %841, 0
  %843 = shl i64 %841, 6
  %844 = add i64 %843, -1
  %845 = select i1 %842, i64 0, i64 %844
  %846 = load i64, i64* %428, align 8
  %847 = load i64, i64* %448, align 8
  %848 = add i64 %847, %846
  %849 = icmp eq i64 %845, %848
  %850 = inttoptr i64 %840 to %"class.v8::internal::compiler::BasicBlock"***
  %851 = inttoptr i64 %839 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %849, label %852, label %858

852:                                              ; preds = %838
  call void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %490) #11
  %853 = load i64, i64* %448, align 8
  %854 = load i64, i64* %428, align 8
  %855 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %439, align 8
  %856 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %436, align 8
  %857 = add i64 %854, %853
  br label %858

858:                                              ; preds = %852, %838
  %859 = phi i64 [ %857, %852 ], [ %848, %838 ]
  %860 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %856, %852 ], [ %851, %838 ]
  %861 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %855, %852 ], [ %850, %838 ]
  %862 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %860, %861
  br i1 %862, label %870, label %863

863:                                              ; preds = %858
  %864 = lshr i64 %859, 9
  %865 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %861, i64 %864
  %866 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %865, align 8
  %867 = and i64 %859, 511
  %868 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %866, i64 %867
  %869 = bitcast %"class.v8::internal::compiler::BasicBlock"** %868 to i64*
  br label %870

870:                                              ; preds = %858, %863
  %871 = phi i64* [ %869, %863 ], [ null, %858 ]
  store i64 %601, i64* %871, align 8
  %872 = load i64, i64* %448, align 8
  %873 = add i64 %872, 1
  store i64 %873, i64* %448, align 8
  br label %874

874:                                              ; preds = %810, %835, %805, %870
  br i1 %784, label %875, label %897

875:                                              ; preds = %874
  %876 = load i64, i64* %544, align 8
  %877 = trunc i64 %876 to i32
  %878 = load i32, i32* %764, align 4
  %879 = icmp eq i32 %878, 1
  br i1 %879, label %880, label %886

880:                                              ; preds = %875
  %881 = and i64 %876, 4294967295
  %882 = shl i64 1, %881
  %883 = bitcast %"union.v8::internal::BitVector::DataStorage"* %767 to i64*
  %884 = load i64, i64* %883, align 8
  %885 = or i64 %884, %882
  store i64 %885, i64* %883, align 8
  br label %897

886:                                              ; preds = %875
  %887 = srem i32 %877, 64
  %888 = zext i32 %887 to i64
  %889 = shl i64 1, %888
  %890 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %605, i64 0, i32 2, i32 0
  %891 = load i64*, i64** %890, align 8
  %892 = sdiv i32 %877, 64
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds i64, i64* %891, i64 %893
  %895 = load i64, i64* %894, align 8
  %896 = or i64 %895, %889
  store i64 %896, i64* %894, align 8
  br label %897

897:                                              ; preds = %886, %880, %874, %757
  %898 = add nuw i64 %597, 1
  %899 = load i64, i64* %584, align 8
  %900 = load i64, i64* %586, align 8
  %901 = sub i64 %899, %900
  %902 = ashr exact i64 %901, 3
  %903 = icmp ult i64 %898, %902
  br i1 %903, label %904, label %507

904:                                              ; preds = %897
  %905 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  br label %594

906:                                              ; preds = %507, %473
  %907 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  %908 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  %909 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %907, %908
  br i1 %909, label %910, label %920

910:                                              ; preds = %1072, %906
  %911 = getelementptr inbounds %"class.v8::internal::ZoneQueue", %"class.v8::internal::ZoneQueue"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"* nonnull %911) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %415) #11
  %912 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %913 = icmp eq %"class.v8::internal::BitVector"** %912, null
  br i1 %913, label %916, label %914

914:                                              ; preds = %910
  %915 = ptrtoint %"class.v8::internal::BitVector"** %912 to i64
  store i64 %915, i64* %408, align 8
  br label %916

916:                                              ; preds = %910, %914
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %402) #11
  %917 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  %918 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  %919 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %917, %918
  br i1 %919, label %1173, label %1079

920:                                              ; preds = %906, %1072
  %921 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1073, %1072 ], [ %908, %906 ]
  %922 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1074, %1072 ], [ %907, %906 ]
  %923 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %922, align 8
  %924 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %923, i64 0, i32 4
  %925 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %924, align 8
  %926 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %925, null
  br i1 %926, label %1072, label %927

927:                                              ; preds = %920
  %928 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %923, i64 0, i32 14, i32 0
  %929 = load i64, i64* %928, align 8
  %930 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %931 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %930, i64 %929
  %932 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %931, align 8
  %933 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %932, i64 0, i32 1
  %934 = load i32, i32* %933, align 4
  %935 = icmp eq i32 %934, 1
  %936 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %932, i64 0, i32 2
  br i1 %935, label %937, label %939

937:                                              ; preds = %927
  %938 = bitcast %"union.v8::internal::BitVector::DataStorage"* %936 to i64*
  br label %942

939:                                              ; preds = %927
  %940 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %936, i64 0, i32 0
  %941 = load i64*, i64** %940, align 8
  br label %942

942:                                              ; preds = %939, %937
  %943 = phi i64* [ %938, %937 ], [ %941, %939 ]
  %944 = load i64, i64* %943, align 8
  %945 = icmp eq i64 %944, 0
  br i1 %945, label %946, label %969

946:                                              ; preds = %942
  %947 = sext i32 %934 to i64
  %948 = icmp sgt i32 %934, 1
  br i1 %948, label %949, label %978

949:                                              ; preds = %946
  %950 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %932, i64 0, i32 2, i32 0
  %951 = load i64*, i64** %950, align 8
  %952 = getelementptr inbounds i64, i64* %951, i64 1
  %953 = load i64, i64* %952, align 8
  %954 = icmp eq i64 %953, 0
  br i1 %954, label %955, label %965

955:                                              ; preds = %949, %959
  %956 = phi i64 [ %957, %959 ], [ 1, %949 ]
  %957 = add nuw nsw i64 %956, 1
  %958 = icmp eq i64 %957, %947
  br i1 %958, label %1072, label %959

959:                                              ; preds = %955
  %960 = getelementptr inbounds i64, i64* %951, i64 %957
  %961 = load i64, i64* %960, align 8
  %962 = icmp eq i64 %961, 0
  br i1 %962, label %955, label %963

963:                                              ; preds = %959
  %964 = trunc i64 %957 to i32
  br label %965

965:                                              ; preds = %963, %949
  %966 = phi i32 [ %964, %963 ], [ 1, %949 ]
  %967 = phi i64 [ %961, %963 ], [ %953, %949 ]
  %968 = shl i32 %966, 6
  br label %969

969:                                              ; preds = %965, %942
  %970 = phi i32 [ 0, %942 ], [ %966, %965 ]
  %971 = phi i32 [ 0, %942 ], [ %968, %965 ]
  %972 = phi i64 [ %944, %942 ], [ %967, %965 ]
  %973 = call i64 @llvm.cttz.i64(i64 %972, i1 true) #11, !range !8
  %974 = trunc i64 %973 to i32
  %975 = or i32 %971, %974
  %976 = lshr i64 %972, %973
  %977 = lshr i64 %976, 1
  br label %978

978:                                              ; preds = %946, %969
  %979 = phi i32 [ %970, %969 ], [ 1, %946 ]
  %980 = phi i64 [ %977, %969 ], [ 0, %946 ]
  %981 = phi i32 [ %975, %969 ], [ 0, %946 ]
  %982 = icmp slt i32 %979, %934
  br i1 %982, label %983, label %1072

983:                                              ; preds = %978
  %984 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %925, i64 0, i32 14, i32 0
  %985 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %932, i64 0, i32 2, i32 0
  br label %986

986:                                              ; preds = %983, %1064
  %987 = phi i32 [ %981, %983 ], [ %1068, %1064 ]
  %988 = phi i64 [ %980, %983 ], [ %1067, %1064 ]
  %989 = phi i32 [ %979, %983 ], [ %1066, %1064 ]
  %990 = sext i32 %987 to i64
  %991 = call %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"* %0, i64 %990) #11
  %992 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %991, %925
  br i1 %992, label %1026, label %993

993:                                              ; preds = %986
  %994 = load i64, i64* %984, align 8
  %995 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %481, align 8
  %996 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %995, i64 %994
  %997 = load %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %996, align 8
  %998 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %991, i64 0, i32 14, i32 0
  %999 = load i64, i64* %998, align 8
  %1000 = trunc i64 %999 to i32
  %1001 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %997, i64 0, i32 1
  %1002 = load i32, i32* %1001, align 4
  %1003 = icmp eq i32 %1002, 1
  %1004 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %997, i64 0, i32 2
  br i1 %1003, label %1005, label %1007

1005:                                             ; preds = %993
  %1006 = bitcast %"union.v8::internal::BitVector::DataStorage"* %1004 to i64*
  br label %1013

1007:                                             ; preds = %993
  %1008 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %1004, i64 0, i32 0
  %1009 = load i64*, i64** %1008, align 8
  %1010 = sdiv i32 %1000, 64
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds i64, i64* %1009, i64 %1011
  br label %1013

1013:                                             ; preds = %1005, %1007
  %1014 = phi i64* [ %1006, %1005 ], [ %1012, %1007 ]
  %1015 = load i64, i64* %1014, align 8
  %1016 = srem i32 %1000, 64
  %1017 = zext i32 %1016 to i64
  %1018 = shl i64 1, %1017
  %1019 = and i64 %1015, %1018
  %1020 = icmp eq i64 %1019, 0
  br i1 %1020, label %1021, label %1026

1021:                                             ; preds = %1013
  %1022 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %923, i64 0, i32 1
  %1023 = load i32, i32* %1022, align 4
  %1024 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %925, i64 0, i32 1
  %1025 = load i32, i32* %1024, align 4
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.95, i64 0, i64 0), i32 %1023, i32 %1025) #12
  unreachable

1026:                                             ; preds = %1013, %986
  %1027 = add nsw i32 %987, 1
  %1028 = icmp eq i64 %988, 0
  br i1 %1028, label %1031, label %1029

1029:                                             ; preds = %1026
  %1030 = load i32, i32* %933, align 4
  br label %1050

1031:                                             ; preds = %1026
  %1032 = add nsw i32 %989, 1
  %1033 = load i32, i32* %933, align 4
  %1034 = icmp slt i32 %1032, %1033
  br i1 %1034, label %1035, label %1064

1035:                                             ; preds = %1031
  %1036 = load i64*, i64** %985, align 8
  %1037 = sext i32 %1032 to i64
  %1038 = sext i32 %1033 to i64
  br label %1042

1039:                                             ; preds = %1042
  %1040 = add nsw i64 %1043, 1
  %1041 = icmp slt i64 %1040, %1038
  br i1 %1041, label %1042, label %1060

1042:                                             ; preds = %1035, %1039
  %1043 = phi i64 [ %1037, %1035 ], [ %1040, %1039 ]
  %1044 = getelementptr inbounds i64, i64* %1036, i64 %1043
  %1045 = load i64, i64* %1044, align 8
  %1046 = icmp eq i64 %1045, 0
  br i1 %1046, label %1039, label %1047

1047:                                             ; preds = %1042
  %1048 = trunc i64 %1043 to i32
  %1049 = shl i32 %1048, 6
  br label %1050

1050:                                             ; preds = %1047, %1029
  %1051 = phi i32 [ %1030, %1029 ], [ %1033, %1047 ]
  %1052 = phi i32 [ %989, %1029 ], [ %1048, %1047 ]
  %1053 = phi i32 [ %1027, %1029 ], [ %1049, %1047 ]
  %1054 = phi i64 [ %988, %1029 ], [ %1045, %1047 ]
  %1055 = call i64 @llvm.cttz.i64(i64 %1054, i1 true) #11, !range !8
  %1056 = trunc i64 %1055 to i32
  %1057 = add i32 %1053, %1056
  %1058 = lshr i64 %1054, %1055
  %1059 = lshr i64 %1058, 1
  br label %1064

1060:                                             ; preds = %1039
  %1061 = trunc i64 %1043 to i32
  %1062 = shl i32 %1061, 6
  %1063 = trunc i64 %1040 to i32
  br label %1064

1064:                                             ; preds = %1060, %1031, %1050
  %1065 = phi i32 [ %1051, %1050 ], [ %1033, %1031 ], [ %1033, %1060 ]
  %1066 = phi i32 [ %1052, %1050 ], [ %1032, %1031 ], [ %1063, %1060 ]
  %1067 = phi i64 [ %1059, %1050 ], [ 0, %1031 ], [ 0, %1060 ]
  %1068 = phi i32 [ %1057, %1050 ], [ %1027, %1031 ], [ %1062, %1060 ]
  %1069 = icmp slt i32 %1066, %1065
  br i1 %1069, label %986, label %1070

1070:                                             ; preds = %1064
  %1071 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  br label %1072

1072:                                             ; preds = %955, %1070, %978, %920
  %1073 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1071, %1070 ], [ %921, %978 ], [ %921, %920 ], [ %921, %955 ]
  %1074 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %922, i64 1
  %1075 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %1074, %1073
  br i1 %1075, label %910, label %920

1076:                                             ; preds = %1090
  %1077 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %45, align 8
  %1078 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %1077, %1091
  br i1 %1078, label %1173, label %1174

1079:                                             ; preds = %916, %1090
  %1080 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1091, %1090 ], [ %918, %916 ]
  %1081 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1092, %1090 ], [ %917, %916 ]
  %1082 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1081, align 8
  %1083 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1082, i64 0, i32 11, i32 0, i32 0, i32 0
  %1084 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1083, align 8
  %1085 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1082, i64 0, i32 11, i32 0, i32 0, i32 1
  %1086 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1085, align 8
  %1087 = icmp eq %"class.v8::internal::compiler::Node"** %1084, %1086
  br i1 %1087, label %1090, label %1094

1088:                                             ; preds = %1167
  %1089 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  br label %1090

1090:                                             ; preds = %1088, %1079
  %1091 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1089, %1088 ], [ %1080, %1079 ]
  %1092 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1081, i64 1
  %1093 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %1092, %1091
  br i1 %1093, label %1076, label %1079

1094:                                             ; preds = %1079, %1167
  %1095 = phi %"class.v8::internal::compiler::BasicBlock"* [ %1168, %1167 ], [ %1082, %1079 ]
  %1096 = phi %"class.v8::internal::compiler::Node"** [ %1169, %1167 ], [ %1084, %1079 ]
  %1097 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1096, align 8
  %1098 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1097, i64 0, i32 0
  %1099 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1098, align 8
  %1100 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1099, i64 0, i32 2
  %1101 = load i16, i16* %1100, align 8
  %1102 = icmp eq i16 %1101, 35
  br i1 %1102, label %1103, label %1167

1103:                                             ; preds = %1094
  %1104 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1097, i64 0, i32 3
  %1105 = load i32, i32* %1104, align 4
  %1106 = and i32 %1105, 251658240
  %1107 = icmp eq i32 %1106, 251658240
  br i1 %1107, label %1111, label %1108

1108:                                             ; preds = %1103
  %1109 = lshr i32 %1105, 24
  %1110 = and i32 %1109, 15
  br label %1118

1111:                                             ; preds = %1103
  %1112 = ptrtoint %"class.v8::internal::compiler::Node"* %1097 to i64
  %1113 = add i64 %1112, 32
  %1114 = inttoptr i64 %1113 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %1115 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %1114, align 8
  %1116 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %1115, i64 0, i32 1
  %1117 = load i32, i32* %1116, align 8
  br label %1118

1118:                                             ; preds = %1108, %1111
  %1119 = phi i32 [ %1110, %1108 ], [ %1117, %1111 ]
  %1120 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1099, i64 0, i32 5
  %1121 = load i32, i32* %1120, align 4
  %1122 = icmp sgt i32 %1119, %1121
  br i1 %1122, label %1123, label %1167

1123:                                             ; preds = %1118
  %1124 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1099, i64 0, i32 7
  %1125 = load i32, i32* %1124, align 4
  %1126 = icmp sgt i32 %1125, 0
  br i1 %1126, label %1128, label %1127, !prof !2

1127:                                             ; preds = %1123
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.113, i64 0, i64 0)) #12
  unreachable

1128:                                             ; preds = %1123
  %1129 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1099) #11
  %1130 = zext i1 %1129 to i32
  %1131 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1098, align 8
  %1132 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1131) #11
  %1133 = zext i1 %1132 to i32
  %1134 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1098, align 8
  %1135 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1134, i64 0, i32 6
  %1136 = load i32, i32* %1135, align 8
  %1137 = add nsw i32 %1121, %1130
  %1138 = add i32 %1137, %1133
  %1139 = add i32 %1138, %1136
  %1140 = load i32, i32* %1104, align 4
  %1141 = and i32 %1140, 251658240
  %1142 = icmp eq i32 %1141, 251658240
  %1143 = ptrtoint %"class.v8::internal::compiler::Node"* %1097 to i64
  %1144 = add i64 %1143, 32
  br i1 %1142, label %1145, label %1149

1145:                                             ; preds = %1128
  %1146 = inttoptr i64 %1144 to i64*
  %1147 = load i64, i64* %1146, align 8
  %1148 = add i64 %1147, 16
  br label %1149

1149:                                             ; preds = %1128, %1145
  %1150 = phi i64 [ %1148, %1145 ], [ %1144, %1128 ]
  %1151 = inttoptr i64 %1150 to %"class.v8::internal::compiler::Node"**
  %1152 = sext i32 %1139 to i64
  %1153 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1151, i64 %1152
  %1154 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1153, align 8
  %1155 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1154, i64 0, i32 0
  %1156 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %1155, align 8
  %1157 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1156, i64 0, i32 2
  %1158 = load i16, i16* %1157, align 8
  switch i16 %1158, label %1159 [
    i16 10, label %1160
    i16 1, label %1160
  ], !prof !16

1159:                                             ; preds = %1149
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.96, i64 0, i64 0)) #12
  unreachable

1160:                                             ; preds = %1149, %1149
  %1161 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1081, align 8
  %1162 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::Node"* %1154) #11
  %1163 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %1161, %1162
  br i1 %1163, label %1164, label %1166, !prof !2

1164:                                             ; preds = %1160
  %1165 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1081, align 8
  br label %1167

1166:                                             ; preds = %1160
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.97, i64 0, i64 0)) #12
  unreachable

1167:                                             ; preds = %1164, %1118, %1094
  %1168 = phi %"class.v8::internal::compiler::BasicBlock"* [ %1165, %1164 ], [ %1095, %1118 ], [ %1095, %1094 ]
  %1169 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1096, i64 1
  %1170 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1168, i64 0, i32 11, i32 0, i32 0, i32 1
  %1171 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1170, align 8
  %1172 = icmp eq %"class.v8::internal::compiler::Node"** %1169, %1171
  br i1 %1172, label %1088, label %1094

1173:                                             ; preds = %1203, %916, %1076
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %128) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN2v88internal4ZoneD1Ev(%"class.v8::internal::Zone"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #11
  ret void

1174:                                             ; preds = %1076, %1203
  %1175 = phi %"class.v8::internal::compiler::BasicBlock"** [ %1204, %1203 ], [ %1077, %1076 ]
  %1176 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1175, align 8
  %1177 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1176, i64 0, i32 10
  %1178 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1177, align 8
  %1179 = icmp eq %"class.v8::internal::compiler::Node"* %1178, null
  br i1 %1179, label %1195, label %1180

1180:                                             ; preds = %1174
  %1181 = call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::Node"* nonnull %1178) #11
  %1182 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %1176, %1181
  br i1 %1182, label %1184, label %1183, !prof !2

1183:                                             ; preds = %1180
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98, i64 0, i64 0)) #12
  unreachable

1184:                                             ; preds = %1180
  %1185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1176, i64 0, i32 11, i32 0
  %1186 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1176, i64 0, i32 11, i32 0, i32 0, i32 1
  %1187 = bitcast %"class.v8::internal::compiler::Node"*** %1186 to i64*
  %1188 = load i64, i64* %1187, align 8
  %1189 = bitcast %"class.std::__1::vector"* %1185 to i64*
  %1190 = load i64, i64* %1189, align 8
  %1191 = sub i64 %1188, %1190
  %1192 = lshr exact i64 %1191, 3
  %1193 = trunc i64 %1192 to i32
  %1194 = add nsw i32 %1193, -1
  call fastcc void @_ZN2v88internal8compilerL19CheckInputsDominateEPNS1_8ScheduleEPNS1_10BasicBlockEPNS1_4NodeEi(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %1176, %"class.v8::internal::compiler::Node"* nonnull %1178, i32 %1194)
  br label %1195

1195:                                             ; preds = %1174, %1184
  %1196 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1176, i64 0, i32 11, i32 0
  %1197 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1176, i64 0, i32 11, i32 0, i32 0, i32 1
  %1198 = bitcast %"class.v8::internal::compiler::Node"*** %1197 to i64*
  %1199 = load i64, i64* %1198, align 8
  %1200 = bitcast %"class.std::__1::vector"* %1196 to i64*
  %1201 = load i64, i64* %1200, align 8
  %1202 = icmp eq i64 %1199, %1201
  br i1 %1202, label %1203, label %1207

1203:                                             ; preds = %1207, %1195
  %1204 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %1175, i64 1
  %1205 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, align 8
  %1206 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %1204, %1205
  br i1 %1206, label %1173, label %1174

1207:                                             ; preds = %1195, %1207
  %1208 = phi i64 [ %1217, %1207 ], [ %1201, %1195 ]
  %1209 = phi i64 [ %1215, %1207 ], [ 0, %1195 ]
  %1210 = inttoptr i64 %1208 to %"class.v8::internal::compiler::Node"**
  %1211 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1210, i64 %1209
  %1212 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1211, align 8
  %1213 = trunc i64 %1209 to i32
  %1214 = add nsw i32 %1213, -1
  call fastcc void @_ZN2v88internal8compilerL19CheckInputsDominateEPNS1_8ScheduleEPNS1_10BasicBlockEPNS1_4NodeEi(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::BasicBlock"* %1176, %"class.v8::internal::compiler::Node"* %1212, i32 %1214)
  %1215 = add nuw i64 %1209, 1
  %1216 = load i64, i64* %1198, align 8
  %1217 = load i64, i64* %1200, align 8
  %1218 = sub i64 %1216, %1217
  %1219 = ashr exact i64 %1218, 3
  %1220 = icmp ult i64 %1215, %1219
  br i1 %1220, label %1207, label %1203
}

declare %"class.v8::internal::compiler::BasicBlock"* @_ZN2v88internal8compiler8Schedule12GetBlockByIdENS1_10BasicBlock2IdE(%"class.v8::internal::compiler::Schedule"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::BitVector"* @_ZN2v88internal4Zone3NewINS0_9BitVectorEJiRPS1_EEEPT_DpOT0_(%"class.v8::internal::Zone"*, i32* dereferenceable(4), %"class.v8::internal::Zone"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = icmp ult i64 %8, 16
  br i1 %9, label %10, label %12, !prof !6

10:                                               ; preds = %3
  %11 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %0, i64 16) #11
  br label %14

12:                                               ; preds = %3
  %13 = add i64 %5, 16
  store i64 %13, i64* %4, align 8
  br label %14

14:                                               ; preds = %10, %12
  %15 = phi i64 [ %11, %10 ], [ %5, %12 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::BitVector"*
  %17 = load i32, i32* %1, align 4
  %18 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2, align 8
  %19 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 0
  store i32 %17, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 1
  %21 = icmp slt i32 %17, 65
  br i1 %21, label %22, label %25

22:                                               ; preds = %14
  store i32 1, i32* %20, align 4
  %23 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %24 = bitcast %"union.v8::internal::BitVector::DataStorage"* %23 to i64*
  store i64 0, i64* %24, align 8
  br label %64

25:                                               ; preds = %14
  %26 = add nsw i32 %17, -1
  %27 = sdiv i32 %26, 64
  %28 = add nuw nsw i32 %27, 1
  store i32 %28, i32* %20, align 4
  %29 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2
  %30 = bitcast %"union.v8::internal::BitVector::DataStorage"* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = sext i32 %28 to i64
  %32 = shl nsw i64 %31, 3
  %33 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 2
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %18, i64 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %36, %34
  %38 = icmp ugt i64 %32, %37
  br i1 %38, label %39, label %41, !prof !6

39:                                               ; preds = %25
  %40 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %18, i64 %32) #11
  br label %43

41:                                               ; preds = %25
  %42 = add i64 %34, %32
  store i64 %42, i64* %33, align 8
  br label %43

43:                                               ; preds = %41, %39
  %44 = phi i64 [ %40, %39 ], [ %34, %41 ]
  %45 = inttoptr i64 %44 to i64*
  %46 = getelementptr inbounds %"union.v8::internal::BitVector::DataStorage", %"union.v8::internal::BitVector::DataStorage"* %29, i64 0, i32 0
  store i64* %45, i64** %46, align 8
  %47 = load i32, i32* %20, align 4
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = icmp sgt i32 %47, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::BitVector", %"class.v8::internal::BitVector"* %16, i64 0, i32 2, i32 0
  store i64 0, i64* %45, align 8
  %53 = load i32, i32* %20, align 4
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %56, label %64

55:                                               ; preds = %43
  store i64 0, i64* %30, align 8
  br label %64

56:                                               ; preds = %51, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %51 ]
  %58 = load i64*, i64** %52, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 0, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %20, align 4
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %64

64:                                               ; preds = %56, %51, %22, %49, %55
  ret %"class.v8::internal::BitVector"* %16
}

declare %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal8compilerL19CheckInputsDominateEPNS1_8ScheduleEPNS1_10BasicBlockEPNS1_4NodeEi(%"class.v8::internal::compiler::Schedule"*, %"class.v8::internal::compiler::BasicBlock"* nocapture readonly, %"class.v8::internal::compiler::Node"*, i32) unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %130

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %12 = load i16, i16* %11, align 8
  %13 = icmp eq i16 %12, 35
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %19 = add i64 %18, 32
  %20 = inttoptr i64 %19 to %"class.v8::internal::compiler::Node"**
  %21 = inttoptr i64 %19 to i64*
  br i1 %13, label %22, label %83

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 13, i32 0, i32 0, i32 0
  %24 = sext i32 %8 to i64
  %25 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, align 8
  br label %26

26:                                               ; preds = %22, %81
  %27 = phi i64 [ %24, %22 ], [ %28, %81 ]
  %28 = add nsw i64 %27, -1
  %29 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %25, i64 %28
  %30 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 11, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %30, i64 0, i32 11, i32 0, i32 0, i32 1
  %33 = bitcast %"class.v8::internal::compiler::Node"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::vector"* %31 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  br i1 %17, label %38, label %42

38:                                               ; preds = %26
  %39 = load i64, i64* %21, align 8
  %40 = add i64 %39, 16
  %41 = inttoptr i64 %40 to %"class.v8::internal::compiler::Node"**
  br label %42

42:                                               ; preds = %26, %38
  %43 = phi %"class.v8::internal::compiler::Node"** [ %41, %38 ], [ %20, %26 ]
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, i64 %28
  %45 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, align 8
  br label %46

46:                                               ; preds = %70, %42
  %47 = phi i64 [ %37, %42 ], [ %77, %70 ]
  %48 = phi %"class.v8::internal::compiler::BasicBlock"* [ %30, %42 ], [ %68, %70 ]
  %49 = lshr exact i64 %47, 3
  %50 = trunc i64 %49 to i32
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %52, label %66

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 11, i32 0, i32 0, i32 0
  %54 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %53, align 8
  %55 = shl i64 %47, 29
  %56 = add i64 %55, -4294967296
  %57 = ashr exact i64 %56, 32
  br label %58

58:                                               ; preds = %63, %52
  %59 = phi i64 [ %57, %52 ], [ %64, %63 ]
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %54, i64 %59
  %61 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %60, align 8
  %62 = icmp eq %"class.v8::internal::compiler::Node"* %61, %45
  br i1 %62, label %81, label %63

63:                                               ; preds = %58
  %64 = add nsw i64 %59, -1
  %65 = icmp sgt i64 %59, 0
  br i1 %65, label %58, label %66

66:                                               ; preds = %63, %46
  %67 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %48, i64 0, i32 4
  %68 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %68, null
  br i1 %69, label %175, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 11, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 11, i32 0, i32 0, i32 1
  %73 = bitcast %"class.v8::internal::compiler::Node"*** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector"* %71 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = sub i64 %74, %76
  %78 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %68, i64 0, i32 10
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = icmp eq %"class.v8::internal::compiler::Node"* %79, %45
  br i1 %80, label %81, label %46

81:                                               ; preds = %70, %58
  %82 = icmp sgt i64 %28, 0
  br i1 %82, label %26, label %130

83:                                               ; preds = %10
  %84 = sext i32 %8 to i64
  br i1 %17, label %85, label %134

85:                                               ; preds = %83
  %86 = load i64, i64* %21, align 8
  %87 = add i64 %86, 16
  %88 = inttoptr i64 %87 to %"class.v8::internal::compiler::Node"**
  br label %89

89:                                               ; preds = %85, %128
  %90 = phi i64 [ %84, %85 ], [ %91, %128 ]
  %91 = add nsw i64 %90, -1
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %88, i64 %91
  %93 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %92, align 8
  br label %94

94:                                               ; preds = %114, %89
  %95 = phi i32 [ %3, %89 ], [ %124, %114 ]
  %96 = phi %"class.v8::internal::compiler::BasicBlock"* [ %1, %89 ], [ %112, %114 ]
  %97 = icmp sgt i32 %95, -1
  br i1 %97, label %98, label %110

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %96, i64 0, i32 11, i32 0, i32 0, i32 0
  %100 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, align 8
  %101 = sext i32 %95 to i64
  br label %102

102:                                              ; preds = %107, %98
  %103 = phi i64 [ %101, %98 ], [ %108, %107 ]
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %100, i64 %103
  %105 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %104, align 8
  %106 = icmp eq %"class.v8::internal::compiler::Node"* %105, %93
  br i1 %106, label %128, label %107

107:                                              ; preds = %102
  %108 = add nsw i64 %103, -1
  %109 = icmp sgt i64 %103, 0
  br i1 %109, label %102, label %110

110:                                              ; preds = %107, %94
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %96, i64 0, i32 4
  %112 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, align 8
  %113 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %112, null
  br i1 %113, label %178, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %112, i64 0, i32 11, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %112, i64 0, i32 11, i32 0, i32 0, i32 1
  %117 = bitcast %"class.v8::internal::compiler::Node"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.std::__1::vector"* %115 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %118, %120
  %122 = lshr exact i64 %121, 3
  %123 = trunc i64 %122 to i32
  %124 = add nsw i32 %123, -1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %112, i64 0, i32 10
  %126 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, align 8
  %127 = icmp eq %"class.v8::internal::compiler::Node"* %126, %93
  br i1 %127, label %128, label %94

128:                                              ; preds = %114, %102
  %129 = icmp sgt i64 %91, 0
  br i1 %129, label %89, label %130

130:                                              ; preds = %173, %128, %81, %4
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 7
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %194, label %251

134:                                              ; preds = %83, %173
  %135 = phi i64 [ %136, %173 ], [ %84, %83 ]
  %136 = add nsw i64 %135, -1
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %20, i64 %136
  %138 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, align 8
  br label %139

139:                                              ; preds = %159, %134
  %140 = phi i32 [ %3, %134 ], [ %169, %159 ]
  %141 = phi %"class.v8::internal::compiler::BasicBlock"* [ %1, %134 ], [ %157, %159 ]
  %142 = icmp sgt i32 %140, -1
  br i1 %142, label %143, label %155

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %141, i64 0, i32 11, i32 0, i32 0, i32 0
  %145 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %144, align 8
  %146 = sext i32 %140 to i64
  br label %150

147:                                              ; preds = %150
  %148 = add nsw i64 %151, -1
  %149 = icmp sgt i64 %151, 0
  br i1 %149, label %150, label %155

150:                                              ; preds = %147, %143
  %151 = phi i64 [ %146, %143 ], [ %148, %147 ]
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 %151
  %153 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, align 8
  %154 = icmp eq %"class.v8::internal::compiler::Node"* %153, %138
  br i1 %154, label %173, label %147

155:                                              ; preds = %147, %139
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %141, i64 0, i32 4
  %157 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %156, align 8
  %158 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %157, null
  br i1 %158, label %178, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %157, i64 0, i32 11, i32 0
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %157, i64 0, i32 11, i32 0, i32 0, i32 1
  %162 = bitcast %"class.v8::internal::compiler::Node"*** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::__1::vector"* %160 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %163, %165
  %167 = lshr exact i64 %166, 3
  %168 = trunc i64 %167 to i32
  %169 = add nsw i32 %168, -1
  %170 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %157, i64 0, i32 10
  %171 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %170, align 8
  %172 = icmp eq %"class.v8::internal::compiler::Node"* %171, %138
  br i1 %172, label %173, label %139

173:                                              ; preds = %159, %150
  %174 = icmp sgt i64 %136, 0
  br i1 %174, label %134, label %130

175:                                              ; preds = %66
  %176 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, i64 %28
  %177 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, align 8
  br label %178

178:                                              ; preds = %155, %110, %175
  %179 = phi %"class.v8::internal::compiler::Node"* [ %177, %175 ], [ %93, %110 ], [ %138, %155 ]
  %180 = phi i64 [ %28, %175 ], [ %91, %110 ], [ %136, %155 ]
  %181 = trunc i64 %180 to i32
  %182 = and i32 %15, 16777215
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 1
  %184 = load i8*, i8** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 3
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %188, 16777215
  %190 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %179, i64 0, i32 0
  %191 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %190, align 8
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %191, i64 0, i32 1
  %193 = load i8*, i8** %192, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.119, i64 0, i64 0), i32 %182, i8* %184, i32 %186, i32 %181, i32 %189, i8* %193) #12
  unreachable

194:                                              ; preds = %130
  %195 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %6, i64 0, i32 2
  %196 = load i16, i16* %195, align 8
  %197 = icmp eq i16 %196, 21
  br i1 %197, label %251, label %198

198:                                              ; preds = %194
  %199 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %6) #11
  %200 = zext i1 %199 to i32
  %201 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %202 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %201) #11
  %203 = zext i1 %202 to i32
  %204 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %204, i64 0, i32 6
  %206 = load i32, i32* %205, align 8
  %207 = add i32 %8, %200
  %208 = add i32 %207, %203
  %209 = add i32 %208, %206
  %210 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %211 = load i32, i32* %210, align 4
  %212 = and i32 %211, 251658240
  %213 = icmp eq i32 %212, 251658240
  %214 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %215 = add i64 %214, 32
  br i1 %213, label %216, label %220

216:                                              ; preds = %198
  %217 = inttoptr i64 %215 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = add i64 %218, 16
  br label %220

220:                                              ; preds = %198, %216
  %221 = phi i64 [ %219, %216 ], [ %215, %198 ]
  %222 = inttoptr i64 %221 to %"class.v8::internal::compiler::Node"**
  %223 = sext i32 %209 to i64
  %224 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %222, i64 %223
  %225 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %224, align 8
  %226 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::Node"* %225) #11
  %227 = tail call %"class.v8::internal::compiler::BasicBlock"* @_ZNK2v88internal8compiler8Schedule5blockEPNS1_4NodeE(%"class.v8::internal::compiler::Schedule"* %0, %"class.v8::internal::compiler::Node"* %2) #11
  %228 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %227, null
  br i1 %228, label %236, label %229

229:                                              ; preds = %220, %232
  %230 = phi %"class.v8::internal::compiler::BasicBlock"* [ %234, %232 ], [ %227, %220 ]
  %231 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %230, %226
  br i1 %231, label %251, label %232

232:                                              ; preds = %229
  %233 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %230, i64 0, i32 4
  %234 = load %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %233, align 8
  %235 = icmp eq %"class.v8::internal::compiler::BasicBlock"* %234, null
  br i1 %235, label %236, label %229

236:                                              ; preds = %232, %220
  %237 = load i32, i32* %210, align 4
  %238 = and i32 %237, 16777215
  %239 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %5, align 8
  %240 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %239, i64 0, i32 1
  %241 = load i8*, i8** %240, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock", %"class.v8::internal::compiler::BasicBlock"* %1, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %225, i64 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = and i32 %245, 16777215
  %247 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %225, i64 0, i32 0
  %248 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %247, align 8
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %248, i64 0, i32 1
  %250 = load i8*, i8** %249, align 8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.120, i64 0, i64 0), i32 %238, i8* %241, i32 %243, i32 %246, i8* %250) #12
  unreachable

251:                                              ; preds = %229, %194, %130
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_8OperatorE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::Operator"* dereferenceable(48)) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #3

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #13
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_4TypeE(%"class.std::__1::basic_ostream"* dereferenceable(160), i64) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_8IrOpcode5ValueE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal8compiler4Type6SlowIsES2_(%"class.v8::internal::compiler::Type"*, i64) local_unnamed_addr #3

declare dereferenceable(24) %"class.v8::internal::compiler::FrameStateInfo"* @_ZN2v88internal8compiler16FrameStateInfoOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #3

declare i32 @_ZN2v88internal8compiler10BitsetType11SignedSmallEv() local_unnamed_addr #3

declare i32 @_ZN2v88internal8compiler10BitsetType13UnsignedSmallEv() local_unnamed_addr #3

declare double @_ZNK2v88internal8compiler4Type3MinEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #3

declare double @_ZNK2v88internal8compiler4Type3MaxEv(%"class.v8::internal::compiler::Type"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 9
  %7 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %8, align 8
  %10 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %9, %3
  %11 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %9 to i64
  %12 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  %17 = and i64 %5, 511
  %18 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 9
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %3, i64 %22
  %24 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, align 8
  %25 = and i64 %21, 511
  %26 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %24, i64 %25
  %27 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %26, %18
  br i1 %27, label %28, label %39

28:                                               ; preds = %52, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %52 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %36 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %35 to i64*
  %37 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %35 to %"class.v8::internal::compiler::BasicBlock"***
  %38 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %35, align 8
  br label %57

39:                                               ; preds = %15, %52
  %40 = phi %"class.v8::internal::compiler::BasicBlock"** [ %55, %52 ], [ %18, %15 ]
  %41 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %53, %52 ], [ %7, %15 ]
  %42 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %40, i64 1
  %43 = ptrtoint %"class.v8::internal::compiler::BasicBlock"** %42 to i64
  %44 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = icmp eq i64 %46, 4096
  br i1 %47, label %48, label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %41, i64 1
  %50 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %49 to i64*
  %51 = load i64, i64* %50, align 8
  br label %52

52:                                               ; preds = %48, %39
  %53 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %49, %48 ], [ %41, %39 ]
  %54 = phi i64 [ %51, %48 ], [ %43, %39 ]
  %55 = inttoptr i64 %54 to %"class.v8::internal::compiler::BasicBlock"**
  %56 = icmp eq %"class.v8::internal::compiler::BasicBlock"** %26, %55
  br i1 %56, label %28, label %39

57:                                               ; preds = %78, %34
  %58 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %9, %34 ], [ %79, %78 ]
  %59 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %9, %34 ], [ %80, %78 ]
  %60 = phi i64 [ %11, %34 ], [ %81, %78 ]
  %61 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %38, %34 ], [ %83, %78 ]
  %62 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %3, %34 ], [ %84, %78 ]
  %63 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %62, align 8
  %64 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %61, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %61, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = icmp ugt i64 %67, 512
  br i1 %68, label %78, label %69

69:                                               ; preds = %65, %57
  %70 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %63, i64 1
  %71 = bitcast %"class.v8::internal::compiler::BasicBlock"** %70 to i64*
  store i64 512, i64* %71, align 8
  %72 = load i64, i64* %36, align 8
  %73 = bitcast %"class.v8::internal::compiler::BasicBlock"** %63 to i64*
  store i64 %72, i64* %73, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %63, %"class.v8::internal::compiler::BasicBlock"*** %37, align 8
  %74 = bitcast %"class.v8::internal::compiler::BasicBlock"** %63 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  %75 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %2, align 8
  %76 = load i64, i64* %30, align 8
  %77 = inttoptr i64 %76 to %"class.v8::internal::compiler::BasicBlock"***
  br label %78

78:                                               ; preds = %69, %65
  %79 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %58, %65 ], [ %77, %69 ]
  %80 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %59, %65 ], [ %77, %69 ]
  %81 = phi i64 [ %60, %65 ], [ %76, %69 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %62, %65 ], [ %75, %69 ]
  %83 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %61, %65 ], [ %74, %69 ]
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %84, %"class.v8::internal::compiler::BasicBlock"**** %2, align 8
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %86 = sub i64 %81, %85
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %87, 2
  br i1 %88, label %57, label %89

89:                                               ; preds = %78, %28
  %90 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %9, %28 ], [ %79, %78 ]
  %91 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %9, %28 ], [ %80, %78 ]
  %92 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %3, %28 ], [ %84, %78 ]
  %93 = phi i64 [ %32, %28 ], [ %87, %78 ]
  %94 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %92 to i64
  switch i64 %93, label %98 [
    i64 1, label %96
    i64 2, label %95
  ]

95:                                               ; preds = %89
  br label %96

96:                                               ; preds = %89, %95
  %97 = phi i64 [ 512, %95 ], [ 256, %89 ]
  store i64 %97, i64* %4, align 8
  br label %98

98:                                               ; preds = %96, %89
  %99 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %92, %91
  br i1 %99, label %153, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %102 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %101 to i64*
  %103 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %101 to %"class.v8::internal::compiler::BasicBlock"***
  %104 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %101, align 8
  %105 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %91, i64 -1
  %106 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %105 to i64
  %107 = sub i64 %106, %94
  %108 = and i64 %107, 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %126

110:                                              ; preds = %100
  %111 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %92, align 8
  %112 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %104, null
  br i1 %112, label %117, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %104, i64 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp ugt i64 %115, 512
  br i1 %116, label %123, label %117

117:                                              ; preds = %113, %110
  %118 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %111, i64 1
  %119 = bitcast %"class.v8::internal::compiler::BasicBlock"** %118 to i64*
  store i64 512, i64* %119, align 8
  %120 = load i64, i64* %102, align 8
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"** %111 to i64*
  store i64 %120, i64* %121, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %111, %"class.v8::internal::compiler::BasicBlock"*** %103, align 8
  %122 = bitcast %"class.v8::internal::compiler::BasicBlock"** %111 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %123

123:                                              ; preds = %117, %113
  %124 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %104, %113 ], [ %122, %117 ]
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %92, i64 1
  br label %126

126:                                              ; preds = %123, %100
  %127 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %104, %100 ], [ %124, %123 ]
  %128 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %92, %100 ], [ %125, %123 ]
  %129 = icmp ult i64 %107, 8
  br i1 %129, label %150, label %130

130:                                              ; preds = %126, %203
  %131 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %204, %203 ], [ %127, %126 ]
  %132 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %205, %203 ], [ %128, %126 ]
  %133 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %132, align 8
  %134 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %131, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %131, i64 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = icmp ugt i64 %137, 512
  br i1 %138, label %145, label %139

139:                                              ; preds = %135, %130
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %133, i64 1
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"** %140 to i64*
  store i64 512, i64* %141, align 8
  %142 = load i64, i64* %102, align 8
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"** %133 to i64*
  store i64 %142, i64* %143, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %133, %"class.v8::internal::compiler::BasicBlock"*** %103, align 8
  %144 = bitcast %"class.v8::internal::compiler::BasicBlock"** %133 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %145

145:                                              ; preds = %135, %139
  %146 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %131, %135 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %132, i64 1
  %148 = load %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %147, align 8
  %149 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %146, null
  br i1 %149, label %197, label %193

150:                                              ; preds = %203, %126
  %151 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %2, align 8
  %152 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %8, align 8
  br label %153

153:                                              ; preds = %150, %98
  %154 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %152, %150 ], [ %90, %98 ]
  %155 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %151, %150 ], [ %91, %98 ]
  %156 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %154, %155
  br i1 %156, label %165, label %157

157:                                              ; preds = %153
  %158 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %155 to i64
  %159 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %154, i64 -1
  %160 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %159 to i64
  %161 = sub i64 %160, %158
  %162 = lshr i64 %161, 3
  %163 = xor i64 %162, -1
  %164 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %154, i64 %163
  store %"class.v8::internal::compiler::BasicBlock"*** %164, %"class.v8::internal::compiler::BasicBlock"**** %8, align 8
  br label %165

165:                                              ; preds = %157, %153
  %166 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %167 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %166, align 8
  %168 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %167, null
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %167 to i64
  %171 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = sub i64 %173, %170
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %179 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %178, align 8
  %180 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %179, null
  br i1 %180, label %185, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %179, i64 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %183, %175
  br i1 %184, label %192, label %185

185:                                              ; preds = %181, %177
  %186 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %167, i64 1
  %187 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %186 to i64*
  store i64 %175, i64* %187, align 8
  %188 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %178 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %167 to i64*
  store i64 %189, i64* %190, align 8
  %191 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %178 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %167, %"class.v8::internal::compiler::BasicBlock"**** %191, align 8
  br label %192

192:                                              ; preds = %165, %169, %181, %185
  ret void

193:                                              ; preds = %145
  %194 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %146, i64 0, i32 1
  %195 = load i64, i64* %194, align 8
  %196 = icmp ugt i64 %195, 512
  br i1 %196, label %203, label %197

197:                                              ; preds = %193, %145
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"*, %"class.v8::internal::compiler::BasicBlock"** %148, i64 1
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"** %198 to i64*
  store i64 512, i64* %199, align 8
  %200 = load i64, i64* %102, align 8
  %201 = bitcast %"class.v8::internal::compiler::BasicBlock"** %148 to i64*
  store i64 %200, i64* %201, align 8
  store %"class.v8::internal::compiler::BasicBlock"** %148, %"class.v8::internal::compiler::BasicBlock"*** %103, align 8
  %202 = bitcast %"class.v8::internal::compiler::BasicBlock"** %148 to %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*
  br label %203

203:                                              ; preds = %197, %193
  %204 = phi %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* [ %146, %193 ], [ %202, %197 ]
  %205 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %132, i64 2
  %206 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %205, %91
  br i1 %206, label %150, label %130
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #9

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %50

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %68

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %4
  br i1 %49, label %155, label %28

50:                                               ; preds = %26, %63
  %51 = phi %"struct.std::__1::__hash_node_base"* [ %53, %63 ], [ %24, %26 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  %60 = and i64 %58, %27
  %61 = icmp eq i64 %60, %20
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %4
  br i1 %67, label %155, label %50

68:                                               ; preds = %55, %50, %42, %28, %19, %3
  %69 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %28 ], [ %20, %42 ], [ %20, %50 ], [ %20, %55 ]
  %70 = tail call i8* @_Znwm(i64 24) #13, !noalias !17
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %2, align 4, !noalias !17
  store i32 %73, i32* %72, align 4, !noalias !17
  %74 = getelementptr inbounds i8, i8* %70, i64 8
  %75 = bitcast i8* %74 to i64*
  store i64 %5, i64* %75, align 8, !noalias !17
  %76 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %76, align 8, !noalias !17
  %77 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = uitofp i64 %79 to float
  %81 = uitofp i64 %7 to float
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %81
  %85 = fcmp olt float %84, %80
  %86 = or i1 %8, %85
  br i1 %86, label %87, label %110

87:                                               ; preds = %68
  %88 = shl i64 %7, 1
  %89 = icmp ult i64 %7, 3
  %90 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !8
  %91 = icmp ugt i64 %90, 1
  %92 = or i1 %89, %91
  %93 = zext i1 %92 to i64
  %94 = or i64 %88, %93
  %95 = fdiv float %80, %83
  %96 = tail call float @llvm.ceil.f32(float %95) #11
  %97 = fptoui float %96 to i64
  %98 = icmp ult i64 %94, %97
  %99 = select i1 %98, i64 %97, i64 %94
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %99)
  %100 = load i64, i64* %6, align 8
  %101 = tail call i64 @llvm.ctpop.i64(i64 %100) #11, !range !8
  %102 = icmp ugt i64 %101, 1
  br i1 %102, label %106, label %103

103:                                              ; preds = %87
  %104 = add i64 %100, -1
  %105 = and i64 %104, %5
  br label %110

106:                                              ; preds = %87
  %107 = icmp ugt i64 %100, %5
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = urem i64 %5, %100
  br label %110

110:                                              ; preds = %108, %106, %103, %68
  %111 = phi i64 [ %7, %68 ], [ %100, %103 ], [ %100, %106 ], [ %100, %108 ]
  %112 = phi i64 [ %69, %68 ], [ %105, %103 ], [ %5, %106 ], [ %109, %108 ]
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, i64 %112
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %118, label %144

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast i8* %70 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i8**
  store i8* %70, i8** %123, align 8
  store %"struct.std::__1::__hash_node_base"* %119, %"struct.std::__1::__hash_node_base"** %115, align 8
  %124 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base"* %124, null
  br i1 %125, label %151, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = tail call i64 @llvm.ctpop.i64(i64 %111) #11, !range !8
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = add i64 %111, -1
  %134 = and i64 %129, %133
  br label %139

135:                                              ; preds = %126
  %136 = icmp ult i64 %129, %111
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %129, %111
  br label %139

139:                                              ; preds = %132, %135, %137
  %140 = phi i64 [ %134, %132 ], [ %138, %137 ], [ %129, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %113, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %140
  %143 = bitcast %"struct.std::__1::__hash_node_base"** %142 to i8**
  br label %149

144:                                              ; preds = %110
  %145 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast i8* %70 to i64*
  store i64 %146, i64* %147, align 8
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i8**
  br label %149

149:                                              ; preds = %139, %144
  %150 = phi i8** [ %148, %144 ], [ %143, %139 ]
  store i8* %70, i8** %150, align 8
  br label %151

151:                                              ; preds = %149, %118
  %152 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"*
  %153 = load i64, i64* %77, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %77, align 8
  br label %155

155:                                              ; preds = %63, %45, %151
  %156 = phi i8 [ 1, %151 ], [ 0, %45 ], [ 0, %63 ]
  %157 = phi %"struct.std::__1::__hash_node_base"* [ %152, %151 ], [ %31, %45 ], [ %53, %63 ]
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %157, 0
  %159 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %158, i8 %156, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !8
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !8
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !8
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !20

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !8
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !8
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %50

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %68

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %4
  br i1 %49, label %155, label %28

50:                                               ; preds = %26, %63
  %51 = phi %"struct.std::__1::__hash_node_base"* [ %53, %63 ], [ %24, %26 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  %60 = and i64 %58, %27
  %61 = icmp eq i64 %60, %20
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %4
  br i1 %67, label %155, label %50

68:                                               ; preds = %55, %50, %42, %28, %19, %3
  %69 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %28 ], [ %20, %42 ], [ %20, %50 ], [ %20, %55 ]
  %70 = tail call i8* @_Znwm(i64 24) #13, !noalias !21
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %2, align 4, !noalias !21
  store i32 %73, i32* %72, align 4, !noalias !21
  %74 = getelementptr inbounds i8, i8* %70, i64 8
  %75 = bitcast i8* %74 to i64*
  store i64 %5, i64* %75, align 8, !noalias !21
  %76 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %76, align 8, !noalias !21
  %77 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = uitofp i64 %79 to float
  %81 = uitofp i64 %7 to float
  %82 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %81
  %85 = fcmp olt float %84, %80
  %86 = or i1 %8, %85
  br i1 %86, label %87, label %110

87:                                               ; preds = %68
  %88 = shl i64 %7, 1
  %89 = icmp ult i64 %7, 3
  %90 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !8
  %91 = icmp ugt i64 %90, 1
  %92 = or i1 %89, %91
  %93 = zext i1 %92 to i64
  %94 = or i64 %88, %93
  %95 = fdiv float %80, %83
  %96 = tail call float @llvm.ceil.f32(float %95) #11
  %97 = fptoui float %96 to i64
  %98 = icmp ult i64 %94, %97
  %99 = select i1 %98, i64 %97, i64 %94
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %99)
  %100 = load i64, i64* %6, align 8
  %101 = tail call i64 @llvm.ctpop.i64(i64 %100) #11, !range !8
  %102 = icmp ugt i64 %101, 1
  br i1 %102, label %106, label %103

103:                                              ; preds = %87
  %104 = add i64 %100, -1
  %105 = and i64 %104, %5
  br label %110

106:                                              ; preds = %87
  %107 = icmp ugt i64 %100, %5
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = urem i64 %5, %100
  br label %110

110:                                              ; preds = %108, %106, %103, %68
  %111 = phi i64 [ %7, %68 ], [ %100, %103 ], [ %100, %106 ], [ %100, %108 ]
  %112 = phi i64 [ %69, %68 ], [ %105, %103 ], [ %5, %106 ], [ %109, %108 ]
  %113 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, i64 %112
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %118, label %144

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast i8* %70 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i8**
  store i8* %70, i8** %123, align 8
  store %"struct.std::__1::__hash_node_base"* %119, %"struct.std::__1::__hash_node_base"** %115, align 8
  %124 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %76, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base"* %124, null
  br i1 %125, label %151, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = tail call i64 @llvm.ctpop.i64(i64 %111) #11, !range !8
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = add i64 %111, -1
  %134 = and i64 %129, %133
  br label %139

135:                                              ; preds = %126
  %136 = icmp ult i64 %129, %111
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %129, %111
  br label %139

139:                                              ; preds = %132, %135, %137
  %140 = phi i64 [ %134, %132 ], [ %138, %137 ], [ %129, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %113, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %140
  %143 = bitcast %"struct.std::__1::__hash_node_base"** %142 to i8**
  br label %149

144:                                              ; preds = %110
  %145 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast i8* %70 to i64*
  store i64 %146, i64* %147, align 8
  %148 = bitcast %"struct.std::__1::__hash_node_base"* %116 to i8**
  br label %149

149:                                              ; preds = %139, %144
  %150 = phi i8** [ %148, %144 ], [ %143, %139 ]
  store i8* %70, i8** %150, align 8
  br label %151

151:                                              ; preds = %149, %118
  %152 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base"*
  %153 = load i64, i64* %77, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %77, align 8
  br label %155

155:                                              ; preds = %63, %45, %151
  %156 = phi i8 [ 1, %151 ], [ 0, %45 ], [ 0, %63 ]
  %157 = phi %"struct.std::__1::__hash_node_base"* [ %152, %151 ], [ %31, %45 ], [ %53, %63 ]
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %157, 0
  %159 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %158, i8 %156, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %159
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEEC2EmRKbRKS4_(%"class.std::__1::vector.12"*, i64, i8* dereferenceable(1), %"class.v8::internal::ZoneAllocator.77"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 1
  %7 = bitcast %"class.v8::internal::ZoneAllocator.77"* %3 to i64*
  %8 = bitcast %"class.std::__1::vector.12"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %0, i64 0, i32 2, i32 1
  %12 = bitcast %"struct.std::__1::__compressed_pair_elem.15"* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = icmp eq i64 %1, 0
  %14 = inttoptr i64 %9 to %"class.v8::internal::Zone"*
  br i1 %13, label %68, label %15

15:                                               ; preds = %4
  %16 = icmp ugt i64 %1, 17179869120
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector.12"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #12
  unreachable

19:                                               ; preds = %15
  %20 = add nsw i64 %1, -1
  %21 = lshr i64 %20, 6
  %22 = add nuw nsw i64 %21, 1
  %23 = shl nuw nsw i64 %22, 3
  %24 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 2
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %14, i64 0, i32 3
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %25
  %29 = icmp ugt i64 %23, %28
  br i1 %29, label %30, label %32, !prof !6

30:                                               ; preds = %19
  %31 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %14, i64 %23) #11
  br label %34

32:                                               ; preds = %19
  %33 = add i64 %25, %23
  store i64 %33, i64* %24, align 8
  br label %34

34:                                               ; preds = %32, %30
  %35 = phi i64 [ %31, %30 ], [ %25, %32 ]
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %5, align 8
  store i64 0, i64* %6, align 8
  store i64 %22, i64* %10, align 8
  %37 = load i8, i8* %2, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  store i64 %1, i64* %6, align 8
  %39 = icmp ult i64 %1, 65
  %40 = getelementptr inbounds i64, i64* %36, i64 %21
  %41 = select i1 %39, i64* %36, i64* %40
  store i64 0, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector.12"* %0 to i64*
  %43 = load i64, i64* %42, align 8, !noalias !24
  %44 = inttoptr i64 %43 to i8*
  %45 = lshr i64 %1, 6
  %46 = shl nuw nsw i64 %45, 3
  br i1 %38, label %57, label %47

47:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 -1, i64 %46, i1 false) #11
  %48 = and i64 %1, 63
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %68, label %50

50:                                               ; preds = %47
  %51 = inttoptr i64 %43 to i64*
  %52 = getelementptr inbounds i64, i64* %51, i64 %45
  %53 = sub nuw nsw i64 64, %48
  %54 = lshr i64 -1, %53
  %55 = load i64, i64* %52, align 8
  %56 = or i64 %55, %54
  store i64 %56, i64* %52, align 8
  br label %68

57:                                               ; preds = %34
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 %46, i1 false) #11
  %58 = and i64 %1, 63
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %43 to i64*
  %62 = getelementptr inbounds i64, i64* %61, i64 %45
  %63 = sub nuw nsw i64 64, %58
  %64 = lshr i64 -1, %63
  %65 = xor i64 %64, -1
  %66 = load i64, i64* %62, align 8
  %67 = and i64 %66, %65
  store i64 %67, i64* %62, align 8
  br label %68

68:                                               ; preds = %60, %57, %50, %47, %4
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %3 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %4 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %5 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.78", align 16
  %7 = alloca %"class.v8::internal::compiler::BasicBlock"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %17, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %21, %"class.v8::internal::compiler::BasicBlock"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45 to %"class.v8::internal::compiler::BasicBlock"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.56", %"class.v8::internal::RecyclingZoneAllocator.56"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !6

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #11
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::BasicBlock"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::BasicBlock"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::BasicBlock"** %73, %"class.v8::internal::compiler::BasicBlock"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #11
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77 to %"class.v8::internal::compiler::BasicBlock"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.56", %"class.v8::internal::RecyclingZoneAllocator.56"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !6

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #11
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::BasicBlock"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::BasicBlock"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::BasicBlock"** %105, %"class.v8::internal::compiler::BasicBlock"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  %106 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  %107 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %107, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %111, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #11
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"*** null, %"class.v8::internal::compiler::BasicBlock"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121 to %"class.v8::internal::compiler::BasicBlock"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !6

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #11
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::BasicBlock"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::BasicBlock"*** %150, %"class.v8::internal::compiler::BasicBlock"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::BasicBlock"*** %152, %"class.v8::internal::compiler::BasicBlock"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::BasicBlock"*** %152, %"class.v8::internal::compiler::BasicBlock"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %150, i64 %116
  store %"class.v8::internal::compiler::BasicBlock"*** %155, %"class.v8::internal::compiler::BasicBlock"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157 to %"class.v8::internal::compiler::BasicBlock"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.56", %"class.v8::internal::RecyclingZoneAllocator.56"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !6

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #11
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::BasicBlock"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::BasicBlock"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #11
  store %"class.v8::internal::compiler::BasicBlock"** %185, %"class.v8::internal::compiler::BasicBlock"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.78"* nonnull %6, %"class.v8::internal::compiler::BasicBlock"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #11
  %187 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.78"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::BasicBlock"***
  %210 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::BasicBlock"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %209, i64 %217
  store %"class.v8::internal::compiler::BasicBlock"*** %218, %"class.v8::internal::compiler::BasicBlock"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %227 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %211, %"class.v8::internal::compiler::BasicBlock"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #11
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.78"* nonnull %6, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %24, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %23
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to %"class.v8::internal::compiler::BasicBlock"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !6

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #11
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::BasicBlock"***
  %75 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !27

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::BasicBlock"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %172, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %199, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %200, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %24, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %23
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to %"class.v8::internal::compiler::BasicBlock"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !6

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #11
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::BasicBlock"***
  %75 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !28

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::BasicBlock"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %45 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %172, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %199, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %200, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::BasicBlock"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::BasicBlock"*** %36, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %35, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %37, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47 to %"class.v8::internal::compiler::BasicBlock"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !6

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #11
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::BasicBlock"***
  %76 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !29

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::BasicBlock"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %46 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %173, %"class.v8::internal::compiler::BasicBlock"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %200, i64 -1
  store %"class.v8::internal::compiler::BasicBlock"*** %201, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.78"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::BasicBlock"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %26
  store %"class.v8::internal::compiler::BasicBlock"*** %34, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %33, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %35, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.78"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48 to %"class.v8::internal::compiler::BasicBlock"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !6

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #11
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::BasicBlock"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !30

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::BasicBlock"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %47 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %170, %"class.v8::internal::compiler::BasicBlock"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %197, i64 1
  store %"class.v8::internal::compiler::BasicBlock"*** %198, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler10BasicBlockERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.78"*, %"class.v8::internal::compiler::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::BasicBlock"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::BasicBlock"*** %36, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %35, i64 %22
  store %"class.v8::internal::compiler::BasicBlock"*** %37, %"class.v8::internal::compiler::BasicBlock"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.78"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.78", %"struct.std::__1::__split_buffer.78"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49 to %"class.v8::internal::compiler::BasicBlock"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !6

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #11
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::BasicBlock"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !31

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::BasicBlock"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::BasicBlock"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::BasicBlock"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::BasicBlock"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::BasicBlock **>::FreeBlock"** %48 to %"class.v8::internal::compiler::BasicBlock"****
  store %"class.v8::internal::compiler::BasicBlock"*** %171, %"class.v8::internal::compiler::BasicBlock"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::BasicBlock"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::BasicBlock"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::BasicBlock"***, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::BasicBlock"**, %"class.v8::internal::compiler::BasicBlock"*** %198, i64 -1
  store %"class.v8::internal::compiler::BasicBlock"*** %199, %"class.v8::internal::compiler::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal9BitVectorENS2_13ZoneAllocatorIS4_EEE8__appendEmRKS4_(%"class.std::__1::vector.58"*, i64, %"class.v8::internal::BitVector"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.v8::internal::BitVector"** %2 to i8*
  %5 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.v8::internal::BitVector"*** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::BitVector"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, %1
  br i1 %13, label %139, label %14

14:                                               ; preds = %3
  %15 = inttoptr i64 %10 to %"class.v8::internal::BitVector"**
  %16 = inttoptr i64 %10 to i8*
  %17 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %1
  %18 = icmp eq i64 %1, 0
  br i1 %18, label %137, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.v8::internal::BitVector"** %2 to i64*
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %48

26:                                               ; preds = %106, %48, %19
  %27 = phi %"class.v8::internal::BitVector"** [ %15, %48 ], [ %15, %19 ], [ %60, %106 ]
  %28 = ptrtoint %"class.v8::internal::BitVector"** %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %29
  %31 = ptrtoint %"class.v8::internal::BitVector"** %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %26, %37
  %38 = phi %"class.v8::internal::BitVector"** [ %42, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %43, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %20, align 8
  %41 = bitcast %"class.v8::internal::BitVector"** %38 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %38, i64 1
  %43 = add i64 %39, -1
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %37, !llvm.loop !32

45:                                               ; preds = %37, %26
  %46 = phi %"class.v8::internal::BitVector"** [ %27, %26 ], [ %42, %37 ]
  %47 = icmp ult i64 %32, 56
  br i1 %47, label %108, label %110

48:                                               ; preds = %19
  %49 = shl nsw i64 %1, 3
  %50 = add i64 %49, -8
  %51 = lshr exact i64 %50, 3
  %52 = add nuw nsw i64 %51, 1
  %53 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %52
  %54 = getelementptr i8, i8* %4, i64 1
  %55 = icmp ugt i8* %54, %16
  %56 = icmp ugt %"class.v8::internal::BitVector"** %53, %2
  %57 = and i1 %55, %56
  br i1 %57, label %26, label %58

58:                                               ; preds = %48
  %59 = and i64 %24, 4611686018427387900
  %60 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %59
  %61 = add nsw i64 %59, -4
  %62 = lshr exact i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %61, 0
  br i1 %65, label %93, label %66

66:                                               ; preds = %58
  %67 = sub nuw nsw i64 %63, %64
  %68 = load i64, i64* %20, align 8, !alias.scope !33
  %69 = insertelement <2 x i64> undef, i64 %68, i32 0
  %70 = shufflevector <2 x i64> %69, <2 x i64> undef, <2 x i32> zeroinitializer
  %71 = insertelement <2 x i64> undef, i64 %68, i32 0
  %72 = shufflevector <2 x i64> %71, <2 x i64> undef, <2 x i32> zeroinitializer
  %73 = load i64, i64* %20, align 8, !alias.scope !33
  %74 = insertelement <2 x i64> undef, i64 %73, i32 0
  %75 = shufflevector <2 x i64> %74, <2 x i64> undef, <2 x i32> zeroinitializer
  %76 = insertelement <2 x i64> undef, i64 %73, i32 0
  %77 = shufflevector <2 x i64> %76, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %78

78:                                               ; preds = %78, %66
  %79 = phi i64 [ 0, %66 ], [ %90, %78 ]
  %80 = phi i64 [ %67, %66 ], [ %91, %78 ]
  %81 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %79
  %82 = bitcast %"class.v8::internal::BitVector"** %81 to <2 x i64>*
  store <2 x i64> %70, <2 x i64>* %82, align 8, !alias.scope !36, !noalias !33
  %83 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %81, i64 2
  %84 = bitcast %"class.v8::internal::BitVector"** %83 to <2 x i64>*
  store <2 x i64> %72, <2 x i64>* %84, align 8, !alias.scope !36, !noalias !33
  %85 = or i64 %79, 4
  %86 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %85
  %87 = bitcast %"class.v8::internal::BitVector"** %86 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %87, align 8, !alias.scope !36, !noalias !33
  %88 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %86, i64 2
  %89 = bitcast %"class.v8::internal::BitVector"** %88 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %89, align 8, !alias.scope !36, !noalias !33
  %90 = add i64 %79, 8
  %91 = add i64 %80, -2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %78, !llvm.loop !38

93:                                               ; preds = %78, %58
  %94 = phi i64 [ 0, %58 ], [ %90, %78 ]
  %95 = icmp eq i64 %64, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %93
  %97 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %15, i64 %94
  %98 = load i64, i64* %20, align 8, !alias.scope !33
  %99 = insertelement <2 x i64> undef, i64 %98, i32 0
  %100 = shufflevector <2 x i64> %99, <2 x i64> undef, <2 x i32> zeroinitializer
  %101 = insertelement <2 x i64> undef, i64 %98, i32 0
  %102 = shufflevector <2 x i64> %101, <2 x i64> undef, <2 x i32> zeroinitializer
  %103 = bitcast %"class.v8::internal::BitVector"** %97 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !36, !noalias !33
  %104 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %97, i64 2
  %105 = bitcast %"class.v8::internal::BitVector"** %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !36, !noalias !33
  br label %106

106:                                              ; preds = %93, %96
  %107 = icmp eq i64 %24, %59
  br i1 %107, label %108, label %26

108:                                              ; preds = %45, %110, %106
  %109 = ptrtoint %"class.v8::internal::BitVector"** %17 to i64
  br label %137

110:                                              ; preds = %45, %110
  %111 = phi %"class.v8::internal::BitVector"** [ %135, %110 ], [ %46, %45 ]
  %112 = load i64, i64* %20, align 8
  %113 = bitcast %"class.v8::internal::BitVector"** %111 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 1
  %115 = load i64, i64* %20, align 8
  %116 = bitcast %"class.v8::internal::BitVector"** %114 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 2
  %118 = load i64, i64* %20, align 8
  %119 = bitcast %"class.v8::internal::BitVector"** %117 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 3
  %121 = load i64, i64* %20, align 8
  %122 = bitcast %"class.v8::internal::BitVector"** %120 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 4
  %124 = load i64, i64* %20, align 8
  %125 = bitcast %"class.v8::internal::BitVector"** %123 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 5
  %127 = load i64, i64* %20, align 8
  %128 = bitcast %"class.v8::internal::BitVector"** %126 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 6
  %130 = load i64, i64* %20, align 8
  %131 = bitcast %"class.v8::internal::BitVector"** %129 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 7
  %133 = load i64, i64* %20, align 8
  %134 = bitcast %"class.v8::internal::BitVector"** %132 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %111, i64 8
  %136 = icmp eq %"class.v8::internal::BitVector"** %135, %17
  br i1 %136, label %108, label %110, !llvm.loop !40

137:                                              ; preds = %14, %108
  %138 = phi i64 [ %109, %108 ], [ %10, %14 ]
  store i64 %138, i64* %9, align 8
  ret void

139:                                              ; preds = %3
  %140 = bitcast %"class.std::__1::vector.58"* %0 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = sub i64 %10, %141
  %143 = ashr exact i64 %142, 3
  %144 = add i64 %143, %1
  %145 = icmp ugt i64 %144, 268435455
  br i1 %145, label %146, label %148

146:                                              ; preds = %139
  %147 = bitcast %"class.std::__1::vector.58"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #12
  unreachable

148:                                              ; preds = %139
  %149 = sub i64 %7, %141
  %150 = ashr exact i64 %149, 3
  %151 = icmp ult i64 %150, 134217727
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = ashr exact i64 %149, 2
  %154 = icmp ult i64 %153, %144
  %155 = select i1 %154, i64 %144, i64 %153
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %175, label %157

157:                                              ; preds = %148, %152
  %158 = phi i64 [ %155, %152 ], [ 268435455, %148 ]
  %159 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %160 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %159, align 8
  %161 = shl i64 %158, 3
  %162 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %160, i64 0, i32 3
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %165, %163
  %167 = icmp ugt i64 %161, %166
  br i1 %167, label %168, label %170, !prof !6

168:                                              ; preds = %157
  %169 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %160, i64 %161) #11
  br label %172

170:                                              ; preds = %157
  %171 = add i64 %163, %161
  store i64 %171, i64* %162, align 8
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i64 [ %169, %168 ], [ %163, %170 ]
  %174 = inttoptr i64 %173 to %"class.v8::internal::BitVector"**
  br label %175

175:                                              ; preds = %172, %152
  %176 = phi i64 [ %158, %172 ], [ 0, %152 ]
  %177 = phi %"class.v8::internal::BitVector"** [ %174, %172 ], [ null, %152 ]
  %178 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %177, i64 %143
  %179 = ptrtoint %"class.v8::internal::BitVector"** %178 to i64
  %180 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %177, i64 %176
  %181 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, i64 %1
  %182 = bitcast %"class.v8::internal::BitVector"** %2 to i64*
  %183 = shl nsw i64 %1, 3
  %184 = add i64 %183, -8
  %185 = lshr exact i64 %184, 3
  %186 = add nuw nsw i64 %185, 1
  %187 = and i64 %186, 7
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %201, label %189

189:                                              ; preds = %175, %189
  %190 = phi %"class.v8::internal::BitVector"** [ %195, %189 ], [ %178, %175 ]
  %191 = phi i64 [ %196, %189 ], [ %179, %175 ]
  %192 = phi i64 [ %197, %189 ], [ %187, %175 ]
  %193 = load i64, i64* %182, align 8
  %194 = inttoptr i64 %191 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %190, i64 1
  %196 = ptrtoint %"class.v8::internal::BitVector"** %195 to i64
  %197 = add i64 %192, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %189, !llvm.loop !41

199:                                              ; preds = %189
  %200 = ptrtoint %"class.v8::internal::BitVector"** %195 to i64
  br label %201

201:                                              ; preds = %175, %199
  %202 = phi %"class.v8::internal::BitVector"** [ %178, %175 ], [ %195, %199 ]
  %203 = phi i64 [ %179, %175 ], [ %200, %199 ]
  %204 = icmp ult i64 %184, 56
  br i1 %204, label %234, label %205

205:                                              ; preds = %201, %205
  %206 = phi %"class.v8::internal::BitVector"** [ %231, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %232, %205 ], [ %203, %201 ]
  %208 = load i64, i64* %182, align 8
  %209 = inttoptr i64 %207 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 1
  %211 = load i64, i64* %182, align 8
  %212 = bitcast %"class.v8::internal::BitVector"** %210 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 2
  %214 = load i64, i64* %182, align 8
  %215 = bitcast %"class.v8::internal::BitVector"** %213 to i64*
  store i64 %214, i64* %215, align 8
  %216 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 3
  %217 = load i64, i64* %182, align 8
  %218 = bitcast %"class.v8::internal::BitVector"** %216 to i64*
  store i64 %217, i64* %218, align 8
  %219 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 4
  %220 = load i64, i64* %182, align 8
  %221 = bitcast %"class.v8::internal::BitVector"** %219 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 5
  %223 = load i64, i64* %182, align 8
  %224 = bitcast %"class.v8::internal::BitVector"** %222 to i64*
  store i64 %223, i64* %224, align 8
  %225 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 6
  %226 = load i64, i64* %182, align 8
  %227 = bitcast %"class.v8::internal::BitVector"** %225 to i64*
  store i64 %226, i64* %227, align 8
  %228 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 7
  %229 = load i64, i64* %182, align 8
  %230 = bitcast %"class.v8::internal::BitVector"** %228 to i64*
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %206, i64 8
  %232 = ptrtoint %"class.v8::internal::BitVector"** %231 to i64
  %233 = icmp eq %"class.v8::internal::BitVector"** %181, %231
  br i1 %233, label %234, label %205

234:                                              ; preds = %205, %201
  %235 = ptrtoint %"class.v8::internal::BitVector"** %180 to i64
  %236 = ptrtoint %"class.v8::internal::BitVector"** %181 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %0, i64 0, i32 0, i32 0
  %238 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %237, align 8
  %239 = ptrtoint %"class.v8::internal::BitVector"** %238 to i64
  %240 = load %"class.v8::internal::BitVector"**, %"class.v8::internal::BitVector"*** %8, align 8
  %241 = icmp eq %"class.v8::internal::BitVector"** %240, %238
  br i1 %241, label %414, label %242

242:                                              ; preds = %234
  %243 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 -1
  %244 = ptrtoint %"class.v8::internal::BitVector"** %243 to i64
  %245 = sub i64 %244, %239
  %246 = lshr i64 %245, 3
  %247 = add nuw nsw i64 %246, 1
  %248 = icmp ult i64 %247, 4
  br i1 %248, label %341, label %249

249:                                              ; preds = %242
  %250 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 -1
  %251 = ptrtoint %"class.v8::internal::BitVector"** %250 to i64
  %252 = sub i64 %251, %239
  %253 = lshr i64 %252, 3
  %254 = xor i64 %253, -1
  %255 = add nsw i64 %143, %254
  %256 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %177, i64 %255
  %257 = xor i64 %253, -1
  %258 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 %257
  %259 = icmp ult %"class.v8::internal::BitVector"** %256, %240
  %260 = icmp ult %"class.v8::internal::BitVector"** %258, %178
  %261 = and i1 %259, %260
  br i1 %261, label %341, label %262

262:                                              ; preds = %249
  %263 = and i64 %247, 4611686018427387900
  %264 = sub nsw i64 0, %263
  %265 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, i64 %264
  %266 = sub nsw i64 0, %263
  %267 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 %266
  %268 = add nsw i64 %263, -4
  %269 = lshr exact i64 %268, 2
  %270 = add nuw nsw i64 %269, 1
  %271 = and i64 %270, 1
  %272 = icmp eq i64 %268, 0
  br i1 %272, label %319, label %273

273:                                              ; preds = %262
  %274 = sub nuw nsw i64 %270, %271
  %275 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, i64 -1
  %276 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 -1
  %277 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, i64 -1
  %278 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 -1
  br label %279

279:                                              ; preds = %279, %273
  %280 = phi i64 [ 0, %273 ], [ %314, %279 ]
  %281 = phi i64 [ %274, %273 ], [ %315, %279 ]
  %282 = sub i64 0, %280
  %283 = sub i64 0, %280
  %284 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %275, i64 %282
  %285 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %276, i64 %283
  %286 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %285, i64 -1
  %287 = bitcast %"class.v8::internal::BitVector"** %286 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8, !alias.scope !42
  %289 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %285, i64 -2
  %290 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %289, i64 -1
  %291 = bitcast %"class.v8::internal::BitVector"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !42
  %293 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %284, i64 -1
  %294 = bitcast %"class.v8::internal::BitVector"** %293 to <2 x i64>*
  store <2 x i64> %288, <2 x i64>* %294, align 8, !alias.scope !45, !noalias !42
  %295 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %284, i64 -2
  %296 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %295, i64 -1
  %297 = bitcast %"class.v8::internal::BitVector"** %296 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %297, align 8, !alias.scope !45, !noalias !42
  %298 = sub nuw nsw i64 -4, %280
  %299 = sub nuw nsw i64 -4, %280
  %300 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %277, i64 %298
  %301 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %278, i64 %299
  %302 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %301, i64 -1
  %303 = bitcast %"class.v8::internal::BitVector"** %302 to <2 x i64>*
  %304 = load <2 x i64>, <2 x i64>* %303, align 8, !alias.scope !42
  %305 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %301, i64 -2
  %306 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %305, i64 -1
  %307 = bitcast %"class.v8::internal::BitVector"** %306 to <2 x i64>*
  %308 = load <2 x i64>, <2 x i64>* %307, align 8, !alias.scope !42
  %309 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %300, i64 -1
  %310 = bitcast %"class.v8::internal::BitVector"** %309 to <2 x i64>*
  store <2 x i64> %304, <2 x i64>* %310, align 8, !alias.scope !45, !noalias !42
  %311 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %300, i64 -2
  %312 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %311, i64 -1
  %313 = bitcast %"class.v8::internal::BitVector"** %312 to <2 x i64>*
  store <2 x i64> %308, <2 x i64>* %313, align 8, !alias.scope !45, !noalias !42
  %314 = add i64 %280, 8
  %315 = add i64 %281, -2
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %279, !llvm.loop !47

317:                                              ; preds = %279
  %318 = sub nuw nsw i64 -8, %280
  br label %319

319:                                              ; preds = %317, %262
  %320 = phi i64 [ 0, %262 ], [ %318, %317 ]
  %321 = icmp eq i64 %271, 0
  br i1 %321, label %339, label %322

322:                                              ; preds = %319
  %323 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %178, i64 -1
  %324 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %240, i64 -1
  %325 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %323, i64 %320
  %326 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %324, i64 %320
  %327 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %326, i64 -1
  %328 = bitcast %"class.v8::internal::BitVector"** %327 to <2 x i64>*
  %329 = load <2 x i64>, <2 x i64>* %328, align 8, !alias.scope !42
  %330 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %326, i64 -2
  %331 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %330, i64 -1
  %332 = bitcast %"class.v8::internal::BitVector"** %331 to <2 x i64>*
  %333 = load <2 x i64>, <2 x i64>* %332, align 8, !alias.scope !42
  %334 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %325, i64 -1
  %335 = bitcast %"class.v8::internal::BitVector"** %334 to <2 x i64>*
  store <2 x i64> %329, <2 x i64>* %335, align 8, !alias.scope !45, !noalias !42
  %336 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %325, i64 -2
  %337 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %336, i64 -1
  %338 = bitcast %"class.v8::internal::BitVector"** %337 to <2 x i64>*
  store <2 x i64> %333, <2 x i64>* %338, align 8, !alias.scope !45, !noalias !42
  br label %339

339:                                              ; preds = %319, %322
  %340 = icmp eq i64 %247, %263
  br i1 %340, label %411, label %341

341:                                              ; preds = %339, %249, %242
  %342 = phi %"class.v8::internal::BitVector"** [ %178, %249 ], [ %178, %242 ], [ %265, %339 ]
  %343 = phi %"class.v8::internal::BitVector"** [ %240, %249 ], [ %240, %242 ], [ %267, %339 ]
  %344 = getelementptr %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %343, i64 -1
  %345 = ptrtoint %"class.v8::internal::BitVector"** %344 to i64
  %346 = sub i64 %345, %239
  %347 = lshr i64 %346, 3
  %348 = add nuw nsw i64 %347, 1
  %349 = and i64 %348, 7
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %362, label %351

351:                                              ; preds = %341, %351
  %352 = phi %"class.v8::internal::BitVector"** [ %355, %351 ], [ %342, %341 ]
  %353 = phi %"class.v8::internal::BitVector"** [ %356, %351 ], [ %343, %341 ]
  %354 = phi i64 [ %360, %351 ], [ %349, %341 ]
  %355 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %352, i64 -1
  %356 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %353, i64 -1
  %357 = bitcast %"class.v8::internal::BitVector"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"class.v8::internal::BitVector"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = add i64 %354, -1
  %361 = icmp eq i64 %360, 0
  br i1 %361, label %362, label %351, !llvm.loop !48

362:                                              ; preds = %351, %341
  %363 = phi %"class.v8::internal::BitVector"** [ undef, %341 ], [ %355, %351 ]
  %364 = phi %"class.v8::internal::BitVector"** [ %342, %341 ], [ %355, %351 ]
  %365 = phi %"class.v8::internal::BitVector"** [ %343, %341 ], [ %356, %351 ]
  %366 = icmp ult i64 %346, 56
  br i1 %366, label %411, label %367

367:                                              ; preds = %362, %367
  %368 = phi %"class.v8::internal::BitVector"** [ %405, %367 ], [ %364, %362 ]
  %369 = phi %"class.v8::internal::BitVector"** [ %406, %367 ], [ %365, %362 ]
  %370 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -1
  %371 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -1
  %372 = bitcast %"class.v8::internal::BitVector"** %371 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.v8::internal::BitVector"** %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -2
  %376 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -2
  %377 = bitcast %"class.v8::internal::BitVector"** %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = bitcast %"class.v8::internal::BitVector"** %375 to i64*
  store i64 %378, i64* %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -3
  %381 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -3
  %382 = bitcast %"class.v8::internal::BitVector"** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.v8::internal::BitVector"** %380 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -4
  %386 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -4
  %387 = bitcast %"class.v8::internal::BitVector"** %386 to i64*
  %388 = load i64, i64* %387, align 8
  %389 = bitcast %"class.v8::internal::BitVector"** %385 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -5
  %391 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -5
  %392 = bitcast %"class.v8::internal::BitVector"** %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.v8::internal::BitVector"** %390 to i64*
  store i64 %393, i64* %394, align 8
  %395 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -6
  %396 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -6
  %397 = bitcast %"class.v8::internal::BitVector"** %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"class.v8::internal::BitVector"** %395 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -7
  %401 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -7
  %402 = bitcast %"class.v8::internal::BitVector"** %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = bitcast %"class.v8::internal::BitVector"** %400 to i64*
  store i64 %403, i64* %404, align 8
  %405 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %368, i64 -8
  %406 = getelementptr inbounds %"class.v8::internal::BitVector"*, %"class.v8::internal::BitVector"** %369, i64 -8
  %407 = bitcast %"class.v8::internal::BitVector"** %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = bitcast %"class.v8::internal::BitVector"** %405 to i64*
  store i64 %408, i64* %409, align 8
  %410 = icmp eq %"class.v8::internal::BitVector"** %406, %238
  br i1 %410, label %411, label %367, !llvm.loop !49

411:                                              ; preds = %362, %367, %339
  %412 = phi %"class.v8::internal::BitVector"** [ %265, %339 ], [ %363, %362 ], [ %405, %367 ]
  %413 = ptrtoint %"class.v8::internal::BitVector"** %412 to i64
  br label %414

414:                                              ; preds = %234, %411
  %415 = phi i64 [ %413, %411 ], [ %179, %234 ]
  store i64 %415, i64* %140, align 8
  store i64 %236, i64* %9, align 8
  store i64 %235, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1073205, i32 2146410443}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!"branch_weights", i32 4000000, i32 4001}
!8 = !{i64 0, i64 65}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK2v88internal8compiler10FrameState16frame_state_infoEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2v88internal8compiler10FrameState16frame_state_infoEv"}
!12 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!13 = !{!"branch_weights", i32 4001, i32 1}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!20 = distinct !{!20, !15}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIRKiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!23 = distinct !{!23, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIRKiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm: argument 0"}
!26 = distinct !{!26, !"_ZNSt3__16vectorIbN2v88internal13ZoneAllocatorIbEEE11__make_iterEm"}
!27 = distinct !{!27, !15}
!28 = distinct !{!28, !15}
!29 = distinct !{!29, !15}
!30 = distinct !{!30, !15}
!31 = distinct !{!31, !15}
!32 = distinct !{!32, !15}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !39}
!39 = !{!"llvm.loop.isvectorized", i32 1}
!40 = distinct !{!40, !39}
!41 = distinct !{!41, !15}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !39}
!48 = distinct !{!48, !15}
!49 = distinct !{!49, !39}
