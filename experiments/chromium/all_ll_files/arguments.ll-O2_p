; ModuleID = '../../gin/arguments.cc'
source_filename = "../../gin/arguments.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.gin::Arguments" = type <{ %"class.v8::Isolate"*, %union.anon, i32, i8, i8, [2 x i8] }>
%"class.v8::Isolate" = type { i8 }
%union.anon = type { %"class.v8::FunctionCallbackInfo"* }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::PropertyCallbackInfo" = type { i64* }
%"class.v8::Value" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::Local"*, %"class.v8::Local"*, %"class.std::__1::__compressed_pair" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::Local"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.v8::String" = type { i8 }

@.str = private unnamed_addr constant [15 x i8] c"<empty handle>\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"undefined\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"Error processing property accessor arguments.\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Insufficient number of arguments.\00", align 1
@.str.5 = private unnamed_addr constant [66 x i8] c"Error processing argument at index %d, conversion failure from %s\00", align 1

@_ZN3gin9ArgumentsC1Ev = hidden unnamed_addr alias void (%"class.gin::Arguments"*), void (%"class.gin::Arguments"*)* @_ZN3gin9ArgumentsC2Ev
@_ZN3gin9ArgumentsC1ERKN2v820FunctionCallbackInfoINS1_5ValueEEE = hidden unnamed_addr alias void (%"class.gin::Arguments"*, %"class.v8::FunctionCallbackInfo"*), void (%"class.gin::Arguments"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN3gin9ArgumentsC2ERKN2v820FunctionCallbackInfoINS1_5ValueEEE
@_ZN3gin9ArgumentsC1ERKN2v820PropertyCallbackInfoINS1_5ValueEEE = hidden unnamed_addr alias void (%"class.gin::Arguments"*, %"class.v8::PropertyCallbackInfo"*), void (%"class.gin::Arguments"*, %"class.v8::PropertyCallbackInfo"*)* @_ZN3gin9ArgumentsC2ERKN2v820PropertyCallbackInfoINS1_5ValueEEE
@_ZN3gin9ArgumentsD1Ev = hidden unnamed_addr alias void (%"class.gin::Arguments"*), void (%"class.gin::Arguments"*)* @_ZN3gin9ArgumentsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3gin9ArgumentsC2Ev(%"class.gin::Arguments"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.gin::Arguments"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 22, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gin9ArgumentsC2ERKN2v820FunctionCallbackInfoINS1_5ValueEEE(%"class.gin::Arguments"* nocapture, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 1
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.gin::Arguments"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1, i32 0
  store %"class.v8::FunctionCallbackInfo"* %1, %"class.v8::FunctionCallbackInfo"** %8, align 8
  %9 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 2
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gin9ArgumentsC2ERKN2v820PropertyCallbackInfoINS1_5ValueEEE(%"class.gin::Arguments"* nocapture, %"class.v8::PropertyCallbackInfo"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %1, i64 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 2
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.gin::Arguments"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1
  %9 = bitcast %union.anon* %8 to %"class.v8::PropertyCallbackInfo"**
  store %"class.v8::PropertyCallbackInfo"* %1, %"class.v8::PropertyCallbackInfo"** %9, align 8
  %10 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 3
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  store i8 1, i8* %12, align 1
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gin9ArgumentsD2Ev(%"class.gin::Arguments"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::Value"* @_ZNK3gin9Arguments8PeekNextEv(%"class.gin::Arguments"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %9, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %7, %11
  br i1 %12, label %13, label %28

13:                                               ; preds = %5
  %14 = icmp slt i32 %7, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %9, i64 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 160
  %21 = inttoptr i64 %20 to %"class.v8::Value"*
  br label %28

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %9, i64 0, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = sext i32 %7 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  %27 = bitcast i64* %26 to %"class.v8::Value"*
  br label %28

28:                                               ; preds = %22, %15, %5, %1
  %29 = phi %"class.v8::Value"* [ null, %1 ], [ null, %5 ], [ %21, %15 ], [ %27, %22 ]
  ret %"class.v8::Value"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gin9Arguments6GetAllEv(%"class.std::__1::vector"* noalias sret, %"class.gin::Arguments"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %112

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %1, i64 0, i32 1, i32 0
  %11 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %112, label %15

15:                                               ; preds = %9
  %16 = sext i32 %13 to i64
  %17 = bitcast %"class.v8::Local"** %4 to i64*
  %18 = bitcast %"class.std::__1::vector"* %0 to i64*
  %19 = icmp slt i32 %13, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  tail call void @abort() #12
  unreachable

21:                                               ; preds = %15
  %22 = shl nsw i64 %16, 3
  %23 = tail call i8* @_Znwm(i64 %22) #13
  %24 = bitcast i8* %23 to %"class.v8::Local"*
  %25 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %24, i64 %16
  %26 = ptrtoint %"class.v8::Local"* %25 to i64
  %27 = insertelement <2 x i8*> undef, i8* %23, i32 0
  %28 = shufflevector <2 x i8*> %27, <2 x i8*> undef, <2 x i32> zeroinitializer
  %29 = ptrtoint <2 x i8*> %28 to <2 x i64>
  %30 = bitcast %"class.std::__1::vector"* %0 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 8
  store i64 %26, i64* %17, align 8
  %31 = bitcast %"class.v8::Local"** %3 to i64*
  %32 = zext i32 %13 to i64
  br label %33

33:                                               ; preds = %110, %21
  %34 = phi %"class.v8::FunctionCallbackInfo"* [ %11, %21 ], [ %111, %110 ]
  %35 = phi i64 [ 0, %21 ], [ %108, %110 ]
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %34, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = icmp slt i64 %35, %38
  br i1 %39, label %47, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %34, i64 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 1
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 160
  %46 = inttoptr i64 %45 to %"class.v8::Value"*
  br label %52

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %34, i64 0, i32 1
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 %35
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  br label %52

52:                                               ; preds = %40, %47
  %53 = phi %"class.v8::Value"* [ %46, %40 ], [ %51, %47 ]
  %54 = ptrtoint %"class.v8::Value"* %53 to i64
  %55 = load %"class.v8::Local"*, %"class.v8::Local"** %3, align 8
  %56 = load %"class.v8::Local"*, %"class.v8::Local"** %4, align 8
  %57 = icmp ult %"class.v8::Local"* %55, %56
  %58 = ptrtoint %"class.v8::Local"* %56 to i64
  br i1 %57, label %59, label %63

59:                                               ; preds = %52
  %60 = bitcast %"class.v8::Local"* %55 to i64*
  store i64 %54, i64* %60, align 8
  %61 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %55, i64 1
  %62 = ptrtoint %"class.v8::Local"* %61 to i64
  store i64 %62, i64* %31, align 8
  br label %107

63:                                               ; preds = %52
  %64 = ptrtoint %"class.v8::Local"* %55 to i64
  %65 = load i64, i64* %18, align 8
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 2305843009213693951
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #12
  unreachable

72:                                               ; preds = %63
  %73 = sub i64 %58, %65
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %74, 1152921504606846975
  br i1 %75, label %76, label %84

76:                                               ; preds = %72
  %77 = ashr exact i64 %73, 2
  %78 = icmp ult i64 %77, %68
  %79 = select i1 %78, i64 %68, i64 %77
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = icmp ugt i64 %79, 2305843009213693951
  br i1 %82, label %83, label %84

83:                                               ; preds = %81
  tail call void @abort() #12
  unreachable

84:                                               ; preds = %81, %72
  %85 = phi i64 [ %79, %81 ], [ 2305843009213693951, %72 ]
  %86 = shl i64 %85, 3
  %87 = tail call i8* @_Znwm(i64 %86) #13
  %88 = bitcast i8* %87 to %"class.v8::Local"*
  br label %89

89:                                               ; preds = %84, %76
  %90 = phi i64 [ %85, %84 ], [ 0, %76 ]
  %91 = phi i8* [ %87, %84 ], [ null, %76 ]
  %92 = phi %"class.v8::Local"* [ %88, %84 ], [ null, %76 ]
  %93 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %92, i64 %67
  %94 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %92, i64 %90
  %95 = ptrtoint %"class.v8::Local"* %94 to i64
  %96 = bitcast %"class.v8::Local"* %93 to i64*
  store i64 %54, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %93, i64 1
  %98 = ptrtoint %"class.v8::Local"* %97 to i64
  %99 = ptrtoint %"class.v8::Local"* %92 to i64
  %100 = icmp sgt i64 %66, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %89
  %102 = inttoptr i64 %65 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %102, i64 %66, i1 false) #11
  br label %103

103:                                              ; preds = %101, %89
  store i64 %99, i64* %18, align 8
  store i64 %98, i64* %31, align 8
  store i64 %95, i64* %17, align 8
  %104 = icmp eq i64 %65, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %103
  %106 = inttoptr i64 %65 to i8*
  tail call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %59, %103, %105
  %108 = add nuw nsw i64 %35, 1
  %109 = icmp eq i64 %108, %32
  br i1 %109, label %112, label %110

110:                                              ; preds = %107
  %111 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %10, align 8
  br label %33

112:                                              ; preds = %107, %2, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Context"* @_ZNK3gin9Arguments24GetHolderCreationContextEv(%"class.gin::Arguments"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1
  br i1 %4, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %union.anon* %5 to %"class.v8::PropertyCallbackInfo"**
  %8 = load %"class.v8::PropertyCallbackInfo"*, %"class.v8::PropertyCallbackInfo"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::PropertyCallbackInfo", %"class.v8::PropertyCallbackInfo"* %8, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = getelementptr inbounds i64, i64* %10, i64 1
  %12 = bitcast i64* %11 to %"class.v8::Object"*
  br label %17

13:                                               ; preds = %1
  %14 = bitcast %union.anon* %5 to %"class.v8::Object"***
  %15 = load %"class.v8::Object"**, %"class.v8::Object"*** %14, align 8
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  br label %17

17:                                               ; preds = %13, %6
  %18 = phi %"class.v8::Object"* [ %16, %13 ], [ %12, %6 ]
  %19 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %18) #11
  ret %"class.v8::Context"* %19
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gin14V8TypeAsStringEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.std::__1::basic_string"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.v8::Value"* %2, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 14, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %9, i64 14
  store i8 0, i8* %10, align 2
  br label %64

11:                                               ; preds = %3
  %12 = bitcast %"class.v8::Value"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 3
  %15 = icmp eq i64 %14, 1
  br i1 %15, label %16, label %50

16:                                               ; preds = %11
  %17 = add i64 %13, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i64 %13, -4294967296
  %21 = zext i32 %19 to i64
  %22 = or i64 %20, %21
  %23 = add i64 %22, 7
  %24 = inttoptr i64 %23 to i16*
  %25 = load i16, i16* %24, align 2
  %26 = icmp eq i16 %25, 67
  br i1 %26, label %27, label %50

27:                                               ; preds = %16
  %28 = add i64 %13, 23
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, -2
  %32 = icmp eq i32 %31, 10
  br i1 %32, label %33, label %38

33:                                               ; preds = %27
  %34 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 9, i8* %35, align 1
  %36 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9, i1 false) #11
  %37 = getelementptr inbounds i8, i8* %36, i64 9
  store i8 0, i8* %37, align 1
  br label %64

38:                                               ; preds = %27
  %39 = add i64 %13, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 6
  br i1 %43, label %44, label %50

44:                                               ; preds = %38
  %45 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 4, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819047278, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 4
  store i8 0, i8* %49, align 4
  br label %64

50:                                               ; preds = %16, %11, %38
  %51 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #11
  %53 = call zeroext i1 @_ZN3gin9ConverterINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEvE6FromV8EPN2v87IsolateENS9_5LocalINS9_5ValueEEEPS7_(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %2, %"class.std::__1::basic_string"* nonnull %4) #11
  %54 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br i1 %53, label %55, label %56

55:                                               ; preds = %50
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %51, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #11
  br label %63

56:                                               ; preds = %50
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #11
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %55, %56, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  br label %64

64:                                               ; preds = %63, %44, %33, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gin9Arguments10ThrowErrorEv(%"class.gin::Arguments"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.base::BasicStringPiece", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %1
  %12 = tail call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i64 45, i1 false) #11
  %13 = getelementptr inbounds i8, i8* %12, i64 45
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 0
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %14, align 8
  %16 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %12, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 45, i64* %18, align 8
  %19 = call %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"* %15, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #11
  %20 = bitcast %"class.v8::Value"* %19 to %"class.v8::String"*
  %21 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %20) #11
  %22 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %15, %"class.v8::Value"* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  call void @_ZdlPv(i8* nonnull %12) #13
  br label %161

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = tail call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i64 33, i1 false) #11
  %29 = getelementptr inbounds i8, i8* %28, i64 33
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 0
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* %28, i8** %33, align 8
  %34 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  store i64 33, i64* %34, align 8
  %35 = call %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"* %31, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #11
  %36 = bitcast %"class.v8::Value"* %35 to %"class.v8::String"*
  %37 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %36) #11
  %38 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %31, %"class.v8::Value"* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #11
  call void @_ZdlPv(i8* nonnull %28) #13
  br label %161

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1, i32 0
  %41 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %40, align 8
  %42 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, -1
  %45 = icmp slt i32 %43, 1
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %41, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp slt i32 %48, %43
  br i1 %49, label %50, label %57

50:                                               ; preds = %46, %39
  %51 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %41, i64 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 160
  %56 = inttoptr i64 %55 to %"class.v8::Value"*
  br label %63

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %41, i64 0, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = sext i32 %44 to i64
  %61 = getelementptr inbounds i64, i64* %59, i64 %60
  %62 = bitcast i64* %61 to %"class.v8::Value"*
  br label %63

63:                                               ; preds = %50, %57
  %64 = phi %"class.v8::Value"* [ %56, %50 ], [ %62, %57 ]
  %65 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 0
  %68 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %67, align 8
  %69 = icmp eq %"class.v8::Value"* %64, null
  br i1 %69, label %70, label %74

70:                                               ; preds = %63
  %71 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  store i8 14, i8* %72, align 1, !alias.scope !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i64 14, i1 false) #11
  %73 = getelementptr inbounds i8, i8* %66, i64 14
  store i8 0, i8* %73, align 2, !alias.scope !3
  br label %116

74:                                               ; preds = %63
  %75 = bitcast %"class.v8::Value"* %64 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !3
  %77 = and i64 %76, 3
  %78 = icmp eq i64 %77, 1
  br i1 %78, label %79, label %104

79:                                               ; preds = %74
  %80 = add i64 %76, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4, !noalias !3
  %83 = and i64 %76, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2, !noalias !3
  %89 = icmp eq i16 %88, 67
  br i1 %89, label %90, label %104

90:                                               ; preds = %79
  %91 = add i64 %76, 23
  %92 = inttoptr i64 %91 to i32*
  %93 = load i32, i32* %92, align 4, !noalias !3
  %94 = and i32 %93, -2
  switch i32 %94, label %104 [
    i32 10, label %95
    i32 6, label %99
  ]

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  store i8 9, i8* %97, align 1, !alias.scope !3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9, i1 false) #11
  %98 = getelementptr inbounds i8, i8* %66, i64 9
  store i8 0, i8* %98, align 1, !alias.scope !3
  br label %116

99:                                               ; preds = %90
  %100 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 4, i8* %101, align 1, !alias.scope !3
  %102 = bitcast %"class.std::__1::basic_string"* %7 to i32*
  store i32 1819047278, i32* %102, align 8, !alias.scope !3
  %103 = getelementptr inbounds i8, i8* %66, i64 4
  store i8 0, i8* %103, align 4, !alias.scope !3
  br label %116

104:                                              ; preds = %90, %79, %74
  %105 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %105) #11, !noalias !3
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #11, !noalias !3
  %107 = call zeroext i1 @_ZN3gin9ConverterINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEvE6FromV8EPN2v87IsolateENS9_5LocalINS9_5ValueEEEPS7_(%"class.v8::Isolate"* %68, %"class.v8::Value"* nonnull %64, %"class.std::__1::basic_string"* nonnull %3) #11, !noalias !3
  br i1 %107, label %108, label %109

108:                                              ; preds = %104
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 8 %105, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 24, i1 false) #11, !noalias !3
  br label %119

109:                                              ; preds = %104
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 24, i1 false) #11, !alias.scope !3
  %110 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1, !noalias !3
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %109
  %115 = load i8*, i8** %106, align 8, !noalias !3
  call void @_ZdlPv(i8* %115) #13, !noalias !3
  br label %119

116:                                              ; preds = %70, %95, %99
  %117 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %100, %99 ], [ %96, %95 ], [ %71, %70 ]
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %127

119:                                              ; preds = %108, %109, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %105) #11, !noalias !3
  %120 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = select i1 %123, i8* %125, i8* %66
  br label %127

127:                                              ; preds = %119, %116
  %128 = phi i8** [ %118, %116 ], [ %124, %119 ]
  %129 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %117, %116 ], [ %120, %119 ]
  %130 = phi i8* [ %66, %116 ], [ %126, %119 ]
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.5, i64 0, i64 0), i32 %44, i8* %130) #11
  %132 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %67, align 8
  %133 = bitcast %"class.base::BasicStringPiece"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #11
  %134 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 0
  %135 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8
  %141 = select i1 %138, i8* %140, i8* %65
  store i8* %141, i8** %134, align 8
  %142 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %2, i64 0, i32 1
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = zext i8 %137 to i64
  %146 = select i1 %138, i64 %144, i64 %145
  store i64 %146, i64* %142, align 8
  %147 = call %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"* %132, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %2) #11
  %148 = bitcast %"class.v8::Value"* %147 to %"class.v8::String"*
  %149 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %148) #11
  %150 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %132, %"class.v8::Value"* %149) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #11
  %151 = load i8, i8* %136, align 1
  %152 = icmp slt i8 %151, 0
  br i1 %152, label %153, label %155

153:                                              ; preds = %127
  %154 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %127, %153
  %156 = load i8, i8* %131, align 1
  %157 = icmp slt i8 %156, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %155
  %159 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %155, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  br label %161

161:                                              ; preds = %160, %27, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gin9Arguments14ThrowTypeErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.gin::Arguments"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  store i8* %15, i8** %7, align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %10 to i64
  %20 = select i1 %11, i64 %18, i64 %19
  store i64 %20, i64* %16, align 8
  %21 = call %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"* %5, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3) #11
  %22 = bitcast %"class.v8::Value"* %21 to %"class.v8::String"*
  %23 = call %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"* %22) #11
  %24 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %5, %"class.v8::Value"* %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #6

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #6

declare %"class.v8::Value"* @_ZN2v89Exception9TypeErrorENS_5LocalINS_6StringEEE(%"class.v8::String"*) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gin9Arguments15IsConstructCallEv(%"class.gin::Arguments"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gin::Arguments", %"class.gin::Arguments"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.v8::FunctionCallbackInfo"*, %"class.v8::FunctionCallbackInfo"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %7, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 5
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %5
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp ne i32 %29, 10
  br label %31

31:                                               ; preds = %25, %14, %5, %1
  %32 = phi i1 [ false, %1 ], [ %30, %25 ], [ true, %5 ], [ true, %14 ]
  ret i1 %32
}

declare %"class.v8::Value"* @_ZN3gin9ConverterIN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEvE4ToV8EPN2v87IsolateERKS6_(%"class.v8::Isolate"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare zeroext i1 @_ZN3gin9ConverterINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEvE6FromV8EPN2v87IsolateENS9_5LocalINS9_5ValueEEEPS7_(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.std::__1::basic_string"*) local_unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3gin14V8TypeAsStringEPN2v87IsolateENS0_5LocalINS0_5ValueEEE: argument 0"}
!5 = distinct !{!5, !"_ZN3gin14V8TypeAsStringEPN2v87IsolateENS0_5LocalINS0_5ValueEEE"}
