; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_character_data.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_character_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.194" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__cxx_atomic_impl.197" }
%"struct.std::__1::__cxx_atomic_impl.197" = type { %"struct.std::__1::__cxx_atomic_base_impl.198" }
%"struct.std::__1::__cxx_atomic_base_impl.198" = type { i32 }
%"class.blink::CEReactionsScope" = type <{ %"class.blink::CEReactionsScope"*, i8, [7 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.450" }
%"struct.std::__1::atomic.450" = type { %"struct.std::__1::__atomic_base.451" }
%"struct.std::__1::__atomic_base.451" = type { %"struct.std::__1::__atomic_base.452" }
%"struct.std::__1::__atomic_base.452" = type { %"struct.std::__1::__cxx_atomic_impl.453" }
%"struct.std::__1::__cxx_atomic_impl.453" = type { %"struct.std::__1::__cxx_atomic_base_impl.454" }
%"struct.std::__1::__cxx_atomic_base_impl.454" = type { i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.blink::ParkableString" = type { %class.scoped_refptr.190 }
%class.scoped_refptr.190 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.191", %"class.WTF::String", %"class.std::__1::unique_ptr.199" }
%"class.WTF::RefCounted.191" = type { %"class.base::RefCounted.192" }
%"class.base::RefCounted.192" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.213", %"class.WTF::Vector.219", i8, i32 }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.WTF::Vector.205"* }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.207", [32 x i8] }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.309", %"class.WTF::HashMap.309", %"class.WTF::HashMap.314", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.337", %"class.blink::Persistent.348", i8, i8, i8, %"class.WTF::Vector.350", %"class.std::__1::unique_ptr.355", %"class.blink::Persistent.361", %"class.blink::Persistent.365", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.291", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", i32, i32 }
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.309" = type { %"class.WTF::HashTable.310" }
%"class.WTF::HashTable.310" = type <{ %"struct.WTF::KeyValuePair.313"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.313" = type opaque
%"class.WTF::HashMap.314" = type { %"class.WTF::HashTable.315" }
%"class.WTF::HashTable.315" = type <{ %"struct.WTF::KeyValuePair.318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.318" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.327", %class.scoped_refptr.193 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.322", i8* }
%"class.WTF::HashMap.322" = type { %"class.WTF::HashTable.323" }
%"class.WTF::HashTable.323" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.327" = type { %"class.v8::PersistentValueMapBase.328" }
%"class.v8::PersistentValueMapBase.328" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.329", i8* }
%"class.WTF::HashMap.329" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"struct.WTF::KeyValuePair.333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.333" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.340" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.340" = type { %"class.WTF::HashTable.341" }
%"class.WTF::HashTable.341" = type <{ %"struct.WTF::KeyValuePair.344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.344" = type opaque
%"class.blink::Persistent.348" = type { %"class.blink::PersistentBase.349" }
%"class.blink::PersistentBase.349" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.382", %class.scoped_refptr.385, %"class.blink::Member.386", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.382" = type { %"class.v8::Persistent.383" }
%"class.v8::Persistent.383" = type { %"class.v8::PersistentBase.384" }
%"class.v8::PersistentBase.384" = type { %"class.v8::Context"* }
%class.scoped_refptr.385 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.348" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.361" = type { %"class.blink::PersistentBase.362" }
%"class.blink::PersistentBase.362" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.365" = type { %"class.blink::PersistentBase.366" }
%"class.blink::PersistentBase.366" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.369", i64 }
%"class.blink::HeapVector.369" = type { %"class.WTF::Vector.372" }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"struct.std::__1::pair.375"*, i32, i32 }
%"struct.std::__1::pair.375" = type { %"class.blink::UntracedMember", %"class.blink::Member.377" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.389" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.389" = type { %"class.v8::TracedReference.390" }
%"class.v8::TracedReference.390" = type { %"class.v8::BasicTracedReference.391" }
%"class.v8::BasicTracedReference.391" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.392", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.392" = type { %"class.v8::String"* }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.393" }
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { i8* }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.184", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.186" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.226", %"class.blink::Member.228", %"class.blink::Member.184", %"class.blink::Member.230", %"class.blink::Member.230", %"class.blink::Member.272", %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.281", %"class.blink::HeapVector.283" }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.228" = type { %"class.blink::MemberBase.229" }
%"class.blink::MemberBase.229" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.234" }
%"class.blink::HeapHashMap.234" = type { %"class.WTF::HashMap.237" }
%"class.WTF::HashMap.237" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"struct.WTF::KeyValuePair.240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.240" = type { %"class.WTF::AtomicString", %"class.blink::Member.241" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.245", i32, %"class.blink::HeapVector" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.250" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.247 }
%class.scoped_refptr.247 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.248", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.248" = type { %"class.base::RefCounted.249" }
%"class.base::RefCounted.249" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.254", %"class.blink::Member.256", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.254" = type { %"class.WTF::SingleThreadedBitField.255" }
%"class.WTF::SingleThreadedBitField.255" = type { i32 }
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.259", %"class.WTF::AtomicString", %"class.WTF::Vector.261" }
%"class.WTF::RefCounted.259" = type { %"class.base::RefCounted.260" }
%"class.base::RefCounted.260" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.261" = type { %"class.WTF::VectorBuffer.262" }
%"class.WTF::VectorBuffer.262" = type { %"class.WTF::VectorBufferBase.263", [32 x i8] }
%"class.WTF::VectorBufferBase.263" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.268" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.blink::Member.245"*, i32, i32 }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.278" }
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::HeapHashMap.280"* }
%"class.blink::HeapHashMap.280" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.283" = type { %"class.WTF::Vector.286" }
%"class.WTF::Vector.286" = type { %"class.WTF::VectorBuffer.287" }
%"class.WTF::VectorBuffer.287" = type { %"class.WTF::VectorBufferBase.288" }
%"class.WTF::VectorBufferBase.288" = type { %"class.blink::Member.289"*, i32, i32 }
%"class.blink::Member.289" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::Node"* }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.v8::Value" = type { i8 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Integer" = type { i8 }
%"class.blink::HeapVector.406" = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::Member.412"*, i32, i32 }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::V8UnionNodeOrStringOrTrustedScript"* }
%"class.blink::V8UnionNodeOrStringOrTrustedScript" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member", %"class.WTF::String", %"class.blink::Member.416" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::TrustedScript"* }
%"class.blink::TrustedScript" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink8bindings31VariadicArgumentsToNativeValuesINS_34V8UnionNodeOrStringOrTrustedScriptEJEEENS_11IDLSequenceIT_E8ImplTypeEPN2v87IsolateERKNS7_20FunctionCallbackInfoINS7_5ValueEEEiRNS_14ExceptionStateEDpT0_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_34V8UnionNodeOrStringOrTrustedScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [14 x i8] c"CharacterData\00", align 1
@_ZN5blink6V8Node18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink15V8CharacterData18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink15V8CharacterData24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink15V8CharacterData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* @_ZN5blink6V8Node18wrapper_type_info_E, i8 4 }, align 8
@_ZN5blink13CharacterData18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink15V8CharacterData18wrapper_type_info_E, align 8
@_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data24DataAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data26LengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data54PreviousElementSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data58PreviousElementSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data50NextElementSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 40, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data54NextElementSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 72, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"previousElementSibling\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"nextElementSibling\00", align 1
@_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [9 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data22AfterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data27AppendDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data23BeforeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data27DeleteDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data27InsertDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data23RemoveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data28ReplaceDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 3, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data28ReplaceWithOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 0, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_117v8_character_data30SubstringDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }], align 16
@.str.5 = private unnamed_addr constant [6 x i8] c"after\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"appendData\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"before\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"deleteData\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"insertData\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"replaceData\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"replaceWith\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"substringData\00", align 1
@_ZZN5blink15V8CharacterData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE24kUnscopablePropertyNames = internal constant [4 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0)], align 16
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.14 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink16CEReactionsScope13top_of_stack_E = external local_unnamed_addr global %"class.blink::CEReactionsScope"*, align 8
@.str.17 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.18 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.20 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.23 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8CharacterData24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %9 = tail call %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink6V8Node18wrapper_type_info_E, %"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1) #6
  %10 = bitcast %"class.v8::Template"* %9 to %"class.v8::FunctionTemplate"*
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink15V8CharacterData18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* %10) #6
  %11 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %12 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %13 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13)
  %14 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14)
  %15 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %16 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 6, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %18 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 9, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([9 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %19, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %11, %"class.v8::Template"* %12, %"class.v8::Template"* %2, %"class.v8::Signature"* %15, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8CharacterData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #6
  tail call void @_ZN5blink8bindings30InstallUnscopablePropertyNamesEPN2v87IsolateENS1_5LocalINS1_7ContextEEENS4_INS1_6ObjectEEEN4base4spanIKPKcLm18446744073709551615EEE(%"class.v8::Isolate"* %11, %"class.v8::Context"* %0, %"class.v8::Object"* %3, i64 4, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZZN5blink15V8CharacterData33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorEE24kUnscopablePropertyNames, i64 0, i64 0)) #6
  br label %12

12:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::Template"* @_ZNK5blink15WrapperTypeInfo18GetV8ClassTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldE(%"struct.blink::WrapperTypeInfo"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 6, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([6 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 9, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([9 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink15V8CharacterData30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data24DataAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, i8* %23, i64 72
  %29 = bitcast i8* %28 to %"class.blink::ParkableString"*
  %30 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %29) #6
  br label %34

31:                                               ; preds = %22
  %32 = getelementptr inbounds i8, i8* %23, i64 80
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %27, %31
  %35 = phi %"class.WTF::String"* [ %30, %27 ], [ %33, %31 ]
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 1
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %42, label %48

42:                                               ; preds = %34
  %43 = getelementptr inbounds i64, i64* %37, i64 3
  %44 = load i64, i64* %38, align 8
  %45 = add i64 %44, 200
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %43, align 8
  br label %67

48:                                               ; preds = %34
  %49 = load i64, i64* %38, align 8
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to %"class.blink::V8PerIsolateData"**
  %52 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %52, i64 0, i32 5, i32 0, i32 0, i32 0
  %54 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %53, align 8
  %55 = getelementptr inbounds i64, i64* %37, i64 3
  %56 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %54, i64 0, i32 3, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, %40
  br i1 %58, label %59, label %66

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %54, i64 0, i32 1, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = inttoptr i64 %61 to i64*
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %55, align 8
  br label %67

66:                                               ; preds = %48
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %54, i64* %55, %"class.WTF::StringImpl"* nonnull %40) #6
  br label %67

67:                                               ; preds = %42, %59, %63, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data24DataAttributeSetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 -1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, -1
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %8, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %22 [
    i16 1057, label %18
    i16 1056, label %18
    i16 1040, label %18
  ]

18:                                               ; preds = %1, %1, %1
  %19 = add i64 %8, 19
  %20 = inttoptr i64 %19 to i8**
  %21 = load i8*, i8** %20, align 1
  br label %25

22:                                               ; preds = %1
  %23 = bitcast i64* %7 to %"class.v8::Object"*
  %24 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %23, i32 1) #6
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i8* [ %21, %18 ], [ %24, %22 ]
  %27 = bitcast i8* %26 to %"class.blink::CharacterData"*
  %28 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %29 = load i64*, i64** %28, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 1
  %31 = bitcast i64* %30 to %"class.v8::Isolate"**
  %32 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %25
  %37 = ptrtoint %"class.v8::Isolate"* %32 to i64
  %38 = add i64 %37, 160
  %39 = inttoptr i64 %38 to %"class.v8::Value"*
  br label %43

40:                                               ; preds = %25
  %41 = bitcast i64** %5 to %"class.v8::Value"**
  %42 = load %"class.v8::Value"*, %"class.v8::Value"** %41, align 8
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi %"class.v8::Value"* [ %39, %36 ], [ %42, %40 ]
  %45 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %45) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 56, i1 false)
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 3, i16* %47, align 8
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %48, align 2
  %49 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %50 = bitcast i8** %49 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %50, align 8
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %51, align 8
  %52 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %32, %"class.v8::Isolate"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %55 = bitcast %"class.WTF::StringImpl"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #6
  %56 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %56) #6
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %3, %"class.v8::Isolate"* %32, %"class.v8::Value"* %44, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %57 = load i32, i32* %53, align 8
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %106

59:                                               ; preds = %43
  %60 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #6
  %61 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 0, i32 0
  %62 = load %"class.v8::String"*, %"class.v8::String"** %61, align 8
  %63 = icmp eq %"class.v8::String"* %62, null
  br i1 %63, label %66, label %64, !prof !3

64:                                               ; preds = %59
  %65 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %62, i32 0) #6
  br label %87

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %87, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #6
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !3

84:                                               ; preds = %75
  call void @llvm.trap() #6
  unreachable

85:                                               ; preds = %75
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %76, align 4
  br label %87

87:                                               ; preds = %64, %66, %70, %85
  %88 = phi %"class.WTF::StringImpl"* [ %65, %64 ], [ null, %66 ], [ %68, %70 ], [ %68, %85 ]
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  call void @_ZN5blink13CharacterData7setDataERKN3WTF6StringE(%"class.blink::CharacterData"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %4) #6
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #6
  br label %105

105:                                              ; preds = %87, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #6
  br label %106

106:                                              ; preds = %43, %105
  %107 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  store i8* null, i8** %107, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %111, label %110

110:                                              ; preds = %106
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %108) #6
  br label %111

111:                                              ; preds = %110, %106
  %112 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %3, i64 0, i32 1, i32 0, i32 0
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #6
  br label %128

128:                                              ; preds = %111, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %56) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %129 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = icmp eq i64* %130, null
  br i1 %131, label %141, label %132

132:                                              ; preds = %128
  %133 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %134 = bitcast %"class.v8::Isolate"* %133 to %"class.v8::internal::Isolate"*
  %135 = load i64, i64* %130, align 8
  %136 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %134, i64 %135) #6
  %137 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %133) #6
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = bitcast i64* %136 to %"class.v8::Value"*
  %140 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %133, %"class.v8::Value"* %139) #6
  br label %141

141:                                              ; preds = %138, %132, %128
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #6
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %45) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data26LengthAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %44, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, i8* %23, i64 72
  %29 = bitcast i8* %28 to %"class.blink::ParkableStringImpl"**
  %30 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %29, align 8
  %31 = icmp eq %"class.blink::ParkableStringImpl"* %30, null
  br i1 %31, label %51, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %33, align 8
  %35 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, null
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %30, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  br label %55

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %34, i64 0, i32 8
  br label %55

44:                                               ; preds = %22
  %45 = getelementptr inbounds i8, i8* %23, i64 80
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"**
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  br label %55

51:                                               ; preds = %44, %36, %27
  %52 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %53 = load i64*, i64** %52, align 8
  %54 = getelementptr inbounds i64, i64* %53, i64 3
  br label %64

55:                                               ; preds = %40, %42, %49
  %56 = phi i32* [ %43, %42 ], [ %41, %40 ], [ %50, %49 ]
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = getelementptr inbounds i64, i64* %59, i64 3
  %61 = icmp sgt i32 %57, -1
  br i1 %61, label %62, label %81, !prof !4

62:                                               ; preds = %55
  %63 = icmp ult i32 %57, 1073741824
  br i1 %63, label %64, label %69, !prof !4

64:                                               ; preds = %51, %62
  %65 = phi i32 [ 0, %51 ], [ %57, %62 ]
  %66 = phi i64* [ %54, %51 ], [ %60, %62 ]
  %67 = sext i32 %65 to i64
  %68 = shl nsw i64 %67, 1
  store i64 %68, i64* %66, align 8
  br label %93

69:                                               ; preds = %62
  %70 = getelementptr inbounds i64, i64* %59, i64 1
  %71 = bitcast i64* %70 to %"class.v8::Isolate"**
  %72 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %71, align 8
  %73 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %72, i32 %57) #6
  %74 = icmp eq %"class.v8::Integer"* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %69
  %76 = getelementptr inbounds i64, i64* %59, i64 2
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %60, align 8
  br label %93

78:                                               ; preds = %69
  %79 = bitcast %"class.v8::Integer"* %73 to i64*
  %80 = load i64, i64* %79, align 8
  store i64 %80, i64* %60, align 8
  br label %93

81:                                               ; preds = %55
  %82 = getelementptr inbounds i64, i64* %59, i64 1
  %83 = bitcast i64* %82 to %"class.v8::Isolate"**
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %83, align 8
  %85 = tail call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %84, i32 %57) #6
  %86 = icmp eq %"class.v8::Integer"* %85, null
  br i1 %86, label %87, label %90, !prof !3

87:                                               ; preds = %81
  %88 = getelementptr inbounds i64, i64* %59, i64 2
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %60, align 8
  br label %93

90:                                               ; preds = %81
  %91 = bitcast %"class.v8::Integer"* %85 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %60, align 8
  br label %93

93:                                               ; preds = %64, %75, %78, %87, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data54PreviousElementSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %28, %30 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %25

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 3
  %39 = getelementptr inbounds i64, i64* %37, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 176
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %38, align 8
  br label %74

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 3
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %49, null
  %51 = getelementptr inbounds i64, i64* %46, i64 2
  %52 = select i1 %50, i64* %51, i64* %49, !prof !3
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %47, align 8
  %54 = load i64*, i64** %48, align 8
  %55 = icmp eq i64* %54, null
  br i1 %55, label %56, label %74

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %2, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = bitcast i64* %59 to %"class.v8::Object"*
  %61 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %60) #6
  %62 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %61) #6
  %63 = bitcast %"class.blink::Node"* %28 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %64 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %64, i64 7
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %65, align 8
  %67 = tail call %"class.v8::Value"* %66(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %62) #6
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %56
  %70 = load i64*, i64** %45, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 3
  %72 = bitcast %"class.v8::Value"* %67 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %35, %44, %56, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data58PreviousElementSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %28, %30 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %25

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 3
  %39 = getelementptr inbounds i64, i64* %37, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 176
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %38, align 8
  br label %71

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 3
  %49 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %50 = load i64*, i64** %2, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 -1
  %52 = bitcast i64* %51 to %"class.v8::Object"*
  %53 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %48, %"class.blink::ScriptWrappable"* nonnull %45, %"class.v8::Object"* %52, %"class.blink::ScriptWrappable"* %49) #6
  br i1 %53, label %71, label %54

54:                                               ; preds = %44
  %55 = load i64*, i64** %2, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %57) #6
  %59 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #6
  %60 = bitcast %"class.blink::Node"* %28 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = tail call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %45, %"class.blink::ScriptState"* %59) #6
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %54
  %67 = load i64*, i64** %46, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 3
  %69 = bitcast %"class.v8::Value"* %64 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %35, %44, %54, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data50NextElementSiblingAttributeGetCallbackForMainWorldERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %28, %30 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %25

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 3
  %39 = getelementptr inbounds i64, i64* %37, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 176
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %38, align 8
  br label %74

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %46 = load i64*, i64** %45, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 3
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = icmp eq i64* %49, null
  %51 = getelementptr inbounds i64, i64* %46, i64 2
  %52 = select i1 %50, i64* %51, i64* %49, !prof !3
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %47, align 8
  %54 = load i64*, i64** %48, align 8
  %55 = icmp eq i64* %54, null
  br i1 %55, label %56, label %74

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0
  %58 = load i64*, i64** %2, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 -1
  %60 = bitcast i64* %59 to %"class.v8::Object"*
  %61 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %60) #6
  %62 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %61) #6
  %63 = bitcast %"class.blink::Node"* %28 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %64 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %63, align 8
  %65 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %64, i64 7
  %66 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %65, align 8
  %67 = tail call %"class.v8::Value"* %66(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %62) #6
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %56
  %70 = load i64*, i64** %45, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 3
  %72 = bitcast %"class.v8::Value"* %67 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %35, %44, %56, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data54NextElementSiblingAttributeGetCallbackForNonMainWorldsERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Node"*
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi %"class.blink::Node"* [ %24, %22 ], [ %28, %30 ]
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %25

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %37 = load i64*, i64** %36, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 3
  %39 = getelementptr inbounds i64, i64* %37, i64 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 176
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %38, align 8
  br label %71

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 3
  %49 = bitcast i8* %23 to %"class.blink::ScriptWrappable"*
  %50 = load i64*, i64** %2, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 -1
  %52 = bitcast i64* %51 to %"class.v8::Object"*
  %53 = tail call zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64* %48, %"class.blink::ScriptWrappable"* nonnull %45, %"class.v8::Object"* %52, %"class.blink::ScriptWrappable"* %49) #6
  br i1 %53, label %71, label %54

54:                                               ; preds = %44
  %55 = load i64*, i64** %2, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 -1
  %57 = bitcast i64* %56 to %"class.v8::Object"*
  %58 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %57) #6
  %59 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %58) #6
  %60 = bitcast %"class.blink::Node"* %28 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %61, i64 7
  %63 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %62, align 8
  %64 = tail call %"class.v8::Value"* %63(%"class.blink::ScriptWrappable"* nonnull %45, %"class.blink::ScriptState"* %59) #6
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %54
  %67 = load i64*, i64** %46, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 3
  %69 = bitcast %"class.v8::Value"* %64 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %68, align 8
  br label %71

71:                                               ; preds = %35, %44, %54, %66
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data22AfterOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::HeapVector.406", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  %22 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %23 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %25 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i8 0, i8* %22, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 -1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  switch i16 %38, label %43 [
    i16 1057, label %39
    i16 1056, label %39
    i16 1040, label %39
  ]

39:                                               ; preds = %1, %1, %1
  %40 = add i64 %29, 19
  %41 = inttoptr i64 %40 to i8**
  %42 = load i8*, i8** %41, align 1
  br label %46

43:                                               ; preds = %1
  %44 = bitcast i64* %28 to %"class.v8::Object"*
  %45 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %44, i32 1) #6
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %42, %39 ], [ %45, %43 ]
  %48 = bitcast %"class.blink::HeapVector.406"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #6
  call void @_ZN5blink8bindings31VariadicArgumentsToNativeValuesINS_34V8UnionNodeOrStringOrTrustedScriptEJEEENS_11IDLSequenceIT_E8ImplTypeEPN2v87IsolateERKNS7_20FunctionCallbackInfoINS7_5ValueEEEiRNS_14ExceptionStateEDpT0_(%"class.blink::HeapVector.406"* nonnull sret %4, %"class.v8::Isolate"* %9, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %49 = load i32, i32* %18, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = bitcast i8* %47 to %"class.blink::Node"*
  call void @_ZN5blink4Node5AfterERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"* %52, %"class.blink::HeapVector.406"* nonnull dereferenceable(16) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  %54 = load i8, i8* %22, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %57

57:                                               ; preds = %53, %56
  %58 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %57
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #6
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #6
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #6
  br label %72

72:                                               ; preds = %69, %63, %57
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #6
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data27AppendDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::ExceptionState", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %75, !prof !3

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 1
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %15) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %18, align 2
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %20 = bitcast i8** %19 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %20, align 8
  %21 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %23 = bitcast %"class.v8::Isolate"** %22 to i64*
  store i64 %14, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %26 = bitcast %"class.WTF::StringImpl"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #6
  %27 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %8) #6
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %10
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #6
  br label %45

45:                                               ; preds = %10, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %46 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %47 = load i64*, i64** %46, align 8
  %48 = icmp eq i64* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %22, align 8
  %51 = bitcast %"class.v8::Isolate"* %50 to %"class.v8::internal::Isolate"*
  %52 = load i64, i64* %47, align 8
  %53 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %51, i64 %52) #6
  %54 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %50) #6
  br i1 %54, label %58, label %55

55:                                               ; preds = %49
  %56 = bitcast i64* %53 to %"class.v8::Value"*
  %57 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %50, %"class.v8::Value"* %56) #6
  br label %58

58:                                               ; preds = %55, %49, %45
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #6
  br label %74

74:                                               ; preds = %58, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %15) #6
  br label %280

75:                                               ; preds = %1
  %76 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 -1
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i64 %79, -4294967296
  %84 = zext i32 %82 to i64
  %85 = or i64 %83, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load i16, i16* %87, align 2
  switch i16 %88, label %93 [
    i16 1057, label %89
    i16 1056, label %89
    i16 1040, label %89
  ]

89:                                               ; preds = %75, %75, %75
  %90 = add i64 %79, 19
  %91 = inttoptr i64 %90 to %"class.blink::CharacterData"**
  %92 = load %"class.blink::CharacterData"*, %"class.blink::CharacterData"** %91, align 1
  br label %106

93:                                               ; preds = %75
  %94 = bitcast i64* %78 to %"class.v8::Object"*
  %95 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %94, i32 1) #6
  %96 = load i32, i32* %7, align 8
  %97 = bitcast i8* %95 to %"class.blink::CharacterData"*
  %98 = icmp sgt i32 %96, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %101 = load i64*, i64** %100, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %89, %93
  %107 = phi %"class.blink::CharacterData"* [ %92, %89 ], [ %97, %93 ]
  %108 = bitcast i64** %76 to %"class.v8::Value"**
  %109 = load %"class.v8::Value"*, %"class.v8::Value"** %108, align 8
  br label %110

110:                                              ; preds = %99, %106
  %111 = phi i1 [ false, %99 ], [ true, %106 ]
  %112 = phi %"class.blink::CharacterData"* [ %97, %99 ], [ %107, %106 ]
  %113 = phi %"class.v8::Value"* [ %105, %99 ], [ %109, %106 ]
  %114 = bitcast %"class.v8::Value"* %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = and i64 %115, 3
  %117 = icmp eq i64 %116, 1
  br i1 %117, label %118, label %143, !prof !5

118:                                              ; preds = %110
  %119 = add i64 %115, -1
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = and i64 %115, -4294967296
  %123 = zext i32 %121 to i64
  %124 = or i64 %122, %123
  %125 = add i64 %124, 7
  %126 = inttoptr i64 %125 to i16*
  %127 = load i16, i16* %126, align 2
  %128 = icmp ult i16 %127, 64
  br i1 %128, label %129, label %143, !prof !4

129:                                              ; preds = %118
  br i1 %111, label %137, label %130

130:                                              ; preds = %129
  %131 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %132 = load i64*, i64** %131, align 8
  %133 = getelementptr inbounds i64, i64* %132, i64 1
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 160
  %136 = inttoptr i64 %135 to %"class.v8::Value"*
  br label %140

137:                                              ; preds = %129
  %138 = bitcast i64** %76 to %"class.v8::Value"**
  %139 = load %"class.v8::Value"*, %"class.v8::Value"** %138, align 8
  br label %140

140:                                              ; preds = %130, %137
  %141 = phi %"class.v8::Value"* [ %136, %130 ], [ %139, %137 ]
  %142 = ptrtoint %"class.v8::Value"* %141 to i64
  br label %210

143:                                              ; preds = %110, %118
  %144 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 1
  %147 = bitcast i64* %146 to %"class.v8::Isolate"**
  %148 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %147, align 8
  %149 = bitcast %"class.blink::ExceptionState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %149) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 56, i1 false)
  %150 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %151 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 0
  store i16 6, i16* %151, align 8
  %152 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 1
  store i16 0, i16* %152, align 2
  %153 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 1, i32 2
  %154 = bitcast i8** %153 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %154, align 8
  %155 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %155, align 8
  %156 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 3
  store %"class.v8::Isolate"* %148, %"class.v8::Isolate"** %156, align 8
  %157 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  store i32 0, i32* %157, align 8
  %158 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 5, i32 0, i32 0
  %159 = bitcast %"class.WTF::StringImpl"** %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 16, i1 false) #6
  %160 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %160) #6
  br i1 %111, label %165, label %161

161:                                              ; preds = %143
  %162 = load i64, i64* %146, align 8
  %163 = add i64 %162, 160
  %164 = inttoptr i64 %163 to %"class.v8::Value"*
  br label %168

165:                                              ; preds = %143
  %166 = bitcast i64** %76 to %"class.v8::Value"**
  %167 = load %"class.v8::Value"*, %"class.v8::Value"** %166, align 8
  br label %168

168:                                              ; preds = %161, %165
  %169 = phi %"class.v8::Value"* [ %164, %161 ], [ %167, %165 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %148, %"class.v8::Value"* %169, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %4) #6
  %170 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %172, i64 0, i32 0, i32 0
  %174 = bitcast %"class.WTF::String"* %172 to i64*
  %175 = load i64, i64* %174, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %173, align 8
  %176 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1
  %177 = bitcast %"class.std::__1::unique_ptr.393"* %176 to i64*
  %178 = load i64, i64* %177, align 8
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %160) #6
  %179 = load i32, i32* %157, align 8
  %180 = icmp eq i32 %179, 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %150, align 8
  %181 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %182 = load i64*, i64** %181, align 8
  %183 = icmp eq i64* %182, null
  br i1 %183, label %193, label %184

184:                                              ; preds = %168
  %185 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %156, align 8
  %186 = bitcast %"class.v8::Isolate"* %185 to %"class.v8::internal::Isolate"*
  %187 = load i64, i64* %182, align 8
  %188 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %186, i64 %187) #6
  %189 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %185) #6
  br i1 %189, label %193, label %190

190:                                              ; preds = %184
  %191 = bitcast i64* %188 to %"class.v8::Value"*
  %192 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %185, %"class.v8::Value"* %191) #6
  br label %193

193:                                              ; preds = %190, %184, %168
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #6
  br label %209

209:                                              ; preds = %193, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %149) #6
  br i1 %180, label %210, label %258

210:                                              ; preds = %209, %140
  %211 = phi i64 [ 0, %140 ], [ %178, %209 ]
  %212 = phi i64 [ 0, %140 ], [ %175, %209 ]
  %213 = phi i64 [ %142, %140 ], [ %171, %209 ]
  %214 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #6
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %219, label %216, !prof !3

216:                                              ; preds = %210
  %217 = inttoptr i64 %213 to %"class.v8::String"*
  %218 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %217, i32 0) #6
  br label %239

219:                                              ; preds = %210
  %220 = inttoptr i64 %212 to %"class.WTF::StringImpl"*
  %221 = icmp eq i64 %212, 0
  br i1 %221, label %239, label %222

222:                                              ; preds = %219
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %239

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i33
  %231 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #6
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !3

236:                                              ; preds = %227
  call void @llvm.trap() #6
  unreachable

237:                                              ; preds = %227
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %228, align 4
  br label %239

239:                                              ; preds = %216, %219, %222, %237
  %240 = phi %"class.WTF::StringImpl"* [ %218, %216 ], [ null, %219 ], [ %220, %222 ], [ %220, %237 ]
  %241 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %240, %"class.WTF::StringImpl"** %241, align 8
  call void @_ZN5blink13CharacterData10appendDataERKN3WTF6StringE(%"class.blink::CharacterData"* %112, %"class.WTF::String"* nonnull dereferenceable(8) %6) #6
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %257, label %244

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %242) #6
  br label %257

257:                                              ; preds = %239, %253, %256
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #6
  br label %258

258:                                              ; preds = %209, %257
  %259 = phi i64 [ %211, %257 ], [ %178, %209 ]
  %260 = phi i64 [ %212, %257 ], [ %175, %209 ]
  %261 = icmp eq i64 %259, 0
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = inttoptr i64 %259 to i8*
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %263) #6
  br label %264

264:                                              ; preds = %262, %258
  %265 = inttoptr i64 %260 to %"class.WTF::StringImpl"*
  %266 = icmp eq i64 %260, 0
  br i1 %266, label %280, label %267

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #6
  br label %280

280:                                              ; preds = %279, %276, %264, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data23BeforeOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::HeapVector.406", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  %22 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %23 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %25 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i8 0, i8* %22, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 -1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  switch i16 %38, label %43 [
    i16 1057, label %39
    i16 1056, label %39
    i16 1040, label %39
  ]

39:                                               ; preds = %1, %1, %1
  %40 = add i64 %29, 19
  %41 = inttoptr i64 %40 to i8**
  %42 = load i8*, i8** %41, align 1
  br label %46

43:                                               ; preds = %1
  %44 = bitcast i64* %28 to %"class.v8::Object"*
  %45 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %44, i32 1) #6
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %42, %39 ], [ %45, %43 ]
  %48 = bitcast %"class.blink::HeapVector.406"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #6
  call void @_ZN5blink8bindings31VariadicArgumentsToNativeValuesINS_34V8UnionNodeOrStringOrTrustedScriptEJEEENS_11IDLSequenceIT_E8ImplTypeEPN2v87IsolateERKNS7_20FunctionCallbackInfoINS7_5ValueEEEiRNS_14ExceptionStateEDpT0_(%"class.blink::HeapVector.406"* nonnull sret %4, %"class.v8::Isolate"* %9, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %49 = load i32, i32* %18, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = bitcast i8* %47 to %"class.blink::Node"*
  call void @_ZN5blink4Node6BeforeERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"* %52, %"class.blink::HeapVector.406"* nonnull dereferenceable(16) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  %54 = load i8, i8* %22, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %57

57:                                               ; preds = %53, %56
  %58 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %57
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #6
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #6
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #6
  br label %72

72:                                               ; preds = %69, %63, %57
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #6
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data27DeleteDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %125

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::CharacterData"**
  %60 = load %"class.blink::CharacterData"*, %"class.blink::CharacterData"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #6
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::CharacterData"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::CharacterData"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::CharacterData"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %79) #6
  br i1 %80, label %81, label %84, !prof !4

81:                                               ; preds = %77
  %82 = bitcast %"class.v8::Value"* %79 to %"class.v8::Uint32"*
  %83 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %82) #6
  br label %93

84:                                               ; preds = %77
  %85 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %79) #6
  br i1 %85, label %86, label %89, !prof !4

86:                                               ; preds = %84
  %87 = bitcast %"class.v8::Value"* %79 to %"class.v8::Int32"*
  %88 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %87) #6
  br label %93

89:                                               ; preds = %84
  %90 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %91 = load i32, i32* %17, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %125

93:                                               ; preds = %86, %81, %89
  %94 = phi i32 [ %90, %89 ], [ %88, %86 ], [ %83, %81 ]
  %95 = load i32, i32* %20, align 8
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = load i64*, i64** %4, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %107

103:                                              ; preds = %93
  %104 = load i64*, i64** %44, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = bitcast i64* %105 to %"class.v8::Value"*
  br label %107

107:                                              ; preds = %97, %103
  %108 = phi %"class.v8::Value"* [ %102, %97 ], [ %106, %103 ]
  %109 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %108) #6
  br i1 %109, label %110, label %113, !prof !4

110:                                              ; preds = %107
  %111 = bitcast %"class.v8::Value"* %108 to %"class.v8::Uint32"*
  %112 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %111) #6
  br label %120

113:                                              ; preds = %107
  %114 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %108) #6
  br i1 %114, label %115, label %118, !prof !4

115:                                              ; preds = %113
  %116 = bitcast %"class.v8::Value"* %108 to %"class.v8::Int32"*
  %117 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %116) #6
  br label %120

118:                                              ; preds = %113
  %119 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %108, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %120

120:                                              ; preds = %110, %115, %118
  %121 = phi i32 [ %112, %110 ], [ %117, %115 ], [ %119, %118 ]
  %122 = load i32, i32* %17, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  call void @_ZN5blink13CharacterData10deleteDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"* %78, i32 %94, i32 %121, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %125

125:                                              ; preds = %120, %89, %124, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %126 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %127 = load i64*, i64** %126, align 8
  %128 = icmp eq i64* %127, null
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %131 = bitcast %"class.v8::Isolate"* %130 to %"class.v8::internal::Isolate"*
  %132 = load i64, i64* %127, align 8
  %133 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %131, i64 %132) #6
  %134 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %130) #6
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = bitcast i64* %133 to %"class.v8::Value"*
  %137 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %130, %"class.v8::Value"* %136) #6
  br label %138

138:                                              ; preds = %135, %129, %125
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #6
  br label %154

154:                                              ; preds = %138, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data27InsertDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %45, !prof !3

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %23) #6
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br label %184

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::CharacterData"**
  %62 = load %"class.blink::CharacterData"*, %"class.blink::CharacterData"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #6
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::CharacterData"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::CharacterData"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::CharacterData"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #6
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #6
  br label %95

86:                                               ; preds = %79
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #6
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #6
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %93 = load i32, i32* %19, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %184

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %97) #6
  %98 = load i32, i32* %22, align 8
  %99 = icmp sgt i32 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = load i64*, i64** %6, align 8
  %102 = getelementptr inbounds i64, i64* %101, i64 1
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, 160
  %105 = inttoptr i64 %104 to %"class.v8::Value"*
  br label %110

106:                                              ; preds = %95
  %107 = load i64*, i64** %46, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = bitcast i64* %108 to %"class.v8::Value"*
  br label %110

110:                                              ; preds = %100, %106
  %111 = phi %"class.v8::Value"* [ %105, %100 ], [ %109, %106 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %111, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %112 = load i32, i32* %19, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %161

114:                                              ; preds = %110
  %115 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #6
  %116 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %117 = load %"class.v8::String"*, %"class.v8::String"** %116, align 8
  %118 = icmp eq %"class.v8::String"* %117, null
  br i1 %118, label %121, label %119, !prof !3

119:                                              ; preds = %114
  %120 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %117, i32 0) #6
  br label %142

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #6
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %130
  call void @llvm.trap() #6
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %119, %121, %125, %140
  %143 = phi %"class.WTF::StringImpl"* [ %120, %119 ], [ null, %121 ], [ %123, %125 ], [ %123, %140 ]
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %144, align 8
  call void @_ZN5blink13CharacterData10insertDataEjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"* %80, i32 %96, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #6
  br label %160

160:                                              ; preds = %142, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #6
  br label %161

161:                                              ; preds = %110, %160
  %162 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %163 = load i8*, i8** %162, align 8
  store i8* null, i8** %162, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %163) #6
  br label %166

166:                                              ; preds = %165, %161
  %167 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %168) #6
  br label %183

183:                                              ; preds = %166, %179, %182
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %97) #6
  br label %184

184:                                              ; preds = %91, %183, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %185 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %186 = load i64*, i64** %185, align 8
  %187 = icmp eq i64* %186, null
  br i1 %187, label %197, label %188

188:                                              ; preds = %184
  %189 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %190 = bitcast %"class.v8::Isolate"* %189 to %"class.v8::internal::Isolate"*
  %191 = load i64, i64* %186, align 8
  %192 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %190, i64 %191) #6
  %193 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %189) #6
  br i1 %193, label %197, label %194

194:                                              ; preds = %188
  %195 = bitcast i64* %192 to %"class.v8::Value"*
  %196 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %189, %"class.v8::Value"* %195) #6
  br label %197

197:                                              ; preds = %194, %188, %184
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #6
  br label %213

213:                                              ; preds = %197, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data23RemoveOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %13 = bitcast i8** %12 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0)>, <2 x i8*>* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  %16 = bitcast %"class.v8::Isolate"** %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #6
  %21 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %22 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %24 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %23, i64* %24, align 8
  store i8 0, i8* %21, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %25 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 -1
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -1
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = and i64 %28, -4294967296
  %33 = zext i32 %31 to i64
  %34 = or i64 %32, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %42 [
    i16 1057, label %38
    i16 1056, label %38
    i16 1040, label %38
  ]

38:                                               ; preds = %1, %1, %1
  %39 = add i64 %28, 19
  %40 = inttoptr i64 %39 to i8**
  %41 = load i8*, i8** %40, align 1
  br label %45

42:                                               ; preds = %1
  %43 = bitcast i64* %27 to %"class.v8::Object"*
  %44 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %43, i32 1) #6
  br label %45

45:                                               ; preds = %38, %42
  %46 = phi i8* [ %41, %38 ], [ %44, %42 ]
  %47 = bitcast i8* %46 to %"class.blink::Node"*
  call void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"* %47, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %48 = load i8, i8* %21, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %45
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %51

51:                                               ; preds = %45, %50
  %52 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %54 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = icmp eq i64* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %51
  %58 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %15, align 8
  %59 = bitcast %"class.v8::Isolate"* %58 to %"class.v8::internal::Isolate"*
  %60 = load i64, i64* %55, align 8
  %61 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %59, i64 %60) #6
  %62 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %58) #6
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast i64* %61 to %"class.v8::Value"*
  %65 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %58, %"class.v8::Value"* %64) #6
  br label %66

66:                                               ; preds = %63, %57, %51
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #6
  br label %82

82:                                               ; preds = %66, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data28ReplaceDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = getelementptr inbounds i64, i64* %7, i64 1
  %9 = bitcast i64* %8 to %"class.v8::Isolate"**
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %11) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 56, i1 false)
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %13, align 8
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %14, align 2
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %16 = bitcast i8** %15 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)>, <2 x i8*>* %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.WTF::StringImpl"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #6
  %22 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %45, !prof !3

25:                                               ; preds = %1
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 3, i32 %23) #6
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #6
  br label %44

44:                                               ; preds = %25, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  br label %214

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %47 = load i64*, i64** %46, align 8
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = and i64 %49, -4294967296
  %54 = zext i32 %52 to i64
  %55 = or i64 %53, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load i16, i16* %57, align 2
  switch i16 %58, label %63 [
    i16 1057, label %59
    i16 1056, label %59
    i16 1040, label %59
  ]

59:                                               ; preds = %45, %45, %45
  %60 = add i64 %49, 19
  %61 = inttoptr i64 %60 to %"class.blink::CharacterData"**
  %62 = load %"class.blink::CharacterData"*, %"class.blink::CharacterData"** %61, align 1
  br label %75

63:                                               ; preds = %45
  %64 = bitcast i64* %48 to %"class.v8::Object"*
  %65 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %64, i32 1) #6
  %66 = load i32, i32* %22, align 8
  %67 = bitcast i8* %65 to %"class.blink::CharacterData"*
  %68 = icmp sgt i32 %66, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %63
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 1
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 160
  %74 = inttoptr i64 %73 to %"class.v8::Value"*
  br label %79

75:                                               ; preds = %59, %63
  %76 = phi %"class.blink::CharacterData"* [ %62, %59 ], [ %67, %63 ]
  %77 = bitcast i64** %46 to %"class.v8::Value"**
  %78 = load %"class.v8::Value"*, %"class.v8::Value"** %77, align 8
  br label %79

79:                                               ; preds = %69, %75
  %80 = phi %"class.blink::CharacterData"* [ %67, %69 ], [ %76, %75 ]
  %81 = phi %"class.v8::Value"* [ %74, %69 ], [ %78, %75 ]
  %82 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %81) #6
  br i1 %82, label %83, label %86, !prof !4

83:                                               ; preds = %79
  %84 = bitcast %"class.v8::Value"* %81 to %"class.v8::Uint32"*
  %85 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %84) #6
  br label %95

86:                                               ; preds = %79
  %87 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %81) #6
  br i1 %87, label %88, label %91, !prof !4

88:                                               ; preds = %86
  %89 = bitcast %"class.v8::Value"* %81 to %"class.v8::Int32"*
  %90 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %89) #6
  br label %95

91:                                               ; preds = %86
  %92 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %81, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %93 = load i32, i32* %19, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %214

95:                                               ; preds = %88, %83, %91
  %96 = phi i32 [ %92, %91 ], [ %90, %88 ], [ %85, %83 ]
  %97 = load i32, i32* %22, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = load i64*, i64** %6, align 8
  %101 = getelementptr inbounds i64, i64* %100, i64 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 160
  %104 = inttoptr i64 %103 to %"class.v8::Value"*
  br label %109

105:                                              ; preds = %95
  %106 = load i64*, i64** %46, align 8
  %107 = getelementptr inbounds i64, i64* %106, i64 1
  %108 = bitcast i64* %107 to %"class.v8::Value"*
  br label %109

109:                                              ; preds = %99, %105
  %110 = phi %"class.v8::Value"* [ %104, %99 ], [ %108, %105 ]
  %111 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %110) #6
  br i1 %111, label %112, label %115, !prof !4

112:                                              ; preds = %109
  %113 = bitcast %"class.v8::Value"* %110 to %"class.v8::Uint32"*
  %114 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %113) #6
  br label %122

115:                                              ; preds = %109
  %116 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %110) #6
  br i1 %116, label %117, label %120, !prof !4

117:                                              ; preds = %115
  %118 = bitcast %"class.v8::Value"* %110 to %"class.v8::Int32"*
  %119 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %118) #6
  br label %122

120:                                              ; preds = %115
  %121 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %10, %"class.v8::Value"* %110, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %122

122:                                              ; preds = %112, %117, %120
  %123 = phi i32 [ %114, %112 ], [ %119, %117 ], [ %121, %120 ]
  %124 = load i32, i32* %19, align 8
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %214

126:                                              ; preds = %122
  %127 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %127) #6
  %128 = load i32, i32* %22, align 8
  %129 = icmp sgt i32 %128, 2
  br i1 %129, label %136, label %130

130:                                              ; preds = %126
  %131 = load i64*, i64** %6, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 1
  %133 = load i64, i64* %132, align 8
  %134 = add i64 %133, 160
  %135 = inttoptr i64 %134 to %"class.v8::Value"*
  br label %140

136:                                              ; preds = %126
  %137 = load i64*, i64** %46, align 8
  %138 = getelementptr inbounds i64, i64* %137, i64 2
  %139 = bitcast i64* %138 to %"class.v8::Value"*
  br label %140

140:                                              ; preds = %130, %136
  %141 = phi %"class.v8::Value"* [ %135, %130 ], [ %139, %136 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %10, %"class.v8::Value"* %141, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %142 = load i32, i32* %19, align 8
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %191

144:                                              ; preds = %140
  %145 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #6
  %146 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %147 = load %"class.v8::String"*, %"class.v8::String"** %146, align 8
  %148 = icmp eq %"class.v8::String"* %147, null
  br i1 %148, label %151, label %149, !prof !3

149:                                              ; preds = %144
  %150 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %147, i32 0) #6
  br label %172

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #6
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !3

169:                                              ; preds = %160
  call void @llvm.trap() #6
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %149, %151, %155, %170
  %173 = phi %"class.WTF::StringImpl"* [ %150, %149 ], [ null, %151 ], [ %153, %155 ], [ %153, %170 ]
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %174, align 8
  call void @_ZN5blink13CharacterData11replaceDataEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"* %80, i32 %96, i32 %123, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #6
  br label %190

190:                                              ; preds = %172, %186, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #6
  br label %191

191:                                              ; preds = %140, %190
  %192 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  store i8* null, i8** %192, align 8
  %194 = icmp eq i8* %193, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %191
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %193) #6
  br label %196

196:                                              ; preds = %195, %191
  %197 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #6
  br label %213

213:                                              ; preds = %196, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %127) #6
  br label %214

214:                                              ; preds = %122, %91, %213, %44
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %215 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %216 = load i64*, i64** %215, align 8
  %217 = icmp eq i64* %216, null
  br i1 %217, label %227, label %218

218:                                              ; preds = %214
  %219 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %18, align 8
  %220 = bitcast %"class.v8::Isolate"* %219 to %"class.v8::internal::Isolate"*
  %221 = load i64, i64* %216, align 8
  %222 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %220, i64 %221) #6
  %223 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %219) #6
  br i1 %223, label %227, label %224

224:                                              ; preds = %218
  %225 = bitcast i64* %222 to %"class.v8::Value"*
  %226 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %219, %"class.v8::Value"* %225) #6
  br label %227

227:                                              ; preds = %224, %218, %214
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #6
  br label %243

243:                                              ; preds = %227, %239, %242
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %11) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data28ReplaceWithOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.blink::CEReactionsScope", align 8
  %4 = alloca %"class.blink::HeapVector.406", align 8
  %5 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds i64, i64* %6, i64 1
  %8 = bitcast i64* %7 to %"class.v8::Isolate"**
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %13, align 2
  %14 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %15 = bitcast i8** %14 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)>, <2 x i8*>* %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %9, %"class.v8::Isolate"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.WTF::StringImpl"** %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #6
  %21 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #6
  %22 = getelementptr inbounds %"class.blink::CEReactionsScope", %"class.blink::CEReactionsScope"* %3, i64 0, i32 1
  %23 = bitcast %"class.blink::CEReactionsScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = load i64, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  %25 = bitcast %"class.blink::CEReactionsScope"* %3 to i64*
  store i64 %24, i64* %25, align 8
  store i8 0, i8* %22, align 8
  store %"class.blink::CEReactionsScope"* %3, %"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E, align 8
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 -1
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  switch i16 %38, label %43 [
    i16 1057, label %39
    i16 1056, label %39
    i16 1040, label %39
  ]

39:                                               ; preds = %1, %1, %1
  %40 = add i64 %29, 19
  %41 = inttoptr i64 %40 to i8**
  %42 = load i8*, i8** %41, align 1
  br label %46

43:                                               ; preds = %1
  %44 = bitcast i64* %28 to %"class.v8::Object"*
  %45 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %44, i32 1) #6
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i8* [ %42, %39 ], [ %45, %43 ]
  %48 = bitcast %"class.blink::HeapVector.406"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #6
  call void @_ZN5blink8bindings31VariadicArgumentsToNativeValuesINS_34V8UnionNodeOrStringOrTrustedScriptEJEEENS_11IDLSequenceIT_E8ImplTypeEPN2v87IsolateERKNS7_20FunctionCallbackInfoINS7_5ValueEEEiRNS_14ExceptionStateEDpT0_(%"class.blink::HeapVector.406"* nonnull sret %4, %"class.v8::Isolate"* %9, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %0, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %49 = load i32, i32* %18, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = bitcast i8* %47 to %"class.blink::Node"*
  call void @_ZN5blink4Node11ReplaceWithERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"* %52, %"class.blink::HeapVector.406"* nonnull dereferenceable(16) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %53

53:                                               ; preds = %46, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  %54 = load i8, i8* %22, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"* nonnull %3) #6
  br label %57

57:                                               ; preds = %53, %56
  %58 = load i64*, i64** bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64**), align 8
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* bitcast (%"class.blink::CEReactionsScope"** @_ZN5blink16CEReactionsScope13top_of_stack_E to i64*), align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %60 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = icmp eq i64* %61, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %57
  %64 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %65 = bitcast %"class.v8::Isolate"* %64 to %"class.v8::internal::Isolate"*
  %66 = load i64, i64* %61, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %65, i64 %66) #6
  %68 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %64) #6
  br i1 %68, label %72, label %69

69:                                               ; preds = %63
  %70 = bitcast i64* %67 to %"class.v8::Value"*
  %71 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %64, %"class.v8::Value"* %70) #6
  br label %72

72:                                               ; preds = %69, %63, %57
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #6
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_117v8_character_data30SubstringDataOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)>, <2 x i8*>* %14, align 8
  %15 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #6
  %20 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %43, !prof !3

23:                                               ; preds = %1
  %24 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %21) #6
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #6
  br label %42

42:                                               ; preds = %23, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6
  br label %172

43:                                               ; preds = %1
  %44 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds i64, i64* %45, i64 -1
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, -1
  %49 = inttoptr i64 %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  switch i16 %56, label %61 [
    i16 1057, label %57
    i16 1056, label %57
    i16 1040, label %57
  ]

57:                                               ; preds = %43, %43, %43
  %58 = add i64 %47, 19
  %59 = inttoptr i64 %58 to %"class.blink::CharacterData"**
  %60 = load %"class.blink::CharacterData"*, %"class.blink::CharacterData"** %59, align 1
  br label %73

61:                                               ; preds = %43
  %62 = bitcast i64* %46 to %"class.v8::Object"*
  %63 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %62, i32 1) #6
  %64 = load i32, i32* %20, align 8
  %65 = bitcast i8* %63 to %"class.blink::CharacterData"*
  %66 = icmp sgt i32 %64, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = load i64*, i64** %4, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 160
  %72 = inttoptr i64 %71 to %"class.v8::Value"*
  br label %77

73:                                               ; preds = %57, %61
  %74 = phi %"class.blink::CharacterData"* [ %60, %57 ], [ %65, %61 ]
  %75 = bitcast i64** %44 to %"class.v8::Value"**
  %76 = load %"class.v8::Value"*, %"class.v8::Value"** %75, align 8
  br label %77

77:                                               ; preds = %67, %73
  %78 = phi %"class.blink::CharacterData"* [ %65, %67 ], [ %74, %73 ]
  %79 = phi %"class.v8::Value"* [ %72, %67 ], [ %76, %73 ]
  %80 = tail call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %79) #6
  br i1 %80, label %81, label %84, !prof !4

81:                                               ; preds = %77
  %82 = bitcast %"class.v8::Value"* %79 to %"class.v8::Uint32"*
  %83 = tail call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %82) #6
  br label %93

84:                                               ; preds = %77
  %85 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %79) #6
  br i1 %85, label %86, label %89, !prof !4

86:                                               ; preds = %84
  %87 = bitcast %"class.v8::Value"* %79 to %"class.v8::Int32"*
  %88 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %87) #6
  br label %93

89:                                               ; preds = %84
  %90 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %79, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %91 = load i32, i32* %17, align 8
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %172

93:                                               ; preds = %86, %81, %89
  %94 = phi i32 [ %90, %89 ], [ %88, %86 ], [ %83, %81 ]
  %95 = load i32, i32* %20, align 8
  %96 = icmp sgt i32 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %93
  %98 = load i64*, i64** %4, align 8
  %99 = getelementptr inbounds i64, i64* %98, i64 1
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, 160
  %102 = inttoptr i64 %101 to %"class.v8::Value"*
  br label %107

103:                                              ; preds = %93
  %104 = load i64*, i64** %44, align 8
  %105 = getelementptr inbounds i64, i64* %104, i64 1
  %106 = bitcast i64* %105 to %"class.v8::Value"*
  br label %107

107:                                              ; preds = %97, %103
  %108 = phi %"class.v8::Value"* [ %102, %97 ], [ %106, %103 ]
  %109 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* %108) #6
  br i1 %109, label %110, label %113, !prof !4

110:                                              ; preds = %107
  %111 = bitcast %"class.v8::Value"* %108 to %"class.v8::Uint32"*
  %112 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* %111) #6
  br label %120

113:                                              ; preds = %107
  %114 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %108) #6
  br i1 %114, label %115, label %118, !prof !4

115:                                              ; preds = %113
  %116 = bitcast %"class.v8::Value"* %108 to %"class.v8::Int32"*
  %117 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %116) #6
  br label %120

118:                                              ; preds = %113
  %119 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, %"class.v8::Value"* %108, i32 0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  br label %120

120:                                              ; preds = %110, %115, %118
  %121 = phi i32 [ %112, %110 ], [ %117, %115 ], [ %119, %118 ]
  %122 = load i32, i32* %17, align 8
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %172

124:                                              ; preds = %120
  %125 = call %"class.WTF::StringImpl"* @_ZN5blink13CharacterData13substringDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"* %78, i32 %94, i32 %121, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %126 = load i32, i32* %17, align 8
  %127 = icmp eq i32 %126, 0
  %128 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %127, label %129, label %158

129:                                              ; preds = %124
  br i1 %128, label %130, label %138

130:                                              ; preds = %129
  %131 = load i64*, i64** %4, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 3
  %133 = getelementptr inbounds i64, i64* %131, i64 1
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, 200
  %136 = inttoptr i64 %135 to i64*
  %137 = load i64, i64* %136, align 8
  store i64 %137, i64* %132, align 8
  br label %172

138:                                              ; preds = %129
  %139 = ptrtoint %"class.v8::Isolate"* %8 to i64
  %140 = add i64 %139, 8
  %141 = inttoptr i64 %140 to %"class.blink::V8PerIsolateData"**
  %142 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %142, i64 0, i32 5, i32 0, i32 0, i32 0
  %144 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %143, align 8
  %145 = load i64*, i64** %4, align 8
  %146 = getelementptr inbounds i64, i64* %145, i64 3
  %147 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %144, i64 0, i32 3, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, %125
  br i1 %149, label %150, label %157

150:                                              ; preds = %138
  %151 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %144, i64 0, i32 1, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %159, label %154

154:                                              ; preds = %150
  %155 = inttoptr i64 %152 to i64*
  %156 = load i64, i64* %155, align 8
  store i64 %156, i64* %146, align 8
  br label %159

157:                                              ; preds = %138
  call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %144, i64* %146, %"class.WTF::StringImpl"* nonnull %125) #6
  br label %159

158:                                              ; preds = %124
  br i1 %128, label %172, label %159

159:                                              ; preds = %150, %154, %157, %158
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #6
  br label %172

172:                                              ; preds = %120, %89, %171, %168, %158, %130, %42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %173 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = icmp eq i64* %174, null
  br i1 %175, label %185, label %176

176:                                              ; preds = %172
  %177 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %178 = bitcast %"class.v8::Isolate"* %177 to %"class.v8::internal::Isolate"*
  %179 = load i64, i64* %174, align 8
  %180 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %178, i64 %179) #6
  %181 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %177) #6
  br i1 %181, label %185, label %182

182:                                              ; preds = %176
  %183 = bitcast i64* %180 to %"class.v8::Value"*
  %184 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %177, %"class.v8::Value"* %183) #6
  br label %185

185:                                              ; preds = %182, %176, %172
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #6
  br label %201

201:                                              ; preds = %185, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings30InstallUnscopablePropertyNamesEPN2v87IsolateENS1_5LocalINS1_7ContextEEENS4_INS1_6ObjectEEEN4base4spanIKPKcLm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.v8::Context"*, %"class.v8::Object"*, i64, i8**) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE2EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.393"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %102

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.393"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %102

36:                                               ; preds = %26
  %37 = load i64, i64* %6, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 1
  br i1 %39, label %40, label %84

40:                                               ; preds = %36
  %41 = add i64 %37, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = and i64 %37, -4294967296
  %45 = zext i32 %43 to i64
  %46 = or i64 %44, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load i16, i16* %48, align 2
  %50 = icmp eq i16 %49, 67
  br i1 %50, label %51, label %84

51:                                               ; preds = %40
  %52 = add i64 %37, 23
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, -2
  %56 = icmp eq i32 %55, 6
  br i1 %56, label %57, label %84

57:                                               ; preds = %51
  %58 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %59 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %63, label %81, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #6
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !3

78:                                               ; preds = %69
  tail call void @llvm.trap() #6
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %81

81:                                               ; preds = %57, %64, %79
  %82 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %83 = bitcast %"class.std::__1::unique_ptr.393"* %82 to i64*
  store i64 0, i64* %83, align 8
  br label %102

84:                                               ; preds = %40, %36, %51
  %85 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %85) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %86 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %87 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %86) #6
  %88 = icmp eq %"class.v8::String"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %84
  %90 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %91 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %92 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %92, i64 5
  %94 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %93, align 8
  call void %94(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %90) #6
  %95 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 152, i1 false)
  br label %101

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %87, %"class.v8::String"** %97, align 8
  %98 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %98, align 8
  %99 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %100 = bitcast %"class.std::__1::unique_ptr.393"* %99 to i64*
  store i64 0, i64* %100, align 8
  br label %101

101:                                              ; preds = %96, %89
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %85) #6
  br label %102

102:                                              ; preds = %101, %81, %28, %21
  ret void
}

declare void @_ZN5blink13CharacterData7setDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.14, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #6
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #6
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12DOMDataStore18SetReturnValueFastEN2v811ReturnValueINS1_5ValueEEEPNS_15ScriptWrappableENS1_5LocalINS1_6ObjectEEEPKS5_(i64*, %"class.blink::ScriptWrappable"*, %"class.v8::Object"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %5 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %12 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %28, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  %19 = icmp eq %"class.v8::Object"* %2, null
  %20 = or i1 %19, %18
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.v8::Object"* %2 to i64*
  %23 = load i64, i64* %17, align 8
  %24 = load i64, i64* %22, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %28, label %37

26:                                               ; preds = %15
  %27 = and i1 %19, %18
  br i1 %27, label %28, label %37

28:                                               ; preds = %21, %26, %4
  %29 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %30, null
  %32 = getelementptr inbounds i64, i64* %0, i64 -1
  %33 = select i1 %31, i64* %32, i64* %30, !prof !3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %0, align 8
  %35 = load i64*, i64** %29, align 8
  %36 = icmp ne i64* %35, null
  br label %80

37:                                               ; preds = %21, %26
  %38 = getelementptr inbounds i64, i64* %0, i64 -2
  %39 = bitcast i64* %38 to %"class.v8::Isolate"**
  %40 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %39, align 8
  %41 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %40) #6
  %42 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %41) #6
  %43 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %42, i64 0, i32 2, i32 0
  %44 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %44, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 1
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = icmp eq i64* %52, null
  %54 = getelementptr inbounds i64, i64* %0, i64 -1
  %55 = select i1 %53, i64* %54, i64* %52, !prof !3
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %0, align 8
  %57 = load i64*, i64** %51, align 8
  %58 = icmp ne i64* %57, null
  br label %80

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0
  %62 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %61, %"class.blink::ScriptWrappable"* %1) #6
  %63 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %62, 0
  %64 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %60, i64 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %46, i64 0, i32 3, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %65, i64 %68
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %63, %69
  br i1 %70, label %80, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = icmp eq i64* %73, null
  br i1 %74, label %75, label %78, !prof !3

75:                                               ; preds = %71
  %76 = getelementptr inbounds i64, i64* %0, i64 -1
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %0, align 8
  br label %80

78:                                               ; preds = %71
  %79 = load i64, i64* %73, align 8
  store i64 %79, i64* %0, align 8
  br label %80

80:                                               ; preds = %78, %75, %59, %50, %28
  %81 = phi i1 [ %36, %28 ], [ %58, %50 ], [ false, %59 ], [ true, %75 ], [ true, %78 ]
  ret i1 %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings31VariadicArgumentsToNativeValuesINS_34V8UnionNodeOrStringOrTrustedScriptEJEEENS_11IDLSequenceIT_E8ImplTypeEPN2v87IsolateERKNS7_20FunctionCallbackInfoINS7_5ValueEEEiRNS_14ExceptionStateEDpT0_(%"class.blink::HeapVector.406"* noalias sret, %"class.v8::Isolate"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %2, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %3
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::HeapVector.406"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false)
  br label %89

11:                                               ; preds = %5
  %12 = sub i32 %7, %3
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %11
  %15 = zext i32 %12 to i64
  %16 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEEEmm(i64 %15) #6
  %17 = lshr i64 %16, 3
  %18 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %17) #6
  %19 = ptrtoint %"class.blink::HeapVectorBacking"* %18 to i64
  %20 = trunc i64 %17 to i32
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %18, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #6
  br label %26

26:                                               ; preds = %23, %14, %11
  %27 = phi i32 [ 0, %11 ], [ %20, %14 ], [ %20, %23 ]
  %28 = phi i64 [ 0, %11 ], [ %19, %14 ], [ %19, %23 ]
  %29 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %2, i64 0, i32 1
  %30 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %2, i64 0, i32 0
  %31 = inttoptr i64 %28 to %"class.blink::Member.412"*
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %4, i64 0, i32 4
  %33 = sext i32 %3 to i64
  br label %34

34:                                               ; preds = %68, %26
  %35 = phi i64 [ 0, %26 ], [ %70, %68 ]
  %36 = phi i64 [ %33, %26 ], [ %69, %68 ]
  %37 = icmp slt i64 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = load i32, i32* %6, align 8
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %36, %40
  br i1 %41, label %48, label %42

42:                                               ; preds = %38, %34
  %43 = load i64*, i64** %30, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 1
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 160
  %47 = inttoptr i64 %46 to %"class.v8::Value"*
  br label %52

48:                                               ; preds = %38
  %49 = load i64*, i64** %29, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 %36
  %51 = bitcast i64* %50 to %"class.v8::Value"*
  br label %52

52:                                               ; preds = %42, %48
  %53 = phi %"class.v8::Value"* [ %47, %42 ], [ %51, %48 ]
  %54 = tail call %"class.blink::V8UnionNodeOrStringOrTrustedScript"* @_ZN5blink34V8UnionNodeOrStringOrTrustedScript6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %53, %"class.blink::ExceptionState"* dereferenceable(72) %4) #6
  %55 = ptrtoint %"class.blink::V8UnionNodeOrStringOrTrustedScript"* %54 to i64
  %56 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %31, i64 %35
  %57 = bitcast %"class.blink::Member.412"* %56 to i64*
  store atomic i64 %55, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::V8UnionNodeOrStringOrTrustedScript"* %54 to i8*
  %62 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #6
  br label %63

63:                                               ; preds = %52, %60
  %64 = load i32, i32* %32, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = bitcast %"class.blink::HeapVector.406"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false)
  br label %89

68:                                               ; preds = %63
  %69 = add nsw i64 %36, 1
  %70 = add nuw nsw i64 %35, 1
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %12, %71
  br i1 %72, label %73, label %34

73:                                               ; preds = %68
  %74 = trunc i64 %35 to i32
  %75 = add i32 %74, 1
  %76 = getelementptr inbounds %"class.blink::HeapVector.406", %"class.blink::HeapVector.406"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.blink::HeapVector.406", %"class.blink::HeapVector.406"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = bitcast %"class.blink::HeapVector.406"* %0 to i64*
  store atomic i64 %28, i64* %78 monotonic, align 8
  store i32 %27, i32* %76, align 8
  store i32 %75, i32* %77, align 4
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = inttoptr i64 %28 to i8*
  %83 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #6
  br label %84

84:                                               ; preds = %81, %73
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #6
  br label %89

89:                                               ; preds = %66, %84, %87, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.18, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #6
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #6
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.20, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.194"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.194"*)) #6
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 4
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #6
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #6
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %34, i8* %35) #6
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #6
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #6
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.412"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.412", %"class.blink::Member.412"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.412"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_34V8UnionNodeOrStringOrTrustedScriptEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.194"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_34V8UnionNodeOrStringOrTrustedScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::V8UnionNodeOrStringOrTrustedScript"*
  tail call void @_ZNK5blink34V8UnionNodeOrStringOrTrustedScript5TraceEPNS_7VisitorE(%"class.blink::V8UnionNodeOrStringOrTrustedScript"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink34V8UnionNodeOrStringOrTrustedScript5TraceEPNS_7VisitorE(%"class.blink::V8UnionNodeOrStringOrTrustedScript"*, %"class.blink::Visitor"*) unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare %"class.blink::V8UnionNodeOrStringOrTrustedScript"* @_ZN5blink34V8UnionNodeOrStringOrTrustedScript6CreateEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink4Node5AfterERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::HeapVector.406"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink16CEReactionsScope15InvokeReactionsEv(%"class.blink::CEReactionsScope"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

declare void @_ZN5blink13CharacterData10appendDataERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.393"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.393"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.393"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare void @_ZN5blink4Node6BeforeERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::HeapVector.406"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink13CharacterData10deleteDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #2

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink13CharacterData10insertDataEjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink4Node6removeERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink13CharacterData11replaceDataEjjRKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink4Node11ReplaceWithERKNS_10HeapVectorINS_6MemberINS_34V8UnionNodeOrStringOrTrustedScriptEEELj0EEERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::HeapVector.406"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13CharacterData13substringDataEjjRNS_14ExceptionStateE(%"class.blink::CharacterData"*, i32, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
