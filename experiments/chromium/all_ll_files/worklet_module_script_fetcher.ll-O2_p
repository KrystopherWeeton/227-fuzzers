; ModuleID = '../../third_party/blink/renderer/core/loader/modulescript/worklet_module_script_fetcher.cc'
source_filename = "../../third_party/blink/renderer/core/loader/modulescript/worklet_module_script_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.134", i32, [4 x i8], %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.307", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.314", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.252", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__atomic_base.172" }
%"struct.std::__1::__atomic_base.172" = type { %"struct.std::__1::__cxx_atomic_impl.173" }
%"struct.std::__1::__cxx_atomic_impl.173" = type { %"struct.std::__1::__cxx_atomic_base_impl.174" }
%"struct.std::__1::__cxx_atomic_base_impl.174" = type { i64 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist.223"* }
%"class.blink::Worklist.223" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.170" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.230", %"class.std::__1::__compressed_pair.239", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.246", [4 x i8] }>
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232", %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { i64 }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { float }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.255", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.202"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.209"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.359", i64 }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.361" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::WorkletModuleScriptFetcher" = type <{ %"class.blink::ModuleScriptFetcher.base", [7 x i8], %"class.blink::CrossThreadPersistent", %"class.blink::KURL", i32, [4 x i8] }>
%"class.blink::ModuleScriptFetcher.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.23", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.323", %"class.blink::ResourceResponse", %class.scoped_refptr.325, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.4", i8, %"class.absl::optional.13", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.4" = type { %"class.absl::optional_internal::optional_data.5" }
%"class.absl::optional_internal::optional_data.5" = type { %"class.absl::optional_internal::optional_data_base.6" }
%"class.absl::optional_internal::optional_data_base.6" = type { %"class.absl::optional_internal::optional_data_dtor_base.7" }
%"class.absl::optional_internal::optional_data_dtor_base.7" = type { i8, [7 x i8], %union.anon.8 }
%union.anon.8 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.18" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.23" = type { %"class.WTF::VectorBuffer.24" }
%"class.WTF::VectorBuffer.24" = type { %"class.WTF::VectorBufferBase.25" }
%"class.WTF::VectorBufferBase.25" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.120" }
%"class.WTF::HashMap.120" = type { %"class.WTF::HashTable.121" }
%"class.WTF::HashTable.121" = type <{ %"struct.WTF::KeyValuePair.123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.123" = type <{ %"class.blink::WeakMember.627", i32, [4 x i8] }>
%"class.blink::WeakMember.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.126" }
%"class.WTF::HashTable.126" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.128", i8, i8, %class.scoped_refptr.132, %class.scoped_refptr.318, %class.scoped_refptr.320 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.128" = type { %"class.WTF::HashTable.129" }
%"class.WTF::HashTable.129" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.132 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.133" }
%"class.base::RefCounted.133" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.318 = type { %"class.base::RefCountedData.319"* }
%"class.base::RefCountedData.319" = type opaque
%class.scoped_refptr.320 = type { %"class.base::RefCountedData.321"* }
%"class.base::RefCountedData.321" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.83" }
%"class.base::time_internal::TimeBase.83" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.322 }
%class.scoped_refptr.322 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.31, %class.scoped_refptr.31, %class.scoped_refptr.31, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.34, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.47", %"class.absl::optional.52", %"class.absl::optional.62", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.72", %"class.absl::optional.62", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.62", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.72", %"class.absl::optional.77", i8, %class.scoped_refptr.82 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.26" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.31 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.366", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.26", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.31 }
%"class.WTF::RefCounted.366" = type { %"class.base::RefCounted.367" }
%"class.base::RefCounted.367" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.34 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.41, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.35"*, %"class.std::__1::unique_ptr.35"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::unique_ptr.35"* }
%class.scoped_refptr.41 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.52" = type { %"class.absl::optional_internal::optional_data.53" }
%"class.absl::optional_internal::optional_data.53" = type { %"class.absl::optional_internal::optional_data_base.54" }
%"class.absl::optional_internal::optional_data_base.54" = type { %"class.absl::optional_internal::optional_data_dtor_base.55" }
%"class.absl::optional_internal::optional_data_dtor_base.55" = type { i8, %union.anon.56 }
%union.anon.56 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.57", %"class.WTF::Vector.18", %"class.WTF::String" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %class.scoped_refptr.31*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.67", %"class.absl::optional.67" }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.base::TimeDelta" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.82 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.619", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.619" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.620" }
%"class.std::__1::vector.620" = type { %"class.std::__1::__vector_base.621" }
%"class.std::__1::__vector_base.621" = type { i32*, i32*, %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { i32* }
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.84", %class.scoped_refptr.99, %class.scoped_refptr.100, %"struct.blink::CacheControlHeader", %"class.absl::optional.67", %"class.absl::optional.101", %"class.absl::optional.101", %"class.absl::optional.101", i64, %"class.blink::KURL", %"class.WTF::Vector.106", %"class.WTF::String", %"class.WTF::Vector.18", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.72", %"class.WTF::Vector.18", %"class.blink::KURL", %"class.absl::optional.111" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.18", %"class.WTF::String", i64, i64, %"class.WTF::Vector.89", %"class.WTF::Vector.94" }
%"class.WTF::Vector.89" = type { %"class.WTF::VectorBuffer.90" }
%"class.WTF::VectorBuffer.90" = type { %"class.WTF::VectorBufferBase.91" }
%"class.WTF::VectorBufferBase.91" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.99 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.100 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.101" = type { %"class.absl::optional_internal::optional_data.102" }
%"class.absl::optional_internal::optional_data.102" = type { %"class.absl::optional_internal::optional_data_base.103" }
%"class.absl::optional_internal::optional_data_base.103" = type { %"class.absl::optional_internal::optional_data_dtor_base.104" }
%"class.absl::optional_internal::optional_data_dtor_base.104" = type { i8, %union.anon.105 }
%union.anon.105 = type { %"class.base::Time" }
%"class.WTF::Vector.106" = type { %"class.WTF::VectorBuffer.107" }
%"class.WTF::VectorBuffer.107" = type { %"class.WTF::VectorBufferBase.108" }
%"class.WTF::VectorBufferBase.108" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.111" = type { %"class.absl::optional_internal::optional_data.112" }
%"class.absl::optional_internal::optional_data.112" = type { %"class.absl::optional_internal::optional_data_base.113" }
%"class.absl::optional_internal::optional_data_base.113" = type { %"class.absl::optional_internal::optional_data_dtor_base.114" }
%"class.absl::optional_internal::optional_data_dtor_base.114" = type { i8, %union.anon.115 }
%union.anon.115 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.325 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.326", i64, %"class.WTF::Vector.328", %"class.WTF::Vector.333" }
%"class.WTF::RefCounted.326" = type { %"class.base::RefCounted.327" }
%"class.base::RefCounted.327" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { i8*, i32, i32 }
%"class.WTF::Vector.333" = type { %"class.WTF::VectorBuffer.334" }
%"class.WTF::VectorBuffer.334" = type { %"class.WTF::VectorBufferBase.335" }
%"class.WTF::VectorBufferBase.335" = type { %"class.std::__1::unique_ptr.336"*, i32, i32 }
%"class.std::__1::unique_ptr.336" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.339", %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.347" }
%"class.blink::PersistentBase.347" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.355" }
%"struct.std::__1::atomic.355" = type { %"struct.std::__1::__atomic_base.356" }
%"struct.std::__1::__atomic_base.356" = type { %"struct.std::__1::__cxx_atomic_impl.357" }
%"struct.std::__1::__cxx_atomic_impl.357" = type { %"struct.std::__1::__cxx_atomic_base_impl.358" }
%"struct.std::__1::__cxx_atomic_base_impl.358" = type { %"class.blink::PersistentNode"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.350", %"class.WTF::Mutex" }
%"class.WTF::HashMap.350" = type { %"class.WTF::HashTable.351" }
%"class.WTF::HashTable.351" = type <{ %"struct.WTF::KeyValuePair.354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.354" = type opaque
%"class.blink::ModuleScriptFetcher" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.368, %"class.mojo::PendingRemote.369" }
%class.scoped_refptr.368 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.369" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.372", %"class.blink::Member.373", %"class.blink::Member.375", %"class.blink::Member.377", %class.scoped_refptr.379, %class.scoped_refptr.379, %"class.blink::Member.381", %"class.blink::Member.383", %"class.blink::Member.385", %"class.blink::Member.389", %"class.blink::Member.443", %"class.blink::HeapHashMap.445", %"class.blink::HeapHashSet.452", %"class.blink::HeapHashSet.452", %"class.blink::HeapHashMap.459", %"class.blink::HeapVector", %"class.blink::Member.472", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.477", %"class.WTF::Vector.484", %"class.blink::HeapHashSet.490", %"class.blink::HeapHashSet.490", %"class.std::__1::unique_ptr.496", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.505", i8, i8, %"class.base::WeakPtrFactory.507" }
%"class.blink::ThreadState::PrefinalizerRegistration.372" = type { i8 }
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.379 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.380" }>
%"class.base::RefCountedThreadSafe.380" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type opaque
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.393", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.395", %"class.WTF::HashSet.400", i8, [3 x i8], i32, %"class.blink::HeapHashMap", %"class.std::__1::map", %"class.std::__1::map.419", %"class.std::__1::unique_ptr.428", %"class.blink::Member.383", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.441", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.395" = type { %"class.WTF::HashTable.396" }
%"class.WTF::HashTable.396" = type <{ %"struct.WTF::KeyValuePair.399"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.399" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.400" = type { %"class.WTF::HashTable.401" }
%"class.WTF::HashTable.401" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.406" }
%"class.WTF::HashMap.406" = type { %"class.WTF::HashTable.407" }
%"class.WTF::HashTable.407" = type <{ %"struct.WTF::KeyValuePair.409"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.409" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.410" }
%"class.std::__1::__tree.410" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::map.419" = type { %"class.std::__1::__tree.420" }
%"class.std::__1::__tree.420" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.445" = type { %"class.WTF::HashMap.448" }
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type opaque
%"class.blink::HeapHashSet.452" = type { %"class.WTF::HashSet.455" }
%"class.WTF::HashSet.455" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"class.blink::WeakMember.458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.458" = type { %"class.blink::MemberBase" }
%"class.blink::HeapHashMap.459" = type { %"class.WTF::HashMap.462" }
%"class.WTF::HashMap.462" = type { %"class.WTF::HashTable.463" }
%"class.WTF::HashTable.463" = type <{ %"struct.WTF::KeyValuePair.465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.465" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.468" }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.475", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.379, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.474 }
%class.scoped_refptr.474 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.432", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.432" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.433" }
%"struct.std::__1::atomic.433" = type { %"struct.std::__1::__atomic_base.434" }
%"struct.std::__1::__atomic_base.434" = type { %"struct.std::__1::__atomic_base.435" }
%"struct.std::__1::__atomic_base.435" = type { %"struct.std::__1::__cxx_atomic_impl.436" }
%"struct.std::__1::__cxx_atomic_impl.436" = type { %"struct.std::__1::__cxx_atomic_base_impl.437" }
%"struct.std::__1::__cxx_atomic_base_impl.437" = type { i8 }
%"class.blink::WeakMember.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::HeapHashMap.477" = type { %"class.WTF::HashMap.480" }
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.483" = type opaque
%"class.WTF::Vector.484" = type { %"class.WTF::VectorBuffer.485" }
%"class.WTF::VectorBuffer.485" = type { %"class.WTF::VectorBufferBase.486" }
%"class.WTF::VectorBufferBase.486" = type { %class.scoped_refptr.487*, i32, i32 }
%class.scoped_refptr.487 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.490" = type { %"class.WTF::HashSet.493" }
%"class.WTF::HashSet.493" = type { %"class.WTF::HashTable.494" }
%"class.WTF::HashTable.494" = type <{ %"class.blink::Member.323"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.496" = type { %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.WTF::HashSet.499"* }
%"class.WTF::HashSet.499" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.431 }
%class.scoped_refptr.431 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.503" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.507" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::ModuleScriptFetcher::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ScriptResource" = type <{ %"class.blink::TextResource", %"class.blink::ParkableString", %"class.blink::Member.556", i32, i32, %"class.blink::Member.590", i32, [4 x i8] }>
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.508" }
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.511", i32, %"class.WTF::Vector.328", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.517" }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::ParkableString" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.527", %"class.WTF::String", %"class.std::__1::unique_ptr.529" }
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.532", %"class.std::__1::unique_ptr.543", %"class.WTF::Vector.549", i8, i32 }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.WTF::Vector.535"* }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.549" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.537", [32 x i8] }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::ScriptStreamer"* }
%"class.blink::ScriptStreamer" = type { %"class.blink::ThreadState::PrefinalizerRegistration.560", i32, %"class.blink::Member.561", %"class.blink::Member.563", %"class.mojo::ScopedHandleBase.565", %"class.std::__1::unique_ptr.566", %"class.blink::SourceStream"*, %"class.std::__1::unique_ptr.578", i32, %"class.WTF::String", i64, i32, i32, %class.scoped_refptr.379 }
%"class.blink::ThreadState::PrefinalizerRegistration.560" = type { i8 }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::ScriptResource"* }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::ResponseBodyLoaderClient"* }
%"class.blink::ResponseBodyLoaderClient" = type opaque
%"class.mojo::ScopedHandleBase.565" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.569, i8, %"class.mojo::ScopedHandleBase.570", %class.scoped_refptr.571, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.574" }
%class.scoped_refptr.569 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::ScopedHandleBase.570" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.571 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.572 }
%class.scoped_refptr.572 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.573", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.573" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.574" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::SourceStream" = type opaque
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::ScriptCompiler::StreamedSource"* }
%"class.v8::ScriptCompiler::StreamedSource" = type { %"class.std::__1::unique_ptr.581" }
%"class.std::__1::unique_ptr.581" = type { %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.v8::internal::ScriptStreamingData"* }
%"struct.v8::internal::ScriptStreamingData" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::ScriptCachedMetadataHandler"* }
%"class.blink::ScriptCachedMetadataHandler" = type opaque
%"class.absl::optional.592" = type { %"class.absl::optional_internal::optional_data.593" }
%"class.absl::optional_internal::optional_data.593" = type { %"class.absl::optional_internal::optional_data_base.594" }
%"class.absl::optional_internal::optional_data_base.594" = type { %"class.absl::optional_internal::optional_data_dtor_base.595" }
%"class.absl::optional_internal::optional_data_dtor_base.595" = type { i8, [7 x i8], %union.anon.596 }
%union.anon.596 = type { %"class.blink::ModuleScriptCreationParams" }
%"class.blink::ModuleScriptCreationParams" = type <{ %"class.blink::KURL", %"class.blink::KURL", i32, i32, i8, [7 x i8], %"class.blink::ParkableString", %"class.WTF::String", %"class.blink::Persistent.597", %"class.blink::Persistent.601", i32, [4 x i8] }>
%"class.blink::Persistent.597" = type { %"class.blink::PersistentBase.598" }
%"class.blink::PersistentBase.598" = type { %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.blink::Persistent.601" = type { %"class.blink::PersistentBase.602" }
%"class.blink::PersistentBase.602" = type { %"class.blink::ScriptStreamer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.605" = type { %"class.WTF::Vector.608" }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.blink::Member.611"*, i32, i32 }
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::ConsoleMessage"* }
%"class.blink::ConsoleMessage" = type opaque

$_ZN5blink26WorkletModuleScriptFetcherD2Ev = comdat any

$_ZN5blink26WorkletModuleScriptFetcherD0Ev = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink14ResourceClient19IsRawResourceClientEv = comdat any

$_ZNK5blink26WorkletModuleScriptFetcher9DebugNameEv = comdat any

$_ZN5blink26ModuleScriptCreationParamsD2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25WorkletModuleResponsesMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_25WorkletModuleResponsesMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN5blink26ModuleScriptCreationParamsEE9constructIJRKNS2_4KURLES8_NS2_24ScriptSourceLocationTypeERNS2_10ModuleTypeERKNS2_14ParkableStringEPNS2_27SingleCachedMetadataHandlerEEEEvDpOT_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink26WorkletModuleScriptFetcherE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ModuleScriptFetcher"*, %"class.blink::Visitor"*)* @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::WorkletModuleScriptFetcher"*)* @_ZN5blink26WorkletModuleScriptFetcherD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkletModuleScriptFetcher"*)* @_ZN5blink26WorkletModuleScriptFetcherD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::Resource"*)* @_ZN5blink26WorkletModuleScriptFetcher14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::WorkletModuleScriptFetcher"*)* @_ZNK5blink26WorkletModuleScriptFetcher9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::FetchParameters"*, i32, %"class.blink::ResourceFetcher"*, i32, %"class.blink::ModuleScriptFetcher::Client"*)* @_ZN5blink26WorkletModuleScriptFetcher5FetchERNS_15FetchParametersENS_10ModuleTypeEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_19ModuleScriptFetcher6ClientE to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str = private unnamed_addr constant [27 x i8] c"WorkletModuleScriptFetcher\00", align 1

@_ZN5blink26WorkletModuleScriptFetcherC1EPNS_25WorkletModuleResponsesMapEN4base7PassKeyINS_18ModuleScriptLoaderEEE = hidden unnamed_addr alias void (%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::WorkletModuleResponsesMap"*), void (%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::WorkletModuleResponsesMap"*)* @_ZN5blink26WorkletModuleScriptFetcherC2EPNS_25WorkletModuleResponsesMapEN4base7PassKeyINS_18ModuleScriptLoaderEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletModuleScriptFetcherC2EPNS_25WorkletModuleResponsesMapEN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::WorkletModuleResponsesMap"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::WorkletModuleScriptFetcher"* %0 to %"class.blink::ModuleScriptFetcher"*
  tail call void @_ZN5blink19ModuleScriptFetcherC2EN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::ModuleScriptFetcher"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink26WorkletModuleScriptFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::WorkletModuleResponsesMap"* %1, %"class.blink::WorkletModuleResponsesMap"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  %10 = ptrtoint %"class.blink::WorkletModuleResponsesMap"* %1 to i64
  switch i64 %10, label %11 [
    i64 0, label %30
    i64 -1, label %30
  ]

11:                                               ; preds = %2
  %12 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %13 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %12, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #5
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #5
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %11
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %11 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.347"**
  store %"class.blink::PersistentBase.347"* %6, %"class.blink::PersistentBase.347"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25WorkletModuleResponsesMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  %29 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %8 to i64*
  store atomic i64 %28, i64* %29 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #5
  br label %30

30:                                               ; preds = %2, %2, %21
  %31 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %31) #5
  ret void
}

declare void @_ZN5blink19ModuleScriptFetcherC2EN4base7PassKeyINS_18ModuleScriptLoaderEEE(%"class.blink::ModuleScriptFetcher"*) unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletModuleScriptFetcher5FetchERNS_15FetchParametersENS_10ModuleTypeEPNS_15ResourceFetcherENS_16ModuleGraphLevelEPNS_19ModuleScriptFetcher6ClientE(%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::FetchParameters"* dereferenceable(1344), i32, %"class.blink::ResourceFetcher"*, i32, %"class.blink::ModuleScriptFetcher::Client"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %1, i64 0, i32 0, i32 0
  %10 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %9) #5
  %11 = getelementptr inbounds %"class.blink::ResourceFetcher", %"class.blink::ResourceFetcher"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %11, align 8
  %13 = icmp eq %"class.base::SingleThreadTaskRunner"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %6, %14
  %18 = tail call zeroext i1 @_ZN5blink25WorkletModuleResponsesMap8GetEntryERKNS_4KURLENS_10ModuleTypeEPNS_19ModuleScriptFetcher6ClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::WorkletModuleResponsesMap"* %8, %"class.blink::KURL"* dereferenceable(112) %10, i32 %2, %"class.blink::ModuleScriptFetcher::Client"* %5, %"class.base::SingleThreadTaskRunner"* %12) #5
  br i1 %18, label %26, label %19

19:                                               ; preds = %17
  %20 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %9) #5
  %21 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 3
  %22 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %21, %"class.blink::KURL"* dereferenceable(112) %20) #5
  %23 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 4
  store i32 %2, i32* %23, align 8
  %24 = bitcast %"class.blink::WorkletModuleScriptFetcher"* %0 to %"class.blink::ResourceClient"*
  %25 = tail call %"class.blink::ScriptResource"* @_ZN5blink14ScriptResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientENS0_16StreamingAllowedE(%"class.blink::FetchParameters"* dereferenceable(1344) %1, %"class.blink::ResourceFetcher"* %3, %"class.blink::ResourceClient"* %24, i32 0) #5
  br label %26

26:                                               ; preds = %17, %19
  ret void
}

declare zeroext i1 @_ZN5blink25WorkletModuleResponsesMap8GetEntryERKNS_4KURLENS_10ModuleTypeEPNS_19ModuleScriptFetcher6ClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::WorkletModuleResponsesMap"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.blink::ModuleScriptFetcher::Client"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare %"class.blink::ScriptResource"* @_ZN5blink14ScriptResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientENS0_16StreamingAllowedE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26WorkletModuleScriptFetcher14NotifyFinishedEPNS_8ResourceE(%"class.blink::WorkletModuleScriptFetcher"*, %"class.blink::Resource"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.592", align 8
  %4 = alloca %"class.blink::HeapVector.605", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::SingleCachedMetadataHandler"*, align 8
  %7 = bitcast %"class.blink::WorkletModuleScriptFetcher"* %0 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %7, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #5
  %8 = getelementptr inbounds %"class.absl::optional.592", %"class.absl::optional.592"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %8) #5
  %9 = bitcast %"class.absl::optional.592"* %3 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  store i8 0, i8* %8, align 8
  %10 = getelementptr inbounds %"class.absl::optional.592", %"class.absl::optional.592"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 296, i1 false) #5
  %11 = bitcast %"class.blink::Resource"* %1 to %"class.blink::ScriptResource"*
  %12 = bitcast %"class.blink::HeapVector.605"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #5
  %13 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = call zeroext i1 @_ZN5blink19ModuleScriptFetcher23WasModuleLoadSuccessfulEPNS_14ScriptResourceENS_10ModuleTypeEPNS_10HeapVectorINS_6MemberINS_14ConsoleMessageEEELj0EEE(%"class.blink::ScriptResource"* %11, i32 %14, %"class.blink::HeapVector.605"* nonnull %4) #5
  br i1 %15, label %16, label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 29
  %18 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"* %17) #5
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #5
  store i32 1, i32* %5, align 4
  %20 = call dereferenceable(8) %"class.blink::ParkableString"* @_ZN5blink14ScriptResource10SourceTextEv(%"class.blink::ScriptResource"* %11) #5
  %21 = bitcast %"class.blink::SingleCachedMetadataHandler"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  %22 = call %"class.blink::SingleCachedMetadataHandler"* @_ZN5blink14ScriptResource12CacheHandlerEv(%"class.blink::ScriptResource"* %11) #5
  store %"class.blink::SingleCachedMetadataHandler"* %22, %"class.blink::SingleCachedMetadataHandler"** %6, align 8
  %23 = load i8, i8* %8, align 8, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.absl::optional.592", %"class.absl::optional.592"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %26) #5
  store i8 0, i8* %8, align 8
  br label %27

27:                                               ; preds = %16, %25
  %28 = getelementptr inbounds %"class.absl::optional.592", %"class.absl::optional.592"* %3, i64 0, i32 0, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN5blink26ModuleScriptCreationParamsEE9constructIJRKNS2_4KURLES8_NS2_24ScriptSourceLocationTypeERNS2_10ModuleTypeERKNS2_14ParkableStringEPNS2_27SingleCachedMetadataHandlerEEEEvDpOT_(%"class.absl::optional_internal::optional_data_base.594"* nonnull %28, %"class.blink::KURL"* dereferenceable(112) %18, %"class.blink::KURL"* dereferenceable(112) %18, i32* nonnull dereferenceable(4) %5, i32* dereferenceable(4) %13, %"class.blink::ParkableString"* dereferenceable(8) %20, %"class.blink::SingleCachedMetadataHandler"** nonnull dereferenceable(8) %6) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #5
  br label %29

29:                                               ; preds = %27, %2
  %30 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 3
  %33 = load i32, i32* %13, align 8
  call void @_ZN5blink25WorkletModuleResponsesMap14SetEntryParamsERKNS_4KURLENS_10ModuleTypeERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap"* %31, %"class.blink::KURL"* dereferenceable(112) %32, i32 %33, %"class.absl::optional.592"* nonnull dereferenceable(304) %3) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #5
  %34 = load i8, i8* %8, align 8, !range !3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.absl::optional.592", %"class.absl::optional.592"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"* %37) #5
  store i8 0, i8* %8, align 8
  br label %38

38:                                               ; preds = %29, %36
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %8) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN5blink19ModuleScriptFetcher23WasModuleLoadSuccessfulEPNS_14ScriptResourceENS_10ModuleTypeEPNS_10HeapVectorINS_6MemberINS_14ConsoleMessageEEELj0EEE(%"class.blink::ScriptResource"*, i32, %"class.blink::HeapVector.605"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink16ResourceResponse17CurrentRequestUrlEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.blink::ParkableString"* @_ZN5blink14ScriptResource10SourceTextEv(%"class.blink::ScriptResource"*) local_unnamed_addr #1

declare %"class.blink::SingleCachedMetadataHandler"* @_ZN5blink14ScriptResource12CacheHandlerEv(%"class.blink::ScriptResource"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink25WorkletModuleResponsesMap14SetEntryParamsERKNS_4KURLENS_10ModuleTypeERKN4absl8optionalINS_26ModuleScriptCreationParamsEEE(%"class.blink::WorkletModuleResponsesMap"*, %"class.blink::KURL"* dereferenceable(112), i32, %"class.absl::optional.592"* dereferenceable(304)) local_unnamed_addr #1

declare void @_ZNK5blink19ModuleScriptFetcher5TraceEPNS_7VisitorE(%"class.blink::ModuleScriptFetcher"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WorkletModuleScriptFetcherD2Ev(%"class.blink::WorkletModuleScriptFetcher"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink26WorkletModuleScriptFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #5
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #5
  br label %22

22:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WorkletModuleScriptFetcherD0Ev(%"class.blink::WorkletModuleScriptFetcher"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink26WorkletModuleScriptFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %3) #5
  %4 = getelementptr inbounds %"class.blink::WorkletModuleScriptFetcher", %"class.blink::WorkletModuleScriptFetcher"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %4 to i64*
  %6 = load atomic i64, i64* %5 acquire, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %22, label %8

8:                                                ; preds = %1
  %9 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #5
  %10 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %9, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #5
  %11 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #5
  %12 = load atomic i64, i64* %5 monotonic, align 8
  %13 = inttoptr i64 %12 to %"class.blink::PersistentNode"*
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %11, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::CrossThreadPersistentRegion"* %11 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = inttoptr i64 %12 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %13, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %20, align 8
  store %"class.blink::PersistentNode"* %13, %"class.blink::PersistentNode"** %16, align 8
  br label %21

21:                                               ; preds = %15, %8
  store atomic i64 0, i64* %5 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #5
  br label %22

22:                                               ; preds = %1, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient19IsRawResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink26WorkletModuleScriptFetcher9DebugNameEv(%"class.blink::WorkletModuleScriptFetcher"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i64 26) #5
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

declare void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ModuleScriptCreationParamsD2Ev(%"class.blink::ModuleScriptCreationParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #5
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #5
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 8, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #5
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #5
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  %48 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 7, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #5
  br label %64

64:                                               ; preds = %47, %60, %63
  %65 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 6
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %65) #5
  %66 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %66) #5
  %67 = getelementptr inbounds %"class.blink::ModuleScriptCreationParams", %"class.blink::ModuleScriptCreationParams"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %67) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_25WorkletModuleResponsesMapELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::WorkletModuleResponsesMap"**
  %5 = load %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::WorkletModuleResponsesMap"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #5
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #5
  %7 = icmp eq %"class.blink::WorkletModuleResponsesMap"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::WorkletModuleResponsesMap", %"class.blink::WorkletModuleResponsesMap"* %5, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25WorkletModuleResponsesMapEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #5
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #5
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25WorkletModuleResponsesMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN5blink26ModuleScriptCreationParamsEE9constructIJRKNS2_4KURLES8_NS2_24ScriptSourceLocationTypeERNS2_10ModuleTypeERKNS2_14ParkableStringEPNS2_27SingleCachedMetadataHandlerEEEEvDpOT_(%"class.absl::optional_internal::optional_data_base.594"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), i32* dereferenceable(4), i32* dereferenceable(4), %"class.blink::ParkableString"* dereferenceable(8), %"class.blink::SingleCachedMetadataHandler"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.594", %"class.absl::optional_internal::optional_data_base.594"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %4, align 4
  %11 = load %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::SingleCachedMetadataHandler"** %6, align 8
  %12 = bitcast i8* %8 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %12, %"class.blink::KURL"* dereferenceable(112) %1) #5
  %13 = getelementptr inbounds i8, i8* %8, i64 112
  %14 = bitcast i8* %13 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %14, %"class.blink::KURL"* dereferenceable(112) %2) #5
  %15 = getelementptr inbounds i8, i8* %8, i64 224
  %16 = bitcast i8* %15 to i32*
  store i32 %9, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 228
  %18 = bitcast i8* %17 to i32*
  store i32 %10, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 232
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.blink::ParkableString", %"class.blink::ParkableString"* %5, i64 0, i32 0, i32 0
  %21 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 240
  %23 = bitcast i8* %22 to %"class.blink::ParkableStringImpl"**
  store %"class.blink::ParkableStringImpl"* %21, %"class.blink::ParkableStringImpl"** %23, align 8
  %24 = icmp eq %"class.blink::ParkableStringImpl"* %21, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %21, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %26) #5
  br label %27

27:                                               ; preds = %7, %25
  %28 = getelementptr inbounds i8, i8* %8, i64 248
  %29 = bitcast i8* %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds i8, i8* %8, i64 256
  %31 = bitcast i8* %30 to %"class.blink::SingleCachedMetadataHandler"**
  store %"class.blink::SingleCachedMetadataHandler"* %11, %"class.blink::SingleCachedMetadataHandler"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %8, i64 264
  %33 = bitcast i8* %32 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %33, align 8
  %34 = ptrtoint %"class.blink::SingleCachedMetadataHandler"* %11 to i64
  switch i64 %34, label %35 [
    i64 0, label %61
    i64 -1, label %61
  ]

35:                                               ; preds = %27
  %36 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %37 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %36, i64 0, i32 1
  %38 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %37) #5
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42, !prof !2

40:                                               ; preds = %35
  %41 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %37, i8* %41) #5
  br label %42

42:                                               ; preds = %40, %35
  %43 = phi i8* [ %41, %40 ], [ %38, %35 ]
  %44 = bitcast i8* %43 to %"class.blink::ThreadState"**
  %45 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %45, i64 0, i32 3, i32 0, i32 0, i32 0
  %47 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %48, align 8
  %50 = icmp eq %"class.blink::PersistentNode"* %49, null
  br i1 %50, label %51, label %54, !prof !2

51:                                               ; preds = %42
  %52 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %47, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %52) #5
  %53 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %48, align 8
  br label %54

54:                                               ; preds = %51, %42
  %55 = phi %"class.blink::PersistentNode"* [ %53, %51 ], [ %49, %42 ]
  %56 = bitcast %"class.blink::PersistentNode"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.blink::PersistentRegion"* %47 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %55, i64 0, i32 0
  store i8* %30, i8** %59, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %55, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %60, align 8
  store %"class.blink::PersistentNode"* %55, %"class.blink::PersistentNode"** %33, align 8
  br label %61

61:                                               ; preds = %27, %27, %54
  %62 = getelementptr inbounds i8, i8* %8, i64 272
  %63 = getelementptr inbounds i8, i8* %8, i64 288
  %64 = bitcast i8* %63 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false)
  store i32 14, i32* %64, align 8
  %65 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.594", %"class.absl::optional_internal::optional_data_base.594"* %0, i64 0, i32 0, i32 0
  store i8 1, i8* %65, align 8
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_27SingleCachedMetadataHandlerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::SingleCachedMetadataHandler"**
  %5 = load %"class.blink::SingleCachedMetadataHandler"*, %"class.blink::SingleCachedMetadataHandler"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #5
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #5
  %7 = icmp eq %"class.blink::SingleCachedMetadataHandler"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::SingleCachedMetadataHandler"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #5
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27SingleCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CachedMetadataHandler"*
  %4 = bitcast i8* %1 to void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)**, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CachedMetadataHandler"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
