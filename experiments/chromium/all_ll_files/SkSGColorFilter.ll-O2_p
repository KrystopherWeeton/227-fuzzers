; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGColorFilter.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGColorFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.2, i32, [4 x i8] }>
%class.SkCanvas = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.1, %class.sk_sp.2, %class.sk_sp.2, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.1 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.2 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%"class.sksg::ExternalColorFilter" = type { %"class.sksg::EffectNode", %class.sk_sp.1 }
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::ModeColorFilter" = type <{ %"class.sksg::ColorFilter", %class.sk_sp.5, i32, [4 x i8] }>
%"class.sksg::ColorFilter" = type { %"class.sksg::EffectNode", %class.sk_sp.1 }
%class.sk_sp.5 = type { %"class.sksg::Color"* }
%"class.sksg::Color" = type { %"class.sksg::PaintNode", i32, [4 x i8] }
%"class.sksg::PaintNode" = type { %"class.sksg::Node.base", float, float, float, i8, i32, i8, i8, i32 }
%"class.sksg::GradientColorFilter" = type <{ %"class.sksg::ColorFilter", %"class.std::__1::vector.8", float, [4 x i8] }>
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.5*, %class.sk_sp.5*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.5* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%class.sk_sp.3 = type { %"class.sksg::ExternalColorFilter"* }
%class.sk_sp.4 = type { %"class.sksg::ModeColorFilter"* }
%class.sk_sp.6 = type { %"class.sksg::Node"* }
%class.sk_sp.7 = type { %"class.sksg::GradientColorFilter"* }

$_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_ = comdat any

$_ZN4sksg11ColorFilterD2Ev = comdat any

$_ZN4sksg11ColorFilterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg11ColorFilterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::ColorFilter"*)* @_ZN4sksg11ColorFilterD2Ev to i8*), i8* bitcast (void (%"class.sksg::ColorFilter"*)* @_ZN4sksg11ColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::ColorFilter"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg11ColorFilter12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::ColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg11ColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::ColorFilter"*, %struct.SkPoint*)* @_ZNK4sksg11ColorFilter8onNodeAtERK7SkPoint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN4sksg19ExternalColorFilterE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::ExternalColorFilter"*)* @_ZN4sksg19ExternalColorFilterD2Ev to i8*), i8* bitcast (void (%"class.sksg::ExternalColorFilter"*)* @_ZN4sksg19ExternalColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::EffectNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::ExternalColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg19ExternalColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::EffectNode"*, %struct.SkPoint*)* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint to i8*)] }, align 8
@__const._ZNK4sksg19ExternalColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.local_ctx = private unnamed_addr constant %"class.sksg::RenderNode::ScopedRenderContext" <{ %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.1 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.2 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.2 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.2 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN4sksg15ModeColorFilterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::ModeColorFilter"*)* @_ZN4sksg15ModeColorFilterD2Ev to i8*), i8* bitcast (void (%"class.sksg::ModeColorFilter"*)* @_ZN4sksg15ModeColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::ColorFilter"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg11ColorFilter12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::ColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg11ColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::ColorFilter"*, %struct.SkPoint*)* @_ZNK4sksg11ColorFilter8onNodeAtERK7SkPoint to i8*), i8* bitcast (void (%class.sk_sp.1*, %"class.sksg::ModeColorFilter"*)* @_ZN4sksg15ModeColorFilter18onRevalidateFilterEv to i8*)] }, align 8
@_ZTVN4sksg19GradientColorFilterE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::GradientColorFilter"*)* @_ZN4sksg19GradientColorFilterD2Ev to i8*), i8* bitcast (void (%"class.sksg::GradientColorFilter"*)* @_ZN4sksg19GradientColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::ColorFilter"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg11ColorFilter12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::ColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg11ColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::ColorFilter"*, %struct.SkPoint*)* @_ZNK4sksg11ColorFilter8onNodeAtERK7SkPoint to i8*), i8* bitcast (void (%class.sk_sp.1*, %"class.sksg::GradientColorFilter"*)* @_ZN4sksg19GradientColorFilter18onRevalidateFilterEv to i8*)] }, align 8
@_ZZN4sksg12_GLOBAL__N_118MakeNColorGradientERKNSt3__16vectorI5sk_spINS_5ColorEENS1_9allocatorIS5_EEEEE16luminance_matrix = internal constant [20 x float] [float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000, float 0.000000e+00, float 0.000000e+00, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000, float 0.000000e+00, float 0.000000e+00, float 0x3FCB367A00000000, float 0x3FE6E2EB20000000, float 0x3FB27BB300000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], align 16

@_ZN4sksg19ExternalColorFilterC1E5sk_spINS_10RenderNodeEE = hidden unnamed_addr alias void (%"class.sksg::ExternalColorFilter"*, %class.sk_sp*), void (%"class.sksg::ExternalColorFilter"*, %class.sk_sp*)* @_ZN4sksg19ExternalColorFilterC2E5sk_spINS_10RenderNodeEE
@_ZN4sksg19ExternalColorFilterD1Ev = hidden unnamed_addr alias void (%"class.sksg::ExternalColorFilter"*), void (%"class.sksg::ExternalColorFilter"*)* @_ZN4sksg19ExternalColorFilterD2Ev
@_ZN4sksg15ModeColorFilterC1E5sk_spINS_10RenderNodeEES1_INS_5ColorEE11SkBlendMode = hidden unnamed_addr alias void (%"class.sksg::ModeColorFilter"*, %class.sk_sp*, %class.sk_sp.5*, i32), void (%"class.sksg::ModeColorFilter"*, %class.sk_sp*, %class.sk_sp.5*, i32)* @_ZN4sksg15ModeColorFilterC2E5sk_spINS_10RenderNodeEES1_INS_5ColorEE11SkBlendMode
@_ZN4sksg15ModeColorFilterD1Ev = hidden unnamed_addr alias void (%"class.sksg::ModeColorFilter"*), void (%"class.sksg::ModeColorFilter"*)* @_ZN4sksg15ModeColorFilterD2Ev
@_ZN4sksg19GradientColorFilterC1E5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.sksg::GradientColorFilter"*, %class.sk_sp*, %"class.std::__1::vector.8"*), void (%"class.sksg::GradientColorFilter"*, %class.sk_sp*, %"class.std::__1::vector.8"*)* @_ZN4sksg19GradientColorFilterC2E5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE
@_ZN4sksg19GradientColorFilterD1Ev = hidden unnamed_addr alias void (%"class.sksg::GradientColorFilter"*), void (%"class.sksg::GradientColorFilter"*)* @_ZN4sksg19GradientColorFilterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg11ColorFilterC2E5sk_spINS_10RenderNodeEE(%"class.sksg::ColorFilter"*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %5, align 8
  %8 = bitcast %class.sk_sp* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %4, %class.sk_sp* nonnull %3, i32 0) #9
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %10 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %9, align 8
  %11 = icmp eq %"class.sksg::RenderNode"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %"class.sksg::RenderNode"* %10 to %class.SkRefCntBase*
  %18 = bitcast %"class.sksg::RenderNode"* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #9
  br label %22

22:                                               ; preds = %2, %12, %16
  %23 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg11ColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 1, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %24, align 8
  ret void
}

declare void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"*, %class.sk_sp*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg11ColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::ColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %5 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %6 = alloca %class.sk_sp.1, align 8
  %7 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK4sksg19ExternalColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.local_ctx to i8*), i64 136, i1 false)
  %8 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %8) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #9
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 1, i32 0
  %11 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %12 = icmp eq %class.SkColorFilter* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %3, %13
  store %class.SkColorFilter* %11, %class.SkColorFilter** %9, align 8
  %17 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext19modulateColorFilterE5sk_spI13SkColorFilterE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.sk_sp.1* nonnull %6) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136) %17)
  %18 = load %class.SkColorFilter*, %class.SkColorFilter** %9, align 8
  %19 = icmp eq %class.SkColorFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #9
  br label %30

30:                                               ; preds = %16, %20, %24
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %8) #9
  %31 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %4, i64 0, i32 1
  call void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"* %31, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %32) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #1

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext19modulateColorFilterE5sk_spI13SkColorFilterE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.sk_sp.1*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"*, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 3
  %5 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #9
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %7 = bitcast %class.SkMatrix* %4 to i8*
  %8 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 40, i1 false) #9
  %9 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 4
  %10 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %11 = bitcast %class.SkMatrix* %9 to i8*
  %12 = bitcast %class.SkMatrix* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 40, i1 false) #9
  %13 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 5
  store float 1.000000e+00, float* %13, align 8
  %14 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 6
  store i32 3, i32* %14, align 4
  %15 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %15, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %16, align 8
  %17 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %0 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %20, i64 0, i32 0, i32 0
  %22 = bitcast %"struct.sksg::RenderNode::RenderContext"* %20 to i64*
  %23 = load i64, i64* %22, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %21, align 8
  %24 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %3, i64 0, i32 0, i32 0
  %25 = load %class.SkColorFilter*, %class.SkColorFilter** %24, align 8
  %26 = bitcast %"struct.sksg::RenderNode::RenderContext"* %3 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %class.SkColorFilter* %25, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %2
  %29 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %25, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %class.SkColorFilter* %25 to %class.SkRefCntBase*
  %34 = bitcast %class.SkColorFilter* %25 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8
  tail call void %37(%class.SkRefCntBase* nonnull %33) #9
  br label %38

38:                                               ; preds = %32, %28, %2
  %39 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 1
  %40 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 1
  %41 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %40, i64 0, i32 0
  %42 = bitcast %class.sk_sp.2* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store %class.SkShader* null, %class.SkShader** %41, align 8
  %44 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %39, i64 0, i32 0
  %45 = load %class.SkShader*, %class.SkShader** %44, align 8
  %46 = bitcast %class.sk_sp.2* %39 to i64*
  store i64 %43, i64* %46, align 8
  %47 = icmp eq %class.SkShader* %45, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %class.SkShader, %class.SkShader* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %class.SkShader* %45 to %class.SkRefCntBase*
  %54 = bitcast %class.SkShader* %45 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #9
  br label %58

58:                                               ; preds = %52, %48, %38
  %59 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 1, i32 2
  %60 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 2
  %61 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %60, i64 0, i32 0
  %62 = bitcast %class.sk_sp.2* %60 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkShader* null, %class.SkShader** %61, align 8
  %64 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %59, i64 0, i32 0
  %65 = load %class.SkShader*, %class.SkShader** %64, align 8
  %66 = bitcast %class.sk_sp.2* %59 to i64*
  store i64 %63, i64* %66, align 8
  %67 = icmp eq %class.SkShader* %65, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %class.SkShader, %class.SkShader* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkShader* %65 to %class.SkRefCntBase*
  %74 = bitcast %class.SkShader* %65 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #9
  br label %78

78:                                               ; preds = %58, %68, %72
  %79 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 1, i32 3
  %80 = bitcast %class.SkMatrix* %79 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %80, i64 88, i1 false) #9
  %81 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 2
  %82 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %81, i64 0, i32 0
  %83 = bitcast %class.sk_sp.2* %81 to i64*
  %84 = load i64, i64* %83, align 8
  store %class.SkShader* null, %class.SkShader** %82, align 8
  %85 = load %class.SkShader*, %class.SkShader** %16, align 8
  %86 = bitcast %class.sk_sp.2* %15 to i64*
  store i64 %84, i64* %86, align 8
  %87 = icmp eq %class.SkShader* %85, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %78
  %89 = getelementptr inbounds %class.SkShader, %class.SkShader* %85, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 -1 acq_rel
  %91 = icmp eq i32 %90, 1
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = bitcast %class.SkShader* %85 to %class.SkRefCntBase*
  %94 = bitcast %class.SkShader* %85 to void (%class.SkRefCntBase*)***
  %95 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, i64 2
  %97 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, align 8
  tail call void %97(%class.SkRefCntBase* nonnull %93) #9
  br label %98

98:                                               ; preds = %78, %88, %92
  %99 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %1, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %0, i64 0, i32 3
  store i32 %100, i32* %101, align 8
  store i32 -1, i32* %99, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg11ColorFilter8onNodeAtERK7SkPoint(%"class.sksg::ColorFilter"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0
  %4 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"* %3, %struct.SkPoint* dereferenceable(8) %1) #9
  ret %"class.sksg::RenderNode"* %4
}

declare %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg11ColorFilter12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::ColorFilter"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.1, align 8
  %5 = bitcast %class.sk_sp.1* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = bitcast %"class.sksg::ColorFilter"* %0 to void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)***
  %7 = load void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)**, void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)*, void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)** %7, i64 6
  %9 = load void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)*, void (%class.sk_sp.1*, %"class.sksg::ColorFilter"*)** %8, align 8
  call void %9(%class.sk_sp.1* nonnull sret %4, %"class.sksg::ColorFilter"* %0) #9
  %10 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %4, i64 0, i32 0
  %12 = bitcast %class.sk_sp.1* %4 to i64*
  %13 = load i64, i64* %12, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %11, align 8
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %10, i64 0, i32 0
  %15 = load %class.SkColorFilter*, %class.SkColorFilter** %14, align 8
  %16 = bitcast %class.sk_sp.1* %10 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %class.SkColorFilter* %15, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 -1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = bitcast %class.SkColorFilter* %15 to %class.SkRefCntBase*
  %24 = bitcast %class.SkColorFilter* %15 to void (%class.SkRefCntBase*)***
  %25 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, i64 2
  %27 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, align 8
  call void %27(%class.SkRefCntBase* nonnull %23) #9
  br label %28

28:                                               ; preds = %3, %18, %22
  %29 = load %class.SkColorFilter*, %class.SkColorFilter** %11, align 8
  %30 = icmp eq %class.SkColorFilter* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %29, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkColorFilter* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkColorFilter* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #9
  br label %41

41:                                               ; preds = %28, %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %42 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0
  %43 = call { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"* %42, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #9
  ret { <2 x float>, <2 x float> } %43
}

declare { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19ExternalColorFilter4MakeE5sk_spINS_10RenderNodeEE(%class.sk_sp.3* noalias nocapture sret, %class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %5 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %4, align 8
  %6 = icmp eq %"class.sksg::RenderNode"* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %2
  %8 = ptrtoint %"class.sksg::RenderNode"* %5 to i64
  %9 = tail call i8* @_Znwm(i64 64) #10
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %4, align 8
  %10 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = bitcast i8* %9 to %"class.sksg::EffectNode"*
  %12 = bitcast %class.sk_sp* %3 to i64*
  store i64 %8, i64* %12, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* nonnull %11, %class.sk_sp* nonnull %3, i32 0) #9
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %14 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %13, align 8
  %15 = icmp eq %"class.sksg::RenderNode"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.sksg::RenderNode"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.sksg::RenderNode"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #9
  br label %26

26:                                               ; preds = %20, %16, %7
  %27 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg19ExternalColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %9, i64 56
  %29 = bitcast i8* %28 to %class.SkColorFilter**
  store %class.SkColorFilter* null, %class.SkColorFilter** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %30 = bitcast %class.sk_sp.3* %0 to i8**
  store i8* %9, i8** %30, align 8
  br label %33

31:                                               ; preds = %2
  %32 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %0, i64 0, i32 0
  store %"class.sksg::ExternalColorFilter"* null, %"class.sksg::ExternalColorFilter"** %32, align 8
  br label %33

33:                                               ; preds = %31, %26
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19ExternalColorFilterC2E5sk_spINS_10RenderNodeEE(%"class.sksg::ExternalColorFilter"*, %class.sk_sp* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = bitcast %class.sk_sp* %1 to i64*
  %7 = load i64, i64* %6, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %5, align 8
  %8 = bitcast %class.sk_sp* %3 to i64*
  store i64 %7, i64* %8, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %4, %class.sk_sp* nonnull %3, i32 0) #9
  %9 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %10 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %9, align 8
  %11 = icmp eq %"class.sksg::RenderNode"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %"class.sksg::RenderNode"* %10 to %class.SkRefCntBase*
  %18 = bitcast %"class.sksg::RenderNode"* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #9
  br label %22

22:                                               ; preds = %2, %12, %16
  %23 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg19ExternalColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 1, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19ExternalColorFilterD2Ev(%"class.sksg::ExternalColorFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg19ExternalColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0
  tail call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %17) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19ExternalColorFilterD0Ev(%"class.sksg::ExternalColorFilter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg19ExternalColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0
  tail call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %17) #9
  %18 = bitcast %"class.sksg::ExternalColorFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg19ExternalColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::ExternalColorFilter"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %5 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 8
  %6 = alloca %class.sk_sp.1, align 8
  %7 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK4sksg19ExternalColorFilter8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.local_ctx to i8*), i64 136, i1 false)
  %8 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %8) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #9
  %9 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 1, i32 0
  %11 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %12 = icmp eq %class.SkColorFilter* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic
  br label %16

16:                                               ; preds = %3, %13
  store %class.SkColorFilter* %11, %class.SkColorFilter** %9, align 8
  %17 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext19modulateColorFilterE5sk_spI13SkColorFilterE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5, %class.sk_sp.1* nonnull %6) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC2EOS1_(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4, %"class.sksg::RenderNode::ScopedRenderContext"* dereferenceable(136) %17)
  %18 = load %class.SkColorFilter*, %class.SkColorFilter** %9, align 8
  %19 = icmp eq %class.SkColorFilter* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilter* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilter* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  call void %29(%class.SkRefCntBase* nonnull %25) #9
  br label %30

30:                                               ; preds = %16, %20, %24
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %8) #9
  %31 = getelementptr inbounds %"class.sksg::ExternalColorFilter", %"class.sksg::ExternalColorFilter"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %4, i64 0, i32 1
  call void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"* %31, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %32) #9
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg15ModeColorFilter4MakeE5sk_spINS_10RenderNodeEES1_INS_5ColorEE11SkBlendMode(%class.sk_sp.4* noalias nocapture sret, %class.sk_sp* nocapture, %class.sk_sp.5* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %8 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %7, align 8
  %9 = icmp eq %"class.sksg::RenderNode"* %8, null
  %10 = ptrtoint %"class.sksg::RenderNode"* %8 to i64
  br i1 %9, label %67, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %2, i64 0, i32 0
  %13 = load %"class.sksg::Color"*, %"class.sksg::Color"** %12, align 8
  %14 = icmp eq %"class.sksg::Color"* %13, null
  br i1 %14, label %67, label %15

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 80) #10
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %7, align 8
  %17 = bitcast %class.sk_sp.5* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %12, align 8
  %19 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %20 = bitcast i8* %16 to %"class.sksg::EffectNode"*
  %21 = bitcast %class.sk_sp* %5 to i64*
  store i64 %10, i64* %21, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* nonnull %20, %class.sk_sp* nonnull %5, i32 0) #9
  %22 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %23 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %22, align 8
  %24 = icmp eq %"class.sksg::RenderNode"* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %"class.sksg::RenderNode"* %23 to %class.SkRefCntBase*
  %31 = bitcast %"class.sksg::RenderNode"* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #9
  br label %35

35:                                               ; preds = %29, %25, %15
  %36 = bitcast i8* %16 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %16, i64 56
  %38 = bitcast i8* %37 to %class.SkColorFilter**
  store %class.SkColorFilter* null, %class.SkColorFilter** %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg15ModeColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %16, i64 64
  %40 = bitcast i8* %39 to i64*
  store i64 %18, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %16, i64 72
  %42 = bitcast i8* %41 to i32*
  store i32 %3, i32* %42, align 8
  %43 = bitcast i8* %16 to %"class.sksg::Node"*
  %44 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %45 = inttoptr i64 %18 to %"class.sksg::Color"*
  %46 = icmp eq i64 %18, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  br label %50

50:                                               ; preds = %47, %35
  %51 = bitcast %class.sk_sp.6* %6 to %"class.sksg::Color"**
  store %"class.sksg::Color"* %45, %"class.sksg::Color"** %51, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* nonnull %43, %class.sk_sp.6* nonnull dereferenceable(8) %6) #9
  %52 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %53 = load %"class.sksg::Node"*, %"class.sksg::Node"** %52, align 8
  %54 = icmp eq %"class.sksg::Node"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.sksg::Node"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.sksg::Node"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  call void %64(%class.SkRefCntBase* nonnull %60) #9
  br label %65

65:                                               ; preds = %50, %55, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  %66 = bitcast %class.sk_sp.4* %0 to i8**
  store i8* %16, i8** %66, align 8
  br label %69

67:                                               ; preds = %11, %4
  %68 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %0, i64 0, i32 0
  store %"class.sksg::ModeColorFilter"* null, %"class.sksg::ModeColorFilter"** %68, align 8
  br label %69

69:                                               ; preds = %67, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg15ModeColorFilterC2E5sk_spINS_10RenderNodeEES1_INS_5ColorEE11SkBlendMode(%"class.sksg::ModeColorFilter"*, %class.sk_sp* nocapture, %class.sk_sp.5* nocapture, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %7, align 8
  %10 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 0
  %12 = bitcast %class.sk_sp* %5 to i64*
  store i64 %9, i64* %12, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %11, %class.sk_sp* nonnull %5, i32 0) #9
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %14 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %13, align 8
  %15 = icmp eq %"class.sksg::RenderNode"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %"class.sksg::RenderNode"* %14 to %class.SkRefCntBase*
  %22 = bitcast %"class.sksg::RenderNode"* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #9
  br label %26

26:                                               ; preds = %20, %16, %4
  %27 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg15ModeColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %29 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %2, i64 0, i32 0
  %31 = bitcast %class.sk_sp.5* %2 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %30, align 8
  %33 = bitcast %class.sk_sp.5* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 2
  store i32 %3, i32* %34, align 8
  %35 = bitcast %"class.sksg::ModeColorFilter"* %0 to %"class.sksg::Node"*
  %36 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #9
  %37 = inttoptr i64 %32 to %"class.sksg::Color"*
  %38 = icmp eq i64 %32, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %26, %39
  %43 = bitcast %class.sk_sp.6* %6 to %"class.sksg::Color"**
  store %"class.sksg::Color"* %37, %"class.sksg::Color"** %43, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %35, %class.sk_sp.6* nonnull dereferenceable(8) %6) #9
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  %45 = load %"class.sksg::Node"*, %"class.sksg::Node"** %44, align 8
  %46 = icmp eq %"class.sksg::Node"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %45, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.sksg::Node"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.sksg::Node"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  call void %56(%class.SkRefCntBase* nonnull %52) #9
  br label %57

57:                                               ; preds = %42, %47, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #9
  ret void
}

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg15ModeColorFilterD2Ev(%"class.sksg::ModeColorFilter"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.6, align 8
  %3 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg15ModeColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::ModeColorFilter"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::Color"*, %"class.sksg::Color"** %6, align 8
  %8 = icmp eq %"class.sksg::Color"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.6* %2 to %"class.sksg::Color"**
  store %"class.sksg::Color"* %7, %"class.sksg::Color"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.6* nonnull dereferenceable(8) %2) #9
  %14 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #9
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %28 = load %"class.sksg::Color"*, %"class.sksg::Color"** %6, align 8
  %29 = icmp eq %"class.sksg::Color"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::Color"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::Color"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %27, %30, %34
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg11ColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %41 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %42 = load %class.SkColorFilter*, %class.SkColorFilter** %41, align 8
  %43 = icmp eq %class.SkColorFilter* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw add i32* %45, i32 -1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = bitcast %class.SkColorFilter* %42 to %class.SkRefCntBase*
  %50 = bitcast %class.SkColorFilter* %42 to void (%class.SkRefCntBase*)***
  %51 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, i64 2
  %53 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, align 8
  call void %53(%class.SkRefCntBase* nonnull %49) #9
  br label %54

54:                                               ; preds = %40, %44, %48
  %55 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %0, i64 0, i32 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %55) #9
  ret void
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg15ModeColorFilterD0Ev(%"class.sksg::ModeColorFilter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4sksg15ModeColorFilterD2Ev(%"class.sksg::ModeColorFilter"* %0) #9
  %2 = bitcast %"class.sksg::ModeColorFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg15ModeColorFilter18onRevalidateFilterEv(%class.sk_sp.1* noalias sret, %"class.sksg::ModeColorFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %1, i64 0, i32 1, i32 0
  %4 = bitcast %"class.sksg::Color"** %3 to %"class.sksg::Node"**
  %5 = load %"class.sksg::Node"*, %"class.sksg::Node"** %4, align 8
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %7 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %5, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %6) #9
  %8 = load %"class.sksg::Color"*, %"class.sksg::Color"** %3, align 8
  %9 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.sksg::ModeColorFilter", %"class.sksg::ModeColorFilter"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* sret %0, i32 %10, i32 %12) #9
  ret void
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.1* sret, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilter4MakeE5sk_spINS_10RenderNodeEES1_INS_5ColorEES5_(%class.sk_sp.7* noalias nocapture sret, %class.sk_sp* nocapture, %class.sk_sp.5* nocapture, %class.sk_sp.5* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %"class.std::__1::vector.8", align 8
  %7 = alloca [2 x %class.sk_sp.5], align 8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %8, align 8
  %11 = bitcast %class.sk_sp* %5 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast [2 x %class.sk_sp.5]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #9
  %13 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %2, i64 0, i32 0
  %14 = bitcast %class.sk_sp.5* %2 to i64*
  %15 = load i64, i64* %14, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %13, align 8
  %16 = bitcast [2 x %class.sk_sp.5]* %7 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds [2 x %class.sk_sp.5], [2 x %class.sk_sp.5]* %7, i64 0, i64 1
  %18 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %3, i64 0, i32 0
  %19 = bitcast %class.sk_sp.5* %3 to i64*
  %20 = load i64, i64* %19, align 8
  store %"class.sksg::Color"* null, %"class.sksg::Color"** %18, align 8
  %21 = bitcast %class.sk_sp.5* %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = tail call i8* @_Znwm(i64 16) #10
  %23 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %6, i64 0, i32 0, i32 1
  %24 = bitcast %class.sk_sp.5** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.8"* %6 to i8**
  store i8* %22, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  %27 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %class.sk_sp.5** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast i8* %22 to %"class.sksg::Color"**
  %30 = inttoptr i64 %15 to %"class.sksg::Color"*
  %31 = icmp eq i64 %15, 0
  %32 = inttoptr i64 %20 to %"class.sksg::Color"*
  br i1 %31, label %38, label %33

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  %36 = getelementptr inbounds [2 x %class.sk_sp.5], [2 x %class.sk_sp.5]* %7, i64 0, i64 1, i32 0
  %37 = load %"class.sksg::Color"*, %"class.sksg::Color"** %36, align 8
  br label %38

38:                                               ; preds = %33, %4
  %39 = phi %"class.sksg::Color"* [ %37, %33 ], [ %32, %4 ]
  store %"class.sksg::Color"* %30, %"class.sksg::Color"** %29, align 8
  %40 = getelementptr inbounds i8, i8* %22, i64 8
  %41 = bitcast i8* %40 to %"class.sksg::Color"**
  %42 = icmp eq %"class.sksg::Color"* %39, null
  br i1 %42, label %115, label %112

43:                                               ; preds = %115
  %44 = bitcast %class.sk_sp.5* %120 to i8*
  %45 = load %class.sk_sp.5*, %class.sk_sp.5** %23, align 8
  %46 = icmp eq %class.sk_sp.5* %45, %120
  br i1 %46, label %67, label %47

47:                                               ; preds = %43, %63
  %48 = phi %class.sk_sp.5* [ %49, %63 ], [ %45, %43 ]
  %49 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %48, i64 -1
  %50 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %49, i64 0, i32 0
  %51 = load %"class.sksg::Color"*, %"class.sksg::Color"** %50, align 8
  %52 = icmp eq %"class.sksg::Color"* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %"class.sksg::Color"* %51 to %class.SkRefCntBase*
  %59 = bitcast %"class.sksg::Color"* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #9
  br label %63

63:                                               ; preds = %57, %53, %47
  %64 = icmp eq %class.sk_sp.5* %49, %120
  br i1 %64, label %65, label %47

65:                                               ; preds = %63
  %66 = load i8*, i8** %25, align 8
  br label %67

67:                                               ; preds = %65, %43
  %68 = phi i8* [ %66, %65 ], [ %44, %43 ]
  store %class.sk_sp.5* %120, %class.sk_sp.5** %23, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %115, %67
  %70 = getelementptr inbounds [2 x %class.sk_sp.5], [2 x %class.sk_sp.5]* %7, i64 0, i64 1, i32 0
  %71 = load %"class.sksg::Color"*, %"class.sksg::Color"** %70, align 8
  %72 = icmp eq %"class.sksg::Color"* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %"class.sksg::Color"* %71 to %class.SkRefCntBase*
  %79 = bitcast %"class.sksg::Color"* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #9
  br label %83

83:                                               ; preds = %69, %73, %77
  %84 = getelementptr inbounds [2 x %class.sk_sp.5], [2 x %class.sk_sp.5]* %7, i64 0, i64 0, i32 0
  %85 = load %"class.sksg::Color"*, %"class.sksg::Color"** %84, align 8
  %86 = icmp eq %"class.sksg::Color"* %85, null
  br i1 %86, label %108, label %98

87:                                               ; preds = %108
  %88 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %110, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = atomicrmw add i32* %88, i32 -1 acq_rel
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = bitcast %"class.sksg::RenderNode"* %110 to %class.SkRefCntBase*
  %93 = bitcast %"class.sksg::RenderNode"* %110 to void (%class.SkRefCntBase*)***
  %94 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %93, align 8
  %95 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, i64 2
  %96 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %95, align 8
  call void %96(%class.SkRefCntBase* nonnull %92) #9
  br label %97

97:                                               ; preds = %108, %87, %91
  ret void

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = atomicrmw add i32* %99, i32 -1 acq_rel
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %102, label %108

102:                                              ; preds = %98
  %103 = bitcast %"class.sksg::Color"* %85 to %class.SkRefCntBase*
  %104 = bitcast %"class.sksg::Color"* %85 to void (%class.SkRefCntBase*)***
  %105 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %104, align 8
  %106 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %105, i64 2
  %107 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, align 8
  call void %107(%class.SkRefCntBase* nonnull %103) #9
  br label %108

108:                                              ; preds = %102, %98, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #9
  %109 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %110 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %109, align 8
  %111 = icmp eq %"class.sksg::RenderNode"* %110, null
  br i1 %111, label %97, label %87

112:                                              ; preds = %38
  %113 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic
  br label %115

115:                                              ; preds = %112, %38
  store %"class.sksg::Color"* %39, %"class.sksg::Color"** %41, align 8
  %116 = getelementptr inbounds i8, i8* %22, i64 16
  %117 = bitcast %class.sk_sp.5** %23 to i64*
  %118 = ptrtoint i8* %116 to i64
  store i64 %118, i64* %117, align 8
  call void @_ZN4sksg19GradientColorFilter4MakeE5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE(%class.sk_sp.7* sret %0, %class.sk_sp* nonnull %5, %"class.std::__1::vector.8"* nonnull %6)
  %119 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %6, i64 0, i32 0, i32 0
  %120 = load %class.sk_sp.5*, %class.sk_sp.5** %119, align 8
  %121 = icmp eq %class.sk_sp.5* %120, null
  br i1 %121, label %69, label %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilter4MakeE5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE(%class.sk_sp.7* noalias nocapture sret, %class.sk_sp* nocapture, %"class.std::__1::vector.8"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %"class.std::__1::vector.8", align 16
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  %9 = ptrtoint %"class.sksg::RenderNode"* %7 to i64
  br i1 %8, label %78, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 1
  %12 = bitcast %class.sk_sp.5** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %19, label %78

19:                                               ; preds = %10
  %20 = tail call i8* @_Znwm(i64 96) #10
  %21 = bitcast i8* %20 to %"class.sksg::GradientColorFilter"*
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %6, align 8
  %22 = bitcast %class.sk_sp* %4 to i64*
  store i64 %9, i64* %22, align 8
  %23 = bitcast %"class.std::__1::vector.8"* %2 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::vector.8"* %5 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %26, align 16
  %27 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %class.sk_sp.5** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %class.sk_sp.5** %30 to i64*
  store i64 %29, i64* %31, align 16
  %32 = bitcast %"class.std::__1::vector.8"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #9
  call void @_ZN4sksg19GradientColorFilterC2E5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE(%"class.sksg::GradientColorFilter"* nonnull %21, %class.sk_sp* nonnull %4, %"class.std::__1::vector.8"* nonnull %5)
  %33 = bitcast %class.sk_sp.7* %0 to i8**
  store i8* %20, i8** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %5, i64 0, i32 0, i32 0
  %35 = load %class.sk_sp.5*, %class.sk_sp.5** %34, align 16
  %36 = icmp eq %class.sk_sp.5* %35, null
  br i1 %36, label %64, label %37

37:                                               ; preds = %19
  %38 = bitcast %class.sk_sp.5* %35 to i8*
  %39 = load %class.sk_sp.5*, %class.sk_sp.5** %25, align 8
  %40 = icmp eq %class.sk_sp.5* %39, %35
  br i1 %40, label %62, label %41

41:                                               ; preds = %37, %57
  %42 = phi %class.sk_sp.5* [ %43, %57 ], [ %39, %37 ]
  %43 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %42, i64 -1
  %44 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %43, i64 0, i32 0
  %45 = load %"class.sksg::Color"*, %"class.sksg::Color"** %44, align 8
  %46 = icmp eq %"class.sksg::Color"* %45, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = atomicrmw add i32* %48, i32 -1 acq_rel
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %57

51:                                               ; preds = %47
  %52 = bitcast %"class.sksg::Color"* %45 to %class.SkRefCntBase*
  %53 = bitcast %"class.sksg::Color"* %45 to void (%class.SkRefCntBase*)***
  %54 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, i64 2
  %56 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, align 8
  tail call void %56(%class.SkRefCntBase* nonnull %52) #9
  br label %57

57:                                               ; preds = %51, %47, %41
  %58 = icmp eq %class.sk_sp.5* %43, %35
  br i1 %58, label %59, label %41

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.8"* %5 to i8**
  %61 = load i8*, i8** %60, align 16
  br label %62

62:                                               ; preds = %59, %37
  %63 = phi i8* [ %61, %59 ], [ %38, %37 ]
  store %class.sk_sp.5* %35, %class.sk_sp.5** %25, align 8
  tail call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %19, %62
  %65 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %66 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %65, align 8
  %67 = icmp eq %"class.sksg::RenderNode"* %66, null
  br i1 %67, label %80, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %80

72:                                               ; preds = %68
  %73 = bitcast %"class.sksg::RenderNode"* %66 to %class.SkRefCntBase*
  %74 = bitcast %"class.sksg::RenderNode"* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  tail call void %77(%class.SkRefCntBase* nonnull %73) #9
  br label %80

78:                                               ; preds = %3, %10
  %79 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %0, i64 0, i32 0
  store %"class.sksg::GradientColorFilter"* null, %"class.sksg::GradientColorFilter"** %79, align 8
  br label %80

80:                                               ; preds = %72, %68, %64, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilterC2E5sk_spINS_10RenderNodeEENSt3__16vectorIS1_INS_5ColorEENS4_9allocatorIS7_EEEE(%"class.sksg::GradientColorFilter"*, %class.sk_sp* nocapture, %"class.std::__1::vector.8"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca %class.sk_sp.6, align 8
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %6, align 8
  %9 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %class.sk_sp* %4 to i64*
  store i64 %8, i64* %11, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %10, %class.sk_sp* nonnull %4, i32 0) #9
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #9
  br label %25

25:                                               ; preds = %19, %15, %3
  %26 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 1, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg19GradientColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 1
  %29 = bitcast %"class.std::__1::vector.8"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #9
  %30 = bitcast %"class.std::__1::vector.8"* %2 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.8"* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 1
  %34 = bitcast %class.sk_sp.5** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 1, i32 0, i32 1
  %37 = bitcast %class.sk_sp.5** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %class.sk_sp.5** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %class.sk_sp.5** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.std::__1::vector.8"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #9
  %44 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %28, i64 0, i32 0, i32 0
  %46 = load %class.sk_sp.5*, %class.sk_sp.5** %45, align 8
  %47 = load %class.sk_sp.5*, %class.sk_sp.5** %36, align 8
  %48 = icmp eq %class.sk_sp.5* %46, %47
  br i1 %48, label %54, label %49

49:                                               ; preds = %25
  %50 = bitcast %"class.sksg::GradientColorFilter"* %0 to %"class.sksg::Node"*
  %51 = bitcast %class.sk_sp.6* %5 to i8*
  %52 = bitcast %class.sk_sp.6* %5 to %"class.sksg::Color"**
  %53 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %5, i64 0, i32 0
  br label %55

54:                                               ; preds = %76, %25
  ret void

55:                                               ; preds = %49, %76
  %56 = phi %class.sk_sp.5* [ %46, %49 ], [ %77, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  %57 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %56, i64 0, i32 0
  %58 = load %"class.sksg::Color"*, %"class.sksg::Color"** %57, align 8
  %59 = icmp eq %"class.sksg::Color"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic
  br label %63

63:                                               ; preds = %55, %60
  store %"class.sksg::Color"* %58, %"class.sksg::Color"** %52, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %50, %class.sk_sp.6* nonnull dereferenceable(8) %5) #9
  %64 = load %"class.sksg::Node"*, %"class.sksg::Node"** %53, align 8
  %65 = icmp eq %"class.sksg::Node"* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %"class.sksg::Node"* %64 to %class.SkRefCntBase*
  %72 = bitcast %"class.sksg::Node"* %64 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #9
  br label %76

76:                                               ; preds = %63, %66, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  %77 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %56, i64 1
  %78 = icmp eq %class.sk_sp.5* %77, %47
  br i1 %78, label %54, label %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilterD2Ev(%"class.sksg::GradientColorFilter"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.6, align 8
  %3 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg19GradientColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %4, i64 0, i32 0, i32 0
  %6 = load %class.sk_sp.5*, %class.sk_sp.5** %5, align 8
  %7 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load %class.sk_sp.5*, %class.sk_sp.5** %7, align 8
  %9 = icmp eq %class.sk_sp.5* %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.sksg::GradientColorFilter"* %0 to %"class.sksg::Node"*
  %12 = bitcast %class.sk_sp.6* %2 to i8*
  %13 = bitcast %class.sk_sp.6* %2 to %"class.sksg::Color"**
  %14 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %2, i64 0, i32 0
  br label %63

15:                                               ; preds = %84
  %16 = load %class.sk_sp.5*, %class.sk_sp.5** %5, align 8
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi %class.sk_sp.5* [ %16, %15 ], [ %6, %1 ]
  %19 = icmp eq %class.sk_sp.5* %18, null
  br i1 %19, label %47, label %20

20:                                               ; preds = %17
  %21 = bitcast %class.sk_sp.5* %18 to i8*
  %22 = load %class.sk_sp.5*, %class.sk_sp.5** %7, align 8
  %23 = icmp eq %class.sk_sp.5* %22, %18
  br i1 %23, label %45, label %24

24:                                               ; preds = %20, %40
  %25 = phi %class.sk_sp.5* [ %26, %40 ], [ %22, %20 ]
  %26 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %25, i64 -1
  %27 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %26, i64 0, i32 0
  %28 = load %"class.sksg::Color"*, %"class.sksg::Color"** %27, align 8
  %29 = icmp eq %"class.sksg::Color"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::Color"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::Color"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #9
  br label %40

40:                                               ; preds = %34, %30, %24
  %41 = icmp eq %class.sk_sp.5* %26, %18
  br i1 %41, label %42, label %24

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.8"* %4 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %20
  %46 = phi i8* [ %44, %42 ], [ %21, %20 ]
  store %class.sk_sp.5* %18, %class.sk_sp.5** %7, align 8
  call void @_ZdlPv(i8* %46) #10
  br label %47

47:                                               ; preds = %17, %45
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg11ColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %48 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 1, i32 0
  %49 = load %class.SkColorFilter*, %class.SkColorFilter** %48, align 8
  %50 = icmp eq %class.SkColorFilter* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkColorFilter* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkColorFilter* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #9
  br label %61

61:                                               ; preds = %47, %51, %55
  %62 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %0, i64 0, i32 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %62) #9
  ret void

63:                                               ; preds = %10, %84
  %64 = phi %class.sk_sp.5* [ %6, %10 ], [ %85, %84 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %65 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %64, i64 0, i32 0
  %66 = load %"class.sksg::Color"*, %"class.sksg::Color"** %65, align 8
  %67 = icmp eq %"class.sksg::Color"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 1 monotonic
  br label %71

71:                                               ; preds = %63, %68
  store %"class.sksg::Color"* %66, %"class.sksg::Color"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %11, %class.sk_sp.6* nonnull dereferenceable(8) %2) #9
  %72 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %73 = icmp eq %"class.sksg::Node"* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %72, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw add i32* %75, i32 -1 acq_rel
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %84

78:                                               ; preds = %74
  %79 = bitcast %"class.sksg::Node"* %72 to %class.SkRefCntBase*
  %80 = bitcast %"class.sksg::Node"* %72 to void (%class.SkRefCntBase*)***
  %81 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %80, align 8
  %82 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, i64 2
  %83 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, align 8
  call void %83(%class.SkRefCntBase* nonnull %79) #9
  br label %84

84:                                               ; preds = %71, %74, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %85 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %64, i64 1
  %86 = icmp eq %class.sk_sp.5* %85, %8
  br i1 %86, label %15, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilterD0Ev(%"class.sksg::GradientColorFilter"*) unnamed_addr #0 align 2 {
  tail call void @_ZN4sksg19GradientColorFilterD2Ev(%"class.sksg::GradientColorFilter"* %0) #9
  %2 = bitcast %"class.sksg::GradientColorFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg19GradientColorFilter18onRevalidateFilterEv(%class.sk_sp.1* noalias sret, %"class.sksg::GradientColorFilter"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca [256 x i8], align 16
  %4 = alloca [256 x i8], align 16
  %5 = alloca [256 x i8], align 16
  %6 = alloca %class.sk_sp.1, align 8
  %7 = alloca %class.sk_sp.1, align 8
  %8 = alloca [20 x float], align 16
  %9 = alloca %class.sk_sp.1, align 8
  %10 = alloca %class.sk_sp.1, align 8
  %11 = alloca %class.sk_sp.1, align 8
  %12 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %12, i64 0, i32 0, i32 0
  %14 = load %class.sk_sp.5*, %class.sk_sp.5** %13, align 8
  %15 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %1, i64 0, i32 1, i32 0, i32 1
  %16 = load %class.sk_sp.5*, %class.sk_sp.5** %15, align 8
  %17 = icmp eq %class.sk_sp.5* %14, %16
  br i1 %17, label %18, label %22

18:                                               ; preds = %22, %2
  %19 = getelementptr inbounds %"class.sksg::GradientColorFilter", %"class.sksg::GradientColorFilter"* %1, i64 0, i32 2
  %20 = load float, float* %19, align 8
  %21 = fcmp ugt float %20, 0.000000e+00
  br i1 %21, label %32, label %30

22:                                               ; preds = %2, %22
  %23 = phi %class.sk_sp.5* [ %28, %22 ], [ %14, %2 ]
  %24 = bitcast %class.sk_sp.5* %23 to %"class.sksg::Node"**
  %25 = load %"class.sksg::Node"*, %"class.sksg::Node"** %24, align 8
  %26 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  %27 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %25, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %26) #9
  %28 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %23, i64 1
  %29 = icmp eq %class.sk_sp.5* %28, %16
  br i1 %29, label %18, label %22

30:                                               ; preds = %18
  %31 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %31, align 8
  br label %248

32:                                               ; preds = %18
  %33 = bitcast %class.sk_sp.1* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %34 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %9, i64 0, i32 0
  store %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*), %class.SkColorFilter** %34, align 8
  %35 = bitcast %class.sk_sp.5** %15 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector.8"* %12 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = ashr exact i64 %39, 3
  %41 = icmp ugt i64 %40, 2
  %42 = inttoptr i64 %38 to %class.sk_sp.5*
  br i1 %41, label %43, label %150

43:                                               ; preds = %32
  %44 = bitcast %class.sk_sp.1* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %45) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 256, i1 false) #9, !noalias !2
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %46) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %46, i8 -86, i64 256, i1 false) #9, !noalias !2
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %47) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 256, i1 false) #9, !noalias !2
  %48 = add nsw i64 %40, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = uitofp i64 %48 to float
  br label %82

52:                                               ; preds = %146, %43
  %53 = bitcast %class.sk_sp.1* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9, !noalias !2
  call void @_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_(%class.sk_sp.1* nonnull sret %6, i8* null, i8* nonnull %45, i8* nonnull %46, i8* nonnull %47) #9, !noalias !2
  %54 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %55 = load %class.SkColorFilter*, %class.SkColorFilter** %54, align 8, !noalias !2
  call void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.1* nonnull sret %7, float* getelementptr inbounds ([20 x float], [20 x float]* @_ZZN4sksg12_GLOBAL__N_118MakeNColorGradientERKNSt3__16vectorI5sk_spINS_5ColorEENS1_9allocatorIS5_EEEEE16luminance_matrix, i64 0, i64 0)) #9, !noalias !2
  call void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* nonnull sret %9, %class.SkColorFilter* %55, %class.sk_sp.1* nonnull %7) #9
  %56 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %7, i64 0, i32 0
  %57 = load %class.SkColorFilter*, %class.SkColorFilter** %56, align 8, !noalias !2
  %58 = icmp eq %class.SkColorFilter* %57, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkColorFilter* %57 to %class.SkRefCntBase*
  %65 = bitcast %class.SkColorFilter* %57 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #9
  br label %69

69:                                               ; preds = %63, %59, %52
  %70 = load %class.SkColorFilter*, %class.SkColorFilter** %54, align 8, !noalias !2
  %71 = icmp eq %class.SkColorFilter* %70, null
  br i1 %71, label %149, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %149

76:                                               ; preds = %72
  %77 = bitcast %class.SkColorFilter* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.SkColorFilter* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #9
  br label %149

82:                                               ; preds = %146, %50
  %83 = phi i64 [ 0, %50 ], [ %147, %146 ]
  %84 = phi i64 [ 0, %50 ], [ %85, %146 ]
  %85 = add nuw i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = fmul float %86, 2.550000e+02
  %88 = fdiv float %87, %51
  %89 = tail call float @llvm.round.f32(float %88) #9
  %90 = fptoui float %89 to i64
  %91 = icmp ugt i64 %83, %90
  br i1 %91, label %146, label %92

92:                                               ; preds = %82
  %93 = sub i64 %90, %83
  %94 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %42, i64 %84, i32 0
  %95 = load %"class.sksg::Color"*, %"class.sksg::Color"** %94, align 8
  %96 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %95, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %42, i64 %85, i32 0
  %99 = load %"class.sksg::Color"*, %"class.sksg::Color"** %98, align 8
  %100 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %99, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = lshr i32 %97, 16
  %103 = and i32 %102, 255
  %104 = uitofp i32 %103 to float
  %105 = lshr i32 %97, 8
  %106 = and i32 %105, 255
  %107 = uitofp i32 %106 to float
  %108 = and i32 %97, 255
  %109 = uitofp i32 %108 to float
  %110 = lshr i32 %101, 16
  %111 = and i32 %110, 255
  %112 = uitofp i32 %111 to float
  %113 = fsub float %112, %104
  %114 = uitofp i64 %93 to float
  %115 = fdiv float %113, %114
  %116 = lshr i32 %101, 8
  %117 = and i32 %116, 255
  %118 = uitofp i32 %117 to float
  %119 = fsub float %118, %107
  %120 = fdiv float %119, %114
  %121 = and i32 %101, 255
  %122 = uitofp i32 %121 to float
  %123 = fsub float %122, %109
  %124 = fdiv float %123, %114
  br label %127

125:                                              ; preds = %127
  %126 = add nuw i64 %90, 1
  br label %146

127:                                              ; preds = %127, %92
  %128 = phi i64 [ %83, %92 ], [ %144, %127 ]
  %129 = phi float [ %109, %92 ], [ %143, %127 ]
  %130 = phi float [ %107, %92 ], [ %142, %127 ]
  %131 = phi float [ %104, %92 ], [ %141, %127 ]
  %132 = tail call float @llvm.round.f32(float %131) #9
  %133 = fptoui float %132 to i8
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* %3, i64 0, i64 %128
  store i8 %133, i8* %134, align 1, !noalias !2
  %135 = tail call float @llvm.round.f32(float %130) #9
  %136 = fptoui float %135 to i8
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* %4, i64 0, i64 %128
  store i8 %136, i8* %137, align 1, !noalias !2
  %138 = tail call float @llvm.round.f32(float %129) #9
  %139 = fptoui float %138 to i8
  %140 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 %128
  store i8 %139, i8* %140, align 1, !noalias !2
  %141 = fadd float %115, %131
  %142 = fadd float %120, %130
  %143 = fadd float %124, %129
  %144 = add i64 %128, 1
  %145 = icmp ugt i64 %144, %90
  br i1 %145, label %125, label %127

146:                                              ; preds = %125, %82
  %147 = phi i64 [ %126, %125 ], [ %83, %82 ]
  %148 = icmp eq i64 %85, %48
  br i1 %148, label %52, label %82

149:                                              ; preds = %69, %72, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %47) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %46) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %45) #9, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %202

150:                                              ; preds = %32
  %151 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %42, i64 0, i32 0
  %152 = load %"class.sksg::Color"*, %"class.sksg::Color"** %151, align 8, !noalias !5
  %153 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %152, i64 0, i32 1
  %154 = load i32, i32* %153, align 4, !noalias !5
  %155 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %154) #9, !noalias !5
  %156 = extractvalue { <2 x float>, <2 x float> } %155, 0
  %157 = extractvalue { <2 x float>, <2 x float> } %155, 1
  %158 = getelementptr inbounds %class.sk_sp.5, %class.sk_sp.5* %42, i64 1, i32 0
  %159 = load %"class.sksg::Color"*, %"class.sksg::Color"** %158, align 8, !noalias !5
  %160 = getelementptr inbounds %"class.sksg::Color", %"class.sksg::Color"* %159, i64 0, i32 1
  %161 = load i32, i32* %160, align 4, !noalias !5
  %162 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %161) #9, !noalias !5
  %163 = extractvalue { <2 x float>, <2 x float> } %162, 0
  %164 = extractvalue { <2 x float>, <2 x float> } %162, 1
  %165 = extractelement <2 x float> %163, i32 0
  %166 = extractelement <2 x float> %156, i32 0
  %167 = fsub float %165, %166
  %168 = extractelement <2 x float> %163, i32 1
  %169 = extractelement <2 x float> %156, i32 1
  %170 = fsub float %168, %169
  %171 = extractelement <2 x float> %164, i32 0
  %172 = extractelement <2 x float> %157, i32 0
  %173 = fsub float %171, %172
  %174 = bitcast [20 x float]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %174) #9, !noalias !5
  %175 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 0
  %176 = fmul float %167, 0x3FCB367A00000000
  store float %176, float* %175, align 16, !noalias !5
  %177 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 1
  %178 = fmul float %167, 0x3FE6E2EB20000000
  store float %178, float* %177, align 4, !noalias !5
  %179 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 2
  %180 = fmul float %167, 0x3FB27BB300000000
  store float %180, float* %179, align 8, !noalias !5
  %181 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 3
  store float 0.000000e+00, float* %181, align 4, !noalias !5
  %182 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 4
  store float %166, float* %182, align 16, !noalias !5
  %183 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 5
  %184 = fmul float %170, 0x3FCB367A00000000
  store float %184, float* %183, align 4, !noalias !5
  %185 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 6
  %186 = fmul float %170, 0x3FE6E2EB20000000
  store float %186, float* %185, align 8, !noalias !5
  %187 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 7
  %188 = fmul float %170, 0x3FB27BB300000000
  store float %188, float* %187, align 4, !noalias !5
  %189 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 8
  store float 0.000000e+00, float* %189, align 16, !noalias !5
  %190 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 9
  store float %169, float* %190, align 4, !noalias !5
  %191 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 10
  %192 = fmul float %173, 0x3FCB367A00000000
  store float %192, float* %191, align 8, !noalias !5
  %193 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 11
  %194 = fmul float %173, 0x3FE6E2EB20000000
  store float %194, float* %193, align 4, !noalias !5
  %195 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 12
  %196 = fmul float %173, 0x3FB27BB300000000
  store float %196, float* %195, align 16, !noalias !5
  %197 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 13
  store float 0.000000e+00, float* %197, align 4, !noalias !5
  %198 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 14
  store float %172, float* %198, align 8, !noalias !5
  %199 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 15
  store float 0.000000e+00, float* %199, align 4, !noalias !5
  %200 = getelementptr inbounds [20 x float], [20 x float]* %8, i64 0, i64 16
  %201 = bitcast float* %200 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %201, align 16, !noalias !5
  call void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.1* nonnull sret %9, float* nonnull %175) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %174) #9, !noalias !5
  br label %202

202:                                              ; preds = %150, %149
  %203 = load float, float* %19, align 8
  %204 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %10, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %204, align 8
  %205 = bitcast %class.sk_sp.1* %9 to i64*
  %206 = load i64, i64* %205, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %34, align 8
  %207 = bitcast %class.sk_sp.1* %11 to i64*
  store i64 %206, i64* %207, align 8
  call void @_ZN14SkColorFilters4LerpEf5sk_spI13SkColorFilterES2_(%class.sk_sp.1* sret %0, float %203, %class.sk_sp.1* nonnull %10, %class.sk_sp.1* nonnull %11) #9
  %208 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %11, i64 0, i32 0
  %209 = load %class.SkColorFilter*, %class.SkColorFilter** %208, align 8
  %210 = icmp eq %class.SkColorFilter* %209, null
  br i1 %210, label %221, label %211

211:                                              ; preds = %202
  %212 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %209, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = atomicrmw add i32* %212, i32 -1 acq_rel
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %215, label %221

215:                                              ; preds = %211
  %216 = bitcast %class.SkColorFilter* %209 to %class.SkRefCntBase*
  %217 = bitcast %class.SkColorFilter* %209 to void (%class.SkRefCntBase*)***
  %218 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %217, align 8
  %219 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %218, i64 2
  %220 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %219, align 8
  call void %220(%class.SkRefCntBase* nonnull %216) #9
  br label %221

221:                                              ; preds = %202, %211, %215
  %222 = load %class.SkColorFilter*, %class.SkColorFilter** %204, align 8
  %223 = icmp eq %class.SkColorFilter* %222, null
  br i1 %223, label %234, label %224

224:                                              ; preds = %221
  %225 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %222, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = atomicrmw add i32* %225, i32 -1 acq_rel
  %227 = icmp eq i32 %226, 1
  br i1 %227, label %228, label %234

228:                                              ; preds = %224
  %229 = bitcast %class.SkColorFilter* %222 to %class.SkRefCntBase*
  %230 = bitcast %class.SkColorFilter* %222 to void (%class.SkRefCntBase*)***
  %231 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %230, align 8
  %232 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %231, i64 2
  %233 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %232, align 8
  call void %233(%class.SkRefCntBase* nonnull %229) #9
  br label %234

234:                                              ; preds = %221, %224, %228
  %235 = load %class.SkColorFilter*, %class.SkColorFilter** %34, align 8
  %236 = icmp eq %class.SkColorFilter* %235, null
  br i1 %236, label %247, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %235, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 -1 acq_rel
  %240 = icmp eq i32 %239, 1
  br i1 %240, label %241, label %247

241:                                              ; preds = %237
  %242 = bitcast %class.SkColorFilter* %235 to %class.SkRefCntBase*
  %243 = bitcast %class.SkColorFilter* %235 to void (%class.SkRefCntBase*)***
  %244 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %243, align 8
  %245 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %244, i64 2
  %246 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %245, align 8
  call void %246(%class.SkRefCntBase* nonnull %242) #9
  br label %247

247:                                              ; preds = %234, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  br label %248

248:                                              ; preds = %247, %30
  ret void
}

declare void @_ZN14SkColorFilters4LerpEf5sk_spI13SkColorFilterES2_(%class.sk_sp.1* sret, float, %class.sk_sp.1*, %class.sk_sp.1*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg11ColorFilterD2Ev(%"class.sksg::ColorFilter"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4sksg11ColorFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 1, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #9
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.sksg::ColorFilter", %"class.sksg::ColorFilter"* %0, i64 0, i32 0
  tail call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %17) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4sksg11ColorFilterD0Ev(%"class.sksg::ColorFilter"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #9
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN18SkTableColorFilter8MakeARGBEPKhS1_S1_S1_(%class.sk_sp.1* sret, i8*, i8*, i8*, i8*) local_unnamed_addr #1

declare void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.1* sret, %class.SkColorFilter*, %class.sk_sp.1*) local_unnamed_addr #1

declare void @_ZN14SkColorFilters6MatrixEPKf(%class.sk_sp.1* sret, float*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4sksg12_GLOBAL__N_118MakeNColorGradientERKNSt3__16vectorI5sk_spINS_5ColorEENS1_9allocatorIS5_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN4sksg12_GLOBAL__N_118MakeNColorGradientERKNSt3__16vectorI5sk_spINS_5ColorEENS1_9allocatorIS5_EEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4sksg12_GLOBAL__N_118Make2ColorGradientERK5sk_spINS_5ColorEES5_: argument 0"}
!7 = distinct !{!7, !"_ZN4sksg12_GLOBAL__N_118Make2ColorGradientERK5sk_spINS_5ColorEES5_"}
