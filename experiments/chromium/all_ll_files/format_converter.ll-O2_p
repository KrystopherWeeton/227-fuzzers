; ModuleID = '../../third_party/tflite/src/tensorflow/lite/tools/optimize/sparsity/format_converter.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/tools/optimize/sparsity/format_converter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.tflite::optimize::sparsity::FormatConverter" = type { %"class.std::__1::vector", %"class.std::__1::vector", i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::optimize::sparsity::FormatConverter.22" = type { %"class.std::__1::vector", %"class.std::__1::vector", i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i8*, i8*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }
%"class.tflite::optimize::sparsity::FormatConverter.32" = type { %"class.std::__1::vector", %"class.std::__1::vector", i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.33" }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { float*, float*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.15" = type { i64*, i64, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }

$_ZN6tflite8optimize8sparsity15FormatConverterIiEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiE7GetDataEv = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiE14GetDimMetadataEv = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_ = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiE13DenseToSparseEPKi = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiE13SparseToDenseEPKi = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIiE8PopulateEPKiNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaE7GetDataEv = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaE14GetDimMetadataEv = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaE13DenseToSparseEPKa = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaE13SparseToDenseEPKa = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaE8PopulateEPKaNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfE7GetDataEv = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfE14GetDimMetadataEv = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfE13DenseToSparseEPKf = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfE13SparseToDenseEPKf = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfE8PopulateEPKfNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm = comdat any

$_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

$_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

@_ZN6tflite8optimize8sparsity15FormatConverterIiEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*), void (%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN6tflite8optimize8sparsity15FormatConverterIiEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_
@_ZN6tflite8optimize8sparsity15FormatConverterIiEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*), void (%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*)* @_ZN6tflite8optimize8sparsity15FormatConverterIiEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity
@_ZN6tflite8optimize8sparsity15FormatConverterIaEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*), void (%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN6tflite8optimize8sparsity15FormatConverterIaEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_
@_ZN6tflite8optimize8sparsity15FormatConverterIaEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*), void (%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*)* @_ZN6tflite8optimize8sparsity15FormatConverterIaEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity
@_ZN6tflite8optimize8sparsity15FormatConverterIfEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_ = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*), void (%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector.1"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*)* @_ZN6tflite8optimize8sparsity15FormatConverterIfEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_
@_ZN6tflite8optimize8sparsity15FormatConverterIfEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity = weak_odr hidden unnamed_addr alias void (%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*), void (%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"*, %struct.TfLiteSparsity*)* @_ZN6tflite8optimize8sparsity15FormatConverterIfEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIiEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_(%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.1"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIiEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_) align 2 {
  %7 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %6
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #7
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #8
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %22, i64 %14
  %27 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i32** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i32* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #6
  %39 = getelementptr inbounds i32, i32* %22, i64 %37
  %40 = ptrtoint i32* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %6, %41
  %44 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1
  %45 = bitcast %"class.std::__1::vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #6
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %2 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %43
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #7
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #8
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = bitcast i32** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %46 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds i32, i32* %62, i64 %54
  %67 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %49, align 8
  %71 = bitcast i32** %63 to i64*
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint i32* %69 to i64
  %74 = sub i64 %70, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %60
  %77 = lshr exact i64 %74, 2
  %78 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %78, i64 %74, i1 false) #6
  %79 = getelementptr inbounds i32, i32* %62, i64 %77
  %80 = ptrtoint i32* %79 to i64
  br label %81

81:                                               ; preds = %76, %60
  %82 = phi i64 [ %80, %76 ], [ %72, %60 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %43, %81
  %84 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4
  %85 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  %88 = bitcast %"class.std::__1::vector.1"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false)
  %89 = load i64, i64* %87, align 8
  %90 = bitcast %"class.std::__1::vector"* %4 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 2
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %122, label %95

95:                                               ; preds = %83
  %96 = icmp ugt i64 %93, 4611686018427387903
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector"* %85 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #7
  unreachable

99:                                               ; preds = %95
  %100 = tail call i8* @_Znwm(i64 %92) #8
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 1
  %103 = bitcast i32** %102 to i8**
  store i8* %100, i8** %103, align 8
  %104 = bitcast %"class.std::__1::vector"* %85 to i8**
  store i8* %100, i8** %104, align 8
  %105 = getelementptr inbounds i32, i32* %101, i64 %93
  %106 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i32* %105, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i64, i64* %87, align 8
  %110 = bitcast i32** %102 to i64*
  %111 = ptrtoint i8* %100 to i64
  %112 = ptrtoint i32* %108 to i64
  %113 = sub i64 %109, %112
  %114 = icmp sgt i64 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %99
  %116 = lshr exact i64 %113, 2
  %117 = bitcast i32* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 4 %117, i64 %113, i1 false) #6
  %118 = getelementptr inbounds i32, i32* %101, i64 %116
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %115, %99
  %121 = phi i64 [ %119, %115 ], [ %111, %99 ]
  store i64 %121, i64* %110, align 8
  br label %122

122:                                              ; preds = %83, %120
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6
  %124 = bitcast %"class.std::__1::vector"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #6
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %5 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %160, label %133

133:                                              ; preds = %122
  %134 = icmp ugt i64 %131, 4611686018427387903
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector"* %123 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #7
  unreachable

137:                                              ; preds = %133
  %138 = tail call i8* @_Znwm(i64 %130) #8
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 1
  %141 = bitcast i32** %140 to i8**
  store i8* %138, i8** %141, align 8
  %142 = bitcast %"class.std::__1::vector"* %123 to i8**
  store i8* %138, i8** %142, align 8
  %143 = getelementptr inbounds i32, i32* %139, i64 %131
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %143, i32** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = load i64, i64* %126, align 8
  %148 = bitcast i32** %140 to i64*
  %149 = ptrtoint i8* %138 to i64
  %150 = ptrtoint i32* %146 to i64
  %151 = sub i64 %147, %150
  %152 = icmp sgt i64 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %137
  %154 = lshr exact i64 %151, 2
  %155 = bitcast i32* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 4 %155, i64 %151, i1 false) #6
  %156 = getelementptr inbounds i32, i32* %139, i64 %154
  %157 = ptrtoint i32* %156 to i64
  br label %158

158:                                              ; preds = %153, %137
  %159 = phi i64 [ %157, %153 ], [ %149, %137 ]
  store i64 %159, i64* %148, align 8
  br label %160

160:                                              ; preds = %122, %158
  %161 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7
  %162 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 2
  %163 = bitcast %"class.std::__1::vector.8"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 48, i1 false)
  store i64 1, i64* %162, align 8
  %164 = load i64, i64* %9, align 8
  %165 = load i64, i64* %11, align 8
  %166 = sub i64 %164, %165
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %177, label %168

168:                                              ; preds = %160
  %169 = ashr exact i64 %166, 2
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %44, i64 %169) #6
  %170 = load i64, i64* %9, align 8
  %171 = load i64, i64* %11, align 8
  %172 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::vector.1"* %84 to i64*
  %176 = load i64, i64* %175, align 8
  br label %177

177:                                              ; preds = %160, %168
  %178 = phi i64 [ %176, %168 ], [ 0, %160 ]
  %179 = phi i64 [ %174, %168 ], [ 0, %160 ]
  %180 = phi i64 [ %171, %168 ], [ %165, %160 ]
  %181 = phi i64 [ %170, %168 ], [ %164, %160 ]
  %182 = sub i64 %181, %180
  %183 = ashr exact i64 %182, 2
  %184 = load i64, i64* %126, align 8
  %185 = load i64, i64* %128, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = add nsw i64 %187, %183
  %189 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 1
  %190 = sub i64 %179, %178
  %191 = ashr exact i64 %190, 2
  %192 = icmp ugt i64 %188, %191
  %193 = inttoptr i64 %178 to i32*
  br i1 %192, label %194, label %196

194:                                              ; preds = %177
  %195 = sub nsw i64 %188, %191
  tail call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %84, i64 %195) #6
  br label %200

196:                                              ; preds = %177
  %197 = icmp ult i64 %188, %191
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = getelementptr inbounds i32, i32* %193, i64 %188
  store i32* %199, i32** %189, align 8
  br label %200

200:                                              ; preds = %194, %196, %198
  %201 = load i64, i64* %9, align 8
  %202 = load i64, i64* %11, align 8
  %203 = icmp eq i64 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %228

211:                                              ; preds = %275, %200
  %212 = phi i64 [ %201, %200 ], [ %279, %275 ]
  %213 = phi i64 [ %201, %200 ], [ %278, %275 ]
  %214 = load i64, i64* %126, align 8
  %215 = load i64, i64* %128, align 8
  %216 = icmp eq i64 %214, %215
  br i1 %216, label %283, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %219 = sub i64 %213, %212
  %220 = ashr exact i64 %219, 2
  %221 = load i32*, i32** %218, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 %220
  store i32 0, i32* %222, align 4
  %223 = load i64, i64* %126, align 8
  %224 = load i64, i64* %128, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 2
  %227 = icmp ugt i64 %226, 1
  br i1 %227, label %284, label %283

228:                                              ; preds = %204, %275
  %229 = phi i64 [ 0, %204 ], [ %277, %275 ]
  %230 = phi i32 [ 0, %204 ], [ %276, %275 ]
  %231 = load i32*, i32** %205, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 %229
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32*, i32** %206, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  %237 = load i32, i32* %236, align 4
  %238 = load i32*, i32** %207, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %229
  store i32 %237, i32* %239, align 4
  %240 = load i32*, i32** %208, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 %229
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = load i64, i64* %162, align 8
  %245 = mul i64 %244, %243
  store i64 %245, i64* %162, align 8
  %246 = sext i32 %230 to i64
  %247 = load i64, i64* %126, align 8
  %248 = load i64, i64* %128, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  %251 = icmp ugt i64 %250, %246
  br i1 %251, label %252, label %269

252:                                              ; preds = %228
  %253 = inttoptr i64 %248 to i32*
  %254 = getelementptr inbounds i32, i32* %253, i64 %246
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = icmp eq i64 %229, %256
  br i1 %257, label %258, label %269

258:                                              ; preds = %252
  %259 = load i32*, i32** %208, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %229
  %261 = load i32, i32* %260, align 4
  %262 = load i32*, i32** %210, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %246
  %264 = load i32, i32* %263, align 4
  %265 = sdiv i32 %261, %264
  %266 = load i32*, i32** %209, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %229
  store i32 %265, i32* %267, align 4
  %268 = add nsw i32 %230, 1
  br label %275

269:                                              ; preds = %252, %228
  %270 = load i32*, i32** %208, align 8
  %271 = getelementptr inbounds i32, i32* %270, i64 %229
  %272 = load i32, i32* %271, align 4
  %273 = load i32*, i32** %209, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %229
  store i32 %272, i32* %274, align 4
  br label %275

275:                                              ; preds = %258, %269
  %276 = phi i32 [ %268, %258 ], [ %230, %269 ]
  %277 = add nuw i64 %229, 1
  %278 = load i64, i64* %9, align 8
  %279 = load i64, i64* %11, align 8
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 2
  %282 = icmp ugt i64 %281, %277
  br i1 %282, label %228, label %211

283:                                              ; preds = %284, %217, %211
  ret void

284:                                              ; preds = %217, %284
  %285 = phi i64 [ %293, %284 ], [ 1, %217 ]
  %286 = load i64, i64* %9, align 8
  %287 = load i64, i64* %11, align 8
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 2
  %290 = add nsw i64 %289, %285
  %291 = load i32*, i32** %218, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 %290
  store i32 0, i32* %292, align 4
  %293 = add i64 %285, 1
  %294 = load i64, i64* %126, align 8
  %295 = load i64, i64* %128, align 8
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 2
  %298 = icmp ugt i64 %297, %293
  br i1 %298, label %284, label %283
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIiEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"* dereferenceable(24), %struct.TfLiteSparsity* dereferenceable(32)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIiEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity) align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca [1 x i32], align 4
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #6
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 4611686018427387903
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #7
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #8
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i32** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds i32, i32* %24, i64 %16
  %29 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %28, i32** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast i32** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #6
  %41 = getelementptr inbounds i32, i32* %24, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %3, %43
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3
  %49 = bitcast %"class.std::__1::vector"* %48 to i8*
  %50 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6
  %53 = bitcast %"class.std::__1::vector"* %52 to i8*
  %54 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 2
  %56 = bitcast %"class.std::__1::vector"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 144, i1 false)
  store i64 1, i64* %55, align 8
  %57 = load i64, i64* %11, align 8
  %58 = load i64, i64* %13, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %225

60:                                               ; preds = %225, %45
  %61 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6
  %62 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 0
  %63 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 24, i1 false) #6, !alias.scope !2
  %65 = icmp eq %struct.TfLiteIntArray* %63, null
  br i1 %65, label %84, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %66
  %71 = sext i32 %68 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %4, i64 %71) #6
  %72 = load i32, i32* %67, align 4, !noalias !2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70, %74
  %75 = phi i64 [ %80, %74 ], [ 0, %70 ]
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4, !noalias !2
  %78 = load i32*, i32** %64, align 16, !alias.scope !2
  %79 = getelementptr inbounds i32, i32* %78, i64 %75
  store i32 %77, i32* %79, align 4
  %80 = add nuw i64 %75, 1
  %81 = load i32, i32* %67, align 4, !noalias !2
  %82 = sext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %60, %66, %70
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint i32* %86 to i64
  %90 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* %92) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #6
  br label %93

93:                                               ; preds = %84, %88
  %94 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 16
  %96 = bitcast %"class.std::__1::vector"* %48 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 1
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6
  %104 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #6
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 0, i64 24, i1 false) #6, !alias.scope !5
  %106 = icmp eq %struct.TfLiteIntArray* %103, null
  br i1 %106, label %125, label %107

107:                                              ; preds = %93
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %109 = load i32, i32* %108, align 4, !noalias !5
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %107
  %112 = sext i32 %109 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %112) #6
  %113 = load i32, i32* %108, align 4, !noalias !5
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %111, %115
  %116 = phi i64 [ %121, %115 ], [ 0, %111 ]
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 %116
  %118 = load i32, i32* %117, align 4, !noalias !5
  %119 = load i32*, i32** %105, align 16, !alias.scope !5
  %120 = getelementptr inbounds i32, i32* %119, i64 %116
  store i32 %118, i32* %120, align 4
  %121 = add nuw i64 %116, 1
  %122 = load i32, i32* %108, align 4, !noalias !5
  %123 = sext i32 %122 to i64
  %124 = icmp ult i64 %121, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %93, %107, %111
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  call void @_ZdlPv(i8* %133) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #6
  br label %134

134:                                              ; preds = %125, %129
  %135 = bitcast %"class.std::__1::vector"* %52 to i64*
  %136 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 16
  %138 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  %140 = bitcast %"class.std::__1::vector"* %52 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 16
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.1"* %50 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sext i32 %147 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #6
  %154 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %155 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 1
  %156 = sub i64 %150, %152
  %157 = ashr exact i64 %156, 2
  %158 = icmp ult i64 %157, %153
  %159 = inttoptr i64 %152 to i32*
  br i1 %158, label %160, label %162

160:                                              ; preds = %134
  %161 = sub nsw i64 %153, %157
  call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %50, i64 %161) #6
  br label %166

162:                                              ; preds = %134
  %163 = icmp ugt i64 %157, %153
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = getelementptr inbounds i32, i32* %159, i64 %153
  store i32* %165, i32** %155, align 8
  br label %166

166:                                              ; preds = %160, %162, %164
  %167 = load i32, i32* %154, align 8
  %168 = shl nsw i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7, i32 0, i32 1
  %171 = bitcast %"class.std::__1::vector"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.8"* %54 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = sdiv exact i64 %175, 24
  %177 = icmp ult i64 %176, %169
  %178 = inttoptr i64 %174 to %"class.std::__1::vector"*
  %179 = inttoptr i64 %172 to %"class.std::__1::vector"*
  br i1 %177, label %180, label %182

180:                                              ; preds = %166
  %181 = sub nsw i64 %169, %176
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %54, i64 %181) #6
  br label %201

182:                                              ; preds = %166
  %183 = icmp ugt i64 %176, %169
  br i1 %183, label %184, label %201

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %178, i64 %169
  %186 = icmp eq %"class.std::__1::vector"* %185, %179
  br i1 %186, label %200, label %187

187:                                              ; preds = %184, %198
  %188 = phi %"class.std::__1::vector"* [ %189, %198 ], [ %179, %184 ]
  %189 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %198, label %193

193:                                              ; preds = %187
  %194 = ptrtoint i32* %191 to i64
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1, i32 0, i32 1
  %196 = bitcast i32** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast i32* %191 to i8*
  call void @_ZdlPv(i8* %197) #8
  br label %198

198:                                              ; preds = %193, %187
  %199 = icmp eq %"class.std::__1::vector"* %189, %185
  br i1 %199, label %200, label %187

200:                                              ; preds = %198, %184
  store %"class.std::__1::vector"* %185, %"class.std::__1::vector"** %170, align 8
  br label %201

201:                                              ; preds = %180, %182, %200
  %202 = load i32, i32* %154, align 8
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %240

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %50, i64 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::vector"* %7 to i8*
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %54, i64 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::vector"* %7 to i64*
  %211 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  %213 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast i32** %213 to i64*
  %215 = bitcast %"class.std::__1::vector"* %8 to i8*
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::vector"* %8 to i64*
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %219 = bitcast i32** %218 to i64*
  %220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %221 = bitcast i32** %220 to i64*
  %222 = bitcast [1 x i32]* %6 to i8*
  %223 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %224 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 1
  br label %291

225:                                              ; preds = %45, %225
  %226 = phi i64 [ %233, %225 ], [ 1, %45 ]
  %227 = phi i64 [ %236, %225 ], [ %58, %45 ]
  %228 = phi i64 [ %234, %225 ], [ 0, %45 ]
  %229 = inttoptr i64 %227 to i32*
  %230 = getelementptr inbounds i32, i32* %229, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %226, %232
  store i64 %233, i64* %55, align 8
  %234 = add nuw i64 %228, 1
  %235 = load i64, i64* %11, align 8
  %236 = load i64, i64* %13, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 2
  %239 = icmp ugt i64 %238, %234
  br i1 %239, label %225, label %60

240:                                              ; preds = %398, %201
  %241 = load i64, i64* %11, align 8
  %242 = load i64, i64* %13, align 8
  %243 = sub i64 %241, %242
  %244 = lshr exact i64 %243, 2
  %245 = trunc i64 %244 to i32
  %246 = shl i64 %243, 30
  %247 = ashr exact i64 %246, 32
  %248 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1, i32 0, i32 1
  %249 = bitcast i32** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.std::__1::vector"* %46 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %250, %252
  %254 = ashr exact i64 %253, 2
  %255 = icmp ugt i64 %247, %254
  %256 = inttoptr i64 %252 to i32*
  br i1 %255, label %257, label %259

257:                                              ; preds = %240
  %258 = sub nsw i64 %247, %254
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %46, i64 %258) #6
  br label %263

259:                                              ; preds = %240
  %260 = icmp ult i64 %247, %254
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = getelementptr inbounds i32, i32* %256, i64 %247
  store i32* %262, i32** %248, align 8
  br label %263

263:                                              ; preds = %257, %259, %261
  %264 = load i64, i64* %139, align 8
  %265 = load i64, i64* %135, align 8
  %266 = sub i64 %264, %265
  %267 = ashr exact i64 %266, 2
  %268 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 1
  %269 = bitcast i32** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector"* %51 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = ashr exact i64 %273, 2
  %275 = icmp ugt i64 %267, %274
  %276 = inttoptr i64 %272 to i32*
  br i1 %275, label %277, label %279

277:                                              ; preds = %263
  %278 = sub nsw i64 %267, %274
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %51, i64 %278) #6
  br label %283

279:                                              ; preds = %263
  %280 = icmp ult i64 %267, %274
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = getelementptr inbounds i32, i32* %276, i64 %267
  store i32* %282, i32** %268, align 8
  br label %283

283:                                              ; preds = %277, %279, %281
  %284 = icmp sgt i32 %245, 0
  br i1 %284, label %285, label %403

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %289 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %51, i64 0, i32 0, i32 0
  %290 = and i64 %244, 4294967295
  br label %404

291:                                              ; preds = %204, %398
  %292 = phi i64 [ 0, %204 ], [ %399, %398 ]
  %293 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %294 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %293, i64 %292, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = load i32*, i32** %206, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %292
  store i32 %295, i32* %297, align 4
  %298 = load i32*, i32** %206, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 %292
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #6
  %303 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %304 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %303, i64 %292, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %223, align 4
  %306 = shl nuw nsw i64 %292, 1
  %307 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %308 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %307, i64 %306
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %308, i32* nonnull %223, i32* %224) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #6
  br label %398

309:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #6
  %310 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %311 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %310, i64 %292, i32 2
  %312 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %311, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 0, i64 24, i1 false) #6, !alias.scope !8
  %313 = icmp eq %struct.TfLiteIntArray* %312, null
  br i1 %313, label %332, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !8
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %332, label %318

318:                                              ; preds = %314
  %319 = sext i32 %316 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %319) #6
  %320 = load i32, i32* %315, align 4, !noalias !8
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %332, label %322

322:                                              ; preds = %318, %322
  %323 = phi i64 [ %328, %322 ], [ 0, %318 ]
  %324 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 1, i64 %323
  %325 = load i32, i32* %324, align 4, !noalias !8
  %326 = load i32*, i32** %208, align 8, !alias.scope !8
  %327 = getelementptr inbounds i32, i32* %326, i64 %323
  store i32 %325, i32* %327, align 4
  %328 = add nuw i64 %323, 1
  %329 = load i32, i32* %315, align 4, !noalias !8
  %330 = sext i32 %329 to i64
  %331 = icmp ult i64 %328, %330
  br i1 %331, label %322, label %332

332:                                              ; preds = %322, %309, %314, %318
  %333 = shl nuw nsw i64 %292, 1
  %334 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %335 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333
  %336 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %335, i64 0, i32 0, i32 0
  %337 = load i32*, i32** %336, align 8
  %338 = icmp eq i32* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %332
  %340 = ptrtoint i32* %337 to i64
  %341 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %342 = bitcast i32** %341 to i64*
  store i64 %340, i64* %342, align 8
  %343 = bitcast i32* %337 to i8*
  call void @_ZdlPv(i8* %343) #8
  %344 = bitcast %"class.std::__1::vector"* %335 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %344, i8 0, i64 24, i1 false) #6
  br label %345

345:                                              ; preds = %332, %339
  %346 = load i64, i64* %210, align 8
  %347 = bitcast %"class.std::__1::vector"* %335 to i64*
  store i64 %346, i64* %347, align 8
  %348 = load i64, i64* %212, align 8
  %349 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %350 = bitcast i32** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = load i64, i64* %214, align 8
  %352 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 2, i32 0, i32 0
  %353 = bitcast i32** %352 to i64*
  store i64 %351, i64* %353, align 8
  %354 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #6
  %355 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %354, i64 %292, i32 3
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 24, i1 false) #6, !alias.scope !11
  %357 = icmp eq %struct.TfLiteIntArray* %356, null
  br i1 %357, label %376, label %358

358:                                              ; preds = %345
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %360 = load i32, i32* %359, align 4, !noalias !11
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %376, label %362

362:                                              ; preds = %358
  %363 = sext i32 %360 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %8, i64 %363) #6
  %364 = load i32, i32* %359, align 4, !noalias !11
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %376, label %366

366:                                              ; preds = %362, %366
  %367 = phi i64 [ %372, %366 ], [ 0, %362 ]
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 %367
  %369 = load i32, i32* %368, align 4, !noalias !11
  %370 = load i32*, i32** %216, align 8, !alias.scope !11
  %371 = getelementptr inbounds i32, i32* %370, i64 %367
  store i32 %369, i32* %371, align 4
  %372 = add nuw i64 %367, 1
  %373 = load i32, i32* %359, align 4, !noalias !11
  %374 = sext i32 %373 to i64
  %375 = icmp ult i64 %372, %374
  br i1 %375, label %366, label %376

376:                                              ; preds = %366, %345, %358, %362
  %377 = or i64 %333, 1
  %378 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %379 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377
  %380 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %379, i64 0, i32 0, i32 0
  %381 = load i32*, i32** %380, align 8
  %382 = icmp eq i32* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %376
  %384 = ptrtoint i32* %381 to i64
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %386 = bitcast i32** %385 to i64*
  store i64 %384, i64* %386, align 8
  %387 = bitcast i32* %381 to i8*
  call void @_ZdlPv(i8* %387) #8
  %388 = bitcast %"class.std::__1::vector"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 24, i1 false) #6
  br label %389

389:                                              ; preds = %383, %376
  %390 = load i64, i64* %217, align 8
  %391 = bitcast %"class.std::__1::vector"* %379 to i64*
  store i64 %390, i64* %391, align 8
  %392 = load i64, i64* %219, align 8
  %393 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %394 = bitcast i32** %393 to i64*
  store i64 %392, i64* %394, align 8
  %395 = load i64, i64* %221, align 8
  %396 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 2, i32 0, i32 0
  %397 = bitcast i32** %396 to i64*
  store i64 %395, i64* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #6
  br label %398

398:                                              ; preds = %302, %389
  %399 = add nuw nsw i64 %292, 1
  %400 = load i32, i32* %154, align 8
  %401 = sext i32 %400 to i64
  %402 = icmp slt i64 %399, %401
  br i1 %402, label %291, label %240

403:                                              ; preds = %447, %283
  ret void

404:                                              ; preds = %447, %285
  %405 = phi i64 [ 0, %285 ], [ %449, %447 ]
  %406 = phi i32 [ 0, %285 ], [ %448, %447 ]
  %407 = sext i32 %406 to i64
  %408 = load i64, i64* %139, align 8
  %409 = load i64, i64* %135, align 8
  %410 = sub i64 %408, %409
  %411 = ashr exact i64 %410, 2
  %412 = icmp ugt i64 %411, %407
  br i1 %412, label %413, label %441

413:                                              ; preds = %404
  %414 = inttoptr i64 %409 to i32*
  %415 = getelementptr inbounds i32, i32* %414, i64 %407
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = icmp eq i64 %405, %417
  br i1 %418, label %419, label %441

419:                                              ; preds = %413
  %420 = add nsw i32 %406, %245
  %421 = sext i32 %420 to i64
  %422 = load i32*, i32** %85, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 %421
  %424 = load i32, i32* %423, align 4
  %425 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %426 = sext i32 %424 to i64
  %427 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %425, i64 %426, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = load i32*, i32** %289, align 8
  %430 = getelementptr inbounds i32, i32* %429, i64 %407
  store i32 %428, i32* %430, align 4
  %431 = load i32*, i32** %286, align 8
  %432 = getelementptr inbounds i32, i32* %431, i64 %405
  %433 = load i32, i32* %432, align 4
  %434 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %435 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %434, i64 %426, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sdiv i32 %433, %436
  %438 = load i32*, i32** %287, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %405
  store i32 %437, i32* %439, align 4
  %440 = add nsw i32 %406, 1
  br label %447

441:                                              ; preds = %413, %404
  %442 = load i32*, i32** %286, align 8
  %443 = getelementptr inbounds i32, i32* %442, i64 %405
  %444 = load i32, i32* %443, align 4
  %445 = load i32*, i32** %287, align 8
  %446 = getelementptr inbounds i32, i32* %445, i64 %405
  store i32 %444, i32* %446, align 4
  br label %447

447:                                              ; preds = %419, %441
  %448 = phi i32 [ %440, %419 ], [ %406, %441 ]
  %449 = add nuw nsw i64 %405, 1
  %450 = icmp eq i64 %449, %290
  br i1 %450, label %403, label %404
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIiE7GetDataEv(%"class.std::__1::vector"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %1, i64 0, i32 8
  %4 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %1, i64 0, i32 8, i32 0, i32 1
  %6 = bitcast i32** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = icmp ugt i64 %11, 4611686018427387903
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #7
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #8
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds i32, i32* %19, i64 %11
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %23, i32** %24, align 8
  %25 = bitcast i32** %20 to i64*
  %26 = ptrtoint i8* %18 to i64
  %27 = icmp sgt i64 %10, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %17
  %29 = lshr exact i64 %10, 2
  %30 = inttoptr i64 %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %30, i64 %10, i1 false) #6
  %31 = getelementptr inbounds i32, i32* %19, i64 %29
  %32 = ptrtoint i32* %31 to i64
  br label %33

33:                                               ; preds = %28, %17
  %34 = phi i64 [ %32, %28 ], [ %26, %17 ]
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %2, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIiE14GetDimMetadataEv(%"class.std::__1::vector.8"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector.8"* %0, %"class.std::__1::vector.8"* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector.8"*, %"class.std::__1::vector.8"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.8"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #6
  %4 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.std::__1::vector"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.8"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %79, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 768614336404564650
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #7
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #8
  %18 = bitcast i8* %17 to %"class.std::__1::vector"*
  %19 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::vector"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.8"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::vector"* %22, %"class.std::__1::vector"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %26 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %4, align 8
  %27 = bitcast %"class.std::__1::vector"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.std::__1::vector"* %25, %26
  br i1 %29, label %77, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.std::__1::vector"*
  br label %32

32:                                               ; preds = %71, %30
  %33 = phi %"class.std::__1::vector"* [ %73, %71 ], [ %31, %30 ]
  %34 = phi %"class.std::__1::vector"* [ %72, %71 ], [ %25, %30 ]
  %35 = bitcast %"class.std::__1::vector"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #6
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 2
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %71, label %44

44:                                               ; preds = %32
  %45 = icmp ugt i64 %42, 4611686018427387903
  br i1 %45, label %46, label %48

46:                                               ; preds = %44
  %47 = bitcast %"class.std::__1::vector"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %47) #7
  unreachable

48:                                               ; preds = %44
  %49 = tail call i8* @_Znwm(i64 %41) #8
  %50 = bitcast i8* %49 to i32*
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 1
  %52 = bitcast i32** %51 to i8**
  store i8* %49, i8** %52, align 8
  %53 = bitcast %"class.std::__1::vector"* %33 to i8**
  store i8* %49, i8** %53, align 8
  %54 = getelementptr inbounds i32, i32* %50, i64 %42
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %54, i32** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = load i64, i64* %37, align 8
  %59 = bitcast i32** %51 to i64*
  %60 = ptrtoint i8* %49 to i64
  %61 = ptrtoint i32* %57 to i64
  %62 = sub i64 %58, %61
  %63 = icmp sgt i64 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %48
  %65 = lshr exact i64 %62, 2
  %66 = bitcast i32* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 %66, i64 %62, i1 false) #6
  %67 = getelementptr inbounds i32, i32* %50, i64 %65
  %68 = ptrtoint i32* %67 to i64
  br label %69

69:                                               ; preds = %64, %48
  %70 = phi i64 [ %68, %64 ], [ %60, %48 ]
  store i64 %70, i64* %59, align 8
  br label %71

71:                                               ; preds = %69, %32
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 1
  %73 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 1
  %74 = icmp eq %"class.std::__1::vector"* %72, %26
  br i1 %74, label %75, label %32

75:                                               ; preds = %71
  %76 = ptrtoint %"class.std::__1::vector"* %73 to i64
  br label %77

77:                                               ; preds = %16, %75
  %78 = phi i64 [ %28, %16 ], [ %76, %75 ]
  store i64 %78, i64* %27, align 8
  br label %79

79:                                               ; preds = %2, %77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIiE13DenseToSparseEPKi(%"class.tflite::optimize::sparsity::FormatConverter"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector.15", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 2
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, %19
  %30 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = sext i32 %29 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #6
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %2
  %37 = icmp slt i32 %29, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %39) #7
  unreachable

40:                                               ; preds = %36
  %41 = shl nsw i64 %34, 2
  %42 = tail call i8* @_Znwm(i64 %41) #8
  %43 = bitcast i8* %42 to i32*
  %44 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds i32, i32* %43, i64 %34
  store i32* %45, i32** %33, align 8
  %46 = bitcast i32** %32 to i64*
  %47 = ptrtoint i8* %42 to i64
  %48 = add nsw i64 %34, -1
  %49 = getelementptr i32, i32* %43, i64 %48
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 4, %47
  %52 = add i64 %51, %50
  %53 = and i64 %52, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 0, i64 %53, i1 false) #6
  %54 = ptrtoint i32* %45 to i64
  store i64 %54, i64* %46, align 8
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 0
  %56 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = shl i64 %17, 30
  %58 = ashr exact i64 %57, 32
  %59 = zext i32 %29 to i64
  %60 = and i64 %59, 1
  %61 = icmp eq i32 %29, 1
  br i1 %61, label %64, label %62

62:                                               ; preds = %40
  %63 = sub nsw i64 %59, %60
  br label %144

64:                                               ; preds = %1303, %40
  %65 = phi i64 [ 0, %40 ], [ %1311, %1303 ]
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %64
  %68 = icmp slt i64 %65, %58
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = sub nsw i64 %65, %18
  %71 = shl i64 %70, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %69, %67
  %74 = phi i32** [ %55, %69 ], [ %56, %67 ]
  %75 = phi i64 [ %72, %69 ], [ %65, %67 ]
  %76 = load i32*, i32** %74, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %75
  %78 = load i32, i32* %77, align 4
  %79 = load i32*, i32** %31, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %65
  store i32 %78, i32* %80, align 4
  br label %81

81:                                               ; preds = %73, %64, %2
  %82 = phi i1 [ false, %2 ], [ true, %64 ], [ true, %73 ]
  %83 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = shl i64 %17, 30
  %88 = ashr exact i64 %87, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #6
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = bitcast i32** %85 to i64*
  br label %111

92:                                               ; preds = %81
  %93 = icmp ugt i64 %88, 4611686018427387903
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %95) #7
  unreachable

96:                                               ; preds = %92
  %97 = ashr exact i64 %87, 30
  %98 = tail call i8* @_Znwm(i64 %97) #8
  %99 = bitcast i8* %98 to i32*
  %100 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %98, i8** %100, align 8
  %101 = getelementptr inbounds i32, i32* %99, i64 %88
  store i32* %101, i32** %86, align 8
  %102 = bitcast i32** %85 to i64*
  %103 = ptrtoint i8* %98 to i64
  %104 = add nsw i64 %88, -1
  %105 = getelementptr i32, i32* %99, i64 %104
  %106 = ptrtoint i32* %105 to i64
  %107 = sub i64 4, %103
  %108 = add i64 %107, %106
  %109 = and i64 %108, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 0, i64 %109, i1 false) #6
  %110 = ptrtoint i32* %101 to i64
  store i64 %110, i64* %102, align 8
  br label %111

111:                                              ; preds = %90, %96
  %112 = phi i64* [ %91, %90 ], [ %102, %96 ]
  %113 = phi i64 [ 0, %90 ], [ %103, %96 ]
  %114 = phi i64 [ 0, %90 ], [ %110, %96 ]
  %115 = sub i64 %114, %113
  %116 = ashr exact i64 %115, 2
  %117 = add nsw i64 %116, -1
  %118 = inttoptr i64 %113 to i32*
  %119 = getelementptr inbounds i32, i32* %118, i64 %117
  store i32 1, i32* %119, align 4
  %120 = add i32 %19, -1
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %162

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 0
  %124 = sext i32 %120 to i64
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %122
  %128 = load i32*, i32** %84, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %124
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %123, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 %124
  %133 = load i32, i32* %132, align 4
  %134 = mul nsw i32 %133, %130
  %135 = shl i64 %17, 30
  %136 = add i64 %135, -8589934592
  %137 = ashr exact i64 %136, 32
  %138 = getelementptr inbounds i32, i32* %128, i64 %137
  store i32 %134, i32* %138, align 4
  %139 = add nsw i64 %124, -1
  br label %140

140:                                              ; preds = %122, %127
  %141 = phi i64 [ %124, %122 ], [ %139, %127 ]
  %142 = phi i64 [ %18, %122 ], [ %124, %127 ]
  %143 = icmp eq i32 %120, 1
  br i1 %143, label %162, label %201

144:                                              ; preds = %1303, %62
  %145 = phi i64 [ 0, %62 ], [ %1311, %1303 ]
  %146 = phi i64 [ %63, %62 ], [ %1312, %1303 ]
  %147 = icmp slt i64 %145, %58
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = sub nsw i64 %145, %18
  %150 = shl i64 %149, 32
  %151 = ashr exact i64 %150, 32
  br label %152

152:                                              ; preds = %144, %148
  %153 = phi i32** [ %55, %148 ], [ %56, %144 ]
  %154 = phi i64 [ %151, %148 ], [ %145, %144 ]
  %155 = load i32*, i32** %153, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %31, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %145
  store i32 %157, i32* %159, align 4
  %160 = or i64 %145, 1
  %161 = icmp slt i64 %160, %58
  br i1 %161, label %1303, label %1299

162:                                              ; preds = %140, %201, %111
  %163 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #6
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #6
  br i1 %35, label %186, label %167

167:                                              ; preds = %162
  %168 = icmp slt i32 %29, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %170) #7
  unreachable

171:                                              ; preds = %167
  %172 = shl nsw i64 %34, 2
  %173 = tail call i8* @_Znwm(i64 %172) #8
  %174 = bitcast i8* %173 to i32*
  %175 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %173, i8** %175, align 8
  %176 = getelementptr inbounds i32, i32* %174, i64 %34
  store i32* %176, i32** %166, align 8
  %177 = bitcast i32** %165 to i64*
  %178 = ptrtoint i8* %173 to i64
  %179 = add nsw i64 %34, -1
  %180 = getelementptr i32, i32* %174, i64 %179
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 4, %178
  %183 = add i64 %182, %181
  %184 = and i64 %183, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %173, i8 0, i64 %184, i1 false) #6
  %185 = ptrtoint i32* %176 to i64
  store i64 %185, i64* %177, align 8
  br label %186

186:                                              ; preds = %162, %171
  %187 = phi i32* [ null, %162 ], [ %174, %171 ]
  %188 = icmp sgt i32 %19, 0
  br i1 %188, label %189, label %243

189:                                              ; preds = %186
  %190 = and i64 %18, 4294967295
  %191 = load i32*, i32** %84, align 8
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %187, align 4
  %193 = icmp eq i64 %190, 1
  br i1 %193, label %243, label %194

194:                                              ; preds = %189
  %195 = add nsw i64 %190, -1
  %196 = add nsw i64 %190, -2
  %197 = and i64 %195, 3
  %198 = icmp ult i64 %196, 3
  br i1 %198, label %229, label %199

199:                                              ; preds = %194
  %200 = sub nsw i64 %195, %197
  br label %251

201:                                              ; preds = %140, %201
  %202 = phi i64 [ %227, %201 ], [ %141, %140 ]
  %203 = phi i64 [ %215, %201 ], [ %142, %140 ]
  %204 = load i32*, i32** %84, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %202
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %123, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %202
  %209 = load i32, i32* %208, align 4
  %210 = mul nsw i32 %209, %206
  %211 = shl i64 %203, 32
  %212 = add i64 %211, -8589934592
  %213 = ashr exact i64 %212, 32
  %214 = getelementptr inbounds i32, i32* %204, i64 %213
  store i32 %210, i32* %214, align 4
  %215 = add nsw i64 %202, -1
  %216 = load i32*, i32** %84, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %215
  %218 = load i32, i32* %217, align 4
  %219 = load i32*, i32** %123, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 %215
  %221 = load i32, i32* %220, align 4
  %222 = mul nsw i32 %221, %218
  %223 = shl i64 %202, 32
  %224 = add i64 %223, -8589934592
  %225 = ashr exact i64 %224, 32
  %226 = getelementptr inbounds i32, i32* %216, i64 %225
  store i32 %222, i32* %226, align 4
  %227 = add nsw i64 %202, -2
  %228 = icmp sgt i64 %227, 0
  br i1 %228, label %201, label %162

229:                                              ; preds = %251, %194
  %230 = phi i64 [ 1, %194 ], [ %277, %251 ]
  %231 = icmp eq i64 %197, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %240, %232 ], [ %230, %229 ]
  %234 = phi i64 [ %241, %232 ], [ %197, %229 ]
  %235 = load i32*, i32** %164, align 8
  %236 = load i32*, i32** %84, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 %233
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds i32, i32* %235, i64 %233
  store i32 %238, i32* %239, align 4
  %240 = add nuw nsw i64 %233, 1
  %241 = add i64 %234, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %232, !llvm.loop !14

243:                                              ; preds = %229, %232, %189, %186
  %244 = icmp sgt i32 %28, 0
  br i1 %244, label %245, label %280

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 0
  %248 = shl i64 %17, 30
  %249 = ashr exact i64 %248, 32
  %250 = and i64 %27, 4294967295
  br label %322

251:                                              ; preds = %251, %199
  %252 = phi i64 [ 1, %199 ], [ %277, %251 ]
  %253 = phi i64 [ %200, %199 ], [ %278, %251 ]
  %254 = load i32*, i32** %164, align 8
  %255 = load i32*, i32** %84, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 %252
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %254, i64 %252
  store i32 %257, i32* %258, align 4
  %259 = add nuw nsw i64 %252, 1
  %260 = load i32*, i32** %164, align 8
  %261 = load i32*, i32** %84, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 %259
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %260, i64 %259
  store i32 %263, i32* %264, align 4
  %265 = add nuw nsw i64 %252, 2
  %266 = load i32*, i32** %164, align 8
  %267 = load i32*, i32** %84, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %265
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %266, i64 %265
  store i32 %269, i32* %270, align 4
  %271 = add nuw nsw i64 %252, 3
  %272 = load i32*, i32** %164, align 8
  %273 = load i32*, i32** %84, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %271
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds i32, i32* %272, i64 %271
  store i32 %275, i32* %276, align 4
  %277 = add nuw nsw i64 %252, 4
  %278 = add i64 %253, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %229, label %251

280:                                              ; preds = %322, %243
  %281 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #6
  %282 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %284 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 24, i1 false) #6
  br i1 %35, label %304, label %285

285:                                              ; preds = %280
  %286 = icmp slt i32 %29, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %285
  %288 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %288) #7
  unreachable

289:                                              ; preds = %285
  %290 = shl nsw i64 %34, 2
  %291 = tail call i8* @_Znwm(i64 %290) #8
  %292 = bitcast i8* %291 to i32*
  %293 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %291, i8** %293, align 8
  %294 = getelementptr inbounds i32, i32* %292, i64 %34
  store i32* %294, i32** %284, align 8
  %295 = bitcast i32** %283 to i64*
  %296 = ptrtoint i8* %291 to i64
  %297 = add nsw i64 %34, -1
  %298 = getelementptr i32, i32* %292, i64 %297
  %299 = ptrtoint i32* %298 to i64
  %300 = sub i64 4, %296
  %301 = add i64 %300, %299
  %302 = and i64 %301, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %291, i8 0, i64 %302, i1 false) #6
  %303 = ptrtoint i32* %294 to i64
  store i64 %303, i64* %295, align 8
  br label %304

304:                                              ; preds = %280, %289
  %305 = phi i32* [ null, %280 ], [ %292, %289 ]
  br i1 %82, label %306, label %356

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32*, i32** %164, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 %310
  %313 = load i32, i32* %312, align 4
  store i32 %313, i32* %305, align 4
  %314 = icmp eq i32 %29, 1
  br i1 %314, label %356, label %315

315:                                              ; preds = %306
  %316 = zext i32 %29 to i64
  %317 = add nsw i64 %316, -1
  %318 = and i64 %317, 1
  %319 = icmp eq i32 %29, 2
  br i1 %319, label %343, label %320

320:                                              ; preds = %315
  %321 = sub nsw i64 %317, %318
  br label %459

322:                                              ; preds = %322, %245
  %323 = phi i64 [ 0, %245 ], [ %341, %322 ]
  %324 = load i32*, i32** %246, align 8
  %325 = getelementptr inbounds i32, i32* %324, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = load i32*, i32** %84, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %327
  %330 = load i32, i32* %329, align 4
  %331 = add nsw i64 %323, %249
  %332 = load i32*, i32** %164, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %331
  store i32 %330, i32* %333, align 4
  %334 = load i32*, i32** %247, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 %323
  %336 = load i32, i32* %335, align 4
  %337 = load i32*, i32** %164, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 %327
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %336
  store i32 %340, i32* %338, align 4
  %341 = add nuw nsw i64 %323, 1
  %342 = icmp eq i64 %341, %250
  br i1 %342, label %280, label %322

343:                                              ; preds = %459, %315
  %344 = phi i64 [ 1, %315 ], [ %481, %459 ]
  %345 = icmp eq i64 %318, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343
  %347 = load i32*, i32** %282, align 8
  %348 = load i32*, i32** %307, align 8
  %349 = getelementptr inbounds i32, i32* %348, i64 %344
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32*, i32** %164, align 8
  %353 = getelementptr inbounds i32, i32* %352, i64 %351
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds i32, i32* %347, i64 %344
  store i32 %354, i32* %355, align 4
  br label %356

356:                                              ; preds = %346, %343, %306, %304
  %357 = bitcast %"class.std::__1::vector.15"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %357) #6
  %358 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 0
  %359 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 1
  %360 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 0, i64 24, i1 false) #6
  br i1 %35, label %388, label %361

361:                                              ; preds = %356
  %362 = icmp slt i32 %29, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %361
  %364 = bitcast %"class.std::__1::vector.15"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %364) #7
  unreachable

365:                                              ; preds = %361
  %366 = add nsw i64 %34, -1
  %367 = lshr i64 %366, 6
  %368 = add nuw nsw i64 %367, 1
  %369 = shl nuw nsw i64 %368, 3
  %370 = tail call i8* @_Znwm(i64 %369) #8
  %371 = bitcast %"class.std::__1::vector.15"* %7 to i8**
  store i8* %370, i8** %371, align 8
  store i64 %368, i64* %360, align 8
  store i64 %34, i64* %359, align 8
  %372 = icmp ult i32 %29, 65
  %373 = bitcast i8* %370 to i64*
  %374 = ptrtoint i8* %370 to i64
  %375 = getelementptr inbounds i64, i64* %373, i64 %367
  %376 = select i1 %372, i64* %373, i64* %375
  store i64 0, i64* %376, align 8
  %377 = lshr i64 %34, 6
  %378 = shl nuw nsw i64 %377, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 %378, i1 false) #6
  %379 = and i64 %34, 63
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %365
  %382 = getelementptr inbounds i64, i64* %373, i64 %377
  %383 = sub nuw nsw i64 64, %379
  %384 = lshr i64 -1, %383
  %385 = xor i64 %384, -1
  %386 = load i64, i64* %382, align 8
  %387 = and i64 %386, %385
  store i64 %387, i64* %382, align 8
  br label %388

388:                                              ; preds = %356, %365, %381
  %389 = phi i64 [ %374, %365 ], [ %374, %381 ], [ 0, %356 ]
  %390 = inttoptr i64 %389 to i64*
  %391 = lshr i64 %34, 6
  %392 = getelementptr inbounds i64, i64* %390, i64 %391
  %393 = and i64 %34, 63
  %394 = ptrtoint i64* %392 to i64
  %395 = sub i64 %394, %389
  %396 = shl i64 %395, 3
  %397 = add i64 %396, %393
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %412, label %399

399:                                              ; preds = %388
  %400 = inttoptr i64 %389 to i8*
  %401 = lshr i64 %397, 6
  %402 = shl nuw nsw i64 %401, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %400, i8 0, i64 %402, i1 false) #6
  %403 = and i64 %397, 63
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %412, label %405

405:                                              ; preds = %399
  %406 = getelementptr inbounds i64, i64* %390, i64 %401
  %407 = sub nuw nsw i64 64, %403
  %408 = lshr i64 -1, %407
  %409 = xor i64 %408, -1
  %410 = load i64, i64* %406, align 8
  %411 = and i64 %410, %409
  store i64 %411, i64* %406, align 8
  br label %412

412:                                              ; preds = %388, %399, %405
  %413 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #6
  %414 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 24, i1 false) #6
  br i1 %35, label %432, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %418 = shl nsw i64 %34, 2
  %419 = tail call i8* @_Znwm(i64 %418) #8
  %420 = bitcast i8* %419 to i32*
  %421 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %419, i8** %421, align 8
  %422 = getelementptr inbounds i32, i32* %420, i64 %34
  store i32* %422, i32** %417, align 8
  %423 = bitcast i32** %415 to i64*
  %424 = ptrtoint i8* %419 to i64
  %425 = add nsw i64 %34, -1
  %426 = getelementptr i32, i32* %420, i64 %425
  %427 = ptrtoint i32* %426 to i64
  %428 = sub i64 4, %424
  %429 = add i64 %428, %427
  %430 = and i64 %429, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %419, i8 0, i64 %430, i1 false) #6
  %431 = ptrtoint i32* %422 to i64
  store i64 %431, i64* %423, align 8
  br label %432

432:                                              ; preds = %412, %416
  %433 = phi i32* [ null, %412 ], [ %420, %416 ]
  %434 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #6
  %435 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %436 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 0, i64 24, i1 false) #6
  br i1 %35, label %453, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %439 = shl nsw i64 %34, 2
  %440 = tail call i8* @_Znwm(i64 %439) #8
  %441 = bitcast i8* %440 to i32*
  %442 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %440, i8** %442, align 8
  %443 = getelementptr inbounds i32, i32* %441, i64 %34
  store i32* %443, i32** %438, align 8
  %444 = bitcast i32** %436 to i64*
  %445 = ptrtoint i8* %440 to i64
  %446 = add nsw i64 %34, -1
  %447 = getelementptr i32, i32* %441, i64 %446
  %448 = ptrtoint i32* %447 to i64
  %449 = sub i64 4, %445
  %450 = add i64 %449, %448
  %451 = and i64 %450, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %440, i8 0, i64 %451, i1 false) #6
  %452 = ptrtoint i32* %443 to i64
  store i64 %452, i64* %444, align 8
  br label %453

453:                                              ; preds = %432, %437
  %454 = phi i32* [ null, %432 ], [ %441, %437 ]
  %455 = add nsw i32 %29, -1
  br i1 %82, label %456, label %484

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 0
  %458 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  br label %547

459:                                              ; preds = %459, %320
  %460 = phi i64 [ 1, %320 ], [ %481, %459 ]
  %461 = phi i64 [ %321, %320 ], [ %482, %459 ]
  %462 = load i32*, i32** %282, align 8
  %463 = load i32*, i32** %307, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 %460
  %465 = load i32, i32* %464, align 4
  %466 = sext i32 %465 to i64
  %467 = load i32*, i32** %164, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 %466
  %469 = load i32, i32* %468, align 4
  %470 = getelementptr inbounds i32, i32* %462, i64 %460
  store i32 %469, i32* %470, align 4
  %471 = add nuw nsw i64 %460, 1
  %472 = load i32*, i32** %282, align 8
  %473 = load i32*, i32** %307, align 8
  %474 = getelementptr inbounds i32, i32* %473, i64 %471
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = load i32*, i32** %164, align 8
  %478 = getelementptr inbounds i32, i32* %477, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = getelementptr inbounds i32, i32* %472, i64 %471
  store i32 %479, i32* %480, align 4
  %481 = add nuw nsw i64 %460, 2
  %482 = add i64 %461, -2
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %343, label %459

484:                                              ; preds = %570, %453
  %485 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7
  %486 = shl nsw i32 %29, 1
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7, i32 0, i32 1
  %489 = bitcast %"class.std::__1::vector"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast %"class.std::__1::vector.8"* %485 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = sub i64 %490, %492
  %494 = sdiv exact i64 %493, 24
  %495 = icmp ult i64 %494, %487
  %496 = inttoptr i64 %492 to %"class.std::__1::vector"*
  %497 = inttoptr i64 %490 to %"class.std::__1::vector"*
  br i1 %495, label %498, label %500

498:                                              ; preds = %484
  %499 = sub nsw i64 %487, %494
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %485, i64 %499) #6
  br label %519

500:                                              ; preds = %484
  %501 = icmp ugt i64 %494, %487
  br i1 %501, label %502, label %519

502:                                              ; preds = %500
  %503 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %496, i64 %487
  %504 = icmp eq %"class.std::__1::vector"* %503, %497
  br i1 %504, label %518, label %505

505:                                              ; preds = %502, %516
  %506 = phi %"class.std::__1::vector"* [ %507, %516 ], [ %497, %502 ]
  %507 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1
  %508 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %507, i64 0, i32 0, i32 0
  %509 = load i32*, i32** %508, align 8
  %510 = icmp eq i32* %509, null
  br i1 %510, label %516, label %511

511:                                              ; preds = %505
  %512 = ptrtoint i32* %509 to i64
  %513 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1, i32 0, i32 1
  %514 = bitcast i32** %513 to i64*
  store i64 %512, i64* %514, align 8
  %515 = bitcast i32* %509 to i8*
  tail call void @_ZdlPv(i8* %515) #8
  br label %516

516:                                              ; preds = %511, %505
  %517 = icmp eq %"class.std::__1::vector"* %507, %503
  br i1 %517, label %518, label %505

518:                                              ; preds = %516, %502
  store %"class.std::__1::vector"* %503, %"class.std::__1::vector"** %488, align 8
  br label %519

519:                                              ; preds = %498, %500, %518
  %520 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #6
  %521 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %523 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %520, i8 0, i64 24, i1 false) #6
  %524 = bitcast i32** %523 to i64*
  %525 = bitcast %"class.std::__1::vector"* %10 to i64*
  %526 = icmp eq i32 %29, 0
  br i1 %526, label %540, label %527

527:                                              ; preds = %519
  %528 = icmp slt i32 %29, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %527
  tail call void @abort() #7
  unreachable

530:                                              ; preds = %527
  %531 = shl nsw i64 %34, 2
  %532 = tail call i8* @_Znwm(i64 %531) #8
  %533 = bitcast i8* %532 to i32*
  %534 = getelementptr inbounds i32, i32* %533, i64 %34
  %535 = ptrtoint i32* %534 to i64
  %536 = insertelement <2 x i8*> undef, i8* %532, i32 0
  %537 = shufflevector <2 x i8*> %536, <2 x i8*> undef, <2 x i32> zeroinitializer
  %538 = ptrtoint <2 x i8*> %537 to <2 x i64>
  %539 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %538, <2 x i64>* %539, align 16
  store i64 %535, i64* %524, align 16
  br label %540

540:                                              ; preds = %530, %519
  br i1 %82, label %541, label %576

541:                                              ; preds = %540
  %542 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %543 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 0
  %544 = bitcast i32** %522 to i64*
  %545 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %546 = zext i32 %29 to i64
  br label %606

547:                                              ; preds = %574, %456
  %548 = phi i32* [ %433, %456 ], [ %575, %574 ]
  %549 = phi i64 [ %34, %456 ], [ %552, %574 ]
  %550 = phi i32 [ 1, %456 ], [ %572, %574 ]
  %551 = phi i32 [ -1, %456 ], [ %571, %574 ]
  %552 = add i64 %549, -1
  %553 = getelementptr inbounds i32, i32* %548, i64 %552
  store i32 %551, i32* %553, align 4
  %554 = load i32*, i32** %457, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %552
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 1
  %558 = getelementptr inbounds i32, i32* %454, i64 %552
  br i1 %557, label %559, label %561

559:                                              ; preds = %547
  store i32 %550, i32* %558, align 4
  %560 = trunc i64 %552 to i32
  br label %570

561:                                              ; preds = %547
  store i32 -1, i32* %558, align 4
  %562 = load i32*, i32** %458, align 8
  %563 = getelementptr inbounds i32, i32* %562, i64 %552
  %564 = load i32, i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = load i32*, i32** %31, align 8
  %567 = getelementptr inbounds i32, i32* %566, i64 %565
  %568 = load i32, i32* %567, align 4
  %569 = mul nsw i32 %568, %550
  br label %570

570:                                              ; preds = %559, %561
  %571 = phi i32 [ %560, %559 ], [ %551, %561 ]
  %572 = phi i32 [ 1, %559 ], [ %569, %561 ]
  %573 = icmp sgt i64 %552, 0
  br i1 %573, label %574, label %484

574:                                              ; preds = %570
  %575 = load i32*, i32** %414, align 8
  br label %547

576:                                              ; preds = %823, %540
  %577 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %577) #6
  %578 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %579 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %580 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %577, i8 0, i64 24, i1 false) #6
  br i1 %35, label %593, label %581

581:                                              ; preds = %576
  %582 = icmp slt i32 %29, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %581
  %584 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %584) #7
  unreachable

585:                                              ; preds = %581
  %586 = shl nsw i64 %34, 2
  %587 = tail call i8* @_Znwm(i64 %586) #8
  %588 = bitcast i8* %587 to i32*
  %589 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %587, i8** %589, align 8
  %590 = getelementptr inbounds i32, i32* %588, i64 %34
  store i32* %590, i32** %580, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %587, i8 0, i64 %586, i1 false)
  %591 = bitcast i32** %579 to i64*
  %592 = ptrtoint i32* %590 to i64
  store i64 %592, i64* %591, align 8
  br label %593

593:                                              ; preds = %585, %576
  %594 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %595 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 0
  %596 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %597 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 0
  %598 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 1
  %599 = bitcast i32** %598 to i64*
  %600 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8
  %601 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %602 = bitcast %"class.std::__1::vector"* %600 to i64*
  %603 = bitcast i32** %601 to i64*
  %604 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %600, i64 0, i32 0, i32 0
  %605 = sext i32 %455 to i64
  br label %826

606:                                              ; preds = %823, %541
  %607 = phi i64 [ 0, %541 ], [ %824, %823 ]
  %608 = shl nuw nsw i64 %607, 1
  %609 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %610 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608
  %611 = bitcast %"class.std::__1::vector"* %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608, i32 0, i32 1
  %614 = bitcast i32** %613 to i64*
  store i64 %612, i64* %614, align 8
  %615 = or i64 %608, 1
  %616 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %617 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615
  %618 = bitcast %"class.std::__1::vector"* %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615, i32 0, i32 1
  %621 = bitcast i32** %620 to i64*
  store i64 %619, i64* %621, align 8
  %622 = load i32*, i32** %543, align 8
  %623 = getelementptr inbounds i32, i32* %622, i64 %607
  %624 = load i32, i32* %623, align 4
  %625 = icmp eq i32 %624, 0
  %626 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %627 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608
  br i1 %625, label %628, label %703

628:                                              ; preds = %606
  %629 = load i32*, i32** %545, align 8
  %630 = getelementptr inbounds i32, i32* %629, i64 %607
  %631 = load i32, i32* %630, align 4
  %632 = sext i32 %631 to i64
  %633 = load i32*, i32** %31, align 8
  %634 = getelementptr inbounds i32, i32* %633, i64 %632
  %635 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %636 = load i32*, i32** %635, align 8
  %637 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %638 = load i32*, i32** %637, align 8
  %639 = icmp eq i32* %636, %638
  %640 = ptrtoint i32* %638 to i64
  br i1 %639, label %646, label %641

641:                                              ; preds = %628
  %642 = load i32, i32* %634, align 4
  store i32 %642, i32* %636, align 4
  %643 = getelementptr inbounds i32, i32* %636, i64 1
  %644 = ptrtoint i32* %643 to i64
  %645 = bitcast i32** %635 to i64*
  store i64 %644, i64* %645, align 8
  br label %823

646:                                              ; preds = %628
  %647 = ptrtoint i32* %636 to i64
  %648 = bitcast i32** %635 to i64*
  %649 = bitcast %"class.std::__1::vector"* %627 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = sub i64 %647, %650
  %652 = ashr exact i64 %651, 2
  %653 = add nsw i64 %652, 1
  %654 = icmp ugt i64 %653, 4611686018427387903
  br i1 %654, label %655, label %657

655:                                              ; preds = %646
  %656 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %656) #7
  unreachable

657:                                              ; preds = %646
  %658 = bitcast i32** %637 to i64*
  %659 = sub i64 %640, %650
  %660 = ashr exact i64 %659, 2
  %661 = icmp ult i64 %660, 2305843009213693951
  br i1 %661, label %662, label %670

662:                                              ; preds = %657
  %663 = ashr exact i64 %659, 1
  %664 = icmp ult i64 %663, %653
  %665 = select i1 %664, i64 %653, i64 %663
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %675, label %667

667:                                              ; preds = %662
  %668 = icmp ugt i64 %665, 4611686018427387903
  br i1 %668, label %669, label %670

669:                                              ; preds = %667
  tail call void @abort() #7
  unreachable

670:                                              ; preds = %667, %657
  %671 = phi i64 [ %665, %667 ], [ 4611686018427387903, %657 ]
  %672 = shl i64 %671, 2
  %673 = tail call i8* @_Znwm(i64 %672) #8
  %674 = bitcast i8* %673 to i32*
  br label %675

675:                                              ; preds = %670, %662
  %676 = phi i64 [ %671, %670 ], [ 0, %662 ]
  %677 = phi i32* [ %674, %670 ], [ null, %662 ]
  %678 = getelementptr inbounds i32, i32* %677, i64 %652
  %679 = getelementptr inbounds i32, i32* %677, i64 %676
  %680 = ptrtoint i32* %679 to i64
  %681 = load i32, i32* %634, align 4
  store i32 %681, i32* %678, align 4
  %682 = getelementptr inbounds i32, i32* %678, i64 1
  %683 = ptrtoint i32* %682 to i64
  %684 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %685 = load i32*, i32** %684, align 8
  %686 = load i64, i64* %648, align 8
  %687 = ptrtoint i32* %685 to i64
  %688 = sub i64 %686, %687
  %689 = ashr exact i64 %688, 2
  %690 = sub nsw i64 0, %689
  %691 = getelementptr inbounds i32, i32* %678, i64 %690
  %692 = ptrtoint i32* %691 to i64
  %693 = icmp sgt i64 %688, 0
  br i1 %693, label %694, label %698

694:                                              ; preds = %675
  %695 = bitcast i32* %691 to i8*
  %696 = bitcast i32* %685 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %695, i8* align 4 %696, i64 %688, i1 false) #6
  %697 = load i32*, i32** %684, align 8
  br label %698

698:                                              ; preds = %694, %675
  %699 = phi i32* [ %685, %675 ], [ %697, %694 ]
  store i64 %692, i64* %649, align 8
  store i64 %683, i64* %648, align 8
  store i64 %680, i64* %658, align 8
  %700 = icmp eq i32* %699, null
  br i1 %700, label %823, label %701

701:                                              ; preds = %698
  %702 = bitcast i32* %699 to i8*
  tail call void @_ZdlPv(i8* %702) #8
  br label %823

703:                                              ; preds = %606
  %704 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %705 = load i32*, i32** %704, align 8
  %706 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %707 = load i32*, i32** %706, align 8
  %708 = icmp ult i32* %705, %707
  %709 = ptrtoint i32* %707 to i64
  br i1 %708, label %710, label %714

710:                                              ; preds = %703
  store i32 0, i32* %705, align 4
  %711 = getelementptr inbounds i32, i32* %705, i64 1
  %712 = ptrtoint i32* %711 to i64
  %713 = bitcast i32** %704 to i64*
  store i64 %712, i64* %713, align 8
  br label %770

714:                                              ; preds = %703
  %715 = ptrtoint i32* %705 to i64
  %716 = bitcast i32** %704 to i64*
  %717 = bitcast %"class.std::__1::vector"* %627 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = sub i64 %715, %718
  %720 = ashr exact i64 %719, 2
  %721 = add nsw i64 %720, 1
  %722 = icmp ugt i64 %721, 4611686018427387903
  br i1 %722, label %723, label %725

723:                                              ; preds = %714
  %724 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %724) #7
  unreachable

725:                                              ; preds = %714
  %726 = bitcast i32** %706 to i64*
  %727 = sub i64 %709, %718
  %728 = ashr exact i64 %727, 2
  %729 = icmp ult i64 %728, 2305843009213693951
  br i1 %729, label %730, label %738

730:                                              ; preds = %725
  %731 = ashr exact i64 %727, 1
  %732 = icmp ult i64 %731, %721
  %733 = select i1 %732, i64 %721, i64 %731
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %743, label %735

735:                                              ; preds = %730
  %736 = icmp ugt i64 %733, 4611686018427387903
  br i1 %736, label %737, label %738

737:                                              ; preds = %735
  tail call void @abort() #7
  unreachable

738:                                              ; preds = %735, %725
  %739 = phi i64 [ %733, %735 ], [ 4611686018427387903, %725 ]
  %740 = shl i64 %739, 2
  %741 = tail call i8* @_Znwm(i64 %740) #8
  %742 = bitcast i8* %741 to i32*
  br label %743

743:                                              ; preds = %738, %730
  %744 = phi i64 [ %739, %738 ], [ 0, %730 ]
  %745 = phi i32* [ %742, %738 ], [ null, %730 ]
  %746 = getelementptr inbounds i32, i32* %745, i64 %720
  %747 = getelementptr inbounds i32, i32* %745, i64 %744
  %748 = ptrtoint i32* %747 to i64
  store i32 0, i32* %746, align 4
  %749 = getelementptr inbounds i32, i32* %746, i64 1
  %750 = ptrtoint i32* %749 to i64
  %751 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %752 = load i32*, i32** %751, align 8
  %753 = load i64, i64* %716, align 8
  %754 = ptrtoint i32* %752 to i64
  %755 = sub i64 %753, %754
  %756 = ashr exact i64 %755, 2
  %757 = sub nsw i64 0, %756
  %758 = getelementptr inbounds i32, i32* %746, i64 %757
  %759 = ptrtoint i32* %758 to i64
  %760 = icmp sgt i64 %755, 0
  br i1 %760, label %761, label %765

761:                                              ; preds = %743
  %762 = bitcast i32* %758 to i8*
  %763 = bitcast i32* %752 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %762, i8* align 4 %763, i64 %755, i1 false) #6
  %764 = load i32*, i32** %751, align 8
  br label %765

765:                                              ; preds = %761, %743
  %766 = phi i32* [ %752, %743 ], [ %764, %761 ]
  store i64 %759, i64* %717, align 8
  store i64 %750, i64* %716, align 8
  store i64 %748, i64* %726, align 8
  %767 = icmp eq i32* %766, null
  br i1 %767, label %770, label %768

768:                                              ; preds = %765
  %769 = bitcast i32* %766 to i8*
  tail call void @_ZdlPv(i8* %769) #8
  br label %770

770:                                              ; preds = %710, %765, %768
  %771 = load i32*, i32** %522, align 8
  %772 = load i32*, i32** %523, align 16
  %773 = icmp eq i32* %771, %772
  %774 = ptrtoint i32* %772 to i64
  br i1 %773, label %779, label %775

775:                                              ; preds = %770
  %776 = trunc i64 %607 to i32
  store i32 %776, i32* %771, align 4
  %777 = getelementptr inbounds i32, i32* %771, i64 1
  %778 = ptrtoint i32* %777 to i64
  store i64 %778, i64* %544, align 8
  br label %823

779:                                              ; preds = %770
  %780 = ptrtoint i32* %771 to i64
  %781 = load i64, i64* %525, align 16
  %782 = sub i64 %780, %781
  %783 = ashr exact i64 %782, 2
  %784 = add nsw i64 %783, 1
  %785 = icmp ugt i64 %784, 4611686018427387903
  br i1 %785, label %786, label %788

786:                                              ; preds = %779
  %787 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %787) #7
  unreachable

788:                                              ; preds = %779
  %789 = sub i64 %774, %781
  %790 = ashr exact i64 %789, 2
  %791 = icmp ult i64 %790, 2305843009213693951
  br i1 %791, label %792, label %800

792:                                              ; preds = %788
  %793 = ashr exact i64 %789, 1
  %794 = icmp ult i64 %793, %784
  %795 = select i1 %794, i64 %784, i64 %793
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %805, label %797

797:                                              ; preds = %792
  %798 = icmp ugt i64 %795, 4611686018427387903
  br i1 %798, label %799, label %800

799:                                              ; preds = %797
  tail call void @abort() #7
  unreachable

800:                                              ; preds = %797, %788
  %801 = phi i64 [ %795, %797 ], [ 4611686018427387903, %788 ]
  %802 = shl i64 %801, 2
  %803 = tail call i8* @_Znwm(i64 %802) #8
  %804 = bitcast i8* %803 to i32*
  br label %805

805:                                              ; preds = %800, %792
  %806 = phi i64 [ %801, %800 ], [ 0, %792 ]
  %807 = phi i8* [ %803, %800 ], [ null, %792 ]
  %808 = phi i32* [ %804, %800 ], [ null, %792 ]
  %809 = getelementptr inbounds i32, i32* %808, i64 %783
  %810 = getelementptr inbounds i32, i32* %808, i64 %806
  %811 = ptrtoint i32* %810 to i64
  %812 = trunc i64 %607 to i32
  store i32 %812, i32* %809, align 4
  %813 = getelementptr inbounds i32, i32* %809, i64 1
  %814 = ptrtoint i32* %813 to i64
  %815 = ptrtoint i32* %808 to i64
  %816 = icmp sgt i64 %782, 0
  br i1 %816, label %817, label %819

817:                                              ; preds = %805
  %818 = inttoptr i64 %781 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %807, i8* align 4 %818, i64 %782, i1 false) #6
  br label %819

819:                                              ; preds = %817, %805
  store i64 %815, i64* %525, align 16
  store i64 %814, i64* %544, align 8
  store i64 %811, i64* %524, align 16
  %820 = icmp eq i64 %781, 0
  br i1 %820, label %823, label %821

821:                                              ; preds = %819
  %822 = inttoptr i64 %781 to i8*
  tail call void @_ZdlPv(i8* %822) #8
  br label %823

823:                                              ; preds = %821, %819, %775, %701, %698, %641
  %824 = add nuw nsw i64 %607, 1
  %825 = icmp eq i64 %824, %546
  br i1 %825, label %576, label %606

826:                                              ; preds = %593, %1234
  %827 = phi i32 [ 0, %593 ], [ %1236, %1234 ]
  %828 = phi i32 [ %29, %593 ], [ %1235, %1234 ]
  %829 = icmp eq i32 %828, %29
  br i1 %829, label %830, label %1060

830:                                              ; preds = %826
  %831 = sext i32 %827 to i64
  %832 = getelementptr inbounds i32, i32* %1, i64 %831
  %833 = load i32, i32* %832, align 4
  %834 = icmp eq i32 %833, 0
  br i1 %834, label %995, label %835

835:                                              ; preds = %830
  %836 = load i32*, i32** %598, align 8
  %837 = load i32*, i32** %601, align 8
  %838 = icmp eq i32* %836, %837
  %839 = ptrtoint i32* %837 to i64
  br i1 %838, label %843, label %840

840:                                              ; preds = %835
  store i32 %833, i32* %836, align 4
  %841 = getelementptr inbounds i32, i32* %836, i64 1
  %842 = ptrtoint i32* %841 to i64
  store i64 %842, i64* %599, align 8
  br label %895

843:                                              ; preds = %835
  %844 = ptrtoint i32* %836 to i64
  %845 = load i64, i64* %602, align 8
  %846 = sub i64 %844, %845
  %847 = ashr exact i64 %846, 2
  %848 = add nsw i64 %847, 1
  %849 = icmp ugt i64 %848, 4611686018427387903
  br i1 %849, label %850, label %852

850:                                              ; preds = %843
  %851 = bitcast %"class.std::__1::vector"* %600 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %851) #7
  unreachable

852:                                              ; preds = %843
  %853 = sub i64 %839, %845
  %854 = ashr exact i64 %853, 2
  %855 = icmp ult i64 %854, 2305843009213693951
  br i1 %855, label %856, label %864

856:                                              ; preds = %852
  %857 = ashr exact i64 %853, 1
  %858 = icmp ult i64 %857, %848
  %859 = select i1 %858, i64 %848, i64 %857
  %860 = icmp eq i64 %859, 0
  br i1 %860, label %869, label %861

861:                                              ; preds = %856
  %862 = icmp ugt i64 %859, 4611686018427387903
  br i1 %862, label %863, label %864

863:                                              ; preds = %861
  tail call void @abort() #7
  unreachable

864:                                              ; preds = %861, %852
  %865 = phi i64 [ %859, %861 ], [ 4611686018427387903, %852 ]
  %866 = shl i64 %865, 2
  %867 = tail call i8* @_Znwm(i64 %866) #8
  %868 = bitcast i8* %867 to i32*
  br label %869

869:                                              ; preds = %864, %856
  %870 = phi i64 [ %865, %864 ], [ 0, %856 ]
  %871 = phi i32* [ %868, %864 ], [ null, %856 ]
  %872 = getelementptr inbounds i32, i32* %871, i64 %847
  %873 = getelementptr inbounds i32, i32* %871, i64 %870
  %874 = ptrtoint i32* %873 to i64
  store i32 %833, i32* %872, align 4
  %875 = getelementptr inbounds i32, i32* %872, i64 1
  %876 = ptrtoint i32* %875 to i64
  %877 = load i32*, i32** %604, align 8
  %878 = load i64, i64* %599, align 8
  %879 = ptrtoint i32* %877 to i64
  %880 = sub i64 %878, %879
  %881 = ashr exact i64 %880, 2
  %882 = sub nsw i64 0, %881
  %883 = getelementptr inbounds i32, i32* %872, i64 %882
  %884 = ptrtoint i32* %883 to i64
  %885 = icmp sgt i64 %880, 0
  br i1 %885, label %886, label %890

886:                                              ; preds = %869
  %887 = bitcast i32* %883 to i8*
  %888 = bitcast i32* %877 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %887, i8* align 4 %888, i64 %880, i1 false) #6
  %889 = load i32*, i32** %604, align 8
  br label %890

890:                                              ; preds = %886, %869
  %891 = phi i32* [ %877, %869 ], [ %889, %886 ]
  store i64 %884, i64* %602, align 8
  store i64 %876, i64* %599, align 8
  store i64 %874, i64* %603, align 8
  %892 = icmp eq i32* %891, null
  br i1 %892, label %895, label %893

893:                                              ; preds = %890
  %894 = bitcast i32* %891 to i8*
  tail call void @_ZdlPv(i8* %894) #8
  br label %895

895:                                              ; preds = %840, %890, %893
  %896 = load i32*, i32** %521, align 16
  %897 = load i32*, i32** %522, align 8
  %898 = icmp eq i32* %896, %897
  br i1 %898, label %1234, label %899

899:                                              ; preds = %895, %992
  %900 = phi i32* [ %993, %992 ], [ %896, %895 ]
  %901 = load i32, i32* %900, align 4
  %902 = sext i32 %901 to i64
  %903 = load i64*, i64** %358, align 8
  %904 = lshr i64 %902, 6
  %905 = getelementptr inbounds i64, i64* %903, i64 %904
  %906 = and i64 %902, 63
  %907 = shl i64 1, %906
  %908 = load i64, i64* %905, align 8
  %909 = and i64 %907, %908
  %910 = icmp eq i64 %909, 0
  br i1 %910, label %911, label %992

911:                                              ; preds = %899
  %912 = shl nsw i32 %901, 1
  %913 = or i32 %912, 1
  %914 = sext i32 %913 to i64
  %915 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %916 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914
  %917 = load i32*, i32** %578, align 8
  %918 = getelementptr inbounds i32, i32* %917, i64 %902
  %919 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914, i32 0, i32 1
  %920 = load i32*, i32** %919, align 8
  %921 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914, i32 0, i32 2, i32 0, i32 0
  %922 = load i32*, i32** %921, align 8
  %923 = icmp eq i32* %920, %922
  %924 = ptrtoint i32* %922 to i64
  br i1 %923, label %930, label %925

925:                                              ; preds = %911
  %926 = load i32, i32* %918, align 4
  store i32 %926, i32* %920, align 4
  %927 = getelementptr inbounds i32, i32* %920, i64 1
  %928 = ptrtoint i32* %927 to i64
  %929 = bitcast i32** %919 to i64*
  store i64 %928, i64* %929, align 8
  br label %987

930:                                              ; preds = %911
  %931 = ptrtoint i32* %920 to i64
  %932 = bitcast i32** %919 to i64*
  %933 = bitcast %"class.std::__1::vector"* %916 to i64*
  %934 = load i64, i64* %933, align 8
  %935 = sub i64 %931, %934
  %936 = ashr exact i64 %935, 2
  %937 = add nsw i64 %936, 1
  %938 = icmp ugt i64 %937, 4611686018427387903
  br i1 %938, label %939, label %941

939:                                              ; preds = %930
  %940 = bitcast %"class.std::__1::vector"* %916 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %940) #7
  unreachable

941:                                              ; preds = %930
  %942 = bitcast i32** %921 to i64*
  %943 = sub i64 %924, %934
  %944 = ashr exact i64 %943, 2
  %945 = icmp ult i64 %944, 2305843009213693951
  br i1 %945, label %946, label %954

946:                                              ; preds = %941
  %947 = ashr exact i64 %943, 1
  %948 = icmp ult i64 %947, %937
  %949 = select i1 %948, i64 %937, i64 %947
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %959, label %951

951:                                              ; preds = %946
  %952 = icmp ugt i64 %949, 4611686018427387903
  br i1 %952, label %953, label %954

953:                                              ; preds = %951
  tail call void @abort() #7
  unreachable

954:                                              ; preds = %951, %941
  %955 = phi i64 [ %949, %951 ], [ 4611686018427387903, %941 ]
  %956 = shl i64 %955, 2
  %957 = tail call i8* @_Znwm(i64 %956) #8
  %958 = bitcast i8* %957 to i32*
  br label %959

959:                                              ; preds = %954, %946
  %960 = phi i64 [ %955, %954 ], [ 0, %946 ]
  %961 = phi i32* [ %958, %954 ], [ null, %946 ]
  %962 = getelementptr inbounds i32, i32* %961, i64 %936
  %963 = getelementptr inbounds i32, i32* %961, i64 %960
  %964 = ptrtoint i32* %963 to i64
  %965 = load i32, i32* %918, align 4
  store i32 %965, i32* %962, align 4
  %966 = getelementptr inbounds i32, i32* %962, i64 1
  %967 = ptrtoint i32* %966 to i64
  %968 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %916, i64 0, i32 0, i32 0
  %969 = load i32*, i32** %968, align 8
  %970 = load i64, i64* %932, align 8
  %971 = ptrtoint i32* %969 to i64
  %972 = sub i64 %970, %971
  %973 = ashr exact i64 %972, 2
  %974 = sub nsw i64 0, %973
  %975 = getelementptr inbounds i32, i32* %962, i64 %974
  %976 = ptrtoint i32* %975 to i64
  %977 = icmp sgt i64 %972, 0
  br i1 %977, label %978, label %982

978:                                              ; preds = %959
  %979 = bitcast i32* %975 to i8*
  %980 = bitcast i32* %969 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %979, i8* align 4 %980, i64 %972, i1 false) #6
  %981 = load i32*, i32** %968, align 8
  br label %982

982:                                              ; preds = %978, %959
  %983 = phi i32* [ %969, %959 ], [ %981, %978 ]
  store i64 %976, i64* %933, align 8
  store i64 %967, i64* %932, align 8
  store i64 %964, i64* %942, align 8
  %984 = icmp eq i32* %983, null
  br i1 %984, label %987, label %985

985:                                              ; preds = %982
  %986 = bitcast i32* %983 to i8*
  tail call void @_ZdlPv(i8* %986) #8
  br label %987

987:                                              ; preds = %925, %982, %985
  %988 = load i64*, i64** %358, align 8
  %989 = getelementptr inbounds i64, i64* %988, i64 %904
  %990 = load i64, i64* %989, align 8
  %991 = or i64 %990, %907
  store i64 %991, i64* %989, align 8
  br label %992

992:                                              ; preds = %899, %987
  %993 = getelementptr inbounds i32, i32* %900, i64 1
  %994 = icmp eq i32* %993, %897
  br i1 %994, label %1234, label %899

995:                                              ; preds = %830
  %996 = load i32*, i32** %595, align 8
  %997 = getelementptr inbounds i32, i32* %996, i64 %605
  %998 = load i32, i32* %997, align 4
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1234

1000:                                             ; preds = %995
  %1001 = load i32*, i32** %598, align 8
  %1002 = load i32*, i32** %601, align 8
  %1003 = icmp eq i32* %1001, %1002
  %1004 = ptrtoint i32* %1002 to i64
  br i1 %1003, label %1008, label %1005

1005:                                             ; preds = %1000
  store i32 0, i32* %1001, align 4
  %1006 = getelementptr inbounds i32, i32* %1001, i64 1
  %1007 = ptrtoint i32* %1006 to i64
  store i64 %1007, i64* %599, align 8
  br label %1234

1008:                                             ; preds = %1000
  %1009 = ptrtoint i32* %1001 to i64
  %1010 = load i64, i64* %602, align 8
  %1011 = sub i64 %1009, %1010
  %1012 = ashr exact i64 %1011, 2
  %1013 = add nsw i64 %1012, 1
  %1014 = icmp ugt i64 %1013, 4611686018427387903
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1008
  %1016 = bitcast %"class.std::__1::vector"* %600 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1016) #7
  unreachable

1017:                                             ; preds = %1008
  %1018 = sub i64 %1004, %1010
  %1019 = ashr exact i64 %1018, 2
  %1020 = icmp ult i64 %1019, 2305843009213693951
  br i1 %1020, label %1021, label %1029

1021:                                             ; preds = %1017
  %1022 = ashr exact i64 %1018, 1
  %1023 = icmp ult i64 %1022, %1013
  %1024 = select i1 %1023, i64 %1013, i64 %1022
  %1025 = icmp eq i64 %1024, 0
  br i1 %1025, label %1034, label %1026

1026:                                             ; preds = %1021
  %1027 = icmp ugt i64 %1024, 4611686018427387903
  br i1 %1027, label %1028, label %1029

1028:                                             ; preds = %1026
  tail call void @abort() #7
  unreachable

1029:                                             ; preds = %1026, %1017
  %1030 = phi i64 [ %1024, %1026 ], [ 4611686018427387903, %1017 ]
  %1031 = shl i64 %1030, 2
  %1032 = tail call i8* @_Znwm(i64 %1031) #8
  %1033 = bitcast i8* %1032 to i32*
  br label %1034

1034:                                             ; preds = %1029, %1021
  %1035 = phi i64 [ %1030, %1029 ], [ 0, %1021 ]
  %1036 = phi i32* [ %1033, %1029 ], [ null, %1021 ]
  %1037 = getelementptr inbounds i32, i32* %1036, i64 %1012
  %1038 = getelementptr inbounds i32, i32* %1036, i64 %1035
  %1039 = ptrtoint i32* %1038 to i64
  store i32 0, i32* %1037, align 4
  %1040 = getelementptr inbounds i32, i32* %1037, i64 1
  %1041 = ptrtoint i32* %1040 to i64
  %1042 = load i32*, i32** %604, align 8
  %1043 = load i64, i64* %599, align 8
  %1044 = ptrtoint i32* %1042 to i64
  %1045 = sub i64 %1043, %1044
  %1046 = ashr exact i64 %1045, 2
  %1047 = sub nsw i64 0, %1046
  %1048 = getelementptr inbounds i32, i32* %1037, i64 %1047
  %1049 = ptrtoint i32* %1048 to i64
  %1050 = icmp sgt i64 %1045, 0
  br i1 %1050, label %1051, label %1055

1051:                                             ; preds = %1034
  %1052 = bitcast i32* %1048 to i8*
  %1053 = bitcast i32* %1042 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1052, i8* align 4 %1053, i64 %1045, i1 false) #6
  %1054 = load i32*, i32** %604, align 8
  br label %1055

1055:                                             ; preds = %1051, %1034
  %1056 = phi i32* [ %1042, %1034 ], [ %1054, %1051 ]
  store i64 %1049, i64* %602, align 8
  store i64 %1041, i64* %599, align 8
  store i64 %1039, i64* %603, align 8
  %1057 = icmp eq i32* %1056, null
  br i1 %1057, label %1234, label %1058

1058:                                             ; preds = %1055
  %1059 = bitcast i32* %1056 to i8*
  tail call void @_ZdlPv(i8* %1059) #8
  br label %1234

1060:                                             ; preds = %826
  %1061 = sext i32 %828 to i64
  %1062 = load i32*, i32** %594, align 8
  %1063 = getelementptr inbounds i32, i32* %1062, i64 %1061
  %1064 = load i32, i32* %1063, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = load i32*, i32** %31, align 8
  %1067 = getelementptr inbounds i32, i32* %1066, i64 %1065
  %1068 = load i32, i32* %1067, align 4
  %1069 = load i64*, i64** %358, align 8
  %1070 = lshr i64 %1061, 6
  %1071 = getelementptr inbounds i64, i64* %1069, i64 %1070
  %1072 = and i64 %1061, 63
  %1073 = shl i64 1, %1072
  %1074 = load i64, i64* %1071, align 8
  %1075 = and i64 %1074, %1073
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1080, label %1077

1077:                                             ; preds = %1060
  %1078 = xor i64 %1073, -1
  %1079 = and i64 %1074, %1078
  store i64 %1079, i64* %1071, align 8
  br label %1126

1080:                                             ; preds = %1060
  %1081 = load i32*, i32** %595, align 8
  %1082 = getelementptr inbounds i32, i32* %1081, i64 %1061
  %1083 = load i32, i32* %1082, align 4
  %1084 = icmp eq i32 %1083, 1
  br i1 %1084, label %1085, label %1126

1085:                                             ; preds = %1080
  %1086 = load i32*, i32** %414, align 8
  %1087 = getelementptr inbounds i32, i32* %1086, i64 %1061
  %1088 = load i32, i32* %1087, align 4
  %1089 = shl nsw i32 %828, 1
  %1090 = or i32 %1089, 1
  %1091 = sext i32 %1090 to i64
  %1092 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1093 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1091
  %1094 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1091, i32 0, i32 1
  %1095 = bitcast i32** %1094 to i64*
  %1096 = load i64, i64* %1095, align 8
  %1097 = bitcast %"class.std::__1::vector"* %1093 to i64*
  %1098 = load i64, i64* %1097, align 8
  %1099 = sub i64 %1096, %1098
  %1100 = lshr exact i64 %1099, 2
  %1101 = load i32*, i32** %435, align 8
  %1102 = getelementptr inbounds i32, i32* %1101, i64 %1061
  %1103 = load i32, i32* %1102, align 4
  %1104 = trunc i64 %1100 to i32
  %1105 = mul i32 %1103, %1104
  %1106 = icmp sgt i32 %1088, -1
  br i1 %1106, label %1107, label %1119

1107:                                             ; preds = %1085
  %1108 = shl nsw i32 %1088, 1
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1109, i32 0, i32 0
  %1111 = load i32*, i32** %1110, align 8
  %1112 = getelementptr inbounds i32, i32* %1111, i64 1
  %1113 = sext i32 %1105 to i64
  %1114 = getelementptr inbounds i32, i32* %1112, i64 %1113
  %1115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1109, i32 0, i32 1
  %1116 = load i32*, i32** %1115, align 8
  %1117 = icmp eq i32* %1114, %1116
  br i1 %1117, label %1126, label %1118

1118:                                             ; preds = %1107
  store i32* %1114, i32** %1115, align 8
  br label %1126

1119:                                             ; preds = %1085
  %1120 = load i32*, i32** %597, align 8
  %1121 = sext i32 %1105 to i64
  %1122 = getelementptr inbounds i32, i32* %1120, i64 %1121
  %1123 = load i32*, i32** %598, align 8
  %1124 = icmp eq i32* %1122, %1123
  br i1 %1124, label %1126, label %1125

1125:                                             ; preds = %1119
  store i32* %1122, i32** %598, align 8
  br label %1126

1126:                                             ; preds = %1125, %1119, %1118, %1107, %1080, %1077
  %1127 = load i32*, i32** %578, align 8
  %1128 = getelementptr inbounds i32, i32* %1127, i64 %1061
  %1129 = load i32, i32* %1128, align 4
  %1130 = add nsw i32 %1129, 1
  store i32 %1130, i32* %1128, align 4
  %1131 = icmp slt i32 %1130, %1068
  br i1 %1131, label %1132, label %1138

1132:                                             ; preds = %1126
  %1133 = load i32*, i32** %282, align 8
  %1134 = getelementptr inbounds i32, i32* %1133, i64 %1061
  %1135 = load i32, i32* %1134, align 4
  %1136 = add nsw i32 %1135, %827
  %1137 = add nuw nsw i32 %828, 1
  br label %1234

1138:                                             ; preds = %1126
  %1139 = load i32*, i32** %595, align 8
  %1140 = getelementptr inbounds i32, i32* %1139, i64 %1061
  %1141 = load i32, i32* %1140, align 4
  %1142 = icmp eq i32 %1141, 1
  br i1 %1142, label %1143, label %1225

1143:                                             ; preds = %1138
  %1144 = shl nsw i32 %828, 1
  %1145 = sext i32 %1144 to i64
  %1146 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145
  %1148 = or i32 %1144, 1
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1149
  %1151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1149, i32 0, i32 1
  %1152 = bitcast i32** %1151 to i64*
  %1153 = load i64, i64* %1152, align 8
  %1154 = bitcast %"class.std::__1::vector"* %1150 to i64*
  %1155 = load i64, i64* %1154, align 8
  %1156 = sub i64 %1153, %1155
  %1157 = lshr exact i64 %1156, 2
  %1158 = trunc i64 %1157 to i32
  %1159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145, i32 0, i32 1
  %1160 = load i32*, i32** %1159, align 8
  %1161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145, i32 0, i32 2, i32 0, i32 0
  %1162 = load i32*, i32** %1161, align 8
  %1163 = icmp ult i32* %1160, %1162
  %1164 = ptrtoint i32* %1162 to i64
  br i1 %1163, label %1165, label %1169

1165:                                             ; preds = %1143
  store i32 %1158, i32* %1160, align 4
  %1166 = getelementptr inbounds i32, i32* %1160, i64 1
  %1167 = ptrtoint i32* %1166 to i64
  %1168 = bitcast i32** %1159 to i64*
  store i64 %1167, i64* %1168, align 8
  br label %1225

1169:                                             ; preds = %1143
  %1170 = ptrtoint i32* %1160 to i64
  %1171 = bitcast i32** %1159 to i64*
  %1172 = bitcast %"class.std::__1::vector"* %1147 to i64*
  %1173 = load i64, i64* %1172, align 8
  %1174 = sub i64 %1170, %1173
  %1175 = ashr exact i64 %1174, 2
  %1176 = add nsw i64 %1175, 1
  %1177 = icmp ugt i64 %1176, 4611686018427387903
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1169
  %1179 = bitcast %"class.std::__1::vector"* %1147 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1179) #7
  unreachable

1180:                                             ; preds = %1169
  %1181 = bitcast i32** %1161 to i64*
  %1182 = sub i64 %1164, %1173
  %1183 = ashr exact i64 %1182, 2
  %1184 = icmp ult i64 %1183, 2305843009213693951
  br i1 %1184, label %1185, label %1193

1185:                                             ; preds = %1180
  %1186 = ashr exact i64 %1182, 1
  %1187 = icmp ult i64 %1186, %1176
  %1188 = select i1 %1187, i64 %1176, i64 %1186
  %1189 = icmp eq i64 %1188, 0
  br i1 %1189, label %1198, label %1190

1190:                                             ; preds = %1185
  %1191 = icmp ugt i64 %1188, 4611686018427387903
  br i1 %1191, label %1192, label %1193

1192:                                             ; preds = %1190
  tail call void @abort() #7
  unreachable

1193:                                             ; preds = %1190, %1180
  %1194 = phi i64 [ %1188, %1190 ], [ 4611686018427387903, %1180 ]
  %1195 = shl i64 %1194, 2
  %1196 = tail call i8* @_Znwm(i64 %1195) #8
  %1197 = bitcast i8* %1196 to i32*
  br label %1198

1198:                                             ; preds = %1193, %1185
  %1199 = phi i64 [ %1194, %1193 ], [ 0, %1185 ]
  %1200 = phi i32* [ %1197, %1193 ], [ null, %1185 ]
  %1201 = getelementptr inbounds i32, i32* %1200, i64 %1175
  %1202 = getelementptr inbounds i32, i32* %1200, i64 %1199
  %1203 = ptrtoint i32* %1202 to i64
  store i32 %1158, i32* %1201, align 4
  %1204 = getelementptr inbounds i32, i32* %1201, i64 1
  %1205 = ptrtoint i32* %1204 to i64
  %1206 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1147, i64 0, i32 0, i32 0
  %1207 = load i32*, i32** %1206, align 8
  %1208 = load i64, i64* %1171, align 8
  %1209 = ptrtoint i32* %1207 to i64
  %1210 = sub i64 %1208, %1209
  %1211 = ashr exact i64 %1210, 2
  %1212 = sub nsw i64 0, %1211
  %1213 = getelementptr inbounds i32, i32* %1201, i64 %1212
  %1214 = ptrtoint i32* %1213 to i64
  %1215 = icmp sgt i64 %1210, 0
  br i1 %1215, label %1216, label %1220

1216:                                             ; preds = %1198
  %1217 = bitcast i32* %1213 to i8*
  %1218 = bitcast i32* %1207 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1217, i8* align 4 %1218, i64 %1210, i1 false) #6
  %1219 = load i32*, i32** %1206, align 8
  br label %1220

1220:                                             ; preds = %1216, %1198
  %1221 = phi i32* [ %1207, %1198 ], [ %1219, %1216 ]
  store i64 %1214, i64* %1172, align 8
  store i64 %1205, i64* %1171, align 8
  store i64 %1203, i64* %1181, align 8
  %1222 = icmp eq i32* %1221, null
  br i1 %1222, label %1225, label %1223

1223:                                             ; preds = %1220
  %1224 = bitcast i32* %1221 to i8*
  tail call void @_ZdlPv(i8* %1224) #8
  br label %1225

1225:                                             ; preds = %1223, %1220, %1165, %1138
  %1226 = load i32*, i32** %578, align 8
  %1227 = getelementptr inbounds i32, i32* %1226, i64 %1061
  store i32 -1, i32* %1227, align 4
  %1228 = load i32*, i32** %282, align 8
  %1229 = getelementptr inbounds i32, i32* %1228, i64 %1061
  %1230 = load i32, i32* %1229, align 4
  %1231 = mul nsw i32 %1230, %1068
  %1232 = sub nsw i32 %827, %1231
  %1233 = add nsw i32 %828, -1
  br label %1234

1234:                                             ; preds = %992, %995, %1005, %1055, %1058, %895, %1132, %1225
  %1235 = phi i32 [ %1137, %1132 ], [ %1233, %1225 ], [ %455, %895 ], [ %455, %1058 ], [ %455, %1055 ], [ %455, %1005 ], [ %455, %995 ], [ %455, %992 ]
  %1236 = phi i32 [ %1136, %1132 ], [ %1232, %1225 ], [ %827, %895 ], [ %827, %1058 ], [ %827, %1055 ], [ %827, %1005 ], [ %827, %995 ], [ %827, %992 ]
  %1237 = icmp sgt i32 %1235, -1
  br i1 %1237, label %826, label %1238

1238:                                             ; preds = %1234
  %1239 = load i32*, i32** %578, align 8
  %1240 = icmp eq i32* %1239, null
  br i1 %1240, label %1245, label %1241

1241:                                             ; preds = %1238
  %1242 = bitcast i32* %1239 to i8*
  %1243 = ptrtoint i32* %1239 to i64
  %1244 = bitcast i32** %579 to i64*
  store i64 %1243, i64* %1244, align 8
  tail call void @_ZdlPv(i8* %1242) #8
  br label %1245

1245:                                             ; preds = %1238, %1241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %577) #6
  %1246 = load i32*, i32** %521, align 16
  %1247 = icmp eq i32* %1246, null
  br i1 %1247, label %1252, label %1248

1248:                                             ; preds = %1245
  %1249 = ptrtoint i32* %1246 to i64
  %1250 = bitcast i32** %522 to i64*
  store i64 %1249, i64* %1250, align 8
  %1251 = bitcast i32* %1246 to i8*
  tail call void @_ZdlPv(i8* %1251) #8
  br label %1252

1252:                                             ; preds = %1245, %1248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #6
  %1253 = load i32*, i32** %435, align 8
  %1254 = icmp eq i32* %1253, null
  br i1 %1254, label %1259, label %1255

1255:                                             ; preds = %1252
  %1256 = ptrtoint i32* %1253 to i64
  %1257 = bitcast i32** %436 to i64*
  store i64 %1256, i64* %1257, align 8
  %1258 = bitcast i32* %1253 to i8*
  tail call void @_ZdlPv(i8* %1258) #8
  br label %1259

1259:                                             ; preds = %1252, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #6
  %1260 = load i32*, i32** %414, align 8
  %1261 = icmp eq i32* %1260, null
  br i1 %1261, label %1266, label %1262

1262:                                             ; preds = %1259
  %1263 = ptrtoint i32* %1260 to i64
  %1264 = bitcast i32** %415 to i64*
  store i64 %1263, i64* %1264, align 8
  %1265 = bitcast i32* %1260 to i8*
  tail call void @_ZdlPv(i8* %1265) #8
  br label %1266

1266:                                             ; preds = %1259, %1262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #6
  %1267 = load i64*, i64** %358, align 8
  %1268 = icmp eq i64* %1267, null
  br i1 %1268, label %1271, label %1269

1269:                                             ; preds = %1266
  %1270 = bitcast i64* %1267 to i8*
  tail call void @_ZdlPv(i8* %1270) #8
  br label %1271

1271:                                             ; preds = %1266, %1269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %357) #6
  %1272 = load i32*, i32** %282, align 8
  %1273 = icmp eq i32* %1272, null
  br i1 %1273, label %1278, label %1274

1274:                                             ; preds = %1271
  %1275 = ptrtoint i32* %1272 to i64
  %1276 = bitcast i32** %283 to i64*
  store i64 %1275, i64* %1276, align 8
  %1277 = bitcast i32* %1272 to i8*
  tail call void @_ZdlPv(i8* %1277) #8
  br label %1278

1278:                                             ; preds = %1271, %1274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #6
  %1279 = load i32*, i32** %164, align 8
  %1280 = icmp eq i32* %1279, null
  br i1 %1280, label %1285, label %1281

1281:                                             ; preds = %1278
  %1282 = ptrtoint i32* %1279 to i64
  %1283 = bitcast i32** %165 to i64*
  store i64 %1282, i64* %1283, align 8
  %1284 = bitcast i32* %1279 to i8*
  tail call void @_ZdlPv(i8* %1284) #8
  br label %1285

1285:                                             ; preds = %1278, %1281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #6
  %1286 = load i32*, i32** %84, align 8
  %1287 = icmp eq i32* %1286, null
  br i1 %1287, label %1291, label %1288

1288:                                             ; preds = %1285
  %1289 = ptrtoint i32* %1286 to i64
  store i64 %1289, i64* %112, align 8
  %1290 = bitcast i32* %1286 to i8*
  tail call void @_ZdlPv(i8* %1290) #8
  br label %1291

1291:                                             ; preds = %1285, %1288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #6
  %1292 = load i32*, i32** %31, align 8
  %1293 = icmp eq i32* %1292, null
  br i1 %1293, label %1298, label %1294

1294:                                             ; preds = %1291
  %1295 = ptrtoint i32* %1292 to i64
  %1296 = bitcast i32** %32 to i64*
  store i64 %1295, i64* %1296, align 8
  %1297 = bitcast i32* %1292 to i8*
  tail call void @_ZdlPv(i8* %1297) #8
  br label %1298

1298:                                             ; preds = %1291, %1294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  ret i32 0

1299:                                             ; preds = %152
  %1300 = sub nsw i64 %160, %18
  %1301 = shl i64 %1300, 32
  %1302 = ashr exact i64 %1301, 32
  br label %1303

1303:                                             ; preds = %1299, %152
  %1304 = phi i32** [ %55, %1299 ], [ %56, %152 ]
  %1305 = phi i64 [ %1302, %1299 ], [ %160, %152 ]
  %1306 = load i32*, i32** %1304, align 8
  %1307 = getelementptr inbounds i32, i32* %1306, i64 %1305
  %1308 = load i32, i32* %1307, align 4
  %1309 = load i32*, i32** %31, align 8
  %1310 = getelementptr inbounds i32, i32* %1309, i64 %160
  store i32 %1308, i32* %1310, align 4
  %1311 = add nuw nsw i64 %145, 2
  %1312 = add i64 %146, -2
  %1313 = icmp eq i64 %1312, 0
  br i1 %1313, label %64, label %144
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIiE13SparseToDenseEPKi(%"class.tflite::optimize::sparsity::FormatConverter"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp ugt i64 %8, %15
  %17 = inttoptr i64 %13 to i32*
  br i1 %16, label %18, label %23

18:                                               ; preds = %2
  %19 = sub i64 %8, %15
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %6, i64 %19) #6
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = load i64, i64* %10, align 8
  br label %28

23:                                               ; preds = %2
  %24 = icmp ult i64 %8, %15
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds i32, i32* %17, i64 %8
  store i32* %26, i32** %9, align 8
  %27 = ptrtoint i32* %26 to i64
  br label %28

28:                                               ; preds = %18, %23, %25
  %29 = phi i64 [ %22, %18 ], [ %11, %23 ], [ %27, %25 ]
  %30 = phi i32* [ %21, %18 ], [ %17, %23 ], [ %17, %25 ]
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 %29, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = bitcast i32* %30 to i8*
  %36 = and i64 %32, -4
  %37 = icmp ult i64 %32, 4
  %38 = sext i1 %37 to i64
  %39 = shl nsw i64 %38, 2
  %40 = sub i64 %36, %39
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %40, i1 false)
  br label %41

41:                                               ; preds = %34, %28
  %42 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #6
  store i32 0, i32* %3, align 4
  %50 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = shl i64 %48, 30
  %55 = ashr exact i64 %54, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #6
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %41
  %58 = bitcast i32** %52 to i64*
  br label %79

59:                                               ; preds = %41
  %60 = icmp ugt i64 %55, 4611686018427387903
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #7
  unreachable

63:                                               ; preds = %59
  %64 = ashr exact i64 %54, 30
  %65 = tail call i8* @_Znwm(i64 %64) #8
  %66 = bitcast i8* %65 to i32*
  %67 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds i32, i32* %66, i64 %55
  store i32* %68, i32** %53, align 8
  %69 = bitcast i32** %52 to i64*
  %70 = ptrtoint i8* %65 to i64
  %71 = add nsw i64 %55, -1
  %72 = getelementptr i32, i32* %66, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 4, %70
  %75 = add i64 %74, %73
  %76 = and i64 %75, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 0, i64 %76, i1 false) #6
  %77 = ptrtoint i32* %68 to i64
  store i64 %77, i64* %69, align 8
  %78 = ptrtoint i8* %65 to i64
  br label %79

79:                                               ; preds = %57, %63
  %80 = phi i64* [ %58, %57 ], [ %69, %63 ]
  %81 = phi i8* [ null, %57 ], [ %65, %63 ]
  %82 = phi i64 [ 0, %57 ], [ %78, %63 ]
  %83 = phi i64 [ 0, %57 ], [ %70, %63 ]
  %84 = phi i64 [ 0, %57 ], [ %77, %63 ]
  %85 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #6
  %86 = sub i64 %84, %83
  %87 = ashr exact i64 %86, 2
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %111, label %89

89:                                               ; preds = %79
  %90 = icmp ugt i64 %87, 4611686018427387903
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %92) #7
  unreachable

93:                                               ; preds = %89
  %94 = tail call i8* @_Znwm(i64 %86) #8
  %95 = bitcast i8* %94 to i32*
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %97 = bitcast i32** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds i32, i32* %95, i64 %87
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %99, i32** %100, align 8
  %101 = bitcast i32** %96 to i64*
  %102 = ptrtoint i8* %94 to i64
  %103 = sub i64 %84, %82
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %93
  %106 = lshr exact i64 %103, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* align 4 %81, i64 %103, i1 false) #6
  %107 = getelementptr inbounds i32, i32* %95, i64 %106
  %108 = ptrtoint i32* %107 to i64
  br label %109

109:                                              ; preds = %105, %93
  %110 = phi i64 [ %108, %105 ], [ %102, %93 ]
  store i64 %110, i64* %101, align 8
  br label %111

111:                                              ; preds = %79, %109
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIiE8PopulateEPKiNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter"* %0, i32* %1, %"class.std::__1::vector"* nonnull %5, i32 0, i32 0, i32* nonnull %3)
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #8
  br label %120

120:                                              ; preds = %111, %115
  %121 = load i32*, i32** %51, align 8
  %122 = icmp eq i32* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = ptrtoint i32* %121 to i64
  store i64 %124, i64* %80, align 8
  %125 = bitcast i32* %121 to i8*
  call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIiE8PopulateEPKiNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter"*, i32*, %"class.std::__1::vector"*, i32, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp eq i64 %17, %10
  %19 = inttoptr i64 %15 to i32*
  br i1 %18, label %20, label %154

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #6
  %32 = shl i64 %26, 30
  %33 = bitcast i32** %31 to i64*
  %34 = bitcast %"class.std::__1::vector"* %7 to i64*
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %20
  %37 = ashr exact i64 %32, 32
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %37) #6
  %38 = load i64, i64* %33, align 8
  %39 = load i64, i64* %34, align 8
  %40 = inttoptr i64 %39 to i32*
  %41 = icmp eq i64 %38, %39
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %60

45:                                               ; preds = %60
  %46 = inttoptr i64 %73 to i32*
  %47 = and i64 %71, 4294967295
  br label %48

48:                                               ; preds = %20, %45, %36
  %49 = phi i32* [ %40, %36 ], [ %46, %45 ], [ null, %20 ]
  %50 = phi i64 [ 0, %36 ], [ %47, %45 ], [ 0, %20 ]
  %51 = load i64, i64* %12, align 8
  %52 = load i64, i64* %14, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp ugt i64 %54, %50
  br i1 %55, label %56, label %109

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %58 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 0
  br label %78

60:                                               ; preds = %42, %60
  %61 = phi i32* [ %40, %42 ], [ %77, %60 ]
  %62 = phi i64 [ 0, %42 ], [ %71, %60 ]
  %63 = load i32*, i32** %43, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %44, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %62
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i32, i32* %61, i64 %69
  store i32 %68, i32* %70, align 4
  %71 = add nuw i64 %62, 1
  %72 = load i64, i64* %33, align 8
  %73 = load i64, i64* %34, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 2
  %76 = icmp ugt i64 %75, %71
  %77 = inttoptr i64 %73 to i32*
  br i1 %76, label %60, label %45

78:                                               ; preds = %107, %56
  %79 = phi i64 [ %52, %56 ], [ %103, %107 ]
  %80 = phi i32* [ %49, %56 ], [ %108, %107 ]
  %81 = phi i64 [ %50, %56 ], [ %101, %107 ]
  %82 = inttoptr i64 %79 to i32*
  %83 = load i32*, i32** %57, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %81
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %85, %28
  %87 = sext i32 %86 to i64
  %88 = load i32*, i32** %58, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %87
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %80, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = load i32*, i32** %59, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %87
  %96 = load i32, i32* %95, align 4
  %97 = mul nsw i32 %96, %93
  %98 = getelementptr inbounds i32, i32* %82, i64 %81
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  store i32 %100, i32* %92, align 4
  %101 = add nuw i64 %81, 1
  %102 = load i64, i64* %12, align 8
  %103 = load i64, i64* %14, align 8
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 2
  %106 = icmp ugt i64 %105, %101
  br i1 %106, label %107, label %109

107:                                              ; preds = %78
  %108 = load i32*, i32** %30, align 8
  br label %78

109:                                              ; preds = %78, %48
  %110 = load i32, i32* %5, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, i32* %1, i64 %111
  %113 = load i32, i32* %112, align 4
  %114 = load i64, i64* %22, align 8
  %115 = load i64, i64* %24, align 8
  %116 = sub i64 %114, %115
  %117 = lshr exact i64 %116, 2
  %118 = trunc i64 %117 to i32
  %119 = add i32 %118, -1
  %120 = icmp sgt i32 %119, -1
  %121 = inttoptr i64 %115 to i32*
  br i1 %120, label %122, label %141

122:                                              ; preds = %109
  %123 = load i32*, i32** %30, align 8
  %124 = sext i32 %119 to i64
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ %124, %122 ], [ %140, %125 ]
  %127 = phi i32 [ %119, %122 ], [ %138, %125 ]
  %128 = phi i32 [ 1, %122 ], [ %137, %125 ]
  %129 = phi i64 [ 0, %122 ], [ %134, %125 ]
  %130 = getelementptr inbounds i32, i32* %123, i64 %126
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %128
  %133 = sext i32 %132 to i64
  %134 = add i64 %129, %133
  %135 = getelementptr inbounds i32, i32* %121, i64 %126
  %136 = load i32, i32* %135, align 4
  %137 = mul nsw i32 %136, %128
  %138 = add nsw i32 %127, -1
  %139 = icmp sgt i32 %127, 0
  %140 = add nsw i64 %126, -1
  br i1 %139, label %125, label %141

141:                                              ; preds = %125, %109
  %142 = phi i64 [ 0, %109 ], [ %134, %125 ]
  %143 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 %142
  store i32 %113, i32* %145, align 4
  %146 = load i32, i32* %5, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %5, align 4
  %148 = load i32*, i32** %30, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %153, label %150

150:                                              ; preds = %141
  %151 = ptrtoint i32* %148 to i64
  store i64 %151, i64* %33, align 8
  %152 = bitcast i32* %148 to i8*
  call void @_ZdlPv(i8* %152) #8
  br label %153

153:                                              ; preds = %141, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  br label %286

154:                                              ; preds = %6
  %155 = shl nsw i32 %3, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7, i32 0, i32 0
  %158 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %158, i64 %156, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 %10
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %218

167:                                              ; preds = %154
  %168 = icmp sgt i32 %161, 0
  br i1 %168, label %169, label %286

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %171 = bitcast %"class.std::__1::vector"* %8 to i8*
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %173 = bitcast i32** %172 to i8**
  %174 = bitcast %"class.std::__1::vector"* %8 to i8**
  %175 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %176 = bitcast i32** %172 to i64*
  %177 = add nsw i32 %3, 1
  %178 = mul nsw i32 %161, %4
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %216, %169
  %181 = phi i32* [ %19, %169 ], [ %217, %216 ]
  %182 = phi i32 [ 0, %169 ], [ %214, %216 ]
  %183 = getelementptr inbounds i32, i32* %181, i64 %10
  store i32 %182, i32* %183, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 24, i1 false) #6
  %184 = load i64, i64* %12, align 8
  %185 = load i64, i64* %14, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = icmp eq i64 %186, 0
  br i1 %188, label %206, label %189

189:                                              ; preds = %180
  %190 = icmp ugt i64 %187, 4611686018427387903
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %192) #7
  unreachable

193:                                              ; preds = %189
  %194 = call i8* @_Znwm(i64 %186) #8
  %195 = bitcast i8* %194 to i32*
  store i8* %194, i8** %173, align 8
  store i8* %194, i8** %174, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 %187
  store i32* %196, i32** %175, align 8
  %197 = ptrtoint i8* %194 to i64
  %198 = icmp sgt i64 %186, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %193
  %200 = lshr exact i64 %186, 2
  %201 = inttoptr i64 %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %194, i8* align 4 %201, i64 %186, i1 false) #6
  %202 = getelementptr inbounds i32, i32* %195, i64 %200
  %203 = ptrtoint i32* %202 to i64
  br label %204

204:                                              ; preds = %199, %193
  %205 = phi i64 [ %203, %199 ], [ %197, %193 ]
  store i64 %205, i64* %176, align 8
  br label %206

206:                                              ; preds = %180, %204
  %207 = add nsw i32 %182, %178
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIiE8PopulateEPKiNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter"* %0, i32* %1, %"class.std::__1::vector"* nonnull %8, i32 %177, i32 %207, i32* %5)
  %208 = load i32*, i32** %179, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = ptrtoint i32* %208 to i64
  store i64 %211, i64* %176, align 8
  %212 = bitcast i32* %208 to i8*
  call void @_ZdlPv(i8* %212) #8
  br label %213

213:                                              ; preds = %206, %210
  %214 = add nuw nsw i32 %182, 1
  %215 = icmp eq i32 %214, %161
  br i1 %215, label %286, label %216

216:                                              ; preds = %213
  %217 = load i32*, i32** %170, align 8
  br label %180

218:                                              ; preds = %154
  %219 = sext i32 %4 to i64
  %220 = getelementptr inbounds i32, i32* %160, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = add nsw i32 %4, 1
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i32, i32* %160, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %221, %225
  br i1 %226, label %227, label %286

227:                                              ; preds = %218
  %228 = or i32 %155, 1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %158, i64 %229, i32 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %232 = bitcast %"class.std::__1::vector"* %9 to i8*
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %234 = bitcast i32** %233 to i8**
  %235 = bitcast %"class.std::__1::vector"* %9 to i8**
  %236 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %237 = bitcast i32** %233 to i64*
  %238 = add nsw i32 %3, 1
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %240 = sext i32 %221 to i64
  br label %241

241:                                              ; preds = %284, %227
  %242 = phi i32* [ %19, %227 ], [ %285, %284 ]
  %243 = phi i64 [ %240, %227 ], [ %278, %284 ]
  %244 = load i32*, i32** %230, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 %243
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds i32, i32* %242, i64 %10
  store i32 %246, i32* %247, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 0, i64 24, i1 false) #6
  %248 = load i64, i64* %12, align 8
  %249 = load i64, i64* %14, align 8
  %250 = sub i64 %248, %249
  %251 = ashr exact i64 %250, 2
  %252 = icmp eq i64 %250, 0
  br i1 %252, label %270, label %253

253:                                              ; preds = %241
  %254 = icmp ugt i64 %251, 4611686018427387903
  br i1 %254, label %255, label %257

255:                                              ; preds = %253
  %256 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %256) #7
  unreachable

257:                                              ; preds = %253
  %258 = call i8* @_Znwm(i64 %250) #8
  %259 = bitcast i8* %258 to i32*
  store i8* %258, i8** %234, align 8
  store i8* %258, i8** %235, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %251
  store i32* %260, i32** %236, align 8
  %261 = ptrtoint i8* %258 to i64
  %262 = icmp sgt i64 %250, 0
  br i1 %262, label %263, label %268

263:                                              ; preds = %257
  %264 = lshr exact i64 %250, 2
  %265 = inttoptr i64 %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %258, i8* align 4 %265, i64 %250, i1 false) #6
  %266 = getelementptr inbounds i32, i32* %259, i64 %264
  %267 = ptrtoint i32* %266 to i64
  br label %268

268:                                              ; preds = %263, %257
  %269 = phi i64 [ %267, %263 ], [ %261, %257 ]
  store i64 %269, i64* %237, align 8
  br label %270

270:                                              ; preds = %241, %268
  %271 = trunc i64 %243 to i32
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIiE8PopulateEPKiNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter"* %0, i32* %1, %"class.std::__1::vector"* nonnull %9, i32 %238, i32 %271, i32* %5)
  %272 = load i32*, i32** %239, align 8
  %273 = icmp eq i32* %272, null
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  %275 = ptrtoint i32* %272 to i64
  store i64 %275, i64* %237, align 8
  %276 = bitcast i32* %272 to i8*
  call void @_ZdlPv(i8* %276) #8
  br label %277

277:                                              ; preds = %270, %274
  %278 = add nsw i64 %243, 1
  %279 = load i32*, i32** %159, align 8
  %280 = getelementptr inbounds i32, i32* %279, i64 %223
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %281 to i64
  %283 = icmp slt i64 %278, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %277
  %285 = load i32*, i32** %231, align 8
  br label %241

286:                                              ; preds = %277, %213, %218, %167, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_(%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.1"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIaEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_) align 2 {
  %7 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %6
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #7
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #8
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %22, i64 %14
  %27 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i32** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i32* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #6
  %39 = getelementptr inbounds i32, i32* %22, i64 %37
  %40 = ptrtoint i32* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %6, %41
  %44 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1
  %45 = bitcast %"class.std::__1::vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #6
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %2 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %43
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #7
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #8
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = bitcast i32** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %46 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds i32, i32* %62, i64 %54
  %67 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %49, align 8
  %71 = bitcast i32** %63 to i64*
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint i32* %69 to i64
  %74 = sub i64 %70, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %60
  %77 = lshr exact i64 %74, 2
  %78 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %78, i64 %74, i1 false) #6
  %79 = getelementptr inbounds i32, i32* %62, i64 %77
  %80 = ptrtoint i32* %79 to i64
  br label %81

81:                                               ; preds = %76, %60
  %82 = phi i64 [ %80, %76 ], [ %72, %60 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %43, %81
  %84 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4
  %85 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  %88 = bitcast %"class.std::__1::vector.1"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false)
  %89 = load i64, i64* %87, align 8
  %90 = bitcast %"class.std::__1::vector"* %4 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 2
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %122, label %95

95:                                               ; preds = %83
  %96 = icmp ugt i64 %93, 4611686018427387903
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector"* %85 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #7
  unreachable

99:                                               ; preds = %95
  %100 = tail call i8* @_Znwm(i64 %92) #8
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 1
  %103 = bitcast i32** %102 to i8**
  store i8* %100, i8** %103, align 8
  %104 = bitcast %"class.std::__1::vector"* %85 to i8**
  store i8* %100, i8** %104, align 8
  %105 = getelementptr inbounds i32, i32* %101, i64 %93
  %106 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i32* %105, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i64, i64* %87, align 8
  %110 = bitcast i32** %102 to i64*
  %111 = ptrtoint i8* %100 to i64
  %112 = ptrtoint i32* %108 to i64
  %113 = sub i64 %109, %112
  %114 = icmp sgt i64 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %99
  %116 = lshr exact i64 %113, 2
  %117 = bitcast i32* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 4 %117, i64 %113, i1 false) #6
  %118 = getelementptr inbounds i32, i32* %101, i64 %116
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %115, %99
  %121 = phi i64 [ %119, %115 ], [ %111, %99 ]
  store i64 %121, i64* %110, align 8
  br label %122

122:                                              ; preds = %83, %120
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6
  %124 = bitcast %"class.std::__1::vector"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #6
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %5 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %160, label %133

133:                                              ; preds = %122
  %134 = icmp ugt i64 %131, 4611686018427387903
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector"* %123 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #7
  unreachable

137:                                              ; preds = %133
  %138 = tail call i8* @_Znwm(i64 %130) #8
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 1
  %141 = bitcast i32** %140 to i8**
  store i8* %138, i8** %141, align 8
  %142 = bitcast %"class.std::__1::vector"* %123 to i8**
  store i8* %138, i8** %142, align 8
  %143 = getelementptr inbounds i32, i32* %139, i64 %131
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %143, i32** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = load i64, i64* %126, align 8
  %148 = bitcast i32** %140 to i64*
  %149 = ptrtoint i8* %138 to i64
  %150 = ptrtoint i32* %146 to i64
  %151 = sub i64 %147, %150
  %152 = icmp sgt i64 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %137
  %154 = lshr exact i64 %151, 2
  %155 = bitcast i32* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 4 %155, i64 %151, i1 false) #6
  %156 = getelementptr inbounds i32, i32* %139, i64 %154
  %157 = ptrtoint i32* %156 to i64
  br label %158

158:                                              ; preds = %153, %137
  %159 = phi i64 [ %157, %153 ], [ %149, %137 ]
  store i64 %159, i64* %148, align 8
  br label %160

160:                                              ; preds = %122, %158
  %161 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7
  %162 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 2
  %163 = bitcast %"class.std::__1::vector.8"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 48, i1 false)
  store i64 1, i64* %162, align 8
  %164 = load i64, i64* %9, align 8
  %165 = load i64, i64* %11, align 8
  %166 = sub i64 %164, %165
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %177, label %168

168:                                              ; preds = %160
  %169 = ashr exact i64 %166, 2
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %44, i64 %169) #6
  %170 = load i64, i64* %9, align 8
  %171 = load i64, i64* %11, align 8
  %172 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::vector.1"* %84 to i64*
  %176 = load i64, i64* %175, align 8
  br label %177

177:                                              ; preds = %160, %168
  %178 = phi i64 [ %176, %168 ], [ 0, %160 ]
  %179 = phi i64 [ %174, %168 ], [ 0, %160 ]
  %180 = phi i64 [ %171, %168 ], [ %165, %160 ]
  %181 = phi i64 [ %170, %168 ], [ %164, %160 ]
  %182 = sub i64 %181, %180
  %183 = ashr exact i64 %182, 2
  %184 = load i64, i64* %126, align 8
  %185 = load i64, i64* %128, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = add nsw i64 %187, %183
  %189 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 1
  %190 = sub i64 %179, %178
  %191 = ashr exact i64 %190, 2
  %192 = icmp ugt i64 %188, %191
  %193 = inttoptr i64 %178 to i32*
  br i1 %192, label %194, label %196

194:                                              ; preds = %177
  %195 = sub nsw i64 %188, %191
  tail call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %84, i64 %195) #6
  br label %200

196:                                              ; preds = %177
  %197 = icmp ult i64 %188, %191
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = getelementptr inbounds i32, i32* %193, i64 %188
  store i32* %199, i32** %189, align 8
  br label %200

200:                                              ; preds = %194, %196, %198
  %201 = load i64, i64* %9, align 8
  %202 = load i64, i64* %11, align 8
  %203 = icmp eq i64 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %228

211:                                              ; preds = %275, %200
  %212 = phi i64 [ %201, %200 ], [ %279, %275 ]
  %213 = phi i64 [ %201, %200 ], [ %278, %275 ]
  %214 = load i64, i64* %126, align 8
  %215 = load i64, i64* %128, align 8
  %216 = icmp eq i64 %214, %215
  br i1 %216, label %283, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %219 = sub i64 %213, %212
  %220 = ashr exact i64 %219, 2
  %221 = load i32*, i32** %218, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 %220
  store i32 0, i32* %222, align 4
  %223 = load i64, i64* %126, align 8
  %224 = load i64, i64* %128, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 2
  %227 = icmp ugt i64 %226, 1
  br i1 %227, label %284, label %283

228:                                              ; preds = %204, %275
  %229 = phi i64 [ 0, %204 ], [ %277, %275 ]
  %230 = phi i32 [ 0, %204 ], [ %276, %275 ]
  %231 = load i32*, i32** %205, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 %229
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32*, i32** %206, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  %237 = load i32, i32* %236, align 4
  %238 = load i32*, i32** %207, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %229
  store i32 %237, i32* %239, align 4
  %240 = load i32*, i32** %208, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 %229
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = load i64, i64* %162, align 8
  %245 = mul i64 %244, %243
  store i64 %245, i64* %162, align 8
  %246 = sext i32 %230 to i64
  %247 = load i64, i64* %126, align 8
  %248 = load i64, i64* %128, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  %251 = icmp ugt i64 %250, %246
  br i1 %251, label %252, label %269

252:                                              ; preds = %228
  %253 = inttoptr i64 %248 to i32*
  %254 = getelementptr inbounds i32, i32* %253, i64 %246
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = icmp eq i64 %229, %256
  br i1 %257, label %258, label %269

258:                                              ; preds = %252
  %259 = load i32*, i32** %208, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %229
  %261 = load i32, i32* %260, align 4
  %262 = load i32*, i32** %210, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %246
  %264 = load i32, i32* %263, align 4
  %265 = sdiv i32 %261, %264
  %266 = load i32*, i32** %209, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %229
  store i32 %265, i32* %267, align 4
  %268 = add nsw i32 %230, 1
  br label %275

269:                                              ; preds = %252, %228
  %270 = load i32*, i32** %208, align 8
  %271 = getelementptr inbounds i32, i32* %270, i64 %229
  %272 = load i32, i32* %271, align 4
  %273 = load i32*, i32** %209, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %229
  store i32 %272, i32* %274, align 4
  br label %275

275:                                              ; preds = %258, %269
  %276 = phi i32 [ %268, %258 ], [ %230, %269 ]
  %277 = add nuw i64 %229, 1
  %278 = load i64, i64* %9, align 8
  %279 = load i64, i64* %11, align 8
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 2
  %282 = icmp ugt i64 %281, %277
  br i1 %282, label %228, label %211

283:                                              ; preds = %284, %217, %211
  ret void

284:                                              ; preds = %217, %284
  %285 = phi i64 [ %293, %284 ], [ 1, %217 ]
  %286 = load i64, i64* %9, align 8
  %287 = load i64, i64* %11, align 8
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 2
  %290 = add nsw i64 %289, %285
  %291 = load i32*, i32** %218, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 %290
  store i32 0, i32* %292, align 4
  %293 = add i64 %285, 1
  %294 = load i64, i64* %126, align 8
  %295 = load i64, i64* %128, align 8
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 2
  %298 = icmp ugt i64 %297, %293
  br i1 %298, label %284, label %283
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"* dereferenceable(24), %struct.TfLiteSparsity* dereferenceable(32)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIaEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity) align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca [1 x i32], align 4
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #6
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 4611686018427387903
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #7
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #8
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i32** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds i32, i32* %24, i64 %16
  %29 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %28, i32** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast i32** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #6
  %41 = getelementptr inbounds i32, i32* %24, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %3, %43
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3
  %49 = bitcast %"class.std::__1::vector"* %48 to i8*
  %50 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6
  %53 = bitcast %"class.std::__1::vector"* %52 to i8*
  %54 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 2
  %56 = bitcast %"class.std::__1::vector"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 144, i1 false)
  store i64 1, i64* %55, align 8
  %57 = load i64, i64* %11, align 8
  %58 = load i64, i64* %13, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %225

60:                                               ; preds = %225, %45
  %61 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6
  %62 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 0
  %63 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 24, i1 false) #6, !alias.scope !16
  %65 = icmp eq %struct.TfLiteIntArray* %63, null
  br i1 %65, label %84, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %66
  %71 = sext i32 %68 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %4, i64 %71) #6
  %72 = load i32, i32* %67, align 4, !noalias !16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70, %74
  %75 = phi i64 [ %80, %74 ], [ 0, %70 ]
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4, !noalias !16
  %78 = load i32*, i32** %64, align 16, !alias.scope !16
  %79 = getelementptr inbounds i32, i32* %78, i64 %75
  store i32 %77, i32* %79, align 4
  %80 = add nuw i64 %75, 1
  %81 = load i32, i32* %67, align 4, !noalias !16
  %82 = sext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %60, %66, %70
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint i32* %86 to i64
  %90 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* %92) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #6
  br label %93

93:                                               ; preds = %84, %88
  %94 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 16
  %96 = bitcast %"class.std::__1::vector"* %48 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 1
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6
  %104 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #6
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 0, i64 24, i1 false) #6, !alias.scope !19
  %106 = icmp eq %struct.TfLiteIntArray* %103, null
  br i1 %106, label %125, label %107

107:                                              ; preds = %93
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %109 = load i32, i32* %108, align 4, !noalias !19
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %107
  %112 = sext i32 %109 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %112) #6
  %113 = load i32, i32* %108, align 4, !noalias !19
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %111, %115
  %116 = phi i64 [ %121, %115 ], [ 0, %111 ]
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 %116
  %118 = load i32, i32* %117, align 4, !noalias !19
  %119 = load i32*, i32** %105, align 16, !alias.scope !19
  %120 = getelementptr inbounds i32, i32* %119, i64 %116
  store i32 %118, i32* %120, align 4
  %121 = add nuw i64 %116, 1
  %122 = load i32, i32* %108, align 4, !noalias !19
  %123 = sext i32 %122 to i64
  %124 = icmp ult i64 %121, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %93, %107, %111
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  call void @_ZdlPv(i8* %133) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #6
  br label %134

134:                                              ; preds = %125, %129
  %135 = bitcast %"class.std::__1::vector"* %52 to i64*
  %136 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 16
  %138 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  %140 = bitcast %"class.std::__1::vector"* %52 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 16
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.1"* %50 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sext i32 %147 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #6
  %154 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %155 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 1
  %156 = sub i64 %150, %152
  %157 = ashr exact i64 %156, 2
  %158 = icmp ult i64 %157, %153
  %159 = inttoptr i64 %152 to i32*
  br i1 %158, label %160, label %162

160:                                              ; preds = %134
  %161 = sub nsw i64 %153, %157
  call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %50, i64 %161) #6
  br label %166

162:                                              ; preds = %134
  %163 = icmp ugt i64 %157, %153
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = getelementptr inbounds i32, i32* %159, i64 %153
  store i32* %165, i32** %155, align 8
  br label %166

166:                                              ; preds = %160, %162, %164
  %167 = load i32, i32* %154, align 8
  %168 = shl nsw i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7, i32 0, i32 1
  %171 = bitcast %"class.std::__1::vector"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.8"* %54 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = sdiv exact i64 %175, 24
  %177 = icmp ult i64 %176, %169
  %178 = inttoptr i64 %174 to %"class.std::__1::vector"*
  %179 = inttoptr i64 %172 to %"class.std::__1::vector"*
  br i1 %177, label %180, label %182

180:                                              ; preds = %166
  %181 = sub nsw i64 %169, %176
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %54, i64 %181) #6
  br label %201

182:                                              ; preds = %166
  %183 = icmp ugt i64 %176, %169
  br i1 %183, label %184, label %201

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %178, i64 %169
  %186 = icmp eq %"class.std::__1::vector"* %185, %179
  br i1 %186, label %200, label %187

187:                                              ; preds = %184, %198
  %188 = phi %"class.std::__1::vector"* [ %189, %198 ], [ %179, %184 ]
  %189 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %198, label %193

193:                                              ; preds = %187
  %194 = ptrtoint i32* %191 to i64
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1, i32 0, i32 1
  %196 = bitcast i32** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast i32* %191 to i8*
  call void @_ZdlPv(i8* %197) #8
  br label %198

198:                                              ; preds = %193, %187
  %199 = icmp eq %"class.std::__1::vector"* %189, %185
  br i1 %199, label %200, label %187

200:                                              ; preds = %198, %184
  store %"class.std::__1::vector"* %185, %"class.std::__1::vector"** %170, align 8
  br label %201

201:                                              ; preds = %180, %182, %200
  %202 = load i32, i32* %154, align 8
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %240

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %50, i64 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::vector"* %7 to i8*
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %54, i64 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::vector"* %7 to i64*
  %211 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  %213 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast i32** %213 to i64*
  %215 = bitcast %"class.std::__1::vector"* %8 to i8*
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::vector"* %8 to i64*
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %219 = bitcast i32** %218 to i64*
  %220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %221 = bitcast i32** %220 to i64*
  %222 = bitcast [1 x i32]* %6 to i8*
  %223 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %224 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 1
  br label %291

225:                                              ; preds = %45, %225
  %226 = phi i64 [ %233, %225 ], [ 1, %45 ]
  %227 = phi i64 [ %236, %225 ], [ %58, %45 ]
  %228 = phi i64 [ %234, %225 ], [ 0, %45 ]
  %229 = inttoptr i64 %227 to i32*
  %230 = getelementptr inbounds i32, i32* %229, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %226, %232
  store i64 %233, i64* %55, align 8
  %234 = add nuw i64 %228, 1
  %235 = load i64, i64* %11, align 8
  %236 = load i64, i64* %13, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 2
  %239 = icmp ugt i64 %238, %234
  br i1 %239, label %225, label %60

240:                                              ; preds = %398, %201
  %241 = load i64, i64* %11, align 8
  %242 = load i64, i64* %13, align 8
  %243 = sub i64 %241, %242
  %244 = lshr exact i64 %243, 2
  %245 = trunc i64 %244 to i32
  %246 = shl i64 %243, 30
  %247 = ashr exact i64 %246, 32
  %248 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1, i32 0, i32 1
  %249 = bitcast i32** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.std::__1::vector"* %46 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %250, %252
  %254 = ashr exact i64 %253, 2
  %255 = icmp ugt i64 %247, %254
  %256 = inttoptr i64 %252 to i32*
  br i1 %255, label %257, label %259

257:                                              ; preds = %240
  %258 = sub nsw i64 %247, %254
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %46, i64 %258) #6
  br label %263

259:                                              ; preds = %240
  %260 = icmp ult i64 %247, %254
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = getelementptr inbounds i32, i32* %256, i64 %247
  store i32* %262, i32** %248, align 8
  br label %263

263:                                              ; preds = %257, %259, %261
  %264 = load i64, i64* %139, align 8
  %265 = load i64, i64* %135, align 8
  %266 = sub i64 %264, %265
  %267 = ashr exact i64 %266, 2
  %268 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 1
  %269 = bitcast i32** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector"* %51 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = ashr exact i64 %273, 2
  %275 = icmp ugt i64 %267, %274
  %276 = inttoptr i64 %272 to i32*
  br i1 %275, label %277, label %279

277:                                              ; preds = %263
  %278 = sub nsw i64 %267, %274
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %51, i64 %278) #6
  br label %283

279:                                              ; preds = %263
  %280 = icmp ult i64 %267, %274
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = getelementptr inbounds i32, i32* %276, i64 %267
  store i32* %282, i32** %268, align 8
  br label %283

283:                                              ; preds = %277, %279, %281
  %284 = icmp sgt i32 %245, 0
  br i1 %284, label %285, label %403

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %289 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %51, i64 0, i32 0, i32 0
  %290 = and i64 %244, 4294967295
  br label %404

291:                                              ; preds = %204, %398
  %292 = phi i64 [ 0, %204 ], [ %399, %398 ]
  %293 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %294 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %293, i64 %292, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = load i32*, i32** %206, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %292
  store i32 %295, i32* %297, align 4
  %298 = load i32*, i32** %206, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 %292
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #6
  %303 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %304 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %303, i64 %292, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %223, align 4
  %306 = shl nuw nsw i64 %292, 1
  %307 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %308 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %307, i64 %306
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %308, i32* nonnull %223, i32* %224) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #6
  br label %398

309:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #6
  %310 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %311 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %310, i64 %292, i32 2
  %312 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %311, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 0, i64 24, i1 false) #6, !alias.scope !22
  %313 = icmp eq %struct.TfLiteIntArray* %312, null
  br i1 %313, label %332, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !22
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %332, label %318

318:                                              ; preds = %314
  %319 = sext i32 %316 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %319) #6
  %320 = load i32, i32* %315, align 4, !noalias !22
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %332, label %322

322:                                              ; preds = %318, %322
  %323 = phi i64 [ %328, %322 ], [ 0, %318 ]
  %324 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 1, i64 %323
  %325 = load i32, i32* %324, align 4, !noalias !22
  %326 = load i32*, i32** %208, align 8, !alias.scope !22
  %327 = getelementptr inbounds i32, i32* %326, i64 %323
  store i32 %325, i32* %327, align 4
  %328 = add nuw i64 %323, 1
  %329 = load i32, i32* %315, align 4, !noalias !22
  %330 = sext i32 %329 to i64
  %331 = icmp ult i64 %328, %330
  br i1 %331, label %322, label %332

332:                                              ; preds = %322, %309, %314, %318
  %333 = shl nuw nsw i64 %292, 1
  %334 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %335 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333
  %336 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %335, i64 0, i32 0, i32 0
  %337 = load i32*, i32** %336, align 8
  %338 = icmp eq i32* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %332
  %340 = ptrtoint i32* %337 to i64
  %341 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %342 = bitcast i32** %341 to i64*
  store i64 %340, i64* %342, align 8
  %343 = bitcast i32* %337 to i8*
  call void @_ZdlPv(i8* %343) #8
  %344 = bitcast %"class.std::__1::vector"* %335 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %344, i8 0, i64 24, i1 false) #6
  br label %345

345:                                              ; preds = %332, %339
  %346 = load i64, i64* %210, align 8
  %347 = bitcast %"class.std::__1::vector"* %335 to i64*
  store i64 %346, i64* %347, align 8
  %348 = load i64, i64* %212, align 8
  %349 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %350 = bitcast i32** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = load i64, i64* %214, align 8
  %352 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 2, i32 0, i32 0
  %353 = bitcast i32** %352 to i64*
  store i64 %351, i64* %353, align 8
  %354 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #6
  %355 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %354, i64 %292, i32 3
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 24, i1 false) #6, !alias.scope !25
  %357 = icmp eq %struct.TfLiteIntArray* %356, null
  br i1 %357, label %376, label %358

358:                                              ; preds = %345
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %360 = load i32, i32* %359, align 4, !noalias !25
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %376, label %362

362:                                              ; preds = %358
  %363 = sext i32 %360 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %8, i64 %363) #6
  %364 = load i32, i32* %359, align 4, !noalias !25
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %376, label %366

366:                                              ; preds = %362, %366
  %367 = phi i64 [ %372, %366 ], [ 0, %362 ]
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 %367
  %369 = load i32, i32* %368, align 4, !noalias !25
  %370 = load i32*, i32** %216, align 8, !alias.scope !25
  %371 = getelementptr inbounds i32, i32* %370, i64 %367
  store i32 %369, i32* %371, align 4
  %372 = add nuw i64 %367, 1
  %373 = load i32, i32* %359, align 4, !noalias !25
  %374 = sext i32 %373 to i64
  %375 = icmp ult i64 %372, %374
  br i1 %375, label %366, label %376

376:                                              ; preds = %366, %345, %358, %362
  %377 = or i64 %333, 1
  %378 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %379 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377
  %380 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %379, i64 0, i32 0, i32 0
  %381 = load i32*, i32** %380, align 8
  %382 = icmp eq i32* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %376
  %384 = ptrtoint i32* %381 to i64
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %386 = bitcast i32** %385 to i64*
  store i64 %384, i64* %386, align 8
  %387 = bitcast i32* %381 to i8*
  call void @_ZdlPv(i8* %387) #8
  %388 = bitcast %"class.std::__1::vector"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 24, i1 false) #6
  br label %389

389:                                              ; preds = %383, %376
  %390 = load i64, i64* %217, align 8
  %391 = bitcast %"class.std::__1::vector"* %379 to i64*
  store i64 %390, i64* %391, align 8
  %392 = load i64, i64* %219, align 8
  %393 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %394 = bitcast i32** %393 to i64*
  store i64 %392, i64* %394, align 8
  %395 = load i64, i64* %221, align 8
  %396 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 2, i32 0, i32 0
  %397 = bitcast i32** %396 to i64*
  store i64 %395, i64* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #6
  br label %398

398:                                              ; preds = %302, %389
  %399 = add nuw nsw i64 %292, 1
  %400 = load i32, i32* %154, align 8
  %401 = sext i32 %400 to i64
  %402 = icmp slt i64 %399, %401
  br i1 %402, label %291, label %240

403:                                              ; preds = %447, %283
  ret void

404:                                              ; preds = %447, %285
  %405 = phi i64 [ 0, %285 ], [ %449, %447 ]
  %406 = phi i32 [ 0, %285 ], [ %448, %447 ]
  %407 = sext i32 %406 to i64
  %408 = load i64, i64* %139, align 8
  %409 = load i64, i64* %135, align 8
  %410 = sub i64 %408, %409
  %411 = ashr exact i64 %410, 2
  %412 = icmp ugt i64 %411, %407
  br i1 %412, label %413, label %441

413:                                              ; preds = %404
  %414 = inttoptr i64 %409 to i32*
  %415 = getelementptr inbounds i32, i32* %414, i64 %407
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = icmp eq i64 %405, %417
  br i1 %418, label %419, label %441

419:                                              ; preds = %413
  %420 = add nsw i32 %406, %245
  %421 = sext i32 %420 to i64
  %422 = load i32*, i32** %85, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 %421
  %424 = load i32, i32* %423, align 4
  %425 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %426 = sext i32 %424 to i64
  %427 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %425, i64 %426, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = load i32*, i32** %289, align 8
  %430 = getelementptr inbounds i32, i32* %429, i64 %407
  store i32 %428, i32* %430, align 4
  %431 = load i32*, i32** %286, align 8
  %432 = getelementptr inbounds i32, i32* %431, i64 %405
  %433 = load i32, i32* %432, align 4
  %434 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %435 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %434, i64 %426, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sdiv i32 %433, %436
  %438 = load i32*, i32** %287, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %405
  store i32 %437, i32* %439, align 4
  %440 = add nsw i32 %406, 1
  br label %447

441:                                              ; preds = %413, %404
  %442 = load i32*, i32** %286, align 8
  %443 = getelementptr inbounds i32, i32* %442, i64 %405
  %444 = load i32, i32* %443, align 4
  %445 = load i32*, i32** %287, align 8
  %446 = getelementptr inbounds i32, i32* %445, i64 %405
  store i32 %444, i32* %446, align 4
  br label %447

447:                                              ; preds = %419, %441
  %448 = phi i32 [ %440, %419 ], [ %406, %441 ]
  %449 = add nuw nsw i64 %405, 1
  %450 = icmp eq i64 %449, %290
  br i1 %450, label %403, label %404
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaE7GetDataEv(%"class.std::__1::vector.23"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter.22"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %1, i64 0, i32 8
  %4 = bitcast %"class.std::__1::vector.23"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %1, i64 0, i32 8, i32 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.23"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %9 to i8*
  br i1 %11, label %25, label %13

13:                                               ; preds = %2
  %14 = icmp slt i64 %10, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #7
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #8
  %19 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 %10
  %22 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = bitcast i8** %19 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %12, i64 %10, i1 false) #6
  %24 = ptrtoint i8* %21 to i64
  store i64 %24, i64* %23, align 8
  br label %25

25:                                               ; preds = %2, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaE14GetDimMetadataEv(%"class.std::__1::vector.8"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter.22"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector.8"* %0, %"class.std::__1::vector.8"* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIaE13DenseToSparseEPKa(%"class.tflite::optimize::sparsity::FormatConverter.22"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector.15", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 2
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, %19
  %30 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = sext i32 %29 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #6
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %2
  %37 = icmp slt i32 %29, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %39) #7
  unreachable

40:                                               ; preds = %36
  %41 = shl nsw i64 %34, 2
  %42 = tail call i8* @_Znwm(i64 %41) #8
  %43 = bitcast i8* %42 to i32*
  %44 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds i32, i32* %43, i64 %34
  store i32* %45, i32** %33, align 8
  %46 = bitcast i32** %32 to i64*
  %47 = ptrtoint i8* %42 to i64
  %48 = add nsw i64 %34, -1
  %49 = getelementptr i32, i32* %43, i64 %48
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 4, %47
  %52 = add i64 %51, %50
  %53 = and i64 %52, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 0, i64 %53, i1 false) #6
  %54 = ptrtoint i32* %45 to i64
  store i64 %54, i64* %46, align 8
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 0
  %56 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = shl i64 %17, 30
  %58 = ashr exact i64 %57, 32
  %59 = zext i32 %29 to i64
  %60 = and i64 %59, 1
  %61 = icmp eq i32 %29, 1
  br i1 %61, label %64, label %62

62:                                               ; preds = %40
  %63 = sub nsw i64 %59, %60
  br label %144

64:                                               ; preds = %1281, %40
  %65 = phi i64 [ 0, %40 ], [ %1289, %1281 ]
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %64
  %68 = icmp slt i64 %65, %58
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = sub nsw i64 %65, %18
  %71 = shl i64 %70, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %69, %67
  %74 = phi i32** [ %55, %69 ], [ %56, %67 ]
  %75 = phi i64 [ %72, %69 ], [ %65, %67 ]
  %76 = load i32*, i32** %74, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %75
  %78 = load i32, i32* %77, align 4
  %79 = load i32*, i32** %31, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %65
  store i32 %78, i32* %80, align 4
  br label %81

81:                                               ; preds = %73, %64, %2
  %82 = phi i1 [ false, %2 ], [ true, %64 ], [ true, %73 ]
  %83 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = shl i64 %17, 30
  %88 = ashr exact i64 %87, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #6
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = bitcast i32** %85 to i64*
  br label %111

92:                                               ; preds = %81
  %93 = icmp ugt i64 %88, 4611686018427387903
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %95) #7
  unreachable

96:                                               ; preds = %92
  %97 = ashr exact i64 %87, 30
  %98 = tail call i8* @_Znwm(i64 %97) #8
  %99 = bitcast i8* %98 to i32*
  %100 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %98, i8** %100, align 8
  %101 = getelementptr inbounds i32, i32* %99, i64 %88
  store i32* %101, i32** %86, align 8
  %102 = bitcast i32** %85 to i64*
  %103 = ptrtoint i8* %98 to i64
  %104 = add nsw i64 %88, -1
  %105 = getelementptr i32, i32* %99, i64 %104
  %106 = ptrtoint i32* %105 to i64
  %107 = sub i64 4, %103
  %108 = add i64 %107, %106
  %109 = and i64 %108, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 0, i64 %109, i1 false) #6
  %110 = ptrtoint i32* %101 to i64
  store i64 %110, i64* %102, align 8
  br label %111

111:                                              ; preds = %90, %96
  %112 = phi i64* [ %91, %90 ], [ %102, %96 ]
  %113 = phi i64 [ 0, %90 ], [ %103, %96 ]
  %114 = phi i64 [ 0, %90 ], [ %110, %96 ]
  %115 = sub i64 %114, %113
  %116 = ashr exact i64 %115, 2
  %117 = add nsw i64 %116, -1
  %118 = inttoptr i64 %113 to i32*
  %119 = getelementptr inbounds i32, i32* %118, i64 %117
  store i32 1, i32* %119, align 4
  %120 = add i32 %19, -1
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %162

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 0
  %124 = sext i32 %120 to i64
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %122
  %128 = load i32*, i32** %84, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %124
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %123, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 %124
  %133 = load i32, i32* %132, align 4
  %134 = mul nsw i32 %133, %130
  %135 = shl i64 %17, 30
  %136 = add i64 %135, -8589934592
  %137 = ashr exact i64 %136, 32
  %138 = getelementptr inbounds i32, i32* %128, i64 %137
  store i32 %134, i32* %138, align 4
  %139 = add nsw i64 %124, -1
  br label %140

140:                                              ; preds = %122, %127
  %141 = phi i64 [ %124, %122 ], [ %139, %127 ]
  %142 = phi i64 [ %18, %122 ], [ %124, %127 ]
  %143 = icmp eq i32 %120, 1
  br i1 %143, label %162, label %201

144:                                              ; preds = %1281, %62
  %145 = phi i64 [ 0, %62 ], [ %1289, %1281 ]
  %146 = phi i64 [ %63, %62 ], [ %1290, %1281 ]
  %147 = icmp slt i64 %145, %58
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = sub nsw i64 %145, %18
  %150 = shl i64 %149, 32
  %151 = ashr exact i64 %150, 32
  br label %152

152:                                              ; preds = %144, %148
  %153 = phi i32** [ %55, %148 ], [ %56, %144 ]
  %154 = phi i64 [ %151, %148 ], [ %145, %144 ]
  %155 = load i32*, i32** %153, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %31, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %145
  store i32 %157, i32* %159, align 4
  %160 = or i64 %145, 1
  %161 = icmp slt i64 %160, %58
  br i1 %161, label %1281, label %1277

162:                                              ; preds = %140, %201, %111
  %163 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #6
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #6
  br i1 %35, label %186, label %167

167:                                              ; preds = %162
  %168 = icmp slt i32 %29, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %170) #7
  unreachable

171:                                              ; preds = %167
  %172 = shl nsw i64 %34, 2
  %173 = tail call i8* @_Znwm(i64 %172) #8
  %174 = bitcast i8* %173 to i32*
  %175 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %173, i8** %175, align 8
  %176 = getelementptr inbounds i32, i32* %174, i64 %34
  store i32* %176, i32** %166, align 8
  %177 = bitcast i32** %165 to i64*
  %178 = ptrtoint i8* %173 to i64
  %179 = add nsw i64 %34, -1
  %180 = getelementptr i32, i32* %174, i64 %179
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 4, %178
  %183 = add i64 %182, %181
  %184 = and i64 %183, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %173, i8 0, i64 %184, i1 false) #6
  %185 = ptrtoint i32* %176 to i64
  store i64 %185, i64* %177, align 8
  br label %186

186:                                              ; preds = %162, %171
  %187 = phi i32* [ null, %162 ], [ %174, %171 ]
  %188 = icmp sgt i32 %19, 0
  br i1 %188, label %189, label %243

189:                                              ; preds = %186
  %190 = and i64 %18, 4294967295
  %191 = load i32*, i32** %84, align 8
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %187, align 4
  %193 = icmp eq i64 %190, 1
  br i1 %193, label %243, label %194

194:                                              ; preds = %189
  %195 = add nsw i64 %190, -1
  %196 = add nsw i64 %190, -2
  %197 = and i64 %195, 3
  %198 = icmp ult i64 %196, 3
  br i1 %198, label %229, label %199

199:                                              ; preds = %194
  %200 = sub nsw i64 %195, %197
  br label %251

201:                                              ; preds = %140, %201
  %202 = phi i64 [ %227, %201 ], [ %141, %140 ]
  %203 = phi i64 [ %215, %201 ], [ %142, %140 ]
  %204 = load i32*, i32** %84, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %202
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %123, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %202
  %209 = load i32, i32* %208, align 4
  %210 = mul nsw i32 %209, %206
  %211 = shl i64 %203, 32
  %212 = add i64 %211, -8589934592
  %213 = ashr exact i64 %212, 32
  %214 = getelementptr inbounds i32, i32* %204, i64 %213
  store i32 %210, i32* %214, align 4
  %215 = add nsw i64 %202, -1
  %216 = load i32*, i32** %84, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %215
  %218 = load i32, i32* %217, align 4
  %219 = load i32*, i32** %123, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 %215
  %221 = load i32, i32* %220, align 4
  %222 = mul nsw i32 %221, %218
  %223 = shl i64 %202, 32
  %224 = add i64 %223, -8589934592
  %225 = ashr exact i64 %224, 32
  %226 = getelementptr inbounds i32, i32* %216, i64 %225
  store i32 %222, i32* %226, align 4
  %227 = add nsw i64 %202, -2
  %228 = icmp sgt i64 %227, 0
  br i1 %228, label %201, label %162

229:                                              ; preds = %251, %194
  %230 = phi i64 [ 1, %194 ], [ %277, %251 ]
  %231 = icmp eq i64 %197, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %240, %232 ], [ %230, %229 ]
  %234 = phi i64 [ %241, %232 ], [ %197, %229 ]
  %235 = load i32*, i32** %164, align 8
  %236 = load i32*, i32** %84, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 %233
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds i32, i32* %235, i64 %233
  store i32 %238, i32* %239, align 4
  %240 = add nuw nsw i64 %233, 1
  %241 = add i64 %234, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %232, !llvm.loop !28

243:                                              ; preds = %229, %232, %189, %186
  %244 = icmp sgt i32 %28, 0
  br i1 %244, label %245, label %280

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 0
  %248 = shl i64 %17, 30
  %249 = ashr exact i64 %248, 32
  %250 = and i64 %27, 4294967295
  br label %322

251:                                              ; preds = %251, %199
  %252 = phi i64 [ 1, %199 ], [ %277, %251 ]
  %253 = phi i64 [ %200, %199 ], [ %278, %251 ]
  %254 = load i32*, i32** %164, align 8
  %255 = load i32*, i32** %84, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 %252
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %254, i64 %252
  store i32 %257, i32* %258, align 4
  %259 = add nuw nsw i64 %252, 1
  %260 = load i32*, i32** %164, align 8
  %261 = load i32*, i32** %84, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 %259
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %260, i64 %259
  store i32 %263, i32* %264, align 4
  %265 = add nuw nsw i64 %252, 2
  %266 = load i32*, i32** %164, align 8
  %267 = load i32*, i32** %84, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %265
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %266, i64 %265
  store i32 %269, i32* %270, align 4
  %271 = add nuw nsw i64 %252, 3
  %272 = load i32*, i32** %164, align 8
  %273 = load i32*, i32** %84, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %271
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds i32, i32* %272, i64 %271
  store i32 %275, i32* %276, align 4
  %277 = add nuw nsw i64 %252, 4
  %278 = add i64 %253, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %229, label %251

280:                                              ; preds = %322, %243
  %281 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #6
  %282 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %284 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 24, i1 false) #6
  br i1 %35, label %304, label %285

285:                                              ; preds = %280
  %286 = icmp slt i32 %29, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %285
  %288 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %288) #7
  unreachable

289:                                              ; preds = %285
  %290 = shl nsw i64 %34, 2
  %291 = tail call i8* @_Znwm(i64 %290) #8
  %292 = bitcast i8* %291 to i32*
  %293 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %291, i8** %293, align 8
  %294 = getelementptr inbounds i32, i32* %292, i64 %34
  store i32* %294, i32** %284, align 8
  %295 = bitcast i32** %283 to i64*
  %296 = ptrtoint i8* %291 to i64
  %297 = add nsw i64 %34, -1
  %298 = getelementptr i32, i32* %292, i64 %297
  %299 = ptrtoint i32* %298 to i64
  %300 = sub i64 4, %296
  %301 = add i64 %300, %299
  %302 = and i64 %301, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %291, i8 0, i64 %302, i1 false) #6
  %303 = ptrtoint i32* %294 to i64
  store i64 %303, i64* %295, align 8
  br label %304

304:                                              ; preds = %280, %289
  %305 = phi i32* [ null, %280 ], [ %292, %289 ]
  br i1 %82, label %306, label %356

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32*, i32** %164, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 %310
  %313 = load i32, i32* %312, align 4
  store i32 %313, i32* %305, align 4
  %314 = icmp eq i32 %29, 1
  br i1 %314, label %356, label %315

315:                                              ; preds = %306
  %316 = zext i32 %29 to i64
  %317 = add nsw i64 %316, -1
  %318 = and i64 %317, 1
  %319 = icmp eq i32 %29, 2
  br i1 %319, label %343, label %320

320:                                              ; preds = %315
  %321 = sub nsw i64 %317, %318
  br label %459

322:                                              ; preds = %322, %245
  %323 = phi i64 [ 0, %245 ], [ %341, %322 ]
  %324 = load i32*, i32** %246, align 8
  %325 = getelementptr inbounds i32, i32* %324, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = load i32*, i32** %84, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %327
  %330 = load i32, i32* %329, align 4
  %331 = add nsw i64 %323, %249
  %332 = load i32*, i32** %164, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %331
  store i32 %330, i32* %333, align 4
  %334 = load i32*, i32** %247, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 %323
  %336 = load i32, i32* %335, align 4
  %337 = load i32*, i32** %164, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 %327
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %336
  store i32 %340, i32* %338, align 4
  %341 = add nuw nsw i64 %323, 1
  %342 = icmp eq i64 %341, %250
  br i1 %342, label %280, label %322

343:                                              ; preds = %459, %315
  %344 = phi i64 [ 1, %315 ], [ %481, %459 ]
  %345 = icmp eq i64 %318, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343
  %347 = load i32*, i32** %282, align 8
  %348 = load i32*, i32** %307, align 8
  %349 = getelementptr inbounds i32, i32* %348, i64 %344
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32*, i32** %164, align 8
  %353 = getelementptr inbounds i32, i32* %352, i64 %351
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds i32, i32* %347, i64 %344
  store i32 %354, i32* %355, align 4
  br label %356

356:                                              ; preds = %346, %343, %306, %304
  %357 = bitcast %"class.std::__1::vector.15"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %357) #6
  %358 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 0
  %359 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 1
  %360 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 0, i64 24, i1 false) #6
  br i1 %35, label %388, label %361

361:                                              ; preds = %356
  %362 = icmp slt i32 %29, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %361
  %364 = bitcast %"class.std::__1::vector.15"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %364) #7
  unreachable

365:                                              ; preds = %361
  %366 = add nsw i64 %34, -1
  %367 = lshr i64 %366, 6
  %368 = add nuw nsw i64 %367, 1
  %369 = shl nuw nsw i64 %368, 3
  %370 = tail call i8* @_Znwm(i64 %369) #8
  %371 = bitcast %"class.std::__1::vector.15"* %7 to i8**
  store i8* %370, i8** %371, align 8
  store i64 %368, i64* %360, align 8
  store i64 %34, i64* %359, align 8
  %372 = icmp ult i32 %29, 65
  %373 = bitcast i8* %370 to i64*
  %374 = ptrtoint i8* %370 to i64
  %375 = getelementptr inbounds i64, i64* %373, i64 %367
  %376 = select i1 %372, i64* %373, i64* %375
  store i64 0, i64* %376, align 8
  %377 = lshr i64 %34, 6
  %378 = shl nuw nsw i64 %377, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 %378, i1 false) #6
  %379 = and i64 %34, 63
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %365
  %382 = getelementptr inbounds i64, i64* %373, i64 %377
  %383 = sub nuw nsw i64 64, %379
  %384 = lshr i64 -1, %383
  %385 = xor i64 %384, -1
  %386 = load i64, i64* %382, align 8
  %387 = and i64 %386, %385
  store i64 %387, i64* %382, align 8
  br label %388

388:                                              ; preds = %356, %365, %381
  %389 = phi i64 [ %374, %365 ], [ %374, %381 ], [ 0, %356 ]
  %390 = inttoptr i64 %389 to i64*
  %391 = lshr i64 %34, 6
  %392 = getelementptr inbounds i64, i64* %390, i64 %391
  %393 = and i64 %34, 63
  %394 = ptrtoint i64* %392 to i64
  %395 = sub i64 %394, %389
  %396 = shl i64 %395, 3
  %397 = add i64 %396, %393
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %412, label %399

399:                                              ; preds = %388
  %400 = inttoptr i64 %389 to i8*
  %401 = lshr i64 %397, 6
  %402 = shl nuw nsw i64 %401, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %400, i8 0, i64 %402, i1 false) #6
  %403 = and i64 %397, 63
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %412, label %405

405:                                              ; preds = %399
  %406 = getelementptr inbounds i64, i64* %390, i64 %401
  %407 = sub nuw nsw i64 64, %403
  %408 = lshr i64 -1, %407
  %409 = xor i64 %408, -1
  %410 = load i64, i64* %406, align 8
  %411 = and i64 %410, %409
  store i64 %411, i64* %406, align 8
  br label %412

412:                                              ; preds = %388, %399, %405
  %413 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #6
  %414 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 24, i1 false) #6
  br i1 %35, label %432, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %418 = shl nsw i64 %34, 2
  %419 = tail call i8* @_Znwm(i64 %418) #8
  %420 = bitcast i8* %419 to i32*
  %421 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %419, i8** %421, align 8
  %422 = getelementptr inbounds i32, i32* %420, i64 %34
  store i32* %422, i32** %417, align 8
  %423 = bitcast i32** %415 to i64*
  %424 = ptrtoint i8* %419 to i64
  %425 = add nsw i64 %34, -1
  %426 = getelementptr i32, i32* %420, i64 %425
  %427 = ptrtoint i32* %426 to i64
  %428 = sub i64 4, %424
  %429 = add i64 %428, %427
  %430 = and i64 %429, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %419, i8 0, i64 %430, i1 false) #6
  %431 = ptrtoint i32* %422 to i64
  store i64 %431, i64* %423, align 8
  br label %432

432:                                              ; preds = %412, %416
  %433 = phi i32* [ null, %412 ], [ %420, %416 ]
  %434 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #6
  %435 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %436 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 0, i64 24, i1 false) #6
  br i1 %35, label %453, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %439 = shl nsw i64 %34, 2
  %440 = tail call i8* @_Znwm(i64 %439) #8
  %441 = bitcast i8* %440 to i32*
  %442 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %440, i8** %442, align 8
  %443 = getelementptr inbounds i32, i32* %441, i64 %34
  store i32* %443, i32** %438, align 8
  %444 = bitcast i32** %436 to i64*
  %445 = ptrtoint i8* %440 to i64
  %446 = add nsw i64 %34, -1
  %447 = getelementptr i32, i32* %441, i64 %446
  %448 = ptrtoint i32* %447 to i64
  %449 = sub i64 4, %445
  %450 = add i64 %449, %448
  %451 = and i64 %450, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %440, i8 0, i64 %451, i1 false) #6
  %452 = ptrtoint i32* %443 to i64
  store i64 %452, i64* %444, align 8
  br label %453

453:                                              ; preds = %432, %437
  %454 = phi i32* [ null, %432 ], [ %441, %437 ]
  %455 = add nsw i32 %29, -1
  br i1 %82, label %456, label %484

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 0
  %458 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  br label %547

459:                                              ; preds = %459, %320
  %460 = phi i64 [ 1, %320 ], [ %481, %459 ]
  %461 = phi i64 [ %321, %320 ], [ %482, %459 ]
  %462 = load i32*, i32** %282, align 8
  %463 = load i32*, i32** %307, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 %460
  %465 = load i32, i32* %464, align 4
  %466 = sext i32 %465 to i64
  %467 = load i32*, i32** %164, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 %466
  %469 = load i32, i32* %468, align 4
  %470 = getelementptr inbounds i32, i32* %462, i64 %460
  store i32 %469, i32* %470, align 4
  %471 = add nuw nsw i64 %460, 1
  %472 = load i32*, i32** %282, align 8
  %473 = load i32*, i32** %307, align 8
  %474 = getelementptr inbounds i32, i32* %473, i64 %471
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = load i32*, i32** %164, align 8
  %478 = getelementptr inbounds i32, i32* %477, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = getelementptr inbounds i32, i32* %472, i64 %471
  store i32 %479, i32* %480, align 4
  %481 = add nuw nsw i64 %460, 2
  %482 = add i64 %461, -2
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %343, label %459

484:                                              ; preds = %570, %453
  %485 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7
  %486 = shl nsw i32 %29, 1
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7, i32 0, i32 1
  %489 = bitcast %"class.std::__1::vector"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast %"class.std::__1::vector.8"* %485 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = sub i64 %490, %492
  %494 = sdiv exact i64 %493, 24
  %495 = icmp ult i64 %494, %487
  %496 = inttoptr i64 %492 to %"class.std::__1::vector"*
  %497 = inttoptr i64 %490 to %"class.std::__1::vector"*
  br i1 %495, label %498, label %500

498:                                              ; preds = %484
  %499 = sub nsw i64 %487, %494
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %485, i64 %499) #6
  br label %519

500:                                              ; preds = %484
  %501 = icmp ugt i64 %494, %487
  br i1 %501, label %502, label %519

502:                                              ; preds = %500
  %503 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %496, i64 %487
  %504 = icmp eq %"class.std::__1::vector"* %503, %497
  br i1 %504, label %518, label %505

505:                                              ; preds = %502, %516
  %506 = phi %"class.std::__1::vector"* [ %507, %516 ], [ %497, %502 ]
  %507 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1
  %508 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %507, i64 0, i32 0, i32 0
  %509 = load i32*, i32** %508, align 8
  %510 = icmp eq i32* %509, null
  br i1 %510, label %516, label %511

511:                                              ; preds = %505
  %512 = ptrtoint i32* %509 to i64
  %513 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1, i32 0, i32 1
  %514 = bitcast i32** %513 to i64*
  store i64 %512, i64* %514, align 8
  %515 = bitcast i32* %509 to i8*
  tail call void @_ZdlPv(i8* %515) #8
  br label %516

516:                                              ; preds = %511, %505
  %517 = icmp eq %"class.std::__1::vector"* %507, %503
  br i1 %517, label %518, label %505

518:                                              ; preds = %516, %502
  store %"class.std::__1::vector"* %503, %"class.std::__1::vector"** %488, align 8
  br label %519

519:                                              ; preds = %498, %500, %518
  %520 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #6
  %521 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %523 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %520, i8 0, i64 24, i1 false) #6
  %524 = bitcast i32** %523 to i64*
  %525 = bitcast %"class.std::__1::vector"* %10 to i64*
  %526 = icmp eq i32 %29, 0
  br i1 %526, label %540, label %527

527:                                              ; preds = %519
  %528 = icmp slt i32 %29, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %527
  tail call void @abort() #7
  unreachable

530:                                              ; preds = %527
  %531 = shl nsw i64 %34, 2
  %532 = tail call i8* @_Znwm(i64 %531) #8
  %533 = bitcast i8* %532 to i32*
  %534 = getelementptr inbounds i32, i32* %533, i64 %34
  %535 = ptrtoint i32* %534 to i64
  %536 = insertelement <2 x i8*> undef, i8* %532, i32 0
  %537 = shufflevector <2 x i8*> %536, <2 x i8*> undef, <2 x i32> zeroinitializer
  %538 = ptrtoint <2 x i8*> %537 to <2 x i64>
  %539 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %538, <2 x i64>* %539, align 16
  store i64 %535, i64* %524, align 16
  br label %540

540:                                              ; preds = %530, %519
  br i1 %82, label %541, label %576

541:                                              ; preds = %540
  %542 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %543 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 0
  %544 = bitcast i32** %522 to i64*
  %545 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %546 = zext i32 %29 to i64
  br label %606

547:                                              ; preds = %574, %456
  %548 = phi i32* [ %433, %456 ], [ %575, %574 ]
  %549 = phi i64 [ %34, %456 ], [ %552, %574 ]
  %550 = phi i32 [ 1, %456 ], [ %572, %574 ]
  %551 = phi i32 [ -1, %456 ], [ %571, %574 ]
  %552 = add i64 %549, -1
  %553 = getelementptr inbounds i32, i32* %548, i64 %552
  store i32 %551, i32* %553, align 4
  %554 = load i32*, i32** %457, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %552
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 1
  %558 = getelementptr inbounds i32, i32* %454, i64 %552
  br i1 %557, label %559, label %561

559:                                              ; preds = %547
  store i32 %550, i32* %558, align 4
  %560 = trunc i64 %552 to i32
  br label %570

561:                                              ; preds = %547
  store i32 -1, i32* %558, align 4
  %562 = load i32*, i32** %458, align 8
  %563 = getelementptr inbounds i32, i32* %562, i64 %552
  %564 = load i32, i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = load i32*, i32** %31, align 8
  %567 = getelementptr inbounds i32, i32* %566, i64 %565
  %568 = load i32, i32* %567, align 4
  %569 = mul nsw i32 %568, %550
  br label %570

570:                                              ; preds = %559, %561
  %571 = phi i32 [ %560, %559 ], [ %551, %561 ]
  %572 = phi i32 [ 1, %559 ], [ %569, %561 ]
  %573 = icmp sgt i64 %552, 0
  br i1 %573, label %574, label %484

574:                                              ; preds = %570
  %575 = load i32*, i32** %414, align 8
  br label %547

576:                                              ; preds = %823, %540
  %577 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %577) #6
  %578 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %579 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %580 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %577, i8 0, i64 24, i1 false) #6
  br i1 %35, label %593, label %581

581:                                              ; preds = %576
  %582 = icmp slt i32 %29, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %581
  %584 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %584) #7
  unreachable

585:                                              ; preds = %581
  %586 = shl nsw i64 %34, 2
  %587 = tail call i8* @_Znwm(i64 %586) #8
  %588 = bitcast i8* %587 to i32*
  %589 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %587, i8** %589, align 8
  %590 = getelementptr inbounds i32, i32* %588, i64 %34
  store i32* %590, i32** %580, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %587, i8 0, i64 %586, i1 false)
  %591 = bitcast i32** %579 to i64*
  %592 = ptrtoint i32* %590 to i64
  store i64 %592, i64* %591, align 8
  br label %593

593:                                              ; preds = %585, %576
  %594 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %595 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 0
  %596 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %597 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 0
  %598 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 1
  %599 = bitcast i8** %598 to i64*
  %600 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8
  %601 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %602 = bitcast %"class.std::__1::vector.23"* %600 to i64*
  %603 = bitcast i8** %601 to i64*
  %604 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %600, i64 0, i32 0, i32 0
  %605 = sext i32 %455 to i64
  br label %826

606:                                              ; preds = %823, %541
  %607 = phi i64 [ 0, %541 ], [ %824, %823 ]
  %608 = shl nuw nsw i64 %607, 1
  %609 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %610 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608
  %611 = bitcast %"class.std::__1::vector"* %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608, i32 0, i32 1
  %614 = bitcast i32** %613 to i64*
  store i64 %612, i64* %614, align 8
  %615 = or i64 %608, 1
  %616 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %617 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615
  %618 = bitcast %"class.std::__1::vector"* %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615, i32 0, i32 1
  %621 = bitcast i32** %620 to i64*
  store i64 %619, i64* %621, align 8
  %622 = load i32*, i32** %543, align 8
  %623 = getelementptr inbounds i32, i32* %622, i64 %607
  %624 = load i32, i32* %623, align 4
  %625 = icmp eq i32 %624, 0
  %626 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %627 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608
  br i1 %625, label %628, label %703

628:                                              ; preds = %606
  %629 = load i32*, i32** %545, align 8
  %630 = getelementptr inbounds i32, i32* %629, i64 %607
  %631 = load i32, i32* %630, align 4
  %632 = sext i32 %631 to i64
  %633 = load i32*, i32** %31, align 8
  %634 = getelementptr inbounds i32, i32* %633, i64 %632
  %635 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %636 = load i32*, i32** %635, align 8
  %637 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %638 = load i32*, i32** %637, align 8
  %639 = icmp eq i32* %636, %638
  %640 = ptrtoint i32* %638 to i64
  br i1 %639, label %646, label %641

641:                                              ; preds = %628
  %642 = load i32, i32* %634, align 4
  store i32 %642, i32* %636, align 4
  %643 = getelementptr inbounds i32, i32* %636, i64 1
  %644 = ptrtoint i32* %643 to i64
  %645 = bitcast i32** %635 to i64*
  store i64 %644, i64* %645, align 8
  br label %823

646:                                              ; preds = %628
  %647 = ptrtoint i32* %636 to i64
  %648 = bitcast i32** %635 to i64*
  %649 = bitcast %"class.std::__1::vector"* %627 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = sub i64 %647, %650
  %652 = ashr exact i64 %651, 2
  %653 = add nsw i64 %652, 1
  %654 = icmp ugt i64 %653, 4611686018427387903
  br i1 %654, label %655, label %657

655:                                              ; preds = %646
  %656 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %656) #7
  unreachable

657:                                              ; preds = %646
  %658 = bitcast i32** %637 to i64*
  %659 = sub i64 %640, %650
  %660 = ashr exact i64 %659, 2
  %661 = icmp ult i64 %660, 2305843009213693951
  br i1 %661, label %662, label %670

662:                                              ; preds = %657
  %663 = ashr exact i64 %659, 1
  %664 = icmp ult i64 %663, %653
  %665 = select i1 %664, i64 %653, i64 %663
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %675, label %667

667:                                              ; preds = %662
  %668 = icmp ugt i64 %665, 4611686018427387903
  br i1 %668, label %669, label %670

669:                                              ; preds = %667
  tail call void @abort() #7
  unreachable

670:                                              ; preds = %667, %657
  %671 = phi i64 [ %665, %667 ], [ 4611686018427387903, %657 ]
  %672 = shl i64 %671, 2
  %673 = tail call i8* @_Znwm(i64 %672) #8
  %674 = bitcast i8* %673 to i32*
  br label %675

675:                                              ; preds = %670, %662
  %676 = phi i64 [ %671, %670 ], [ 0, %662 ]
  %677 = phi i32* [ %674, %670 ], [ null, %662 ]
  %678 = getelementptr inbounds i32, i32* %677, i64 %652
  %679 = getelementptr inbounds i32, i32* %677, i64 %676
  %680 = ptrtoint i32* %679 to i64
  %681 = load i32, i32* %634, align 4
  store i32 %681, i32* %678, align 4
  %682 = getelementptr inbounds i32, i32* %678, i64 1
  %683 = ptrtoint i32* %682 to i64
  %684 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %685 = load i32*, i32** %684, align 8
  %686 = load i64, i64* %648, align 8
  %687 = ptrtoint i32* %685 to i64
  %688 = sub i64 %686, %687
  %689 = ashr exact i64 %688, 2
  %690 = sub nsw i64 0, %689
  %691 = getelementptr inbounds i32, i32* %678, i64 %690
  %692 = ptrtoint i32* %691 to i64
  %693 = icmp sgt i64 %688, 0
  br i1 %693, label %694, label %698

694:                                              ; preds = %675
  %695 = bitcast i32* %691 to i8*
  %696 = bitcast i32* %685 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %695, i8* align 4 %696, i64 %688, i1 false) #6
  %697 = load i32*, i32** %684, align 8
  br label %698

698:                                              ; preds = %694, %675
  %699 = phi i32* [ %685, %675 ], [ %697, %694 ]
  store i64 %692, i64* %649, align 8
  store i64 %683, i64* %648, align 8
  store i64 %680, i64* %658, align 8
  %700 = icmp eq i32* %699, null
  br i1 %700, label %823, label %701

701:                                              ; preds = %698
  %702 = bitcast i32* %699 to i8*
  tail call void @_ZdlPv(i8* %702) #8
  br label %823

703:                                              ; preds = %606
  %704 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %705 = load i32*, i32** %704, align 8
  %706 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %707 = load i32*, i32** %706, align 8
  %708 = icmp ult i32* %705, %707
  %709 = ptrtoint i32* %707 to i64
  br i1 %708, label %710, label %714

710:                                              ; preds = %703
  store i32 0, i32* %705, align 4
  %711 = getelementptr inbounds i32, i32* %705, i64 1
  %712 = ptrtoint i32* %711 to i64
  %713 = bitcast i32** %704 to i64*
  store i64 %712, i64* %713, align 8
  br label %770

714:                                              ; preds = %703
  %715 = ptrtoint i32* %705 to i64
  %716 = bitcast i32** %704 to i64*
  %717 = bitcast %"class.std::__1::vector"* %627 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = sub i64 %715, %718
  %720 = ashr exact i64 %719, 2
  %721 = add nsw i64 %720, 1
  %722 = icmp ugt i64 %721, 4611686018427387903
  br i1 %722, label %723, label %725

723:                                              ; preds = %714
  %724 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %724) #7
  unreachable

725:                                              ; preds = %714
  %726 = bitcast i32** %706 to i64*
  %727 = sub i64 %709, %718
  %728 = ashr exact i64 %727, 2
  %729 = icmp ult i64 %728, 2305843009213693951
  br i1 %729, label %730, label %738

730:                                              ; preds = %725
  %731 = ashr exact i64 %727, 1
  %732 = icmp ult i64 %731, %721
  %733 = select i1 %732, i64 %721, i64 %731
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %743, label %735

735:                                              ; preds = %730
  %736 = icmp ugt i64 %733, 4611686018427387903
  br i1 %736, label %737, label %738

737:                                              ; preds = %735
  tail call void @abort() #7
  unreachable

738:                                              ; preds = %735, %725
  %739 = phi i64 [ %733, %735 ], [ 4611686018427387903, %725 ]
  %740 = shl i64 %739, 2
  %741 = tail call i8* @_Znwm(i64 %740) #8
  %742 = bitcast i8* %741 to i32*
  br label %743

743:                                              ; preds = %738, %730
  %744 = phi i64 [ %739, %738 ], [ 0, %730 ]
  %745 = phi i32* [ %742, %738 ], [ null, %730 ]
  %746 = getelementptr inbounds i32, i32* %745, i64 %720
  %747 = getelementptr inbounds i32, i32* %745, i64 %744
  %748 = ptrtoint i32* %747 to i64
  store i32 0, i32* %746, align 4
  %749 = getelementptr inbounds i32, i32* %746, i64 1
  %750 = ptrtoint i32* %749 to i64
  %751 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %752 = load i32*, i32** %751, align 8
  %753 = load i64, i64* %716, align 8
  %754 = ptrtoint i32* %752 to i64
  %755 = sub i64 %753, %754
  %756 = ashr exact i64 %755, 2
  %757 = sub nsw i64 0, %756
  %758 = getelementptr inbounds i32, i32* %746, i64 %757
  %759 = ptrtoint i32* %758 to i64
  %760 = icmp sgt i64 %755, 0
  br i1 %760, label %761, label %765

761:                                              ; preds = %743
  %762 = bitcast i32* %758 to i8*
  %763 = bitcast i32* %752 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %762, i8* align 4 %763, i64 %755, i1 false) #6
  %764 = load i32*, i32** %751, align 8
  br label %765

765:                                              ; preds = %761, %743
  %766 = phi i32* [ %752, %743 ], [ %764, %761 ]
  store i64 %759, i64* %717, align 8
  store i64 %750, i64* %716, align 8
  store i64 %748, i64* %726, align 8
  %767 = icmp eq i32* %766, null
  br i1 %767, label %770, label %768

768:                                              ; preds = %765
  %769 = bitcast i32* %766 to i8*
  tail call void @_ZdlPv(i8* %769) #8
  br label %770

770:                                              ; preds = %710, %765, %768
  %771 = load i32*, i32** %522, align 8
  %772 = load i32*, i32** %523, align 16
  %773 = icmp eq i32* %771, %772
  %774 = ptrtoint i32* %772 to i64
  br i1 %773, label %779, label %775

775:                                              ; preds = %770
  %776 = trunc i64 %607 to i32
  store i32 %776, i32* %771, align 4
  %777 = getelementptr inbounds i32, i32* %771, i64 1
  %778 = ptrtoint i32* %777 to i64
  store i64 %778, i64* %544, align 8
  br label %823

779:                                              ; preds = %770
  %780 = ptrtoint i32* %771 to i64
  %781 = load i64, i64* %525, align 16
  %782 = sub i64 %780, %781
  %783 = ashr exact i64 %782, 2
  %784 = add nsw i64 %783, 1
  %785 = icmp ugt i64 %784, 4611686018427387903
  br i1 %785, label %786, label %788

786:                                              ; preds = %779
  %787 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %787) #7
  unreachable

788:                                              ; preds = %779
  %789 = sub i64 %774, %781
  %790 = ashr exact i64 %789, 2
  %791 = icmp ult i64 %790, 2305843009213693951
  br i1 %791, label %792, label %800

792:                                              ; preds = %788
  %793 = ashr exact i64 %789, 1
  %794 = icmp ult i64 %793, %784
  %795 = select i1 %794, i64 %784, i64 %793
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %805, label %797

797:                                              ; preds = %792
  %798 = icmp ugt i64 %795, 4611686018427387903
  br i1 %798, label %799, label %800

799:                                              ; preds = %797
  tail call void @abort() #7
  unreachable

800:                                              ; preds = %797, %788
  %801 = phi i64 [ %795, %797 ], [ 4611686018427387903, %788 ]
  %802 = shl i64 %801, 2
  %803 = tail call i8* @_Znwm(i64 %802) #8
  %804 = bitcast i8* %803 to i32*
  br label %805

805:                                              ; preds = %800, %792
  %806 = phi i64 [ %801, %800 ], [ 0, %792 ]
  %807 = phi i8* [ %803, %800 ], [ null, %792 ]
  %808 = phi i32* [ %804, %800 ], [ null, %792 ]
  %809 = getelementptr inbounds i32, i32* %808, i64 %783
  %810 = getelementptr inbounds i32, i32* %808, i64 %806
  %811 = ptrtoint i32* %810 to i64
  %812 = trunc i64 %607 to i32
  store i32 %812, i32* %809, align 4
  %813 = getelementptr inbounds i32, i32* %809, i64 1
  %814 = ptrtoint i32* %813 to i64
  %815 = ptrtoint i32* %808 to i64
  %816 = icmp sgt i64 %782, 0
  br i1 %816, label %817, label %819

817:                                              ; preds = %805
  %818 = inttoptr i64 %781 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %807, i8* align 4 %818, i64 %782, i1 false) #6
  br label %819

819:                                              ; preds = %817, %805
  store i64 %815, i64* %525, align 16
  store i64 %814, i64* %544, align 8
  store i64 %811, i64* %524, align 16
  %820 = icmp eq i64 %781, 0
  br i1 %820, label %823, label %821

821:                                              ; preds = %819
  %822 = inttoptr i64 %781 to i8*
  tail call void @_ZdlPv(i8* %822) #8
  br label %823

823:                                              ; preds = %821, %819, %775, %701, %698, %641
  %824 = add nuw nsw i64 %607, 1
  %825 = icmp eq i64 %824, %546
  br i1 %825, label %576, label %606

826:                                              ; preds = %593, %1212
  %827 = phi i32 [ 0, %593 ], [ %1214, %1212 ]
  %828 = phi i32 [ %29, %593 ], [ %1213, %1212 ]
  %829 = icmp eq i32 %828, %29
  br i1 %829, label %830, label %1038

830:                                              ; preds = %826
  %831 = sext i32 %827 to i64
  %832 = getelementptr inbounds i8, i8* %1, i64 %831
  %833 = load i8, i8* %832, align 1
  %834 = icmp eq i8 %833, 0
  br i1 %834, label %984, label %835

835:                                              ; preds = %830
  %836 = load i8*, i8** %598, align 8
  %837 = load i8*, i8** %601, align 8
  %838 = icmp eq i8* %836, %837
  %839 = ptrtoint i8* %837 to i64
  br i1 %838, label %843, label %840

840:                                              ; preds = %835
  store i8 %833, i8* %836, align 1
  %841 = getelementptr inbounds i8, i8* %836, i64 1
  %842 = ptrtoint i8* %841 to i64
  store i64 %842, i64* %599, align 8
  br label %884

843:                                              ; preds = %835
  %844 = ptrtoint i8* %836 to i64
  %845 = load i64, i64* %602, align 8
  %846 = sub i64 %844, %845
  %847 = add i64 %846, 1
  %848 = icmp slt i64 %847, 0
  br i1 %848, label %849, label %851

849:                                              ; preds = %843
  %850 = bitcast %"class.std::__1::vector.23"* %600 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %850) #7
  unreachable

851:                                              ; preds = %843
  %852 = sub i64 %839, %845
  %853 = icmp ult i64 %852, 4611686018427387903
  br i1 %853, label %854, label %859

854:                                              ; preds = %851
  %855 = shl i64 %852, 1
  %856 = icmp ult i64 %855, %847
  %857 = select i1 %856, i64 %847, i64 %855
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %862, label %859

859:                                              ; preds = %854, %851
  %860 = phi i64 [ %857, %854 ], [ 9223372036854775807, %851 ]
  %861 = tail call i8* @_Znwm(i64 %860) #8
  br label %862

862:                                              ; preds = %859, %854
  %863 = phi i64 [ %860, %859 ], [ 0, %854 ]
  %864 = phi i8* [ %861, %859 ], [ null, %854 ]
  %865 = getelementptr inbounds i8, i8* %864, i64 %846
  %866 = getelementptr inbounds i8, i8* %864, i64 %863
  %867 = ptrtoint i8* %866 to i64
  store i8 %833, i8* %865, align 1
  %868 = getelementptr inbounds i8, i8* %865, i64 1
  %869 = ptrtoint i8* %868 to i64
  %870 = load i8*, i8** %604, align 8
  %871 = load i64, i64* %599, align 8
  %872 = ptrtoint i8* %870 to i64
  %873 = sub i64 %871, %872
  %874 = sub i64 0, %873
  %875 = getelementptr inbounds i8, i8* %865, i64 %874
  %876 = ptrtoint i8* %875 to i64
  %877 = icmp sgt i64 %873, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %862
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %875, i8* align 1 %870, i64 %873, i1 false) #6
  %879 = load i8*, i8** %604, align 8
  br label %880

880:                                              ; preds = %878, %862
  %881 = phi i8* [ %870, %862 ], [ %879, %878 ]
  store i64 %876, i64* %602, align 8
  store i64 %869, i64* %599, align 8
  store i64 %867, i64* %603, align 8
  %882 = icmp eq i8* %881, null
  br i1 %882, label %884, label %883

883:                                              ; preds = %880
  tail call void @_ZdlPv(i8* nonnull %881) #8
  br label %884

884:                                              ; preds = %840, %880, %883
  %885 = load i32*, i32** %521, align 16
  %886 = load i32*, i32** %522, align 8
  %887 = icmp eq i32* %885, %886
  br i1 %887, label %1212, label %888

888:                                              ; preds = %884, %981
  %889 = phi i32* [ %982, %981 ], [ %885, %884 ]
  %890 = load i32, i32* %889, align 4
  %891 = sext i32 %890 to i64
  %892 = load i64*, i64** %358, align 8
  %893 = lshr i64 %891, 6
  %894 = getelementptr inbounds i64, i64* %892, i64 %893
  %895 = and i64 %891, 63
  %896 = shl i64 1, %895
  %897 = load i64, i64* %894, align 8
  %898 = and i64 %896, %897
  %899 = icmp eq i64 %898, 0
  br i1 %899, label %900, label %981

900:                                              ; preds = %888
  %901 = shl nsw i32 %890, 1
  %902 = or i32 %901, 1
  %903 = sext i32 %902 to i64
  %904 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %905 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %904, i64 %903
  %906 = load i32*, i32** %578, align 8
  %907 = getelementptr inbounds i32, i32* %906, i64 %891
  %908 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %904, i64 %903, i32 0, i32 1
  %909 = load i32*, i32** %908, align 8
  %910 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %904, i64 %903, i32 0, i32 2, i32 0, i32 0
  %911 = load i32*, i32** %910, align 8
  %912 = icmp eq i32* %909, %911
  %913 = ptrtoint i32* %911 to i64
  br i1 %912, label %919, label %914

914:                                              ; preds = %900
  %915 = load i32, i32* %907, align 4
  store i32 %915, i32* %909, align 4
  %916 = getelementptr inbounds i32, i32* %909, i64 1
  %917 = ptrtoint i32* %916 to i64
  %918 = bitcast i32** %908 to i64*
  store i64 %917, i64* %918, align 8
  br label %976

919:                                              ; preds = %900
  %920 = ptrtoint i32* %909 to i64
  %921 = bitcast i32** %908 to i64*
  %922 = bitcast %"class.std::__1::vector"* %905 to i64*
  %923 = load i64, i64* %922, align 8
  %924 = sub i64 %920, %923
  %925 = ashr exact i64 %924, 2
  %926 = add nsw i64 %925, 1
  %927 = icmp ugt i64 %926, 4611686018427387903
  br i1 %927, label %928, label %930

928:                                              ; preds = %919
  %929 = bitcast %"class.std::__1::vector"* %905 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %929) #7
  unreachable

930:                                              ; preds = %919
  %931 = bitcast i32** %910 to i64*
  %932 = sub i64 %913, %923
  %933 = ashr exact i64 %932, 2
  %934 = icmp ult i64 %933, 2305843009213693951
  br i1 %934, label %935, label %943

935:                                              ; preds = %930
  %936 = ashr exact i64 %932, 1
  %937 = icmp ult i64 %936, %926
  %938 = select i1 %937, i64 %926, i64 %936
  %939 = icmp eq i64 %938, 0
  br i1 %939, label %948, label %940

940:                                              ; preds = %935
  %941 = icmp ugt i64 %938, 4611686018427387903
  br i1 %941, label %942, label %943

942:                                              ; preds = %940
  tail call void @abort() #7
  unreachable

943:                                              ; preds = %940, %930
  %944 = phi i64 [ %938, %940 ], [ 4611686018427387903, %930 ]
  %945 = shl i64 %944, 2
  %946 = tail call i8* @_Znwm(i64 %945) #8
  %947 = bitcast i8* %946 to i32*
  br label %948

948:                                              ; preds = %943, %935
  %949 = phi i64 [ %944, %943 ], [ 0, %935 ]
  %950 = phi i32* [ %947, %943 ], [ null, %935 ]
  %951 = getelementptr inbounds i32, i32* %950, i64 %925
  %952 = getelementptr inbounds i32, i32* %950, i64 %949
  %953 = ptrtoint i32* %952 to i64
  %954 = load i32, i32* %907, align 4
  store i32 %954, i32* %951, align 4
  %955 = getelementptr inbounds i32, i32* %951, i64 1
  %956 = ptrtoint i32* %955 to i64
  %957 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %905, i64 0, i32 0, i32 0
  %958 = load i32*, i32** %957, align 8
  %959 = load i64, i64* %921, align 8
  %960 = ptrtoint i32* %958 to i64
  %961 = sub i64 %959, %960
  %962 = ashr exact i64 %961, 2
  %963 = sub nsw i64 0, %962
  %964 = getelementptr inbounds i32, i32* %951, i64 %963
  %965 = ptrtoint i32* %964 to i64
  %966 = icmp sgt i64 %961, 0
  br i1 %966, label %967, label %971

967:                                              ; preds = %948
  %968 = bitcast i32* %964 to i8*
  %969 = bitcast i32* %958 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %968, i8* align 4 %969, i64 %961, i1 false) #6
  %970 = load i32*, i32** %957, align 8
  br label %971

971:                                              ; preds = %967, %948
  %972 = phi i32* [ %958, %948 ], [ %970, %967 ]
  store i64 %965, i64* %922, align 8
  store i64 %956, i64* %921, align 8
  store i64 %953, i64* %931, align 8
  %973 = icmp eq i32* %972, null
  br i1 %973, label %976, label %974

974:                                              ; preds = %971
  %975 = bitcast i32* %972 to i8*
  tail call void @_ZdlPv(i8* %975) #8
  br label %976

976:                                              ; preds = %914, %971, %974
  %977 = load i64*, i64** %358, align 8
  %978 = getelementptr inbounds i64, i64* %977, i64 %893
  %979 = load i64, i64* %978, align 8
  %980 = or i64 %979, %896
  store i64 %980, i64* %978, align 8
  br label %981

981:                                              ; preds = %888, %976
  %982 = getelementptr inbounds i32, i32* %889, i64 1
  %983 = icmp eq i32* %982, %886
  br i1 %983, label %1212, label %888

984:                                              ; preds = %830
  %985 = load i32*, i32** %595, align 8
  %986 = getelementptr inbounds i32, i32* %985, i64 %605
  %987 = load i32, i32* %986, align 4
  %988 = icmp eq i32 %987, 0
  br i1 %988, label %989, label %1212

989:                                              ; preds = %984
  %990 = load i8*, i8** %598, align 8
  %991 = load i8*, i8** %601, align 8
  %992 = icmp eq i8* %990, %991
  %993 = ptrtoint i8* %991 to i64
  br i1 %992, label %997, label %994

994:                                              ; preds = %989
  store i8 0, i8* %990, align 1
  %995 = getelementptr inbounds i8, i8* %990, i64 1
  %996 = ptrtoint i8* %995 to i64
  store i64 %996, i64* %599, align 8
  br label %1212

997:                                              ; preds = %989
  %998 = ptrtoint i8* %990 to i64
  %999 = load i64, i64* %602, align 8
  %1000 = sub i64 %998, %999
  %1001 = add i64 %1000, 1
  %1002 = icmp slt i64 %1001, 0
  br i1 %1002, label %1003, label %1005

1003:                                             ; preds = %997
  %1004 = bitcast %"class.std::__1::vector.23"* %600 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1004) #7
  unreachable

1005:                                             ; preds = %997
  %1006 = sub i64 %993, %999
  %1007 = icmp ult i64 %1006, 4611686018427387903
  br i1 %1007, label %1008, label %1013

1008:                                             ; preds = %1005
  %1009 = shl i64 %1006, 1
  %1010 = icmp ult i64 %1009, %1001
  %1011 = select i1 %1010, i64 %1001, i64 %1009
  %1012 = icmp eq i64 %1011, 0
  br i1 %1012, label %1016, label %1013

1013:                                             ; preds = %1008, %1005
  %1014 = phi i64 [ %1011, %1008 ], [ 9223372036854775807, %1005 ]
  %1015 = tail call i8* @_Znwm(i64 %1014) #8
  br label %1016

1016:                                             ; preds = %1013, %1008
  %1017 = phi i64 [ %1014, %1013 ], [ 0, %1008 ]
  %1018 = phi i8* [ %1015, %1013 ], [ null, %1008 ]
  %1019 = getelementptr inbounds i8, i8* %1018, i64 %1000
  %1020 = getelementptr inbounds i8, i8* %1018, i64 %1017
  %1021 = ptrtoint i8* %1020 to i64
  store i8 0, i8* %1019, align 1
  %1022 = getelementptr inbounds i8, i8* %1019, i64 1
  %1023 = ptrtoint i8* %1022 to i64
  %1024 = load i8*, i8** %604, align 8
  %1025 = load i64, i64* %599, align 8
  %1026 = ptrtoint i8* %1024 to i64
  %1027 = sub i64 %1025, %1026
  %1028 = sub i64 0, %1027
  %1029 = getelementptr inbounds i8, i8* %1019, i64 %1028
  %1030 = ptrtoint i8* %1029 to i64
  %1031 = icmp sgt i64 %1027, 0
  br i1 %1031, label %1032, label %1034

1032:                                             ; preds = %1016
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1029, i8* align 1 %1024, i64 %1027, i1 false) #6
  %1033 = load i8*, i8** %604, align 8
  br label %1034

1034:                                             ; preds = %1032, %1016
  %1035 = phi i8* [ %1024, %1016 ], [ %1033, %1032 ]
  store i64 %1030, i64* %602, align 8
  store i64 %1023, i64* %599, align 8
  store i64 %1021, i64* %603, align 8
  %1036 = icmp eq i8* %1035, null
  br i1 %1036, label %1212, label %1037

1037:                                             ; preds = %1034
  tail call void @_ZdlPv(i8* nonnull %1035) #8
  br label %1212

1038:                                             ; preds = %826
  %1039 = sext i32 %828 to i64
  %1040 = load i32*, i32** %594, align 8
  %1041 = getelementptr inbounds i32, i32* %1040, i64 %1039
  %1042 = load i32, i32* %1041, align 4
  %1043 = sext i32 %1042 to i64
  %1044 = load i32*, i32** %31, align 8
  %1045 = getelementptr inbounds i32, i32* %1044, i64 %1043
  %1046 = load i32, i32* %1045, align 4
  %1047 = load i64*, i64** %358, align 8
  %1048 = lshr i64 %1039, 6
  %1049 = getelementptr inbounds i64, i64* %1047, i64 %1048
  %1050 = and i64 %1039, 63
  %1051 = shl i64 1, %1050
  %1052 = load i64, i64* %1049, align 8
  %1053 = and i64 %1052, %1051
  %1054 = icmp eq i64 %1053, 0
  br i1 %1054, label %1058, label %1055

1055:                                             ; preds = %1038
  %1056 = xor i64 %1051, -1
  %1057 = and i64 %1052, %1056
  store i64 %1057, i64* %1049, align 8
  br label %1104

1058:                                             ; preds = %1038
  %1059 = load i32*, i32** %595, align 8
  %1060 = getelementptr inbounds i32, i32* %1059, i64 %1039
  %1061 = load i32, i32* %1060, align 4
  %1062 = icmp eq i32 %1061, 1
  br i1 %1062, label %1063, label %1104

1063:                                             ; preds = %1058
  %1064 = load i32*, i32** %414, align 8
  %1065 = getelementptr inbounds i32, i32* %1064, i64 %1039
  %1066 = load i32, i32* %1065, align 4
  %1067 = shl nsw i32 %828, 1
  %1068 = or i32 %1067, 1
  %1069 = sext i32 %1068 to i64
  %1070 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1071 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1070, i64 %1069
  %1072 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1070, i64 %1069, i32 0, i32 1
  %1073 = bitcast i32** %1072 to i64*
  %1074 = load i64, i64* %1073, align 8
  %1075 = bitcast %"class.std::__1::vector"* %1071 to i64*
  %1076 = load i64, i64* %1075, align 8
  %1077 = sub i64 %1074, %1076
  %1078 = lshr exact i64 %1077, 2
  %1079 = load i32*, i32** %435, align 8
  %1080 = getelementptr inbounds i32, i32* %1079, i64 %1039
  %1081 = load i32, i32* %1080, align 4
  %1082 = trunc i64 %1078 to i32
  %1083 = mul i32 %1081, %1082
  %1084 = icmp sgt i32 %1066, -1
  br i1 %1084, label %1085, label %1097

1085:                                             ; preds = %1063
  %1086 = shl nsw i32 %1066, 1
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1070, i64 %1087, i32 0, i32 0
  %1089 = load i32*, i32** %1088, align 8
  %1090 = getelementptr inbounds i32, i32* %1089, i64 1
  %1091 = sext i32 %1083 to i64
  %1092 = getelementptr inbounds i32, i32* %1090, i64 %1091
  %1093 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1070, i64 %1087, i32 0, i32 1
  %1094 = load i32*, i32** %1093, align 8
  %1095 = icmp eq i32* %1092, %1094
  br i1 %1095, label %1104, label %1096

1096:                                             ; preds = %1085
  store i32* %1092, i32** %1093, align 8
  br label %1104

1097:                                             ; preds = %1063
  %1098 = load i8*, i8** %597, align 8
  %1099 = sext i32 %1083 to i64
  %1100 = getelementptr inbounds i8, i8* %1098, i64 %1099
  %1101 = load i8*, i8** %598, align 8
  %1102 = icmp eq i8* %1100, %1101
  br i1 %1102, label %1104, label %1103

1103:                                             ; preds = %1097
  store i8* %1100, i8** %598, align 8
  br label %1104

1104:                                             ; preds = %1103, %1097, %1096, %1085, %1058, %1055
  %1105 = load i32*, i32** %578, align 8
  %1106 = getelementptr inbounds i32, i32* %1105, i64 %1039
  %1107 = load i32, i32* %1106, align 4
  %1108 = add nsw i32 %1107, 1
  store i32 %1108, i32* %1106, align 4
  %1109 = icmp slt i32 %1108, %1046
  br i1 %1109, label %1110, label %1116

1110:                                             ; preds = %1104
  %1111 = load i32*, i32** %282, align 8
  %1112 = getelementptr inbounds i32, i32* %1111, i64 %1039
  %1113 = load i32, i32* %1112, align 4
  %1114 = add nsw i32 %1113, %827
  %1115 = add nuw nsw i32 %828, 1
  br label %1212

1116:                                             ; preds = %1104
  %1117 = load i32*, i32** %595, align 8
  %1118 = getelementptr inbounds i32, i32* %1117, i64 %1039
  %1119 = load i32, i32* %1118, align 4
  %1120 = icmp eq i32 %1119, 1
  br i1 %1120, label %1121, label %1203

1121:                                             ; preds = %1116
  %1122 = shl nsw i32 %828, 1
  %1123 = sext i32 %1122 to i64
  %1124 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1124, i64 %1123
  %1126 = or i32 %1122, 1
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1124, i64 %1127
  %1129 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1124, i64 %1127, i32 0, i32 1
  %1130 = bitcast i32** %1129 to i64*
  %1131 = load i64, i64* %1130, align 8
  %1132 = bitcast %"class.std::__1::vector"* %1128 to i64*
  %1133 = load i64, i64* %1132, align 8
  %1134 = sub i64 %1131, %1133
  %1135 = lshr exact i64 %1134, 2
  %1136 = trunc i64 %1135 to i32
  %1137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1124, i64 %1123, i32 0, i32 1
  %1138 = load i32*, i32** %1137, align 8
  %1139 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1124, i64 %1123, i32 0, i32 2, i32 0, i32 0
  %1140 = load i32*, i32** %1139, align 8
  %1141 = icmp ult i32* %1138, %1140
  %1142 = ptrtoint i32* %1140 to i64
  br i1 %1141, label %1143, label %1147

1143:                                             ; preds = %1121
  store i32 %1136, i32* %1138, align 4
  %1144 = getelementptr inbounds i32, i32* %1138, i64 1
  %1145 = ptrtoint i32* %1144 to i64
  %1146 = bitcast i32** %1137 to i64*
  store i64 %1145, i64* %1146, align 8
  br label %1203

1147:                                             ; preds = %1121
  %1148 = ptrtoint i32* %1138 to i64
  %1149 = bitcast i32** %1137 to i64*
  %1150 = bitcast %"class.std::__1::vector"* %1125 to i64*
  %1151 = load i64, i64* %1150, align 8
  %1152 = sub i64 %1148, %1151
  %1153 = ashr exact i64 %1152, 2
  %1154 = add nsw i64 %1153, 1
  %1155 = icmp ugt i64 %1154, 4611686018427387903
  br i1 %1155, label %1156, label %1158

1156:                                             ; preds = %1147
  %1157 = bitcast %"class.std::__1::vector"* %1125 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1157) #7
  unreachable

1158:                                             ; preds = %1147
  %1159 = bitcast i32** %1139 to i64*
  %1160 = sub i64 %1142, %1151
  %1161 = ashr exact i64 %1160, 2
  %1162 = icmp ult i64 %1161, 2305843009213693951
  br i1 %1162, label %1163, label %1171

1163:                                             ; preds = %1158
  %1164 = ashr exact i64 %1160, 1
  %1165 = icmp ult i64 %1164, %1154
  %1166 = select i1 %1165, i64 %1154, i64 %1164
  %1167 = icmp eq i64 %1166, 0
  br i1 %1167, label %1176, label %1168

1168:                                             ; preds = %1163
  %1169 = icmp ugt i64 %1166, 4611686018427387903
  br i1 %1169, label %1170, label %1171

1170:                                             ; preds = %1168
  tail call void @abort() #7
  unreachable

1171:                                             ; preds = %1168, %1158
  %1172 = phi i64 [ %1166, %1168 ], [ 4611686018427387903, %1158 ]
  %1173 = shl i64 %1172, 2
  %1174 = tail call i8* @_Znwm(i64 %1173) #8
  %1175 = bitcast i8* %1174 to i32*
  br label %1176

1176:                                             ; preds = %1171, %1163
  %1177 = phi i64 [ %1172, %1171 ], [ 0, %1163 ]
  %1178 = phi i32* [ %1175, %1171 ], [ null, %1163 ]
  %1179 = getelementptr inbounds i32, i32* %1178, i64 %1153
  %1180 = getelementptr inbounds i32, i32* %1178, i64 %1177
  %1181 = ptrtoint i32* %1180 to i64
  store i32 %1136, i32* %1179, align 4
  %1182 = getelementptr inbounds i32, i32* %1179, i64 1
  %1183 = ptrtoint i32* %1182 to i64
  %1184 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1125, i64 0, i32 0, i32 0
  %1185 = load i32*, i32** %1184, align 8
  %1186 = load i64, i64* %1149, align 8
  %1187 = ptrtoint i32* %1185 to i64
  %1188 = sub i64 %1186, %1187
  %1189 = ashr exact i64 %1188, 2
  %1190 = sub nsw i64 0, %1189
  %1191 = getelementptr inbounds i32, i32* %1179, i64 %1190
  %1192 = ptrtoint i32* %1191 to i64
  %1193 = icmp sgt i64 %1188, 0
  br i1 %1193, label %1194, label %1198

1194:                                             ; preds = %1176
  %1195 = bitcast i32* %1191 to i8*
  %1196 = bitcast i32* %1185 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1195, i8* align 4 %1196, i64 %1188, i1 false) #6
  %1197 = load i32*, i32** %1184, align 8
  br label %1198

1198:                                             ; preds = %1194, %1176
  %1199 = phi i32* [ %1185, %1176 ], [ %1197, %1194 ]
  store i64 %1192, i64* %1150, align 8
  store i64 %1183, i64* %1149, align 8
  store i64 %1181, i64* %1159, align 8
  %1200 = icmp eq i32* %1199, null
  br i1 %1200, label %1203, label %1201

1201:                                             ; preds = %1198
  %1202 = bitcast i32* %1199 to i8*
  tail call void @_ZdlPv(i8* %1202) #8
  br label %1203

1203:                                             ; preds = %1201, %1198, %1143, %1116
  %1204 = load i32*, i32** %578, align 8
  %1205 = getelementptr inbounds i32, i32* %1204, i64 %1039
  store i32 -1, i32* %1205, align 4
  %1206 = load i32*, i32** %282, align 8
  %1207 = getelementptr inbounds i32, i32* %1206, i64 %1039
  %1208 = load i32, i32* %1207, align 4
  %1209 = mul nsw i32 %1208, %1046
  %1210 = sub nsw i32 %827, %1209
  %1211 = add nsw i32 %828, -1
  br label %1212

1212:                                             ; preds = %981, %984, %994, %1034, %1037, %884, %1110, %1203
  %1213 = phi i32 [ %1115, %1110 ], [ %1211, %1203 ], [ %455, %884 ], [ %455, %1037 ], [ %455, %1034 ], [ %455, %994 ], [ %455, %984 ], [ %455, %981 ]
  %1214 = phi i32 [ %1114, %1110 ], [ %1210, %1203 ], [ %827, %884 ], [ %827, %1037 ], [ %827, %1034 ], [ %827, %994 ], [ %827, %984 ], [ %827, %981 ]
  %1215 = icmp sgt i32 %1213, -1
  br i1 %1215, label %826, label %1216

1216:                                             ; preds = %1212
  %1217 = load i32*, i32** %578, align 8
  %1218 = icmp eq i32* %1217, null
  br i1 %1218, label %1223, label %1219

1219:                                             ; preds = %1216
  %1220 = bitcast i32* %1217 to i8*
  %1221 = ptrtoint i32* %1217 to i64
  %1222 = bitcast i32** %579 to i64*
  store i64 %1221, i64* %1222, align 8
  tail call void @_ZdlPv(i8* %1220) #8
  br label %1223

1223:                                             ; preds = %1216, %1219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %577) #6
  %1224 = load i32*, i32** %521, align 16
  %1225 = icmp eq i32* %1224, null
  br i1 %1225, label %1230, label %1226

1226:                                             ; preds = %1223
  %1227 = ptrtoint i32* %1224 to i64
  %1228 = bitcast i32** %522 to i64*
  store i64 %1227, i64* %1228, align 8
  %1229 = bitcast i32* %1224 to i8*
  tail call void @_ZdlPv(i8* %1229) #8
  br label %1230

1230:                                             ; preds = %1223, %1226
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #6
  %1231 = load i32*, i32** %435, align 8
  %1232 = icmp eq i32* %1231, null
  br i1 %1232, label %1237, label %1233

1233:                                             ; preds = %1230
  %1234 = ptrtoint i32* %1231 to i64
  %1235 = bitcast i32** %436 to i64*
  store i64 %1234, i64* %1235, align 8
  %1236 = bitcast i32* %1231 to i8*
  tail call void @_ZdlPv(i8* %1236) #8
  br label %1237

1237:                                             ; preds = %1230, %1233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #6
  %1238 = load i32*, i32** %414, align 8
  %1239 = icmp eq i32* %1238, null
  br i1 %1239, label %1244, label %1240

1240:                                             ; preds = %1237
  %1241 = ptrtoint i32* %1238 to i64
  %1242 = bitcast i32** %415 to i64*
  store i64 %1241, i64* %1242, align 8
  %1243 = bitcast i32* %1238 to i8*
  tail call void @_ZdlPv(i8* %1243) #8
  br label %1244

1244:                                             ; preds = %1237, %1240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #6
  %1245 = load i64*, i64** %358, align 8
  %1246 = icmp eq i64* %1245, null
  br i1 %1246, label %1249, label %1247

1247:                                             ; preds = %1244
  %1248 = bitcast i64* %1245 to i8*
  tail call void @_ZdlPv(i8* %1248) #8
  br label %1249

1249:                                             ; preds = %1244, %1247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %357) #6
  %1250 = load i32*, i32** %282, align 8
  %1251 = icmp eq i32* %1250, null
  br i1 %1251, label %1256, label %1252

1252:                                             ; preds = %1249
  %1253 = ptrtoint i32* %1250 to i64
  %1254 = bitcast i32** %283 to i64*
  store i64 %1253, i64* %1254, align 8
  %1255 = bitcast i32* %1250 to i8*
  tail call void @_ZdlPv(i8* %1255) #8
  br label %1256

1256:                                             ; preds = %1249, %1252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #6
  %1257 = load i32*, i32** %164, align 8
  %1258 = icmp eq i32* %1257, null
  br i1 %1258, label %1263, label %1259

1259:                                             ; preds = %1256
  %1260 = ptrtoint i32* %1257 to i64
  %1261 = bitcast i32** %165 to i64*
  store i64 %1260, i64* %1261, align 8
  %1262 = bitcast i32* %1257 to i8*
  tail call void @_ZdlPv(i8* %1262) #8
  br label %1263

1263:                                             ; preds = %1256, %1259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #6
  %1264 = load i32*, i32** %84, align 8
  %1265 = icmp eq i32* %1264, null
  br i1 %1265, label %1269, label %1266

1266:                                             ; preds = %1263
  %1267 = ptrtoint i32* %1264 to i64
  store i64 %1267, i64* %112, align 8
  %1268 = bitcast i32* %1264 to i8*
  tail call void @_ZdlPv(i8* %1268) #8
  br label %1269

1269:                                             ; preds = %1263, %1266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #6
  %1270 = load i32*, i32** %31, align 8
  %1271 = icmp eq i32* %1270, null
  br i1 %1271, label %1276, label %1272

1272:                                             ; preds = %1269
  %1273 = ptrtoint i32* %1270 to i64
  %1274 = bitcast i32** %32 to i64*
  store i64 %1273, i64* %1274, align 8
  %1275 = bitcast i32* %1270 to i8*
  tail call void @_ZdlPv(i8* %1275) #8
  br label %1276

1276:                                             ; preds = %1269, %1272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  ret i32 0

1277:                                             ; preds = %152
  %1278 = sub nsw i64 %160, %18
  %1279 = shl i64 %1278, 32
  %1280 = ashr exact i64 %1279, 32
  br label %1281

1281:                                             ; preds = %1277, %152
  %1282 = phi i32** [ %55, %1277 ], [ %56, %152 ]
  %1283 = phi i64 [ %1280, %1277 ], [ %160, %152 ]
  %1284 = load i32*, i32** %1282, align 8
  %1285 = getelementptr inbounds i32, i32* %1284, i64 %1283
  %1286 = load i32, i32* %1285, align 4
  %1287 = load i32*, i32** %31, align 8
  %1288 = getelementptr inbounds i32, i32* %1287, i64 %160
  store i32 %1286, i32* %1288, align 4
  %1289 = add nuw nsw i64 %145, 2
  %1290 = add i64 %146, -2
  %1291 = icmp eq i64 %1290, 0
  br i1 %1291, label %64, label %144
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIaE13SparseToDenseEPKa(%"class.tflite::optimize::sparsity::FormatConverter.22"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.23"* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = icmp ugt i64 %8, %14
  %16 = inttoptr i64 %13 to i8*
  br i1 %15, label %17, label %22

17:                                               ; preds = %2
  %18 = sub i64 %8, %14
  tail call void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.23"* %6, i64 %18) #6
  %19 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %6, i64 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = load i64, i64* %10, align 8
  br label %27

22:                                               ; preds = %2
  %23 = icmp ult i64 %8, %14
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %16, i64 %8
  store i8* %25, i8** %9, align 8
  %26 = ptrtoint i8* %25 to i64
  br label %27

27:                                               ; preds = %17, %22, %24
  %28 = phi i64 [ %21, %17 ], [ %11, %22 ], [ %26, %24 ]
  %29 = phi i8* [ %20, %17 ], [ %16, %22 ], [ %16, %24 ]
  %30 = ptrtoint i8* %29 to i64
  %31 = sub i64 %28, %30
  %32 = icmp sgt i64 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %31, i1 false)
  br label %34

34:                                               ; preds = %33, %27
  %35 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3
  %36 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 1
  %37 = bitcast i32** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %35 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #6
  store i32 0, i32* %3, align 4
  %43 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #6
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = shl i64 %41, 30
  %48 = ashr exact i64 %47, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #6
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %34
  %51 = bitcast i32** %45 to i64*
  br label %72

52:                                               ; preds = %34
  %53 = icmp ugt i64 %48, 4611686018427387903
  br i1 %53, label %54, label %56

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %55) #7
  unreachable

56:                                               ; preds = %52
  %57 = ashr exact i64 %47, 30
  %58 = tail call i8* @_Znwm(i64 %57) #8
  %59 = bitcast i8* %58 to i32*
  %60 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %58, i8** %60, align 8
  %61 = getelementptr inbounds i32, i32* %59, i64 %48
  store i32* %61, i32** %46, align 8
  %62 = bitcast i32** %45 to i64*
  %63 = ptrtoint i8* %58 to i64
  %64 = add nsw i64 %48, -1
  %65 = getelementptr i32, i32* %59, i64 %64
  %66 = ptrtoint i32* %65 to i64
  %67 = sub i64 4, %63
  %68 = add i64 %67, %66
  %69 = and i64 %68, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %58, i8 0, i64 %69, i1 false) #6
  %70 = ptrtoint i32* %61 to i64
  store i64 %70, i64* %62, align 8
  %71 = ptrtoint i8* %58 to i64
  br label %72

72:                                               ; preds = %50, %56
  %73 = phi i64* [ %51, %50 ], [ %62, %56 ]
  %74 = phi i8* [ null, %50 ], [ %58, %56 ]
  %75 = phi i64 [ 0, %50 ], [ %71, %56 ]
  %76 = phi i64 [ 0, %50 ], [ %63, %56 ]
  %77 = phi i64 [ 0, %50 ], [ %70, %56 ]
  %78 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 24, i1 false) #6
  %79 = sub i64 %77, %76
  %80 = ashr exact i64 %79, 2
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %104, label %82

82:                                               ; preds = %72
  %83 = icmp ugt i64 %80, 4611686018427387903
  br i1 %83, label %84, label %86

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %85) #7
  unreachable

86:                                               ; preds = %82
  %87 = tail call i8* @_Znwm(i64 %79) #8
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i8**
  store i8* %87, i8** %90, align 8
  %91 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %87, i8** %91, align 8
  %92 = getelementptr inbounds i32, i32* %88, i64 %80
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %92, i32** %93, align 8
  %94 = bitcast i32** %89 to i64*
  %95 = ptrtoint i8* %87 to i64
  %96 = sub i64 %77, %75
  %97 = icmp sgt i64 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %86
  %99 = lshr exact i64 %96, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %74, i64 %96, i1 false) #6
  %100 = getelementptr inbounds i32, i32* %88, i64 %99
  %101 = ptrtoint i32* %100 to i64
  br label %102

102:                                              ; preds = %98, %86
  %103 = phi i64 [ %101, %98 ], [ %95, %86 ]
  store i64 %103, i64* %94, align 8
  br label %104

104:                                              ; preds = %72, %102
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIaE8PopulateEPKaNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i8* %1, %"class.std::__1::vector"* nonnull %5, i32 0, i32 0, i32* nonnull %3)
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = ptrtoint i32* %106 to i64
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %111 = bitcast i32** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast i32* %106 to i8*
  call void @_ZdlPv(i8* %112) #8
  br label %113

113:                                              ; preds = %104, %108
  %114 = load i32*, i32** %44, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %113
  %117 = ptrtoint i32* %114 to i64
  store i64 %117, i64* %73, align 8
  %118 = bitcast i32* %114 to i8*
  call void @_ZdlPv(i8* %118) #8
  br label %119

119:                                              ; preds = %113, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaE8PopulateEPKaNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.22"*, i8*, %"class.std::__1::vector"*, i32, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp eq i64 %17, %10
  %19 = inttoptr i64 %15 to i32*
  br i1 %18, label %20, label %154

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #6
  %32 = shl i64 %26, 30
  %33 = bitcast i32** %31 to i64*
  %34 = bitcast %"class.std::__1::vector"* %7 to i64*
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %20
  %37 = ashr exact i64 %32, 32
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %37) #6
  %38 = load i64, i64* %33, align 8
  %39 = load i64, i64* %34, align 8
  %40 = inttoptr i64 %39 to i32*
  %41 = icmp eq i64 %38, %39
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %60

45:                                               ; preds = %60
  %46 = inttoptr i64 %73 to i32*
  %47 = and i64 %71, 4294967295
  br label %48

48:                                               ; preds = %20, %45, %36
  %49 = phi i32* [ %40, %36 ], [ %46, %45 ], [ null, %20 ]
  %50 = phi i64 [ 0, %36 ], [ %47, %45 ], [ 0, %20 ]
  %51 = load i64, i64* %12, align 8
  %52 = load i64, i64* %14, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp ugt i64 %54, %50
  br i1 %55, label %56, label %109

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %58 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 0
  br label %78

60:                                               ; preds = %42, %60
  %61 = phi i32* [ %40, %42 ], [ %77, %60 ]
  %62 = phi i64 [ 0, %42 ], [ %71, %60 ]
  %63 = load i32*, i32** %43, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %44, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %62
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i32, i32* %61, i64 %69
  store i32 %68, i32* %70, align 4
  %71 = add nuw i64 %62, 1
  %72 = load i64, i64* %33, align 8
  %73 = load i64, i64* %34, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 2
  %76 = icmp ugt i64 %75, %71
  %77 = inttoptr i64 %73 to i32*
  br i1 %76, label %60, label %45

78:                                               ; preds = %107, %56
  %79 = phi i64 [ %52, %56 ], [ %103, %107 ]
  %80 = phi i32* [ %49, %56 ], [ %108, %107 ]
  %81 = phi i64 [ %50, %56 ], [ %101, %107 ]
  %82 = inttoptr i64 %79 to i32*
  %83 = load i32*, i32** %57, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %81
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %85, %28
  %87 = sext i32 %86 to i64
  %88 = load i32*, i32** %58, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %87
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %80, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = load i32*, i32** %59, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %87
  %96 = load i32, i32* %95, align 4
  %97 = mul nsw i32 %96, %93
  %98 = getelementptr inbounds i32, i32* %82, i64 %81
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  store i32 %100, i32* %92, align 4
  %101 = add nuw i64 %81, 1
  %102 = load i64, i64* %12, align 8
  %103 = load i64, i64* %14, align 8
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 2
  %106 = icmp ugt i64 %105, %101
  br i1 %106, label %107, label %109

107:                                              ; preds = %78
  %108 = load i32*, i32** %30, align 8
  br label %78

109:                                              ; preds = %78, %48
  %110 = load i32, i32* %5, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8, i8* %1, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = load i64, i64* %22, align 8
  %115 = load i64, i64* %24, align 8
  %116 = sub i64 %114, %115
  %117 = lshr exact i64 %116, 2
  %118 = trunc i64 %117 to i32
  %119 = add i32 %118, -1
  %120 = icmp sgt i32 %119, -1
  %121 = inttoptr i64 %115 to i32*
  br i1 %120, label %122, label %141

122:                                              ; preds = %109
  %123 = load i32*, i32** %30, align 8
  %124 = sext i32 %119 to i64
  br label %125

125:                                              ; preds = %125, %122
  %126 = phi i64 [ %124, %122 ], [ %140, %125 ]
  %127 = phi i32 [ %119, %122 ], [ %138, %125 ]
  %128 = phi i32 [ 1, %122 ], [ %137, %125 ]
  %129 = phi i64 [ 0, %122 ], [ %134, %125 ]
  %130 = getelementptr inbounds i32, i32* %123, i64 %126
  %131 = load i32, i32* %130, align 4
  %132 = mul nsw i32 %131, %128
  %133 = sext i32 %132 to i64
  %134 = add i64 %129, %133
  %135 = getelementptr inbounds i32, i32* %121, i64 %126
  %136 = load i32, i32* %135, align 4
  %137 = mul nsw i32 %136, %128
  %138 = add nsw i32 %127, -1
  %139 = icmp sgt i32 %127, 0
  %140 = add nsw i64 %126, -1
  br i1 %139, label %125, label %141

141:                                              ; preds = %125, %109
  %142 = phi i64 [ 0, %109 ], [ %134, %125 ]
  %143 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds i8, i8* %144, i64 %142
  store i8 %113, i8* %145, align 1
  %146 = load i32, i32* %5, align 4
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %5, align 4
  %148 = load i32*, i32** %30, align 8
  %149 = icmp eq i32* %148, null
  br i1 %149, label %153, label %150

150:                                              ; preds = %141
  %151 = ptrtoint i32* %148 to i64
  store i64 %151, i64* %33, align 8
  %152 = bitcast i32* %148 to i8*
  call void @_ZdlPv(i8* %152) #8
  br label %153

153:                                              ; preds = %141, %150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  br label %286

154:                                              ; preds = %6
  %155 = shl nsw i32 %3, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7, i32 0, i32 0
  %158 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %157, align 8
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %158, i64 %156, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 %10
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %218

167:                                              ; preds = %154
  %168 = icmp sgt i32 %161, 0
  br i1 %168, label %169, label %286

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %171 = bitcast %"class.std::__1::vector"* %8 to i8*
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %173 = bitcast i32** %172 to i8**
  %174 = bitcast %"class.std::__1::vector"* %8 to i8**
  %175 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %176 = bitcast i32** %172 to i64*
  %177 = add nsw i32 %3, 1
  %178 = mul nsw i32 %161, %4
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %180

180:                                              ; preds = %216, %169
  %181 = phi i32* [ %19, %169 ], [ %217, %216 ]
  %182 = phi i32 [ 0, %169 ], [ %214, %216 ]
  %183 = getelementptr inbounds i32, i32* %181, i64 %10
  store i32 %182, i32* %183, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 24, i1 false) #6
  %184 = load i64, i64* %12, align 8
  %185 = load i64, i64* %14, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = icmp eq i64 %186, 0
  br i1 %188, label %206, label %189

189:                                              ; preds = %180
  %190 = icmp ugt i64 %187, 4611686018427387903
  br i1 %190, label %191, label %193

191:                                              ; preds = %189
  %192 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %192) #7
  unreachable

193:                                              ; preds = %189
  %194 = call i8* @_Znwm(i64 %186) #8
  %195 = bitcast i8* %194 to i32*
  store i8* %194, i8** %173, align 8
  store i8* %194, i8** %174, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 %187
  store i32* %196, i32** %175, align 8
  %197 = ptrtoint i8* %194 to i64
  %198 = icmp sgt i64 %186, 0
  br i1 %198, label %199, label %204

199:                                              ; preds = %193
  %200 = lshr exact i64 %186, 2
  %201 = inttoptr i64 %185 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %194, i8* align 4 %201, i64 %186, i1 false) #6
  %202 = getelementptr inbounds i32, i32* %195, i64 %200
  %203 = ptrtoint i32* %202 to i64
  br label %204

204:                                              ; preds = %199, %193
  %205 = phi i64 [ %203, %199 ], [ %197, %193 ]
  store i64 %205, i64* %176, align 8
  br label %206

206:                                              ; preds = %180, %204
  %207 = add nsw i32 %182, %178
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIaE8PopulateEPKaNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i8* %1, %"class.std::__1::vector"* nonnull %8, i32 %177, i32 %207, i32* %5)
  %208 = load i32*, i32** %179, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = ptrtoint i32* %208 to i64
  store i64 %211, i64* %176, align 8
  %212 = bitcast i32* %208 to i8*
  call void @_ZdlPv(i8* %212) #8
  br label %213

213:                                              ; preds = %206, %210
  %214 = add nuw nsw i32 %182, 1
  %215 = icmp eq i32 %214, %161
  br i1 %215, label %286, label %216

216:                                              ; preds = %213
  %217 = load i32*, i32** %170, align 8
  br label %180

218:                                              ; preds = %154
  %219 = sext i32 %4 to i64
  %220 = getelementptr inbounds i32, i32* %160, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = add nsw i32 %4, 1
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i32, i32* %160, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %221, %225
  br i1 %226, label %227, label %286

227:                                              ; preds = %218
  %228 = or i32 %155, 1
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %158, i64 %229, i32 0, i32 0
  %231 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %232 = bitcast %"class.std::__1::vector"* %9 to i8*
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %234 = bitcast i32** %233 to i8**
  %235 = bitcast %"class.std::__1::vector"* %9 to i8**
  %236 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %237 = bitcast i32** %233 to i64*
  %238 = add nsw i32 %3, 1
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %240 = sext i32 %221 to i64
  br label %241

241:                                              ; preds = %284, %227
  %242 = phi i32* [ %19, %227 ], [ %285, %284 ]
  %243 = phi i64 [ %240, %227 ], [ %278, %284 ]
  %244 = load i32*, i32** %230, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 %243
  %246 = load i32, i32* %245, align 4
  %247 = getelementptr inbounds i32, i32* %242, i64 %10
  store i32 %246, i32* %247, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %232, i8 0, i64 24, i1 false) #6
  %248 = load i64, i64* %12, align 8
  %249 = load i64, i64* %14, align 8
  %250 = sub i64 %248, %249
  %251 = ashr exact i64 %250, 2
  %252 = icmp eq i64 %250, 0
  br i1 %252, label %270, label %253

253:                                              ; preds = %241
  %254 = icmp ugt i64 %251, 4611686018427387903
  br i1 %254, label %255, label %257

255:                                              ; preds = %253
  %256 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %256) #7
  unreachable

257:                                              ; preds = %253
  %258 = call i8* @_Znwm(i64 %250) #8
  %259 = bitcast i8* %258 to i32*
  store i8* %258, i8** %234, align 8
  store i8* %258, i8** %235, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %251
  store i32* %260, i32** %236, align 8
  %261 = ptrtoint i8* %258 to i64
  %262 = icmp sgt i64 %250, 0
  br i1 %262, label %263, label %268

263:                                              ; preds = %257
  %264 = lshr exact i64 %250, 2
  %265 = inttoptr i64 %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %258, i8* align 4 %265, i64 %250, i1 false) #6
  %266 = getelementptr inbounds i32, i32* %259, i64 %264
  %267 = ptrtoint i32* %266 to i64
  br label %268

268:                                              ; preds = %263, %257
  %269 = phi i64 [ %267, %263 ], [ %261, %257 ]
  store i64 %269, i64* %237, align 8
  br label %270

270:                                              ; preds = %241, %268
  %271 = trunc i64 %243 to i32
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIaE8PopulateEPKaNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i8* %1, %"class.std::__1::vector"* nonnull %9, i32 %238, i32 %271, i32* %5)
  %272 = load i32*, i32** %239, align 8
  %273 = icmp eq i32* %272, null
  br i1 %273, label %277, label %274

274:                                              ; preds = %270
  %275 = ptrtoint i32* %272 to i64
  store i64 %275, i64* %237, align 8
  %276 = bitcast i32* %272 to i8*
  call void @_ZdlPv(i8* %276) #8
  br label %277

277:                                              ; preds = %270, %274
  %278 = add nsw i64 %243, 1
  %279 = load i32*, i32** %159, align 8
  %280 = getelementptr inbounds i32, i32* %279, i64 %223
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %281 to i64
  %283 = icmp slt i64 %278, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %277
  %285 = load i32*, i32** %231, align 8
  br label %241

286:                                              ; preds = %277, %213, %218, %167, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_(%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.1"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIfEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEESA_RKNS5_I19TfLiteDimensionTypeNS6_ISB_EEEESA_SA_) align 2 {
  %7 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp eq i64 %13, 0
  br i1 %15, label %43, label %16

16:                                               ; preds = %6
  %17 = icmp ugt i64 %14, 4611686018427387903
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #7
  unreachable

20:                                               ; preds = %16
  %21 = tail call i8* @_Znwm(i64 %13) #8
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i8**
  store i8* %21, i8** %24, align 8
  %25 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i8**
  store i8* %21, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %22, i64 %14
  %27 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %26, i32** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = load i64, i64* %9, align 8
  %31 = bitcast i32** %23 to i64*
  %32 = ptrtoint i8* %21 to i64
  %33 = ptrtoint i32* %29 to i64
  %34 = sub i64 %30, %33
  %35 = icmp sgt i64 %34, 0
  br i1 %35, label %36, label %41

36:                                               ; preds = %20
  %37 = lshr exact i64 %34, 2
  %38 = bitcast i32* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %38, i64 %34, i1 false) #6
  %39 = getelementptr inbounds i32, i32* %22, i64 %37
  %40 = ptrtoint i32* %39 to i64
  br label %41

41:                                               ; preds = %36, %20
  %42 = phi i64 [ %40, %36 ], [ %32, %20 ]
  store i64 %42, i64* %31, align 8
  br label %43

43:                                               ; preds = %6, %41
  %44 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 1
  %45 = bitcast %"class.std::__1::vector"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #6
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %49 = bitcast i32** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.std::__1::vector"* %2 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = sub i64 %50, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp eq i64 %53, 0
  br i1 %55, label %83, label %56

56:                                               ; preds = %43
  %57 = icmp ugt i64 %54, 4611686018427387903
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = bitcast %"class.std::__1::vector"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #7
  unreachable

60:                                               ; preds = %56
  %61 = tail call i8* @_Znwm(i64 %53) #8
  %62 = bitcast i8* %61 to i32*
  %63 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = bitcast i32** %63 to i8**
  store i8* %61, i8** %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %46 to i8**
  store i8* %61, i8** %65, align 8
  %66 = getelementptr inbounds i32, i32* %62, i64 %54
  %67 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store i32* %66, i32** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i64, i64* %49, align 8
  %71 = bitcast i32** %63 to i64*
  %72 = ptrtoint i8* %61 to i64
  %73 = ptrtoint i32* %69 to i64
  %74 = sub i64 %70, %73
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %81

76:                                               ; preds = %60
  %77 = lshr exact i64 %74, 2
  %78 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* align 4 %78, i64 %74, i1 false) #6
  %79 = getelementptr inbounds i32, i32* %62, i64 %77
  %80 = ptrtoint i32* %79 to i64
  br label %81

81:                                               ; preds = %76, %60
  %82 = phi i64 [ %80, %76 ], [ %72, %60 ]
  store i64 %82, i64* %71, align 8
  br label %83

83:                                               ; preds = %43, %81
  %84 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4
  %85 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  %88 = bitcast %"class.std::__1::vector.1"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false)
  %89 = load i64, i64* %87, align 8
  %90 = bitcast %"class.std::__1::vector"* %4 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = ashr exact i64 %92, 2
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %122, label %95

95:                                               ; preds = %83
  %96 = icmp ugt i64 %93, 4611686018427387903
  br i1 %96, label %97, label %99

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector"* %85 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %98) #7
  unreachable

99:                                               ; preds = %95
  %100 = tail call i8* @_Znwm(i64 %92) #8
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 1
  %103 = bitcast i32** %102 to i8**
  store i8* %100, i8** %103, align 8
  %104 = bitcast %"class.std::__1::vector"* %85 to i8**
  store i8* %100, i8** %104, align 8
  %105 = getelementptr inbounds i32, i32* %101, i64 %93
  %106 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i32* %105, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = load i64, i64* %87, align 8
  %110 = bitcast i32** %102 to i64*
  %111 = ptrtoint i8* %100 to i64
  %112 = ptrtoint i32* %108 to i64
  %113 = sub i64 %109, %112
  %114 = icmp sgt i64 %113, 0
  br i1 %114, label %115, label %120

115:                                              ; preds = %99
  %116 = lshr exact i64 %113, 2
  %117 = bitcast i32* %108 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 4 %117, i64 %113, i1 false) #6
  %118 = getelementptr inbounds i32, i32* %101, i64 %116
  %119 = ptrtoint i32* %118 to i64
  br label %120

120:                                              ; preds = %115, %99
  %121 = phi i64 [ %119, %115 ], [ %111, %99 ]
  store i64 %121, i64* %110, align 8
  br label %122

122:                                              ; preds = %83, %120
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6
  %124 = bitcast %"class.std::__1::vector"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #6
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %5 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp eq i64 %130, 0
  br i1 %132, label %160, label %133

133:                                              ; preds = %122
  %134 = icmp ugt i64 %131, 4611686018427387903
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector"* %123 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %136) #7
  unreachable

137:                                              ; preds = %133
  %138 = tail call i8* @_Znwm(i64 %130) #8
  %139 = bitcast i8* %138 to i32*
  %140 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 1
  %141 = bitcast i32** %140 to i8**
  store i8* %138, i8** %141, align 8
  %142 = bitcast %"class.std::__1::vector"* %123 to i8**
  store i8* %138, i8** %142, align 8
  %143 = getelementptr inbounds i32, i32* %139, i64 %131
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store i32* %143, i32** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = load i64, i64* %126, align 8
  %148 = bitcast i32** %140 to i64*
  %149 = ptrtoint i8* %138 to i64
  %150 = ptrtoint i32* %146 to i64
  %151 = sub i64 %147, %150
  %152 = icmp sgt i64 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %137
  %154 = lshr exact i64 %151, 2
  %155 = bitcast i32* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 4 %155, i64 %151, i1 false) #6
  %156 = getelementptr inbounds i32, i32* %139, i64 %154
  %157 = ptrtoint i32* %156 to i64
  br label %158

158:                                              ; preds = %153, %137
  %159 = phi i64 [ %157, %153 ], [ %149, %137 ]
  store i64 %159, i64* %148, align 8
  br label %160

160:                                              ; preds = %122, %158
  %161 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7
  %162 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 2
  %163 = bitcast %"class.std::__1::vector.8"* %161 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 48, i1 false)
  store i64 1, i64* %162, align 8
  %164 = load i64, i64* %9, align 8
  %165 = load i64, i64* %11, align 8
  %166 = sub i64 %164, %165
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %177, label %168

168:                                              ; preds = %160
  %169 = ashr exact i64 %166, 2
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %44, i64 %169) #6
  %170 = load i64, i64* %9, align 8
  %171 = load i64, i64* %11, align 8
  %172 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 1
  %173 = bitcast i32** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::vector.1"* %84 to i64*
  %176 = load i64, i64* %175, align 8
  br label %177

177:                                              ; preds = %160, %168
  %178 = phi i64 [ %176, %168 ], [ 0, %160 ]
  %179 = phi i64 [ %174, %168 ], [ 0, %160 ]
  %180 = phi i64 [ %171, %168 ], [ %165, %160 ]
  %181 = phi i64 [ %170, %168 ], [ %164, %160 ]
  %182 = sub i64 %181, %180
  %183 = ashr exact i64 %182, 2
  %184 = load i64, i64* %126, align 8
  %185 = load i64, i64* %128, align 8
  %186 = sub i64 %184, %185
  %187 = ashr exact i64 %186, 2
  %188 = add nsw i64 %187, %183
  %189 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 1
  %190 = sub i64 %179, %178
  %191 = ashr exact i64 %190, 2
  %192 = icmp ugt i64 %188, %191
  %193 = inttoptr i64 %178 to i32*
  br i1 %192, label %194, label %196

194:                                              ; preds = %177
  %195 = sub nsw i64 %188, %191
  tail call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %84, i64 %195) #6
  br label %200

196:                                              ; preds = %177
  %197 = icmp ult i64 %188, %191
  br i1 %197, label %198, label %200

198:                                              ; preds = %196
  %199 = getelementptr inbounds i32, i32* %193, i64 %188
  store i32* %199, i32** %189, align 8
  br label %200

200:                                              ; preds = %194, %196, %198
  %201 = load i64, i64* %9, align 8
  %202 = load i64, i64* %11, align 8
  %203 = icmp eq i64 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %44, i64 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  br label %228

211:                                              ; preds = %275, %200
  %212 = phi i64 [ %201, %200 ], [ %279, %275 ]
  %213 = phi i64 [ %201, %200 ], [ %278, %275 ]
  %214 = load i64, i64* %126, align 8
  %215 = load i64, i64* %128, align 8
  %216 = icmp eq i64 %214, %215
  br i1 %216, label %283, label %217

217:                                              ; preds = %211
  %218 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %84, i64 0, i32 0, i32 0
  %219 = sub i64 %213, %212
  %220 = ashr exact i64 %219, 2
  %221 = load i32*, i32** %218, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 %220
  store i32 0, i32* %222, align 4
  %223 = load i64, i64* %126, align 8
  %224 = load i64, i64* %128, align 8
  %225 = sub i64 %223, %224
  %226 = ashr exact i64 %225, 2
  %227 = icmp ugt i64 %226, 1
  br i1 %227, label %284, label %283

228:                                              ; preds = %204, %275
  %229 = phi i64 [ 0, %204 ], [ %277, %275 ]
  %230 = phi i32 [ 0, %204 ], [ %276, %275 ]
  %231 = load i32*, i32** %205, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 %229
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = load i32*, i32** %206, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 %234
  %237 = load i32, i32* %236, align 4
  %238 = load i32*, i32** %207, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %229
  store i32 %237, i32* %239, align 4
  %240 = load i32*, i32** %208, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 %229
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = load i64, i64* %162, align 8
  %245 = mul i64 %244, %243
  store i64 %245, i64* %162, align 8
  %246 = sext i32 %230 to i64
  %247 = load i64, i64* %126, align 8
  %248 = load i64, i64* %128, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 2
  %251 = icmp ugt i64 %250, %246
  br i1 %251, label %252, label %269

252:                                              ; preds = %228
  %253 = inttoptr i64 %248 to i32*
  %254 = getelementptr inbounds i32, i32* %253, i64 %246
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = icmp eq i64 %229, %256
  br i1 %257, label %258, label %269

258:                                              ; preds = %252
  %259 = load i32*, i32** %208, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 %229
  %261 = load i32, i32* %260, align 4
  %262 = load i32*, i32** %210, align 8
  %263 = getelementptr inbounds i32, i32* %262, i64 %246
  %264 = load i32, i32* %263, align 4
  %265 = sdiv i32 %261, %264
  %266 = load i32*, i32** %209, align 8
  %267 = getelementptr inbounds i32, i32* %266, i64 %229
  store i32 %265, i32* %267, align 4
  %268 = add nsw i32 %230, 1
  br label %275

269:                                              ; preds = %252, %228
  %270 = load i32*, i32** %208, align 8
  %271 = getelementptr inbounds i32, i32* %270, i64 %229
  %272 = load i32, i32* %271, align 4
  %273 = load i32*, i32** %209, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %229
  store i32 %272, i32* %274, align 4
  br label %275

275:                                              ; preds = %258, %269
  %276 = phi i32 [ %268, %258 ], [ %230, %269 ]
  %277 = add nuw i64 %229, 1
  %278 = load i64, i64* %9, align 8
  %279 = load i64, i64* %11, align 8
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 2
  %282 = icmp ugt i64 %281, %277
  br i1 %282, label %228, label %211

283:                                              ; preds = %284, %217, %211
  ret void

284:                                              ; preds = %217, %284
  %285 = phi i64 [ %293, %284 ], [ 1, %217 ]
  %286 = load i64, i64* %9, align 8
  %287 = load i64, i64* %11, align 8
  %288 = sub i64 %286, %287
  %289 = ashr exact i64 %288, 2
  %290 = add nsw i64 %289, %285
  %291 = load i32*, i32** %218, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 %290
  store i32 0, i32* %292, align 4
  %293 = add i64 %285, 1
  %294 = load i64, i64* %126, align 8
  %295 = load i64, i64* %128, align 8
  %296 = sub i64 %294, %295
  %297 = ashr exact i64 %296, 2
  %298 = icmp ugt i64 %297, %293
  br i1 %298, label %284, label %283
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfEC2ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter.32"*, %"class.std::__1::vector"* dereferenceable(24), %struct.TfLiteSparsity* dereferenceable(32)) unnamed_addr #0 comdat($_ZN6tflite8optimize8sparsity15FormatConverterIfEC5ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity) align 2 {
  %4 = alloca %"class.std::__1::vector", align 16
  %5 = alloca %"class.std::__1::vector", align 16
  %6 = alloca [1 x i32], align 4
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #6
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 2
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %45, label %18

18:                                               ; preds = %3
  %19 = icmp ugt i64 %16, 4611686018427387903
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #7
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #8
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast i32** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds i32, i32* %24, i64 %16
  %29 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %28, i32** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = load i64, i64* %11, align 8
  %33 = bitcast i32** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = ptrtoint i32* %31 to i64
  %36 = sub i64 %32, %35
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %43

38:                                               ; preds = %22
  %39 = lshr exact i64 %36, 2
  %40 = bitcast i32* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 %40, i64 %36, i1 false) #6
  %41 = getelementptr inbounds i32, i32* %24, i64 %39
  %42 = ptrtoint i32* %41 to i64
  br label %43

43:                                               ; preds = %38, %22
  %44 = phi i64 [ %42, %38 ], [ %34, %22 ]
  store i64 %44, i64* %33, align 8
  br label %45

45:                                               ; preds = %3, %43
  %46 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 1
  %47 = bitcast %"class.std::__1::vector"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #6
  %48 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3
  %49 = bitcast %"class.std::__1::vector"* %48 to i8*
  %50 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4
  %51 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6
  %53 = bitcast %"class.std::__1::vector"* %52 to i8*
  %54 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 2
  %56 = bitcast %"class.std::__1::vector"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 144, i1 false)
  store i64 1, i64* %55, align 8
  %57 = load i64, i64* %11, align 8
  %58 = load i64, i64* %13, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %60, label %225

60:                                               ; preds = %225, %45
  %61 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #6
  %62 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 0
  %63 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %61, i8 0, i64 24, i1 false) #6, !alias.scope !29
  %65 = icmp eq %struct.TfLiteIntArray* %63, null
  br i1 %65, label %84, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !29
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %84, label %70

70:                                               ; preds = %66
  %71 = sext i32 %68 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %4, i64 %71) #6
  %72 = load i32, i32* %67, align 4, !noalias !29
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %70, %74
  %75 = phi i64 [ %80, %74 ], [ 0, %70 ]
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %63, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4, !noalias !29
  %78 = load i32*, i32** %64, align 16, !alias.scope !29
  %79 = getelementptr inbounds i32, i32* %78, i64 %75
  store i32 %77, i32* %79, align 4
  %80 = add nuw i64 %75, 1
  %81 = load i32, i32* %67, align 4, !noalias !29
  %82 = sext i32 %81 to i64
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %74, label %84

84:                                               ; preds = %74, %60, %66, %70
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %48, i64 0, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = ptrtoint i32* %86 to i64
  %90 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 1
  %91 = bitcast i32** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = bitcast i32* %86 to i8*
  call void @_ZdlPv(i8* %92) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #6
  br label %93

93:                                               ; preds = %84, %88
  %94 = bitcast %"class.std::__1::vector"* %4 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 16
  %96 = bitcast %"class.std::__1::vector"* %48 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 1
  %103 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #6
  %104 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #6
  %105 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %104, i8 0, i64 24, i1 false) #6, !alias.scope !32
  %106 = icmp eq %struct.TfLiteIntArray* %103, null
  br i1 %106, label %125, label %107

107:                                              ; preds = %93
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 0
  %109 = load i32, i32* %108, align 4, !noalias !32
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %107
  %112 = sext i32 %109 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %5, i64 %112) #6
  %113 = load i32, i32* %108, align 4, !noalias !32
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %111, %115
  %116 = phi i64 [ %121, %115 ], [ 0, %111 ]
  %117 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %103, i64 0, i32 1, i64 %116
  %118 = load i32, i32* %117, align 4, !noalias !32
  %119 = load i32*, i32** %105, align 16, !alias.scope !32
  %120 = getelementptr inbounds i32, i32* %119, i64 %116
  store i32 %118, i32* %120, align 4
  %121 = add nuw i64 %116, 1
  %122 = load i32, i32* %108, align 4, !noalias !32
  %123 = sext i32 %122 to i64
  %124 = icmp ult i64 %121, %123
  br i1 %124, label %115, label %125

125:                                              ; preds = %115, %93, %107, %111
  %126 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %52, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  call void @_ZdlPv(i8* %133) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #6
  br label %134

134:                                              ; preds = %125, %129
  %135 = bitcast %"class.std::__1::vector"* %52 to i64*
  %136 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 16
  %138 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 1
  %139 = bitcast i32** %138 to i64*
  %140 = bitcast %"class.std::__1::vector"* %52 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 16
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.std::__1::vector.1"* %50 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = sext i32 %147 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #6
  %154 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 3
  %155 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 1
  %156 = sub i64 %150, %152
  %157 = ashr exact i64 %156, 2
  %158 = icmp ult i64 %157, %153
  %159 = inttoptr i64 %152 to i32*
  br i1 %158, label %160, label %162

160:                                              ; preds = %134
  %161 = sub nsw i64 %153, %157
  call void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"* %50, i64 %161) #6
  br label %166

162:                                              ; preds = %134
  %163 = icmp ugt i64 %157, %153
  br i1 %163, label %164, label %166

164:                                              ; preds = %162
  %165 = getelementptr inbounds i32, i32* %159, i64 %153
  store i32* %165, i32** %155, align 8
  br label %166

166:                                              ; preds = %160, %162, %164
  %167 = load i32, i32* %154, align 8
  %168 = shl nsw i32 %167, 1
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7, i32 0, i32 1
  %171 = bitcast %"class.std::__1::vector"** %170 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %"class.std::__1::vector.8"* %54 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %172, %174
  %176 = sdiv exact i64 %175, 24
  %177 = icmp ult i64 %176, %169
  %178 = inttoptr i64 %174 to %"class.std::__1::vector"*
  %179 = inttoptr i64 %172 to %"class.std::__1::vector"*
  br i1 %177, label %180, label %182

180:                                              ; preds = %166
  %181 = sub nsw i64 %169, %176
  call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %54, i64 %181) #6
  br label %201

182:                                              ; preds = %166
  %183 = icmp ugt i64 %176, %169
  br i1 %183, label %184, label %201

184:                                              ; preds = %182
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %178, i64 %169
  %186 = icmp eq %"class.std::__1::vector"* %185, %179
  br i1 %186, label %200, label %187

187:                                              ; preds = %184, %198
  %188 = phi %"class.std::__1::vector"* [ %189, %198 ], [ %179, %184 ]
  %189 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1
  %190 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %189, i64 0, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = icmp eq i32* %191, null
  br i1 %192, label %198, label %193

193:                                              ; preds = %187
  %194 = ptrtoint i32* %191 to i64
  %195 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %188, i64 -1, i32 0, i32 1
  %196 = bitcast i32** %195 to i64*
  store i64 %194, i64* %196, align 8
  %197 = bitcast i32* %191 to i8*
  call void @_ZdlPv(i8* %197) #8
  br label %198

198:                                              ; preds = %193, %187
  %199 = icmp eq %"class.std::__1::vector"* %189, %185
  br i1 %199, label %200, label %187

200:                                              ; preds = %198, %184
  store %"class.std::__1::vector"* %185, %"class.std::__1::vector"** %170, align 8
  br label %201

201:                                              ; preds = %180, %182, %200
  %202 = load i32, i32* %154, align 8
  %203 = icmp sgt i32 %202, 0
  br i1 %203, label %204, label %240

204:                                              ; preds = %201
  %205 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %206 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %50, i64 0, i32 0, i32 0
  %207 = bitcast %"class.std::__1::vector"* %7 to i8*
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %209 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %54, i64 0, i32 0, i32 0
  %210 = bitcast %"class.std::__1::vector"* %7 to i64*
  %211 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %212 = bitcast i32** %211 to i64*
  %213 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = bitcast i32** %213 to i64*
  %215 = bitcast %"class.std::__1::vector"* %8 to i8*
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::vector"* %8 to i64*
  %218 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %219 = bitcast i32** %218 to i64*
  %220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %221 = bitcast i32** %220 to i64*
  %222 = bitcast [1 x i32]* %6 to i8*
  %223 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 0
  %224 = getelementptr inbounds [1 x i32], [1 x i32]* %6, i64 0, i64 1
  br label %291

225:                                              ; preds = %45, %225
  %226 = phi i64 [ %233, %225 ], [ 1, %45 ]
  %227 = phi i64 [ %236, %225 ], [ %58, %45 ]
  %228 = phi i64 [ %234, %225 ], [ 0, %45 ]
  %229 = inttoptr i64 %227 to i32*
  %230 = getelementptr inbounds i32, i32* %229, i64 %228
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = mul i64 %226, %232
  store i64 %233, i64* %55, align 8
  %234 = add nuw i64 %228, 1
  %235 = load i64, i64* %11, align 8
  %236 = load i64, i64* %13, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 2
  %239 = icmp ugt i64 %238, %234
  br i1 %239, label %225, label %60

240:                                              ; preds = %398, %201
  %241 = load i64, i64* %11, align 8
  %242 = load i64, i64* %13, align 8
  %243 = sub i64 %241, %242
  %244 = lshr exact i64 %243, 2
  %245 = trunc i64 %244 to i32
  %246 = shl i64 %243, 30
  %247 = ashr exact i64 %246, 32
  %248 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 1, i32 0, i32 1
  %249 = bitcast i32** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.std::__1::vector"* %46 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = sub i64 %250, %252
  %254 = ashr exact i64 %253, 2
  %255 = icmp ugt i64 %247, %254
  %256 = inttoptr i64 %252 to i32*
  br i1 %255, label %257, label %259

257:                                              ; preds = %240
  %258 = sub nsw i64 %247, %254
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %46, i64 %258) #6
  br label %263

259:                                              ; preds = %240
  %260 = icmp ult i64 %247, %254
  br i1 %260, label %261, label %263

261:                                              ; preds = %259
  %262 = getelementptr inbounds i32, i32* %256, i64 %247
  store i32* %262, i32** %248, align 8
  br label %263

263:                                              ; preds = %257, %259, %261
  %264 = load i64, i64* %139, align 8
  %265 = load i64, i64* %135, align 8
  %266 = sub i64 %264, %265
  %267 = ashr exact i64 %266, 2
  %268 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 1
  %269 = bitcast i32** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast %"class.std::__1::vector"* %51 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = sub i64 %270, %272
  %274 = ashr exact i64 %273, 2
  %275 = icmp ugt i64 %267, %274
  %276 = inttoptr i64 %272 to i32*
  br i1 %275, label %277, label %279

277:                                              ; preds = %263
  %278 = sub nsw i64 %267, %274
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %51, i64 %278) #6
  br label %283

279:                                              ; preds = %263
  %280 = icmp ult i64 %267, %274
  br i1 %280, label %281, label %283

281:                                              ; preds = %279
  %282 = getelementptr inbounds i32, i32* %276, i64 %267
  store i32* %282, i32** %268, align 8
  br label %283

283:                                              ; preds = %277, %279, %281
  %284 = icmp sgt i32 %245, 0
  br i1 %284, label %285, label %403

285:                                              ; preds = %283
  %286 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %287 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %46, i64 0, i32 0, i32 0
  %288 = getelementptr inbounds %struct.TfLiteSparsity, %struct.TfLiteSparsity* %2, i64 0, i32 2
  %289 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %51, i64 0, i32 0, i32 0
  %290 = and i64 %244, 4294967295
  br label %404

291:                                              ; preds = %204, %398
  %292 = phi i64 [ 0, %204 ], [ %399, %398 ]
  %293 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %294 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %293, i64 %292, i32 0
  %295 = load i32, i32* %294, align 8
  %296 = load i32*, i32** %206, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %292
  store i32 %295, i32* %297, align 4
  %298 = load i32*, i32** %206, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 %292
  %300 = load i32, i32* %299, align 4
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %309

302:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %222) #6
  %303 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %304 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %303, i64 %292, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %223, align 4
  %306 = shl nuw nsw i64 %292, 1
  %307 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %308 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %307, i64 %306
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %308, i32* nonnull %223, i32* %224) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %222) #6
  br label %398

309:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #6
  %310 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  %311 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %310, i64 %292, i32 2
  %312 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %311, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 0, i64 24, i1 false) #6, !alias.scope !35
  %313 = icmp eq %struct.TfLiteIntArray* %312, null
  br i1 %313, label %332, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 0
  %316 = load i32, i32* %315, align 4, !noalias !35
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %332, label %318

318:                                              ; preds = %314
  %319 = sext i32 %316 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %319) #6
  %320 = load i32, i32* %315, align 4, !noalias !35
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %332, label %322

322:                                              ; preds = %318, %322
  %323 = phi i64 [ %328, %322 ], [ 0, %318 ]
  %324 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %312, i64 0, i32 1, i64 %323
  %325 = load i32, i32* %324, align 4, !noalias !35
  %326 = load i32*, i32** %208, align 8, !alias.scope !35
  %327 = getelementptr inbounds i32, i32* %326, i64 %323
  store i32 %325, i32* %327, align 4
  %328 = add nuw i64 %323, 1
  %329 = load i32, i32* %315, align 4, !noalias !35
  %330 = sext i32 %329 to i64
  %331 = icmp ult i64 %328, %330
  br i1 %331, label %322, label %332

332:                                              ; preds = %322, %309, %314, %318
  %333 = shl nuw nsw i64 %292, 1
  %334 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %335 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333
  %336 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %335, i64 0, i32 0, i32 0
  %337 = load i32*, i32** %336, align 8
  %338 = icmp eq i32* %337, null
  br i1 %338, label %345, label %339

339:                                              ; preds = %332
  %340 = ptrtoint i32* %337 to i64
  %341 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %342 = bitcast i32** %341 to i64*
  store i64 %340, i64* %342, align 8
  %343 = bitcast i32* %337 to i8*
  call void @_ZdlPv(i8* %343) #8
  %344 = bitcast %"class.std::__1::vector"* %335 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %344, i8 0, i64 24, i1 false) #6
  br label %345

345:                                              ; preds = %332, %339
  %346 = load i64, i64* %210, align 8
  %347 = bitcast %"class.std::__1::vector"* %335 to i64*
  store i64 %346, i64* %347, align 8
  %348 = load i64, i64* %212, align 8
  %349 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 1
  %350 = bitcast i32** %349 to i64*
  store i64 %348, i64* %350, align 8
  %351 = load i64, i64* %214, align 8
  %352 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %334, i64 %333, i32 0, i32 2, i32 0, i32 0
  %353 = bitcast i32** %352 to i64*
  store i64 %351, i64* %353, align 8
  %354 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %205, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #6
  %355 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %354, i64 %292, i32 3
  %356 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %355, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %215, i8 0, i64 24, i1 false) #6, !alias.scope !38
  %357 = icmp eq %struct.TfLiteIntArray* %356, null
  br i1 %357, label %376, label %358

358:                                              ; preds = %345
  %359 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 0
  %360 = load i32, i32* %359, align 4, !noalias !38
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %376, label %362

362:                                              ; preds = %358
  %363 = sext i32 %360 to i64
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %8, i64 %363) #6
  %364 = load i32, i32* %359, align 4, !noalias !38
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %376, label %366

366:                                              ; preds = %362, %366
  %367 = phi i64 [ %372, %366 ], [ 0, %362 ]
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %356, i64 0, i32 1, i64 %367
  %369 = load i32, i32* %368, align 4, !noalias !38
  %370 = load i32*, i32** %216, align 8, !alias.scope !38
  %371 = getelementptr inbounds i32, i32* %370, i64 %367
  store i32 %369, i32* %371, align 4
  %372 = add nuw i64 %367, 1
  %373 = load i32, i32* %359, align 4, !noalias !38
  %374 = sext i32 %373 to i64
  %375 = icmp ult i64 %372, %374
  br i1 %375, label %366, label %376

376:                                              ; preds = %366, %345, %358, %362
  %377 = or i64 %333, 1
  %378 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %209, align 8
  %379 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377
  %380 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %379, i64 0, i32 0, i32 0
  %381 = load i32*, i32** %380, align 8
  %382 = icmp eq i32* %381, null
  br i1 %382, label %389, label %383

383:                                              ; preds = %376
  %384 = ptrtoint i32* %381 to i64
  %385 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %386 = bitcast i32** %385 to i64*
  store i64 %384, i64* %386, align 8
  %387 = bitcast i32* %381 to i8*
  call void @_ZdlPv(i8* %387) #8
  %388 = bitcast %"class.std::__1::vector"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %388, i8 0, i64 24, i1 false) #6
  br label %389

389:                                              ; preds = %383, %376
  %390 = load i64, i64* %217, align 8
  %391 = bitcast %"class.std::__1::vector"* %379 to i64*
  store i64 %390, i64* %391, align 8
  %392 = load i64, i64* %219, align 8
  %393 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 1
  %394 = bitcast i32** %393 to i64*
  store i64 %392, i64* %394, align 8
  %395 = load i64, i64* %221, align 8
  %396 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %378, i64 %377, i32 0, i32 2, i32 0, i32 0
  %397 = bitcast i32** %396 to i64*
  store i64 %395, i64* %397, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #6
  br label %398

398:                                              ; preds = %302, %389
  %399 = add nuw nsw i64 %292, 1
  %400 = load i32, i32* %154, align 8
  %401 = sext i32 %400 to i64
  %402 = icmp slt i64 %399, %401
  br i1 %402, label %291, label %240

403:                                              ; preds = %447, %283
  ret void

404:                                              ; preds = %447, %285
  %405 = phi i64 [ 0, %285 ], [ %449, %447 ]
  %406 = phi i32 [ 0, %285 ], [ %448, %447 ]
  %407 = sext i32 %406 to i64
  %408 = load i64, i64* %139, align 8
  %409 = load i64, i64* %135, align 8
  %410 = sub i64 %408, %409
  %411 = ashr exact i64 %410, 2
  %412 = icmp ugt i64 %411, %407
  br i1 %412, label %413, label %441

413:                                              ; preds = %404
  %414 = inttoptr i64 %409 to i32*
  %415 = getelementptr inbounds i32, i32* %414, i64 %407
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = icmp eq i64 %405, %417
  br i1 %418, label %419, label %441

419:                                              ; preds = %413
  %420 = add nsw i32 %406, %245
  %421 = sext i32 %420 to i64
  %422 = load i32*, i32** %85, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 %421
  %424 = load i32, i32* %423, align 4
  %425 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %426 = sext i32 %424 to i64
  %427 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %425, i64 %426, i32 1
  %428 = load i32, i32* %427, align 4
  %429 = load i32*, i32** %289, align 8
  %430 = getelementptr inbounds i32, i32* %429, i64 %407
  store i32 %428, i32* %430, align 4
  %431 = load i32*, i32** %286, align 8
  %432 = getelementptr inbounds i32, i32* %431, i64 %405
  %433 = load i32, i32* %432, align 4
  %434 = load %struct.TfLiteDimensionMetadata*, %struct.TfLiteDimensionMetadata** %288, align 8
  %435 = getelementptr inbounds %struct.TfLiteDimensionMetadata, %struct.TfLiteDimensionMetadata* %434, i64 %426, i32 1
  %436 = load i32, i32* %435, align 4
  %437 = sdiv i32 %433, %436
  %438 = load i32*, i32** %287, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 %405
  store i32 %437, i32* %439, align 4
  %440 = add nsw i32 %406, 1
  br label %447

441:                                              ; preds = %413, %404
  %442 = load i32*, i32** %286, align 8
  %443 = getelementptr inbounds i32, i32* %442, i64 %405
  %444 = load i32, i32* %443, align 4
  %445 = load i32*, i32** %287, align 8
  %446 = getelementptr inbounds i32, i32* %445, i64 %405
  store i32 %444, i32* %446, align 4
  br label %447

447:                                              ; preds = %419, %441
  %448 = phi i32 [ %440, %419 ], [ %406, %441 ]
  %449 = add nuw nsw i64 %405, 1
  %450 = icmp eq i64 %449, %290
  br i1 %450, label %403, label %404
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfE7GetDataEv(%"class.std::__1::vector.33"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter.32"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %1, i64 0, i32 8
  %4 = bitcast %"class.std::__1::vector.33"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #6
  %5 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %1, i64 0, i32 8, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.33"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 2
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %35, label %13

13:                                               ; preds = %2
  %14 = icmp ugt i64 %11, 4611686018427387903
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #7
  unreachable

17:                                               ; preds = %13
  %18 = tail call i8* @_Znwm(i64 %10) #8
  %19 = bitcast i8* %18 to float*
  %20 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %21 = bitcast float** %20 to i8**
  store i8* %18, i8** %21, align 8
  %22 = bitcast %"class.std::__1::vector.33"* %0 to i8**
  store i8* %18, i8** %22, align 8
  %23 = getelementptr inbounds float, float* %19, i64 %11
  %24 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store float* %23, float** %24, align 8
  %25 = bitcast float** %20 to i64*
  %26 = ptrtoint i8* %18 to i64
  %27 = icmp sgt i64 %10, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %17
  %29 = lshr exact i64 %10, 2
  %30 = inttoptr i64 %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 4 %30, i64 %10, i1 false) #6
  %31 = getelementptr inbounds float, float* %19, i64 %29
  %32 = ptrtoint float* %31 to i64
  br label %33

33:                                               ; preds = %28, %17
  %34 = phi i64 [ %32, %28 ], [ %26, %17 ]
  store i64 %34, i64* %25, align 8
  br label %35

35:                                               ; preds = %2, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfE14GetDimMetadataEv(%"class.std::__1::vector.8"* noalias sret, %"class.tflite::optimize::sparsity::FormatConverter.32"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEC2ERKS5_(%"class.std::__1::vector.8"* %0, %"class.std::__1::vector.8"* dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIfE13DenseToSparseEPKf(%"class.tflite::optimize::sparsity::FormatConverter.32"*, float*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector.15", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector", align 16
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 2
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = add i32 %28, %19
  %30 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #6
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = sext i32 %29 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #6
  %35 = icmp eq i32 %29, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %2
  %37 = icmp slt i32 %29, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %39) #7
  unreachable

40:                                               ; preds = %36
  %41 = shl nsw i64 %34, 2
  %42 = tail call i8* @_Znwm(i64 %41) #8
  %43 = bitcast i8* %42 to i32*
  %44 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %42, i8** %44, align 8
  %45 = getelementptr inbounds i32, i32* %43, i64 %34
  store i32* %45, i32** %33, align 8
  %46 = bitcast i32** %32 to i64*
  %47 = ptrtoint i8* %42 to i64
  %48 = add nsw i64 %34, -1
  %49 = getelementptr i32, i32* %43, i64 %48
  %50 = ptrtoint i32* %49 to i64
  %51 = sub i64 4, %47
  %52 = add i64 %51, %50
  %53 = and i64 %52, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %42, i8 0, i64 %53, i1 false) #6
  %54 = ptrtoint i32* %45 to i64
  store i64 %54, i64* %46, align 8
  %55 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 0
  %56 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = shl i64 %17, 30
  %58 = ashr exact i64 %57, 32
  %59 = zext i32 %29 to i64
  %60 = and i64 %59, 1
  %61 = icmp eq i32 %29, 1
  br i1 %61, label %64, label %62

62:                                               ; preds = %40
  %63 = sub nsw i64 %59, %60
  br label %144

64:                                               ; preds = %1303, %40
  %65 = phi i64 [ 0, %40 ], [ %1311, %1303 ]
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %64
  %68 = icmp slt i64 %65, %58
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = sub nsw i64 %65, %18
  %71 = shl i64 %70, 32
  %72 = ashr exact i64 %71, 32
  br label %73

73:                                               ; preds = %69, %67
  %74 = phi i32** [ %55, %69 ], [ %56, %67 ]
  %75 = phi i64 [ %72, %69 ], [ %65, %67 ]
  %76 = load i32*, i32** %74, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %75
  %78 = load i32, i32* %77, align 4
  %79 = load i32*, i32** %31, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 %65
  store i32 %78, i32* %80, align 4
  br label %81

81:                                               ; preds = %73, %64, %2
  %82 = phi i1 [ false, %2 ], [ true, %64 ], [ true, %73 ]
  %83 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #6
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = shl i64 %17, 30
  %88 = ashr exact i64 %87, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 24, i1 false) #6
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = bitcast i32** %85 to i64*
  br label %111

92:                                               ; preds = %81
  %93 = icmp ugt i64 %88, 4611686018427387903
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %95) #7
  unreachable

96:                                               ; preds = %92
  %97 = ashr exact i64 %87, 30
  %98 = tail call i8* @_Znwm(i64 %97) #8
  %99 = bitcast i8* %98 to i32*
  %100 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %98, i8** %100, align 8
  %101 = getelementptr inbounds i32, i32* %99, i64 %88
  store i32* %101, i32** %86, align 8
  %102 = bitcast i32** %85 to i64*
  %103 = ptrtoint i8* %98 to i64
  %104 = add nsw i64 %88, -1
  %105 = getelementptr i32, i32* %99, i64 %104
  %106 = ptrtoint i32* %105 to i64
  %107 = sub i64 4, %103
  %108 = add i64 %107, %106
  %109 = and i64 %108, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %98, i8 0, i64 %109, i1 false) #6
  %110 = ptrtoint i32* %101 to i64
  store i64 %110, i64* %102, align 8
  br label %111

111:                                              ; preds = %90, %96
  %112 = phi i64* [ %91, %90 ], [ %102, %96 ]
  %113 = phi i64 [ 0, %90 ], [ %103, %96 ]
  %114 = phi i64 [ 0, %90 ], [ %110, %96 ]
  %115 = sub i64 %114, %113
  %116 = ashr exact i64 %115, 2
  %117 = add nsw i64 %116, -1
  %118 = inttoptr i64 %113 to i32*
  %119 = getelementptr inbounds i32, i32* %118, i64 %117
  store i32 1, i32* %119, align 4
  %120 = add i32 %19, -1
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %162

122:                                              ; preds = %111
  %123 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 0
  %124 = sext i32 %120 to i64
  %125 = and i64 %124, 1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %140, label %127

127:                                              ; preds = %122
  %128 = load i32*, i32** %84, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 %124
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %123, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 %124
  %133 = load i32, i32* %132, align 4
  %134 = mul nsw i32 %133, %130
  %135 = shl i64 %17, 30
  %136 = add i64 %135, -8589934592
  %137 = ashr exact i64 %136, 32
  %138 = getelementptr inbounds i32, i32* %128, i64 %137
  store i32 %134, i32* %138, align 4
  %139 = add nsw i64 %124, -1
  br label %140

140:                                              ; preds = %122, %127
  %141 = phi i64 [ %124, %122 ], [ %139, %127 ]
  %142 = phi i64 [ %18, %122 ], [ %124, %127 ]
  %143 = icmp eq i32 %120, 1
  br i1 %143, label %162, label %201

144:                                              ; preds = %1303, %62
  %145 = phi i64 [ 0, %62 ], [ %1311, %1303 ]
  %146 = phi i64 [ %63, %62 ], [ %1312, %1303 ]
  %147 = icmp slt i64 %145, %58
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = sub nsw i64 %145, %18
  %150 = shl i64 %149, 32
  %151 = ashr exact i64 %150, 32
  br label %152

152:                                              ; preds = %144, %148
  %153 = phi i32** [ %55, %148 ], [ %56, %144 ]
  %154 = phi i64 [ %151, %148 ], [ %145, %144 ]
  %155 = load i32*, i32** %153, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %31, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 %145
  store i32 %157, i32* %159, align 4
  %160 = or i64 %145, 1
  %161 = icmp slt i64 %160, %58
  br i1 %161, label %1303, label %1299

162:                                              ; preds = %140, %201, %111
  %163 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #6
  %164 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %166 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 0, i64 24, i1 false) #6
  br i1 %35, label %186, label %167

167:                                              ; preds = %162
  %168 = icmp slt i32 %29, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %167
  %170 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %170) #7
  unreachable

171:                                              ; preds = %167
  %172 = shl nsw i64 %34, 2
  %173 = tail call i8* @_Znwm(i64 %172) #8
  %174 = bitcast i8* %173 to i32*
  %175 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %173, i8** %175, align 8
  %176 = getelementptr inbounds i32, i32* %174, i64 %34
  store i32* %176, i32** %166, align 8
  %177 = bitcast i32** %165 to i64*
  %178 = ptrtoint i8* %173 to i64
  %179 = add nsw i64 %34, -1
  %180 = getelementptr i32, i32* %174, i64 %179
  %181 = ptrtoint i32* %180 to i64
  %182 = sub i64 4, %178
  %183 = add i64 %182, %181
  %184 = and i64 %183, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %173, i8 0, i64 %184, i1 false) #6
  %185 = ptrtoint i32* %176 to i64
  store i64 %185, i64* %177, align 8
  br label %186

186:                                              ; preds = %162, %171
  %187 = phi i32* [ null, %162 ], [ %174, %171 ]
  %188 = icmp sgt i32 %19, 0
  br i1 %188, label %189, label %243

189:                                              ; preds = %186
  %190 = and i64 %18, 4294967295
  %191 = load i32*, i32** %84, align 8
  %192 = load i32, i32* %191, align 4
  store i32 %192, i32* %187, align 4
  %193 = icmp eq i64 %190, 1
  br i1 %193, label %243, label %194

194:                                              ; preds = %189
  %195 = add nsw i64 %190, -1
  %196 = add nsw i64 %190, -2
  %197 = and i64 %195, 3
  %198 = icmp ult i64 %196, 3
  br i1 %198, label %229, label %199

199:                                              ; preds = %194
  %200 = sub nsw i64 %195, %197
  br label %251

201:                                              ; preds = %140, %201
  %202 = phi i64 [ %227, %201 ], [ %141, %140 ]
  %203 = phi i64 [ %215, %201 ], [ %142, %140 ]
  %204 = load i32*, i32** %84, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %202
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %123, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %202
  %209 = load i32, i32* %208, align 4
  %210 = mul nsw i32 %209, %206
  %211 = shl i64 %203, 32
  %212 = add i64 %211, -8589934592
  %213 = ashr exact i64 %212, 32
  %214 = getelementptr inbounds i32, i32* %204, i64 %213
  store i32 %210, i32* %214, align 4
  %215 = add nsw i64 %202, -1
  %216 = load i32*, i32** %84, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 %215
  %218 = load i32, i32* %217, align 4
  %219 = load i32*, i32** %123, align 8
  %220 = getelementptr inbounds i32, i32* %219, i64 %215
  %221 = load i32, i32* %220, align 4
  %222 = mul nsw i32 %221, %218
  %223 = shl i64 %202, 32
  %224 = add i64 %223, -8589934592
  %225 = ashr exact i64 %224, 32
  %226 = getelementptr inbounds i32, i32* %216, i64 %225
  store i32 %222, i32* %226, align 4
  %227 = add nsw i64 %202, -2
  %228 = icmp sgt i64 %227, 0
  br i1 %228, label %201, label %162

229:                                              ; preds = %251, %194
  %230 = phi i64 [ 1, %194 ], [ %277, %251 ]
  %231 = icmp eq i64 %197, 0
  br i1 %231, label %243, label %232

232:                                              ; preds = %229, %232
  %233 = phi i64 [ %240, %232 ], [ %230, %229 ]
  %234 = phi i64 [ %241, %232 ], [ %197, %229 ]
  %235 = load i32*, i32** %164, align 8
  %236 = load i32*, i32** %84, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 %233
  %238 = load i32, i32* %237, align 4
  %239 = getelementptr inbounds i32, i32* %235, i64 %233
  store i32 %238, i32* %239, align 4
  %240 = add nuw nsw i64 %233, 1
  %241 = add i64 %234, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %232, !llvm.loop !41

243:                                              ; preds = %229, %232, %189, %186
  %244 = icmp sgt i32 %28, 0
  br i1 %244, label %245, label %280

245:                                              ; preds = %243
  %246 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 0
  %248 = shl i64 %17, 30
  %249 = ashr exact i64 %248, 32
  %250 = and i64 %27, 4294967295
  br label %322

251:                                              ; preds = %251, %199
  %252 = phi i64 [ 1, %199 ], [ %277, %251 ]
  %253 = phi i64 [ %200, %199 ], [ %278, %251 ]
  %254 = load i32*, i32** %164, align 8
  %255 = load i32*, i32** %84, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 %252
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %254, i64 %252
  store i32 %257, i32* %258, align 4
  %259 = add nuw nsw i64 %252, 1
  %260 = load i32*, i32** %164, align 8
  %261 = load i32*, i32** %84, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 %259
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds i32, i32* %260, i64 %259
  store i32 %263, i32* %264, align 4
  %265 = add nuw nsw i64 %252, 2
  %266 = load i32*, i32** %164, align 8
  %267 = load i32*, i32** %84, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 %265
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds i32, i32* %266, i64 %265
  store i32 %269, i32* %270, align 4
  %271 = add nuw nsw i64 %252, 3
  %272 = load i32*, i32** %164, align 8
  %273 = load i32*, i32** %84, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 %271
  %275 = load i32, i32* %274, align 4
  %276 = getelementptr inbounds i32, i32* %272, i64 %271
  store i32 %275, i32* %276, align 4
  %277 = add nuw nsw i64 %252, 4
  %278 = add i64 %253, -4
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %229, label %251

280:                                              ; preds = %322, %243
  %281 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #6
  %282 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %284 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 0, i64 24, i1 false) #6
  br i1 %35, label %304, label %285

285:                                              ; preds = %280
  %286 = icmp slt i32 %29, 0
  br i1 %286, label %287, label %289

287:                                              ; preds = %285
  %288 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %288) #7
  unreachable

289:                                              ; preds = %285
  %290 = shl nsw i64 %34, 2
  %291 = tail call i8* @_Znwm(i64 %290) #8
  %292 = bitcast i8* %291 to i32*
  %293 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %291, i8** %293, align 8
  %294 = getelementptr inbounds i32, i32* %292, i64 %34
  store i32* %294, i32** %284, align 8
  %295 = bitcast i32** %283 to i64*
  %296 = ptrtoint i8* %291 to i64
  %297 = add nsw i64 %34, -1
  %298 = getelementptr i32, i32* %292, i64 %297
  %299 = ptrtoint i32* %298 to i64
  %300 = sub i64 4, %296
  %301 = add i64 %300, %299
  %302 = and i64 %301, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %291, i8 0, i64 %302, i1 false) #6
  %303 = ptrtoint i32* %294 to i64
  store i64 %303, i64* %295, align 8
  br label %304

304:                                              ; preds = %280, %289
  %305 = phi i32* [ null, %280 ], [ %292, %289 ]
  br i1 %82, label %306, label %356

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = load i32, i32* %308, align 4
  %310 = sext i32 %309 to i64
  %311 = load i32*, i32** %164, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 %310
  %313 = load i32, i32* %312, align 4
  store i32 %313, i32* %305, align 4
  %314 = icmp eq i32 %29, 1
  br i1 %314, label %356, label %315

315:                                              ; preds = %306
  %316 = zext i32 %29 to i64
  %317 = add nsw i64 %316, -1
  %318 = and i64 %317, 1
  %319 = icmp eq i32 %29, 2
  br i1 %319, label %343, label %320

320:                                              ; preds = %315
  %321 = sub nsw i64 %317, %318
  br label %459

322:                                              ; preds = %322, %245
  %323 = phi i64 [ 0, %245 ], [ %341, %322 ]
  %324 = load i32*, i32** %246, align 8
  %325 = getelementptr inbounds i32, i32* %324, i64 %323
  %326 = load i32, i32* %325, align 4
  %327 = sext i32 %326 to i64
  %328 = load i32*, i32** %84, align 8
  %329 = getelementptr inbounds i32, i32* %328, i64 %327
  %330 = load i32, i32* %329, align 4
  %331 = add nsw i64 %323, %249
  %332 = load i32*, i32** %164, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %331
  store i32 %330, i32* %333, align 4
  %334 = load i32*, i32** %247, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 %323
  %336 = load i32, i32* %335, align 4
  %337 = load i32*, i32** %164, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 %327
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %339, %336
  store i32 %340, i32* %338, align 4
  %341 = add nuw nsw i64 %323, 1
  %342 = icmp eq i64 %341, %250
  br i1 %342, label %280, label %322

343:                                              ; preds = %459, %315
  %344 = phi i64 [ 1, %315 ], [ %481, %459 ]
  %345 = icmp eq i64 %318, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343
  %347 = load i32*, i32** %282, align 8
  %348 = load i32*, i32** %307, align 8
  %349 = getelementptr inbounds i32, i32* %348, i64 %344
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = load i32*, i32** %164, align 8
  %353 = getelementptr inbounds i32, i32* %352, i64 %351
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds i32, i32* %347, i64 %344
  store i32 %354, i32* %355, align 4
  br label %356

356:                                              ; preds = %346, %343, %306, %304
  %357 = bitcast %"class.std::__1::vector.15"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %357) #6
  %358 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 0
  %359 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 1
  %360 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %7, i64 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %357, i8 0, i64 24, i1 false) #6
  br i1 %35, label %388, label %361

361:                                              ; preds = %356
  %362 = icmp slt i32 %29, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %361
  %364 = bitcast %"class.std::__1::vector.15"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %364) #7
  unreachable

365:                                              ; preds = %361
  %366 = add nsw i64 %34, -1
  %367 = lshr i64 %366, 6
  %368 = add nuw nsw i64 %367, 1
  %369 = shl nuw nsw i64 %368, 3
  %370 = tail call i8* @_Znwm(i64 %369) #8
  %371 = bitcast %"class.std::__1::vector.15"* %7 to i8**
  store i8* %370, i8** %371, align 8
  store i64 %368, i64* %360, align 8
  store i64 %34, i64* %359, align 8
  %372 = icmp ult i32 %29, 65
  %373 = bitcast i8* %370 to i64*
  %374 = ptrtoint i8* %370 to i64
  %375 = getelementptr inbounds i64, i64* %373, i64 %367
  %376 = select i1 %372, i64* %373, i64* %375
  store i64 0, i64* %376, align 8
  %377 = lshr i64 %34, 6
  %378 = shl nuw nsw i64 %377, 3
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %370, i8 0, i64 %378, i1 false) #6
  %379 = and i64 %34, 63
  %380 = icmp eq i64 %379, 0
  br i1 %380, label %388, label %381

381:                                              ; preds = %365
  %382 = getelementptr inbounds i64, i64* %373, i64 %377
  %383 = sub nuw nsw i64 64, %379
  %384 = lshr i64 -1, %383
  %385 = xor i64 %384, -1
  %386 = load i64, i64* %382, align 8
  %387 = and i64 %386, %385
  store i64 %387, i64* %382, align 8
  br label %388

388:                                              ; preds = %356, %365, %381
  %389 = phi i64 [ %374, %365 ], [ %374, %381 ], [ 0, %356 ]
  %390 = inttoptr i64 %389 to i64*
  %391 = lshr i64 %34, 6
  %392 = getelementptr inbounds i64, i64* %390, i64 %391
  %393 = and i64 %34, 63
  %394 = ptrtoint i64* %392 to i64
  %395 = sub i64 %394, %389
  %396 = shl i64 %395, 3
  %397 = add i64 %396, %393
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %412, label %399

399:                                              ; preds = %388
  %400 = inttoptr i64 %389 to i8*
  %401 = lshr i64 %397, 6
  %402 = shl nuw nsw i64 %401, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %400, i8 0, i64 %402, i1 false) #6
  %403 = and i64 %397, 63
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %412, label %405

405:                                              ; preds = %399
  %406 = getelementptr inbounds i64, i64* %390, i64 %401
  %407 = sub nuw nsw i64 64, %403
  %408 = lshr i64 -1, %407
  %409 = xor i64 %408, -1
  %410 = load i64, i64* %406, align 8
  %411 = and i64 %410, %409
  store i64 %411, i64* %406, align 8
  br label %412

412:                                              ; preds = %388, %399, %405
  %413 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #6
  %414 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %413, i8 0, i64 24, i1 false) #6
  br i1 %35, label %432, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %418 = shl nsw i64 %34, 2
  %419 = tail call i8* @_Znwm(i64 %418) #8
  %420 = bitcast i8* %419 to i32*
  %421 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %419, i8** %421, align 8
  %422 = getelementptr inbounds i32, i32* %420, i64 %34
  store i32* %422, i32** %417, align 8
  %423 = bitcast i32** %415 to i64*
  %424 = ptrtoint i8* %419 to i64
  %425 = add nsw i64 %34, -1
  %426 = getelementptr i32, i32* %420, i64 %425
  %427 = ptrtoint i32* %426 to i64
  %428 = sub i64 4, %424
  %429 = add i64 %428, %427
  %430 = and i64 %429, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %419, i8 0, i64 %430, i1 false) #6
  %431 = ptrtoint i32* %422 to i64
  store i64 %431, i64* %423, align 8
  br label %432

432:                                              ; preds = %412, %416
  %433 = phi i32* [ null, %412 ], [ %420, %416 ]
  %434 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %434) #6
  %435 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %436 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 0, i64 24, i1 false) #6
  br i1 %35, label %453, label %437

437:                                              ; preds = %432
  %438 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %439 = shl nsw i64 %34, 2
  %440 = tail call i8* @_Znwm(i64 %439) #8
  %441 = bitcast i8* %440 to i32*
  %442 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %440, i8** %442, align 8
  %443 = getelementptr inbounds i32, i32* %441, i64 %34
  store i32* %443, i32** %438, align 8
  %444 = bitcast i32** %436 to i64*
  %445 = ptrtoint i8* %440 to i64
  %446 = add nsw i64 %34, -1
  %447 = getelementptr i32, i32* %441, i64 %446
  %448 = ptrtoint i32* %447 to i64
  %449 = sub i64 4, %445
  %450 = add i64 %449, %448
  %451 = and i64 %450, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %440, i8 0, i64 %451, i1 false) #6
  %452 = ptrtoint i32* %443 to i64
  store i64 %452, i64* %444, align 8
  br label %453

453:                                              ; preds = %432, %437
  %454 = phi i32* [ null, %432 ], [ %441, %437 ]
  %455 = add nsw i32 %29, -1
  br i1 %82, label %456, label %484

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 0
  %458 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  br label %547

459:                                              ; preds = %459, %320
  %460 = phi i64 [ 1, %320 ], [ %481, %459 ]
  %461 = phi i64 [ %321, %320 ], [ %482, %459 ]
  %462 = load i32*, i32** %282, align 8
  %463 = load i32*, i32** %307, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 %460
  %465 = load i32, i32* %464, align 4
  %466 = sext i32 %465 to i64
  %467 = load i32*, i32** %164, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 %466
  %469 = load i32, i32* %468, align 4
  %470 = getelementptr inbounds i32, i32* %462, i64 %460
  store i32 %469, i32* %470, align 4
  %471 = add nuw nsw i64 %460, 1
  %472 = load i32*, i32** %282, align 8
  %473 = load i32*, i32** %307, align 8
  %474 = getelementptr inbounds i32, i32* %473, i64 %471
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = load i32*, i32** %164, align 8
  %478 = getelementptr inbounds i32, i32* %477, i64 %476
  %479 = load i32, i32* %478, align 4
  %480 = getelementptr inbounds i32, i32* %472, i64 %471
  store i32 %479, i32* %480, align 4
  %481 = add nuw nsw i64 %460, 2
  %482 = add i64 %461, -2
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %343, label %459

484:                                              ; preds = %570, %453
  %485 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7
  %486 = shl nsw i32 %29, 1
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7, i32 0, i32 1
  %489 = bitcast %"class.std::__1::vector"** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = bitcast %"class.std::__1::vector.8"* %485 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = sub i64 %490, %492
  %494 = sdiv exact i64 %493, 24
  %495 = icmp ult i64 %494, %487
  %496 = inttoptr i64 %492 to %"class.std::__1::vector"*
  %497 = inttoptr i64 %490 to %"class.std::__1::vector"*
  br i1 %495, label %498, label %500

498:                                              ; preds = %484
  %499 = sub nsw i64 %487, %494
  tail call void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"* %485, i64 %499) #6
  br label %519

500:                                              ; preds = %484
  %501 = icmp ugt i64 %494, %487
  br i1 %501, label %502, label %519

502:                                              ; preds = %500
  %503 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %496, i64 %487
  %504 = icmp eq %"class.std::__1::vector"* %503, %497
  br i1 %504, label %518, label %505

505:                                              ; preds = %502, %516
  %506 = phi %"class.std::__1::vector"* [ %507, %516 ], [ %497, %502 ]
  %507 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1
  %508 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %507, i64 0, i32 0, i32 0
  %509 = load i32*, i32** %508, align 8
  %510 = icmp eq i32* %509, null
  br i1 %510, label %516, label %511

511:                                              ; preds = %505
  %512 = ptrtoint i32* %509 to i64
  %513 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %506, i64 -1, i32 0, i32 1
  %514 = bitcast i32** %513 to i64*
  store i64 %512, i64* %514, align 8
  %515 = bitcast i32* %509 to i8*
  tail call void @_ZdlPv(i8* %515) #8
  br label %516

516:                                              ; preds = %511, %505
  %517 = icmp eq %"class.std::__1::vector"* %507, %503
  br i1 %517, label %518, label %505

518:                                              ; preds = %516, %502
  store %"class.std::__1::vector"* %503, %"class.std::__1::vector"** %488, align 8
  br label %519

519:                                              ; preds = %498, %500, %518
  %520 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %520) #6
  %521 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %522 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %523 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %520, i8 0, i64 24, i1 false) #6
  %524 = bitcast i32** %523 to i64*
  %525 = bitcast %"class.std::__1::vector"* %10 to i64*
  %526 = icmp eq i32 %29, 0
  br i1 %526, label %540, label %527

527:                                              ; preds = %519
  %528 = icmp slt i32 %29, 0
  br i1 %528, label %529, label %530

529:                                              ; preds = %527
  tail call void @abort() #7
  unreachable

530:                                              ; preds = %527
  %531 = shl nsw i64 %34, 2
  %532 = tail call i8* @_Znwm(i64 %531) #8
  %533 = bitcast i8* %532 to i32*
  %534 = getelementptr inbounds i32, i32* %533, i64 %34
  %535 = ptrtoint i32* %534 to i64
  %536 = insertelement <2 x i8*> undef, i8* %532, i32 0
  %537 = shufflevector <2 x i8*> %536, <2 x i8*> undef, <2 x i32> zeroinitializer
  %538 = ptrtoint <2 x i8*> %537 to <2 x i64>
  %539 = bitcast %"class.std::__1::vector"* %10 to <2 x i64>*
  store <2 x i64> %538, <2 x i64>* %539, align 16
  store i64 %535, i64* %524, align 16
  br label %540

540:                                              ; preds = %530, %519
  br i1 %82, label %541, label %576

541:                                              ; preds = %540
  %542 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %543 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 0
  %544 = bitcast i32** %522 to i64*
  %545 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  %546 = zext i32 %29 to i64
  br label %606

547:                                              ; preds = %574, %456
  %548 = phi i32* [ %433, %456 ], [ %575, %574 ]
  %549 = phi i64 [ %34, %456 ], [ %552, %574 ]
  %550 = phi i32 [ 1, %456 ], [ %572, %574 ]
  %551 = phi i32 [ -1, %456 ], [ %571, %574 ]
  %552 = add i64 %549, -1
  %553 = getelementptr inbounds i32, i32* %548, i64 %552
  store i32 %551, i32* %553, align 4
  %554 = load i32*, i32** %457, align 8
  %555 = getelementptr inbounds i32, i32* %554, i64 %552
  %556 = load i32, i32* %555, align 4
  %557 = icmp eq i32 %556, 1
  %558 = getelementptr inbounds i32, i32* %454, i64 %552
  br i1 %557, label %559, label %561

559:                                              ; preds = %547
  store i32 %550, i32* %558, align 4
  %560 = trunc i64 %552 to i32
  br label %570

561:                                              ; preds = %547
  store i32 -1, i32* %558, align 4
  %562 = load i32*, i32** %458, align 8
  %563 = getelementptr inbounds i32, i32* %562, i64 %552
  %564 = load i32, i32* %563, align 4
  %565 = sext i32 %564 to i64
  %566 = load i32*, i32** %31, align 8
  %567 = getelementptr inbounds i32, i32* %566, i64 %565
  %568 = load i32, i32* %567, align 4
  %569 = mul nsw i32 %568, %550
  br label %570

570:                                              ; preds = %559, %561
  %571 = phi i32 [ %560, %559 ], [ %551, %561 ]
  %572 = phi i32 [ 1, %559 ], [ %569, %561 ]
  %573 = icmp sgt i64 %552, 0
  br i1 %573, label %574, label %484

574:                                              ; preds = %570
  %575 = load i32*, i32** %414, align 8
  br label %547

576:                                              ; preds = %823, %540
  %577 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %577) #6
  %578 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %579 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %580 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %577, i8 0, i64 24, i1 false) #6
  br i1 %35, label %593, label %581

581:                                              ; preds = %576
  %582 = icmp slt i32 %29, 0
  br i1 %582, label %583, label %585

583:                                              ; preds = %581
  %584 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %584) #7
  unreachable

585:                                              ; preds = %581
  %586 = shl nsw i64 %34, 2
  %587 = tail call i8* @_Znwm(i64 %586) #8
  %588 = bitcast i8* %587 to i32*
  %589 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %587, i8** %589, align 8
  %590 = getelementptr inbounds i32, i32* %588, i64 %34
  store i32* %590, i32** %580, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %587, i8 0, i64 %586, i1 false)
  %591 = bitcast i32** %579 to i64*
  %592 = ptrtoint i32* %590 to i64
  store i64 %592, i64* %591, align 8
  br label %593

593:                                              ; preds = %585, %576
  %594 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  %595 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 0
  %596 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %485, i64 0, i32 0, i32 0
  %597 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8, i32 0, i32 0
  %598 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8, i32 0, i32 1
  %599 = bitcast float** %598 to i64*
  %600 = sext i32 %455 to i64
  %601 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8
  %602 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %603 = bitcast %"class.std::__1::vector.33"* %601 to i64*
  %604 = bitcast float** %602 to i64*
  %605 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %601, i64 0, i32 0, i32 0
  br label %826

606:                                              ; preds = %823, %541
  %607 = phi i64 [ 0, %541 ], [ %824, %823 ]
  %608 = shl nuw nsw i64 %607, 1
  %609 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %610 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608
  %611 = bitcast %"class.std::__1::vector"* %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %609, i64 %608, i32 0, i32 1
  %614 = bitcast i32** %613 to i64*
  store i64 %612, i64* %614, align 8
  %615 = or i64 %608, 1
  %616 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %617 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615
  %618 = bitcast %"class.std::__1::vector"* %617 to i64*
  %619 = load i64, i64* %618, align 8
  %620 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %616, i64 %615, i32 0, i32 1
  %621 = bitcast i32** %620 to i64*
  store i64 %619, i64* %621, align 8
  %622 = load i32*, i32** %543, align 8
  %623 = getelementptr inbounds i32, i32* %622, i64 %607
  %624 = load i32, i32* %623, align 4
  %625 = icmp eq i32 %624, 0
  %626 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %542, align 8
  %627 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608
  br i1 %625, label %628, label %703

628:                                              ; preds = %606
  %629 = load i32*, i32** %545, align 8
  %630 = getelementptr inbounds i32, i32* %629, i64 %607
  %631 = load i32, i32* %630, align 4
  %632 = sext i32 %631 to i64
  %633 = load i32*, i32** %31, align 8
  %634 = getelementptr inbounds i32, i32* %633, i64 %632
  %635 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %636 = load i32*, i32** %635, align 8
  %637 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %638 = load i32*, i32** %637, align 8
  %639 = icmp eq i32* %636, %638
  %640 = ptrtoint i32* %638 to i64
  br i1 %639, label %646, label %641

641:                                              ; preds = %628
  %642 = load i32, i32* %634, align 4
  store i32 %642, i32* %636, align 4
  %643 = getelementptr inbounds i32, i32* %636, i64 1
  %644 = ptrtoint i32* %643 to i64
  %645 = bitcast i32** %635 to i64*
  store i64 %644, i64* %645, align 8
  br label %823

646:                                              ; preds = %628
  %647 = ptrtoint i32* %636 to i64
  %648 = bitcast i32** %635 to i64*
  %649 = bitcast %"class.std::__1::vector"* %627 to i64*
  %650 = load i64, i64* %649, align 8
  %651 = sub i64 %647, %650
  %652 = ashr exact i64 %651, 2
  %653 = add nsw i64 %652, 1
  %654 = icmp ugt i64 %653, 4611686018427387903
  br i1 %654, label %655, label %657

655:                                              ; preds = %646
  %656 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %656) #7
  unreachable

657:                                              ; preds = %646
  %658 = bitcast i32** %637 to i64*
  %659 = sub i64 %640, %650
  %660 = ashr exact i64 %659, 2
  %661 = icmp ult i64 %660, 2305843009213693951
  br i1 %661, label %662, label %670

662:                                              ; preds = %657
  %663 = ashr exact i64 %659, 1
  %664 = icmp ult i64 %663, %653
  %665 = select i1 %664, i64 %653, i64 %663
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %675, label %667

667:                                              ; preds = %662
  %668 = icmp ugt i64 %665, 4611686018427387903
  br i1 %668, label %669, label %670

669:                                              ; preds = %667
  tail call void @abort() #7
  unreachable

670:                                              ; preds = %667, %657
  %671 = phi i64 [ %665, %667 ], [ 4611686018427387903, %657 ]
  %672 = shl i64 %671, 2
  %673 = tail call i8* @_Znwm(i64 %672) #8
  %674 = bitcast i8* %673 to i32*
  br label %675

675:                                              ; preds = %670, %662
  %676 = phi i64 [ %671, %670 ], [ 0, %662 ]
  %677 = phi i32* [ %674, %670 ], [ null, %662 ]
  %678 = getelementptr inbounds i32, i32* %677, i64 %652
  %679 = getelementptr inbounds i32, i32* %677, i64 %676
  %680 = ptrtoint i32* %679 to i64
  %681 = load i32, i32* %634, align 4
  store i32 %681, i32* %678, align 4
  %682 = getelementptr inbounds i32, i32* %678, i64 1
  %683 = ptrtoint i32* %682 to i64
  %684 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %685 = load i32*, i32** %684, align 8
  %686 = load i64, i64* %648, align 8
  %687 = ptrtoint i32* %685 to i64
  %688 = sub i64 %686, %687
  %689 = ashr exact i64 %688, 2
  %690 = sub nsw i64 0, %689
  %691 = getelementptr inbounds i32, i32* %678, i64 %690
  %692 = ptrtoint i32* %691 to i64
  %693 = icmp sgt i64 %688, 0
  br i1 %693, label %694, label %698

694:                                              ; preds = %675
  %695 = bitcast i32* %691 to i8*
  %696 = bitcast i32* %685 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %695, i8* align 4 %696, i64 %688, i1 false) #6
  %697 = load i32*, i32** %684, align 8
  br label %698

698:                                              ; preds = %694, %675
  %699 = phi i32* [ %685, %675 ], [ %697, %694 ]
  store i64 %692, i64* %649, align 8
  store i64 %683, i64* %648, align 8
  store i64 %680, i64* %658, align 8
  %700 = icmp eq i32* %699, null
  br i1 %700, label %823, label %701

701:                                              ; preds = %698
  %702 = bitcast i32* %699 to i8*
  tail call void @_ZdlPv(i8* %702) #8
  br label %823

703:                                              ; preds = %606
  %704 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 1
  %705 = load i32*, i32** %704, align 8
  %706 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %626, i64 %608, i32 0, i32 2, i32 0, i32 0
  %707 = load i32*, i32** %706, align 8
  %708 = icmp ult i32* %705, %707
  %709 = ptrtoint i32* %707 to i64
  br i1 %708, label %710, label %714

710:                                              ; preds = %703
  store i32 0, i32* %705, align 4
  %711 = getelementptr inbounds i32, i32* %705, i64 1
  %712 = ptrtoint i32* %711 to i64
  %713 = bitcast i32** %704 to i64*
  store i64 %712, i64* %713, align 8
  br label %770

714:                                              ; preds = %703
  %715 = ptrtoint i32* %705 to i64
  %716 = bitcast i32** %704 to i64*
  %717 = bitcast %"class.std::__1::vector"* %627 to i64*
  %718 = load i64, i64* %717, align 8
  %719 = sub i64 %715, %718
  %720 = ashr exact i64 %719, 2
  %721 = add nsw i64 %720, 1
  %722 = icmp ugt i64 %721, 4611686018427387903
  br i1 %722, label %723, label %725

723:                                              ; preds = %714
  %724 = bitcast %"class.std::__1::vector"* %627 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %724) #7
  unreachable

725:                                              ; preds = %714
  %726 = bitcast i32** %706 to i64*
  %727 = sub i64 %709, %718
  %728 = ashr exact i64 %727, 2
  %729 = icmp ult i64 %728, 2305843009213693951
  br i1 %729, label %730, label %738

730:                                              ; preds = %725
  %731 = ashr exact i64 %727, 1
  %732 = icmp ult i64 %731, %721
  %733 = select i1 %732, i64 %721, i64 %731
  %734 = icmp eq i64 %733, 0
  br i1 %734, label %743, label %735

735:                                              ; preds = %730
  %736 = icmp ugt i64 %733, 4611686018427387903
  br i1 %736, label %737, label %738

737:                                              ; preds = %735
  tail call void @abort() #7
  unreachable

738:                                              ; preds = %735, %725
  %739 = phi i64 [ %733, %735 ], [ 4611686018427387903, %725 ]
  %740 = shl i64 %739, 2
  %741 = tail call i8* @_Znwm(i64 %740) #8
  %742 = bitcast i8* %741 to i32*
  br label %743

743:                                              ; preds = %738, %730
  %744 = phi i64 [ %739, %738 ], [ 0, %730 ]
  %745 = phi i32* [ %742, %738 ], [ null, %730 ]
  %746 = getelementptr inbounds i32, i32* %745, i64 %720
  %747 = getelementptr inbounds i32, i32* %745, i64 %744
  %748 = ptrtoint i32* %747 to i64
  store i32 0, i32* %746, align 4
  %749 = getelementptr inbounds i32, i32* %746, i64 1
  %750 = ptrtoint i32* %749 to i64
  %751 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %627, i64 0, i32 0, i32 0
  %752 = load i32*, i32** %751, align 8
  %753 = load i64, i64* %716, align 8
  %754 = ptrtoint i32* %752 to i64
  %755 = sub i64 %753, %754
  %756 = ashr exact i64 %755, 2
  %757 = sub nsw i64 0, %756
  %758 = getelementptr inbounds i32, i32* %746, i64 %757
  %759 = ptrtoint i32* %758 to i64
  %760 = icmp sgt i64 %755, 0
  br i1 %760, label %761, label %765

761:                                              ; preds = %743
  %762 = bitcast i32* %758 to i8*
  %763 = bitcast i32* %752 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %762, i8* align 4 %763, i64 %755, i1 false) #6
  %764 = load i32*, i32** %751, align 8
  br label %765

765:                                              ; preds = %761, %743
  %766 = phi i32* [ %752, %743 ], [ %764, %761 ]
  store i64 %759, i64* %717, align 8
  store i64 %750, i64* %716, align 8
  store i64 %748, i64* %726, align 8
  %767 = icmp eq i32* %766, null
  br i1 %767, label %770, label %768

768:                                              ; preds = %765
  %769 = bitcast i32* %766 to i8*
  tail call void @_ZdlPv(i8* %769) #8
  br label %770

770:                                              ; preds = %710, %765, %768
  %771 = load i32*, i32** %522, align 8
  %772 = load i32*, i32** %523, align 16
  %773 = icmp eq i32* %771, %772
  %774 = ptrtoint i32* %772 to i64
  br i1 %773, label %779, label %775

775:                                              ; preds = %770
  %776 = trunc i64 %607 to i32
  store i32 %776, i32* %771, align 4
  %777 = getelementptr inbounds i32, i32* %771, i64 1
  %778 = ptrtoint i32* %777 to i64
  store i64 %778, i64* %544, align 8
  br label %823

779:                                              ; preds = %770
  %780 = ptrtoint i32* %771 to i64
  %781 = load i64, i64* %525, align 16
  %782 = sub i64 %780, %781
  %783 = ashr exact i64 %782, 2
  %784 = add nsw i64 %783, 1
  %785 = icmp ugt i64 %784, 4611686018427387903
  br i1 %785, label %786, label %788

786:                                              ; preds = %779
  %787 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %787) #7
  unreachable

788:                                              ; preds = %779
  %789 = sub i64 %774, %781
  %790 = ashr exact i64 %789, 2
  %791 = icmp ult i64 %790, 2305843009213693951
  br i1 %791, label %792, label %800

792:                                              ; preds = %788
  %793 = ashr exact i64 %789, 1
  %794 = icmp ult i64 %793, %784
  %795 = select i1 %794, i64 %784, i64 %793
  %796 = icmp eq i64 %795, 0
  br i1 %796, label %805, label %797

797:                                              ; preds = %792
  %798 = icmp ugt i64 %795, 4611686018427387903
  br i1 %798, label %799, label %800

799:                                              ; preds = %797
  tail call void @abort() #7
  unreachable

800:                                              ; preds = %797, %788
  %801 = phi i64 [ %795, %797 ], [ 4611686018427387903, %788 ]
  %802 = shl i64 %801, 2
  %803 = tail call i8* @_Znwm(i64 %802) #8
  %804 = bitcast i8* %803 to i32*
  br label %805

805:                                              ; preds = %800, %792
  %806 = phi i64 [ %801, %800 ], [ 0, %792 ]
  %807 = phi i8* [ %803, %800 ], [ null, %792 ]
  %808 = phi i32* [ %804, %800 ], [ null, %792 ]
  %809 = getelementptr inbounds i32, i32* %808, i64 %783
  %810 = getelementptr inbounds i32, i32* %808, i64 %806
  %811 = ptrtoint i32* %810 to i64
  %812 = trunc i64 %607 to i32
  store i32 %812, i32* %809, align 4
  %813 = getelementptr inbounds i32, i32* %809, i64 1
  %814 = ptrtoint i32* %813 to i64
  %815 = ptrtoint i32* %808 to i64
  %816 = icmp sgt i64 %782, 0
  br i1 %816, label %817, label %819

817:                                              ; preds = %805
  %818 = inttoptr i64 %781 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %807, i8* align 4 %818, i64 %782, i1 false) #6
  br label %819

819:                                              ; preds = %817, %805
  store i64 %815, i64* %525, align 16
  store i64 %814, i64* %544, align 8
  store i64 %811, i64* %524, align 16
  %820 = icmp eq i64 %781, 0
  br i1 %820, label %823, label %821

821:                                              ; preds = %819
  %822 = inttoptr i64 %781 to i8*
  tail call void @_ZdlPv(i8* %822) #8
  br label %823

823:                                              ; preds = %821, %819, %775, %701, %698, %641
  %824 = add nuw nsw i64 %607, 1
  %825 = icmp eq i64 %824, %546
  br i1 %825, label %576, label %606

826:                                              ; preds = %593, %1234
  %827 = phi i32 [ 0, %593 ], [ %1236, %1234 ]
  %828 = phi i32 [ %29, %593 ], [ %1235, %1234 ]
  %829 = icmp eq i32 %828, %29
  br i1 %829, label %830, label %1060

830:                                              ; preds = %826
  %831 = sext i32 %827 to i64
  %832 = getelementptr inbounds float, float* %1, i64 %831
  %833 = load float, float* %832, align 4
  %834 = fcmp une float %833, 0.000000e+00
  br i1 %834, label %835, label %995

835:                                              ; preds = %830
  %836 = load float*, float** %598, align 8
  %837 = load float*, float** %602, align 8
  %838 = icmp eq float* %836, %837
  %839 = ptrtoint float* %837 to i64
  br i1 %838, label %843, label %840

840:                                              ; preds = %835
  store float %833, float* %836, align 4
  %841 = getelementptr inbounds float, float* %836, i64 1
  %842 = ptrtoint float* %841 to i64
  store i64 %842, i64* %599, align 8
  br label %895

843:                                              ; preds = %835
  %844 = ptrtoint float* %836 to i64
  %845 = load i64, i64* %603, align 8
  %846 = sub i64 %844, %845
  %847 = ashr exact i64 %846, 2
  %848 = add nsw i64 %847, 1
  %849 = icmp ugt i64 %848, 4611686018427387903
  br i1 %849, label %850, label %852

850:                                              ; preds = %843
  %851 = bitcast %"class.std::__1::vector.33"* %601 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %851) #7
  unreachable

852:                                              ; preds = %843
  %853 = sub i64 %839, %845
  %854 = ashr exact i64 %853, 2
  %855 = icmp ult i64 %854, 2305843009213693951
  br i1 %855, label %856, label %864

856:                                              ; preds = %852
  %857 = ashr exact i64 %853, 1
  %858 = icmp ult i64 %857, %848
  %859 = select i1 %858, i64 %848, i64 %857
  %860 = icmp eq i64 %859, 0
  br i1 %860, label %869, label %861

861:                                              ; preds = %856
  %862 = icmp ugt i64 %859, 4611686018427387903
  br i1 %862, label %863, label %864

863:                                              ; preds = %861
  tail call void @abort() #7
  unreachable

864:                                              ; preds = %861, %852
  %865 = phi i64 [ %859, %861 ], [ 4611686018427387903, %852 ]
  %866 = shl i64 %865, 2
  %867 = tail call i8* @_Znwm(i64 %866) #8
  %868 = bitcast i8* %867 to float*
  br label %869

869:                                              ; preds = %864, %856
  %870 = phi i64 [ %865, %864 ], [ 0, %856 ]
  %871 = phi float* [ %868, %864 ], [ null, %856 ]
  %872 = getelementptr inbounds float, float* %871, i64 %847
  %873 = getelementptr inbounds float, float* %871, i64 %870
  %874 = ptrtoint float* %873 to i64
  store float %833, float* %872, align 4
  %875 = getelementptr inbounds float, float* %872, i64 1
  %876 = ptrtoint float* %875 to i64
  %877 = load float*, float** %605, align 8
  %878 = load i64, i64* %599, align 8
  %879 = ptrtoint float* %877 to i64
  %880 = sub i64 %878, %879
  %881 = ashr exact i64 %880, 2
  %882 = sub nsw i64 0, %881
  %883 = getelementptr inbounds float, float* %872, i64 %882
  %884 = ptrtoint float* %883 to i64
  %885 = icmp sgt i64 %880, 0
  br i1 %885, label %886, label %890

886:                                              ; preds = %869
  %887 = bitcast float* %883 to i8*
  %888 = bitcast float* %877 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %887, i8* align 4 %888, i64 %880, i1 false) #6
  %889 = load float*, float** %605, align 8
  br label %890

890:                                              ; preds = %886, %869
  %891 = phi float* [ %877, %869 ], [ %889, %886 ]
  store i64 %884, i64* %603, align 8
  store i64 %876, i64* %599, align 8
  store i64 %874, i64* %604, align 8
  %892 = icmp eq float* %891, null
  br i1 %892, label %895, label %893

893:                                              ; preds = %890
  %894 = bitcast float* %891 to i8*
  tail call void @_ZdlPv(i8* %894) #8
  br label %895

895:                                              ; preds = %840, %890, %893
  %896 = load i32*, i32** %521, align 16
  %897 = load i32*, i32** %522, align 8
  %898 = icmp eq i32* %896, %897
  br i1 %898, label %1234, label %899

899:                                              ; preds = %895, %992
  %900 = phi i32* [ %993, %992 ], [ %896, %895 ]
  %901 = load i32, i32* %900, align 4
  %902 = sext i32 %901 to i64
  %903 = load i64*, i64** %358, align 8
  %904 = lshr i64 %902, 6
  %905 = getelementptr inbounds i64, i64* %903, i64 %904
  %906 = and i64 %902, 63
  %907 = shl i64 1, %906
  %908 = load i64, i64* %905, align 8
  %909 = and i64 %907, %908
  %910 = icmp eq i64 %909, 0
  br i1 %910, label %911, label %992

911:                                              ; preds = %899
  %912 = shl nsw i32 %901, 1
  %913 = or i32 %912, 1
  %914 = sext i32 %913 to i64
  %915 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %916 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914
  %917 = load i32*, i32** %578, align 8
  %918 = getelementptr inbounds i32, i32* %917, i64 %902
  %919 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914, i32 0, i32 1
  %920 = load i32*, i32** %919, align 8
  %921 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %915, i64 %914, i32 0, i32 2, i32 0, i32 0
  %922 = load i32*, i32** %921, align 8
  %923 = icmp eq i32* %920, %922
  %924 = ptrtoint i32* %922 to i64
  br i1 %923, label %930, label %925

925:                                              ; preds = %911
  %926 = load i32, i32* %918, align 4
  store i32 %926, i32* %920, align 4
  %927 = getelementptr inbounds i32, i32* %920, i64 1
  %928 = ptrtoint i32* %927 to i64
  %929 = bitcast i32** %919 to i64*
  store i64 %928, i64* %929, align 8
  br label %987

930:                                              ; preds = %911
  %931 = ptrtoint i32* %920 to i64
  %932 = bitcast i32** %919 to i64*
  %933 = bitcast %"class.std::__1::vector"* %916 to i64*
  %934 = load i64, i64* %933, align 8
  %935 = sub i64 %931, %934
  %936 = ashr exact i64 %935, 2
  %937 = add nsw i64 %936, 1
  %938 = icmp ugt i64 %937, 4611686018427387903
  br i1 %938, label %939, label %941

939:                                              ; preds = %930
  %940 = bitcast %"class.std::__1::vector"* %916 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %940) #7
  unreachable

941:                                              ; preds = %930
  %942 = bitcast i32** %921 to i64*
  %943 = sub i64 %924, %934
  %944 = ashr exact i64 %943, 2
  %945 = icmp ult i64 %944, 2305843009213693951
  br i1 %945, label %946, label %954

946:                                              ; preds = %941
  %947 = ashr exact i64 %943, 1
  %948 = icmp ult i64 %947, %937
  %949 = select i1 %948, i64 %937, i64 %947
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %959, label %951

951:                                              ; preds = %946
  %952 = icmp ugt i64 %949, 4611686018427387903
  br i1 %952, label %953, label %954

953:                                              ; preds = %951
  tail call void @abort() #7
  unreachable

954:                                              ; preds = %951, %941
  %955 = phi i64 [ %949, %951 ], [ 4611686018427387903, %941 ]
  %956 = shl i64 %955, 2
  %957 = tail call i8* @_Znwm(i64 %956) #8
  %958 = bitcast i8* %957 to i32*
  br label %959

959:                                              ; preds = %954, %946
  %960 = phi i64 [ %955, %954 ], [ 0, %946 ]
  %961 = phi i32* [ %958, %954 ], [ null, %946 ]
  %962 = getelementptr inbounds i32, i32* %961, i64 %936
  %963 = getelementptr inbounds i32, i32* %961, i64 %960
  %964 = ptrtoint i32* %963 to i64
  %965 = load i32, i32* %918, align 4
  store i32 %965, i32* %962, align 4
  %966 = getelementptr inbounds i32, i32* %962, i64 1
  %967 = ptrtoint i32* %966 to i64
  %968 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %916, i64 0, i32 0, i32 0
  %969 = load i32*, i32** %968, align 8
  %970 = load i64, i64* %932, align 8
  %971 = ptrtoint i32* %969 to i64
  %972 = sub i64 %970, %971
  %973 = ashr exact i64 %972, 2
  %974 = sub nsw i64 0, %973
  %975 = getelementptr inbounds i32, i32* %962, i64 %974
  %976 = ptrtoint i32* %975 to i64
  %977 = icmp sgt i64 %972, 0
  br i1 %977, label %978, label %982

978:                                              ; preds = %959
  %979 = bitcast i32* %975 to i8*
  %980 = bitcast i32* %969 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %979, i8* align 4 %980, i64 %972, i1 false) #6
  %981 = load i32*, i32** %968, align 8
  br label %982

982:                                              ; preds = %978, %959
  %983 = phi i32* [ %969, %959 ], [ %981, %978 ]
  store i64 %976, i64* %933, align 8
  store i64 %967, i64* %932, align 8
  store i64 %964, i64* %942, align 8
  %984 = icmp eq i32* %983, null
  br i1 %984, label %987, label %985

985:                                              ; preds = %982
  %986 = bitcast i32* %983 to i8*
  tail call void @_ZdlPv(i8* %986) #8
  br label %987

987:                                              ; preds = %925, %982, %985
  %988 = load i64*, i64** %358, align 8
  %989 = getelementptr inbounds i64, i64* %988, i64 %904
  %990 = load i64, i64* %989, align 8
  %991 = or i64 %990, %907
  store i64 %991, i64* %989, align 8
  br label %992

992:                                              ; preds = %899, %987
  %993 = getelementptr inbounds i32, i32* %900, i64 1
  %994 = icmp eq i32* %993, %897
  br i1 %994, label %1234, label %899

995:                                              ; preds = %830
  %996 = load i32*, i32** %595, align 8
  %997 = getelementptr inbounds i32, i32* %996, i64 %600
  %998 = load i32, i32* %997, align 4
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1234

1000:                                             ; preds = %995
  %1001 = load float*, float** %598, align 8
  %1002 = load float*, float** %602, align 8
  %1003 = icmp eq float* %1001, %1002
  %1004 = ptrtoint float* %1002 to i64
  br i1 %1003, label %1008, label %1005

1005:                                             ; preds = %1000
  store float %833, float* %1001, align 4
  %1006 = getelementptr inbounds float, float* %1001, i64 1
  %1007 = ptrtoint float* %1006 to i64
  store i64 %1007, i64* %599, align 8
  br label %1234

1008:                                             ; preds = %1000
  %1009 = ptrtoint float* %1001 to i64
  %1010 = load i64, i64* %603, align 8
  %1011 = sub i64 %1009, %1010
  %1012 = ashr exact i64 %1011, 2
  %1013 = add nsw i64 %1012, 1
  %1014 = icmp ugt i64 %1013, 4611686018427387903
  br i1 %1014, label %1015, label %1017

1015:                                             ; preds = %1008
  %1016 = bitcast %"class.std::__1::vector.33"* %601 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1016) #7
  unreachable

1017:                                             ; preds = %1008
  %1018 = sub i64 %1004, %1010
  %1019 = ashr exact i64 %1018, 2
  %1020 = icmp ult i64 %1019, 2305843009213693951
  br i1 %1020, label %1021, label %1029

1021:                                             ; preds = %1017
  %1022 = ashr exact i64 %1018, 1
  %1023 = icmp ult i64 %1022, %1013
  %1024 = select i1 %1023, i64 %1013, i64 %1022
  %1025 = icmp eq i64 %1024, 0
  br i1 %1025, label %1034, label %1026

1026:                                             ; preds = %1021
  %1027 = icmp ugt i64 %1024, 4611686018427387903
  br i1 %1027, label %1028, label %1029

1028:                                             ; preds = %1026
  tail call void @abort() #7
  unreachable

1029:                                             ; preds = %1026, %1017
  %1030 = phi i64 [ %1024, %1026 ], [ 4611686018427387903, %1017 ]
  %1031 = shl i64 %1030, 2
  %1032 = tail call i8* @_Znwm(i64 %1031) #8
  %1033 = bitcast i8* %1032 to float*
  br label %1034

1034:                                             ; preds = %1029, %1021
  %1035 = phi i64 [ %1030, %1029 ], [ 0, %1021 ]
  %1036 = phi float* [ %1033, %1029 ], [ null, %1021 ]
  %1037 = getelementptr inbounds float, float* %1036, i64 %1012
  %1038 = getelementptr inbounds float, float* %1036, i64 %1035
  %1039 = ptrtoint float* %1038 to i64
  store float %833, float* %1037, align 4
  %1040 = getelementptr inbounds float, float* %1037, i64 1
  %1041 = ptrtoint float* %1040 to i64
  %1042 = load float*, float** %605, align 8
  %1043 = load i64, i64* %599, align 8
  %1044 = ptrtoint float* %1042 to i64
  %1045 = sub i64 %1043, %1044
  %1046 = ashr exact i64 %1045, 2
  %1047 = sub nsw i64 0, %1046
  %1048 = getelementptr inbounds float, float* %1037, i64 %1047
  %1049 = ptrtoint float* %1048 to i64
  %1050 = icmp sgt i64 %1045, 0
  br i1 %1050, label %1051, label %1055

1051:                                             ; preds = %1034
  %1052 = bitcast float* %1048 to i8*
  %1053 = bitcast float* %1042 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1052, i8* align 4 %1053, i64 %1045, i1 false) #6
  %1054 = load float*, float** %605, align 8
  br label %1055

1055:                                             ; preds = %1051, %1034
  %1056 = phi float* [ %1042, %1034 ], [ %1054, %1051 ]
  store i64 %1049, i64* %603, align 8
  store i64 %1041, i64* %599, align 8
  store i64 %1039, i64* %604, align 8
  %1057 = icmp eq float* %1056, null
  br i1 %1057, label %1234, label %1058

1058:                                             ; preds = %1055
  %1059 = bitcast float* %1056 to i8*
  tail call void @_ZdlPv(i8* %1059) #8
  br label %1234

1060:                                             ; preds = %826
  %1061 = sext i32 %828 to i64
  %1062 = load i32*, i32** %594, align 8
  %1063 = getelementptr inbounds i32, i32* %1062, i64 %1061
  %1064 = load i32, i32* %1063, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = load i32*, i32** %31, align 8
  %1067 = getelementptr inbounds i32, i32* %1066, i64 %1065
  %1068 = load i32, i32* %1067, align 4
  %1069 = load i64*, i64** %358, align 8
  %1070 = lshr i64 %1061, 6
  %1071 = getelementptr inbounds i64, i64* %1069, i64 %1070
  %1072 = and i64 %1061, 63
  %1073 = shl i64 1, %1072
  %1074 = load i64, i64* %1071, align 8
  %1075 = and i64 %1074, %1073
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1080, label %1077

1077:                                             ; preds = %1060
  %1078 = xor i64 %1073, -1
  %1079 = and i64 %1074, %1078
  store i64 %1079, i64* %1071, align 8
  br label %1126

1080:                                             ; preds = %1060
  %1081 = load i32*, i32** %595, align 8
  %1082 = getelementptr inbounds i32, i32* %1081, i64 %1061
  %1083 = load i32, i32* %1082, align 4
  %1084 = icmp eq i32 %1083, 1
  br i1 %1084, label %1085, label %1126

1085:                                             ; preds = %1080
  %1086 = load i32*, i32** %414, align 8
  %1087 = getelementptr inbounds i32, i32* %1086, i64 %1061
  %1088 = load i32, i32* %1087, align 4
  %1089 = shl nsw i32 %828, 1
  %1090 = or i32 %1089, 1
  %1091 = sext i32 %1090 to i64
  %1092 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1093 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1091
  %1094 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1091, i32 0, i32 1
  %1095 = bitcast i32** %1094 to i64*
  %1096 = load i64, i64* %1095, align 8
  %1097 = bitcast %"class.std::__1::vector"* %1093 to i64*
  %1098 = load i64, i64* %1097, align 8
  %1099 = sub i64 %1096, %1098
  %1100 = lshr exact i64 %1099, 2
  %1101 = load i32*, i32** %435, align 8
  %1102 = getelementptr inbounds i32, i32* %1101, i64 %1061
  %1103 = load i32, i32* %1102, align 4
  %1104 = trunc i64 %1100 to i32
  %1105 = mul i32 %1103, %1104
  %1106 = icmp sgt i32 %1088, -1
  br i1 %1106, label %1107, label %1119

1107:                                             ; preds = %1085
  %1108 = shl nsw i32 %1088, 1
  %1109 = sext i32 %1108 to i64
  %1110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1109, i32 0, i32 0
  %1111 = load i32*, i32** %1110, align 8
  %1112 = getelementptr inbounds i32, i32* %1111, i64 1
  %1113 = sext i32 %1105 to i64
  %1114 = getelementptr inbounds i32, i32* %1112, i64 %1113
  %1115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1092, i64 %1109, i32 0, i32 1
  %1116 = load i32*, i32** %1115, align 8
  %1117 = icmp eq i32* %1114, %1116
  br i1 %1117, label %1126, label %1118

1118:                                             ; preds = %1107
  store i32* %1114, i32** %1115, align 8
  br label %1126

1119:                                             ; preds = %1085
  %1120 = load float*, float** %597, align 8
  %1121 = sext i32 %1105 to i64
  %1122 = getelementptr inbounds float, float* %1120, i64 %1121
  %1123 = load float*, float** %598, align 8
  %1124 = icmp eq float* %1122, %1123
  br i1 %1124, label %1126, label %1125

1125:                                             ; preds = %1119
  store float* %1122, float** %598, align 8
  br label %1126

1126:                                             ; preds = %1125, %1119, %1118, %1107, %1080, %1077
  %1127 = load i32*, i32** %578, align 8
  %1128 = getelementptr inbounds i32, i32* %1127, i64 %1061
  %1129 = load i32, i32* %1128, align 4
  %1130 = add nsw i32 %1129, 1
  store i32 %1130, i32* %1128, align 4
  %1131 = icmp slt i32 %1130, %1068
  br i1 %1131, label %1132, label %1138

1132:                                             ; preds = %1126
  %1133 = load i32*, i32** %282, align 8
  %1134 = getelementptr inbounds i32, i32* %1133, i64 %1061
  %1135 = load i32, i32* %1134, align 4
  %1136 = add nsw i32 %1135, %827
  %1137 = add nuw nsw i32 %828, 1
  br label %1234

1138:                                             ; preds = %1126
  %1139 = load i32*, i32** %595, align 8
  %1140 = getelementptr inbounds i32, i32* %1139, i64 %1061
  %1141 = load i32, i32* %1140, align 4
  %1142 = icmp eq i32 %1141, 1
  br i1 %1142, label %1143, label %1225

1143:                                             ; preds = %1138
  %1144 = shl nsw i32 %828, 1
  %1145 = sext i32 %1144 to i64
  %1146 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %596, align 8
  %1147 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145
  %1148 = or i32 %1144, 1
  %1149 = sext i32 %1148 to i64
  %1150 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1149
  %1151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1149, i32 0, i32 1
  %1152 = bitcast i32** %1151 to i64*
  %1153 = load i64, i64* %1152, align 8
  %1154 = bitcast %"class.std::__1::vector"* %1150 to i64*
  %1155 = load i64, i64* %1154, align 8
  %1156 = sub i64 %1153, %1155
  %1157 = lshr exact i64 %1156, 2
  %1158 = trunc i64 %1157 to i32
  %1159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145, i32 0, i32 1
  %1160 = load i32*, i32** %1159, align 8
  %1161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1146, i64 %1145, i32 0, i32 2, i32 0, i32 0
  %1162 = load i32*, i32** %1161, align 8
  %1163 = icmp ult i32* %1160, %1162
  %1164 = ptrtoint i32* %1162 to i64
  br i1 %1163, label %1165, label %1169

1165:                                             ; preds = %1143
  store i32 %1158, i32* %1160, align 4
  %1166 = getelementptr inbounds i32, i32* %1160, i64 1
  %1167 = ptrtoint i32* %1166 to i64
  %1168 = bitcast i32** %1159 to i64*
  store i64 %1167, i64* %1168, align 8
  br label %1225

1169:                                             ; preds = %1143
  %1170 = ptrtoint i32* %1160 to i64
  %1171 = bitcast i32** %1159 to i64*
  %1172 = bitcast %"class.std::__1::vector"* %1147 to i64*
  %1173 = load i64, i64* %1172, align 8
  %1174 = sub i64 %1170, %1173
  %1175 = ashr exact i64 %1174, 2
  %1176 = add nsw i64 %1175, 1
  %1177 = icmp ugt i64 %1176, 4611686018427387903
  br i1 %1177, label %1178, label %1180

1178:                                             ; preds = %1169
  %1179 = bitcast %"class.std::__1::vector"* %1147 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1179) #7
  unreachable

1180:                                             ; preds = %1169
  %1181 = bitcast i32** %1161 to i64*
  %1182 = sub i64 %1164, %1173
  %1183 = ashr exact i64 %1182, 2
  %1184 = icmp ult i64 %1183, 2305843009213693951
  br i1 %1184, label %1185, label %1193

1185:                                             ; preds = %1180
  %1186 = ashr exact i64 %1182, 1
  %1187 = icmp ult i64 %1186, %1176
  %1188 = select i1 %1187, i64 %1176, i64 %1186
  %1189 = icmp eq i64 %1188, 0
  br i1 %1189, label %1198, label %1190

1190:                                             ; preds = %1185
  %1191 = icmp ugt i64 %1188, 4611686018427387903
  br i1 %1191, label %1192, label %1193

1192:                                             ; preds = %1190
  tail call void @abort() #7
  unreachable

1193:                                             ; preds = %1190, %1180
  %1194 = phi i64 [ %1188, %1190 ], [ 4611686018427387903, %1180 ]
  %1195 = shl i64 %1194, 2
  %1196 = tail call i8* @_Znwm(i64 %1195) #8
  %1197 = bitcast i8* %1196 to i32*
  br label %1198

1198:                                             ; preds = %1193, %1185
  %1199 = phi i64 [ %1194, %1193 ], [ 0, %1185 ]
  %1200 = phi i32* [ %1197, %1193 ], [ null, %1185 ]
  %1201 = getelementptr inbounds i32, i32* %1200, i64 %1175
  %1202 = getelementptr inbounds i32, i32* %1200, i64 %1199
  %1203 = ptrtoint i32* %1202 to i64
  store i32 %1158, i32* %1201, align 4
  %1204 = getelementptr inbounds i32, i32* %1201, i64 1
  %1205 = ptrtoint i32* %1204 to i64
  %1206 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1147, i64 0, i32 0, i32 0
  %1207 = load i32*, i32** %1206, align 8
  %1208 = load i64, i64* %1171, align 8
  %1209 = ptrtoint i32* %1207 to i64
  %1210 = sub i64 %1208, %1209
  %1211 = ashr exact i64 %1210, 2
  %1212 = sub nsw i64 0, %1211
  %1213 = getelementptr inbounds i32, i32* %1201, i64 %1212
  %1214 = ptrtoint i32* %1213 to i64
  %1215 = icmp sgt i64 %1210, 0
  br i1 %1215, label %1216, label %1220

1216:                                             ; preds = %1198
  %1217 = bitcast i32* %1213 to i8*
  %1218 = bitcast i32* %1207 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1217, i8* align 4 %1218, i64 %1210, i1 false) #6
  %1219 = load i32*, i32** %1206, align 8
  br label %1220

1220:                                             ; preds = %1216, %1198
  %1221 = phi i32* [ %1207, %1198 ], [ %1219, %1216 ]
  store i64 %1214, i64* %1172, align 8
  store i64 %1205, i64* %1171, align 8
  store i64 %1203, i64* %1181, align 8
  %1222 = icmp eq i32* %1221, null
  br i1 %1222, label %1225, label %1223

1223:                                             ; preds = %1220
  %1224 = bitcast i32* %1221 to i8*
  tail call void @_ZdlPv(i8* %1224) #8
  br label %1225

1225:                                             ; preds = %1223, %1220, %1165, %1138
  %1226 = load i32*, i32** %578, align 8
  %1227 = getelementptr inbounds i32, i32* %1226, i64 %1061
  store i32 -1, i32* %1227, align 4
  %1228 = load i32*, i32** %282, align 8
  %1229 = getelementptr inbounds i32, i32* %1228, i64 %1061
  %1230 = load i32, i32* %1229, align 4
  %1231 = mul nsw i32 %1230, %1068
  %1232 = sub nsw i32 %827, %1231
  %1233 = add nsw i32 %828, -1
  br label %1234

1234:                                             ; preds = %992, %995, %1005, %1055, %1058, %895, %1132, %1225
  %1235 = phi i32 [ %1137, %1132 ], [ %1233, %1225 ], [ %455, %895 ], [ %455, %1058 ], [ %455, %1055 ], [ %455, %1005 ], [ %455, %995 ], [ %455, %992 ]
  %1236 = phi i32 [ %1136, %1132 ], [ %1232, %1225 ], [ %827, %895 ], [ %827, %1058 ], [ %827, %1055 ], [ %827, %1005 ], [ %827, %995 ], [ %827, %992 ]
  %1237 = icmp sgt i32 %1235, -1
  br i1 %1237, label %826, label %1238

1238:                                             ; preds = %1234
  %1239 = load i32*, i32** %578, align 8
  %1240 = icmp eq i32* %1239, null
  br i1 %1240, label %1245, label %1241

1241:                                             ; preds = %1238
  %1242 = bitcast i32* %1239 to i8*
  %1243 = ptrtoint i32* %1239 to i64
  %1244 = bitcast i32** %579 to i64*
  store i64 %1243, i64* %1244, align 8
  tail call void @_ZdlPv(i8* %1242) #8
  br label %1245

1245:                                             ; preds = %1238, %1241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %577) #6
  %1246 = load i32*, i32** %521, align 16
  %1247 = icmp eq i32* %1246, null
  br i1 %1247, label %1252, label %1248

1248:                                             ; preds = %1245
  %1249 = ptrtoint i32* %1246 to i64
  %1250 = bitcast i32** %522 to i64*
  store i64 %1249, i64* %1250, align 8
  %1251 = bitcast i32* %1246 to i8*
  tail call void @_ZdlPv(i8* %1251) #8
  br label %1252

1252:                                             ; preds = %1245, %1248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %520) #6
  %1253 = load i32*, i32** %435, align 8
  %1254 = icmp eq i32* %1253, null
  br i1 %1254, label %1259, label %1255

1255:                                             ; preds = %1252
  %1256 = ptrtoint i32* %1253 to i64
  %1257 = bitcast i32** %436 to i64*
  store i64 %1256, i64* %1257, align 8
  %1258 = bitcast i32* %1253 to i8*
  tail call void @_ZdlPv(i8* %1258) #8
  br label %1259

1259:                                             ; preds = %1252, %1255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %434) #6
  %1260 = load i32*, i32** %414, align 8
  %1261 = icmp eq i32* %1260, null
  br i1 %1261, label %1266, label %1262

1262:                                             ; preds = %1259
  %1263 = ptrtoint i32* %1260 to i64
  %1264 = bitcast i32** %415 to i64*
  store i64 %1263, i64* %1264, align 8
  %1265 = bitcast i32* %1260 to i8*
  tail call void @_ZdlPv(i8* %1265) #8
  br label %1266

1266:                                             ; preds = %1259, %1262
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #6
  %1267 = load i64*, i64** %358, align 8
  %1268 = icmp eq i64* %1267, null
  br i1 %1268, label %1271, label %1269

1269:                                             ; preds = %1266
  %1270 = bitcast i64* %1267 to i8*
  tail call void @_ZdlPv(i8* %1270) #8
  br label %1271

1271:                                             ; preds = %1266, %1269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %357) #6
  %1272 = load i32*, i32** %282, align 8
  %1273 = icmp eq i32* %1272, null
  br i1 %1273, label %1278, label %1274

1274:                                             ; preds = %1271
  %1275 = ptrtoint i32* %1272 to i64
  %1276 = bitcast i32** %283 to i64*
  store i64 %1275, i64* %1276, align 8
  %1277 = bitcast i32* %1272 to i8*
  tail call void @_ZdlPv(i8* %1277) #8
  br label %1278

1278:                                             ; preds = %1271, %1274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #6
  %1279 = load i32*, i32** %164, align 8
  %1280 = icmp eq i32* %1279, null
  br i1 %1280, label %1285, label %1281

1281:                                             ; preds = %1278
  %1282 = ptrtoint i32* %1279 to i64
  %1283 = bitcast i32** %165 to i64*
  store i64 %1282, i64* %1283, align 8
  %1284 = bitcast i32* %1279 to i8*
  tail call void @_ZdlPv(i8* %1284) #8
  br label %1285

1285:                                             ; preds = %1278, %1281
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #6
  %1286 = load i32*, i32** %84, align 8
  %1287 = icmp eq i32* %1286, null
  br i1 %1287, label %1291, label %1288

1288:                                             ; preds = %1285
  %1289 = ptrtoint i32* %1286 to i64
  store i64 %1289, i64* %112, align 8
  %1290 = bitcast i32* %1286 to i8*
  tail call void @_ZdlPv(i8* %1290) #8
  br label %1291

1291:                                             ; preds = %1285, %1288
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #6
  %1292 = load i32*, i32** %31, align 8
  %1293 = icmp eq i32* %1292, null
  br i1 %1293, label %1298, label %1294

1294:                                             ; preds = %1291
  %1295 = ptrtoint i32* %1292 to i64
  %1296 = bitcast i32** %32 to i64*
  store i64 %1295, i64* %1296, align 8
  %1297 = bitcast i32* %1292 to i8*
  tail call void @_ZdlPv(i8* %1297) #8
  br label %1298

1298:                                             ; preds = %1291, %1294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #6
  ret i32 0

1299:                                             ; preds = %152
  %1300 = sub nsw i64 %160, %18
  %1301 = shl i64 %1300, 32
  %1302 = ashr exact i64 %1301, 32
  br label %1303

1303:                                             ; preds = %1299, %152
  %1304 = phi i32** [ %55, %1299 ], [ %56, %152 ]
  %1305 = phi i64 [ %1302, %1299 ], [ %160, %152 ]
  %1306 = load i32*, i32** %1304, align 8
  %1307 = getelementptr inbounds i32, i32* %1306, i64 %1305
  %1308 = load i32, i32* %1307, align 4
  %1309 = load i32*, i32** %31, align 8
  %1310 = getelementptr inbounds i32, i32* %1309, i64 %160
  store i32 %1308, i32* %1310, align 4
  %1311 = add nuw nsw i64 %145, 2
  %1312 = add i64 %146, -2
  %1313 = icmp eq i64 %1312, 0
  br i1 %1313, label %64, label %144
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZN6tflite8optimize8sparsity15FormatConverterIfE13SparseToDenseEPKf(%"class.tflite::optimize::sparsity::FormatConverter.32"*, float*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8
  %7 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8, i32 0, i32 1
  %10 = bitcast float** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.33"* %6 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp ugt i64 %8, %15
  %17 = inttoptr i64 %13 to float*
  br i1 %16, label %18, label %23

18:                                               ; preds = %2
  %19 = sub i64 %8, %15
  tail call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.33"* %6, i64 %19) #6
  %20 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %6, i64 0, i32 0, i32 0
  %21 = load float*, float** %20, align 8
  %22 = load i64, i64* %10, align 8
  br label %28

23:                                               ; preds = %2
  %24 = icmp ult i64 %8, %15
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = getelementptr inbounds float, float* %17, i64 %8
  store float* %26, float** %9, align 8
  %27 = ptrtoint float* %26 to i64
  br label %28

28:                                               ; preds = %18, %23, %25
  %29 = phi i64 [ %22, %18 ], [ %11, %23 ], [ %27, %25 ]
  %30 = phi float* [ %21, %18 ], [ %17, %23 ], [ %17, %25 ]
  %31 = ptrtoint float* %30 to i64
  %32 = sub i64 %29, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = bitcast float* %30 to i8*
  %36 = and i64 %32, -4
  %37 = icmp ult i64 %32, 4
  %38 = sext i1 %37 to i64
  %39 = shl nsw i64 %38, 2
  %40 = sub i64 %36, %39
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 %40, i1 false)
  br label %41

41:                                               ; preds = %34, %28
  %42 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %45, %47
  %49 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #6
  store i32 0, i32* %3, align 4
  %50 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #6
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %54 = shl i64 %48, 30
  %55 = ashr exact i64 %54, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 24, i1 false) #6
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %41
  %58 = bitcast i32** %52 to i64*
  br label %79

59:                                               ; preds = %41
  %60 = icmp ugt i64 %55, 4611686018427387903
  br i1 %60, label %61, label %63

61:                                               ; preds = %59
  %62 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %62) #7
  unreachable

63:                                               ; preds = %59
  %64 = ashr exact i64 %54, 30
  %65 = tail call i8* @_Znwm(i64 %64) #8
  %66 = bitcast i8* %65 to i32*
  %67 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds i32, i32* %66, i64 %55
  store i32* %68, i32** %53, align 8
  %69 = bitcast i32** %52 to i64*
  %70 = ptrtoint i8* %65 to i64
  %71 = add nsw i64 %55, -1
  %72 = getelementptr i32, i32* %66, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = sub i64 4, %70
  %75 = add i64 %74, %73
  %76 = and i64 %75, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 0, i64 %76, i1 false) #6
  %77 = ptrtoint i32* %68 to i64
  store i64 %77, i64* %69, align 8
  %78 = ptrtoint i8* %65 to i64
  br label %79

79:                                               ; preds = %57, %63
  %80 = phi i64* [ %58, %57 ], [ %69, %63 ]
  %81 = phi i8* [ null, %57 ], [ %65, %63 ]
  %82 = phi i64 [ 0, %57 ], [ %78, %63 ]
  %83 = phi i64 [ 0, %57 ], [ %70, %63 ]
  %84 = phi i64 [ 0, %57 ], [ %77, %63 ]
  %85 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #6
  %86 = sub i64 %84, %83
  %87 = ashr exact i64 %86, 2
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %111, label %89

89:                                               ; preds = %79
  %90 = icmp ugt i64 %87, 4611686018427387903
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %92) #7
  unreachable

93:                                               ; preds = %89
  %94 = tail call i8* @_Znwm(i64 %86) #8
  %95 = bitcast i8* %94 to i32*
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %97 = bitcast i32** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds i32, i32* %95, i64 %87
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %99, i32** %100, align 8
  %101 = bitcast i32** %96 to i64*
  %102 = ptrtoint i8* %94 to i64
  %103 = sub i64 %84, %82
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %93
  %106 = lshr exact i64 %103, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %94, i8* align 4 %81, i64 %103, i1 false) #6
  %107 = getelementptr inbounds i32, i32* %95, i64 %106
  %108 = ptrtoint i32* %107 to i64
  br label %109

109:                                              ; preds = %105, %93
  %110 = phi i64 [ %108, %105 ], [ %102, %93 ]
  store i64 %110, i64* %101, align 8
  br label %111

111:                                              ; preds = %79, %109
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIfE8PopulateEPKfNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.32"* %0, float* %1, %"class.std::__1::vector"* nonnull %5, i32 0, i32 0, i32* nonnull %3)
  %112 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #8
  br label %120

120:                                              ; preds = %111, %115
  %121 = load i32*, i32** %51, align 8
  %122 = icmp eq i32* %121, null
  br i1 %122, label %126, label %123

123:                                              ; preds = %120
  %124 = ptrtoint i32* %121 to i64
  store i64 %124, i64* %80, align 8
  %125 = bitcast i32* %121 to i8*
  call void @_ZdlPv(i8* %125) #8
  br label %126

126:                                              ; preds = %120, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #6
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfE8PopulateEPKfNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.32"*, float*, %"class.std::__1::vector"*, i32, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 2
  %18 = icmp eq i64 %17, %10
  %19 = inttoptr i64 %15 to i32*
  br i1 %18, label %20, label %156

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.32"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 2
  %28 = trunc i64 %27 to i32
  %29 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #6
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #6
  %32 = shl i64 %26, 30
  %33 = bitcast i32** %31 to i64*
  %34 = bitcast %"class.std::__1::vector"* %7 to i64*
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %48, label %36

36:                                               ; preds = %20
  %37 = ashr exact i64 %32, 32
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %7, i64 %37) #6
  %38 = load i64, i64* %33, align 8
  %39 = load i64, i64* %34, align 8
  %40 = inttoptr i64 %39 to i32*
  %41 = icmp eq i64 %38, %39
  br i1 %41, label %48, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %60

45:                                               ; preds = %60
  %46 = inttoptr i64 %73 to i32*
  %47 = and i64 %71, 4294967295
  br label %48

48:                                               ; preds = %20, %45, %36
  %49 = phi i32* [ %40, %36 ], [ %46, %45 ], [ null, %20 ]
  %50 = phi i64 [ 0, %36 ], [ %47, %45 ], [ 0, %20 ]
  %51 = load i64, i64* %12, align 8
  %52 = load i64, i64* %14, align 8
  %53 = sub i64 %51, %52
  %54 = ashr exact i64 %53, 2
  %55 = icmp ugt i64 %54, %50
  br i1 %55, label %56, label %109

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 3, i32 0, i32 0
  %58 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 5, i32 0, i32 0
  br label %78

60:                                               ; preds = %42, %60
  %61 = phi i32* [ %40, %42 ], [ %77, %60 ]
  %62 = phi i64 [ 0, %42 ], [ %71, %60 ]
  %63 = load i32*, i32** %43, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 %62
  %65 = load i32, i32* %64, align 4
  %66 = load i32*, i32** %44, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 %62
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i32, i32* %61, i64 %69
  store i32 %68, i32* %70, align 4
  %71 = add nuw i64 %62, 1
  %72 = load i64, i64* %33, align 8
  %73 = load i64, i64* %34, align 8
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 2
  %76 = icmp ugt i64 %75, %71
  %77 = inttoptr i64 %73 to i32*
  br i1 %76, label %60, label %45

78:                                               ; preds = %107, %56
  %79 = phi i64 [ %52, %56 ], [ %103, %107 ]
  %80 = phi i32* [ %49, %56 ], [ %108, %107 ]
  %81 = phi i64 [ %50, %56 ], [ %101, %107 ]
  %82 = inttoptr i64 %79 to i32*
  %83 = load i32*, i32** %57, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %81
  %85 = load i32, i32* %84, align 4
  %86 = sub nsw i32 %85, %28
  %87 = sext i32 %86 to i64
  %88 = load i32*, i32** %58, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 %87
  %90 = load i32, i32* %89, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i32, i32* %80, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = load i32*, i32** %59, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 %87
  %96 = load i32, i32* %95, align 4
  %97 = mul nsw i32 %96, %93
  %98 = getelementptr inbounds i32, i32* %82, i64 %81
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  store i32 %100, i32* %92, align 4
  %101 = add nuw i64 %81, 1
  %102 = load i64, i64* %12, align 8
  %103 = load i64, i64* %14, align 8
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 2
  %106 = icmp ugt i64 %105, %101
  br i1 %106, label %107, label %109

107:                                              ; preds = %78
  %108 = load i32*, i32** %30, align 8
  br label %78

109:                                              ; preds = %78, %48
  %110 = load i32, i32* %5, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds float, float* %1, i64 %111
  %113 = bitcast float* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = load i64, i64* %22, align 8
  %116 = load i64, i64* %24, align 8
  %117 = sub i64 %115, %116
  %118 = lshr exact i64 %117, 2
  %119 = trunc i64 %118 to i32
  %120 = add i32 %119, -1
  %121 = icmp sgt i32 %120, -1
  %122 = inttoptr i64 %116 to i32*
  br i1 %121, label %123, label %142

123:                                              ; preds = %109
  %124 = load i32*, i32** %30, align 8
  %125 = sext i32 %120 to i64
  br label %126

126:                                              ; preds = %126, %123
  %127 = phi i64 [ %125, %123 ], [ %141, %126 ]
  %128 = phi i32 [ %120, %123 ], [ %139, %126 ]
  %129 = phi i32 [ 1, %123 ], [ %138, %126 ]
  %130 = phi i64 [ 0, %123 ], [ %135, %126 ]
  %131 = getelementptr inbounds i32, i32* %124, i64 %127
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %132, %129
  %134 = sext i32 %133 to i64
  %135 = add i64 %130, %134
  %136 = getelementptr inbounds i32, i32* %122, i64 %127
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, %129
  %139 = add nsw i32 %128, -1
  %140 = icmp sgt i32 %128, 0
  %141 = add nsw i64 %127, -1
  br i1 %140, label %126, label %142

142:                                              ; preds = %126, %109
  %143 = phi i64 [ 0, %109 ], [ %135, %126 ]
  %144 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 8, i32 0, i32 0
  %145 = load float*, float** %144, align 8
  %146 = getelementptr inbounds float, float* %145, i64 %143
  %147 = bitcast float* %146 to i32*
  store i32 %114, i32* %147, align 4
  %148 = load i32, i32* %5, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %5, align 4
  %150 = load i32*, i32** %30, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %142
  %153 = ptrtoint i32* %150 to i64
  store i64 %153, i64* %33, align 8
  %154 = bitcast i32* %150 to i8*
  call void @_ZdlPv(i8* %154) #8
  br label %155

155:                                              ; preds = %142, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #6
  br label %288

156:                                              ; preds = %6
  %157 = shl nsw i32 %3, 1
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 7, i32 0, i32 0
  %160 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %160, i64 %158, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.32", %"class.tflite::optimize::sparsity::FormatConverter.32"* %0, i64 0, i32 4, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 %10
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %220

169:                                              ; preds = %156
  %170 = icmp sgt i32 %163, 0
  br i1 %170, label %171, label %288

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::vector"* %8 to i8*
  %174 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %175 = bitcast i32** %174 to i8**
  %176 = bitcast %"class.std::__1::vector"* %8 to i8**
  %177 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %178 = bitcast i32** %174 to i64*
  %179 = add nsw i32 %3, 1
  %180 = mul nsw i32 %163, %4
  %181 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  br label %182

182:                                              ; preds = %218, %171
  %183 = phi i32* [ %19, %171 ], [ %219, %218 ]
  %184 = phi i32 [ 0, %171 ], [ %216, %218 ]
  %185 = getelementptr inbounds i32, i32* %183, i64 %10
  store i32 %184, i32* %185, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 0, i64 24, i1 false) #6
  %186 = load i64, i64* %12, align 8
  %187 = load i64, i64* %14, align 8
  %188 = sub i64 %186, %187
  %189 = ashr exact i64 %188, 2
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %208, label %191

191:                                              ; preds = %182
  %192 = icmp ugt i64 %189, 4611686018427387903
  br i1 %192, label %193, label %195

193:                                              ; preds = %191
  %194 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %194) #7
  unreachable

195:                                              ; preds = %191
  %196 = call i8* @_Znwm(i64 %188) #8
  %197 = bitcast i8* %196 to i32*
  store i8* %196, i8** %175, align 8
  store i8* %196, i8** %176, align 8
  %198 = getelementptr inbounds i32, i32* %197, i64 %189
  store i32* %198, i32** %177, align 8
  %199 = ptrtoint i8* %196 to i64
  %200 = icmp sgt i64 %188, 0
  br i1 %200, label %201, label %206

201:                                              ; preds = %195
  %202 = lshr exact i64 %188, 2
  %203 = inttoptr i64 %187 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %196, i8* align 4 %203, i64 %188, i1 false) #6
  %204 = getelementptr inbounds i32, i32* %197, i64 %202
  %205 = ptrtoint i32* %204 to i64
  br label %206

206:                                              ; preds = %201, %195
  %207 = phi i64 [ %205, %201 ], [ %199, %195 ]
  store i64 %207, i64* %178, align 8
  br label %208

208:                                              ; preds = %182, %206
  %209 = add nsw i32 %184, %180
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIfE8PopulateEPKfNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.32"* %0, float* %1, %"class.std::__1::vector"* nonnull %8, i32 %179, i32 %209, i32* %5)
  %210 = load i32*, i32** %181, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %215, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  store i64 %213, i64* %178, align 8
  %214 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %214) #8
  br label %215

215:                                              ; preds = %208, %212
  %216 = add nuw nsw i32 %184, 1
  %217 = icmp eq i32 %216, %163
  br i1 %217, label %288, label %218

218:                                              ; preds = %215
  %219 = load i32*, i32** %172, align 8
  br label %182

220:                                              ; preds = %156
  %221 = sext i32 %4 to i64
  %222 = getelementptr inbounds i32, i32* %162, i64 %221
  %223 = load i32, i32* %222, align 4
  %224 = add nsw i32 %4, 1
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i32, i32* %162, i64 %225
  %227 = load i32, i32* %226, align 4
  %228 = icmp slt i32 %223, %227
  br i1 %228, label %229, label %288

229:                                              ; preds = %220
  %230 = or i32 %157, 1
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %160, i64 %231, i32 0, i32 0
  %233 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %234 = bitcast %"class.std::__1::vector"* %9 to i8*
  %235 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %236 = bitcast i32** %235 to i8**
  %237 = bitcast %"class.std::__1::vector"* %9 to i8**
  %238 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %239 = bitcast i32** %235 to i64*
  %240 = add nsw i32 %3, 1
  %241 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %242 = sext i32 %223 to i64
  br label %243

243:                                              ; preds = %286, %229
  %244 = phi i32* [ %19, %229 ], [ %287, %286 ]
  %245 = phi i64 [ %242, %229 ], [ %280, %286 ]
  %246 = load i32*, i32** %232, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 %245
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds i32, i32* %244, i64 %10
  store i32 %248, i32* %249, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 0, i64 24, i1 false) #6
  %250 = load i64, i64* %12, align 8
  %251 = load i64, i64* %14, align 8
  %252 = sub i64 %250, %251
  %253 = ashr exact i64 %252, 2
  %254 = icmp eq i64 %252, 0
  br i1 %254, label %272, label %255

255:                                              ; preds = %243
  %256 = icmp ugt i64 %253, 4611686018427387903
  br i1 %256, label %257, label %259

257:                                              ; preds = %255
  %258 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %258) #7
  unreachable

259:                                              ; preds = %255
  %260 = call i8* @_Znwm(i64 %252) #8
  %261 = bitcast i8* %260 to i32*
  store i8* %260, i8** %236, align 8
  store i8* %260, i8** %237, align 8
  %262 = getelementptr inbounds i32, i32* %261, i64 %253
  store i32* %262, i32** %238, align 8
  %263 = ptrtoint i8* %260 to i64
  %264 = icmp sgt i64 %252, 0
  br i1 %264, label %265, label %270

265:                                              ; preds = %259
  %266 = lshr exact i64 %252, 2
  %267 = inttoptr i64 %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %260, i8* align 4 %267, i64 %252, i1 false) #6
  %268 = getelementptr inbounds i32, i32* %261, i64 %266
  %269 = ptrtoint i32* %268 to i64
  br label %270

270:                                              ; preds = %265, %259
  %271 = phi i64 [ %269, %265 ], [ %263, %259 ]
  store i64 %271, i64* %239, align 8
  br label %272

272:                                              ; preds = %243, %270
  %273 = trunc i64 %245 to i32
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIfE8PopulateEPKfNSt3__16vectorIiNS6_9allocatorIiEEEEiiPi(%"class.tflite::optimize::sparsity::FormatConverter.32"* %0, float* %1, %"class.std::__1::vector"* nonnull %9, i32 %240, i32 %273, i32* %5)
  %274 = load i32*, i32** %241, align 8
  %275 = icmp eq i32* %274, null
  br i1 %275, label %279, label %276

276:                                              ; preds = %272
  %277 = ptrtoint i32* %274 to i64
  store i64 %277, i64* %239, align 8
  %278 = bitcast i32* %274 to i8*
  call void @_ZdlPv(i8* %278) #8
  br label %279

279:                                              ; preds = %272, %276
  %280 = add nsw i64 %245, 1
  %281 = load i32*, i32** %161, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %225
  %283 = load i32, i32* %282, align 4
  %284 = sext i32 %283 to i64
  %285 = icmp slt i64 %280, %284
  br i1 %285, label %286, label %288

286:                                              ; preds = %279
  %287 = load i32*, i32** %233, align 8
  br label %243

288:                                              ; preds = %279, %215, %220, %169, %155
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #6
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #7
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #7
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #8
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #6
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #6
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI19TfLiteDimensionTypeNS_9allocatorIS1_EEE8__appendEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #6
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #7
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #7
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #8
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #6
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #6
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::vector"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::vector"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::vector"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 %18, i32 0, i32 0
  %20 = bitcast i32** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %26, i1 false) #6
  %27 = ptrtoint %"class.std::__1::vector"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %124

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #7
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #8
  %52 = bitcast i8* %51 to %"class.std::__1::vector"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"class.std::__1::vector"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %55, i64 %34
  %57 = ptrtoint %"class.std::__1::vector"* %56 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %55, i64 %54
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %56, i64 %1
  br label %60

60:                                               ; preds = %53, %60
  %61 = phi %"class.std::__1::vector"* [ %64, %60 ], [ %56, %53 ]
  %62 = phi i64 [ %65, %60 ], [ %57, %53 ]
  %63 = inttoptr i64 %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #6
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %61, i64 1
  %65 = ptrtoint %"class.std::__1::vector"* %64 to i64
  %66 = icmp eq %"class.std::__1::vector"* %59, %64
  br i1 %66, label %67, label %60

67:                                               ; preds = %60
  %68 = ptrtoint %"class.std::__1::vector"* %58 to i64
  %69 = ptrtoint %"class.std::__1::vector"* %59 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %70, align 8
  %72 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %6, align 8
  %73 = icmp eq %"class.std::__1::vector"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = ptrtoint %"class.std::__1::vector"* %71 to i64
  br label %101

76:                                               ; preds = %67, %76
  %77 = phi %"class.std::__1::vector"* [ %79, %76 ], [ %56, %67 ]
  %78 = phi %"class.std::__1::vector"* [ %80, %76 ], [ %72, %67 ]
  %79 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %78, i64 -1
  %81 = bitcast %"class.std::__1::vector"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #6
  %82 = bitcast %"class.std::__1::vector"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.std::__1::vector"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %78, i64 -1, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 -1, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %78, i64 -1, i32 0, i32 2, i32 0, i32 0
  %91 = bitcast i32** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %77, i64 -1, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i32** %93 to i64*
  store i64 %92, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #6
  %96 = icmp eq %"class.std::__1::vector"* %80, %71
  br i1 %96, label %97, label %76

97:                                               ; preds = %76
  %98 = ptrtoint %"class.std::__1::vector"* %79 to i64
  %99 = load i64, i64* %31, align 8
  %100 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %6, align 8
  br label %101

101:                                              ; preds = %74, %97
  %102 = phi %"class.std::__1::vector"* [ %71, %74 ], [ %100, %97 ]
  %103 = phi i64 [ %57, %74 ], [ %98, %97 ]
  %104 = phi i64 [ %75, %74 ], [ %99, %97 ]
  store i64 %103, i64* %31, align 8
  store i64 %69, i64* %7, align 8
  store i64 %68, i64* %4, align 8
  %105 = inttoptr i64 %104 to %"class.std::__1::vector"*
  %106 = icmp eq %"class.std::__1::vector"* %102, %105
  br i1 %106, label %120, label %107

107:                                              ; preds = %101, %118
  %108 = phi %"class.std::__1::vector"* [ %109, %118 ], [ %102, %101 ]
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %108, i64 -1
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %109, i64 0, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %107
  %114 = ptrtoint i32* %111 to i64
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %108, i64 -1, i32 0, i32 1
  %116 = bitcast i32** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast i32* %111 to i8*
  tail call void @_ZdlPv(i8* %117) #8
  br label %118

118:                                              ; preds = %113, %107
  %119 = icmp eq %"class.std::__1::vector"* %109, %105
  br i1 %119, label %120, label %107

120:                                              ; preds = %118, %101
  %121 = icmp eq i64 %104, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = inttoptr i64 %104 to i8*
  tail call void @_ZdlPv(i8* %123) #8
  br label %124

124:                                              ; preds = %122, %120, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE6assignIPKiEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #6
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #6
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #8
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #6
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #7
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #7
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #8
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #6
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIaNS_9allocatorIaEEE8__appendEm(%"class.std::__1::vector.23"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = icmp ult i64 %9, %1
  br i1 %10, label %22, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %8 to i8*
  %13 = icmp eq i64 %1, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %12, i64 %1
  %16 = sub i64 %1, %8
  %17 = getelementptr i8, i8* %12, i64 %16
  %18 = ptrtoint i8* %17 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %18, i1 false) #6
  %19 = ptrtoint i8* %15 to i64
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i64 [ %19, %14 ], [ %8, %11 ]
  store i64 %21, i64* %7, align 8
  br label %68

22:                                               ; preds = %2
  %23 = bitcast %"class.std::__1::vector.23"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %8, %24
  %26 = add i64 %25, %1
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::vector.23"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #7
  unreachable

30:                                               ; preds = %22
  %31 = sub i64 %5, %24
  %32 = icmp ult i64 %31, 4611686018427387903
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = shl i64 %31, 1
  %35 = icmp ult i64 %34, %26
  %36 = select i1 %35, i64 %26, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %30, %33
  %39 = phi i64 [ %36, %33 ], [ 9223372036854775807, %30 ]
  %40 = tail call i8* @_Znwm(i64 %39) #8
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i64 [ %39, %38 ], [ 0, %33 ]
  %43 = phi i8* [ %40, %38 ], [ null, %33 ]
  %44 = getelementptr inbounds i8, i8* %43, i64 %25
  %45 = ptrtoint i8* %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %42
  %47 = getelementptr inbounds i8, i8* %44, i64 %1
  %48 = sub i64 %1, %45
  %49 = getelementptr i8, i8* %44, i64 %48
  %50 = ptrtoint i8* %49 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %44, i8 0, i64 %50, i1 false) #6
  %51 = ptrtoint i8* %46 to i64
  %52 = ptrtoint i8* %47 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %0, i64 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = load i64, i64* %7, align 8
  %56 = ptrtoint i8* %54 to i64
  %57 = sub i64 %55, %56
  %58 = sub i64 0, %57
  %59 = getelementptr inbounds i8, i8* %44, i64 %58
  %60 = ptrtoint i8* %59 to i64
  %61 = icmp sgt i64 %57, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %54, i64 %57, i1 false) #6
  %63 = load i8*, i8** %53, align 8
  br label %64

64:                                               ; preds = %41, %62
  %65 = phi i8* [ %54, %41 ], [ %63, %62 ]
  store i64 %60, i64* %23, align 8
  store i64 %52, i64* %7, align 8
  store i64 %51, i64* %4, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_ZdlPv(i8* nonnull %65) #8
  br label %68

68:                                               ; preds = %67, %64, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.33"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #6
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.33"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.33"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #7
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #7
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #8
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #6
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #6
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #8
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!18 = distinct !{!18, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!21 = distinct !{!21, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!24 = distinct !{!24, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!27 = distinct !{!27, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!28 = distinct !{!28, !15}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite8optimize8sparsity12_GLOBAL__N_122TfLiteIntArrayToVectorEPK14TfLiteIntArray"}
!41 = distinct !{!41, !15}
