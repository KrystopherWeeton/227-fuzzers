; ModuleID = '../../third_party/blink/renderer/modules/canvas/canvas2d/clip_list.cc'
source_filename = "../../third_party/blink/renderer/modules/canvas/canvas2d/clip_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ClipList" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [96 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::ClipList::ClipOp"*, i32, i32 }
%"struct.blink::ClipList::ClipOp" = type { %class.SkPath, i32, [4 x i8] }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8ClipList6ClipOpEEEmm = comdat any

$_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF12VectorBufferIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ClipList6ClipOpEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ClipList::ClipOp]\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink8ClipListC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::ClipList"*, %"class.blink::ClipList"*), void (%"class.blink::ClipList"*, %"class.blink::ClipList"*)* @_ZN5blink8ClipListC2ERKS0_
@_ZN5blink8ClipList6ClipOpC1Ev = hidden unnamed_addr alias void (%"struct.blink::ClipList::ClipOp"*), void (%"struct.blink::ClipList::ClipOp"*)* @_ZN5blink8ClipList6ClipOpC2Ev
@_ZN5blink8ClipList6ClipOpC1ERKS1_ = hidden unnamed_addr alias void (%"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"*), void (%"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"*)* @_ZN5blink8ClipList6ClipOpC2ERKS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ClipListC2ERKS0_(%"class.blink::ClipList"*, %"class.blink::ClipList"* nocapture readonly dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %6 = bitcast %"class.blink::ClipList"* %0 to i8**
  store i8* %5, i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 4, i32* %7, align 8
  %8 = icmp ugt i32 %4, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8ClipList6ClipOpEEEmm(i64 %10) #5
  %12 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ClipList6ClipOpEEEPKcv, i64 0, i64 0)) #5
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast %"class.blink::ClipList"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = udiv i64 %11, 24
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %7, align 8
  br label %17

17:                                               ; preds = %9, %2
  %18 = phi i8* [ %5, %2 ], [ %12, %9 ]
  %19 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %20, i32* %21, align 4
  %22 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %22, align 8
  %24 = load i32, i32* %19, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %23, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %17
  %29 = bitcast i8* %18 to %"struct.blink::ClipList::ClipOp"*
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi %"struct.blink::ClipList::ClipOp"* [ %38, %30 ], [ %29, %28 ]
  %32 = phi %"struct.blink::ClipList::ClipOp"* [ %39, %30 ], [ %23, %28 ]
  %33 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %32, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %33, %class.SkPath* dereferenceable(16) %34) #5
  %35 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %31, i64 0, i32 1
  %36 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %32, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %35, align 8
  %38 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %31, i64 1
  %39 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %32, i64 1
  %40 = icmp eq %"struct.blink::ClipList::ClipOp"* %39, %26
  br i1 %40, label %41, label %30

41:                                               ; preds = %30, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ClipList8ClipPathERK6SkPathNS_16AntiAliasingModeERK8SkMatrix(%"class.blink::ClipList"*, %class.SkPath* dereferenceable(16), i32, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::ClipList::ClipOp", align 8
  %6 = bitcast %"struct.blink::ClipList::ClipOp"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %5, i64 0, i32 1
  %9 = bitcast %"struct.blink::ClipList::ClipOp"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #5
  store i32 %2, i32* %8, align 8
  %10 = call dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* nonnull %7, %class.SkPath* dereferenceable(16) %1) #5
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %7, %class.SkMatrix* dereferenceable(40) %3, %class.SkPath* nonnull %7, i32 1) #5
  %11 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %25, label %16, !prof !2

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %17, align 8
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %18, i64 %19, i32 0
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %20, %class.SkPath* nonnull dereferenceable(16) %7) #5
  %21 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %18, i64 %19, i32 1
  %22 = load i32, i32* %8, align 8
  store i32 %22, i32* %21, align 8
  %23 = load i32, i32* %11, align 4
  %24 = add i32 %23, 1
  store i32 %24, i32* %11, align 4
  br label %27

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"* %26, %"struct.blink::ClipList::ClipOp"* nonnull dereferenceable(24) %5) #5
  br label %27

27:                                               ; preds = %16, %25
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8ClipList8PlaybackEPN2cc11PaintCanvasE(%"class.blink::ClipList"* nocapture readonly, %"class.cc::PaintCanvas"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %3, align 8
  %9 = bitcast %"class.cc::PaintCanvas"* %1 to void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)***
  br label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %7, %11
  %12 = phi %"struct.blink::ClipList::ClipOp"* [ %8, %7 ], [ %20, %11 ]
  %13 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %12, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  %17 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*** %9, align 8
  %18 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)** %17, i64 20
  %19 = load void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkPath*, i32, i1)** %18, align 8
  tail call void %19(%"class.cc::PaintCanvas"* %1, %class.SkPath* dereferenceable(16) %13, i32 1, i1 zeroext %16) #5
  %20 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %12, i64 1
  %21 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %3, align 8
  %22 = load i32, i32* %4, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %21, i64 %23
  %25 = icmp ult %"struct.blink::ClipList::ClipOp"* %20, %24
  br i1 %25, label %11, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8ClipList21IntersectPathWithClipERK6SkPath(%class.SkPath* noalias sret, %"class.blink::ClipList"* nocapture readonly, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkPath* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 16, i1 false)
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %0, %class.SkPath* dereferenceable(16) %2) #5
  %5 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ClipList", %"class.blink::ClipList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %5, align 8
  br label %11

11:                                               ; preds = %9, %11
  %12 = phi %"struct.blink::ClipList::ClipOp"* [ %15, %11 ], [ %10, %9 ]
  %13 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %12, i64 0, i32 0
  %14 = tail call zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16) %0, %class.SkPath* dereferenceable(16) %13, i32 1, %class.SkPath* %0) #5
  %15 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %12, i64 1
  %16 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %5, align 8
  %17 = load i32, i32* %6, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %16, i64 %18
  %20 = icmp ult %"struct.blink::ClipList::ClipOp"* %15, %19
  br i1 %20, label %11, label %21

21:                                               ; preds = %11, %3
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_Z2OpRK6SkPathS1_8SkPathOpPS_(%class.SkPath* dereferenceable(16), %class.SkPath* dereferenceable(16), i32, %class.SkPath*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ClipList6ClipOpC2Ev(%"struct.blink::ClipList::ClipOp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %0, i64 0, i32 0
  tail call void @_ZN6SkPathC1Ev(%class.SkPath* %2) #5
  %3 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %0, i64 0, i32 1
  store i32 1, i32* %3, align 8
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8ClipList6ClipOpC2ERKS1_(%"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %1, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %4) #5
  %5 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  ret void
}

declare void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8ClipList6ClipOpEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 89391104
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 89391104) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #5
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #5
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #5
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %20 = mul i64 %0, 24
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #5
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"*, %"struct.blink::ClipList::ClipOp"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %6, align 8
  %8 = icmp ugt %"struct.blink::ClipList::ClipOp"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::ClipList::ClipOp"* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #5
  %14 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"struct.blink::ClipList::ClipOp"* %1 to i64
  %17 = ptrtoint %"struct.blink::ClipList::ClipOp"* %7 to i64
  %18 = sub i64 %16, %17
  %19 = sdiv exact i64 %18, 24
  tail call void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #5
  %20 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %6, align 8
  %21 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"struct.blink::ClipList::ClipOp"* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"struct.blink::ClipList::ClipOp"* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %23, i64 %26, i32 0
  %28 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %24, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %27, %class.SkPath* dereferenceable(16) %28) #5
  %29 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %23, i64 %26, i32 1
  %30 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %24, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %29, align 8
  %32 = load i32, i32* %3, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #5
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #5
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #5
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #5
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %31, align 8
  %33 = icmp eq %"struct.blink::ClipList::ClipOp"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 4
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8ClipList6ClipOpEEEmm(i64 %37) #5
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ClipList6ClipOpEEEPKcv, i64 0, i64 0)) #5
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = udiv i64 %38, 24
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 4, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #5
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 5
  br i1 %3, label %4, label %38

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %5, align 8
  %7 = icmp eq %"struct.blink::ClipList::ClipOp"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::ClipList::ClipOp"*
  %10 = icmp eq %"struct.blink::ClipList::ClipOp"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %15, align 8
  br label %77

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %37, label %26

26:                                               ; preds = %16, %26
  %27 = phi %"struct.blink::ClipList::ClipOp"* [ %35, %26 ], [ %6, %16 ]
  %28 = phi %"struct.blink::ClipList::ClipOp"* [ %34, %26 ], [ %9, %16 ]
  %29 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %28, i64 0, i32 0
  %30 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %27, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %29, %class.SkPath* dereferenceable(16) %30) #5
  %31 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %28, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %27, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %31, align 8
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %30) #5
  %34 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %28, i64 1
  %35 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %27, i64 1
  %36 = icmp eq %"struct.blink::ClipList::ClipOp"* %35, %20
  br i1 %36, label %37, label %26

37:                                               ; preds = %26, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %21, %"struct.blink::ClipList::ClipOp"* %6) #5
  br label %77

38:                                               ; preds = %2
  %39 = zext i32 %1 to i64
  %40 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink8ClipList6ClipOpEEEmm(i64 %39) #5
  %41 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %40, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink8ClipList6ClipOpEEEPKcv, i64 0, i64 0)) #5
  %42 = udiv i64 %40, 24
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %44, align 8
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %45, i64 %48
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %66, label %51

51:                                               ; preds = %38
  %52 = bitcast i8* %41 to %"struct.blink::ClipList::ClipOp"*
  br label %53

53:                                               ; preds = %51, %53
  %54 = phi %"struct.blink::ClipList::ClipOp"* [ %62, %53 ], [ %45, %51 ]
  %55 = phi %"struct.blink::ClipList::ClipOp"* [ %61, %53 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %55, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %54, i64 0, i32 0
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %56, %class.SkPath* dereferenceable(16) %57) #5
  %58 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %55, i64 0, i32 1
  %59 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %54, i64 0, i32 1
  %60 = load i32, i32* %59, align 8
  store i32 %60, i32* %58, align 8
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %57) #5
  %61 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %55, i64 1
  %62 = getelementptr inbounds %"struct.blink::ClipList::ClipOp", %"struct.blink::ClipList::ClipOp"* %54, i64 1
  %63 = icmp eq %"struct.blink::ClipList::ClipOp"* %62, %49
  br i1 %63, label %64, label %53

64:                                               ; preds = %53
  %65 = load %"struct.blink::ClipList::ClipOp"*, %"struct.blink::ClipList::ClipOp"** %44, align 8
  br label %66

66:                                               ; preds = %64, %38
  %67 = phi %"struct.blink::ClipList::ClipOp"* [ %65, %64 ], [ %45, %38 ]
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %69 = bitcast i8* %68 to %"struct.blink::ClipList::ClipOp"*
  %70 = icmp eq %"struct.blink::ClipList::ClipOp"* %67, %69
  br i1 %70, label %73, label %71, !prof !3

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %72, %"struct.blink::ClipList::ClipOp"* %67) #5
  br label %73

73:                                               ; preds = %66, %71
  %74 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %43, i64* %74 monotonic, align 8
  %75 = trunc i64 %42 to i32
  %76 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %75, i32* %76, align 8
  br label %77

77:                                               ; preds = %37, %73, %12
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink8ClipList6ClipOpELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"*, %"struct.blink::ClipList::ClipOp"*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"struct.blink::ClipList::ClipOp"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #5
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
