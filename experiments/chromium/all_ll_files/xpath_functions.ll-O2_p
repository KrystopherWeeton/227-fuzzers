; ModuleID = '../../third_party/blink/renderer/core/xml/xpath_functions.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xpath_functions.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::xpath::ValueData"* }
%"class.blink::xpath::ValueData" = type { %"class.WTF::String", %"class.blink::Member.353" }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::xpath::NodeSet"* }
%"class.blink::xpath::NodeSet" = type { i8, i8, %"class.blink::HeapVector.357" }
%"class.blink::HeapVector.357" = type { %"class.WTF::Vector.360" }
%"class.WTF::Vector.360" = type { %"class.WTF::VectorBuffer.361" }
%"class.WTF::VectorBuffer.361" = type { %"class.WTF::VectorBufferBase.362" }
%"class.WTF::VectorBufferBase.362" = type { %"class.blink::Member.5"*, i32, i32 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.5", %"class.blink::Member.7", %"class.blink::Member.5", %"class.blink::Member.5", %"class.blink::Member.9" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.14", %"class.blink::Member.16", %"class.blink::Member.7", %"class.blink::Member.18", %"class.blink::Member.18", %"class.blink::Member.58", %"class.blink::Member.60", %"class.blink::Member.62", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.67", %"class.blink::HeapVector.69" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.5", %"class.blink::Member.5" }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.85", %"class.WTF::Vector.85", i8, i32, %"class.blink::Member.96", %"class.blink::Member.98", %"class.blink::Member.100", %"class.blink::Member.102", %"class.blink::Member.104", %"class.blink::Member.106", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.109", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.75", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.120", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.51", %"class.blink::Member.32", %"class.blink::Member.135", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::UserActionElementSet", %"class.blink::Member.144", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.151", i16, i8, %"class.blink::Member.158", %"class.blink::Member.160", %"class.blink::Member.162", %"class.blink::Member.164", %"class.blink::TextLinkColors", %"class.blink::Member.166", i8, [7 x i8], %"class.blink::HeapHashMap.168", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.32", %"class.WTF::Vector.175", %"class.blink::Member.180", %"class.blink::Member.182", i8, %"class.blink::Member.32", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.184", %"class.blink::HeapVector.186", %"class.std::__1::unique_ptr.194", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.200", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.212", %"class.WTF::Vector.214", i8, i8, %"class.std::__1::unique_ptr.219", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.51", %"class.blink::HeapVector.225", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.233", i8, i32, %"class.blink::Member.235", %"class.blink::Member.237", %"class.blink::Member.239", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.241", %"class.WTF::HashMap.243", %"class.blink::Member.248", %"class.blink::Member.250", %"class.blink::Member.252", %"class.blink::Member.254", %"class.blink::Member.16", %"class.blink::Member.16", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.256", i8, i32, %"class.blink::Member.263", %"class.blink::Member.265", i32, %"class.blink::Member.267", %"class.blink::Member.269", %"class.blink::Member.271", %"class.std::__1::unique_ptr.273", i64, %"class.std::__1::unique_ptr.279", i32, i32, %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.291", %"class.WTF::Vector.293", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.298", %"class.blink::Member.305", %"class.std::__1::unique_ptr.307", %"class.blink::Member.313", i8, i8, %"class.WTF::String", %"class.blink::Member.315", i8, [7 x i8], %"class.blink::HeapHashMap.317", %"class.blink::HeapObserverSet", %"class.blink::Member.331", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.333", i32, i8, i8, %"class.blink::WeakMember.335", %"class.blink::Member.336" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.78" }
%"class.blink::HeapHashMap.78" = type { %"class.WTF::HashMap.81" }
%"class.WTF::HashMap.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"struct.WTF::KeyValuePair.84"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.84" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.85" = type { %"class.WTF::VectorBuffer.86" }
%"class.WTF::VectorBuffer.86" = type { %"class.WTF::VectorBufferBase.87" }
%"class.WTF::VectorBufferBase.87" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.88 }
%class.scoped_refptr.88 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.89" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.98" = type { %"class.blink::MemberBase.99" }
%"class.blink::MemberBase.99" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.100" = type { %"class.blink::MemberBase.101" }
%"class.blink::MemberBase.101" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.102" = type { %"class.blink::MemberBase.103" }
%"class.blink::MemberBase.103" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.104" = type { %"class.blink::MemberBase.105" }
%"class.blink::MemberBase.105" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.106" = type { %"class.blink::MemberBase.107" }
%"class.blink::MemberBase.107" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.119 }
%class.scoped_refptr.119 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.123 }
%class.scoped_refptr.123 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.137" }
%"class.blink::HeapHashMap.137" = type { %"class.WTF::HashMap.140" }
%"class.WTF::HashMap.140" = type { %"class.WTF::HashTable.141" }
%"class.WTF::HashTable.141" = type <{ %"struct.WTF::KeyValuePair.143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.143" = type opaque
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.148" }
%"class.WTF::HashTable.148" = type <{ %"class.blink::WeakMember.150"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.150" = type opaque
%"class.blink::HeapHashSet.151" = type { %"class.WTF::HashSet.154" }
%"class.WTF::HashSet.154" = type { %"class.WTF::HashTable.155" }
%"class.WTF::HashTable.155" = type <{ %"class.blink::WeakMember.157"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.157" = type opaque
%"class.blink::Member.158" = type { %"class.blink::MemberBase.159" }
%"class.blink::MemberBase.159" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.162" = type { %"class.blink::MemberBase.163" }
%"class.blink::MemberBase.163" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.166" = type { %"class.blink::MemberBase.167" }
%"class.blink::MemberBase.167" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.168" = type { %"class.WTF::HashMap.171" }
%"class.WTF::HashMap.171" = type { %"class.WTF::HashTable.172" }
%"class.WTF::HashTable.172" = type <{ %"struct.WTF::KeyValuePair.174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.174" = type opaque
%"class.WTF::Vector.175" = type { %"class.WTF::VectorBuffer.176" }
%"class.WTF::VectorBuffer.176" = type { %"class.WTF::VectorBufferBase.177" }
%"class.WTF::VectorBufferBase.177" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.35" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.39", %"class.blink::Member.41", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.39" = type { %"class.WTF::SingleThreadedBitField.40" }
%"class.WTF::SingleThreadedBitField.40" = type { i32 }
%"class.blink::Member.41" = type { %"class.blink::MemberBase.42" }
%"class.blink::MemberBase.42" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.44", %"class.WTF::AtomicString", %"class.WTF::Vector.46" }
%"class.WTF::RefCounted.44" = type { %"class.base::RefCounted.45" }
%"class.base::RefCounted.45" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.46" = type { %"class.WTF::VectorBuffer.47" }
%"class.WTF::VectorBuffer.47" = type { %"class.WTF::VectorBufferBase.48", [32 x i8] }
%"class.WTF::VectorBufferBase.48" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.186" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::Member.192"*, i32, i32 }
%"class.blink::Member.192" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.200" = type { %"class.WTF::HashSet.203" }
%"class.WTF::HashSet.203" = type { %"class.WTF::HashTable.204" }
%"class.WTF::HashTable.204" = type <{ %"class.blink::WeakMember.206"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.206" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.207", i32, [4 x i8] }>
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.214" = type { %"class.WTF::VectorBuffer.215" }
%"class.WTF::VectorBuffer.215" = type { %"class.WTF::VectorBufferBase.216" }
%"class.WTF::VectorBufferBase.216" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.51" = type { %"class.WTF::Vector.54" }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.blink::Member.32"*, i32, i32 }
%"class.blink::HeapVector.225" = type { %"class.WTF::Vector.228" }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::Member.231"*, i32, i32 }
%"class.blink::Member.231" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.16" }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.241" = type { %"class.blink::MemberBase.242" }
%"class.blink::MemberBase.242" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.243" = type { %"class.WTF::HashTable.244" }
%"class.WTF::HashTable.244" = type <{ %"struct.WTF::KeyValuePair.247"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.247" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.126, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.126 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.127" }>
%"class.base::RefCountedThreadSafe.127" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.128 }
%class.scoped_refptr.128 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.129", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.129" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.130" }
%"struct.std::__1::atomic.130" = type { %"struct.std::__1::__atomic_base.131" }
%"struct.std::__1::__atomic_base.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__cxx_atomic_impl.133" }
%"struct.std::__1::__cxx_atomic_impl.133" = type { %"struct.std::__1::__cxx_atomic_base_impl.134" }
%"struct.std::__1::__cxx_atomic_base_impl.134" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.17" }
%"class.blink::HeapHashSet.256" = type { %"class.WTF::HashSet.259" }
%"class.WTF::HashSet.259" = type { %"class.WTF::HashTable.260" }
%"class.WTF::HashTable.260" = type <{ %"class.blink::Member.262"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.262" = type opaque
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.267" = type { %"class.blink::MemberBase.268" }
%"class.blink::MemberBase.268" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.269" = type { %"class.blink::MemberBase.270" }
%"class.blink::MemberBase.270" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.271" = type { %"class.blink::MemberBase.272" }
%"class.blink::MemberBase.272" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.293" = type { %"class.WTF::VectorBuffer.294" }
%"class.WTF::VectorBuffer.294" = type { %"class.WTF::VectorBufferBase.295" }
%"class.WTF::VectorBufferBase.295" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.298" = type { %"class.WTF::HashMap.301" }
%"class.WTF::HashMap.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %"struct.WTF::KeyValuePair.304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.304" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.317" = type { %"class.WTF::HashMap.320" }
%"class.WTF::HashMap.320" = type { %"class.WTF::HashTable.321" }
%"class.WTF::HashTable.321" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.324" }
%"class.blink::HeapHashSet.324" = type { %"class.WTF::HashSet.327" }
%"class.WTF::HashSet.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"class.blink::WeakMember.330"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.330" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.16", %"class.blink::HeapHashSet.340", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.347", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.340" = type { %"class.WTF::HashSet.343" }
%"class.WTF::HashSet.343" = type { %"class.WTF::HashTable.344" }
%"class.WTF::HashTable.344" = type <{ %"class.blink::Member.346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.346" = type opaque
%"class.blink::HeapTaskRunnerTimer.347" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.348", { i64, i64 } }
%"class.blink::WeakMember.348" = type { %"class.blink::MemberBase.334" }
%"class.blink::WeakMember.335" = type { %"class.blink::MemberBase.6" }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.24" }
%"class.WTF::HashMap.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ %"struct.WTF::KeyValuePair.27"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.27" = type { %"class.WTF::AtomicString", %"class.blink::Member.28" }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.32", i32, %"class.blink::HeapVector.51" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.64" }
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::HeapHashMap.66"* }
%"class.blink::HeapHashMap.66" = type opaque
%"class.blink::Member.67" = type { %"class.blink::MemberBase.68" }
%"class.blink::MemberBase.68" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.69" = type { %"class.WTF::Vector.72" }
%"class.WTF::Vector.72" = type { %"class.WTF::VectorBuffer.73" }
%"class.WTF::VectorBuffer.73" = type { %"class.WTF::VectorBufferBase.74" }
%"class.WTF::VectorBufferBase.74" = type { %"class.blink::Member.75"*, i32, i32 }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.WTF::HashMap.381" = type { %"class.WTF::HashTable.382" }
%"class.WTF::HashTable.382" = type <{ %"struct.WTF::KeyValuePair.385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.385" = type { %"class.WTF::String", %"struct.blink::xpath::FunctionRec" }
%"struct.blink::xpath::FunctionRec" = type { %"class.blink::xpath::Function"* ()*, %"class.blink::xpath::Interval" }
%"class.blink::xpath::Function" = type { %"class.blink::xpath::Expression.base", %"class.WTF::String" }
%"class.blink::xpath::Expression.base" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8 }>
%"class.blink::xpath::ParseNode" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::xpath::Expression"* }
%"class.blink::xpath::Expression" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8, [5 x i8] }>
%"class.blink::xpath::Interval" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.89" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.386", i32, [4 x i8], %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.522", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.539", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.551", %"class.std::__1::unique_ptr.557", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.564", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.395", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.451", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.502", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.422" = type { %"struct.std::__1::__atomic_base.423" }
%"struct.std::__1::__atomic_base.423" = type { %"struct.std::__1::__atomic_base.424" }
%"struct.std::__1::__atomic_base.424" = type { %"struct.std::__1::__cxx_atomic_impl.425" }
%"struct.std::__1::__cxx_atomic_impl.425" = type { %"struct.std::__1::__cxx_atomic_base_impl.426" }
%"struct.std::__1::__cxx_atomic_base_impl.426" = type { i64 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::Worklist.433"* }
%"class.blink::Worklist.433" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.blink::Worklist.440"* }
%"class.blink::Worklist.440" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::Worklist.447"* }
%"class.blink::Worklist.447" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.451" = type { %"class.std::__1::__compressed_pair.452" }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.blink::Worklist.454"* }
%"class.blink::Worklist.454" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::Worklist.461"* }
%"class.blink::Worklist.461" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::Worklist.468"* }
%"class.blink::Worklist.468" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::Worklist.475"* }
%"class.blink::Worklist.475" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.422" }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.482", %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.494", %"class.std::__1::__compressed_pair.496", [4 x i8] }>
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484", %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { i64 }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { float }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.505", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.514" }
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516" }
%"class.WTF::VectorBufferBase.516" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { %"struct.std::__1::pair.532"*, i32, i32 }
%"struct.std::__1::pair.532" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.545" }
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.433"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.440"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.447"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.454"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.461"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.568" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.563 }
%class.scoped_refptr.563 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.564" = type { %"struct.std::__1::__atomic_base.565" }
%"struct.std::__1::__atomic_base.565" = type { %"struct.std::__1::__cxx_atomic_impl.566" }
%"struct.std::__1::__cxx_atomic_impl.566" = type { %"struct.std::__1::__cxx_atomic_base_impl.567" }
%"struct.std::__1::__cxx_atomic_base_impl.567" = type { i8 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::xpath::Value" = type { i32, i8, double, %"class.blink::Member.349" }
%"class.blink::xpath::FunLast" = type { %"class.blink::xpath::Function" }
%"struct.blink::xpath::EvaluationContext" = type { %"class.blink::Node"*, i32, i32, %"class.WTF::HashMap", i8* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::xpath::FunPosition" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunId" = type { %"class.blink::xpath::Function" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon, i32, i8, i8, [2 x i8] }>
%union.anon = type { %"class.WTF::Vector.364" }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366", [16 x i8] }
%"class.WTF::VectorBufferBase.366" = type { i8*, i32, i32 }
%"class.blink::HeapHashSet.374" = type { %"class.WTF::HashSet.377" }
%"class.WTF::HashSet.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"class.blink::Member.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::xpath::FunLocalName" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunNamespaceURI" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunName" = type { %"class.blink::xpath::Function" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.656", %"class.WTF::String" }
%"class.WTF::StringAppend.656" = type { %"class.WTF::AtomicString", i8* }
%"class.blink::xpath::FunCount" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunString" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunConcat" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunStartsWith" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunContains" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunSubstringBefore" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunSubstringAfter" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunSubstring" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunStringLength" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunNormalizeSpace" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunTranslate" = type { %"class.blink::xpath::Function" }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.371", [16 x i8] }
%"class.WTF::VectorBufferBase.371" = type { i16*, i32, i32 }
%"class.blink::xpath::FunBoolean" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunNot" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunTrue" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunLang" = type { %"class.blink::xpath::Function" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.41", %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679", [64 x i8] }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::xpath::FunFalse" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunNumber" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunSum" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunFloor" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunCeiling" = type { %"class.blink::xpath::Function" }
%"class.blink::xpath::FunRound" = type { %"class.blink::xpath::Function" }
%"struct.blink::xpath::FunctionMapping" = type { i8*, %"struct.blink::xpath::FunctionRec" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.579 }
%union.anon.579 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.613" = type { i8 }
%"class.WTF::StringTypeAdapter.660" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.659" = type { %"class.WTF::StringTypeAdapter.658" }
%"class.WTF::StringTypeAdapter.658" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.657" = type { %"class.WTF::StringTypeAdapter.658" }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink5xpath5ValueC2EPNS_4NodeE = comdat any

$_ZN5blink5xpath7FunLastD0Ev = comdat any

$_ZNK5blink5xpath7FunLast10ResultTypeEv = comdat any

$_ZN5blink5xpath11FunPositionD0Ev = comdat any

$_ZNK5blink5xpath11FunPosition10ResultTypeEv = comdat any

$_ZN5blink5xpath12FunLocalNameD0Ev = comdat any

$_ZNK5blink5xpath12FunLocalName10ResultTypeEv = comdat any

$_ZN5blink5xpath15FunNamespaceURID0Ev = comdat any

$_ZNK5blink5xpath15FunNamespaceURI10ResultTypeEv = comdat any

$_ZN5blink5xpath7FunNameD0Ev = comdat any

$_ZNK5blink5xpath7FunName10ResultTypeEv = comdat any

$_ZN5blink5xpath9FunStringD0Ev = comdat any

$_ZNK5blink5xpath9FunString10ResultTypeEv = comdat any

$_ZN5blink5xpath15FunStringLengthD0Ev = comdat any

$_ZNK5blink5xpath15FunStringLength10ResultTypeEv = comdat any

$_ZN5blink5xpath17FunNormalizeSpaceD0Ev = comdat any

$_ZNK5blink5xpath17FunNormalizeSpace10ResultTypeEv = comdat any

$_ZN5blink5xpath7FunLangD0Ev = comdat any

$_ZNK5blink5xpath7FunLang10ResultTypeEv = comdat any

$_ZN5blink5xpath9FunNumberD0Ev = comdat any

$_ZNK5blink5xpath9FunNumber10ResultTypeEv = comdat any

$_ZN5blink5xpath5FunIdD0Ev = comdat any

$_ZNK5blink5xpath5FunId10ResultTypeEv = comdat any

$_ZN5blink5xpath8FunCountD0Ev = comdat any

$_ZNK5blink5xpath8FunCount10ResultTypeEv = comdat any

$_ZN5blink5xpath9FunConcatD0Ev = comdat any

$_ZNK5blink5xpath9FunConcat10ResultTypeEv = comdat any

$_ZN5blink5xpath13FunStartsWithD0Ev = comdat any

$_ZNK5blink5xpath13FunStartsWith10ResultTypeEv = comdat any

$_ZN5blink5xpath11FunContainsD0Ev = comdat any

$_ZNK5blink5xpath11FunContains10ResultTypeEv = comdat any

$_ZN5blink5xpath18FunSubstringBeforeD0Ev = comdat any

$_ZNK5blink5xpath18FunSubstringBefore10ResultTypeEv = comdat any

$_ZN5blink5xpath17FunSubstringAfterD0Ev = comdat any

$_ZNK5blink5xpath17FunSubstringAfter10ResultTypeEv = comdat any

$_ZN5blink5xpath12FunSubstringD0Ev = comdat any

$_ZNK5blink5xpath12FunSubstring10ResultTypeEv = comdat any

$_ZN5blink5xpath12FunTranslateD0Ev = comdat any

$_ZNK5blink5xpath12FunTranslate10ResultTypeEv = comdat any

$_ZN5blink5xpath10FunBooleanD0Ev = comdat any

$_ZNK5blink5xpath10FunBoolean10ResultTypeEv = comdat any

$_ZN5blink5xpath6FunNotD0Ev = comdat any

$_ZNK5blink5xpath6FunNot10ResultTypeEv = comdat any

$_ZN5blink5xpath7FunTrueD0Ev = comdat any

$_ZNK5blink5xpath7FunTrue10ResultTypeEv = comdat any

$_ZN5blink5xpath8FunFalseD0Ev = comdat any

$_ZNK5blink5xpath8FunFalse10ResultTypeEv = comdat any

$_ZN5blink5xpath6FunSumD0Ev = comdat any

$_ZNK5blink5xpath6FunSum10ResultTypeEv = comdat any

$_ZN5blink5xpath8FunFloorD0Ev = comdat any

$_ZNK5blink5xpath8FunFloor10ResultTypeEv = comdat any

$_ZN5blink5xpath10FunCeilingD0Ev = comdat any

$_ZNK5blink5xpath10FunCeiling10ResultTypeEv = comdat any

$_ZN5blink5xpath8FunctionD2Ev = comdat any

$_ZN5blink5xpath8FunRoundD0Ev = comdat any

$_ZNK5blink5xpath8FunRound10ResultTypeEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_ = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv = comdat any

$_ZN5blink5xpath8FunctionD0Ev = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKPKcRKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath11FunctionRecEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKPKcRKS7_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink5xpath8FunctionE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [5 x i8] c"lang\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN5blink9xml_names9kLangAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a = private unnamed_addr constant { i32, i8, [3 x i8], double, %"class.blink::Member.349" } { i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, %"class.blink::Member.349" { %"class.blink::MemberBase.350" { %"class.blink::xpath::ValueData"* inttoptr (i64 -6148914691236517206 to %"class.blink::xpath::ValueData"*) } } }, align 8
@_ZN5blink5xpathL14g_function_mapE = internal unnamed_addr global %"class.WTF::HashMap.381"* null, align 8
@_ZTVN5blink5xpath7FunLastE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunLast"*)* @_ZN5blink5xpath7FunLastD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunLast"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath7FunLast8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunLast"*)* @_ZNK5blink5xpath7FunLast10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath11FunPositionE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunPosition"*)* @_ZN5blink5xpath11FunPositionD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunPosition"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath11FunPosition8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunPosition"*)* @_ZNK5blink5xpath11FunPosition10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath12FunLocalNameE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunLocalName"*)* @_ZN5blink5xpath12FunLocalNameD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunLocalName"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath12FunLocalName8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunLocalName"*)* @_ZNK5blink5xpath12FunLocalName10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath15FunNamespaceURIE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunNamespaceURI"*)* @_ZN5blink5xpath15FunNamespaceURID0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunNamespaceURI"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath15FunNamespaceURI8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunNamespaceURI"*)* @_ZNK5blink5xpath15FunNamespaceURI10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath7FunNameE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunName"*)* @_ZN5blink5xpath7FunNameD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunName"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath7FunName8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunName"*)* @_ZNK5blink5xpath7FunName10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath9FunStringE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunString"*)* @_ZN5blink5xpath9FunStringD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunString"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath9FunString8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunString"*)* @_ZNK5blink5xpath9FunString10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath15FunStringLengthE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunStringLength"*)* @_ZN5blink5xpath15FunStringLengthD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunStringLength"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath15FunStringLength8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunStringLength"*)* @_ZNK5blink5xpath15FunStringLength10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath17FunNormalizeSpaceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunNormalizeSpace"*)* @_ZN5blink5xpath17FunNormalizeSpaceD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunNormalizeSpace"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath17FunNormalizeSpace8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunNormalizeSpace"*)* @_ZNK5blink5xpath17FunNormalizeSpace10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath7FunLangE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunLang"*)* @_ZN5blink5xpath7FunLangD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunLang"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath7FunLang8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunLang"*)* @_ZNK5blink5xpath7FunLang10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath9FunNumberE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunNumber"*)* @_ZN5blink5xpath9FunNumberD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunNumber"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath9FunNumber8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunNumber"*)* @_ZNK5blink5xpath9FunNumber10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath5FunIdE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunId"*)* @_ZN5blink5xpath5FunIdD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunId"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath5FunId8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunId"*)* @_ZNK5blink5xpath5FunId10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath8FunCountE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunCount"*)* @_ZN5blink5xpath8FunCountD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunCount"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8FunCount8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunCount"*)* @_ZNK5blink5xpath8FunCount10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath9FunConcatE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunConcat"*)* @_ZN5blink5xpath9FunConcatD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunConcat"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath9FunConcat8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunConcat"*)* @_ZNK5blink5xpath9FunConcat10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath13FunStartsWithE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunStartsWith"*)* @_ZN5blink5xpath13FunStartsWithD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunStartsWith"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath13FunStartsWith8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunStartsWith"*)* @_ZNK5blink5xpath13FunStartsWith10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath11FunContainsE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunContains"*)* @_ZN5blink5xpath11FunContainsD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunContains"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath11FunContains8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunContains"*)* @_ZNK5blink5xpath11FunContains10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath18FunSubstringBeforeE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunSubstringBefore"*)* @_ZN5blink5xpath18FunSubstringBeforeD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunSubstringBefore"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath18FunSubstringBefore8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunSubstringBefore"*)* @_ZNK5blink5xpath18FunSubstringBefore10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath17FunSubstringAfterE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunSubstringAfter"*)* @_ZN5blink5xpath17FunSubstringAfterD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunSubstringAfter"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath17FunSubstringAfter8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunSubstringAfter"*)* @_ZNK5blink5xpath17FunSubstringAfter10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath12FunSubstringE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunSubstring"*)* @_ZN5blink5xpath12FunSubstringD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunSubstring"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath12FunSubstring8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunSubstring"*)* @_ZNK5blink5xpath12FunSubstring10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath12FunTranslateE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunTranslate"*)* @_ZN5blink5xpath12FunTranslateD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunTranslate"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath12FunTranslate8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunTranslate"*)* @_ZNK5blink5xpath12FunTranslate10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath10FunBooleanE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunBoolean"*)* @_ZN5blink5xpath10FunBooleanD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunBoolean"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath10FunBoolean8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunBoolean"*)* @_ZNK5blink5xpath10FunBoolean10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath6FunNotE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunNot"*)* @_ZN5blink5xpath6FunNotD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunNot"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath6FunNot8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunNot"*)* @_ZNK5blink5xpath6FunNot10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath7FunTrueE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunTrue"*)* @_ZN5blink5xpath7FunTrueD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunTrue"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath7FunTrue8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunTrue"*)* @_ZNK5blink5xpath7FunTrue10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath8FunFalseE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunFalse"*)* @_ZN5blink5xpath8FunFalseD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunFalse"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8FunFalse8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunFalse"*)* @_ZNK5blink5xpath8FunFalse10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath6FunSumE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunSum"*)* @_ZN5blink5xpath6FunSumD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunSum"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunSum"*)* @_ZNK5blink5xpath6FunSum10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath8FunFloorE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunFloor"*)* @_ZN5blink5xpath8FunFloorD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunFloor"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8FunFloor8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunFloor"*)* @_ZNK5blink5xpath8FunFloor10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath10FunCeilingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunCeiling"*)* @_ZN5blink5xpath10FunCeilingD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunCeiling"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath10FunCeiling8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunCeiling"*)* @_ZNK5blink5xpath10FunCeiling10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath8FunRoundE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::FunRound"*)* @_ZN5blink5xpath8FunRoundD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::FunRound"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8FunRound8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::FunRound"*)* @_ZNK5blink5xpath8FunRound10ResultTypeEv to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.7 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::xpath::Expression>, WTF::VectorTraits<blink::Member<blink::xpath::Expression> > >]\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::NodeSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ValueDataEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::ValueData]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.16 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.18 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@.str.20 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@.str.21 = private unnamed_addr constant [8 x i8] c"boolean\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"ceiling\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"concat\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"contains\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"count\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.29 = private unnamed_addr constant [5 x i8] c"last\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"local-name\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.32 = private unnamed_addr constant [14 x i8] c"namespace-uri\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"normalize-space\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"not\00", align 1
@.str.35 = private unnamed_addr constant [7 x i8] c"number\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"position\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"starts-with\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"string-length\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"substring\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"substring-after\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"substring-before\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@.str.46 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::ParseNode]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink5xpath8FunctionE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Function"*)* @_ZN5blink5xpath8FunctionD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6StringEN5blink5xpath11FunctionRecENS_10StringHashENS_10HashTraitsIS2_EENS7_IS5_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [216 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashMap<WTF::String, blink::xpath::FunctionRec, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::xpath::FunctionRec>, WTF::PartitionAllocator>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink5xpath11FunctionRecEEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, blink::xpath::FunctionRec>]\00", align 1
@.str.47 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [316 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, blink::Member<blink::Node>, WTF::IdentityExtractor, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath8Function12SetArgumentsERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.blink::xpath::Function"*, %"class.blink::HeapVector"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::xpath::Expression"*, align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  br i1 %30, label %37, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %36, align 8
  br label %37

37:                                               ; preds = %22, %35, %31
  %38 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::Member"*, %"class.blink::Member"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %39, i64 %42
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %37
  %46 = bitcast %"class.blink::xpath::Expression"** %3 to i8*
  %47 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 3
  %49 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 4
  %50 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %50, i64 0, i32 0, i32 0, i32 0
  br label %55

54:                                               ; preds = %89, %37
  ret void

55:                                               ; preds = %45, %89
  %56 = phi %"class.blink::Member"* [ %39, %45 ], [ %90, %89 ]
  %57 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 0, i32 0, i32 0
  %58 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  store %"class.blink::xpath::Expression"* %58, %"class.blink::xpath::Expression"** %3, align 8
  %59 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %58, i64 0, i32 2
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = load i8, i8* %47, align 8, !range !2
  %62 = or i8 %61, %60
  store i8 %62, i8* %47, align 8
  %63 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %58, i64 0, i32 3
  %64 = load i8, i8* %63, align 1, !range !2
  %65 = load i8, i8* %48, align 1, !range !2
  %66 = or i8 %65, %64
  store i8 %66, i8* %48, align 1
  %67 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %58, i64 0, i32 4
  %68 = load i8, i8* %67, align 2, !range !2
  %69 = load i8, i8* %49, align 2, !range !2
  %70 = or i8 %69, %68
  store i8 %70, i8* %49, align 2
  %71 = load i32, i32* %51, align 4
  %72 = load i32, i32* %52, align 8
  %73 = icmp eq i32 %71, %72
  br i1 %73, label %88, label %74, !prof !3

74:                                               ; preds = %55
  %75 = ptrtoint %"class.blink::xpath::Expression"* %58 to i64
  %76 = load %"class.blink::Member"*, %"class.blink::Member"** %53, align 8
  %77 = zext i32 %71 to i64
  %78 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %76, i64 %77
  %79 = bitcast %"class.blink::Member"* %78 to i64*
  store atomic i64 %75, i64* %79 monotonic, align 8
  %80 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %74
  %83 = bitcast %"class.blink::xpath::Expression"* %58 to i8*
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #12
  br label %85

85:                                               ; preds = %82, %74
  %86 = load i32, i32* %51, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %51, align 4
  br label %89

88:                                               ; preds = %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %50, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %3) #12
  br label %89

89:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  %90 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %56, i64 1
  %91 = icmp eq %"class.blink::Member"* %90, %43
  br i1 %91, label %54, label %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath7FunLast8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunLast"* nocapture readnone, %"struct.blink::xpath::EvaluationContext"* nocapture readonly dereferenceable(48)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %9 = uitofp i32 %5 to double
  store double %9, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %10, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath11FunPosition8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunPosition"* nocapture readnone, %"struct.blink::xpath::EvaluationContext"* nocapture readonly dereferenceable(48)) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %9 = uitofp i32 %5 to double
  store double %9, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath5FunId8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunId"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.blink::HeapHashSet.374", align 8
  %10 = alloca %"class.blink::Node"*, align 8
  %11 = alloca %"class.WTF::AtomicString", align 8
  %12 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %13 = getelementptr inbounds %"class.blink::xpath::FunId", %"class.blink::xpath::FunId"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %14 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %13, i32 0) #12
  %15 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %15, align 8
  %17 = bitcast %"class.blink::xpath::Expression"* %16 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %18 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %18, i64 3
  %20 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %19, align 8
  call void %20(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %16, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %21 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 48, i1 false)
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %24 = bitcast %union.anon* %23 to i8*
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %27, align 1
  %28 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %74

31:                                               ; preds = %3
  %32 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %5, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %33 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %104, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.WTF::StringView"* %7 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %46 = bitcast %"class.WTF::StringView"* %7 to i64*
  br label %47

47:                                               ; preds = %40, %71
  %48 = phi %"class.blink::Member.5"* [ %34, %40 ], [ %72, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %49 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %50) #12
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  store i8* null, i8** %43, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %54, i64* %46, align 8
  store i32 0, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %71

55:                                               ; preds = %47
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %42, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %44, align 8
  store i32 %57, i32* %45, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %55
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %55
  %68 = phi i32 [ %66, %65 ], [ %64, %55 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %71

71:                                               ; preds = %53, %67, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %6, i8 zeroext 32) #12
  %72 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %48, i64 1
  %73 = icmp eq %"class.blink::Member.5"* %72, %38
  br i1 %73, label %104, label %47

74:                                               ; preds = %3
  %75 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %83

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 0, i32* %82, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %103

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %89 = bitcast i8** %88 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %86, i32* %90, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %83
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %83
  %100 = phi i32 [ %98, %97 ], [ %96, %83 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #12
  br label %103

103:                                              ; preds = %78, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  br label %104

104:                                              ; preds = %71, %31, %103
  %105 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %106, i64 0, i32 3, i32 0, i32 0
  %108 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %107, align 8
  %109 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %109, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 1
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds i8, i8* %109, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #12
  %112 = getelementptr inbounds i8, i8* %109, i64 -4
  %113 = bitcast i8* %112 to i16*
  %114 = load atomic i16, i16* %113 monotonic, align 2
  %115 = or i16 %114, 1
  store atomic i16 %115, i16* %113 release, align 2
  %116 = bitcast %"class.blink::HeapHashSet.374"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #12
  %117 = bitcast %"class.blink::HeapHashSet.374"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 20, i1 false) #12
  %118 = load i32, i32* %25, align 8
  %119 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.blink::Node"** %10 to i8*
  %121 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  %122 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::HeapHashSet.374", %"class.blink::HeapHashSet.374"* %9, i64 0, i32 0, i32 0
  %125 = bitcast %"class.blink::Node"** %4 to i8*
  %126 = getelementptr inbounds i8, i8* %109, i64 20
  %127 = bitcast i8* %126 to i32*
  %128 = getelementptr inbounds i8, i8* %109, i64 16
  %129 = bitcast i8* %128 to i32*
  %130 = bitcast i8* %111 to %"class.blink::Member.5"**
  %131 = bitcast i8* %111 to %"class.WTF::Vector.360"*
  %132 = zext i32 %118 to i64
  br label %133

133:                                              ; preds = %302, %104
  %134 = phi i32 [ 0, %104 ], [ %213, %302 ]
  %135 = icmp ult i32 %134, %118
  br i1 %135, label %136, label %172

136:                                              ; preds = %133
  %137 = load i8, i8* %26, align 4, !range !2
  %138 = icmp eq i8 %137, 0
  %139 = load i32, i32* %25, align 8
  %140 = icmp eq i32 %139, 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 1
  %144 = bitcast %"class.WTF::StringImpl"* %143 to i8*
  %145 = load i8*, i8** %119, align 8
  %146 = bitcast %"class.WTF::StringImpl"* %143 to i16*
  %147 = bitcast i8* %145 to i16*
  %148 = zext i32 %134 to i64
  %149 = select i1 %142, i8* %145, i8* %144
  %150 = select i1 %140, i8* null, i8* %149
  %151 = select i1 %142, i16* %147, i16* %146
  %152 = select i1 %140, i16* null, i16* %151
  br label %153

153:                                              ; preds = %165, %136
  %154 = phi i64 [ %148, %136 ], [ %166, %165 ]
  %155 = phi i32 [ %134, %136 ], [ %167, %165 ]
  br i1 %138, label %160, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds i8, i8* %150, i64 %154
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i16
  br label %163

160:                                              ; preds = %153
  %161 = getelementptr inbounds i16, i16* %152, i64 %154
  %162 = load i16, i16* %161, align 2
  br label %163

163:                                              ; preds = %156, %160
  %164 = phi i16 [ %159, %156 ], [ %162, %160 ]
  switch i16 %164, label %170 [
    i16 32, label %165
    i16 10, label %165
    i16 13, label %165
    i16 9, label %165
  ]

165:                                              ; preds = %163, %163, %163, %163
  %166 = add nuw nsw i64 %154, 1
  %167 = add nuw i32 %155, 1
  %168 = trunc i64 %166 to i32
  %169 = icmp eq i32 %118, %168
  br i1 %169, label %172, label %153

170:                                              ; preds = %163
  %171 = trunc i64 %154 to i32
  br label %172

172:                                              ; preds = %165, %170, %133
  %173 = phi i32 [ %134, %133 ], [ %171, %170 ], [ %167, %165 ]
  %174 = icmp eq i32 %173, %118
  br i1 %174, label %303, label %175

175:                                              ; preds = %172
  %176 = icmp ult i32 %173, %118
  br i1 %176, label %177, label %212

177:                                              ; preds = %175
  %178 = load i8, i8* %26, align 4, !range !2
  %179 = icmp eq i8 %178, 0
  %180 = load i32, i32* %25, align 8
  %181 = icmp eq i32 %180, 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 1
  %185 = bitcast %"class.WTF::StringImpl"* %184 to i8*
  %186 = load i8*, i8** %119, align 8
  %187 = bitcast %"class.WTF::StringImpl"* %184 to i16*
  %188 = bitcast i8* %186 to i16*
  %189 = zext i32 %173 to i64
  %190 = select i1 %183, i8* %186, i8* %185
  %191 = select i1 %181, i8* null, i8* %190
  %192 = select i1 %183, i16* %188, i16* %187
  %193 = select i1 %181, i16* null, i16* %192
  br label %194

194:                                              ; preds = %206, %177
  %195 = phi i64 [ %189, %177 ], [ %207, %206 ]
  %196 = phi i32 [ %173, %177 ], [ %208, %206 ]
  br i1 %179, label %201, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds i8, i8* %191, i64 %195
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i16
  br label %204

201:                                              ; preds = %194
  %202 = getelementptr inbounds i16, i16* %193, i64 %195
  %203 = load i16, i16* %202, align 2
  br label %204

204:                                              ; preds = %197, %201
  %205 = phi i16 [ %200, %197 ], [ %203, %201 ]
  switch i16 %205, label %206 [
    i16 32, label %210
    i16 10, label %210
    i16 13, label %210
    i16 9, label %210
  ]

206:                                              ; preds = %204
  %207 = add nuw nsw i64 %195, 1
  %208 = add nuw i32 %196, 1
  %209 = icmp eq i64 %207, %132
  br i1 %209, label %212, label %194

210:                                              ; preds = %204, %204, %204, %204
  %211 = trunc i64 %195 to i32
  br label %212

212:                                              ; preds = %206, %210, %175
  %213 = phi i32 [ %173, %175 ], [ %211, %210 ], [ %208, %206 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #12
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  %214 = sub i32 %213, %173
  %215 = call %"class.WTF::StringImpl"* @_ZNK3WTF13StringBuilder9SubstringEjj(%"class.WTF::StringBuilder"* nonnull %6, i32 %173, i32 %214) #12
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %240, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 acquire, align 4
  %220 = and i32 %219, 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %238, label %222

222:                                              ; preds = %217
  %223 = load atomic i32, i32* %218 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %240

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %228 = load i32, i32* %227, align 4
  %229 = zext i32 %228 to i33
  %230 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %229, i33 1) #12
  %231 = extractvalue { i33, i1 } %230, 1
  %232 = extractvalue { i33, i1 } %230, 0
  %233 = icmp slt i33 %232, 0
  %234 = or i1 %231, %233
  br i1 %234, label %235, label %236, !prof !3

235:                                              ; preds = %226
  call void @llvm.trap() #12
  unreachable

236:                                              ; preds = %226
  %237 = trunc i33 %232 to i32
  store i32 %237, i32* %227, align 4
  br label %240

238:                                              ; preds = %217
  %239 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %215) #12
  br label %240

240:                                              ; preds = %212, %222, %236, %238
  %241 = phi %"class.WTF::StringImpl"* [ %239, %238 ], [ %215, %222 ], [ %215, %236 ], [ null, %212 ]
  %242 = ptrtoint %"class.WTF::StringImpl"* %241 to i64
  store i64 %242, i64* %122, align 8
  %243 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %108, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %11) #12
  %244 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %243, i64 0, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #12
  br label %260

260:                                              ; preds = %240, %256, %259
  br i1 %216, label %274, label %261

261:                                              ; preds = %260
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #12
  br label %274

274:                                              ; preds = %260, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  store %"class.blink::Node"* %244, %"class.blink::Node"** %10, align 8
  %275 = icmp eq %"class.blink::Element"* %243, null
  br i1 %275, label %302, label %276

276:                                              ; preds = %274
  %277 = call { %"class.blink::Member.5"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.378"* nonnull %124, %"class.blink::Node"** nonnull dereferenceable(8) %10, %"class.blink::Node"** nonnull dereferenceable(8) %10) #12
  %278 = extractvalue { %"class.blink::Member.5"*, i8 } %277, 1
  %279 = and i8 %278, 1
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %302, label %281

281:                                              ; preds = %276
  %282 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125)
  store %"class.blink::Node"* %282, %"class.blink::Node"** %4, align 8
  %283 = load i32, i32* %127, align 4
  %284 = load i32, i32* %129, align 8
  %285 = icmp eq i32 %283, %284
  br i1 %285, label %300, label %286, !prof !3

286:                                              ; preds = %281
  %287 = ptrtoint %"class.blink::Node"* %282 to i64
  %288 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %130, align 8
  %289 = zext i32 %283 to i64
  %290 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %288, i64 %289
  %291 = bitcast %"class.blink::Member.5"* %290 to i64*
  store atomic i64 %287, i64* %291 monotonic, align 8
  %292 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %297, label %294

294:                                              ; preds = %286
  %295 = bitcast %"class.blink::Node"* %282 to i8*
  %296 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %295) #12
  br label %297

297:                                              ; preds = %294, %286
  %298 = load i32, i32* %127, align 4
  %299 = add i32 %298, 1
  store i32 %299, i32* %127, align 4
  br label %301

300:                                              ; preds = %281
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.360"* %131, %"class.blink::Node"** nonnull dereferenceable(8) %4) #12
  br label %301

301:                                              ; preds = %297, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125)
  br label %302

302:                                              ; preds = %274, %276, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #12
  br label %133

303:                                              ; preds = %172
  store i8 0, i8* %109, align 8
  %304 = ptrtoint i8* %109 to i64
  %305 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 0, i32* %305, align 8
  %306 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %306, align 4
  %307 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %307, align 8
  %308 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %309 = bitcast i8* %308 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %309, align 8
  %310 = getelementptr inbounds i8, i8* %308, i64 8
  %311 = bitcast i8* %310 to i64*
  store i64 %304, i64* %311, align 8
  %312 = getelementptr inbounds i8, i8* %308, i64 -4
  %313 = bitcast i8* %312 to i16*
  %314 = load atomic i16, i16* %313 monotonic, align 2
  %315 = or i16 %314, 1
  store atomic i16 %315, i16* %313 release, align 2
  %316 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %317 = bitcast %"class.blink::xpath::ValueData"** %316 to i8**
  store i8* %308, i8** %317, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %303
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #12
  br label %333

333:                                              ; preds = %303, %329, %332
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"*, %"struct.blink::xpath::EvaluationContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"*) local_unnamed_addr #3

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK3WTF13StringBuilder9SubstringEjj(%"class.WTF::StringBuilder"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath12FunLocalName8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunLocalName"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::xpath::FunLocalName", %"class.blink::xpath::FunLocalName"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %178, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %12 = getelementptr inbounds %"class.blink::xpath::FunLocalName", %"class.blink::xpath::FunLocalName"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 0) #12
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %14, align 8
  %16 = bitcast %"class.blink::xpath::Expression"* %15 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %17 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %17, i64 3
  %19 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %18, align 8
  call void %19(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %15, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %10
  %24 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %25 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %27, align 8
  %28 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %29 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %28, %"class.blink::xpath::ValueData"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  br label %177

30:                                               ; preds = %10
  %31 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %5, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %32 = call %"class.blink::Node"* @_ZNK5blink5xpath7NodeSet9FirstNodeEv(%"class.blink::xpath::NodeSet"* %31) #12
  %33 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = icmp eq %"class.blink::Node"* %32, null
  br i1 %34, label %118, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::Node"* %32 to i32 (%"class.blink::Node"*)***
  %37 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %37, i64 30
  %39 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %38, align 8
  %40 = call i32 %39(%"class.blink::Node"* nonnull %32) #12
  switch i32 %40, label %114 [
    i32 1, label %41
    i32 2, label %66
    i32 7, label %91
  ]

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.5"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %48 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %48, label %114, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %114

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #12
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %54
  call void @llvm.trap() #12
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %114

66:                                               ; preds = %35
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 0, i32 0, i32 1
  %68 = bitcast %"class.blink::TraceWrapperV8Reference"* %67 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %114, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %114

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #12
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %114

91:                                               ; preds = %35
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 6
  %93 = bitcast %"class.blink::Member.9"* %92 to %"class.WTF::StringImpl"**
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %96 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %96, label %114, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %114

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i33
  %106 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #12
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !3

111:                                              ; preds = %102
  call void @llvm.trap() #12
  unreachable

112:                                              ; preds = %102
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %103, align 4
  br label %114

114:                                              ; preds = %35, %41, %49, %64, %66, %74, %89, %91, %97, %112
  %115 = phi i64 [ %47, %41 ], [ %47, %49 ], [ %47, %64 ], [ %72, %66 ], [ %72, %74 ], [ %72, %89 ], [ %95, %91 ], [ %95, %97 ], [ %95, %112 ], [ 0, %35 ]
  %116 = inttoptr i64 %115 to %"class.WTF::StringImpl"*
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %117, align 8
  br label %119

118:                                              ; preds = %30
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #12
  br label %119

119:                                              ; preds = %118, %114
  %120 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %120, align 8
  %121 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %122, align 8
  %123 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = bitcast i8* %123 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %126, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #12
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !3

142:                                              ; preds = %133
  call void @llvm.trap() #12
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %145

145:                                              ; preds = %119, %128, %143
  %146 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %146, align 8
  %147 = getelementptr inbounds i8, i8* %146, i64 1
  store i8 0, i8* %147, align 1
  %148 = getelementptr inbounds i8, i8* %146, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #12
  %149 = getelementptr inbounds i8, i8* %146, i64 -4
  %150 = bitcast i8* %149 to i16*
  %151 = load atomic i16, i16* %150 monotonic, align 2
  %152 = or i16 %151, 1
  store atomic i16 %152, i16* %150 release, align 2
  %153 = getelementptr inbounds i8, i8* %123, i64 8
  %154 = bitcast i8* %153 to i8**
  store i8* %146, i8** %154, align 8
  %155 = getelementptr inbounds i8, i8* %123, i64 -4
  %156 = bitcast i8* %155 to i16*
  %157 = load atomic i16, i16* %156 monotonic, align 2
  %158 = or i16 %157, 1
  store atomic i16 %158, i16* %156 release, align 2
  %159 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %160 = bitcast %"class.blink::xpath::ValueData"** %159 to i8**
  store i8* %123, i8** %160, align 8
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %145
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #12
  br label %176

176:                                              ; preds = %145, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %177

177:                                              ; preds = %176, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %314

178:                                              ; preds = %3
  %179 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %180 = load %"class.blink::Node"*, %"class.blink::Node"** %179, align 8
  %181 = bitcast %"class.blink::Node"* %180 to i32 (%"class.blink::Node"*)***
  %182 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %181, align 8
  %183 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %182, i64 30
  %184 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %183, align 8
  %185 = tail call i32 %184(%"class.blink::Node"* %180) #12
  switch i32 %185, label %259 [
    i32 1, label %186
    i32 2, label %211
    i32 7, label %236
  ]

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %180, i64 1, i32 2
  %188 = bitcast %"class.blink::Member.5"* %187 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %189 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %189, i64 0, i32 3, i32 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %259, label %194

194:                                              ; preds = %186
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %259

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #12
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  tail call void @llvm.trap() #12
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %259

211:                                              ; preds = %178
  %212 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %180, i64 1, i32 0, i32 0, i32 1
  %213 = bitcast %"class.blink::TraceWrapperV8Reference"* %212 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  %218 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %218, label %259, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %259

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i33
  %228 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %227, i33 1) #12
  %229 = extractvalue { i33, i1 } %228, 1
  %230 = extractvalue { i33, i1 } %228, 0
  %231 = icmp slt i33 %230, 0
  %232 = or i1 %229, %231
  br i1 %232, label %233, label %234, !prof !3

233:                                              ; preds = %224
  tail call void @llvm.trap() #12
  unreachable

234:                                              ; preds = %224
  %235 = trunc i33 %230 to i32
  store i32 %235, i32* %225, align 4
  br label %259

236:                                              ; preds = %178
  %237 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %180, i64 1, i32 6
  %238 = bitcast %"class.blink::Member.9"* %237 to %"class.WTF::StringImpl"**
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = ptrtoint %"class.WTF::StringImpl"* %239 to i64
  %241 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %241, label %259, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %259

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = zext i32 %249 to i33
  %251 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %250, i33 1) #12
  %252 = extractvalue { i33, i1 } %251, 1
  %253 = extractvalue { i33, i1 } %251, 0
  %254 = icmp slt i33 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %257, !prof !3

256:                                              ; preds = %247
  tail call void @llvm.trap() #12
  unreachable

257:                                              ; preds = %247
  %258 = trunc i33 %253 to i32
  store i32 %258, i32* %248, align 4
  br label %259

259:                                              ; preds = %178, %186, %194, %209, %211, %219, %234, %236, %242, %257
  %260 = phi i64 [ %192, %186 ], [ %192, %194 ], [ %192, %209 ], [ %217, %211 ], [ %217, %219 ], [ %217, %234 ], [ %240, %236 ], [ %240, %242 ], [ %240, %257 ], [ 0, %178 ]
  %261 = inttoptr i64 %260 to %"class.WTF::StringImpl"*
  %262 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %262, align 8
  %263 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %263, align 4
  %264 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %264, align 8
  %265 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %266 = bitcast i8* %265 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %266, align 8
  %267 = icmp eq i64 %260, 0
  br i1 %267, label %285, label %268

268:                                              ; preds = %259
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i33
  %277 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %276, i33 1) #12
  %278 = extractvalue { i33, i1 } %277, 1
  %279 = extractvalue { i33, i1 } %277, 0
  %280 = icmp slt i33 %279, 0
  %281 = or i1 %278, %280
  br i1 %281, label %282, label %283, !prof !3

282:                                              ; preds = %273
  tail call void @llvm.trap() #12
  unreachable

283:                                              ; preds = %273
  %284 = trunc i33 %279 to i32
  store i32 %284, i32* %274, align 4
  br label %285

285:                                              ; preds = %259, %268, %283
  %286 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %286, align 8
  %287 = getelementptr inbounds i8, i8* %286, i64 1
  store i8 0, i8* %287, align 1
  %288 = getelementptr inbounds i8, i8* %286, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 16, i1 false) #12
  %289 = getelementptr inbounds i8, i8* %286, i64 -4
  %290 = bitcast i8* %289 to i16*
  %291 = load atomic i16, i16* %290 monotonic, align 2
  %292 = or i16 %291, 1
  store atomic i16 %292, i16* %290 release, align 2
  %293 = getelementptr inbounds i8, i8* %265, i64 8
  %294 = bitcast i8* %293 to i8**
  store i8* %286, i8** %294, align 8
  %295 = getelementptr inbounds i8, i8* %265, i64 -4
  %296 = bitcast i8* %295 to i16*
  %297 = load atomic i16, i16* %296 monotonic, align 2
  %298 = or i16 %297, 1
  store atomic i16 %298, i16* %296 release, align 2
  %299 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %300 = bitcast %"class.blink::xpath::ValueData"** %299 to i8**
  store i8* %265, i8** %300, align 8
  br i1 %267, label %314, label %301

301:                                              ; preds = %285
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %261, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %261) #12
  br label %314

314:                                              ; preds = %313, %310, %285, %177
  ret void
}

declare %"class.blink::Node"* @_ZNK5blink5xpath7NodeSet9FirstNodeEv(%"class.blink::xpath::NodeSet"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath15FunNamespaceURI8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunNamespaceURI"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::xpath::FunNamespaceURI", %"class.blink::xpath::FunNamespaceURI"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %155, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %12 = getelementptr inbounds %"class.blink::xpath::FunNamespaceURI", %"class.blink::xpath::FunNamespaceURI"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 0) #12
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %14, align 8
  %16 = bitcast %"class.blink::xpath::Expression"* %15 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %17 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %17, i64 3
  %19 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %18, align 8
  call void %19(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %15, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %10
  %24 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %25 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %27, align 8
  %28 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %29 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %28, %"class.blink::xpath::ValueData"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  br label %154

30:                                               ; preds = %10
  %31 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %5, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %32 = call %"class.blink::Node"* @_ZNK5blink5xpath7NodeSet9FirstNodeEv(%"class.blink::xpath::NodeSet"* %31) #12
  %33 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = icmp eq %"class.blink::Node"* %32, null
  br i1 %34, label %95, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.blink::Node"* %32 to i32 (%"class.blink::Node"*)***
  %37 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %37, i64 30
  %39 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %38, align 8
  %40 = call i32 %39(%"class.blink::Node"* nonnull %32) #12
  switch i32 %40, label %91 [
    i32 1, label %41
    i32 2, label %66
  ]

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.5"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %48 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %48, label %91, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %91

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #12
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !3

63:                                               ; preds = %54
  call void @llvm.trap() #12
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %91

66:                                               ; preds = %35
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 1, i32 0, i32 0, i32 1
  %68 = bitcast %"class.blink::TraceWrapperV8Reference"* %67 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = ptrtoint %"class.WTF::StringImpl"* %71 to i64
  %73 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %66
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #12
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %35, %41, %49, %64, %66, %74, %89
  %92 = phi i64 [ %47, %41 ], [ %47, %49 ], [ %47, %64 ], [ %72, %66 ], [ %72, %74 ], [ %72, %89 ], [ 0, %35 ]
  %93 = inttoptr i64 %92 to %"class.WTF::StringImpl"*
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %94, align 8
  br label %96

95:                                               ; preds = %30
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #12
  br label %96

96:                                               ; preds = %95, %91
  %97 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %97, align 8
  %98 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %99, align 8
  %100 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %101 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = bitcast i8* %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %103, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %104, label %122, label %105

105:                                              ; preds = %96
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %122

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = zext i32 %112 to i33
  %114 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %113, i33 1) #12
  %115 = extractvalue { i33, i1 } %114, 1
  %116 = extractvalue { i33, i1 } %114, 0
  %117 = icmp slt i33 %116, 0
  %118 = or i1 %115, %117
  br i1 %118, label %119, label %120, !prof !3

119:                                              ; preds = %110
  call void @llvm.trap() #12
  unreachable

120:                                              ; preds = %110
  %121 = trunc i33 %116 to i32
  store i32 %121, i32* %111, align 4
  br label %122

122:                                              ; preds = %96, %105, %120
  %123 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %123, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  store i8 0, i8* %124, align 1
  %125 = getelementptr inbounds i8, i8* %123, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #12
  %126 = getelementptr inbounds i8, i8* %123, i64 -4
  %127 = bitcast i8* %126 to i16*
  %128 = load atomic i16, i16* %127 monotonic, align 2
  %129 = or i16 %128, 1
  store atomic i16 %129, i16* %127 release, align 2
  %130 = getelementptr inbounds i8, i8* %100, i64 8
  %131 = bitcast i8* %130 to i8**
  store i8* %123, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %100, i64 -4
  %133 = bitcast i8* %132 to i16*
  %134 = load atomic i16, i16* %133 monotonic, align 2
  %135 = or i16 %134, 1
  store atomic i16 %135, i16* %133 release, align 2
  %136 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %137 = bitcast %"class.blink::xpath::ValueData"** %136 to i8**
  store i8* %100, i8** %137, align 8
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %122
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #12
  br label %153

153:                                              ; preds = %122, %149, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %154

154:                                              ; preds = %153, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %268

155:                                              ; preds = %3
  %156 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %157 = load %"class.blink::Node"*, %"class.blink::Node"** %156, align 8
  %158 = bitcast %"class.blink::Node"* %157 to i32 (%"class.blink::Node"*)***
  %159 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %158, align 8
  %160 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %159, i64 30
  %161 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %160, align 8
  %162 = tail call i32 %161(%"class.blink::Node"* %157) #12
  switch i32 %162, label %213 [
    i32 1, label %163
    i32 2, label %188
  ]

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %157, i64 1, i32 2
  %165 = bitcast %"class.blink::Member.5"* %164 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %166 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %166, i64 0, i32 4, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  %170 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %170, label %213, label %171

171:                                              ; preds = %163
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %213

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %168, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = zext i32 %178 to i33
  %180 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %179, i33 1) #12
  %181 = extractvalue { i33, i1 } %180, 1
  %182 = extractvalue { i33, i1 } %180, 0
  %183 = icmp slt i33 %182, 0
  %184 = or i1 %181, %183
  br i1 %184, label %185, label %186, !prof !3

185:                                              ; preds = %176
  tail call void @llvm.trap() #12
  unreachable

186:                                              ; preds = %176
  %187 = trunc i33 %182 to i32
  store i32 %187, i32* %177, align 4
  br label %213

188:                                              ; preds = %155
  %189 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %157, i64 1, i32 0, i32 0, i32 1
  %190 = bitcast %"class.blink::TraceWrapperV8Reference"* %189 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %191 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %191, i64 0, i32 4, i32 0, i32 0, i32 0
  %193 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %192, align 8
  %194 = ptrtoint %"class.WTF::StringImpl"* %193 to i64
  %195 = icmp eq %"class.WTF::StringImpl"* %193, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %188
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %213

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = zext i32 %203 to i33
  %205 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #12
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !3

210:                                              ; preds = %201
  tail call void @llvm.trap() #12
  unreachable

211:                                              ; preds = %201
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %202, align 4
  br label %213

213:                                              ; preds = %155, %163, %171, %186, %188, %196, %211
  %214 = phi i64 [ %169, %163 ], [ %169, %171 ], [ %169, %186 ], [ %194, %188 ], [ %194, %196 ], [ %194, %211 ], [ 0, %155 ]
  %215 = inttoptr i64 %214 to %"class.WTF::StringImpl"*
  %216 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %216, align 8
  %217 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %217, align 4
  %218 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %218, align 8
  %219 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %220 = bitcast i8* %219 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %220, align 8
  %221 = icmp eq i64 %214, 0
  br i1 %221, label %239, label %222

222:                                              ; preds = %213
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %224 = load atomic i32, i32* %223 monotonic, align 4
  %225 = and i32 %224, 2
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %239

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = zext i32 %229 to i33
  %231 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #12
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !3

236:                                              ; preds = %227
  tail call void @llvm.trap() #12
  unreachable

237:                                              ; preds = %227
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %228, align 4
  br label %239

239:                                              ; preds = %213, %222, %237
  %240 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %240, align 8
  %241 = getelementptr inbounds i8, i8* %240, i64 1
  store i8 0, i8* %241, align 1
  %242 = getelementptr inbounds i8, i8* %240, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %242, i8 0, i64 16, i1 false) #12
  %243 = getelementptr inbounds i8, i8* %240, i64 -4
  %244 = bitcast i8* %243 to i16*
  %245 = load atomic i16, i16* %244 monotonic, align 2
  %246 = or i16 %245, 1
  store atomic i16 %246, i16* %244 release, align 2
  %247 = getelementptr inbounds i8, i8* %219, i64 8
  %248 = bitcast i8* %247 to i8**
  store i8* %240, i8** %248, align 8
  %249 = getelementptr inbounds i8, i8* %219, i64 -4
  %250 = bitcast i8* %249 to i16*
  %251 = load atomic i16, i16* %250 monotonic, align 2
  %252 = or i16 %251, 1
  store atomic i16 %252, i16* %250 release, align 2
  %253 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %254 = bitcast %"class.blink::xpath::ValueData"** %253 to i8**
  store i8* %219, i8** %254, align 8
  br i1 %221, label %268, label %255

255:                                              ; preds = %239
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %261 = load i32, i32* %260, align 4
  br i1 %259, label %262, label %264

262:                                              ; preds = %255
  %263 = add i32 %261, -1
  store i32 %263, i32* %260, align 4
  br label %264

264:                                              ; preds = %262, %255
  %265 = phi i32 [ %263, %262 ], [ %261, %255 ]
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %268

267:                                              ; preds = %264
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #12
  br label %268

268:                                              ; preds = %267, %264, %239, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath7FunName8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunName"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::xpath::FunName", %"class.blink::xpath::FunName"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %98, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %12 = getelementptr inbounds %"class.blink::xpath::FunName", %"class.blink::xpath::FunName"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %13 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 0) #12
  %14 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %14, align 8
  %16 = bitcast %"class.blink::xpath::Expression"* %15 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %17 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %17, i64 3
  %19 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %18, align 8
  call void %19(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %15, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %10
  %24 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %25 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %27, align 8
  %28 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %29 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %28, %"class.blink::xpath::ValueData"** %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  br label %97

30:                                               ; preds = %10
  %31 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %5, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %32 = call %"class.blink::Node"* @_ZNK5blink5xpath7NodeSet9FirstNodeEv(%"class.blink::xpath::NodeSet"* %31) #12
  %33 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  %34 = icmp eq %"class.blink::Node"* %32, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink5xpathL12ExpandedNameEPNS_4NodeE(%"class.blink::Node"* nonnull %32)
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  br label %39

38:                                               ; preds = %30
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #12
  br label %39

39:                                               ; preds = %38, %35
  %40 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %40, align 8
  %41 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %41, align 4
  %42 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %42, align 8
  %43 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = bitcast i8* %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %46, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #12
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %53
  call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %39, %48, %63
  %66 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %66, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds i8, i8* %66, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #12
  %69 = getelementptr inbounds i8, i8* %66, i64 -4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = or i16 %71, 1
  store atomic i16 %72, i16* %70 release, align 2
  %73 = getelementptr inbounds i8, i8* %43, i64 8
  %74 = bitcast i8* %73 to i8**
  store i8* %66, i8** %74, align 8
  %75 = getelementptr inbounds i8, i8* %43, i64 -4
  %76 = bitcast i8* %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = or i16 %77, 1
  store atomic i16 %78, i16* %76 release, align 2
  %79 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %80 = bitcast %"class.blink::xpath::ValueData"** %79 to i8**
  store i8* %43, i8** %80, align 8
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %65
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #12
  br label %96

96:                                               ; preds = %65, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  br label %97

97:                                               ; preds = %96, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  br label %154

98:                                               ; preds = %3
  %99 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink5xpathL12ExpandedNameEPNS_4NodeE(%"class.blink::Node"* %100)
  %102 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %102, align 8
  %103 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %103, align 4
  %104 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %104, align 8
  %105 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %106 = bitcast i8* %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %98, %108, %123
  %126 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds i8, i8* %126, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 16, i1 false) #12
  %129 = getelementptr inbounds i8, i8* %126, i64 -4
  %130 = bitcast i8* %129 to i16*
  %131 = load atomic i16, i16* %130 monotonic, align 2
  %132 = or i16 %131, 1
  store atomic i16 %132, i16* %130 release, align 2
  %133 = getelementptr inbounds i8, i8* %105, i64 8
  %134 = bitcast i8* %133 to i8**
  store i8* %126, i8** %134, align 8
  %135 = getelementptr inbounds i8, i8* %105, i64 -4
  %136 = bitcast i8* %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = or i16 %137, 1
  store atomic i16 %138, i16* %136 release, align 2
  %139 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %140 = bitcast %"class.blink::xpath::ValueData"** %139 to i8**
  store i8* %105, i8** %140, align 8
  br i1 %107, label %154, label %141

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %154

154:                                              ; preds = %153, %150, %125, %97
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink5xpathL12ExpandedNameEPNS_4NodeE(%"class.blink::Node"*) unnamed_addr #4 {
  %2 = alloca %"class.WTF::StringAppend", align 8
  %3 = alloca %"class.WTF::StringAppend.656", align 8
  %4 = bitcast %"class.blink::Node"* %0 to i32 (%"class.blink::Node"*)***
  %5 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %5, i64 30
  %7 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::Node"* %0) #12
  switch i32 %8, label %62 [
    i32 1, label %9
    i32 2, label %33
  ]

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %62, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %57

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #12
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %57

33:                                               ; preds = %1
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %35 = bitcast %"class.blink::TraceWrapperV8Reference"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #12
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  tail call void @llvm.trap() #12
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %16, %31, %40, %55
  %58 = phi %"class.WTF::StringImpl"* [ %38, %55 ], [ %38, %40 ], [ %14, %31 ], [ %14, %16 ]
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %142

62:                                               ; preds = %9, %33, %1, %57
  %63 = phi %"class.WTF::StringImpl"* [ %58, %57 ], [ null, %1 ], [ null, %33 ], [ null, %9 ]
  %64 = phi i1 [ false, %57 ], [ true, %1 ], [ true, %33 ], [ true, %9 ]
  %65 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %4, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %65, i64 30
  %67 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %66, align 8
  %68 = tail call i32 %67(%"class.blink::Node"* %0) #12
  switch i32 %68, label %322 [
    i32 1, label %69
    i32 2, label %94
    i32 7, label %119
  ]

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %71 = bitcast %"class.blink::Member.5"* %70 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %76, label %322, label %77

77:                                               ; preds = %69
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %322

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #12
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !3

91:                                               ; preds = %82
  tail call void @llvm.trap() #12
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %322

94:                                               ; preds = %62
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %96 = bitcast %"class.blink::TraceWrapperV8Reference"* %95 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = ptrtoint %"class.WTF::StringImpl"* %99 to i64
  %101 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %101, label %322, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %322

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #12
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !3

116:                                              ; preds = %107
  tail call void @llvm.trap() #12
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %322

119:                                              ; preds = %62
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 6
  %121 = bitcast %"class.blink::Member.9"* %120 to %"class.WTF::StringImpl"**
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = ptrtoint %"class.WTF::StringImpl"* %122 to i64
  %124 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %124, label %322, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %322

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #12
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %130
  tail call void @llvm.trap() #12
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %322

142:                                              ; preds = %57
  %143 = bitcast %"class.WTF::StringAppend"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %143) #12
  %144 = bitcast %"class.WTF::StringAppend.656"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #12
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %161

151:                                              ; preds = %142
  %152 = zext i32 %150 to i33
  %153 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #12
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !3

158:                                              ; preds = %151
  tail call void @llvm.trap() #12
  unreachable

159:                                              ; preds = %151
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %149, align 4
  br label %161

161:                                              ; preds = %142, %159
  %162 = phi i32 [ %160, %159 ], [ %150, %142 ]
  %163 = load atomic i32, i32* %145 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  br i1 %165, label %167, label %177

167:                                              ; preds = %161
  %168 = zext i32 %162 to i33
  %169 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #12
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !3

174:                                              ; preds = %167
  tail call void @llvm.trap() #12
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %166, align 4
  br label %177

177:                                              ; preds = %175, %161
  %178 = phi i32 [ %176, %175 ], [ %162, %161 ]
  %179 = load atomic i32, i32* %145 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %184

182:                                              ; preds = %177
  %183 = add i32 %178, -1
  store i32 %183, i32* %166, align 4
  br label %184

184:                                              ; preds = %182, %177
  %185 = phi i32 [ %183, %182 ], [ %178, %177 ]
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %188

187:                                              ; preds = %184
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #12
  br label %188

188:                                              ; preds = %184, %187
  %189 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %189, align 8
  %190 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8** %190, align 8
  %191 = load i32 (%"class.blink::Node"*)**, i32 (%"class.blink::Node"*)*** %4, align 8
  %192 = getelementptr inbounds i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %191, i64 30
  %193 = load i32 (%"class.blink::Node"*)*, i32 (%"class.blink::Node"*)** %192, align 8
  %194 = tail call i32 %193(%"class.blink::Node"* %0) #12
  switch i32 %194, label %268 [
    i32 1, label %195
    i32 2, label %220
    i32 7, label %245
  ]

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %197 = bitcast %"class.blink::Member.5"* %196 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %198 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %198, i64 0, i32 3, i32 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %201 = ptrtoint %"class.WTF::StringImpl"* %200 to i64
  %202 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %202, label %268, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %268

208:                                              ; preds = %203
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = zext i32 %210 to i33
  %212 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %211, i33 1) #12
  %213 = extractvalue { i33, i1 } %212, 1
  %214 = extractvalue { i33, i1 } %212, 0
  %215 = icmp slt i33 %214, 0
  %216 = or i1 %213, %215
  br i1 %216, label %217, label %218, !prof !3

217:                                              ; preds = %208
  tail call void @llvm.trap() #12
  unreachable

218:                                              ; preds = %208
  %219 = trunc i33 %214 to i32
  store i32 %219, i32* %209, align 4
  br label %268

220:                                              ; preds = %188
  %221 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %222 = bitcast %"class.blink::TraceWrapperV8Reference"* %221 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %223 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %223, i64 0, i32 3, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = ptrtoint %"class.WTF::StringImpl"* %225 to i64
  %227 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %227, label %268, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %268

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = zext i32 %235 to i33
  %237 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %236, i33 1) #12
  %238 = extractvalue { i33, i1 } %237, 1
  %239 = extractvalue { i33, i1 } %237, 0
  %240 = icmp slt i33 %239, 0
  %241 = or i1 %238, %240
  br i1 %241, label %242, label %243, !prof !3

242:                                              ; preds = %233
  tail call void @llvm.trap() #12
  unreachable

243:                                              ; preds = %233
  %244 = trunc i33 %239 to i32
  store i32 %244, i32* %234, align 4
  br label %268

245:                                              ; preds = %188
  %246 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 6
  %247 = bitcast %"class.blink::Member.9"* %246 to %"class.WTF::StringImpl"**
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %247, align 8
  %249 = ptrtoint %"class.WTF::StringImpl"* %248 to i64
  %250 = icmp eq %"class.WTF::StringImpl"* %248, null
  br i1 %250, label %268, label %251

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %268

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %248, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i33
  %260 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %259, i33 1) #12
  %261 = extractvalue { i33, i1 } %260, 1
  %262 = extractvalue { i33, i1 } %260, 0
  %263 = icmp slt i33 %262, 0
  %264 = or i1 %261, %263
  br i1 %264, label %265, label %266, !prof !3

265:                                              ; preds = %256
  tail call void @llvm.trap() #12
  unreachable

266:                                              ; preds = %256
  %267 = trunc i33 %262 to i32
  store i32 %267, i32* %257, align 4
  br label %268

268:                                              ; preds = %266, %251, %245, %243, %228, %220, %218, %203, %195, %188
  %269 = phi i64 [ %201, %195 ], [ %201, %203 ], [ %201, %218 ], [ %226, %220 ], [ %226, %228 ], [ %226, %243 ], [ %249, %245 ], [ %249, %251 ], [ %249, %266 ], [ 0, %188 ]
  %270 = inttoptr i64 %269 to %"class.WTF::StringImpl"*
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %2, %"class.WTF::StringAppend.656"* nonnull dereferenceable(16) %3, %"class.WTF::StringImpl"* %270)
  %271 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %2)
  %272 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 1, i32 0, i32 0
  %273 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %272, align 8
  %274 = icmp eq %"class.WTF::StringImpl"* %273, null
  br i1 %274, label %288, label %275

275:                                              ; preds = %268
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %277 = load atomic i32, i32* %276 monotonic, align 4
  %278 = and i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %273, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  br i1 %279, label %282, label %284

282:                                              ; preds = %275
  %283 = add i32 %281, -1
  store i32 %283, i32* %280, align 4
  br label %284

284:                                              ; preds = %282, %275
  %285 = phi i32 [ %283, %282 ], [ %281, %275 ]
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %288

287:                                              ; preds = %284
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %273) #12
  br label %288

288:                                              ; preds = %287, %284, %268
  %289 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %289, align 8
  %291 = icmp eq %"class.WTF::StringImpl"* %290, null
  br i1 %291, label %305, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %290, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  br i1 %296, label %299, label %301

299:                                              ; preds = %292
  %300 = add i32 %298, -1
  store i32 %300, i32* %297, align 4
  br label %301

301:                                              ; preds = %299, %292
  %302 = phi i32 [ %300, %299 ], [ %298, %292 ]
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %305

304:                                              ; preds = %301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %290) #12
  br label %305

305:                                              ; preds = %288, %301, %304
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %321, label %308

308:                                              ; preds = %305
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %306) #12
  br label %321

321:                                              ; preds = %320, %317, %305
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %143) #12
  br label %325

322:                                              ; preds = %62, %69, %77, %92, %94, %102, %117, %119, %125, %140
  %323 = phi i64 [ %75, %69 ], [ %75, %77 ], [ %75, %92 ], [ %100, %94 ], [ %100, %102 ], [ %100, %117 ], [ %123, %119 ], [ %123, %125 ], [ %123, %140 ], [ 0, %62 ]
  %324 = inttoptr i64 %323 to %"class.WTF::StringImpl"*
  br i1 %64, label %340, label %325

325:                                              ; preds = %321, %322
  %326 = phi %"class.WTF::StringImpl"* [ %58, %321 ], [ %63, %322 ]
  %327 = phi %"class.WTF::StringImpl"* [ %271, %321 ], [ %324, %322 ]
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %325
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %325
  %337 = phi i32 [ %335, %334 ], [ %333, %325 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #12
  br label %340

340:                                              ; preds = %322, %336, %339
  %341 = phi %"class.WTF::StringImpl"* [ %324, %322 ], [ %327, %336 ], [ %327, %339 ]
  ret %"class.WTF::StringImpl"* %341
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8FunCount8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunCount"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %6 = getelementptr inbounds %"class.blink::xpath::FunCount", %"class.blink::xpath::FunCount"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %4, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %15 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = uitofp i32 %16 to double
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %17, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9FunString8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunString"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = getelementptr inbounds %"class.blink::xpath::FunString", %"class.blink::xpath::FunString"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %66

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  call void @_ZN5blink5xpath5ValueC2EPNS_4NodeE(%"class.blink::xpath::Value"* nonnull %4, %"class.blink::Node"* %12)
  %13 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %14 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %14, align 8
  %15 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %16, align 8
  %17 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %18 = bitcast i8* %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %18, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #12
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !3

34:                                               ; preds = %25
  call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %9, %20, %35
  %38 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 1
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #12
  %41 = getelementptr inbounds i8, i8* %38, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = getelementptr inbounds i8, i8* %17, i64 8
  %46 = bitcast i8* %45 to i8**
  store i8* %38, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %17, i64 -4
  %48 = bitcast i8* %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = or i16 %49, 1
  store atomic i16 %50, i16* %48 release, align 2
  %51 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %52 = bitcast %"class.blink::xpath::ValueData"** %51 to i8**
  store i8* %17, i8** %52, align 8
  br i1 %19, label %129, label %53

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %129

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %129

66:                                               ; preds = %3
  %67 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #12
  %68 = getelementptr inbounds %"class.blink::xpath::FunString", %"class.blink::xpath::FunString"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %69 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %68, i32 0) #12
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %70, align 8
  %72 = bitcast %"class.blink::xpath::Expression"* %71 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %73 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %73, i64 3
  %75 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %74, align 8
  call void %75(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %71, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %76 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  %77 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %77, align 8
  %78 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %78, align 4
  %79 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %79, align 8
  %80 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %81 = bitcast i8* %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %81, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %66
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #12
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %66, %83, %98
  %101 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %101, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds i8, i8* %101, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #12
  %104 = getelementptr inbounds i8, i8* %101, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  %108 = getelementptr inbounds i8, i8* %80, i64 8
  %109 = bitcast i8* %108 to i8**
  store i8* %101, i8** %109, align 8
  %110 = getelementptr inbounds i8, i8* %80, i64 -4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = or i16 %112, 1
  store atomic i16 %113, i16* %111 release, align 2
  %114 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %115 = bitcast %"class.blink::xpath::ValueData"** %114 to i8**
  store i8* %80, i8** %115, align 8
  br i1 %82, label %129, label %116

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #12
  br label %129

129:                                              ; preds = %128, %125, %100, %65, %62, %37
  %130 = phi i8* [ %10, %37 ], [ %10, %62 ], [ %10, %65 ], [ %67, %100 ], [ %67, %125 ], [ %67, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath5ValueC2EPNS_4NodeE(%"class.blink::xpath::Value"*, %"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::Node"*, align 8
  %4 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %6, align 8
  %7 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %9 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #12
  %13 = getelementptr inbounds i8, i8* %10, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds i8, i8* %8, i64 8
  %18 = bitcast i8* %17 to i8**
  store i8* %10, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = bitcast %"class.blink::Member.349"* %7 to i8**
  store i8* %8, i8** %23, align 8
  %24 = bitcast i8* %17 to %"class.blink::xpath::NodeSet"**
  %25 = load %"class.blink::xpath::NodeSet"*, %"class.blink::xpath::NodeSet"** %24, align 8
  %26 = bitcast %"class.blink::Node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  store %"class.blink::Node"* %1, %"class.blink::Node"** %3, align 8
  %27 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %25, i64 0, i32 2, i32 0
  %28 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %29, %31
  br i1 %32, label %48, label %33, !prof !3

33:                                               ; preds = %2
  %34 = ptrtoint %"class.blink::Node"* %1 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %27, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %35, align 8
  %37 = zext i32 %29 to i64
  %38 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %36, i64 %37
  %39 = bitcast %"class.blink::Member.5"* %38 to i64*
  store atomic i64 %34, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.blink::Node"* %1 to i8*
  %44 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %43) #12
  br label %45

45:                                               ; preds = %42, %33
  %46 = load i32, i32* %28, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %28, align 4
  br label %49

48:                                               ; preds = %2
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.360"* %27, %"class.blink::Node"** nonnull dereferenceable(8) %3) #12
  br label %49

49:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9FunConcat8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunConcat"*, %"struct.blink::xpath::EvaluationContext"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::xpath::Value", align 8
  %8 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %11 = bitcast %union.anon* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %14, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %4, i32 1024) #12
  %15 = getelementptr inbounds %"class.blink::xpath::FunConcat", %"class.blink::xpath::FunConcat"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %3
  %19 = bitcast %"struct.blink::xpath::EvaluationContext"* %5 to i8*
  %20 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %21 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %22 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %24 = bitcast %"class.WTF::HashMap"* %21 to i8*
  %25 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %27 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 4
  %28 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %29 = bitcast i8** %28 to i64*
  %30 = bitcast i8** %27 to i64*
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  %32 = bitcast %"class.blink::xpath::Value"* %7 to i8*
  %33 = getelementptr inbounds %"class.blink::xpath::FunConcat", %"class.blink::xpath::FunConcat"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %38 = bitcast %"class.WTF::StringView"* %6 to i64*
  %39 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %42 = bitcast %"class.WTF::HashMap"* %41 to i8*
  br label %114

43:                                               ; preds = %186, %3
  %44 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %45 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %45, align 8
  %46 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %46, align 4
  %47 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %47, align 8
  %48 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #12
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !3

65:                                               ; preds = %56
  call void @llvm.trap() #12
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %43, %51, %66
  %69 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %69, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %69, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds i8, i8* %69, i64 -4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = or i16 %74, 1
  store atomic i16 %75, i16* %73 release, align 2
  %76 = getelementptr inbounds i8, i8* %48, i64 8
  %77 = bitcast i8* %76 to i8**
  store i8* %69, i8** %77, align 8
  %78 = getelementptr inbounds i8, i8* %48, i64 -4
  %79 = bitcast i8* %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = or i16 %80, 1
  store atomic i16 %81, i16* %79 release, align 2
  %82 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = bitcast %"class.blink::xpath::ValueData"** %82 to i8**
  store i8* %48, i8** %83, align 8
  br i1 %50, label %97, label %84

84:                                               ; preds = %68
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #12
  br label %97

97:                                               ; preds = %68, %93, %96
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #12
  br label %113

113:                                              ; preds = %97, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void

114:                                              ; preds = %186, %18
  %115 = phi i32 [ 0, %18 ], [ %187, %186 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %20, i64 16, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #12
  %116 = load i32, i32* %23, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %152, label %118

118:                                              ; preds = %114
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %22, i32 %116) #12
  %119 = load i32, i32* %23, align 4
  %120 = icmp eq i32 %119, 0
  %121 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %122 = load i32, i32* %26, align 8
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %121, i64 %123
  br i1 %120, label %152, label %125

125:                                              ; preds = %118
  %126 = icmp eq i32 %122, 0
  br i1 %126, label %134, label %127

127:                                              ; preds = %125, %131
  %128 = phi %"struct.WTF::KeyValuePair"* [ %132, %131 ], [ %121, %125 ]
  %129 = bitcast %"struct.WTF::KeyValuePair"* %128 to i64*
  %130 = load i64, i64* %129, align 8
  switch i64 %130, label %134 [
    i64 -1, label %131
    i64 0, label %131
  ]

131:                                              ; preds = %127, %127
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 1
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, %124
  br i1 %133, label %152, label %127

134:                                              ; preds = %127, %125
  %135 = phi %"struct.WTF::KeyValuePair"* [ %121, %125 ], [ %128, %127 ]
  %136 = icmp eq %"struct.WTF::KeyValuePair"* %135, %124
  br i1 %136, label %152, label %137

137:                                              ; preds = %134, %150
  %138 = phi %"struct.WTF::KeyValuePair"* [ %144, %150 ], [ %135, %134 ]
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 0, i32 0
  %140 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %22, %"class.WTF::String"* dereferenceable(8) %139, %"struct.WTF::KeyValuePair"* dereferenceable(16) %138) #12
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 1
  %142 = icmp eq %"struct.WTF::KeyValuePair"* %141, %124
  br i1 %142, label %152, label %143

143:                                              ; preds = %137, %147
  %144 = phi %"struct.WTF::KeyValuePair"* [ %148, %147 ], [ %141, %137 ]
  %145 = bitcast %"struct.WTF::KeyValuePair"* %144 to i64*
  %146 = load i64, i64* %145, align 8
  switch i64 %146, label %150 [
    i64 -1, label %147
    i64 0, label %147
  ]

147:                                              ; preds = %143, %143
  %148 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %144, i64 1
  %149 = icmp eq %"struct.WTF::KeyValuePair"* %148, %124
  br i1 %149, label %152, label %143

150:                                              ; preds = %143
  %151 = icmp eq %"struct.WTF::KeyValuePair"* %144, %124
  br i1 %151, label %152, label %137

152:                                              ; preds = %131, %137, %150, %147, %114, %118, %134
  %153 = load i64, i64* %29, align 8
  store i64 %153, i64* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #12
  %154 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %33, i32 %115) #12
  %155 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %154, i64 0, i32 0, i32 0
  %156 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %155, align 8
  %157 = bitcast %"class.blink::xpath::Expression"* %156 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %158 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %158, i64 3
  %160 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %159, align 8
  call void %160(%"class.blink::xpath::Value"* nonnull sret %7, %"class.blink::xpath::Expression"* %156, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %5) #12
  %161 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %7) #12
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %152
  store i8* null, i8** %35, align 8
  %164 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %164, i64* %38, align 8
  store i32 0, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %181

165:                                              ; preds = %152
  store %"class.WTF::StringImpl"* %161, %"class.WTF::StringImpl"** %34, align 8
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 1
  store %"class.WTF::StringImpl"* %168, %"class.WTF::StringImpl"** %36, align 8
  store i32 %167, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  br i1 %172, label %175, label %177

175:                                              ; preds = %165
  %176 = add i32 %174, -1
  store i32 %176, i32* %173, align 4
  br label %177

177:                                              ; preds = %175, %165
  %178 = phi i32 [ %176, %175 ], [ %174, %165 ]
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

180:                                              ; preds = %177
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #12
  br label %181

181:                                              ; preds = %163, %177, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %182 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %39, align 8
  %183 = icmp eq %"struct.WTF::KeyValuePair"* %182, null
  br i1 %183, label %186, label %184, !prof !4

184:                                              ; preds = %181
  %185 = load i32, i32* %40, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %182, i32 %185) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %39, align 8
  br label %186

186:                                              ; preds = %181, %184
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #12
  %187 = add nuw i32 %115, 1
  %188 = icmp eq i32 %187, %16
  br i1 %188, label %43, label %114
}

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath13FunStartsWith8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunStartsWith"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  %9 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %10 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashMap"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false) #12
  %12 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %15 = bitcast %"class.WTF::HashMap"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #12
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %13, i32 %16) #12
  %19 = load i32, i32* %14, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  br i1 %20, label %54, label %27

27:                                               ; preds = %18
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair"* [ %34, %33 ], [ %22, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %26
  br i1 %35, label %54, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"struct.WTF::KeyValuePair"* [ %22, %27 ], [ %30, %29 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %26
  br i1 %38, label %54, label %39

39:                                               ; preds = %36, %52
  %40 = phi %"struct.WTF::KeyValuePair"* [ %46, %52 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %42 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* dereferenceable(8) %41, %"struct.WTF::KeyValuePair"* dereferenceable(16) %40) #12
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, %26
  br i1 %44, label %54, label %45

45:                                               ; preds = %39, %49
  %46 = phi %"struct.WTF::KeyValuePair"* [ %50, %49 ], [ %43, %39 ]
  %47 = bitcast %"struct.WTF::KeyValuePair"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, %26
  br i1 %51, label %54, label %45

52:                                               ; preds = %45
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %46, %26
  br i1 %53, label %54, label %39

54:                                               ; preds = %33, %39, %52, %49, %3, %18, %36
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.blink::xpath::FunStartsWith", %"class.blink::xpath::FunStartsWith"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %62 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 0) #12
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %63, align 8
  %65 = bitcast %"class.blink::xpath::Expression"* %64 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %66 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, i64 3
  %68 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %67, align 8
  call void %68(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %64, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %69 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %70 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 1) #12
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %72, align 8
  %74 = bitcast %"class.blink::xpath::Expression"* %73 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %75 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %75, i64 3
  %77 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %76, align 8
  call void %77(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %73, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %4) #12
  %78 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %122, label %80

80:                                               ; preds = %54
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %104, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %86, align 8
  %87 = load i32, i32* %81, align 4
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %87, i32* %91, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %84
  %94 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %69, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  br label %97

95:                                               ; preds = %84
  %96 = icmp eq i32 %87, 0
  br label %97

97:                                               ; preds = %95, %93
  %98 = phi i1 [ %96, %95 ], [ %94, %93 ]
  %99 = zext i1 %98 to i8
  %100 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %100, align 8
  %101 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %99, i8* %101, align 4
  %102 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %103 = bitcast double* %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  br label %109

104:                                              ; preds = %80
  %105 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %105, align 8
  %106 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 1, i8* %106, align 4
  %107 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %108 = bitcast double* %107 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #12
  br label %109

109:                                              ; preds = %104, %97
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %127

122:                                              ; preds = %54
  %123 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %123, align 8
  %124 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 1, i8* %124, align 4
  %125 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %126 = bitcast double* %125 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #12
  br label %127

127:                                              ; preds = %122, %118, %121
  %128 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #12
  br label %142

142:                                              ; preds = %127, %138, %141
  %143 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 0
  %144 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %143, align 8
  %145 = icmp eq %"struct.WTF::KeyValuePair"* %144, null
  br i1 %145, label %149, label %146, !prof !4

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 1
  %148 = load i32, i32* %147, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %144, i32 %148) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %143, align 8
  br label %149

149:                                              ; preds = %142, %146
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath11FunContains8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunContains"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  %9 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %10 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashMap"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false) #12
  %12 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %15 = bitcast %"class.WTF::HashMap"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #12
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %13, i32 %16) #12
  %19 = load i32, i32* %14, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25
  br i1 %20, label %54, label %27

27:                                               ; preds = %18
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair"* [ %34, %33 ], [ %22, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %26
  br i1 %35, label %54, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"struct.WTF::KeyValuePair"* [ %22, %27 ], [ %30, %29 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %26
  br i1 %38, label %54, label %39

39:                                               ; preds = %36, %52
  %40 = phi %"struct.WTF::KeyValuePair"* [ %46, %52 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 0
  %42 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %13, %"class.WTF::String"* dereferenceable(8) %41, %"struct.WTF::KeyValuePair"* dereferenceable(16) %40) #12
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %43, %26
  br i1 %44, label %54, label %45

45:                                               ; preds = %39, %49
  %46 = phi %"struct.WTF::KeyValuePair"* [ %50, %49 ], [ %43, %39 ]
  %47 = bitcast %"struct.WTF::KeyValuePair"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, %26
  br i1 %51, label %54, label %45

52:                                               ; preds = %45
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %46, %26
  br i1 %53, label %54, label %39

54:                                               ; preds = %33, %39, %52, %49, %3, %18, %36
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = getelementptr inbounds %"class.blink::xpath::FunContains", %"class.blink::xpath::FunContains"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %62 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 0) #12
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %63, align 8
  %65 = bitcast %"class.blink::xpath::Expression"* %64 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %66 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, i64 3
  %68 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %67, align 8
  call void %68(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %64, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %69 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  %70 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #12
  %71 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 1) #12
  %72 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %71, i64 0, i32 0, i32 0
  %73 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %72, align 8
  %74 = bitcast %"class.blink::xpath::Expression"* %73 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %75 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %75, i64 3
  %77 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %76, align 8
  call void %77(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %73, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %4) #12
  %78 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #12
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %121, label %80

80:                                               ; preds = %54
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %103, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %86, align 8
  %87 = load i32, i32* %81, align 4
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %90 = bitcast i8** %89 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %87, i32* %91, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %84
  %94 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %69, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, i32 0) #12
  %95 = icmp ne i32 %94, -1
  %96 = zext i1 %95 to i8
  br label %97

97:                                               ; preds = %93, %84
  %98 = phi i8 [ %96, %93 ], [ 0, %84 ]
  %99 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %99, align 8
  %100 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %98, i8* %100, align 4
  %101 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %102 = bitcast double* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  br label %108

103:                                              ; preds = %80
  %104 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 1, i8* %105, align 4
  %106 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %107 = bitcast double* %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 16, i1 false) #12
  br label %108

108:                                              ; preds = %103, %97
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %126

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #12
  br label %126

121:                                              ; preds = %54
  %122 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %122, align 8
  %123 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 1, i8* %123, align 4
  %124 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %125 = bitcast double* %124 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 16, i1 false) #12
  br label %126

126:                                              ; preds = %121, %117, %120
  %127 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #12
  br label %141

141:                                              ; preds = %126, %137, %140
  %142 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 0
  %143 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %142, align 8
  %144 = icmp eq %"struct.WTF::KeyValuePair"* %143, null
  br i1 %144, label %148, label %145, !prof !4

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %143, i32 %147) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %142, align 8
  br label %148

148:                                              ; preds = %141, %145
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath18FunSubstringBefore8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunSubstringBefore"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::xpath::Value", align 8
  %9 = alloca %"class.blink::xpath::Value", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = bitcast %"struct.blink::xpath::EvaluationContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #12
  %12 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %14 = bitcast %"class.WTF::HashMap"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false) #12
  %15 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %18 = bitcast %"class.WTF::HashMap"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #12
  %19 = load i32, i32* %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %16, i32 %19) #12
  %22 = load i32, i32* %17, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %28
  br i1 %23, label %57, label %30

30:                                               ; preds = %21
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"struct.WTF::KeyValuePair"* [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"struct.WTF::KeyValuePair"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %29
  br i1 %38, label %57, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"struct.WTF::KeyValuePair"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %29
  br i1 %41, label %57, label %42

42:                                               ; preds = %39, %55
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %55 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %16, %"class.WTF::String"* dereferenceable(8) %44, %"struct.WTF::KeyValuePair"* dereferenceable(16) %43) #12
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %29
  br i1 %47, label %57, label %48

48:                                               ; preds = %42, %52
  %49 = phi %"struct.WTF::KeyValuePair"* [ %53, %52 ], [ %46, %42 ]
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, %29
  br i1 %54, label %57, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %29
  br i1 %56, label %57, label %42

57:                                               ; preds = %36, %42, %55, %52, %3, %21, %39
  %58 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 4
  %59 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast i8** %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %64, align 8
  %65 = bitcast %"class.blink::xpath::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.blink::xpath::FunSubstringBefore", %"class.blink::xpath::FunSubstringBefore"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %67 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %66, i32 0) #12
  %68 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %68, align 8
  %70 = bitcast %"class.blink::xpath::Expression"* %69 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %71 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %71, i64 3
  %73 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %72, align 8
  call void %73(%"class.blink::xpath::Value"* nonnull sret %8, %"class.blink::xpath::Expression"* %69, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %74 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %8) #12
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  %75 = bitcast %"class.blink::xpath::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %66, i32 1) #12
  %77 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %77, align 8
  %79 = bitcast %"class.blink::xpath::Expression"* %78 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %80 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %80, i64 3
  %82 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %81, align 8
  call void %82(%"class.blink::xpath::Value"* nonnull sret %9, %"class.blink::xpath::Expression"* %78, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %6) #12
  %83 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #12
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %163, label %85

85:                                               ; preds = %57
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %163, label %89

89:                                               ; preds = %85
  %90 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %91, align 8
  %92 = load i32, i32* %86, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %92, i32* %96, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %97, label %98, label %99

98:                                               ; preds = %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  br label %102

99:                                               ; preds = %89
  %100 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %74, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %102, label %109

102:                                              ; preds = %98, %99
  %103 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %104 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %104, align 8
  %105 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %105, align 4
  %106 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %106, align 8
  %107 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %108 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %107, %"class.blink::xpath::ValueData"** %108, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  br label %170

109:                                              ; preds = %99
  %110 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 0, i32 %100) #12
  %111 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %111, align 8
  %112 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %112, align 4
  %113 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %113, align 8
  %114 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %115 = bitcast i8* %114 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %115, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %116, label %134, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #12
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !3

131:                                              ; preds = %122
  call void @llvm.trap() #12
  unreachable

132:                                              ; preds = %122
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %123, align 4
  br label %134

134:                                              ; preds = %109, %117, %132
  %135 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %135, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 1
  store i8 0, i8* %136, align 1
  %137 = getelementptr inbounds i8, i8* %135, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #12
  %138 = getelementptr inbounds i8, i8* %135, i64 -4
  %139 = bitcast i8* %138 to i16*
  %140 = load atomic i16, i16* %139 monotonic, align 2
  %141 = or i16 %140, 1
  store atomic i16 %141, i16* %139 release, align 2
  %142 = getelementptr inbounds i8, i8* %114, i64 8
  %143 = bitcast i8* %142 to i8**
  store i8* %135, i8** %143, align 8
  %144 = getelementptr inbounds i8, i8* %114, i64 -4
  %145 = bitcast i8* %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = or i16 %146, 1
  store atomic i16 %147, i16* %145 release, align 2
  %148 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %149 = bitcast %"class.blink::xpath::ValueData"** %148 to i8**
  store i8* %114, i8** %149, align 8
  br i1 %116, label %170, label %150

150:                                              ; preds = %134
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #12
  br label %170

163:                                              ; preds = %57, %85
  %164 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %5, align 8
  %165 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %165, align 8
  %166 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %166, align 4
  %167 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %167, align 8
  %168 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %5) #12
  %169 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %168, %"class.blink::xpath::ValueData"** %169, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164)
  br i1 %84, label %183, label %170

170:                                              ; preds = %102, %134, %159, %162, %163
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %177, label %179

177:                                              ; preds = %170
  %178 = add i32 %176, -1
  store i32 %178, i32* %175, align 4
  br label %179

179:                                              ; preds = %177, %170
  %180 = phi i32 [ %178, %177 ], [ %176, %170 ]
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %183

182:                                              ; preds = %179
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #12
  br label %183

183:                                              ; preds = %163, %179, %182
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #12
  br label %199

199:                                              ; preds = %183, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  %200 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 0
  %201 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %200, align 8
  %202 = icmp eq %"struct.WTF::KeyValuePair"* %201, null
  br i1 %202, label %206, label %203, !prof !4

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 1
  %205 = load i32, i32* %204, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %201, i32 %205) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %200, align 8
  br label %206

206:                                              ; preds = %199, %203
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath17FunSubstringAfter8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunSubstringAfter"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::xpath::Value", align 8
  %8 = alloca %"class.blink::xpath::Value", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"struct.blink::xpath::EvaluationContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #12
  %11 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %12 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %13 = bitcast %"class.WTF::HashMap"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false) #12
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %14, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %17 = bitcast %"class.WTF::HashMap"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 20, i1 false) #12
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %15, i32 %18) #12
  %21 = load i32, i32* %16, align 4
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %24, i64 %27
  br i1 %22, label %56, label %29

29:                                               ; preds = %20
  %30 = icmp eq i32 %26, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %29, %35
  %32 = phi %"struct.WTF::KeyValuePair"* [ %36, %35 ], [ %24, %29 ]
  %33 = bitcast %"struct.WTF::KeyValuePair"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  switch i64 %34, label %38 [
    i64 -1, label %35
    i64 0, label %35
  ]

35:                                               ; preds = %31, %31
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 1
  %37 = icmp eq %"struct.WTF::KeyValuePair"* %36, %28
  br i1 %37, label %56, label %31

38:                                               ; preds = %31, %29
  %39 = phi %"struct.WTF::KeyValuePair"* [ %24, %29 ], [ %32, %31 ]
  %40 = icmp eq %"struct.WTF::KeyValuePair"* %39, %28
  br i1 %40, label %56, label %41

41:                                               ; preds = %38, %54
  %42 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %39, %38 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 0
  %44 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %15, %"class.WTF::String"* dereferenceable(8) %43, %"struct.WTF::KeyValuePair"* dereferenceable(16) %42) #12
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 1
  %46 = icmp eq %"struct.WTF::KeyValuePair"* %45, %28
  br i1 %46, label %56, label %47

47:                                               ; preds = %41, %51
  %48 = phi %"struct.WTF::KeyValuePair"* [ %52, %51 ], [ %45, %41 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  switch i64 %50, label %54 [
    i64 -1, label %51
    i64 0, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 1
  %53 = icmp eq %"struct.WTF::KeyValuePair"* %52, %28
  br i1 %53, label %56, label %47

54:                                               ; preds = %47
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %48, %28
  br i1 %55, label %56, label %41

56:                                               ; preds = %35, %41, %54, %51, %3, %20, %38
  %57 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 4
  %58 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %63, align 8
  %64 = bitcast %"class.blink::xpath::Value"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.blink::xpath::FunSubstringAfter", %"class.blink::xpath::FunSubstringAfter"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %66 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %65, i32 0) #12
  %67 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %67, align 8
  %69 = bitcast %"class.blink::xpath::Expression"* %68 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %70 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %70, i64 3
  %72 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %71, align 8
  call void %72(%"class.blink::xpath::Value"* nonnull sret %7, %"class.blink::xpath::Expression"* %68, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %73 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %7) #12
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  %74 = bitcast %"class.blink::xpath::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #12
  %75 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %65, i32 1) #12
  %76 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %76, align 8
  %78 = bitcast %"class.blink::xpath::Expression"* %77 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %79 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %79, i64 3
  %81 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %80, align 8
  call void %81(%"class.blink::xpath::Value"* nonnull sret %8, %"class.blink::xpath::Expression"* %77, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %5) #12
  %82 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #12
  %83 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #12
  %84 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %84, label %85, label %89

85:                                               ; preds = %56
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %87, i64* %88, align 8
  br label %96

89:                                               ; preds = %56
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 1
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %95 = bitcast i8** %94 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %95, align 8
  br label %96

96:                                               ; preds = %85, %89
  %97 = phi i32 [ %92, %89 ], [ 0, %85 ]
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %97, i32* %98, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %99, label %100, label %101

100:                                              ; preds = %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #12
  br label %104

101:                                              ; preds = %96
  %102 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %73, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #12
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %111

104:                                              ; preds = %100, %101
  %105 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %106 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %106, align 8
  %107 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %107, align 4
  %108 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %108, align 8
  %109 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %110 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %109, %"class.blink::xpath::ValueData"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105)
  br label %171

111:                                              ; preds = %101
  br i1 %84, label %115, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  br label %115

115:                                              ; preds = %111, %112
  %116 = phi i32 [ %114, %112 ], [ 0, %111 ]
  %117 = add i32 %116, %102
  %118 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %6, i32 %117, i32 -1) #12
  %119 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %119, align 8
  %120 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %120, align 4
  %121 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %121, align 8
  %122 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %123 = bitcast i8* %122 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %118, %"class.WTF::StringImpl"** %123, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %124, label %142, label %125

125:                                              ; preds = %115
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #12
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !3

139:                                              ; preds = %130
  call void @llvm.trap() #12
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %142

142:                                              ; preds = %115, %125, %140
  %143 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %143, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 1
  store i8 0, i8* %144, align 1
  %145 = getelementptr inbounds i8, i8* %143, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 16, i1 false) #12
  %146 = getelementptr inbounds i8, i8* %143, i64 -4
  %147 = bitcast i8* %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = or i16 %148, 1
  store atomic i16 %149, i16* %147 release, align 2
  %150 = getelementptr inbounds i8, i8* %122, i64 8
  %151 = bitcast i8* %150 to i8**
  store i8* %143, i8** %151, align 8
  %152 = getelementptr inbounds i8, i8* %122, i64 -4
  %153 = bitcast i8* %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = or i16 %154, 1
  store atomic i16 %155, i16* %153 release, align 2
  %156 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %157 = bitcast %"class.blink::xpath::ValueData"** %156 to i8**
  store i8* %122, i8** %157, align 8
  br i1 %124, label %171, label %158

158:                                              ; preds = %142
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #12
  br label %171

171:                                              ; preds = %170, %167, %142, %104
  br i1 %84, label %185, label %172

172:                                              ; preds = %171
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #12
  br label %185

185:                                              ; preds = %171, %181, %184
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #12
  br label %201

201:                                              ; preds = %185, %197, %200
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  %202 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 0
  %203 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %202, align 8
  %204 = icmp eq %"struct.WTF::KeyValuePair"* %203, null
  br i1 %204, label %208, label %205, !prof !4

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %203, i32 %207) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %202, align 8
  br label %208

208:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath12FunSubstring8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunSubstring"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %6 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::xpath::Value", align 8
  %9 = alloca %"class.blink::xpath::Value", align 8
  %10 = alloca %"class.blink::xpath::Value", align 8
  %11 = bitcast %"struct.blink::xpath::EvaluationContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #12
  %12 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %14 = bitcast %"class.WTF::HashMap"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false) #12
  %15 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %16 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %15, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %18 = bitcast %"class.WTF::HashMap"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #12
  %19 = load i32, i32* %17, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %16, i32 %19) #12
  %22 = load i32, i32* %17, align 4
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %25 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %24, align 8
  %26 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %28
  br i1 %23, label %57, label %30

30:                                               ; preds = %21
  %31 = icmp eq i32 %27, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %30, %36
  %33 = phi %"struct.WTF::KeyValuePair"* [ %37, %36 ], [ %25, %30 ]
  %34 = bitcast %"struct.WTF::KeyValuePair"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  switch i64 %35, label %39 [
    i64 -1, label %36
    i64 0, label %36
  ]

36:                                               ; preds = %32, %32
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %37, %29
  br i1 %38, label %57, label %32

39:                                               ; preds = %32, %30
  %40 = phi %"struct.WTF::KeyValuePair"* [ %25, %30 ], [ %33, %32 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %29
  br i1 %41, label %57, label %42

42:                                               ; preds = %39, %55
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %55 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %16, %"class.WTF::String"* dereferenceable(8) %44, %"struct.WTF::KeyValuePair"* dereferenceable(16) %43) #12
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, %29
  br i1 %47, label %57, label %48

48:                                               ; preds = %42, %52
  %49 = phi %"struct.WTF::KeyValuePair"* [ %53, %52 ], [ %46, %42 ]
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %53, %29
  br i1 %54, label %57, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %29
  br i1 %56, label %57, label %42

57:                                               ; preds = %36, %42, %55, %52, %3, %21, %39
  %58 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 4
  %59 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %60 = bitcast i8** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast i8** %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = bitcast %"struct.blink::xpath::EvaluationContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %63) #12
  %64 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %65 = bitcast %"class.WTF::HashMap"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* align 8 %12, i64 16, i1 false) #12
  %66 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %67 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %66, i64 0, i32 0
  %68 = bitcast %"class.WTF::HashMap"* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 20, i1 false) #12
  %69 = load i32, i32* %17, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %107, label %71

71:                                               ; preds = %57
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %67, i32 %69) #12
  %72 = load i32, i32* %17, align 4
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %75 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %74, align 8
  %76 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %77 = load i32, i32* %76, align 8
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 %78
  br i1 %73, label %107, label %80

80:                                               ; preds = %71
  %81 = icmp eq i32 %77, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %80, %86
  %83 = phi %"struct.WTF::KeyValuePair"* [ %87, %86 ], [ %75, %80 ]
  %84 = bitcast %"struct.WTF::KeyValuePair"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  switch i64 %85, label %89 [
    i64 -1, label %86
    i64 0, label %86
  ]

86:                                               ; preds = %82, %82
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 1
  %88 = icmp eq %"struct.WTF::KeyValuePair"* %87, %79
  br i1 %88, label %107, label %82

89:                                               ; preds = %82, %80
  %90 = phi %"struct.WTF::KeyValuePair"* [ %75, %80 ], [ %83, %82 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %90, %79
  br i1 %91, label %107, label %92

92:                                               ; preds = %89, %105
  %93 = phi %"struct.WTF::KeyValuePair"* [ %99, %105 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 0, i32 0
  %95 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %67, %"class.WTF::String"* dereferenceable(8) %94, %"struct.WTF::KeyValuePair"* dereferenceable(16) %93) #12
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %93, i64 1
  %97 = icmp eq %"struct.WTF::KeyValuePair"* %96, %79
  br i1 %97, label %107, label %98

98:                                               ; preds = %92, %102
  %99 = phi %"struct.WTF::KeyValuePair"* [ %103, %102 ], [ %96, %92 ]
  %100 = bitcast %"struct.WTF::KeyValuePair"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  switch i64 %101, label %105 [
    i64 -1, label %102
    i64 0, label %102
  ]

102:                                              ; preds = %98, %98
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 1
  %104 = icmp eq %"struct.WTF::KeyValuePair"* %103, %79
  br i1 %104, label %107, label %98

105:                                              ; preds = %98
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %99, %79
  br i1 %106, label %107, label %92

107:                                              ; preds = %86, %92, %105, %102, %57, %71, %89
  %108 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 4
  %109 = load i64, i64* %60, align 8
  %110 = bitcast i8** %108 to i64*
  store i64 %109, i64* %110, align 8
  %111 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #12
  %112 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %112, align 8
  %113 = bitcast %"class.blink::xpath::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #12
  %114 = getelementptr inbounds %"class.blink::xpath::FunSubstring", %"class.blink::xpath::FunSubstring"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %115 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %114, i32 0) #12
  %116 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %116, align 8
  %118 = bitcast %"class.blink::xpath::Expression"* %117 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %119 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %119, i64 3
  %121 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %120, align 8
  call void %121(%"class.blink::xpath::Value"* nonnull sret %8, %"class.blink::xpath::Expression"* %117, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %122 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %8) #12
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #12
  %123 = bitcast %"class.blink::xpath::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #12
  %124 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %114, i32 1) #12
  %125 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %125, align 8
  %127 = bitcast %"class.blink::xpath::Expression"* %126 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %128 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %128, i64 3
  %130 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %129, align 8
  call void %130(%"class.blink::xpath::Value"* nonnull sret %9, %"class.blink::xpath::Expression"* %126, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %5) #12
  %131 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %9) #12
  %132 = fcmp uno double %131, 0.000000e+00
  %133 = call double @llvm.fabs.f64(double %131) #13
  %134 = fcmp oeq double %133, 0x7FF0000000000000
  %135 = or i1 %132, %134
  br i1 %135, label %146, label %136

136:                                              ; preds = %107
  %137 = bitcast double %131 to i64
  %138 = icmp slt i64 %137, 0
  %139 = fcmp oge double %131, -5.000000e-01
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %143

141:                                              ; preds = %136
  %142 = fmul double %131, 0.000000e+00
  br label %146

143:                                              ; preds = %136
  %144 = fadd double %131, 5.000000e-01
  %145 = call double @llvm.floor.f64(double %144) #12
  br label %146

146:                                              ; preds = %107, %141, %143
  %147 = phi double [ %131, %107 ], [ %142, %141 ], [ %145, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #12
  %148 = getelementptr inbounds %"class.blink::xpath::FunSubstring", %"class.blink::xpath::FunSubstring"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, 3
  %151 = bitcast %"class.blink::xpath::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #12
  br i1 %150, label %152, label %175

152:                                              ; preds = %146
  %153 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %114, i32 2) #12
  %154 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %153, i64 0, i32 0, i32 0
  %155 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %154, align 8
  %156 = bitcast %"class.blink::xpath::Expression"* %155 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %157 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %157, i64 3
  %159 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %158, align 8
  call void %159(%"class.blink::xpath::Value"* nonnull sret %10, %"class.blink::xpath::Expression"* %155, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %6) #12
  %160 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %10) #12
  %161 = fcmp uno double %160, 0.000000e+00
  %162 = call double @llvm.fabs.f64(double %160) #13
  %163 = fcmp oeq double %162, 0x7FF0000000000000
  %164 = or i1 %161, %163
  br i1 %164, label %175, label %165

165:                                              ; preds = %152
  %166 = bitcast double %160 to i64
  %167 = icmp slt i64 %166, 0
  %168 = fcmp oge double %160, -5.000000e-01
  %169 = and i1 %168, %167
  br i1 %169, label %170, label %172

170:                                              ; preds = %165
  %171 = fmul double %160, 0.000000e+00
  br label %175

172:                                              ; preds = %165
  %173 = fadd double %160, 5.000000e-01
  %174 = call double @llvm.floor.f64(double %173) #12
  br label %175

175:                                              ; preds = %146, %172, %170, %152
  %176 = phi double [ %160, %152 ], [ %171, %170 ], [ %174, %172 ], [ 0x7FF0000000000000, %146 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #12
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = uitofp i32 %181 to double
  %183 = fadd double %182, 1.000000e+00
  br label %184

184:                                              ; preds = %175, %179
  %185 = phi double [ %183, %179 ], [ 1.000000e+00, %175 ]
  %186 = fadd double %147, %176
  %187 = fcmp uno double %186, %147
  br i1 %187, label %200, label %188

188:                                              ; preds = %184
  %189 = fcmp ogt double %147, 1.000000e+00
  %190 = select i1 %189, double %147, double 1.000000e+00
  %191 = fcmp olt double %190, %185
  %192 = select i1 %191, double %190, double %185
  %193 = fcmp olt double %192, %186
  %194 = select i1 %193, double %186, double %192
  %195 = fcmp olt double %194, %185
  %196 = select i1 %195, double %194, double %185
  %197 = fptoui double %192 to i32
  %198 = fptoui double %196 to i32
  %199 = icmp ugt i32 %198, %197
  br i1 %199, label %207, label %200

200:                                              ; preds = %184, %188
  %201 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  %202 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %202, align 8
  %203 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %203, align 4
  %204 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %204, align 8
  %205 = call %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** nonnull dereferenceable(8) %4) #12
  %206 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* %205, %"class.blink::xpath::ValueData"** %206, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201)
  br label %263

207:                                              ; preds = %188
  %208 = add i32 %197, -1
  %209 = sub i32 %198, %197
  %210 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %7, i32 %208, i32 %209) #12
  %211 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %211, align 8
  %212 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %212, align 4
  %213 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %213, align 8
  %214 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %215 = bitcast i8* %214 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %215, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %216, label %234, label %217

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %234

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = zext i32 %224 to i33
  %226 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %225, i33 1) #12
  %227 = extractvalue { i33, i1 } %226, 1
  %228 = extractvalue { i33, i1 } %226, 0
  %229 = icmp slt i33 %228, 0
  %230 = or i1 %227, %229
  br i1 %230, label %231, label %232, !prof !3

231:                                              ; preds = %222
  call void @llvm.trap() #12
  unreachable

232:                                              ; preds = %222
  %233 = trunc i33 %228 to i32
  store i32 %233, i32* %223, align 4
  br label %234

234:                                              ; preds = %207, %217, %232
  %235 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %235, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 1
  store i8 0, i8* %236, align 1
  %237 = getelementptr inbounds i8, i8* %235, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 16, i1 false) #12
  %238 = getelementptr inbounds i8, i8* %235, i64 -4
  %239 = bitcast i8* %238 to i16*
  %240 = load atomic i16, i16* %239 monotonic, align 2
  %241 = or i16 %240, 1
  store atomic i16 %241, i16* %239 release, align 2
  %242 = getelementptr inbounds i8, i8* %214, i64 8
  %243 = bitcast i8* %242 to i8**
  store i8* %235, i8** %243, align 8
  %244 = getelementptr inbounds i8, i8* %214, i64 -4
  %245 = bitcast i8* %244 to i16*
  %246 = load atomic i16, i16* %245 monotonic, align 2
  %247 = or i16 %246, 1
  store atomic i16 %247, i16* %245 release, align 2
  %248 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %249 = bitcast %"class.blink::xpath::ValueData"** %248 to i8**
  store i8* %214, i8** %249, align 8
  br i1 %216, label %263, label %250

250:                                              ; preds = %234
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %250
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %250
  %260 = phi i32 [ %258, %257 ], [ %256, %250 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #12
  br label %263

263:                                              ; preds = %262, %259, %234, %200
  %264 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %265 = icmp eq %"class.WTF::StringImpl"* %264, null
  br i1 %265, label %279, label %266

266:                                              ; preds = %263
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i32, i32* %267 monotonic, align 4
  %269 = and i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %264, i64 0, i32 0
  %272 = load i32, i32* %271, align 4
  br i1 %270, label %273, label %275

273:                                              ; preds = %266
  %274 = add i32 %272, -1
  store i32 %274, i32* %271, align 4
  br label %275

275:                                              ; preds = %273, %266
  %276 = phi i32 [ %274, %273 ], [ %272, %266 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %264) #12
  br label %279

279:                                              ; preds = %263, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #12
  %280 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 0
  %281 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %280, align 8
  %282 = icmp eq %"struct.WTF::KeyValuePair"* %281, null
  br i1 %282, label %286, label %283, !prof !4

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 1
  %285 = load i32, i32* %284, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %281, i32 %285) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %280, align 8
  br label %286

286:                                              ; preds = %279, %283
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %63) #12
  %287 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 0
  %288 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %287, align 8
  %289 = icmp eq %"struct.WTF::KeyValuePair"* %288, null
  br i1 %289, label %293, label %290, !prof !4

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 1
  %292 = load i32, i32* %291, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %288, i32 %292) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %287, align 8
  br label %293

293:                                              ; preds = %286, %290
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden double @_ZN5blink5xpath8FunRound5RoundEd(double) local_unnamed_addr #5 align 2 {
  %2 = fcmp uno double %0, 0.000000e+00
  %3 = tail call double @llvm.fabs.f64(double %0) #13
  %4 = fcmp oeq double %3, 0x7FF0000000000000
  %5 = or i1 %2, %4
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = bitcast double %0 to i64
  %8 = icmp slt i64 %7, 0
  %9 = fcmp oge double %0, -5.000000e-01
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = fmul double %0, 0.000000e+00
  br label %16

13:                                               ; preds = %6
  %14 = fadd double %0, 5.000000e-01
  %15 = tail call double @llvm.floor.f64(double %14)
  br label %16

16:                                               ; preds = %11, %13, %1
  %17 = phi double [ %0, %1 ], [ %12, %11 ], [ %15, %13 ]
  ret double %17
}

declare double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath15FunStringLength8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunStringLength"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = getelementptr inbounds %"class.blink::xpath::FunStringLength", %"class.blink::xpath::FunStringLength"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %40

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  call void @_ZN5blink5xpath5ValueC2EPNS_4NodeE(%"class.blink::xpath::Value"* nonnull %4, %"class.blink::Node"* %12)
  %13 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %35, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = uitofp i32 %17 to double
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %18, double* %21, align 8
  %22 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %15
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %15
  %32 = phi i32 [ %30, %29 ], [ %28, %15 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %77

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %77

35:                                               ; preds = %9
  %36 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %39 = bitcast double* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false)
  br label %77

40:                                               ; preds = %3
  %41 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.blink::xpath::FunStringLength", %"class.blink::xpath::FunStringLength"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %43 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %42, i32 0) #12
  %44 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %44, align 8
  %46 = bitcast %"class.blink::xpath::Expression"* %45 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %47 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %47, i64 3
  %49 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %48, align 8
  call void %49(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %45, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %50 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %72, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = uitofp i32 %54 to double
  %56 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %55, double* %58, align 8
  %59 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %52
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %52
  %69 = phi i32 [ %67, %66 ], [ %65, %52 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %77

72:                                               ; preds = %40
  %73 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %73, align 8
  %74 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %74, align 4
  %75 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %76 = bitcast double* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false)
  br label %77

77:                                               ; preds = %71, %68, %72, %34, %31, %35
  %78 = phi i8* [ %10, %35 ], [ %10, %31 ], [ %10, %34 ], [ %41, %72 ], [ %41, %68 ], [ %41, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath17FunNormalizeSpace8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunNormalizeSpace"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::xpath::FunNormalizeSpace", %"class.blink::xpath::FunNormalizeSpace"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  call void @_ZN5blink5xpath5ValueC2EPNS_4NodeE(%"class.blink::xpath::Value"* nonnull %5, %"class.blink::Node"* %14)
  br label %24

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::xpath::FunNormalizeSpace", %"class.blink::xpath::FunNormalizeSpace"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %17 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %16, i32 0) #12
  %18 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %18, align 8
  %20 = bitcast %"class.blink::xpath::Expression"* %19 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %21 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %21, i64 3
  %23 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %22, align 8
  call void %23(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %19, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  br label %24

24:                                               ; preds = %15, %12
  %25 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %5) #12
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %26 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"* nonnull %4, i1 (i16)* nonnull @_ZN5blink5xpath10IsXMLSpaceEDs, i32 0) #12
  %27 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %29, align 8
  %30 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %31 = bitcast i8* %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %31, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #12
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  call void @llvm.trap() #12
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %24, %33, %48
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %51, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 1
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds i8, i8* %51, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #12
  %54 = getelementptr inbounds i8, i8* %51, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  %58 = getelementptr inbounds i8, i8* %30, i64 8
  %59 = bitcast i8* %58 to i8**
  store i8* %51, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %30, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  %64 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %65 = bitcast %"class.blink::xpath::ValueData"** %64 to i8**
  store i8* %30, i8** %65, align 8
  br i1 %32, label %79, label %66

66:                                               ; preds = %50
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #12
  br label %79

79:                                               ; preds = %50, %75, %78
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String18SimplifyWhiteSpaceEPFbDsENS_13StripBehaviorE(%"class.WTF::String"*, i1 (i16)*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink5xpath10IsXMLSpaceEDs(i16 zeroext) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath12FunTranslate8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunTranslate"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca i16, align 2
  %5 = alloca i16, align 2
  %6 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %7 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %8 = alloca %"class.blink::xpath::Value", align 8
  %9 = alloca %"class.blink::xpath::Value", align 8
  %10 = alloca %"class.blink::xpath::Value", align 8
  %11 = alloca %"class.WTF::StringBuilder", align 8
  %12 = bitcast %"struct.blink::xpath::EvaluationContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  %13 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %15 = bitcast %"class.WTF::HashMap"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 16, i1 false) #12
  %16 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3
  %17 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %19 = bitcast %"class.WTF::HashMap"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #12
  %20 = load i32, i32* %18, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %58, label %22

22:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %17, i32 %20) #12
  %23 = load i32, i32* %18, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %29
  br i1 %24, label %58, label %31

31:                                               ; preds = %22
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %31, %37
  %34 = phi %"struct.WTF::KeyValuePair"* [ %38, %37 ], [ %26, %31 ]
  %35 = bitcast %"struct.WTF::KeyValuePair"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  switch i64 %36, label %40 [
    i64 -1, label %37
    i64 0, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, %30
  br i1 %39, label %58, label %33

40:                                               ; preds = %33, %31
  %41 = phi %"struct.WTF::KeyValuePair"* [ %26, %31 ], [ %34, %33 ]
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %30
  br i1 %42, label %58, label %43

43:                                               ; preds = %40, %56
  %44 = phi %"struct.WTF::KeyValuePair"* [ %50, %56 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0
  %46 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %17, %"class.WTF::String"* dereferenceable(8) %45, %"struct.WTF::KeyValuePair"* dereferenceable(16) %44) #12
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %48 = icmp eq %"struct.WTF::KeyValuePair"* %47, %30
  br i1 %48, label %58, label %49

49:                                               ; preds = %43, %53
  %50 = phi %"struct.WTF::KeyValuePair"* [ %54, %53 ], [ %47, %43 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  switch i64 %52, label %56 [
    i64 -1, label %53
    i64 0, label %53
  ]

53:                                               ; preds = %49, %49
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 1
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, %30
  br i1 %55, label %58, label %49

56:                                               ; preds = %49
  %57 = icmp eq %"struct.WTF::KeyValuePair"* %50, %30
  br i1 %57, label %58, label %43

58:                                               ; preds = %37, %43, %56, %53, %3, %22, %40
  %59 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 4
  %60 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %61 = bitcast i8** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i8** %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = bitcast %"struct.blink::xpath::EvaluationContext"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %7, i64 0, i32 3
  %66 = bitcast %"class.WTF::HashMap"* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %13, i64 16, i1 false) #12
  %67 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %7, i64 0, i32 3
  %68 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %67, i64 0, i32 0
  %69 = bitcast %"class.WTF::HashMap"* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 20, i1 false) #12
  %70 = load i32, i32* %18, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %108, label %72

72:                                               ; preds = %58
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %68, i32 %70) #12
  %73 = load i32, i32* %18, align 4
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %76 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %75, align 8
  %77 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 %79
  br i1 %74, label %108, label %81

81:                                               ; preds = %72
  %82 = icmp eq i32 %78, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %81, %87
  %84 = phi %"struct.WTF::KeyValuePair"* [ %88, %87 ], [ %76, %81 ]
  %85 = bitcast %"struct.WTF::KeyValuePair"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  switch i64 %86, label %90 [
    i64 -1, label %87
    i64 0, label %87
  ]

87:                                               ; preds = %83, %83
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %84, i64 1
  %89 = icmp eq %"struct.WTF::KeyValuePair"* %88, %80
  br i1 %89, label %108, label %83

90:                                               ; preds = %83, %81
  %91 = phi %"struct.WTF::KeyValuePair"* [ %76, %81 ], [ %84, %83 ]
  %92 = icmp eq %"struct.WTF::KeyValuePair"* %91, %80
  br i1 %92, label %108, label %93

93:                                               ; preds = %90, %106
  %94 = phi %"struct.WTF::KeyValuePair"* [ %100, %106 ], [ %91, %90 ]
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0
  %96 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"* %68, %"class.WTF::String"* dereferenceable(8) %95, %"struct.WTF::KeyValuePair"* dereferenceable(16) %94) #12
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 1
  %98 = icmp eq %"struct.WTF::KeyValuePair"* %97, %80
  br i1 %98, label %108, label %99

99:                                               ; preds = %93, %103
  %100 = phi %"struct.WTF::KeyValuePair"* [ %104, %103 ], [ %97, %93 ]
  %101 = bitcast %"struct.WTF::KeyValuePair"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %106 [
    i64 -1, label %103
    i64 0, label %103
  ]

103:                                              ; preds = %99, %99
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 1
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, %80
  br i1 %105, label %108, label %99

106:                                              ; preds = %99
  %107 = icmp eq %"struct.WTF::KeyValuePair"* %100, %80
  br i1 %107, label %108, label %93

108:                                              ; preds = %87, %93, %106, %103, %58, %72, %90
  %109 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %7, i64 0, i32 4
  %110 = load i64, i64* %61, align 8
  %111 = bitcast i8** %109 to i64*
  store i64 %110, i64* %111, align 8
  %112 = bitcast %"class.blink::xpath::Value"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #12
  %113 = getelementptr inbounds %"class.blink::xpath::FunTranslate", %"class.blink::xpath::FunTranslate"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %114 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %113, i32 0) #12
  %115 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %115, align 8
  %117 = bitcast %"class.blink::xpath::Expression"* %116 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %118 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %118, i64 3
  %120 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %119, align 8
  call void %120(%"class.blink::xpath::Value"* nonnull sret %8, %"class.blink::xpath::Expression"* %116, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %121 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #12
  %122 = bitcast %"class.blink::xpath::Value"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #12
  %123 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %113, i32 1) #12
  %124 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %123, i64 0, i32 0, i32 0
  %125 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %124, align 8
  %126 = bitcast %"class.blink::xpath::Expression"* %125 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %127 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %127, i64 3
  %129 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %128, align 8
  call void %129(%"class.blink::xpath::Value"* nonnull sret %9, %"class.blink::xpath::Expression"* %125, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %6) #12
  %130 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #12
  %131 = bitcast %"class.blink::xpath::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #12
  %132 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %113, i32 2) #12
  %133 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %133, align 8
  %135 = bitcast %"class.blink::xpath::Expression"* %134 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %136 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %136, i64 3
  %138 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %137, align 8
  call void %138(%"class.blink::xpath::Value"* nonnull sret %10, %"class.blink::xpath::Expression"* %134, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %7) #12
  %139 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #12
  %140 = bitcast %"class.WTF::StringBuilder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %140) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %140, i8 -86, i64 48, i1 false)
  %141 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 1
  %143 = bitcast %union.anon* %142 to i8*
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 2
  store i32 0, i32* %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 3
  store i8 1, i8* %145, align 4
  %146 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 4
  store i8 0, i8* %146, align 1
  %147 = icmp eq %"class.WTF::StringImpl"* %121, null
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %151 = bitcast %"class.WTF::StringImpl"* %150 to i8*
  %152 = bitcast %"class.WTF::StringImpl"* %150 to i16*
  %153 = icmp eq %"class.WTF::StringImpl"* %130, null
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 1
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 1
  %157 = bitcast %"class.WTF::StringImpl"* %155 to i8*
  %158 = ptrtoint %"class.WTF::StringImpl"* %155 to i64
  %159 = bitcast %"class.WTF::StringImpl"* %155 to i16*
  %160 = icmp eq %"class.WTF::StringImpl"* %139, null
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 1
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 1
  %164 = bitcast %"class.WTF::StringImpl"* %163 to i8*
  %165 = bitcast %"class.WTF::StringImpl"* %163 to i16*
  %166 = bitcast i16* %4 to i8*
  %167 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %168 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %169 = bitcast %union.anon* %142 to i16**
  %170 = bitcast %union.anon* %142 to %"class.WTF::Vector.369"*
  %171 = bitcast i16* %5 to i8*
  br label %172

172:                                              ; preds = %429, %108
  %173 = phi i64 [ %430, %429 ], [ 0, %108 ]
  br i1 %147, label %176, label %174

174:                                              ; preds = %172
  %175 = load i32, i32* %148, align 4
  br label %176

176:                                              ; preds = %172, %174
  %177 = phi i32 [ %175, %174 ], [ 0, %172 ]
  %178 = zext i32 %177 to i64
  %179 = icmp ult i64 %173, %178
  br i1 %179, label %304, label %180

180:                                              ; preds = %176
  %181 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %11) #12
  %182 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 3, i32* %182, align 8
  %183 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %183, align 4
  %184 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double 0.000000e+00, double* %184, align 8
  %185 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %186 = bitcast i8* %185 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"** %186, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %187, label %205, label %188

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %205

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i33
  %197 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %196, i33 1) #12
  %198 = extractvalue { i33, i1 } %197, 1
  %199 = extractvalue { i33, i1 } %197, 0
  %200 = icmp slt i33 %199, 0
  %201 = or i1 %198, %200
  br i1 %201, label %202, label %203, !prof !3

202:                                              ; preds = %193
  call void @llvm.trap() #12
  unreachable

203:                                              ; preds = %193
  %204 = trunc i33 %199 to i32
  store i32 %204, i32* %194, align 4
  br label %205

205:                                              ; preds = %180, %188, %203
  %206 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %206, align 8
  %207 = getelementptr inbounds i8, i8* %206, i64 1
  store i8 0, i8* %207, align 1
  %208 = getelementptr inbounds i8, i8* %206, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 16, i1 false) #12
  %209 = getelementptr inbounds i8, i8* %206, i64 -4
  %210 = bitcast i8* %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = or i16 %211, 1
  store atomic i16 %212, i16* %210 release, align 2
  %213 = getelementptr inbounds i8, i8* %185, i64 8
  %214 = bitcast i8* %213 to i8**
  store i8* %206, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %185, i64 -4
  %216 = bitcast i8* %215 to i16*
  %217 = load atomic i16, i16* %216 monotonic, align 2
  %218 = or i16 %217, 1
  store atomic i16 %218, i16* %216 release, align 2
  %219 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  %220 = bitcast %"class.blink::xpath::ValueData"** %219 to i8**
  store i8* %185, i8** %220, align 8
  br i1 %187, label %234, label %221

221:                                              ; preds = %205
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #12
  br label %234

234:                                              ; preds = %205, %230, %233
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %11) #12
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %250, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load atomic i32, i32* %238 monotonic, align 4
  %240 = and i32 %239, 2
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  br i1 %241, label %244, label %246

244:                                              ; preds = %237
  %245 = add i32 %243, -1
  store i32 %245, i32* %242, align 4
  br label %246

246:                                              ; preds = %244, %237
  %247 = phi i32 [ %245, %244 ], [ %243, %237 ]
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %250

249:                                              ; preds = %246
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %235) #12
  br label %250

250:                                              ; preds = %234, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %140) #12
  br i1 %160, label %263, label %251

251:                                              ; preds = %250
  %252 = load atomic i32, i32* %162 monotonic, align 4
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %256 = load i32, i32* %255, align 4
  br i1 %254, label %257, label %259

257:                                              ; preds = %251
  %258 = add i32 %256, -1
  store i32 %258, i32* %255, align 4
  br label %259

259:                                              ; preds = %257, %251
  %260 = phi i32 [ %258, %257 ], [ %256, %251 ]
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %263

262:                                              ; preds = %259
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #12
  br label %263

263:                                              ; preds = %250, %259, %262
  br i1 %153, label %276, label %264

264:                                              ; preds = %263
  %265 = load atomic i32, i32* %154 monotonic, align 4
  %266 = and i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  br i1 %267, label %270, label %272

270:                                              ; preds = %264
  %271 = add i32 %269, -1
  store i32 %271, i32* %268, align 4
  br label %272

272:                                              ; preds = %270, %264
  %273 = phi i32 [ %271, %270 ], [ %269, %264 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #12
  br label %276

276:                                              ; preds = %263, %272, %275
  br i1 %147, label %289, label %277

277:                                              ; preds = %276
  %278 = load atomic i32, i32* %149 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %277
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %277
  %286 = phi i32 [ %284, %283 ], [ %282, %277 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #12
  br label %289

289:                                              ; preds = %276, %285, %288
  %290 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %7, i64 0, i32 3, i32 0, i32 0
  %291 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %290, align 8
  %292 = icmp eq %"struct.WTF::KeyValuePair"* %291, null
  br i1 %292, label %296, label %293, !prof !4

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %7, i64 0, i32 3, i32 0, i32 1
  %295 = load i32, i32* %294, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %291, i32 %295) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %290, align 8
  br label %296

296:                                              ; preds = %289, %293
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #12
  %297 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 0
  %298 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %297, align 8
  %299 = icmp eq %"struct.WTF::KeyValuePair"* %298, null
  br i1 %299, label %303, label %300, !prof !4

300:                                              ; preds = %296
  %301 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %6, i64 0, i32 3, i32 0, i32 1
  %302 = load i32, i32* %301, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %298, i32 %302) #12
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %297, align 8
  br label %303

303:                                              ; preds = %296, %300
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  ret void

304:                                              ; preds = %176
  br i1 %147, label %320, label %305

305:                                              ; preds = %304
  %306 = load i32, i32* %148, align 4
  %307 = zext i32 %306 to i64
  %308 = icmp ult i64 %173, %307
  br i1 %308, label %309, label %320

309:                                              ; preds = %305
  %310 = load atomic i32, i32* %149 monotonic, align 4
  %311 = and i32 %310, 1
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %317, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds i8, i8* %151, i64 %173
  %315 = load i8, i8* %314, align 1
  %316 = zext i8 %315 to i16
  br label %320

317:                                              ; preds = %309
  %318 = getelementptr inbounds i16, i16* %152, i64 %173
  %319 = load i16, i16* %318, align 2
  br label %320

320:                                              ; preds = %304, %305, %313, %317
  %321 = phi i16 [ 0, %305 ], [ 0, %304 ], [ %316, %313 ], [ %319, %317 ]
  br i1 %153, label %355, label %322

322:                                              ; preds = %320
  %323 = load atomic i32, i32* %154 monotonic, align 4
  %324 = and i32 %323, 1
  %325 = icmp eq i32 %324, 0
  %326 = load i32, i32* %156, align 4
  br i1 %325, label %339, label %327

327:                                              ; preds = %322
  %328 = icmp ult i16 %321, 256
  %329 = icmp ne i32 %326, 0
  %330 = and i1 %328, %329
  br i1 %330, label %331, label %355

331:                                              ; preds = %327
  %332 = and i16 %321, 255
  %333 = zext i16 %332 to i32
  %334 = zext i32 %326 to i64
  %335 = call i8* @memchr(i8* %157, i32 %333, i64 %334) #14
  %336 = icmp eq i8* %335, null
  %337 = ptrtoint i8* %335 to i64
  %338 = sub i64 %337, %158
  br i1 %336, label %355, label %351

339:                                              ; preds = %322
  %340 = icmp eq i32 %326, 0
  br i1 %340, label %355, label %341

341:                                              ; preds = %339
  %342 = zext i32 %326 to i64
  br label %343

343:                                              ; preds = %341, %348
  %344 = phi i64 [ %349, %348 ], [ 0, %341 ]
  %345 = getelementptr inbounds i16, i16* %159, i64 %344
  %346 = load i16, i16* %345, align 2
  %347 = icmp eq i16 %346, %321
  br i1 %347, label %351, label %348

348:                                              ; preds = %343
  %349 = add nuw nsw i64 %344, 1
  %350 = icmp eq i64 %349, %342
  br i1 %350, label %355, label %343

351:                                              ; preds = %343, %331
  %352 = phi i64 [ %338, %331 ], [ %344, %343 ]
  %353 = trunc i64 %352 to i32
  %354 = icmp eq i32 %353, -1
  br i1 %354, label %355, label %382

355:                                              ; preds = %348, %339, %331, %327, %320, %351
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %171)
  store i16 %321, i16* %5, align 2
  %356 = load i8, i8* %145, align 4, !range !2
  %357 = icmp ne i8 %356, 0
  %358 = icmp ult i16 %321, 256
  %359 = and i1 %358, %357
  br i1 %359, label %360, label %362

360:                                              ; preds = %355
  %361 = trunc i16 %321 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %11, i8 zeroext %361) #12
  br label %381

362:                                              ; preds = %355
  %363 = load i8, i8* %146, align 1
  %364 = icmp eq i8 %363, 0
  %365 = or i1 %357, %364
  br i1 %365, label %366, label %367

366:                                              ; preds = %362
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %11, i32 1) #12
  br label %367

367:                                              ; preds = %362, %366
  %368 = load i32, i32* %167, align 4
  %369 = load i32, i32* %168, align 8
  %370 = icmp eq i32 %368, %369
  br i1 %370, label %377, label %371, !prof !3

371:                                              ; preds = %367
  %372 = load i16*, i16** %169, align 8
  %373 = zext i32 %368 to i64
  %374 = getelementptr inbounds i16, i16* %372, i64 %373
  store i16 %321, i16* %374, align 2
  %375 = load i32, i32* %167, align 4
  %376 = add i32 %375, 1
  store i32 %376, i32* %167, align 4
  br label %378

377:                                              ; preds = %367
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.369"* %170, i16* nonnull dereferenceable(2) %5) #12
  br label %378

378:                                              ; preds = %377, %371
  %379 = load i32, i32* %144, align 8
  %380 = add i32 %379, 1
  store i32 %380, i32* %144, align 8
  br label %381

381:                                              ; preds = %360, %378
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %171)
  br label %429

382:                                              ; preds = %351
  br i1 %160, label %429, label %383

383:                                              ; preds = %382
  %384 = load i32, i32* %161, align 4
  %385 = icmp ugt i32 %384, %353
  br i1 %385, label %386, label %429

386:                                              ; preds = %383
  %387 = load i32, i32* %161, align 4
  %388 = icmp ugt i32 %387, %353
  br i1 %388, label %389, label %401

389:                                              ; preds = %386
  %390 = load atomic i32, i32* %162 monotonic, align 4
  %391 = and i32 %390, 1
  %392 = icmp eq i32 %391, 0
  %393 = and i64 %352, 4294967295
  br i1 %392, label %398, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds i8, i8* %164, i64 %393
  %396 = load i8, i8* %395, align 1
  %397 = zext i8 %396 to i16
  br label %401

398:                                              ; preds = %389
  %399 = getelementptr inbounds i16, i16* %165, i64 %393
  %400 = load i16, i16* %399, align 2
  br label %401

401:                                              ; preds = %386, %394, %398
  %402 = phi i16 [ 0, %386 ], [ %397, %394 ], [ %400, %398 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %166)
  store i16 %402, i16* %4, align 2
  %403 = load i8, i8* %145, align 4, !range !2
  %404 = icmp ne i8 %403, 0
  %405 = icmp ult i16 %402, 256
  %406 = and i1 %405, %404
  br i1 %406, label %407, label %409

407:                                              ; preds = %401
  %408 = trunc i16 %402 to i8
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %11, i8 zeroext %408) #12
  br label %428

409:                                              ; preds = %401
  %410 = load i8, i8* %146, align 1
  %411 = icmp eq i8 %410, 0
  %412 = or i1 %404, %411
  br i1 %412, label %413, label %414

413:                                              ; preds = %409
  call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* nonnull %11, i32 1) #12
  br label %414

414:                                              ; preds = %409, %413
  %415 = load i32, i32* %167, align 4
  %416 = load i32, i32* %168, align 8
  %417 = icmp eq i32 %415, %416
  br i1 %417, label %424, label %418, !prof !3

418:                                              ; preds = %414
  %419 = load i16*, i16** %169, align 8
  %420 = zext i32 %415 to i64
  %421 = getelementptr inbounds i16, i16* %419, i64 %420
  store i16 %402, i16* %421, align 2
  %422 = load i32, i32* %167, align 4
  %423 = add i32 %422, 1
  store i32 %423, i32* %167, align 4
  br label %425

424:                                              ; preds = %414
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.369"* %170, i16* nonnull dereferenceable(2) %4) #12
  br label %425

425:                                              ; preds = %424, %418
  %426 = load i32, i32* %144, align 8
  %427 = add i32 %426, 1
  store i32 %427, i32* %144, align 8
  br label %428

428:                                              ; preds = %407, %425
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %166)
  br label %429

429:                                              ; preds = %382, %383, %428, %381
  %430 = add nuw nsw i64 %173, 1
  br label %172
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath10FunBoolean8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunBoolean"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::xpath::FunBoolean", %"class.blink::xpath::FunBoolean"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %15, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %19 = bitcast double* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

declare zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath6FunNot8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunNot"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::xpath::FunNot", %"class.blink::xpath::FunNot"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i8
  %17 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %16, i8* %18, align 4
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %20 = bitcast double* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath7FunTrue8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunTrue"* nocapture readnone, %"struct.blink::xpath::EvaluationContext"* nocapture readnone dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 1, i8* %5, align 4
  %6 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %7 = bitcast double* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath7FunLang8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunLang"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.blink::xpath::FunLang", %"class.blink::xpath::FunLang"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 0) #12
  %11 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %11, align 8
  %13 = bitcast %"class.blink::xpath::Expression"* %12 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %14 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %14, i64 3
  %16 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %15, align 8
  call void %16(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %12, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %17 = call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  %18 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %93, label %21

21:                                               ; preds = %3
  %22 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9xml_names9kLangAttrE, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %22, i64 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %21, %89
  %25 = phi %"class.blink::Node"* [ %19, %21 ], [ %91, %89 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 12
  %29 = icmp eq i32 %28, 0
  %30 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  br i1 %29, label %31, label %89

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 1, i32 3
  %33 = bitcast %"class.blink::Member.7"* %32 to %"class.blink::ElementData"**
  %34 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %33, align 8
  %35 = icmp eq %"class.blink::ElementData"* %34, null
  br i1 %35, label %89, label %36

36:                                               ; preds = %31
  call void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"* nonnull %30) #12
  %37 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %33, align 8
  %38 = icmp eq %"class.blink::ElementData"* %37, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = load i32, i32* null, align 536870912
  br label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %37, i64 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::ElementData"* %37 to %"class.blink::UniqueElementData"*
  %48 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %37, i64 1, i32 1
  %49 = bitcast %"class.blink::Member.41"* %48 to %"class.blink::Attribute"**
  %50 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %47, i64 0, i32 2, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  br label %59

53:                                               ; preds = %41, %39
  %54 = phi i32 [ %40, %39 ], [ %43, %41 ]
  %55 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %37, i64 1
  %56 = bitcast %"class.blink::ElementData"* %55 to %"class.blink::Attribute"*
  %57 = lshr i32 %54, 1
  %58 = and i32 %57, 268435455
  br label %59

59:                                               ; preds = %46, %53
  %60 = phi i32 [ %58, %53 ], [ %52, %46 ]
  %61 = phi %"class.blink::Attribute"* [ %56, %53 ], [ %50, %46 ]
  %62 = zext i32 %60 to i64
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 %62
  %64 = icmp eq i32 %60, 0
  br i1 %64, label %89, label %65

65:                                               ; preds = %59
  %66 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %23, align 8
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %69

69:                                               ; preds = %84, %65
  %70 = phi %"class.blink::Attribute"* [ %61, %65 ], [ %85, %84 ]
  %71 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %72, %66
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %76, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %81, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %79, %74
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 1
  %86 = icmp eq %"class.blink::Attribute"* %85, %63
  br i1 %86, label %89, label %69

87:                                               ; preds = %79, %69
  %88 = icmp eq %"class.blink::Attribute"* %70, null
  br i1 %88, label %89, label %98

89:                                               ; preds = %84, %24, %31, %59, %87
  %90 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %25) #12
  %91 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %90, i64 0, i32 0
  %92 = icmp eq %"class.blink::ContainerNode"* %90, null
  br i1 %92, label %93, label %24

93:                                               ; preds = %89, %3
  %94 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %97 = bitcast double* %96 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 16, i1 false) #12
  br label %203

98:                                               ; preds = %87
  %99 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #12
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %100, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #12
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %109
  call void @llvm.trap() #12
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %98, %104, %119
  %122 = bitcast %"class.WTF::StringView"* %6 to i8*
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  %126 = bitcast %"class.WTF::StringView"* %6 to i64*
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %128 = bitcast %"class.WTF::StringView"* %7 to i8*
  %129 = icmp eq %"class.WTF::StringImpl"* %17, null
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.WTF::StringImpl"**
  %135 = bitcast %"class.WTF::StringView"* %7 to i64*
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %137 = bitcast %"class.WTF::String"* %5 to i64*
  br label %138

138:                                              ; preds = %180, %121
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #12
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  store i8* null, i8** %124, align 8
  %142 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %142, i64* %126, align 8
  br label %147

143:                                              ; preds = %138
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %123, align 8
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 1
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %125, align 8
  br label %147

147:                                              ; preds = %141, %143
  %148 = phi i32 [ %145, %143 ], [ 0, %141 ]
  store i32 %148, i32* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %128) #12
  br i1 %129, label %149, label %151

149:                                              ; preds = %147
  store i8* null, i8** %133, align 8
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %150, i64* %135, align 8
  br label %153

151:                                              ; preds = %147
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %130, align 8
  %152 = load i32, i32* %131, align 4
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  br label %153

153:                                              ; preds = %149, %151
  %154 = phi i32 [ %152, %151 ], [ 0, %149 ]
  store i32 %154, i32* %136, align 8
  %155 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %128) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #12
  br i1 %155, label %181, label %156

156:                                              ; preds = %153
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %181, label %159

159:                                              ; preds = %156
  %160 = call i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"* nonnull %157, i16 zeroext 45, i32 -1) #12
  %161 = icmp eq i32 %160, -1
  br i1 %161, label %181, label %162

162:                                              ; preds = %159
  %163 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %5, i32 0, i32 %160) #12
  %164 = ptrtoint %"class.WTF::StringImpl"* %163 to i64
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %164, i64* %137, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #12
  br label %180

180:                                              ; preds = %179, %176, %162
  br label %138

181:                                              ; preds = %159, %156, %153
  %182 = phi i8 [ 1, %153 ], [ 0, %156 ], [ 0, %159 ]
  %183 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %183, align 8
  %184 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %182, i8* %184, align 4
  %185 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %186 = bitcast double* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 16, i1 false) #12
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %181
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #12
  br label %202

202:                                              ; preds = %181, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  br label %203

203:                                              ; preds = %202, %93
  %204 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %203
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %218

218:                                              ; preds = %203, %214, %217
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8FunFalse8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunFalse"* nocapture readnone, %"struct.blink::xpath::EvaluationContext"* nocapture readnone dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %7 = bitcast double* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9FunNumber8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunNumber"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = getelementptr inbounds %"class.blink::xpath::FunNumber", %"class.blink::xpath::FunNumber"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  call void @_ZN5blink5xpath5ValueC2EPNS_4NodeE(%"class.blink::xpath::Value"* nonnull %4, %"class.blink::Node"* %12)
  br label %23

13:                                               ; preds = %3
  %14 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.blink::xpath::FunNumber", %"class.blink::xpath::FunNumber"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %16 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %15, i32 0) #12
  %17 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %17, align 8
  %19 = bitcast %"class.blink::xpath::Expression"* %18 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %20 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %20, i64 3
  %22 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %21, align 8
  call void %22(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %18, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  br label %23

23:                                               ; preds = %13, %9
  %24 = phi %"class.blink::xpath::Value"* [ %5, %13 ], [ %4, %9 ]
  %25 = phi i8* [ %14, %13 ], [ %10, %9 ]
  %26 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %27 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %28, align 4
  %29 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %26, double* %29, align 8
  %30 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %30, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunSum"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.349" }* @__const._ZNK5blink5xpath6FunSum8EvaluateERNS0_17EvaluationContextE.a to i8*), i64 24, i1 false)
  %7 = getelementptr inbounds %"class.blink::xpath::FunSum", %"class.blink::xpath::FunSum"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 0) #12
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %9, align 8
  %11 = bitcast %"class.blink::xpath::Expression"* %10 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %12 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, i64 3
  %14 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %13, align 8
  call void %14(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %10, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %15 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %4, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %22 = bitcast double* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %103

23:                                               ; preds = %3
  %24 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %4, %"struct.blink::xpath::EvaluationContext"* %2) #12
  %25 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %26, i64 %29
  %31 = icmp eq i32 %28, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  %34 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 3, i32 0, i32 0
  %38 = bitcast %"class.blink::xpath::ValueData"** %37 to i8**
  br label %45

39:                                               ; preds = %100, %23
  %40 = phi double [ 0.000000e+00, %23 ], [ %86, %100 ]
  %41 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %41, align 8
  %42 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %40, double* %43, align 8
  %44 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %44, align 8
  br label %103

45:                                               ; preds = %32, %100
  %46 = phi %"class.blink::Member.5"* [ %26, %32 ], [ %101, %100 ]
  %47 = phi double [ 0.000000e+00, %32 ], [ %86, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %48 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %49) #12
  store i32 3, i32* %34, align 8
  store i8 0, i8* %35, align 4
  store double 0.000000e+00, double* %36, align 8
  %51 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %52 = bitcast i8* %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %52, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #12
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %45, %54, %69
  %72 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %72, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  store i8 0, i8* %73, align 1
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #12
  %75 = getelementptr inbounds i8, i8* %72, i64 -4
  %76 = bitcast i8* %75 to i16*
  %77 = load atomic i16, i16* %76 monotonic, align 2
  %78 = or i16 %77, 1
  store atomic i16 %78, i16* %76 release, align 2
  %79 = getelementptr inbounds i8, i8* %51, i64 8
  %80 = bitcast i8* %79 to i8**
  store i8* %72, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %51, i64 -4
  %82 = bitcast i8* %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = or i16 %83, 1
  store atomic i16 %84, i16* %82 release, align 2
  store i8* %51, i8** %38, align 8
  %85 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %5) #12
  %86 = fadd double %47, %85
  br i1 %53, label %100, label %87

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #12
  br label %100

100:                                              ; preds = %71, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  %101 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %46, i64 1
  %102 = icmp eq %"class.blink::Member.5"* %101, %30
  br i1 %102, label %39, label %45

103:                                              ; preds = %39, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8FunFloor8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunFloor"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::xpath::FunFloor", %"class.blink::xpath::FunFloor"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %15 = call double @llvm.floor.f64(double %14)
  %16 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %15, double* %18, align 8
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath10FunCeiling8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunCeiling"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::xpath::FunCeiling", %"class.blink::xpath::FunCeiling"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %15 = call double @llvm.ceil.f64(double %14)
  %16 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %15, double* %18, align 8
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8FunRound8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::FunRound"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.blink::xpath::FunRound", %"class.blink::xpath::FunRound"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #12
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #12
  %14 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %4) #12
  %15 = fcmp uno double %14, 0.000000e+00
  %16 = call double @llvm.fabs.f64(double %14) #13
  %17 = fcmp oeq double %16, 0x7FF0000000000000
  %18 = or i1 %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %3
  %20 = bitcast double %14 to i64
  %21 = icmp slt i64 %20, 0
  %22 = fcmp oge double %14, -5.000000e-01
  %23 = and i1 %22, %21
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = fmul double %14, 0.000000e+00
  br label %29

26:                                               ; preds = %19
  %27 = fadd double %14, 5.000000e-01
  %28 = call double @llvm.floor.f64(double %27) #12
  br label %29

29:                                               ; preds = %3, %24, %26
  %30 = phi double [ %14, %3 ], [ %25, %24 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %31, align 8
  %32 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %32, align 4
  %33 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %30, double* %33, align 8
  %34 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #12
  %4 = call %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.WTF::String"* dereferenceable(8) %0, %"class.blink::HeapVector"* nonnull dereferenceable(16) %2)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #12
  ret %"class.blink::xpath::Function"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.WTF::String"* dereferenceable(8), %"class.blink::HeapVector"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = alloca [27 x %"struct.blink::xpath::FunctionMapping"], align 16
  %4 = load %"class.WTF::HashMap.381"*, %"class.WTF::HashMap.381"** @_ZN5blink5xpathL14g_function_mapE, align 8
  %5 = icmp eq %"class.WTF::HashMap.381"* %4, null
  br i1 %5, label %6, label %140

6:                                                ; preds = %2
  %7 = bitcast [27 x %"struct.blink::xpath::FunctionMapping"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 648, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 648, i1 false) #12
  %8 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.21, i64 0, i64 0), i8** %8, align 16
  %9 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 0, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL16CreateFunBooleanEv, %"class.blink::xpath::Function"* ()** %9, align 8
  %10 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 0, i32 1, i32 1, i32 0
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 0, i32 1, i32 1, i32 1
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 1, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL16CreateFunCeilingEv, %"class.blink::xpath::Function"* ()** %13, align 8
  %14 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 1, i32 1, i32 1, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 1, i32 1, i32 1, i32 1
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i8** %16, align 16
  %17 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 2, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL15CreateFunConcatEv, %"class.blink::xpath::Function"* ()** %17, align 8
  %18 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 2, i32 1, i32 1, i32 0
  store i32 2, i32* %18, align 8
  %19 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 2, i32 1, i32 1, i32 1
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 3, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8** %20, align 8
  %21 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 3, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL17CreateFunContainsEv, %"class.blink::xpath::Function"* ()** %21, align 8
  %22 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 3, i32 1, i32 1, i32 0
  store i32 2, i32* %22, align 8
  %23 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 3, i32 1, i32 1, i32 1
  store i32 2, i32* %23, align 4
  %24 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i8** %24, align 16
  %25 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 4, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL14CreateFunCountEv, %"class.blink::xpath::Function"* ()** %25, align 8
  %26 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 4, i32 1, i32 1, i32 0
  store i32 1, i32* %26, align 8
  %27 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 4, i32 1, i32 1, i32 1
  store i32 1, i32* %27, align 4
  %28 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 5, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 5, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL14CreateFunFalseEv, %"class.blink::xpath::Function"* ()** %29, align 8
  %30 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 5, i32 1, i32 1, i32 0
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 5, i32 1, i32 1, i32 1
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i8** %32, align 16
  %33 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 6, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL14CreateFunFloorEv, %"class.blink::xpath::Function"* ()** %33, align 8
  %34 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 6, i32 1, i32 1, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 6, i32 1, i32 1, i32 1
  store i32 1, i32* %35, align 4
  %36 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 7, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i8** %36, align 8
  %37 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 7, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL11CreateFunIdEv, %"class.blink::xpath::Function"* ()** %37, align 8
  %38 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 7, i32 1, i32 1, i32 0
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 7, i32 1, i32 1, i32 1
  store i32 1, i32* %39, align 4
  %40 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %40, align 16
  %41 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 8, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL13CreateFunLangEv, %"class.blink::xpath::Function"* ()** %41, align 8
  %42 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 8, i32 1, i32 1, i32 0
  store i32 1, i32* %42, align 8
  %43 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 8, i32 1, i32 1, i32 1
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 9, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.29, i64 0, i64 0), i8** %44, align 8
  %45 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 9, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL13CreateFunLastEv, %"class.blink::xpath::Function"* ()** %45, align 8
  %46 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 9, i32 1, i32 1, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 9, i32 1, i32 1, i32 1
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 10, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8** %48, align 16
  %49 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 10, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL18CreateFunLocalNameEv, %"class.blink::xpath::Function"* ()** %49, align 8
  %50 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 10, i32 1, i32 1, i32 0
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 10, i32 1, i32 1, i32 1
  store i32 1, i32* %51, align 4
  %52 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 11, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 11, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL13CreateFunNameEv, %"class.blink::xpath::Function"* ()** %53, align 8
  %54 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 11, i32 1, i32 1, i32 0
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 11, i32 1, i32 1, i32 1
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 12, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i8** %56, align 16
  %57 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 12, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL21CreateFunNamespaceURIEv, %"class.blink::xpath::Function"* ()** %57, align 8
  %58 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 12, i32 1, i32 1, i32 0
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 12, i32 1, i32 1, i32 1
  store i32 1, i32* %59, align 4
  %60 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 13, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 13, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL23CreateFunNormalizeSpaceEv, %"class.blink::xpath::Function"* ()** %61, align 8
  %62 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 13, i32 1, i32 1, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 13, i32 1, i32 1, i32 1
  store i32 1, i32* %63, align 4
  %64 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 14, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), i8** %64, align 16
  %65 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 14, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL12CreateFunNotEv, %"class.blink::xpath::Function"* ()** %65, align 8
  %66 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 14, i32 1, i32 1, i32 0
  store i32 1, i32* %66, align 8
  %67 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 14, i32 1, i32 1, i32 1
  store i32 1, i32* %67, align 4
  %68 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 15, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.35, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 15, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL15CreateFunNumberEv, %"class.blink::xpath::Function"* ()** %69, align 8
  %70 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 15, i32 1, i32 1, i32 0
  store i32 0, i32* %70, align 8
  %71 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 15, i32 1, i32 1, i32 1
  store i32 1, i32* %71, align 4
  %72 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 16, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8** %72, align 16
  %73 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 16, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL17CreateFunPositionEv, %"class.blink::xpath::Function"* ()** %73, align 8
  %74 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 16, i32 1, i32 1, i32 0
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 16, i32 1, i32 1, i32 1
  store i32 0, i32* %75, align 4
  %76 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 17, i32 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 17, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL14CreateFunRoundEv, %"class.blink::xpath::Function"* ()** %77, align 8
  %78 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 17, i32 1, i32 1, i32 0
  store i32 1, i32* %78, align 8
  %79 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 17, i32 1, i32 1, i32 1
  store i32 1, i32* %79, align 4
  %80 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 18, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), i8** %80, align 16
  %81 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 18, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL19CreateFunStartsWithEv, %"class.blink::xpath::Function"* ()** %81, align 8
  %82 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 18, i32 1, i32 1, i32 0
  store i32 2, i32* %82, align 8
  %83 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 18, i32 1, i32 1, i32 1
  store i32 2, i32* %83, align 4
  %84 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 19, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 19, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL15CreateFunStringEv, %"class.blink::xpath::Function"* ()** %85, align 8
  %86 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 19, i32 1, i32 1, i32 0
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 19, i32 1, i32 1, i32 1
  store i32 1, i32* %87, align 4
  %88 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 20, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0), i8** %88, align 16
  %89 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 20, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL21CreateFunStringLengthEv, %"class.blink::xpath::Function"* ()** %89, align 8
  %90 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 20, i32 1, i32 1, i32 0
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 20, i32 1, i32 1, i32 1
  store i32 1, i32* %91, align 4
  %92 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 21, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 21, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL18CreateFunSubstringEv, %"class.blink::xpath::Function"* ()** %93, align 8
  %94 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 21, i32 1, i32 1, i32 0
  store i32 2, i32* %94, align 8
  %95 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 21, i32 1, i32 1, i32 1
  store i32 3, i32* %95, align 4
  %96 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 22, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i8** %96, align 16
  %97 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 22, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL23CreateFunSubstringAfterEv, %"class.blink::xpath::Function"* ()** %97, align 8
  %98 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 22, i32 1, i32 1, i32 0
  store i32 2, i32* %98, align 8
  %99 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 22, i32 1, i32 1, i32 1
  store i32 2, i32* %99, align 4
  %100 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 23, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0), i8** %100, align 8
  %101 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 23, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL24CreateFunSubstringBeforeEv, %"class.blink::xpath::Function"* ()** %101, align 8
  %102 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 23, i32 1, i32 1, i32 0
  store i32 2, i32* %102, align 8
  %103 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 23, i32 1, i32 1, i32 1
  store i32 2, i32* %103, align 4
  %104 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 24, i32 0
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8** %104, align 16
  %105 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 24, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL12CreateFunSumEv, %"class.blink::xpath::Function"* ()** %105, align 8
  %106 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 24, i32 1, i32 1, i32 0
  store i32 1, i32* %106, align 8
  %107 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 24, i32 1, i32 1, i32 1
  store i32 1, i32* %107, align 4
  %108 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 25, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i64 0, i64 0), i8** %108, align 8
  %109 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 25, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL18CreateFunTranslateEv, %"class.blink::xpath::Function"* ()** %109, align 8
  %110 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 25, i32 1, i32 1, i32 0
  store i32 3, i32* %110, align 8
  %111 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 25, i32 1, i32 1, i32 1
  store i32 3, i32* %111, align 4
  %112 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 26, i32 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i64 0, i64 0), i8** %112, align 16
  %113 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 26, i32 1, i32 0
  store %"class.blink::xpath::Function"* ()* @_ZN5blink5xpathL13CreateFunTrueEv, %"class.blink::xpath::Function"* ()** %113, align 8
  %114 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 26, i32 1, i32 1, i32 0
  store i32 0, i32* %114, align 8
  %115 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 26, i32 1, i32 1, i32 1
  store i32 0, i32* %115, align 4
  %116 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([216 x i8], [216 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashMapINS_6StringEN5blink5xpath11FunctionRecENS_10StringHashENS_10HashTraitsIS2_EENS7_IS5_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 20, i1 false) #12
  store i8* %116, i8** bitcast (%"class.WTF::HashMap.381"** @_ZN5blink5xpathL14g_function_mapE to i8**), align 8
  %117 = bitcast i8* %116 to %"class.WTF::HashMap.381"*
  br label %118

118:                                              ; preds = %136, %6
  %119 = phi %"class.WTF::HashMap.381"* [ %117, %6 ], [ %137, %136 ]
  %120 = phi i64 [ 0, %6 ], [ %134, %136 ]
  %121 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 %120, i32 0
  %122 = getelementptr inbounds [27 x %"struct.blink::xpath::FunctionMapping"], [27 x %"struct.blink::xpath::FunctionMapping"]* %3, i64 0, i64 %120, i32 1
  %123 = getelementptr inbounds %"class.WTF::HashMap.381", %"class.WTF::HashMap.381"* %119, i64 0, i32 0
  %124 = call { %"struct.WTF::KeyValuePair.385"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKPKcRKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.382"* %123, i8** dereferenceable(8) %121, %"struct.blink::xpath::FunctionRec"* dereferenceable(16) %122) #12
  %125 = extractvalue { %"struct.WTF::KeyValuePair.385"*, i8 } %124, 1
  %126 = and i8 %125, 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %133

128:                                              ; preds = %118
  %129 = extractvalue { %"struct.WTF::KeyValuePair.385"*, i8 } %124, 0
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %129, i64 0, i32 1
  %131 = bitcast %"struct.blink::xpath::FunctionRec"* %130 to i8*
  %132 = bitcast %"struct.blink::xpath::FunctionRec"* %122 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #12
  br label %133

133:                                              ; preds = %128, %118
  %134 = add nuw nsw i64 %120, 1
  %135 = icmp eq i64 %134, 27
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = load %"class.WTF::HashMap.381"*, %"class.WTF::HashMap.381"** @_ZN5blink5xpathL14g_function_mapE, align 8
  br label %118

138:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 648, i8* nonnull %7) #12
  %139 = load %"class.WTF::HashMap.381"*, %"class.WTF::HashMap.381"** @_ZN5blink5xpathL14g_function_mapE, align 8
  br label %140

140:                                              ; preds = %2, %138
  %141 = phi %"class.WTF::HashMap.381"* [ %4, %2 ], [ %139, %138 ]
  %142 = getelementptr inbounds %"class.WTF::HashMap.381", %"class.WTF::HashMap.381"* %141, i64 0, i32 0
  %143 = call { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.382"* %142, %"class.WTF::String"* dereferenceable(8) %0) #12
  %144 = extractvalue { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } %143, 0
  %145 = load %"class.WTF::HashMap.381"*, %"class.WTF::HashMap.381"** @_ZN5blink5xpathL14g_function_mapE, align 8
  %146 = getelementptr inbounds %"class.WTF::HashMap.381", %"class.WTF::HashMap.381"* %145, i64 0, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %146, align 8
  %148 = getelementptr inbounds %"class.WTF::HashMap.381", %"class.WTF::HashMap.381"* %145, i64 0, i32 0, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %147, i64 %150
  %152 = icmp eq %"struct.WTF::KeyValuePair.385"* %144, %151
  br i1 %152, label %215, label %153

153:                                              ; preds = %140
  %154 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %144, i64 0, i32 1, i32 1, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, -1
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %144, i64 0, i32 1, i32 1, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, -1
  br i1 %158, label %162, label %165

162:                                              ; preds = %153
  %163 = icmp sge i32 %160, %155
  %164 = or i1 %161, %163
  br i1 %164, label %171, label %215

165:                                              ; preds = %153
  %166 = icmp sle i32 %157, %155
  br i1 %161, label %170, label %167

167:                                              ; preds = %165
  %168 = icmp sge i32 %160, %155
  %169 = and i1 %166, %168
  br i1 %169, label %171, label %215

170:                                              ; preds = %165
  br i1 %166, label %171, label %215

171:                                              ; preds = %167, %162, %170
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %144, i64 0, i32 1, i32 0
  %173 = load %"class.blink::xpath::Function"* ()*, %"class.blink::xpath::Function"* ()** %172, align 8
  %174 = call %"class.blink::xpath::Function"* %173() #12
  call void @_ZN5blink5xpath8Function12SetArgumentsERNS_10HeapVectorINS_6MemberINS0_10ExpressionEEELj0EEE(%"class.blink::xpath::Function"* %174, %"class.blink::HeapVector"* dereferenceable(16) %1)
  %175 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %174, i64 0, i32 1
  %176 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %196, label %179

179:                                              ; preds = %171
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %196

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  %187 = zext i32 %186 to i33
  %188 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %187, i33 1) #12
  %189 = extractvalue { i33, i1 } %188, 1
  %190 = extractvalue { i33, i1 } %188, 0
  %191 = icmp slt i33 %190, 0
  %192 = or i1 %189, %191
  br i1 %192, label %193, label %194, !prof !3

193:                                              ; preds = %184
  call void @llvm.trap() #12
  unreachable

194:                                              ; preds = %184
  %195 = trunc i33 %190 to i32
  store i32 %195, i32* %185, align 4
  br label %196

196:                                              ; preds = %194, %179, %171
  %197 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %198 = bitcast %"class.WTF::String"* %175 to i64*
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  store i64 %197, i64* %198, align 8
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #12
  br label %215

215:                                              ; preds = %214, %211, %196, %140, %167, %162, %170
  %216 = phi %"class.blink::xpath::Function"* [ null, %170 ], [ null, %162 ], [ null, %167 ], [ null, %140 ], [ %174, %196 ], [ %174, %211 ], [ %174, %214 ]
  ret %"class.blink::xpath::Function"* %216
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath7FunLastD0Ev(%"class.blink::xpath::FunLast"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunLast", %"class.blink::xpath::FunLast"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunLast", %"class.blink::xpath::FunLast"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunLast"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

declare void @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE(%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath7FunLast10ResultTypeEv(%"class.blink::xpath::FunLast"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath11FunPositionD0Ev(%"class.blink::xpath::FunPosition"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunPosition", %"class.blink::xpath::FunPosition"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunPosition", %"class.blink::xpath::FunPosition"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunPosition"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath11FunPosition10ResultTypeEv(%"class.blink::xpath::FunPosition"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath12FunLocalNameD0Ev(%"class.blink::xpath::FunLocalName"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunLocalName", %"class.blink::xpath::FunLocalName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunLocalName", %"class.blink::xpath::FunLocalName"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunLocalName"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath12FunLocalName10ResultTypeEv(%"class.blink::xpath::FunLocalName"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath15FunNamespaceURID0Ev(%"class.blink::xpath::FunNamespaceURI"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunNamespaceURI", %"class.blink::xpath::FunNamespaceURI"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunNamespaceURI", %"class.blink::xpath::FunNamespaceURI"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunNamespaceURI"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath15FunNamespaceURI10ResultTypeEv(%"class.blink::xpath::FunNamespaceURI"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath7FunNameD0Ev(%"class.blink::xpath::FunName"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunName", %"class.blink::xpath::FunName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunName", %"class.blink::xpath::FunName"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunName"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath7FunName10ResultTypeEv(%"class.blink::xpath::FunName"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath9FunStringD0Ev(%"class.blink::xpath::FunString"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunString", %"class.blink::xpath::FunString"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunString", %"class.blink::xpath::FunString"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunString"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath9FunString10ResultTypeEv(%"class.blink::xpath::FunString"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath15FunStringLengthD0Ev(%"class.blink::xpath::FunStringLength"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunStringLength", %"class.blink::xpath::FunStringLength"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunStringLength", %"class.blink::xpath::FunStringLength"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunStringLength"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath15FunStringLength10ResultTypeEv(%"class.blink::xpath::FunStringLength"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath17FunNormalizeSpaceD0Ev(%"class.blink::xpath::FunNormalizeSpace"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunNormalizeSpace", %"class.blink::xpath::FunNormalizeSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunNormalizeSpace", %"class.blink::xpath::FunNormalizeSpace"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunNormalizeSpace"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath17FunNormalizeSpace10ResultTypeEv(%"class.blink::xpath::FunNormalizeSpace"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath7FunLangD0Ev(%"class.blink::xpath::FunLang"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunLang", %"class.blink::xpath::FunLang"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunLang", %"class.blink::xpath::FunLang"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunLang"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath7FunLang10ResultTypeEv(%"class.blink::xpath::FunLang"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath9FunNumberD0Ev(%"class.blink::xpath::FunNumber"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunNumber", %"class.blink::xpath::FunNumber"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunNumber", %"class.blink::xpath::FunNumber"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunNumber"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath9FunNumber10ResultTypeEv(%"class.blink::xpath::FunNumber"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath5FunIdD0Ev(%"class.blink::xpath::FunId"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunId", %"class.blink::xpath::FunId"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunId", %"class.blink::xpath::FunId"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunId"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath5FunId10ResultTypeEv(%"class.blink::xpath::FunId"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunCountD0Ev(%"class.blink::xpath::FunCount"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunCount", %"class.blink::xpath::FunCount"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunCount", %"class.blink::xpath::FunCount"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunCount"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8FunCount10ResultTypeEv(%"class.blink::xpath::FunCount"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath9FunConcatD0Ev(%"class.blink::xpath::FunConcat"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunConcat", %"class.blink::xpath::FunConcat"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunConcat", %"class.blink::xpath::FunConcat"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunConcat"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath9FunConcat10ResultTypeEv(%"class.blink::xpath::FunConcat"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath13FunStartsWithD0Ev(%"class.blink::xpath::FunStartsWith"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunStartsWith", %"class.blink::xpath::FunStartsWith"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunStartsWith", %"class.blink::xpath::FunStartsWith"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunStartsWith"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath13FunStartsWith10ResultTypeEv(%"class.blink::xpath::FunStartsWith"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath11FunContainsD0Ev(%"class.blink::xpath::FunContains"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunContains", %"class.blink::xpath::FunContains"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunContains", %"class.blink::xpath::FunContains"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunContains"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath11FunContains10ResultTypeEv(%"class.blink::xpath::FunContains"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath18FunSubstringBeforeD0Ev(%"class.blink::xpath::FunSubstringBefore"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunSubstringBefore", %"class.blink::xpath::FunSubstringBefore"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunSubstringBefore", %"class.blink::xpath::FunSubstringBefore"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunSubstringBefore"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath18FunSubstringBefore10ResultTypeEv(%"class.blink::xpath::FunSubstringBefore"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath17FunSubstringAfterD0Ev(%"class.blink::xpath::FunSubstringAfter"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunSubstringAfter", %"class.blink::xpath::FunSubstringAfter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunSubstringAfter", %"class.blink::xpath::FunSubstringAfter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunSubstringAfter"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath17FunSubstringAfter10ResultTypeEv(%"class.blink::xpath::FunSubstringAfter"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath12FunSubstringD0Ev(%"class.blink::xpath::FunSubstring"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunSubstring", %"class.blink::xpath::FunSubstring"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunSubstring", %"class.blink::xpath::FunSubstring"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunSubstring"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath12FunSubstring10ResultTypeEv(%"class.blink::xpath::FunSubstring"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath12FunTranslateD0Ev(%"class.blink::xpath::FunTranslate"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunTranslate", %"class.blink::xpath::FunTranslate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunTranslate", %"class.blink::xpath::FunTranslate"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunTranslate"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath12FunTranslate10ResultTypeEv(%"class.blink::xpath::FunTranslate"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath10FunBooleanD0Ev(%"class.blink::xpath::FunBoolean"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunBoolean", %"class.blink::xpath::FunBoolean"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunBoolean", %"class.blink::xpath::FunBoolean"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunBoolean"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath10FunBoolean10ResultTypeEv(%"class.blink::xpath::FunBoolean"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath6FunNotD0Ev(%"class.blink::xpath::FunNot"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunNot", %"class.blink::xpath::FunNot"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunNot", %"class.blink::xpath::FunNot"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunNot"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath6FunNot10ResultTypeEv(%"class.blink::xpath::FunNot"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath7FunTrueD0Ev(%"class.blink::xpath::FunTrue"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunTrue", %"class.blink::xpath::FunTrue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunTrue", %"class.blink::xpath::FunTrue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunTrue"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath7FunTrue10ResultTypeEv(%"class.blink::xpath::FunTrue"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunFalseD0Ev(%"class.blink::xpath::FunFalse"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunFalse", %"class.blink::xpath::FunFalse"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunFalse", %"class.blink::xpath::FunFalse"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunFalse"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8FunFalse10ResultTypeEv(%"class.blink::xpath::FunFalse"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath6FunSumD0Ev(%"class.blink::xpath::FunSum"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunSum", %"class.blink::xpath::FunSum"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunSum", %"class.blink::xpath::FunSum"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunSum"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath6FunSum10ResultTypeEv(%"class.blink::xpath::FunSum"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunFloorD0Ev(%"class.blink::xpath::FunFloor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunFloor", %"class.blink::xpath::FunFloor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunFloor", %"class.blink::xpath::FunFloor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunFloor"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8FunFloor10ResultTypeEv(%"class.blink::xpath::FunFloor"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath10FunCeilingD0Ev(%"class.blink::xpath::FunCeiling"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunCeiling", %"class.blink::xpath::FunCeiling"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunCeiling", %"class.blink::xpath::FunCeiling"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunCeiling"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath10FunCeiling10ResultTypeEv(%"class.blink::xpath::FunCeiling"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunctionD2Ev(%"class.blink::xpath::Function"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::Function", %"class.blink::xpath::Function"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::Function"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunRoundD0Ev(%"class.blink::xpath::FunRound"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::FunRound", %"class.blink::xpath::FunRound"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::xpath::FunRound", %"class.blink::xpath::FunRound"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #12
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::xpath::FunRound"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %20) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8FunRound10ResultTypeEv(%"class.blink::xpath::FunRound"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::xpath::Expression"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::xpath::Expression"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.7, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::Expression"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #3

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !3

22:                                               ; preds = %15
  %23 = bitcast %union.anon* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon* %16 to %"class.WTF::Vector.369"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.369"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.364"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.364"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.364"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.364"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.364"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.364"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.364"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.365"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.365"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.365"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.5"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.5"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.360"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.360"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.5"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.360"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %8, align 8
  %10 = icmp eq %"class.blink::Member.5"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.613"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking.613"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.613", %"class.blink::HeapVectorBacking.613"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %8, align 8
  %26 = icmp eq %"class.blink::Member.5"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.5"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.360"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.360"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.360"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.613"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking.613"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.613"* %17, null
  %23 = icmp ne %"class.blink::Member.5"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.5"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.360"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.613", %"class.blink::HeapVectorBacking.613"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.360"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.360"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.360", %"class.WTF::Vector.360"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.613", %"class.blink::HeapVectorBacking.613"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.613"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.7, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking.613"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking.613"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ValueDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::ValueData"*
  tail call void @_ZNK5blink5xpath9ValueData5TraceEPNS_7VisitorE(%"class.blink::xpath::ValueData"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink5xpath9ValueData5TraceEPNS_7VisitorE(%"class.blink::xpath::ValueData"*, %"class.blink::Visitor"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::xpath::ValueData"* @_ZN5blink25MakeGarbageCollectedTraitINS_5xpath9ValueDataEE4CallIJRPKcEEEPS2_DpOT_(i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #12
  %4 = bitcast i8* %3 to %"class.blink::xpath::ValueData"*
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = load i8*, i8** %0, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i64 @strlen(i8* nonnull %6) #14
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %6, i64 %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = bitcast i8* %3 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #12
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  call void @llvm.trap() #12
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %10, %16, %31
  %34 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #12
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %34, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds i8, i8* %3, i64 8
  %42 = bitcast i8* %41 to i8**
  store i8* %34, i8** %42, align 8
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #12
  br label %58

58:                                               ; preds = %33, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %59 = getelementptr inbounds i8, i8* %3, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  ret %"class.blink::xpath::ValueData"* %4
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.656"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #12
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #12
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.660", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.660"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.660"* nonnull %2, i8* %14) #12
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #12
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #12
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #12
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #12
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #12
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #12
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.656"* %8) #12
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.656"* %8) #12
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %26, i8* %27) #12
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #12
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.659", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.660", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.657", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.659"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.659"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.660"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.660"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.658"* nonnull %49, i8* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.660"* nonnull %4, i8* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.656"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.658"* nonnull %53, i8* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.659", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.660", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.657", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.657"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.659"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #12
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.659"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.660"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #12
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #12
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.660"* nonnull %4, i8* %48) #12
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.659", %"class.WTF::StringTypeAdapter.659"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.658"* nonnull %49, i16* %1) #12
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.660"* nonnull %4, i16* %52) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.657", %"class.WTF::StringTypeAdapter.657"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.656"* %6) #12
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.658"* nonnull %53, i16* %56) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.660"*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.656"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.660", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.660"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.660", %"class.WTF::StringTypeAdapter.660"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.656", %"class.WTF::StringAppend.656"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.660"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.660"* nonnull %4, i8* %21) #12
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.658"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.660"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.658"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.660"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #12
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #12
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #12
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %37, i32 %34) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair"* %53, %"struct.WTF::KeyValuePair"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #12
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #12
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #12
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #12
  br i1 %57, label %92, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #12
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = tail call dereferenceable(16) %"struct.WTF::KeyValuePair"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair"* %79, %"struct.WTF::KeyValuePair"* dereferenceable(16) %2) #12
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, %83
  %87 = shl i32 %86, 1
  %88 = load i32, i32* %12, align 8
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %78
  %91 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %92

92:                                               ; preds = %54, %78, %90
  %93 = phi i8 [ 1, %78 ], [ 1, %90 ], [ 0, %54 ]
  %94 = phi %"struct.WTF::KeyValuePair"* [ %79, %78 ], [ %91, %90 ], [ %47, %54 ]
  %95 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %94, 0
  %96 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %95, i8 %93, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #12
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #12
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #12
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !3

61:                                               ; preds = %52
  tail call void @llvm.trap() #12
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair"* %0
}

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #11

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.369"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.369"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.369"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.369"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.369"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.369"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.369"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.369"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.369"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.369"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !3

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.370"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.370"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.369"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.369", %"class.WTF::Vector.369"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.370"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZNK5blink7Element24SynchronizeAllAttributesEv(%"class.blink::Element"*) local_unnamed_addr #3

declare i32 @_ZN3WTF10StringImpl11ReverseFindEDsj(%"class.WTF::StringImpl"*, i16 zeroext, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL16CreateFunBooleanEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath10FunBooleanE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL16CreateFunCeilingEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath10FunCeilingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL15CreateFunConcatEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath9FunConcatE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL17CreateFunContainsEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath11FunContainsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL14CreateFunCountEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunCountE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL14CreateFunFalseEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunFalseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL14CreateFunFloorEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunFloorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL11CreateFunIdEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath5FunIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL13CreateFunLangEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath7FunLangE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL13CreateFunLastEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath7FunLastE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 26
  store i8 1, i8* %6, align 2
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL18CreateFunLocalNameEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath12FunLocalNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL13CreateFunNameEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath7FunNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL21CreateFunNamespaceURIEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath15FunNamespaceURIE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL23CreateFunNormalizeSpaceEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath17FunNormalizeSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL12CreateFunNotEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath6FunNotE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL15CreateFunNumberEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath9FunNumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL17CreateFunPositionEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath11FunPositionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 25
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL14CreateFunRoundEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8FunRoundE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL19CreateFunStartsWithEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath13FunStartsWithE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL15CreateFunStringEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath9FunStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL21CreateFunStringLengthEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath15FunStringLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL18CreateFunSubstringEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath12FunSubstringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL23CreateFunSubstringAfterEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath17FunSubstringAfterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL24CreateFunSubstringBeforeEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath18FunSubstringBeforeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL12CreateFunSumEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath6FunSumE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL18CreateFunTranslateEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath12FunTranslateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.blink::xpath::Function"* @_ZN5blink5xpathL13CreateFunTrueEv() #0 {
  %1 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 40) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 40, i1 false) #12
  %2 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %2) #12
  %3 = bitcast i8* %1 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %1, i64 32
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath7FunTrueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  %10 = bitcast i8* %1 to %"class.blink::xpath::Function"*
  ret %"class.blink::xpath::Function"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::ParseNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::ParseNode"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::xpath::ParseNode"*
  %3 = bitcast i8* %0 to void (%"class.blink::xpath::ParseNode"*)***
  %4 = load void (%"class.blink::xpath::ParseNode"*)**, void (%"class.blink::xpath::ParseNode"*)*** %3, align 8
  %5 = load void (%"class.blink::xpath::ParseNode"*)*, void (%"class.blink::xpath::ParseNode"*)** %4, align 8
  tail call void %5(%"class.blink::xpath::ParseNode"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8FunctionD0Ev(%"class.blink::xpath::Function"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"*) unnamed_addr #10

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.385"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKPKcRKS5_EENS_18HashTableAddResultISF_S6_EEOT0_OT1_(%"class.WTF::HashTable.382"*, i8** dereferenceable(8), %"struct.blink::xpath::FunctionRec"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair.385"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair.385"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.382"* %0, %"struct.WTF::KeyValuePair.385"* null)
  %11 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair.385"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = load i8*, i8** %1, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %12
  %22 = tail call i64 @strlen(i8* nonnull %19) #14
  br label %23

23:                                               ; preds = %21, %12
  %24 = phi i64 [ %22, %21 ], [ 0, %12 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* %19, i64 %24) #12
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = lshr i32 %28, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %26) #12
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi %"class.WTF::StringImpl"* [ %33, %31 ], [ %26, %23 ]
  %36 = phi i32 [ %32, %31 ], [ %29, %23 ]
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #12
  br label %51

51:                                               ; preds = %34, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %52 = and i32 %36, %16
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %13, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %131, label %58

58:                                               ; preds = %51
  %59 = bitcast %"class.WTF::String"* %4 to i8*
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = xor i32 %36, -1
  %62 = lshr i32 %36, 23
  %63 = add i32 %62, %61
  %64 = shl i32 %63, 12
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 7
  %67 = xor i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 20
  %71 = xor i32 %70, %69
  %72 = or i32 %71, 1
  %73 = zext i32 %72 to i64
  br label %74

74:                                               ; preds = %58, %109
  %75 = phi %"struct.WTF::KeyValuePair.385"* [ %54, %58 ], [ %115, %109 ]
  %76 = phi %"struct.WTF::KeyValuePair.385"* [ null, %58 ], [ %110, %109 ]
  %77 = phi i64 [ %53, %58 ], [ %114, %109 ]
  %78 = phi i64 [ 0, %58 ], [ %112, %109 ]
  %79 = bitcast %"struct.WTF::KeyValuePair.385"* %75 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = icmp eq i8* %80, inttoptr (i64 -1 to i8*)
  br i1 %81, label %109, label %82

82:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #12
  %83 = load i8*, i8** %1, align 8
  %84 = icmp eq i8* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = call i64 @strlen(i8* nonnull %83) #14
  br label %87

87:                                               ; preds = %85, %82
  %88 = phi i64 [ %86, %85 ], [ 0, %82 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %83, i64 %88) #12
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %75, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %92 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %90, %"class.WTF::StringImpl"* %91) #12
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #12
  br label %108

108:                                              ; preds = %87, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #12
  br i1 %92, label %144, label %109

109:                                              ; preds = %74, %108
  %110 = phi %"struct.WTF::KeyValuePair.385"* [ %76, %108 ], [ %75, %74 ]
  %111 = icmp eq i64 %78, 0
  %112 = select i1 %111, i64 %73, i64 %78
  %113 = add i64 %112, %77
  %114 = and i64 %113, %17
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %13, i64 %114
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %119, label %74

119:                                              ; preds = %109
  %120 = icmp eq %"struct.WTF::KeyValuePair.385"* %110, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %110, i64 0, i32 1, i32 1
  %123 = bitcast %"class.blink::xpath::Interval"* %122 to i64*
  %124 = bitcast %"struct.WTF::KeyValuePair.385"* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %123, align 8
  %125 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 3
  %126 = load i32, i32* %125, align 8
  %127 = add i32 %126, 2147483647
  %128 = and i32 %127, 2147483647
  %129 = and i32 %126, -2147483648
  %130 = or i32 %128, %129
  store i32 %130, i32* %125, align 8
  br label %131

131:                                              ; preds = %51, %119, %121
  %132 = phi %"struct.WTF::KeyValuePair.385"* [ %110, %121 ], [ %115, %119 ], [ %54, %51 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath11FunctionRecEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKPKcRKS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.385"* dereferenceable(24) %132, i8** dereferenceable(8) %1, %"struct.blink::xpath::FunctionRec"* dereferenceable(16) %2)
  %133 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 3
  %137 = load i32, i32* %136, align 8
  %138 = add i32 %137, %135
  %139 = shl i32 %138, 1
  %140 = load i32, i32* %14, align 8
  %141 = icmp ult i32 %139, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %131
  %143 = call %"struct.WTF::KeyValuePair.385"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.382"* %0, %"struct.WTF::KeyValuePair.385"* %132)
  br label %144

144:                                              ; preds = %108, %131, %142
  %145 = phi i8 [ 1, %131 ], [ 1, %142 ], [ 0, %108 ]
  %146 = phi %"struct.WTF::KeyValuePair.385"* [ %132, %131 ], [ %143, %142 ], [ %75, %108 ]
  %147 = insertvalue { %"struct.WTF::KeyValuePair.385"*, i8 } undef, %"struct.WTF::KeyValuePair.385"* %146, 0
  %148 = insertvalue { %"struct.WTF::KeyValuePair.385"*, i8 } %147, i8 %145, 1
  ret { %"struct.WTF::KeyValuePair.385"*, i8 } %148
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.385"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.382"*, %"struct.WTF::KeyValuePair.385"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #12
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %22, i8* %23) #12
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEN5blink5xpath11FunctionRecEEEEEPKcv, i64 0, i64 0)) #12
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.385"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %82, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %69, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %66, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %67, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %45
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %45, i32 1, i32 1
  %49 = bitcast %"class.blink::xpath::Interval"* %48 to i64*
  %50 = bitcast %"struct.WTF::KeyValuePair.385"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %49, align 8
  %51 = or i64 %45, 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %51, i32 1, i32 1
  %54 = bitcast %"class.blink::xpath::Interval"* %53 to i64*
  %55 = bitcast %"struct.WTF::KeyValuePair.385"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %54, align 8
  %56 = or i64 %45, 2
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %56, i32 1, i32 1
  %59 = bitcast %"class.blink::xpath::Interval"* %58 to i64*
  %60 = bitcast %"struct.WTF::KeyValuePair.385"* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %59, align 8
  %61 = or i64 %45, 3
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %61, i32 1, i32 1
  %64 = bitcast %"class.blink::xpath::Interval"* %63 to i64*
  %65 = bitcast %"struct.WTF::KeyValuePair.385"* %62 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %64, align 8
  %66 = add nuw nsw i64 %45, 4
  %67 = add i64 %46, -4
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %44

69:                                               ; preds = %44, %38
  %70 = phi i64 [ 0, %38 ], [ %66, %44 ]
  %71 = icmp eq i64 %40, 0
  br i1 %71, label %82, label %72

72:                                               ; preds = %69, %72
  %73 = phi i64 [ %79, %72 ], [ %70, %69 ]
  %74 = phi i64 [ %80, %72 ], [ %40, %69 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %73
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %36, i64 %73, i32 1, i32 1
  %77 = bitcast %"class.blink::xpath::Interval"* %76 to i64*
  %78 = bitcast %"struct.WTF::KeyValuePair.385"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #12
  store i64 -1, i64* %77, align 8
  %79 = add nuw nsw i64 %73, 1
  %80 = add i64 %74, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %72, !llvm.loop !5

82:                                               ; preds = %69, %72, %31
  %83 = call %"struct.WTF::KeyValuePair.385"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.382"* %0, %"struct.WTF::KeyValuePair.385"* %36, i32 %32, %"struct.WTF::KeyValuePair.385"* %1) #12
  ret %"struct.WTF::KeyValuePair.385"* %83
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_IN5blink5xpath11FunctionRecEEEEENS_10StringHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S7_EERKPKcRKS7_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.385"* dereferenceable(24), i8** dereferenceable(8), %"struct.blink::xpath::FunctionRec"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = load i8*, i8** %1, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = tail call i64 @strlen(i8* nonnull %6) #14
  br label %10

10:                                               ; preds = %3, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %6, i64 %11) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::String"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %12, align 8
  %15 = bitcast %"struct.WTF::KeyValuePair.385"* %0 to i64*
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %10, %28, %31
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %32, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %0, i64 0, i32 1
  %50 = bitcast %"struct.blink::xpath::FunctionRec"* %49 to i8*
  %51 = bitcast %"struct.blink::xpath::FunctionRec"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.385"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE8RehashToEPS6_jSG_(%"class.WTF::HashTable.382"*, %"struct.WTF::KeyValuePair.385"*, i32, %"struct.WTF::KeyValuePair.385"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.382", align 8
  %6 = bitcast %"class.WTF::HashTable.382"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.382"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.385"* %1, %"struct.WTF::KeyValuePair.385"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.385"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.382"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.382"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.385"* %22 to i64
  br label %71

24:                                               ; preds = %115
  %25 = bitcast %"class.WTF::HashTable.382"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.382"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %116, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.385"* [ null, %16 ], [ %119, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %117, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.385"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.385"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #12
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #12
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.385"* %33

71:                                               ; preds = %21, %115
  %72 = phi i64 [ %116, %115 ], [ %23, %21 ]
  %73 = phi i32 [ %117, %115 ], [ %13, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.385"* [ %118, %115 ], [ %22, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.385"* [ %119, %115 ], [ null, %21 ]
  %76 = phi i32 [ %120, %115 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %74, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"struct.WTF::KeyValuePair.385"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %115
    i64 0, label %115
  ]

82:                                               ; preds = %71
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %78, i64 0, i32 0
  %84 = call { %"struct.WTF::KeyValuePair.385"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.382"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %83) #12
  %85 = extractvalue { %"struct.WTF::KeyValuePair.385"*, i8 } %84, 0
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #12
  br label %102

102:                                              ; preds = %82, %98, %101
  %103 = load i64, i64* %80, align 8
  %104 = bitcast %"struct.WTF::KeyValuePair.385"* %85 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %85, i64 0, i32 1
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %74, i64 %77, i32 1
  %107 = bitcast %"struct.blink::xpath::FunctionRec"* %105 to i8*
  %108 = bitcast %"struct.blink::xpath::FunctionRec"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 16, i1 false) #12
  %109 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %15, align 8
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %109, i64 %77
  %111 = icmp eq %"struct.WTF::KeyValuePair.385"* %110, %3
  %112 = select i1 %111, %"struct.WTF::KeyValuePair.385"* %85, %"struct.WTF::KeyValuePair.385"* %75
  %113 = load i32, i32* %12, align 8
  %114 = ptrtoint %"struct.WTF::KeyValuePair.385"* %109 to i64
  br label %115

115:                                              ; preds = %71, %71, %102
  %116 = phi i64 [ %72, %71 ], [ %114, %102 ], [ %72, %71 ]
  %117 = phi i32 [ %73, %71 ], [ %113, %102 ], [ %73, %71 ]
  %118 = phi %"struct.WTF::KeyValuePair.385"* [ %74, %71 ], [ %109, %102 ], [ %74, %71 ]
  %119 = phi %"struct.WTF::KeyValuePair.385"* [ %75, %71 ], [ %112, %102 ], [ %75, %71 ]
  %120 = add i32 %76, 1
  %121 = icmp eq i32 %120, %117
  br i1 %121, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.385"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.382"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #12
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.385"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.385"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.385"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.385"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.385"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.385"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.385"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.385"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #12
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.385"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.385"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.385"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.385"*, i8 } undef, %"struct.WTF::KeyValuePair.385"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.385"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.385"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.5"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.378"*, %"class.blink::Node"** dereferenceable(8), %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %4, align 8
  %6 = icmp eq %"class.blink::Member.5"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.378"* %0, %"class.blink::Member.5"* null)
  %9 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.5"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.5"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.5"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"class.blink::Member.5"* %60, %"class.blink::Member.5"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.5"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.5"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.5"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %89 = ptrtoint %"class.blink::Node"* %88 to i64
  %90 = bitcast %"class.blink::Member.5"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Node"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #12
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.5"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #12
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.378"* %0, %"class.blink::Member.5"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.5"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.5"*, i8 } undef, %"class.blink::Member.5"* %117, 0
  %119 = insertvalue { %"class.blink::Member.5"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.5"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.378"*, %"class.blink::Member.5"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.378"* %0, i32 %35, %"class.blink::Member.5"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.5"*
  %44 = call %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.378"* %0, %"class.blink::Member.5"* %43, i32 %40, %"class.blink::Member.5"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.5"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.5"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.378"*, i32, %"class.blink::Member.5"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.18, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %31, align 8
  %33 = icmp eq %"class.blink::Member.5"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.5"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.5"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.5"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.5"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.5"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.5"* %61, %"class.blink::Member.5"* %55
  %63 = bitcast %"class.blink::Member.5"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.5"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.5"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.378"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #12
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.5"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.378"* %0, %"class.blink::Member.5"* %42, i32 %1, %"class.blink::Member.5"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.5"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.5"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.5"* %87, %"class.blink::Member.5"* %82
  %89 = bitcast %"class.blink::Member.5"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.5"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.5"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.5"* %99, %"class.blink::Member.5"* %88
  %101 = bitcast %"class.blink::Member.5"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.5"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.5"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.5"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.5"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.378"*, %"class.blink::Member.5"*, i32, %"class.blink::Member.5"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.5"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.5"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.5"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #12
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.378"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.5"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #12
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.5"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.5"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #12
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.378", %"class.WTF::HashTable.378"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.5"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.5"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.5"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.5"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.5"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Node"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.5"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.5"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.5"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.5"* %93, null
  %95 = ptrtoint %"class.blink::Member.5"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Node"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Node"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Node"* %99, inttoptr (i64 -1 to %"class.blink::Node"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.5"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.5"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.5"*, %"class.blink::Member.5"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.5"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.5"* %118, %"class.blink::Member.5"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.5"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.5"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.47, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([316 x i8], [316 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.5"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.5"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #3

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink5xpath11FunctionRecEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.382"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.385"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #12
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.385"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.385"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #12
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.385"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.382", %"class.WTF::HashTable.382"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.385", %"struct.WTF::KeyValuePair.385"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.385"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.385"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } undef, %"struct.WTF::KeyValuePair.385"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } %77, %"struct.WTF::KeyValuePair.385"* %76, 1
  ret { %"struct.WTF::KeyValuePair.385"*, %"struct.WTF::KeyValuePair.385"* } %78
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
