; ModuleID = '../../cc/trees/occlusion_tracker.cc'
source_filename = "../../cc/trees/occlusion_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.cc::OcclusionTracker" = type { %"class.std::__1::vector", %"class.gfx::Rect", %"class.gfx::Size" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"*, %"class.std::__1::__compressed_pair.1280" }
%"struct.cc::OcclusionTracker::StackObject" = type <{ %"class.cc::RenderSurfaceImpl"*, %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion", i8, [7 x i8] }>
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.1274" }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection.971", %class.scoped_refptr.972, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.978, %"class.std::__1::vector.982", %"class.std::__1::unordered_map.1031", %"class.base::internal::flat_tree.1055", %"class.std::__1::unordered_map.1063", %"class.std::__1::unordered_map.1087", %"class.std::__1::unordered_map.1111", %"class.std::__1::unordered_map.1111", %"class.base::flat_map.1135", %"class.std::__1::vector.1145", %"class.base::internal::flat_tree.1234", %"class.base::internal::flat_tree.600", %"class.std::__1::vector.1235", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.116", %"class.std::__1::vector.116", %"class.std::__1::vector.1242", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.1249, %class.scoped_refptr.1249, %"class.std::__1::unique_ptr.1254", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.635", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.1260", %"class.std::__1::vector.1266" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.59", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.104", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.gfx::Vector2dF", %"class.std::__1::vector.116", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.408", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.465", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", %"class.std::__1::set.483", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.493", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.534", %"class.base::RepeatingCallback.330", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.540", i8, i8, i8, i32, %"class.std::__1::unique_ptr.550", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.556", %"class.std::__1::vector.562", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.594", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.600", %"class.absl::optional.613", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.84", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.688", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.766", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.809", %"class.base::WeakPtrFactory.816" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr, %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.13" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.44, %class.scoped_refptr.45, %class.scoped_refptr, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.46", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.44 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.45 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.53", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.53" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.54" }
%"struct.std::__1::atomic.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__cxx_atomic_impl.57" }
%"struct.std::__1::__cxx_atomic_impl.57" = type { %"struct.std::__1::__cxx_atomic_base_impl.58" }
%"struct.std::__1::__cxx_atomic_base_impl.58" = type { i8 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.84", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.92" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.74"*, i64 }
%"class.std::__1::unique_ptr.74" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.75" }
%"class.std::__1::__tree.75" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.92" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.99" = type { %"class.base::internal::VectorBuffer.100", i64, i64 }
%"class.base::internal::VectorBuffer.100" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.cc::LayerTreeImpl"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.124", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.130", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.357", %"class.std::__1::vector.212", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.395", %"class.base::WeakPtrFactory.395" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.130" = type { %"class.std::__1::__hash_table.131" }
%"class.std::__1::__hash_table.131" = type <{ %"class.std::__1::unique_ptr.132", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.152", [4 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base.135"** }
%"struct.std::__1::__hash_node_base.135" = type { %"struct.std::__1::__hash_node_base.135"* }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.std::__1::__bucket_list_deallocator.137" }
%"class.std::__1::__bucket_list_deallocator.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base.135" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.157, %"class.base::WeakPtr", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.159", %"class.base::flat_map.189", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.199", %"class.std::__1::map.199", i8, %"class.std::__1::vector.208", %"class.base::WeakPtrFactory.224" }
%class.scoped_refptr.157 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.184" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional", %"class.absl::optional.179", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.162, %"class.gfx::Rect", i32, %class.sk_sp.167, %class.sk_sp.175, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr.176 }
%class.sk_sp.162 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.163", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { i8* }
%class.sk_sp.167 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.168" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.161, i32, i32 }
%class.sk_sp.161 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.54" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.170" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.175 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.176 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.177", [4 x i8] }>
%"class.base::RefCountedThreadSafe.177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSize = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.178 }
%union.anon.178 = type { i64 }
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.189" = type { %"class.base::internal::flat_tree.190" }
%"class.base::internal::flat_tree.190" = type { %"class.std::__1::vector.191" }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"struct.std::__1::pair.193"*, %"struct.std::__1::pair.193"*, %"class.std::__1::__compressed_pair.194" }
%"struct.std::__1::pair.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::pair.193"* }
%"class.std::__1::map.199" = type { %"class.std::__1::__tree.200" }
%"class.std::__1::__tree.200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.201", %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.219" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback", %class.scoped_refptr.210, i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.87 }
%class.scoped_refptr.87 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.88", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.210 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.212", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.211", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.211" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.224" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.225", i8, %class.scoped_refptr.157, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.235" }
%"class.base::flat_map.225" = type { %"class.base::internal::flat_tree.226" }
%"class.base::internal::flat_tree.226" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair.229"*, %"struct.std::__1::pair.229"*, %"class.std::__1::__compressed_pair.230" }
%"struct.std::__1::pair.229" = type { i32, %"class.std::__1::unique_ptr.1300" }
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::pair.229"* }
%"class.base::WeakPtrFactory.235" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.236", %"class.base::internal::flat_tree.236", %"class.std::__1::vector.244", i32, %"class.absl::optional.251", %"class.std::__1::unordered_map.256", %"class.std::__1::unordered_map.280", %"class.base::flat_map.304", %"class.base::WeakPtrFactory.314" }
%"class.base::internal::flat_tree.236" = type { %"class.std::__1::vector.237" }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { i32*, i32*, %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { i32* }
%"class.std::__1::vector.244" = type { %"class.std::__1::__vector_base.245" }
%"class.std::__1::__vector_base.245" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.246" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.251" = type { %"class.absl::optional_internal::optional_data.252" }
%"class.absl::optional_internal::optional_data.252" = type { %"class.absl::optional_internal::optional_data_base.253" }
%"class.absl::optional_internal::optional_data_base.253" = type { %"class.absl::optional_internal::optional_data_dtor_base.254" }
%"class.absl::optional_internal::optional_data_dtor_base.254" = type { i8, %union.anon.255 }
%union.anon.255 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.280" = type { %"class.std::__1::__hash_table.281" }
%"class.std::__1::__hash_table.281" = type <{ %"class.std::__1::unique_ptr.282", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.297", %"class.std::__1::__compressed_pair.300", [4 x i8] }>
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284", %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base.285"** }
%"struct.std::__1::__hash_node_base.285" = type { %"struct.std::__1::__hash_node_base.285"* }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.std::__1::__bucket_list_deallocator.287" }
%"class.std::__1::__bucket_list_deallocator.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::__hash_node_base.285" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::flat_map.304" = type { %"class.base::internal::flat_tree.305" }
%"class.base::internal::flat_tree.305" = type { %"class.std::__1::vector.306" }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"struct.std::__1::pair.308"*, %"struct.std::__1::pair.308"*, %"class.std::__1::__compressed_pair.309" }
%"struct.std::__1::pair.308" = type { i32, i32 }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::pair.308"* }
%"class.base::WeakPtrFactory.314" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.315", %"class.std::__1::vector.323" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.318" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.317, i16, i16, i32 }
%class.scoped_refptr.317 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.325" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.330", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.331" }
%"class.base::WeakPtrFactory.331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.332" }
%"class.std::__1::__hash_table.332" = type <{ %"class.std::__1::unique_ptr.333", %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.348", %"class.std::__1::__compressed_pair.352", [4 x i8] }>
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335", %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::__hash_node_base.336"** }
%"struct.std::__1::__hash_node_base.336" = type { %"struct.std::__1::__hash_node_base.336"* }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.std::__1::__bucket_list_deallocator.338" }
%"class.std::__1::__bucket_list_deallocator.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.336" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.357" = type { %"class.std::__1::__hash_table.358" }
%"class.std::__1::__hash_table.358" = type <{ %"class.std::__1::unique_ptr.359", %"class.std::__1::__compressed_pair.369", %"class.std::__1::__compressed_pair.374", %"class.std::__1::__compressed_pair.377", [4 x i8] }>
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361", %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"struct.std::__1::__hash_node_base.362"** }
%"struct.std::__1::__hash_node_base.362" = type { %"struct.std::__1::__hash_node_base.362"* }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::__bucket_list_deallocator.364" }
%"class.std::__1::__bucket_list_deallocator.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.std::__1::__hash_node_base.362" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %class.scoped_refptr.210*, %class.scoped_refptr.210*, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %class.scoped_refptr.210* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.381" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.387", %"class.base::WeakPtrFactory.388" }
%"class.base::OnceCallback.387" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.388" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.389, i8, [7 x i8] }>
%class.scoped_refptr.389 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.390", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.390" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.391" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::WeakPtrFactory.395" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.399", %"class.absl::optional.399", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"struct.std::__1::pair.404" }
%"struct.std::__1::pair.404" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.424", %"class.absl::optional.424", %"class.absl::optional.424", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.443, %"class.absl::optional.444", %"class.std::__1::map.449" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.420" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.414"**, %"struct.std::__1::pair.414"**, %"struct.std::__1::pair.414"**, %"class.std::__1::__compressed_pair.415" }
%"struct.std::__1::pair.414" = type opaque
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::pair.414"** }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.424" = type { %"class.absl::optional_internal::optional_data.425" }
%"class.absl::optional_internal::optional_data.425" = type { %"class.absl::optional_internal::optional_data_base.426" }
%"class.absl::optional_internal::optional_data_base.426" = type { %"class.absl::optional_internal::optional_data_dtor_base.427" }
%"class.absl::optional_internal::optional_data_dtor_base.427" = type { i8, %union.anon.428 }
%union.anon.428 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.429", %"class.base::circular_deque.430", %"class.std::__1::map.432", %"class.absl::optional" }
%"class.base::RepeatingCallback.429" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.430" = type { %"class.base::internal::VectorBuffer.431", i64, i64 }
%"class.base::internal::VectorBuffer.431" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.432" = type { %"class.std::__1::__tree.433" }
%"class.std::__1::__tree.433" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.434", %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%struct.anon.443 = type { double, double }
%"class.absl::optional.444" = type { %"class.absl::optional_internal::optional_data.445" }
%"class.absl::optional_internal::optional_data.445" = type { %"class.absl::optional_internal::optional_data_base.446" }
%"class.absl::optional_internal::optional_data_base.446" = type { %"class.absl::optional_internal::optional_data_dtor_base.447" }
%"class.absl::optional_internal::optional_data_dtor_base.447" = type { i8, %union.anon.448 }
%union.anon.448 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.449" = type { %"class.std::__1::__tree.450" }
%"class.std::__1::__tree.450" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.451", %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.461" }
%"class.base::RingBuffer.461" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.483" = type { %"class.std::__1::__tree.484" }
%"class.std::__1::__tree.484" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.485", %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.493" = type { %"class.std::__1::__hash_table.494" }
%"class.std::__1::__hash_table.494" = type <{ %"class.std::__1::unique_ptr.495", %"class.std::__1::__compressed_pair.505", %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.513", [4 x i8] }>
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497", %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.std::__1::__hash_node_base.498"** }
%"struct.std::__1::__hash_node_base.498" = type { %"struct.std::__1::__hash_node_base.498"* }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.std::__1::__bucket_list_deallocator.500" }
%"class.std::__1::__bucket_list_deallocator.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"struct.std::__1::__hash_node_base.498" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.519" }
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.526" }
%"class.std::__1::vector.526" = type { %"class.std::__1::__vector_base.527" }
%"class.std::__1::__vector_base.527" = type { %"class.std::__1::unique_ptr.528"*, %"class.std::__1::unique_ptr.528"*, %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::unique_ptr.528" = type opaque
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.std::__1::unique_ptr.528"* }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.330" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.540" = type { %"class.std::__1::__tree.541" }
%"class.std::__1::__tree.541" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type opaque
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.562" = type { %"class.std::__1::__vector_base.563" }
%"class.std::__1::__vector_base.563" = type { %"struct.std::__1::pair.564"*, %"struct.std::__1::pair.564"*, %"class.std::__1::__compressed_pair.565" }
%"struct.std::__1::pair.564" = type opaque
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"struct.std::__1::pair.564"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.570", %"class.base::internal::flat_tree.236", %"class.base::internal::flat_tree.236", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.570" = type { %"class.base::internal::flat_tree.571" }
%"class.base::internal::flat_tree.571" = type { %"class.std::__1::vector.572" }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { %"struct.std::__1::pair.574"*, %"struct.std::__1::pair.574"*, %"class.std::__1::__compressed_pair.575" }
%"struct.std::__1::pair.574" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.168", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1306", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1306" = type { %"class.std::__1::vector.1307" }
%"class.std::__1::vector.1307" = type { %"class.std::__1::__vector_base.1308" }
%"class.std::__1::__vector_base.1308" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1309" }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1309" = type { %"struct.std::__1::__compressed_pair_elem.1310" }
%"struct.std::__1::__compressed_pair_elem.1310" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.576" }
%"struct.std::__1::__compressed_pair_elem.576" = type { %"struct.std::__1::pair.574"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.580", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.581" }
%"class.base::RepeatingCallback.580" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.581" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.585" }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.absl::optional.613" = type { %"class.absl::optional_internal::optional_data.614" }
%"class.absl::optional_internal::optional_data.614" = type { %"class.absl::optional_internal::optional_data_base.615" }
%"class.absl::optional_internal::optional_data_base.615" = type { %"class.absl::optional_internal::optional_data_dtor_base.616" }
%"class.absl::optional_internal::optional_data_dtor_base.616" = type { i8, [7 x i8], %union.anon.617 }
%union.anon.617 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.618", %"struct.viz::Selection", i8, %"class.absl::optional.623", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.628", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.618" = type { %"class.absl::optional_internal::optional_data.619" }
%"class.absl::optional_internal::optional_data.619" = type { %"class.absl::optional_internal::optional_data_base.620" }
%"class.absl::optional_internal::optional_data_base.620" = type { %"class.absl::optional_internal::optional_data_dtor_base.621" }
%"class.absl::optional_internal::optional_data_dtor_base.621" = type { i8, %union.anon.622 }
%union.anon.622 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.623" = type { %"class.absl::optional_internal::optional_data.624" }
%"class.absl::optional_internal::optional_data.624" = type { %"class.absl::optional_internal::optional_data_base.625" }
%"class.absl::optional_internal::optional_data_base.625" = type { %"class.absl::optional_internal::optional_data_dtor_base.626" }
%"class.absl::optional_internal::optional_data_dtor_base.626" = type { i8, %union.anon.627 }
%union.anon.627 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.628" = type { %"class.absl::optional_internal::optional_data.629" }
%"class.absl::optional_internal::optional_data.629" = type { %"class.absl::optional_internal::optional_data_base.630" }
%"class.absl::optional_internal::optional_data_base.630" = type { %"class.absl::optional_internal::optional_data_dtor_base.631" }
%"class.absl::optional_internal::optional_data_dtor_base.631" = type { i8, %union.anon.632 }
%union.anon.632 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.633" }
%"class.base::circular_deque.633" = type { %"class.base::internal::VectorBuffer.634", i64, i64 }
%"class.base::internal::VectorBuffer.634" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.635", %"class.std::__1::vector.635" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.643", %"class.base::flat_map.649", %"class.base::flat_map.659", %"class.base::RepeatingCallback.669", %"class.std::__1::vector.670", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.678", i64, i64 }
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.649" = type { %"class.base::internal::flat_tree.650" }
%"class.base::internal::flat_tree.650" = type { %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"struct.std::__1::pair.653"*, %"struct.std::__1::pair.653"*, %"class.std::__1::__compressed_pair.654" }
%"struct.std::__1::pair.653" = type opaque
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"struct.std::__1::pair.653"* }
%"class.base::flat_map.659" = type { %"class.base::internal::flat_tree.660" }
%"class.base::internal::flat_tree.660" = type { %"class.std::__1::vector.661" }
%"class.std::__1::vector.661" = type { %"class.std::__1::__vector_base.662" }
%"class.std::__1::__vector_base.662" = type { %"struct.std::__1::pair.663"*, %"struct.std::__1::pair.663"*, %"class.std::__1::__compressed_pair.664" }
%"struct.std::__1::pair.663" = type opaque
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"struct.std::__1::pair.663"* }
%"class.base::RepeatingCallback.669" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.670" = type { %"class.std::__1::__vector_base.671" }
%"class.std::__1::__vector_base.671" = type { %"class.std::__1::unique_ptr.672"*, %"class.std::__1::unique_ptr.672"*, %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::unique_ptr.672" = type opaque
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.std::__1::unique_ptr.672"* }
%"class.base::flat_map.678" = type { %"class.base::internal::flat_tree.679" }
%"class.base::internal::flat_tree.679" = type { %"class.std::__1::vector.680" }
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"struct.std::__1::pair.682"*, %"struct.std::__1::pair.682"*, %"class.std::__1::__compressed_pair.683" }
%"struct.std::__1::pair.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"struct.std::__1::pair.682"* }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.694", %"class.base::internal::flat_tree.704" }
%"class.base::flat_map.694" = type { %"class.base::internal::flat_tree.695" }
%"class.base::internal::flat_tree.695" = type { %"class.std::__1::vector.696" }
%"class.std::__1::vector.696" = type { %"class.std::__1::__vector_base.697" }
%"class.std::__1::__vector_base.697" = type { %"struct.std::__1::pair.698"*, %"struct.std::__1::pair.698"*, %"class.std::__1::__compressed_pair.699" }
%"struct.std::__1::pair.698" = type opaque
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.std::__1::pair.698"* }
%"class.base::internal::flat_tree.704" = type { %"class.std::__1::vector.705" }
%"class.std::__1::vector.705" = type { %"class.std::__1::__vector_base.706" }
%"class.std::__1::__vector_base.706" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.717" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.707", %"class.absl::optional.712", %"struct.cc::ElementId" }
%"class.absl::optional.707" = type { %"class.absl::optional_internal::optional_data.708" }
%"class.absl::optional_internal::optional_data.708" = type { %"class.absl::optional_internal::optional_data_base.709" }
%"class.absl::optional_internal::optional_data_base.709" = type { %"class.absl::optional_internal::optional_data_dtor_base.710" }
%"class.absl::optional_internal::optional_data_dtor_base.710" = type { i8, %union.anon.711 }
%union.anon.711 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.712" = type { %"class.absl::optional_internal::optional_data.713" }
%"class.absl::optional_internal::optional_data.713" = type { %"class.absl::optional_internal::optional_data_base.714" }
%"class.absl::optional_internal::optional_data_base.714" = type { %"class.absl::optional_internal::optional_data_dtor_base.715" }
%"class.absl::optional_internal::optional_data_dtor_base.715" = type { i8, %union.anon.716 }
%union.anon.716 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.734" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.722", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.722" = type { %"class.std::__1::__deque_base.723" }
%"class.std::__1::__deque_base.723" = type { %"struct.std::__1::__split_buffer.724", i64, %"class.std::__1::__compressed_pair.730" }
%"struct.std::__1::__split_buffer.724" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.725" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.base::circular_deque.734" = type { %"class.base::internal::VectorBuffer.735", i64, i64 }
%"class.base::internal::VectorBuffer.735" = type { %"struct.std::__1::pair.736"*, i64 }
%"struct.std::__1::pair.736" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.737", %"class.std::__1::map.742", %"class.std::__1::map.742" }
%"class.absl::optional.737" = type { %"class.absl::optional_internal::optional_data.738" }
%"class.absl::optional_internal::optional_data.738" = type { %"class.absl::optional_internal::optional_data_base.739" }
%"class.absl::optional_internal::optional_data_base.739" = type { %"class.absl::optional_internal::optional_data_dtor_base.740" }
%"class.absl::optional_internal::optional_data_dtor_base.740" = type { i8, [3 x i8], %union.anon.741 }
%union.anon.741 = type { %"class.gfx::Transform" }
%"class.std::__1::map.742" = type { %"class.std::__1::__tree.743" }
%"class.std::__1::__tree.743" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.751", %"class.std::__1::vector.758" }
%"class.std::__1::vector.751" = type { %"class.std::__1::__vector_base.752" }
%"class.std::__1::__vector_base.752" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.753" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.330", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.772" }
%"class.base::WeakPtrFactory.772" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.773", %"class.std::__1::map.780", i64 }
%"class.std::__1::list.773" = type { %"class.std::__1::__list_imp.774" }
%"class.std::__1::__list_imp.774" = type { %"struct.std::__1::__list_node_base.775", %"class.std::__1::__compressed_pair.776" }
%"struct.std::__1::__list_node_base.775" = type { %"struct.std::__1::__list_node_base.775"*, %"struct.std::__1::__list_node_base.775"* }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::map.780" = type { %"class.std::__1::__tree.781" }
%"class.std::__1::__tree.781" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.782", %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.791", %"class.base::internal::flat_tree.801", %"class.base::internal::flat_tree.801" }
%"class.base::flat_map.791" = type { %"class.base::internal::flat_tree.792" }
%"class.base::internal::flat_tree.792" = type { %"class.std::__1::vector.793" }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.base::internal::flat_tree.801" = type { %"class.std::__1::vector.802" }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.804" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { i32*, i32*, %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { i32* }
%"class.base::WeakPtrFactory.816" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.817", %"class.base::flat_map.817", %"class.base::flat_map.817", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.817" = type { %"class.base::internal::flat_tree.818" }
%"class.base::internal::flat_tree.818" = type { %"class.std::__1::vector.819" }
%"class.std::__1::vector.819" = type { %"class.std::__1::__vector_base.820" }
%"class.std::__1::__vector_base.820" = type { %"struct.std::__1::pair.821"*, %"struct.std::__1::pair.821"*, %"class.std::__1::__compressed_pair.822" }
%"struct.std::__1::pair.821" = type opaque
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"struct.std::__1::pair.821"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.237", %"class.std::__1::vector.834", %"class.std::__1::vector.841" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.827", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.829" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.836" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.841" = type { %"class.std::__1::__vector_base.842" }
%"class.std::__1::__vector_base.842" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.843" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.848", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.906" }
%"class.cc::PropertyTree.848" = type { i32 (...)**, %"class.std::__1::vector.849", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.878" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.872", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.851" }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.867" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.853, [20 x float], i32, [4 x i8], %"class.std::__1::vector.860", i32, [4 x i8] }>
%class.sk_sp.853 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.854, i32, %"class.absl::optional.855", i8, i32 }
%class.sk_sp.854 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.855" = type { %"class.absl::optional_internal::optional_data.856" }
%"class.absl::optional_internal::optional_data.856" = type { %"class.absl::optional_internal::optional_data_base.857" }
%"class.absl::optional_internal::optional_data_base.857" = type { %"class.absl::optional_internal::optional_data_dtor_base.858" }
%"class.absl::optional_internal::optional_data_dtor_base.858" = type { i8, %union.anon.859 }
%union.anon.859 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.860" = type { %"class.std::__1::__vector_base.861" }
%"class.std::__1::__vector_base.861" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.872" = type { %"class.absl::optional_internal::optional_data.873" }
%"class.absl::optional_internal::optional_data.873" = type { %"class.absl::optional_internal::optional_data_base.874" }
%"class.absl::optional_internal::optional_data_base.874" = type { %"class.absl::optional_internal::optional_data_dtor_base.875" }
%"class.absl::optional_internal::optional_data_dtor_base.875" = type { i8, %union.anon.876 }
%union.anon.876 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.877" }
%"class.base::internal::flat_tree.877" = type { %"class.std::__1::vector.809" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.883" }
%"class.std::__1::__hash_table.883" = type <{ %"class.std::__1::unique_ptr.884", %"class.std::__1::__compressed_pair.894", %"class.std::__1::__compressed_pair.899", %"class.std::__1::__compressed_pair.902", [4 x i8] }>
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886", %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.887"** }
%"struct.std::__1::__hash_node_base.887" = type { %"struct.std::__1::__hash_node_base.887"* }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.std::__1::__bucket_list_deallocator.889" }
%"class.std::__1::__bucket_list_deallocator.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::__hash_node_base.887" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.906" = type { %"class.std::__1::__vector_base.907" }
%"class.std::__1::__vector_base.907" = type { %"class.std::__1::unique_ptr.908"*, %"class.std::__1::unique_ptr.908"*, %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.std::__1::unique_ptr.908"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.919" }
%"class.cc::PropertyTree.919" = type { i32 (...)**, %"class.std::__1::vector.920", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.920" = type { %"class.std::__1::__vector_base.921" }
%"class.std::__1::__vector_base.921" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.922" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.927", i32, %"class.base::flat_map.935", %"class.base::flat_map.945", %"class.base::WeakPtr.955" }
%"class.cc::PropertyTree.927" = type { i32 (...)**, %"class.std::__1::vector.928", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.928" = type { %"class.std::__1::__vector_base.929" }
%"class.std::__1::__vector_base.929" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.930" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.935" = type { %"class.base::internal::flat_tree.936" }
%"class.base::internal::flat_tree.936" = type { %"class.std::__1::vector.937" }
%"class.std::__1::vector.937" = type { %"class.std::__1::__vector_base.938" }
%"class.std::__1::__vector_base.938" = type { %"struct.std::__1::pair.939"*, %"struct.std::__1::pair.939"*, %"class.std::__1::__compressed_pair.940" }
%"struct.std::__1::pair.939" = type opaque
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"struct.std::__1::pair.939"* }
%"class.base::flat_map.945" = type { %"class.base::internal::flat_tree.946" }
%"class.base::internal::flat_tree.946" = type { %"class.std::__1::vector.947" }
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"struct.std::__1::pair.949"*, %"struct.std::__1::pair.949"*, %"class.std::__1::__compressed_pair.950" }
%"struct.std::__1::pair.949" = type opaque
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::pair.949"* }
%"class.base::WeakPtr.955" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.956", %"class.std::__1::vector.963" }
%"class.std::__1::vector.956" = type { %"class.std::__1::__vector_base.957" }
%"class.std::__1::__vector_base.957" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.958" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"class.std::__1::vector.965"*, %"class.std::__1::vector.965"*, %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::vector.965" = type opaque
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.std::__1::vector.965"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection.971" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.972 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.973" }
%"class.absl::optional.973" = type { %"class.absl::optional_internal::optional_data.974" }
%"class.absl::optional_internal::optional_data.974" = type { %"class.absl::optional_internal::optional_data_base.975" }
%"class.absl::optional_internal::optional_data_base.975" = type { %"class.absl::optional_internal::optional_data_dtor_base.976" }
%"class.absl::optional_internal::optional_data_dtor_base.976" = type { i8, %union.anon.977 }
%union.anon.977 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%class.scoped_refptr.978 = type { %"class.cc::SyncedProperty.979"* }
%"class.cc::SyncedProperty.979" = type <{ %"class.base::RefCounted.980", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.982" = type { %"class.std::__1::__vector_base.983" }
%"class.std::__1::__vector_base.983" = type { %"class.std::__1::unique_ptr.984"*, %"class.std::__1::unique_ptr.984"*, %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::unique_ptr.984" = type { %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.997", %"class.std::__1::unique_ptr.1017", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.987" }
%"class.base::flat_map.987" = type { %"class.base::internal::flat_tree.988" }
%"class.base::internal::flat_tree.988" = type { %"class.std::__1::vector.989" }
%"class.std::__1::vector.989" = type { %"class.std::__1::__vector_base.990" }
%"class.std::__1::__vector_base.990" = type { %"struct.std::__1::pair.991"*, %"struct.std::__1::pair.991"*, %"class.std::__1::__compressed_pair.992" }
%"struct.std::__1::pair.991" = type opaque
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::pair.991"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.1000", %"class.std::__1::vector.1000", %"class.std::__1::vector.1007" }
%"class.std::__1::vector.1000" = type { %"class.std::__1::__vector_base.1001" }
%"class.std::__1::__vector_base.1001" = type { i8**, i8**, %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { i8** }
%"class.std::__1::vector.1007" = type { %"class.std::__1::__vector_base.1008" }
%"class.std::__1::__vector_base.1008" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.1009" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::unique_ptr.984"* }
%"class.std::__1::unordered_map.1031" = type { %"class.std::__1::__hash_table.1032" }
%"class.std::__1::__hash_table.1032" = type <{ %"class.std::__1::unique_ptr.1033", %"class.std::__1::__compressed_pair.1043", %"class.std::__1::__compressed_pair.1048", %"class.std::__1::__compressed_pair.1051", [4 x i8] }>
%"class.std::__1::unique_ptr.1033" = type { %"class.std::__1::__compressed_pair.1034" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035", %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %"struct.std::__1::__hash_node_base.1036"** }
%"struct.std::__1::__hash_node_base.1036" = type { %"struct.std::__1::__hash_node_base.1036"* }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.std::__1::__bucket_list_deallocator.1038" }
%"class.std::__1::__bucket_list_deallocator.1038" = type { %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"struct.std::__1::__hash_node_base.1036" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::internal::flat_tree.1055" = type { %"class.std::__1::vector.1056" }
%"class.std::__1::vector.1056" = type { %"class.std::__1::__vector_base.1057" }
%"class.std::__1::__vector_base.1057" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.1063" = type { %"class.std::__1::__hash_table.1064" }
%"class.std::__1::__hash_table.1064" = type <{ %"class.std::__1::unique_ptr.1065", %"class.std::__1::__compressed_pair.1075", %"class.std::__1::__compressed_pair.1080", %"class.std::__1::__compressed_pair.1083", [4 x i8] }>
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067", %"struct.std::__1::__compressed_pair_elem.1069" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.std::__1::__hash_node_base.1068"** }
%"struct.std::__1::__hash_node_base.1068" = type { %"struct.std::__1::__hash_node_base.1068"* }
%"struct.std::__1::__compressed_pair_elem.1069" = type { %"class.std::__1::__bucket_list_deallocator.1070" }
%"class.std::__1::__bucket_list_deallocator.1070" = type { %"class.std::__1::__compressed_pair.1071" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"struct.std::__1::__hash_node_base.1068" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.1087" = type { %"class.std::__1::__hash_table.1088" }
%"class.std::__1::__hash_table.1088" = type <{ %"class.std::__1::unique_ptr.1089", %"class.std::__1::__compressed_pair.1099", %"class.std::__1::__compressed_pair.1104", %"class.std::__1::__compressed_pair.1107", [4 x i8] }>
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091", %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"struct.std::__1::__hash_node_base.1092"** }
%"struct.std::__1::__hash_node_base.1092" = type { %"struct.std::__1::__hash_node_base.1092"* }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.std::__1::__bucket_list_deallocator.1094" }
%"class.std::__1::__bucket_list_deallocator.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"struct.std::__1::__hash_node_base.1092" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.1111" = type { %"class.std::__1::__hash_table.1112" }
%"class.std::__1::__hash_table.1112" = type <{ %"class.std::__1::unique_ptr.1113", %"class.std::__1::__compressed_pair.1123", %"class.std::__1::__compressed_pair.1128", %"class.std::__1::__compressed_pair.1131", [4 x i8] }>
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115", %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"struct.std::__1::__hash_node_base.1116"** }
%"struct.std::__1::__hash_node_base.1116" = type { %"struct.std::__1::__hash_node_base.1116"* }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.std::__1::__bucket_list_deallocator.1118" }
%"class.std::__1::__bucket_list_deallocator.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1116" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.base::flat_map.1135" = type { %"class.base::internal::flat_tree.1136" }
%"class.base::internal::flat_tree.1136" = type { %"class.std::__1::vector.1137" }
%"class.std::__1::vector.1137" = type { %"class.std::__1::__vector_base.1138" }
%"class.std::__1::__vector_base.1138" = type { %"struct.std::__1::pair.1139"*, %"struct.std::__1::pair.1139"*, %"class.std::__1::__compressed_pair.1140" }
%"struct.std::__1::pair.1139" = type opaque
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1141" }
%"struct.std::__1::__compressed_pair_elem.1141" = type { %"struct.std::__1::pair.1139"* }
%"class.std::__1::vector.1145" = type { %"class.std::__1::__vector_base.1146" }
%"class.std::__1::__vector_base.1146" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.1229" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.1147", %class.scoped_refptr.1155, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.1207", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.1212", %"class.base::flat_map.1219", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.997", %"class.std::__1::unique_ptr.1017", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.1150", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque.1192", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.1155, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"class.std::__1::unique_ptr.1152"*, %"class.std::__1::unique_ptr.1152"*, %"class.std::__1::__compressed_pair.1187" }
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.1155, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.1158", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.1158" = type { %"class.std::__1::__hash_table.1159" }
%"class.std::__1::__hash_table.1159" = type <{ %"class.std::__1::unique_ptr.1160", %"class.std::__1::__compressed_pair.1170", %"class.std::__1::__compressed_pair.1175", %"class.std::__1::__compressed_pair.1178", [4 x i8] }>
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162", %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"struct.std::__1::__hash_node_base.1163"** }
%"struct.std::__1::__hash_node_base.1163" = type { %"struct.std::__1::__hash_node_base.1163"* }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.std::__1::__bucket_list_deallocator.1165" }
%"class.std::__1::__bucket_list_deallocator.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"struct.std::__1::__hash_node_base.1163" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::__compressed_pair.1187" = type { %"struct.std::__1::__compressed_pair_elem.1188" }
%"struct.std::__1::__compressed_pair_elem.1188" = type { %"class.std::__1::unique_ptr.1152"* }
%"class.std::__1::deque.1192" = type { %"class.std::__1::__deque_base.1193" }
%"class.std::__1::__deque_base.1193" = type { %"struct.std::__1::__split_buffer.1194", i64, %"class.std::__1::__compressed_pair.1200" }
%"struct.std::__1::__split_buffer.1194" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.1195" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.1155 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1156", [4 x i8], i64, %class.scoped_refptr.1157, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.1156" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.1157 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.1207" = type { %"class.absl::optional_internal::optional_data.1208" }
%"class.absl::optional_internal::optional_data.1208" = type { %"class.absl::optional_internal::optional_data_base.1209" }
%"class.absl::optional_internal::optional_data_base.1209" = type { %"class.absl::optional_internal::optional_data_dtor_base.1210" }
%"class.absl::optional_internal::optional_data_dtor_base.1210" = type { i8, %union.anon.1211 }
%union.anon.1211 = type { %"class.gfx::Size" }
%"class.std::__1::vector.1212" = type { %"class.std::__1::__vector_base.1213" }
%"class.std::__1::__vector_base.1213" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.1214" }
%"class.std::__1::__compressed_pair.1214" = type { %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.1219" = type { %"class.base::internal::flat_tree.1220" }
%"class.base::internal::flat_tree.1220" = type { %"class.std::__1::vector.1221" }
%"class.std::__1::vector.1221" = type { %"class.std::__1::__vector_base.1222" }
%"class.std::__1::__vector_base.1222" = type { %"struct.std::__1::pair.1223"*, %"struct.std::__1::pair.1223"*, %"class.std::__1::__compressed_pair.1224" }
%"struct.std::__1::pair.1223" = type opaque
%"class.std::__1::__compressed_pair.1224" = type { %"struct.std::__1::__compressed_pair_elem.1225" }
%"struct.std::__1::__compressed_pair_elem.1225" = type { %"struct.std::__1::pair.1223"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.1234" = type { %"class.std::__1::vector.1145" }
%"class.base::internal::flat_tree.600" = type { %"class.std::__1::vector.601" }
%"class.std::__1::vector.601" = type { %"class.std::__1::__vector_base.602" }
%"class.std::__1::__vector_base.602" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.608" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.603", %"class.viz::SurfaceId" }
%"class.absl::optional.603" = type { %"class.absl::optional_internal::optional_data.604" }
%"class.absl::optional_internal::optional_data.604" = type { %"class.absl::optional_internal::optional_data_base.605" }
%"class.absl::optional_internal::optional_data_base.605" = type { %"class.absl::optional_internal::optional_data_dtor_base.606" }
%"class.absl::optional_internal::optional_data_dtor_base.606" = type { i8, %union.anon.607 }
%union.anon.607 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.viz::SurfaceRange"* }
%"class.std::__1::vector.1235" = type { %"class.std::__1::__vector_base.1236" }
%"class.std::__1::__vector_base.1236" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.std::__1::unique_ptr.118"*, %"class.std::__1::unique_ptr.118"*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.1295" }
%"class.std::__1::__compressed_pair.1295" = type { %"struct.std::__1::__compressed_pair_elem.1296" }
%"struct.std::__1::__compressed_pair_elem.1296" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::unique_ptr.118"* }
%"class.std::__1::vector.1242" = type { %"class.std::__1::__vector_base.1243" }
%"class.std::__1::__vector_base.1243" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.1244" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.1245" }
%"struct.std::__1::__compressed_pair_elem.1245" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.1249 = type { %"class.cc::SyncedProperty.1250"* }
%"class.cc::SyncedProperty.1250" = type <{ %"class.base::RefCounted.1251", %"class.cc::AdditionGroup.1252", %"class.cc::AdditionGroup.1252", %"class.cc::AdditionGroup.1252", %"class.cc::AdditionGroup.1252", %"class.cc::AdditionGroup.1252", i8, [3 x i8] }>
%"class.base::RefCounted.1251" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.1252" = type { float }
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.base::OnceCallback.637"*, %"class.base::OnceCallback.637"*, %"class.std::__1::__compressed_pair.638" }
%"class.base::OnceCallback.637" = type opaque
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.base::OnceCallback.637"* }
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.std::__1::unique_ptr.760"*, %"class.std::__1::unique_ptr.760"*, %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.1285" }
%"class.std::__1::__compressed_pair.1285" = type { %"struct.std::__1::__compressed_pair_elem.1286" }
%"struct.std::__1::__compressed_pair_elem.1286" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1287", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1287" = type { %"class.absl::optional_internal::optional_data.1288" }
%"class.absl::optional_internal::optional_data.1288" = type { %"class.absl::optional_internal::optional_data_base.1289" }
%"class.absl::optional_internal::optional_data_base.1289" = type { %"class.absl::optional_internal::optional_data_dtor_base.1290" }
%"class.absl::optional_internal::optional_data_dtor_base.1290" = type { i8, %union.anon.1291 }
%union.anon.1291 = type { i32 }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.std::__1::unique_ptr.760"* }
%"class.std::__1::unique_ptr.1260" = type { %"class.std::__1::__compressed_pair.1261" }
%"class.std::__1::__compressed_pair.1261" = type { %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.1266" = type { %"class.std::__1::__vector_base.1267" }
%"class.std::__1::__vector_base.1267" = type { %"class.std::__1::unique_ptr.1268"*, %"class.std::__1::unique_ptr.1268"*, %"class.std::__1::__compressed_pair.1269" }
%"class.std::__1::unique_ptr.1268" = type opaque
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"class.std::__1::unique_ptr.1268"* }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.std::__1::unique_ptr.1274" = type { %"class.std::__1::__compressed_pair.1275" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.1276" }
%"struct.std::__1::__compressed_pair_elem.1276" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"struct.cc::OcclusionTracker::StackObject"* }
%"struct.cc::EffectTreeLayerListIterator::Position" = type { i32, %"class.cc::LayerImpl"*, %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"* }
%class.SkMatrix = type { [9 x float], i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2cc16OcclusionTracker11StackObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPKNS1_17RenderSurfaceImplEEEEvDpOT_ = comdat any

@__const._ZN2cc16OcclusionTracker19LeaveToRenderTargetEPKNS_17RenderSurfaceImplE.surface_occlusion = private unnamed_addr constant %"class.cc::Occlusion" { %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, %"class.cc::SimpleEnclosedRegion" { %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } } }, %"class.cc::SimpleEnclosedRegion" { %"class.gfx::Rect" { %"class.gfx::Point" { i32 -1431655766, i32 -1431655766 }, %"class.gfx::Size" { i32 -1431655766, i32 -1431655766 } } } }, align 4
@__const._ZN2ccL34ScreenSpaceClipRectInTargetSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectE.inverse_screen_space_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4

@_ZN2cc16OcclusionTrackerC1ERKN3gfx4RectE = hidden unnamed_addr alias void (%"class.cc::OcclusionTracker"*, %"class.gfx::Rect"*), void (%"class.cc::OcclusionTracker"*, %"class.gfx::Rect"*)* @_ZN2cc16OcclusionTrackerC2ERKN3gfx4RectE
@_ZN2cc16OcclusionTrackerD1Ev = hidden unnamed_addr alias void (%"class.cc::OcclusionTracker"*), void (%"class.cc::OcclusionTracker"*)* @_ZN2cc16OcclusionTrackerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTrackerC2ERKN3gfx4RectE(%"class.cc::OcclusionTracker"* nocapture, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::OcclusionTracker"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  %4 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 1
  %5 = bitcast %"class.gfx::Rect"* %4 to i8*
  %6 = bitcast %"class.gfx::Rect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 16, i1 false)
  %7 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 2, i32 1
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTrackerD2Ev(%"class.cc::OcclusionTracker"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %2, align 8
  %4 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %3, null
  br i1 %4, label %21, label %5

5:                                                ; preds = %1
  %6 = bitcast %"struct.cc::OcclusionTracker::StackObject"* %3 to i8*
  %7 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %7, align 8
  %9 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %8, %3
  br i1 %9, label %19, label %10

10:                                               ; preds = %5, %10
  %11 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %12, %10 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %11, i64 -1
  %13 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %11, i64 -1, i32 2
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %13) #9
  %14 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %11, i64 -1, i32 1
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %14) #9
  %15 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %12, %3
  br i1 %15, label %16, label %10

16:                                               ; preds = %10
  %17 = bitcast %"class.cc::OcclusionTracker"* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %5
  %20 = phi i8* [ %18, %16 ], [ %6, %5 ]
  store %"struct.cc::OcclusionTracker::StackObject"* %3, %"struct.cc::OcclusionTracker::StackObject"** %7, align 8
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16OcclusionTracker27GetCurrentOcclusionForLayerERKN3gfx9TransformE(%"class.cc::Occlusion"* noalias sret, %"class.cc::OcclusionTracker"* nocapture readonly, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %4, align 8
  %6 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %5, i64 -1, i32 1
  %7 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %5, i64 -1, i32 2
  tail call void @_ZN2cc9OcclusionC1ERKN3gfx9TransformERKNS_20SimpleEnclosedRegionES7_(%"class.cc::Occlusion"* %0, %"class.gfx::Transform"* dereferenceable(68) %2, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %6, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc9OcclusionC1ERKN3gfx9TransformERKNS_20SimpleEnclosedRegionES7_(%"class.cc::Occlusion"*, %"class.gfx::Transform"* dereferenceable(68), %"class.cc::SimpleEnclosedRegion"* dereferenceable(16), %"class.cc::SimpleEnclosedRegion"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16OcclusionTracker41GetCurrentOcclusionForContributingSurfaceERKN3gfx9TransformE(%"class.cc::Occlusion"* noalias sret, %"class.cc::OcclusionTracker"* nocapture readonly, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.cc::OcclusionTracker"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 48
  %11 = icmp ult i64 %10, 2
  %12 = inttoptr i64 %8 to %"struct.cc::OcclusionTracker::StackObject"*
  br i1 %11, label %18, label %13

13:                                               ; preds = %3
  %14 = inttoptr i64 %6 to %"struct.cc::OcclusionTracker::StackObject"*
  %15 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %14, i64 -1, i32 3
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %13, %3
  tail call void @_ZN2cc9OcclusionC1Ev(%"class.cc::Occlusion"* %0) #9
  br label %23

19:                                               ; preds = %13
  %20 = add nsw i64 %10, -2
  %21 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %12, i64 %20, i32 1
  %22 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %12, i64 %20, i32 2
  tail call void @_ZN2cc9OcclusionC1ERKN3gfx9TransformERKNS_20SimpleEnclosedRegionES7_(%"class.cc::Occlusion"* %0, %"class.gfx::Transform"* dereferenceable(68) %2, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %21, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %22) #9
  br label %23

23:                                               ; preds = %19, %18
  ret void
}

declare void @_ZN2cc9OcclusionC1Ev(%"class.cc::Occlusion"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.cc::RenderSurfaceImpl"* @_ZNK2cc16OcclusionTracker38OcclusionSurfaceForContributingSurfaceEv(%"class.cc::OcclusionTracker"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.cc::OcclusionTracker"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 48
  %9 = icmp ult i64 %8, 2
  %10 = inttoptr i64 %6 to %"struct.cc::OcclusionTracker::StackObject"*
  br i1 %9, label %20, label %11

11:                                               ; preds = %1
  %12 = inttoptr i64 %4 to %"struct.cc::OcclusionTracker::StackObject"*
  %13 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %12, i64 -1, i32 3
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = add nsw i64 %8, -2
  %18 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %10, i64 %17, i32 0
  %19 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %18, align 8
  br label %20

20:                                               ; preds = %1, %11, %16
  %21 = phi %"class.cc::RenderSurfaceImpl"* [ %19, %16 ], [ null, %11 ], [ null, %1 ]
  ret %"class.cc::RenderSurfaceImpl"* %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker10EnterLayerERKNS_27EffectTreeLayerListIterator8PositionE(%"class.cc::OcclusionTracker"*, %"struct.cc::EffectTreeLayerListIterator::Position"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectTreeLayerListIterator::Position", %"struct.cc::EffectTreeLayerListIterator::Position"* %1, i64 0, i32 3
  %4 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %3, align 8
  %5 = getelementptr inbounds %"struct.cc::EffectTreeLayerListIterator::Position", %"struct.cc::EffectTreeLayerListIterator::Position"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %9 [
    i32 0, label %7
    i32 1, label %8
  ]

7:                                                ; preds = %2
  tail call void @_ZN2cc16OcclusionTracker17EnterRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"* %0, %"class.cc::RenderSurfaceImpl"* %4)
  br label %9

8:                                                ; preds = %2
  tail call void @_ZN2cc16OcclusionTracker20FinishedRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"* %0, %"class.cc::RenderSurfaceImpl"* %4)
  br label %9

9:                                                ; preds = %2, %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker17EnterRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"*, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::RenderSurfaceImpl"*, align 8
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %9 = alloca %"class.gfx::Rect", align 4
  store %"class.cc::RenderSurfaceImpl"* %1, %"class.cc::RenderSurfaceImpl"** %3, align 8
  %10 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %13, align 8
  %15 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %12, %14
  %16 = ptrtoint %"class.cc::RenderSurfaceImpl"* %1 to i64
  br i1 %15, label %24, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %14, i64 -1, i32 0
  %19 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %18, align 8
  %20 = icmp eq %"class.cc::RenderSurfaceImpl"* %19, %1
  br i1 %20, label %89, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %19, i64 0, i32 9
  %23 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %22, align 8
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi %"class.cc::RenderSurfaceImpl"* [ %23, %21 ], [ null, %2 ]
  %26 = phi %"class.cc::RenderSurfaceImpl"* [ %19, %21 ], [ null, %2 ]
  %27 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 9
  %28 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %29, align 8
  %31 = icmp ult %"struct.cc::OcclusionTracker::StackObject"* %14, %30
  br i1 %31, label %32, label %39

32:                                               ; preds = %24
  %33 = bitcast %"struct.cc::OcclusionTracker::StackObject"* %14 to i64*
  store i64 %16, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %14, i64 0, i32 1
  %35 = bitcast %"class.cc::SimpleEnclosedRegion"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 33, i1 false) #9
  %36 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %14, i64 1
  %37 = ptrtoint %"struct.cc::OcclusionTracker::StackObject"* %36 to i64
  %38 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %13 to i64*
  store i64 %37, i64* %38, align 8
  br label %41

39:                                               ; preds = %24
  call void @_ZNSt3__16vectorIN2cc16OcclusionTracker11StackObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPKNS1_17RenderSurfaceImplEEEEvDpOT_(%"class.std::__1::vector"* %10, %"class.cc::RenderSurfaceImpl"** nonnull dereferenceable(8) %3) #9
  %40 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %13 to i64*
  br label %41

41:                                               ; preds = %32, %39
  %42 = phi i64* [ %38, %32 ], [ %40, %39 ]
  %43 = icmp ne %"class.cc::RenderSurfaceImpl"* %28, null
  %44 = icmp ne %"class.cc::RenderSurfaceImpl"* %28, %25
  %45 = and i1 %44, %43
  %46 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %46) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2ccL34ScreenSpaceClipRectInTargetSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectE.inverse_screen_space_transform to i8*), i64 68, i1 false)
  %47 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %3, align 8
  %48 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %47, i64 0, i32 4, i32 2
  %49 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %48, %"class.gfx::Transform"* nonnull %4) #9
  %50 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %3, align 8
  %51 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %50) #9
  %52 = load i64, i64* %42, align 8
  %53 = bitcast %"class.cc::OcclusionTracker"* %0 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %52, %54
  %56 = sdiv exact i64 %55, 48
  %57 = icmp ult i64 %56, 2
  %58 = or i1 %45, %57
  %59 = inttoptr i64 %52 to %"struct.cc::OcclusionTracker::StackObject"*
  br i1 %58, label %64, label %60

60:                                               ; preds = %41
  %61 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %3, align 8
  %62 = icmp ne %"class.cc::RenderSurfaceImpl"* %51, %61
  %63 = and i1 %49, %62
  br i1 %63, label %66, label %64

64:                                               ; preds = %41, %60
  %65 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %59, i64 -1, i32 3
  store i8 1, i8* %65, align 8
  br label %88

66:                                               ; preds = %60
  %67 = add nsw i64 %56, -1
  %68 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %68) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %68, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2ccL34ScreenSpaceClipRectInTargetSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectE.inverse_screen_space_transform to i8*), i64 68, i1 false)
  %69 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0
  %70 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %4, i64 0, i32 0
  %71 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %26, i64 0, i32 4, i32 2, i32 0
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* nonnull %69, %class.SkMatrix44* nonnull dereferenceable(68) %70, %class.SkMatrix44* dereferenceable(68) %71) #9
  %72 = bitcast %"class.cc::SimpleEnclosedRegion"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = add nsw i64 %56, -2
  %74 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %11, align 8
  %75 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %74, i64 %73, i32 1
  %76 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #9
  %77 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %77, i8 0, i64 16, i1 false)
  call fastcc void @_ZN2ccL28TransformSurfaceOpaqueRegionERKNS_20SimpleEnclosedRegionEbRKN3gfx4RectERKNS3_9TransformE(%"class.cc::SimpleEnclosedRegion"* nonnull sret %6, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %75, i1 zeroext false, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"class.gfx::Transform"* nonnull dereferenceable(68) %5)
  %78 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %11, align 8
  %79 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %78, i64 %67, i32 1
  %80 = bitcast %"class.cc::SimpleEnclosedRegion"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %72, i64 16, i1 false) #9
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  %81 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %11, align 8
  %82 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %81, i64 %67, i32 1
  %83 = bitcast %"class.cc::SimpleEnclosedRegion"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  %84 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %81, i64 %73, i32 2
  %85 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #9
  %86 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %86, i8 0, i64 16, i1 false)
  call fastcc void @_ZN2ccL28TransformSurfaceOpaqueRegionERKNS_20SimpleEnclosedRegionEbRKN3gfx4RectERKNS3_9TransformE(%"class.cc::SimpleEnclosedRegion"* nonnull sret %8, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %84, i1 zeroext false, %"class.gfx::Rect"* nonnull dereferenceable(16) %9, %"class.gfx::Transform"* nonnull dereferenceable(68) %5)
  %87 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %8, i64 0, i32 0
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %82, %"class.gfx::Rect"* nonnull dereferenceable(16) %87) #9
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %68) #9
  br label %88

88:                                               ; preds = %66, %64
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %46) #9
  br label %89

89:                                               ; preds = %17, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker20FinishedRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"*, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2cc16OcclusionTracker17EnterRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"* %0, %"class.cc::RenderSurfaceImpl"* %1)
  %3 = tail call %"struct.cc::EffectNode"* @_ZNK2cc17RenderSurfaceImpl16OwningEffectNodeEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  %4 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %3, i64 0, i32 4
  %5 = load float, float* %4, align 4
  %6 = fcmp oeq float %5, 0.000000e+00
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZNK2cc17RenderSurfaceImpl20CopyOfOutputRequiredEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  br label %9

9:                                                ; preds = %7, %2
  %10 = phi i1 [ false, %2 ], [ %8, %7 ]
  %11 = tail call zeroext i1 @_ZNK2cc17RenderSurfaceImpl29HasMaskingContributingSurfaceEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  br i1 %11, label %35, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %1, i64 0, i32 4, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp olt float %14, 1.000000e+00
  br i1 %15, label %35, label %16

16:                                               ; preds = %12
  %17 = tail call i32 @_ZNK2cc17RenderSurfaceImpl9BlendModeEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  %18 = or i32 %17, 2
  %19 = icmp ne i32 %18, 3
  %20 = or i1 %10, %19
  br i1 %20, label %35, label %21

21:                                               ; preds = %16
  %22 = tail call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  %23 = tail call zeroext i1 @_ZNK2cc16FilterOperations27HasFilterThatAffectsOpacityEv(%"class.cc::FilterOperations"* %22) #9
  br i1 %23, label %35, label %24

24:                                               ; preds = %21
  %25 = tail call dereferenceable(32) %"class.cc::DocumentTransitionSharedElementId"* @_ZNK2cc17RenderSurfaceImpl36GetDocumentTransitionSharedElementIdEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  %26 = getelementptr inbounds %"class.cc::DocumentTransitionSharedElementId", %"class.cc::DocumentTransitionSharedElementId"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %43, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.cc::DocumentTransitionSharedElementId", %"class.cc::DocumentTransitionSharedElementId"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.cc::DocumentTransitionSharedElementId", %"class.cc::DocumentTransitionSharedElementId"* %25, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %31, %33
  br i1 %34, label %43, label %35

35:                                               ; preds = %29, %16, %21, %12, %9
  %36 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %37 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %36, align 8
  %38 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %37, i64 -1, i32 1
  %39 = bitcast %"class.cc::SimpleEnclosedRegion"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 16, i1 false) #9
  %40 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %36, align 8
  %41 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %40, i64 -1, i32 2
  %42 = bitcast %"class.cc::SimpleEnclosedRegion"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 16, i1 false) #9
  br label %43

43:                                               ; preds = %29, %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker10LeaveLayerERKNS_27EffectTreeLayerListIterator8PositionE(%"class.cc::OcclusionTracker"*, %"struct.cc::EffectTreeLayerListIterator::Position"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::EffectTreeLayerListIterator::Position", %"struct.cc::EffectTreeLayerListIterator::Position"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 0, label %5
    i32 2, label %8
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.cc::EffectTreeLayerListIterator::Position", %"struct.cc::EffectTreeLayerListIterator::Position"* %1, i64 0, i32 1
  %7 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %6, align 8
  tail call void @_ZN2cc16OcclusionTracker23MarkOccludedBehindLayerEPKNS_9LayerImplE(%"class.cc::OcclusionTracker"* %0, %"class.cc::LayerImpl"* %7)
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.cc::EffectTreeLayerListIterator::Position", %"struct.cc::EffectTreeLayerListIterator::Position"* %1, i64 0, i32 3
  %10 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %9, align 8
  tail call void @_ZN2cc16OcclusionTracker19LeaveToRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"* %0, %"class.cc::RenderSurfaceImpl"* %10)
  br label %11

11:                                               ; preds = %2, %8, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker23MarkOccludedBehindLayerEPKNS_9LayerImplE(%"class.cc::OcclusionTracker"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca { i64, i64 }, align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.gfx::Rect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %14 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 3
  %15 = load float, float* %14, align 4
  %16 = fcmp olt float %15, 1.000000e+00
  br i1 %16, label %155, label %17

17:                                               ; preds = %2
  %18 = tail call i32 @_ZNK2cc9LayerImpl19GetSortingContextIdEv(%"class.cc::LayerImpl"* %1) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %155

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 10, i32 0
  %22 = tail call i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"* %21) #9
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %155

24:                                               ; preds = %20
  %25 = bitcast %"class.cc::SimpleEnclosedRegion"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #9
  %26 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %4, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %4, i64 0, i32 0, i32 1, i32 1
  %28 = bitcast %"class.cc::LayerImpl"* %1 to void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)***
  %29 = bitcast %"class.cc::SimpleEnclosedRegion"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 -86, i64 16, i1 false)
  %30 = load void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)**, void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)*** %28, align 8
  %31 = getelementptr inbounds void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)** %30, i64 10
  %32 = load void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)*, void (%"class.cc::SimpleEnclosedRegion"*, %"class.cc::LayerImpl"*)** %31, align 8
  call void %32(%"class.cc::SimpleEnclosedRegion"* nonnull sret %4, %"class.cc::LayerImpl"* %1) #9
  %33 = load i32, i32* %26, align 4
  %34 = icmp eq i32 %33, 0
  %35 = load i32, i32* %27, align 4
  %36 = icmp eq i32 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %154, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 18
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %49

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 3
  %44 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %44, i64 0, i32 5, i32 4, i32 0, i32 1, i32 0, i32 0
  %47 = load %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"** %46, align 8
  %48 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %47, i64 %45
  br label %49

49:                                               ; preds = %38, %42
  %50 = phi %"struct.cc::EffectNode"* [ %48, %42 ], [ null, %38 ]
  %51 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %50, i64 0, i32 17
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"struct.cc::EffectNode", %"struct.cc::EffectNode"* %50, i64 0, i32 12
  %56 = load i32, i32* %55, align 4
  %57 = or i32 %56, 2
  %58 = icmp eq i32 %57, 3
  br i1 %58, label %59, label %154

59:                                               ; preds = %49, %54
  %60 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %60) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2ccL34ScreenSpaceClipRectInTargetSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectE.inverse_screen_space_transform to i8*), i64 68, i1 false)
  call void @_ZNK2cc9LayerImpl13DrawTransformEv(%"class.gfx::Transform"* nonnull sret %5, %"class.cc::LayerImpl"* %1) #9
  %61 = call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nonnull %5) #9
  br i1 %61, label %62, label %153

62:                                               ; preds = %59
  %63 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  %64 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %65 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  %66 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %1) #9
  %67 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %67) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %67, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2ccL34ScreenSpaceClipRectInTargetSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectE.inverse_screen_space_transform to i8*), i64 68, i1 false) #9
  %68 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %66, i64 0, i32 4, i32 2
  %69 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* %68, %"class.gfx::Transform"* nonnull %3) #9
  br i1 %69, label %77, label %70

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %66, i64 0, i32 4, i32 3
  %72 = bitcast %"class.gfx::Rect"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %66, i64 0, i32 4, i32 3, i32 1
  %75 = bitcast %"class.gfx::Size"* %74 to i64*
  %76 = load i64, i64* %75, align 4
  br label %82

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 1
  %79 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %3, %"class.gfx::Rect"* dereferenceable(16) %78) #9
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = extractvalue { i64, i64 } %79, 1
  br label %82

82:                                               ; preds = %70, %77
  %83 = phi i64 [ %80, %77 ], [ %73, %70 ]
  %84 = phi i64 [ %81, %77 ], [ %76, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %67) #9
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %83, i64* %85, align 8
  store i64 %84, i64* %64, align 8
  %86 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 5
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %82
  %90 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9
  %91 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 9
  %92 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 25, i32 9, i32 1
  br label %98

93:                                               ; preds = %82
  %94 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #9
  %95 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"* %1) #9
  %96 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %95, i64 0, i32 4, i32 3
  %97 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %95, i64 0, i32 4, i32 3, i32 1
  br label %98

98:                                               ; preds = %93, %89
  %99 = phi %"class.gfx::Size"* [ %97, %93 ], [ %92, %89 ]
  %100 = phi { i64, i64 }* [ %9, %93 ], [ %8, %89 ]
  %101 = phi %"class.gfx::Rect"* [ %96, %93 ], [ %91, %89 ]
  %102 = phi i8* [ %94, %93 ], [ %90, %89 ]
  %103 = bitcast %"class.gfx::Rect"* %101 to i64*
  %104 = bitcast { i64, i64 }* %100 to %"class.gfx::Rect"*
  %105 = load i64, i64* %103, align 4
  %106 = bitcast %"class.gfx::Size"* %99 to i64*
  %107 = load i64, i64* %106, align 4
  %108 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %100, i64 0, i32 0
  store i64 %105, i64* %108, align 8
  %109 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %100, i64 0, i32 1
  store i64 %107, i64* %109, align 8
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %104) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #9
  %110 = bitcast { i64, i64 }* %10 to i8*
  %111 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %112 = bitcast i64* %111 to i32*
  %113 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %114 = bitcast { i64, i64 }* %12 to i8*
  %115 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %116 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %118 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 2, i32 0
  %119 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 2, i32 1
  %120 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %121 = bitcast { i64, i64 }* %10 to i8*
  br label %122

122:                                              ; preds = %151, %98
  %123 = phi i64 [ 0, %98 ], [ %152, %151 ]
  %124 = load i32, i32* %26, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %126

126:                                              ; preds = %122
  %127 = load i32, i32* %27, align 4
  %128 = icmp ne i32 %127, 0
  %129 = zext i1 %128 to i64
  br label %130

130:                                              ; preds = %122, %126
  %131 = phi i64 [ 0, %122 ], [ %129, %126 ]
  %132 = icmp ult i64 %123, %131
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  br label %153

134:                                              ; preds = %130
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #9
  %135 = call { i64, i64 } @_ZNK2cc20SimpleEnclosedRegion7GetRectEm(%"class.cc::SimpleEnclosedRegion"* nonnull %4, i64 %123) #9
  %136 = extractvalue { i64, i64 } %135, 0
  store i64 %136, i64* %115, align 8
  %137 = extractvalue { i64, i64 } %135, 1
  store i64 %137, i64* %116, align 8
  %138 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #9
  %139 = extractvalue { i64, i64 } %138, 0
  store i64 %139, i64* %117, align 8
  %140 = extractvalue { i64, i64 } %138, 1
  store i64 %140, i64* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #9
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #9
  %141 = load i32, i32* %112, align 8
  %142 = load i32, i32* %118, align 4
  %143 = icmp slt i32 %141, %142
  br i1 %143, label %144, label %148

144:                                              ; preds = %134
  %145 = load i32, i32* %113, align 4
  %146 = load i32, i32* %119, align 4
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %151, label %148

148:                                              ; preds = %144, %134
  %149 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %120, align 8
  %150 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %149, i64 -1, i32 2
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %150, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #9
  br label %151

151:                                              ; preds = %144, %148
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #9
  %152 = add nuw nsw i64 %123, 1
  br label %122

153:                                              ; preds = %59, %133
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %60) #9
  br label %154

154:                                              ; preds = %24, %153, %54
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #9
  br label %155

155:                                              ; preds = %17, %20, %2, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16OcclusionTracker19LeaveToRenderTargetEPKNS_17RenderSurfaceImplE(%"class.cc::OcclusionTracker"* nocapture, %"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.gfx::Rect"*
  %6 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %7 = alloca %"class.gfx::Rect", align 4
  %8 = alloca %"class.gfx::Rect", align 8
  %9 = alloca %"class.cc::Occlusion", align 4
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"class.gfx::Rect"*
  %12 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.cc::OcclusionTracker"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 48
  %19 = add nsw i64 %18, -1
  %20 = icmp ugt i64 %18, 1
  %21 = inttoptr i64 %16 to %"struct.cc::OcclusionTracker::StackObject"*
  br i1 %20, label %22, label %27

22:                                               ; preds = %2
  %23 = add nsw i64 %18, -2
  %24 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %21, i64 %23, i32 0
  %25 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %24, align 8
  %26 = icmp eq %"class.cc::RenderSurfaceImpl"* %25, %1
  br label %27

27:                                               ; preds = %22, %2
  %28 = phi i1 [ false, %2 ], [ %26, %22 ]
  %29 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %21, i64 %19, i32 0
  %31 = load %"class.cc::RenderSurfaceImpl"*, %"class.cc::RenderSurfaceImpl"** %30, align 8
  %32 = bitcast %"class.cc::SimpleEnclosedRegion"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %21, i64 %19, i32 2
  %34 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 4, i32 5
  %35 = bitcast %"class.cc::SimpleEnclosedRegion"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 -86, i64 16, i1 false)
  %36 = load i8, i8* %34, align 4
  %37 = and i8 %36, 1
  %38 = icmp ne i8 %37, 0
  %39 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #9
  %40 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 4, i32 4
  %41 = bitcast %"class.gfx::Rect"* %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 4
  store <2 x i64> %42, <2 x i64>* %4, align 16
  %43 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 4, i32 1
  call fastcc void @_ZN2ccL28TransformSurfaceOpaqueRegionERKNS_20SimpleEnclosedRegionEbRKN3gfx4RectERKNS3_9TransformE(%"class.cc::SimpleEnclosedRegion"* nonnull sret %3, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %33, i1 zeroext %38, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, %"class.gfx::Transform"* dereferenceable(68) %43)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #9
  %44 = bitcast %"class.cc::SimpleEnclosedRegion"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9
  %45 = bitcast %"class.cc::SimpleEnclosedRegion"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 -86, i64 16, i1 false)
  %46 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %29, align 8
  %47 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %46, i64 %19, i32 1
  %48 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #9
  %49 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %49, i8 0, i64 16, i1 false)
  call fastcc void @_ZN2ccL28TransformSurfaceOpaqueRegionERKNS_20SimpleEnclosedRegionEbRKN3gfx4RectERKNS3_9TransformE(%"class.cc::SimpleEnclosedRegion"* nonnull sret %6, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %47, i1 zeroext false, %"class.gfx::Rect"* nonnull dereferenceable(16) %7, %"class.gfx::Transform"* dereferenceable(68) %43)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #9
  %50 = bitcast %"class.gfx::Rect"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #9
  %51 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %31) #9
  %52 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %51) #9
  br i1 %52, label %53, label %84

53:                                               ; preds = %27
  %54 = bitcast %"class.cc::Occlusion"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %54) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* align 4 bitcast (%"class.cc::Occlusion"* @__const._ZN2cc16OcclusionTracker19LeaveToRenderTargetEPKNS_17RenderSurfaceImplE.surface_occlusion to i8*), i64 100, i1 false)
  %55 = load i64, i64* %13, align 8, !noalias !3
  %56 = load i64, i64* %15, align 8, !noalias !3
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 48
  %59 = icmp ult i64 %58, 2
  %60 = inttoptr i64 %56 to %"struct.cc::OcclusionTracker::StackObject"*
  br i1 %59, label %66, label %61

61:                                               ; preds = %53
  %62 = inttoptr i64 %55 to %"struct.cc::OcclusionTracker::StackObject"*
  %63 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %62, i64 -1, i32 3
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %61, %53
  call void @_ZN2cc9OcclusionC1Ev(%"class.cc::Occlusion"* nonnull %9) #9
  br label %71

67:                                               ; preds = %61
  %68 = add nsw i64 %58, -2
  %69 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %60, i64 %68, i32 1
  %70 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %60, i64 %68, i32 2
  call void @_ZN2cc9OcclusionC1ERKN3gfx9TransformERKNS_20SimpleEnclosedRegionES7_(%"class.cc::Occlusion"* nonnull %9, %"class.gfx::Transform"* dereferenceable(68) %43, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %69, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16) %70) #9
  br label %71

71:                                               ; preds = %66, %67
  %72 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %31, i64 0, i32 4, i32 3
  %74 = bitcast %"class.gfx::Rect"* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 4
  store <2 x i64> %75, <2 x i64>* %10, align 16
  %76 = call { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"* nonnull %9, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #9
  %77 = extractvalue { i64, i64 } %76, 0
  %78 = extractvalue { i64, i64 } %76, 1
  %79 = bitcast %"class.gfx::Rect"* %8 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %8, i64 0, i32 1
  %81 = bitcast %"class.gfx::Size"* %80 to i64*
  store i64 %78, i64* %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #9
  %82 = getelementptr inbounds %"class.cc::Occlusion", %"class.cc::Occlusion"* %9, i64 0, i32 2
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %82) #9
  %83 = getelementptr inbounds %"class.cc::Occlusion", %"class.cc::Occlusion"* %9, i64 0, i32 1
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %83) #9
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %54) #9
  br label %84

84:                                               ; preds = %71, %27
  %85 = call %"class.cc::RenderSurfaceImpl"* @_ZNK2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"* %1) #9
  %86 = icmp eq %"class.cc::RenderSurfaceImpl"* %85, %1
  br i1 %28, label %87, label %101

87:                                               ; preds = %84
  %88 = add nsw i64 %18, -2
  %89 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %29, align 8
  %90 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %89, i64 %88, i32 2
  %91 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %3, i64 0, i32 0
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %90, %"class.gfx::Rect"* nonnull dereferenceable(16) %91) #9
  br i1 %86, label %96, label %92

92:                                               ; preds = %87
  %93 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %29, align 8
  %94 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %93, i64 %88, i32 1
  %95 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %6, i64 0, i32 0
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %94, %"class.gfx::Rect"* nonnull dereferenceable(16) %95) #9
  br label %96

96:                                               ; preds = %92, %87
  %97 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %98 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %97, i64 -1, i32 2
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %98) #9
  %99 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %97, i64 -1, i32 1
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %99) #9
  %100 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %97, i64 -1
  store %"struct.cc::OcclusionTracker::StackObject"* %100, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  br label %112

101:                                              ; preds = %84
  %102 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %103 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %102, i64 -1, i32 0
  store %"class.cc::RenderSurfaceImpl"* %1, %"class.cc::RenderSurfaceImpl"** %103, align 8
  %104 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %105 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %104, i64 -1, i32 2
  %106 = bitcast %"class.cc::SimpleEnclosedRegion"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* nonnull align 4 %32, i64 16, i1 false) #9
  %107 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %108 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %107, i64 -1, i32 1
  %109 = bitcast %"class.cc::SimpleEnclosedRegion"* %108 to i8*
  br i1 %86, label %111, label %110

110:                                              ; preds = %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* nonnull align 4 %44, i64 16, i1 false) #9
  br label %112

111:                                              ; preds = %101
  call void @llvm.memset.p0i8.i64(i8* align 4 %109, i8 0, i64 16, i1 false) #9
  br label %112

112:                                              ; preds = %110, %111, %96
  %113 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %31) #9
  %114 = call zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"* %113) #9
  br i1 %114, label %115, label %120

115:                                              ; preds = %112
  %116 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %117 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %116, i64 -1, i32 2
  call fastcc void @_ZN2ccL27ReduceOcclusionBelowSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectERKNS3_9TransformEPNS_20SimpleEnclosedRegionE(%"class.cc::RenderSurfaceImpl"* %31, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Transform"* dereferenceable(68) %43, %"class.cc::SimpleEnclosedRegion"* %117)
  %118 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %12, align 8
  %119 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %118, i64 -1, i32 1
  call fastcc void @_ZN2ccL27ReduceOcclusionBelowSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectERKNS3_9TransformEPNS_20SimpleEnclosedRegionE(%"class.cc::RenderSurfaceImpl"* %31, %"class.gfx::Rect"* nonnull dereferenceable(16) %8, %"class.gfx::Transform"* dereferenceable(68) %43, %"class.cc::SimpleEnclosedRegion"* %119)
  br label %120

120:                                              ; preds = %112, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #9
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9
  ret void
}

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #2

declare %"class.cc::RenderSurfaceImpl"* @_ZNK2cc17RenderSurfaceImpl13render_targetEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ccL28TransformSurfaceOpaqueRegionERKNS_20SimpleEnclosedRegionEbRKN3gfx4RectERKNS3_9TransformE(%"class.cc::SimpleEnclosedRegion"* noalias nocapture sret, %"class.cc::SimpleEnclosedRegion"* dereferenceable(16), i1 zeroext, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68)) unnamed_addr #0 {
  %6 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %1, i64 0, i32 0, i32 1, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %5, %14
  %19 = bitcast %"class.cc::SimpleEnclosedRegion"* %0 to i8*
  %20 = bitcast %"class.cc::SimpleEnclosedRegion"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 16, i1 false) #9
  br label %57

21:                                               ; preds = %14
  %22 = tail call zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* %4) #9
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.cc::SimpleEnclosedRegion"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 16, i1 false) #9
  br label %57

25:                                               ; preds = %21
  %26 = bitcast %"class.cc::SimpleEnclosedRegion"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 0, i64 16, i1 false) #9
  %27 = bitcast { i64, i64 }* %7 to i8*
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %29 = bitcast { i64, i64 }* %9 to i8*
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %33 = bitcast { i64, i64 }* %7 to i8*
  br label %34

34:                                               ; preds = %55, %25
  %35 = phi i64 [ 0, %25 ], [ %56, %55 ]
  %36 = load i32, i32* %11, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  %39 = load i32, i32* %15, align 4
  %40 = icmp ne i32 %39, 0
  %41 = zext i1 %40 to i64
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi i64 [ 0, %34 ], [ %41, %38 ]
  %44 = icmp ult i64 %35, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.cc::SimpleEnclosedRegion"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 4 %26, i64 16, i1 false) #9
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #9
  br label %57

47:                                               ; preds = %42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  %48 = call { i64, i64 } @_ZNK2cc20SimpleEnclosedRegion7GetRectEm(%"class.cc::SimpleEnclosedRegion"* %1, i64 %35) #9
  %49 = extractvalue { i64, i64 } %48, 0
  store i64 %49, i64* %30, align 8
  %50 = extractvalue { i64, i64 } %48, 1
  store i64 %50, i64* %31, align 8
  %51 = call { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #9
  %52 = extractvalue { i64, i64 } %51, 0
  store i64 %52, i64* %32, align 8
  %53 = extractvalue { i64, i64 } %51, 1
  store i64 %53, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  br i1 %2, label %54, label %55

54:                                               ; preds = %47
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %8, %"class.gfx::Rect"* dereferenceable(16) %3) #9
  br label %55

55:                                               ; preds = %54, %47
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* nonnull %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #9
  %56 = add nuw nsw i64 %35, 1
  br label %34

57:                                               ; preds = %45, %23, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"*) unnamed_addr #4

declare %"struct.cc::EffectNode"* @_ZNK2cc17RenderSurfaceImpl16OwningEffectNodeEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc17RenderSurfaceImpl20CopyOfOutputRequiredEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc17RenderSurfaceImpl29HasMaskingContributingSurfaceEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare i32 @_ZNK2cc17RenderSurfaceImpl9BlendModeEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl7FiltersEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations27HasFilterThatAffectsOpacityEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare dereferenceable(32) %"class.cc::DocumentTransitionSharedElementId"* @_ZNK2cc17RenderSurfaceImpl36GetDocumentTransitionSharedElementIdEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations24HasFilterThatMovesPixelsEv(%"class.cc::FilterOperations"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2cc9Occlusion24GetUnoccludedContentRectERKN3gfx4RectE(%"class.cc::Occlusion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2ccL27ReduceOcclusionBelowSurfaceEPKNS_17RenderSurfaceImplERKN3gfx4RectERKNS3_9TransformEPNS_20SimpleEnclosedRegionE(%"class.cc::RenderSurfaceImpl"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Transform"* dereferenceable(68), %"class.cc::SimpleEnclosedRegion"*) unnamed_addr #0 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %"class.gfx::Rect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Rect"*
  %11 = alloca %"class.cc::SimpleEnclosedRegion", align 4
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.gfx::Rect"*
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %142, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %142, label %21

21:                                               ; preds = %17
  %22 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #9
  %23 = bitcast { i64, i64 }* %5 to i32*
  %24 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %26 = bitcast i64* %25 to i32*
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %28 = tail call { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68) %2, %"class.gfx::Rect"* dereferenceable(16) %1) #9
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %30 = extractvalue { i64, i64 } %28, 0
  store i64 %30, i64* %29, align 8
  %31 = extractvalue { i64, i64 } %28, 1
  store i64 %31, i64* %25, align 8
  %32 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 5
  %33 = load i8, i8* %32, align 4
  %34 = and i8 %33, 1
  %35 = icmp eq i8 %34, 0
  %36 = trunc i64 %31 to i32
  %37 = lshr i64 %31, 32
  %38 = trunc i64 %37 to i32
  br i1 %35, label %46, label %39

39:                                               ; preds = %21
  %40 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.cc::RenderSurfaceImpl", %"class.cc::RenderSurfaceImpl"* %0, i64 0, i32 4, i32 4
  %42 = bitcast %"class.gfx::Rect"* %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 4
  store <2 x i64> %43, <2 x i64>* %7, align 16
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #9
  %44 = load i32, i32* %26, align 8
  %45 = load i32, i32* %27, align 4
  br label %46

46:                                               ; preds = %21, %39
  %47 = phi i32 [ %38, %21 ], [ %45, %39 ]
  %48 = phi i32 [ %36, %21 ], [ %44, %39 ]
  %49 = icmp eq i32 %48, 0
  %50 = icmp eq i32 %47, 0
  %51 = or i1 %49, %50
  br i1 %51, label %141, label %52

52:                                               ; preds = %46
  %53 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9
  %54 = bitcast { i64, i64 }* %9 to i32*
  %55 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %57 = bitcast i64* %56 to i32*
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %10, i64 0, i32 1, i32 1
  %59 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  %60 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %0) #9
  %61 = call zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* %60, i32 8) #9
  %62 = call dereferenceable(24) %"class.cc::FilterOperations"* @_ZNK2cc17RenderSurfaceImpl15BackdropFiltersEv(%"class.cc::RenderSurfaceImpl"* %0) #9
  %63 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #9
  br i1 %61, label %64, label %66

64:                                               ; preds = %52
  %65 = call { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* %62, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %class.SkMatrix* dereferenceable(40) %63) #9
  br label %68

66:                                               ; preds = %52
  %67 = call { i64, i64 } @_ZNK2cc16FilterOperations14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"* %62, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, %class.SkMatrix* dereferenceable(40) %63) #9
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi { i64, i64 } [ %67, %66 ], [ %65, %64 ]
  %70 = extractvalue { i64, i64 } %69, 0
  %71 = extractvalue { i64, i64 } %69, 1
  %72 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %70, i64* %72, align 8
  store i64 %71, i64* %56, align 8
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %10, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #9
  %73 = bitcast %"class.cc::SimpleEnclosedRegion"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #9
  %74 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %11, i64 0, i32 0, i32 1, i32 0
  %75 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %11, i64 0, i32 0, i32 1, i32 1
  %76 = bitcast %"class.cc::SimpleEnclosedRegion"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* align 4 %76, i64 16, i1 false) #9
  %77 = getelementptr inbounds %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion"* %11, i64 0, i32 0
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %77, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #9
  call void @_ZN2cc20SimpleEnclosedRegion8SubtractERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #9
  %78 = bitcast { i64, i64 }* %12 to i8*
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  %81 = bitcast { i64, i64 }* %12 to i8*
  br label %82

82:                                               ; preds = %126, %68
  %83 = phi i64 [ 0, %68 ], [ %140, %126 ]
  %84 = load i32, i32* %74, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = load i32, i32* %75, align 4
  %88 = icmp ne i32 %87, 0
  %89 = zext i1 %88 to i64
  br label %90

90:                                               ; preds = %82, %86
  %91 = phi i64 [ 0, %82 ], [ %89, %86 ]
  %92 = icmp ult i64 %83, %91
  br i1 %92, label %94, label %93

93:                                               ; preds = %90
  call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9
  br label %141

94:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  %95 = call { i64, i64 } @_ZNK2cc20SimpleEnclosedRegion7GetRectEm(%"class.cc::SimpleEnclosedRegion"* nonnull %11, i64 %83) #9
  %96 = extractvalue { i64, i64 } %95, 0
  store i64 %96, i64* %80, align 8
  %97 = extractvalue { i64, i64 } %95, 1
  store i64 %97, i64* %79, align 8
  %98 = trunc i64 %96 to i32
  %99 = load i32, i32* %54, align 8
  %100 = icmp eq i32 %99, %98
  %101 = lshr i64 %96, 32
  %102 = trunc i64 %101 to i32
  %103 = trunc i64 %97 to i32
  %104 = lshr i64 %97, 32
  %105 = trunc i64 %104 to i32
  br i1 %100, label %113, label %106

106:                                              ; preds = %94
  %107 = load i32, i32* %57, align 8
  %108 = load i32, i32* %23, align 8
  %109 = load i32, i32* %26, align 8
  %110 = add i32 %107, %99
  %111 = sub i32 %110, %108
  %112 = sub i32 %111, %109
  br label %113

113:                                              ; preds = %94, %106
  %114 = phi i32 [ %112, %106 ], [ 0, %94 ]
  %115 = load i32, i32* %55, align 4
  %116 = icmp eq i32 %115, %102
  %117 = load i32, i32* %58, align 4
  %118 = load i32, i32* %24, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %113
  %120 = add nsw i32 %117, %115
  br label %126

121:                                              ; preds = %113
  %122 = load i32, i32* %27, align 4
  %123 = add i32 %117, %115
  %124 = sub i32 %123, %118
  %125 = sub i32 %124, %122
  br label %126

126:                                              ; preds = %119, %121
  %127 = phi i32 [ %120, %119 ], [ %123, %121 ]
  %128 = phi i32 [ 0, %119 ], [ %125, %121 ]
  %129 = add nsw i32 %103, %98
  %130 = load i32, i32* %57, align 8
  %131 = add nsw i32 %130, %99
  %132 = icmp eq i32 %129, %131
  %133 = load i32, i32* %23, align 8
  %134 = sub nsw i32 %133, %99
  %135 = select i1 %132, i32 0, i32 %134
  %136 = add nsw i32 %105, %102
  %137 = icmp eq i32 %136, %127
  %138 = sub nsw i32 %118, %115
  %139 = select i1 %137, i32 0, i32 %138
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %13, i32 %114, i32 %128, i32 %135, i32 %139) #9
  call void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"* %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #9
  %140 = add nuw nsw i64 %83, 1
  br label %82

141:                                              ; preds = %46, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #9
  br label %142

142:                                              ; preds = %4, %17, %141
  ret void
}

declare void @_ZNK2cc9LayerImpl13DrawTransformEv(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"*) local_unnamed_addr #2

declare %"class.cc::RenderSurfaceImpl"* @_ZNK2cc9LayerImpl13render_targetEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZN2cc8MathUtil41MapEnclosedRectWith2dAxisAlignedTransformERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2cc20SimpleEnclosedRegion7GetRectEm(%"class.cc::SimpleEnclosedRegion"*, i64) local_unnamed_addr #2

declare void @_ZN2cc20SimpleEnclosedRegion5UnionERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc16OcclusionTracker28ComputeVisibleRegionInScreenEPKNS_13LayerTreeImplE(%"class.cc::Region"* noalias sret, %"class.cc::OcclusionTracker"*, %"class.cc::LayerTreeImpl"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.gfx::Rect"*
  %6 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %7, i64 -1, i32 2
  %9 = getelementptr inbounds %"class.cc::OcclusionTracker", %"class.cc::OcclusionTracker"* %1, i64 0, i32 1
  %10 = bitcast %"class.cc::Region"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 24, i1 false)
  tail call void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"* %0, %"class.gfx::Rect"* dereferenceable(16) %9) #9
  %11 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %7, i64 -1, i32 2, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %7, i64 -1, i32 2, i32 0, i32 1, i32 1
  %13 = bitcast { i64, i64 }* %4 to i8*
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  br label %16

16:                                               ; preds = %27, %3
  %17 = phi i64 [ 0, %3 ], [ %31, %27 ]
  %18 = load i32, i32* %11, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = load i32, i32* %12, align 4
  %22 = icmp ne i32 %21, 0
  %23 = zext i1 %22 to i64
  br label %24

24:                                               ; preds = %16, %20
  %25 = phi i64 [ 0, %16 ], [ %23, %20 ]
  %26 = icmp ult i64 %17, %25
  br i1 %26, label %27, label %32

27:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %28 = call { i64, i64 } @_ZNK2cc20SimpleEnclosedRegion7GetRectEm(%"class.cc::SimpleEnclosedRegion"* %8, i64 %17) #9
  %29 = extractvalue { i64, i64 } %28, 0
  store i64 %29, i64* %14, align 8
  %30 = extractvalue { i64, i64 } %28, 1
  store i64 %30, i64* %15, align 8
  call void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"* %0, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  %31 = add nuw nsw i64 %17, 1
  br label %16

32:                                               ; preds = %24
  ret void
}

declare void @_ZN2cc6RegionC1ERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN2cc6Region8SubtractERKN3gfx4RectE(%"class.cc::Region"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68), %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

declare { i64, i64 } @_ZN2cc8MathUtil23MapEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"*, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK2cc16FilterOperations7MapRectERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #2

declare { i64, i64 } @_ZNK2cc16FilterOperations14MapRectReverseERKN3gfx4RectERK8SkMatrix(%"class.cc::FilterOperations"*, %"class.gfx::Rect"* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2cc20SimpleEnclosedRegion8SubtractERKN3gfx4RectE(%"class.cc::SimpleEnclosedRegion"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #2

declare i32 @_ZNK2cc9LayerImpl19GetSortingContextIdEv(%"class.cc::LayerImpl"*) local_unnamed_addr #2

declare i32 @_ZNK3gfx6RRectF7GetTypeEv(%"class.gfx::RRectF"*) local_unnamed_addr #2

declare { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc16OcclusionTracker11StackObjectENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJRPKNS1_17RenderSurfaceImplEEEEvDpOT_(%"class.std::__1::vector"*, %"class.cc::RenderSurfaceImpl"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::OcclusionTracker::StackObject"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.cc::OcclusionTracker::StackObject"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %33, i64 %32
  %36 = ptrtoint %"struct.cc::OcclusionTracker::StackObject"* %35 to i64
  %37 = bitcast %"class.cc::RenderSurfaceImpl"** %1 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"struct.cc::OcclusionTracker::StackObject"* %34 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %33, i64 %9, i32 1
  %41 = bitcast %"class.cc::SimpleEnclosedRegion"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 33, i1 false) #9
  %42 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %34, i64 1
  %43 = ptrtoint %"struct.cc::OcclusionTracker::StackObject"* %42 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %45 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %44, align 8
  %46 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %3, align 8
  %47 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %46, %45
  br i1 %47, label %48, label %50

48:                                               ; preds = %31
  %49 = ptrtoint %"struct.cc::OcclusionTracker::StackObject"* %45 to i64
  br label %73

50:                                               ; preds = %31, %50
  %51 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %53, %50 ], [ %34, %31 ]
  %52 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %54, %50 ], [ %46, %31 ]
  %53 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %51, i64 -1
  %54 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %52, i64 -1
  %55 = bitcast %"struct.cc::OcclusionTracker::StackObject"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.cc::OcclusionTracker::StackObject"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %51, i64 -1, i32 1
  %59 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %52, i64 -1, i32 1
  %60 = bitcast %"class.cc::SimpleEnclosedRegion"* %58 to i8*
  %61 = bitcast %"class.cc::SimpleEnclosedRegion"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* align 4 %61, i64 16, i1 false) #9
  %62 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %51, i64 -1, i32 2
  %63 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %52, i64 -1, i32 2
  %64 = bitcast %"class.cc::SimpleEnclosedRegion"* %62 to i8*
  %65 = bitcast %"class.cc::SimpleEnclosedRegion"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 16, i1 false) #9
  %66 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %51, i64 -1, i32 3
  %67 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %52, i64 -1, i32 3
  %68 = load i8, i8* %67, align 8, !range !2
  store i8 %68, i8* %66, align 8
  %69 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %54, %45
  br i1 %69, label %70, label %50

70:                                               ; preds = %50
  %71 = load i64, i64* %6, align 8
  %72 = load %"struct.cc::OcclusionTracker::StackObject"*, %"struct.cc::OcclusionTracker::StackObject"** %3, align 8
  br label %73

73:                                               ; preds = %48, %70
  %74 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %45, %48 ], [ %72, %70 ]
  %75 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %34, %48 ], [ %53, %70 ]
  %76 = phi i64 [ %49, %48 ], [ %71, %70 ]
  %77 = ptrtoint %"struct.cc::OcclusionTracker::StackObject"* %75 to i64
  store i64 %77, i64* %6, align 8
  store i64 %43, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %78 = inttoptr i64 %76 to %"struct.cc::OcclusionTracker::StackObject"*
  %79 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %74, %78
  br i1 %79, label %86, label %80

80:                                               ; preds = %73, %80
  %81 = phi %"struct.cc::OcclusionTracker::StackObject"* [ %82, %80 ], [ %74, %73 ]
  %82 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %81, i64 -1
  %83 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %81, i64 -1, i32 2
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %83) #9
  %84 = getelementptr inbounds %"struct.cc::OcclusionTracker::StackObject", %"struct.cc::OcclusionTracker::StackObject"* %81, i64 -1, i32 1
  tail call void @_ZN2cc20SimpleEnclosedRegionD1Ev(%"class.cc::SimpleEnclosedRegion"* %84) #9
  %85 = icmp eq %"struct.cc::OcclusionTracker::StackObject"* %82, %78
  br i1 %85, label %86, label %80

86:                                               ; preds = %80, %73
  %87 = icmp eq i64 %76, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %76 to i8*
  tail call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %86, %88
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2cc16OcclusionTracker41GetCurrentOcclusionForContributingSurfaceERKN3gfx9TransformE: argument 0"}
!5 = distinct !{!5, !"_ZNK2cc16OcclusionTracker41GetCurrentOcclusionForContributingSurfaceERKN3gfx9TransformE"}
