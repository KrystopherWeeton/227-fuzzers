; ModuleID = '../../base/allocator/allocator_shim.cc'
source_filename = "../../base/allocator/allocator_shim.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::allocator::AllocatorDispatch" = type { i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, i64 (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, i32 (%"struct.base::allocator::AllocatorDispatch"*, i64, i8**, i32, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8**, i32, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i64, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, %"struct.base::allocator::AllocatorDispatch"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::nothrow_t" = type { i8 }

@_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE = internal unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [39 x i8] c"../../base/allocator/allocator_shim.cc\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@__malloc_hook = local_unnamed_addr global i8* (i64, i8*)* @GlibcMallocHook, align 8
@__realloc_hook = local_unnamed_addr global i8* (i8*, i64, i8*)* @GlibcReallocHook, align 8
@__free_hook = local_unnamed_addr global void (i8*, i8*)* @GlibcFreeHook, align 8
@__memalign_hook = local_unnamed_addr global i8* (i64, i64, i8*)* @GlibcMemalignHook, align 8
@_ZN4base9allocator17AllocatorDispatch16default_dispatchE = external global %"struct.base::allocator::AllocatorDispatch", align 8
@_ZN12_GLOBAL__N_112g_chain_headE = internal global { { %"struct.base::allocator::AllocatorDispatch"* } } { { %"struct.base::allocator::AllocatorDispatch"* } { %"struct.base::allocator::AllocatorDispatch"* @_ZN4base9allocator17AllocatorDispatch16default_dispatchE } }, align 8
@_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize = internal unnamed_addr global i64 0, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base9allocator32SetCallNewHandlerOnMallocFailureEb(i1 zeroext) local_unnamed_addr #0 {
  %2 = zext i1 %0 to i8
  store i8 %2, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base9allocator14UncheckedAllocEm(i64) local_unnamed_addr #1 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 1
  %5 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  ret i8* %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base9allocator23InsertAllocatorDispatchEPNS0_17AllocatorDispatchE(%"struct.base::allocator::AllocatorDispatch"*) local_unnamed_addr #1 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %0, i64 0, i32 13
  %4 = ptrtoint %"struct.base::allocator::AllocatorDispatch"* %0 to i64
  %5 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %6 = inttoptr i64 %5 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %6, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %7 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %5, i64 %4 monotonic monotonic
  %8 = extractvalue { i64, i1 } %7, 1
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %11, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %12 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %10, i64 %4 monotonic monotonic
  %13 = extractvalue { i64, i1 } %12, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %1, %9, %15, %20, %25, %30, %35, %40
  ret void

15:                                               ; preds = %9
  %16 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %17 = inttoptr i64 %16 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %17, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %18 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %16, i64 %4 monotonic monotonic
  %19 = extractvalue { i64, i1 } %18, 1
  br i1 %19, label %14, label %20

20:                                               ; preds = %15
  %21 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %22 = inttoptr i64 %21 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %22, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %23 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %21, i64 %4 monotonic monotonic
  %24 = extractvalue { i64, i1 } %23, 1
  br i1 %24, label %14, label %25

25:                                               ; preds = %20
  %26 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %27 = inttoptr i64 %26 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %27, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %28 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %26, i64 %4 monotonic monotonic
  %29 = extractvalue { i64, i1 } %28, 1
  br i1 %29, label %14, label %30

30:                                               ; preds = %25
  %31 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %32 = inttoptr i64 %31 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %32, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %33 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %31, i64 %4 monotonic monotonic
  %34 = extractvalue { i64, i1 } %33, 1
  br i1 %34, label %14, label %35

35:                                               ; preds = %30
  %36 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %37 = inttoptr i64 %36 to %"struct.base::allocator::AllocatorDispatch"*
  store %"struct.base::allocator::AllocatorDispatch"* %37, %"struct.base::allocator::AllocatorDispatch"** %3, align 8
  fence seq_cst
  %38 = cmpxchg i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*), i64 %36, i64 %4 monotonic monotonic
  %39 = extractvalue { i64, i1 } %38, 1
  br i1 %39, label %14, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 110, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #9
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #9
  br label %14
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4base9allocator33RemoveAllocatorDispatchForTestingEPNS0_17AllocatorDispatchE(%"struct.base::allocator::AllocatorDispatch"* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %0, i64 0, i32 13
  %3 = bitcast %"struct.base::allocator::AllocatorDispatch"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 %4, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  ret void
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define noalias i8* @_Znwm(i64) local_unnamed_addr #6 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 0
  %5 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1, %11
  %9 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %10 = icmp eq void ()* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  tail call void %9() #9
  %12 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %13 = tail call i8* %12(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %11, %1
  %16 = phi i8* [ %6, %1 ], [ %13, %11 ], [ null, %8 ]
  ret i8* %16
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define void @_ZdlPv(i8*) local_unnamed_addr #6 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define noalias i8* @_Znam(i64) local_unnamed_addr #6 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 0
  %5 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %1, %11
  %9 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %10 = icmp eq void ()* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  tail call void %9() #9
  %12 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %13 = tail call i8* %12(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %14 = icmp eq i8* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %11, %1
  %16 = phi i8* [ %6, %1 ], [ %13, %11 ], [ null, %8 ]
  ret i8* %16
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define void @_ZdaPv(i8*) local_unnamed_addr #6 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #6 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 1
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i8* null) #9
  ret i8* %7
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define noalias i8* @_ZnamRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #6 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 1
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i8* null) #9
  ret i8* %7
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define void @_ZdlPvRKSt9nothrow_t(i8*, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #6 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: nobuiltin noinline nounwind ssp uwtable
define void @_ZdaPvRKSt9nothrow_t(i8*, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #6 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdlPvm(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdaPvm(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @_ZnwmSt11align_val_t(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 3
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %1, i64 %0, i8* null) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %2, %12
  %10 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %11 = icmp eq void ()* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  tail call void %10() #9
  %13 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %14 = tail call i8* %13(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %1, i64 %0, i8* null) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %12, %2
  %17 = phi i8* [ %7, %2 ], [ %14, %12 ], [ null, %9 ]
  ret i8* %17
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @_ZnwmSt11align_val_tRKSt9nothrow_t(i64, i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 3
  %7 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %8 = tail call i8* %7(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %1, i64 %0, i8* null) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %3, %13
  %11 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %12 = icmp eq void ()* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  tail call void %11() #9
  %14 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %15 = tail call i8* %14(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %1, i64 %0, i8* null) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %13, %3
  %18 = phi i8* [ %8, %3 ], [ %15, %13 ], [ null, %10 ]
  ret i8* %18
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdlPvSt11align_val_t(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdlPvmSt11align_val_t(i8*, i64, i64) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 5
  %7 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %6, align 8
  tail call void %7(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdlPvSt11align_val_tRKSt9nothrow_t(i8*, i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 5
  %7 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %6, align 8
  tail call void %7(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @_ZnamSt11align_val_t(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 3
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %1, i64 %0, i8* null) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %2, %12
  %10 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %11 = icmp eq void ()* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %9
  tail call void %10() #9
  %13 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %14 = tail call i8* %13(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %1, i64 %0, i8* null) #9
  %15 = icmp eq i8* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %12, %2
  %17 = phi i8* [ %7, %2 ], [ %14, %12 ], [ null, %9 ]
  ret i8* %17
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @_ZnamSt11align_val_tRKSt9nothrow_t(i64, i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 3
  %7 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %8 = tail call i8* %7(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %1, i64 %0, i8* null) #9
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %3, %13
  %11 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %12 = icmp eq void ()* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  tail call void %11() #9
  %14 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %15 = tail call i8* %14(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %1, i64 %0, i8* null) #9
  %16 = icmp eq i8* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %13, %3
  %18 = phi i8* [ %8, %3 ], [ %15, %13 ], [ null, %10 ]
  ret i8* %18
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdaPvSt11align_val_t(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdaPvmSt11align_val_t(i8*, i64, i64) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 5
  %7 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %6, align 8
  tail call void %7(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define void @_ZdaPvSt11align_val_tRKSt9nothrow_t(i8*, i64, %"struct.std::nothrow_t"* nocapture readnone dereferenceable(1)) local_unnamed_addr #7 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 5
  %7 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %6, align 8
  tail call void %7(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @malloc(i64) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 0
  %5 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %7 = icmp ne i8* %6, null
  %8 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %9 = icmp eq i8 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %14
  %12 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %13 = icmp eq void ()* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  tail call void %12() #9
  %15 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %16 = tail call i8* %15(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %17 = icmp ne i8* %16, null
  %18 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %19 = icmp eq i8 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %11

21:                                               ; preds = %11, %14, %1
  %22 = phi i8* [ %6, %1 ], [ %16, %14 ], [ null, %11 ]
  ret i8* %22
}

; Function Attrs: noinline nounwind ssp uwtable
define void @free(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @realloc(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 4
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = icmp eq i64 %1, 0
  %10 = or i1 %9, %8
  %11 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %12 = icmp eq i8 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %2, %17
  %15 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %16 = icmp eq void ()* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  tail call void %15() #9
  %18 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %5, align 8
  %19 = tail call i8* %18(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i64 %1, i8* null) #9
  %20 = icmp ne i8* %19, null
  %21 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %22 = icmp eq i8 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %17, %2
  %25 = phi i8* [ %7, %2 ], [ %19, %17 ], [ null, %14 ]
  ret i8* %25
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @calloc(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 2
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define void @cfree(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @memalign(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 3
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @aligned_alloc(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 3
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @valloc(i64) local_unnamed_addr #7 {
  %2 = load i64, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %5, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %6

6:                                                ; preds = %4, %1
  %7 = phi i64 [ %2, %1 ], [ %5, %4 ]
  %8 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.base::allocator::AllocatorDispatch"*
  %10 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %9, i64 0, i32 3
  %11 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %10, align 8
  %12 = tail call i8* %11(%"struct.base::allocator::AllocatorDispatch"* %9, i64 %7, i64 %0, i8* null) #9
  %13 = icmp ne i8* %12, null
  %14 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %15 = icmp eq i8 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %6, %20
  %18 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %19 = icmp eq void ()* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  tail call void %18() #9
  %21 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %10, align 8
  %22 = tail call i8* %21(%"struct.base::allocator::AllocatorDispatch"* %9, i64 %7, i64 %0, i8* null) #9
  %23 = icmp ne i8* %22, null
  %24 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %25 = icmp eq i8 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %17

27:                                               ; preds = %17, %20, %6
  %28 = phi i8* [ %12, %6 ], [ null, %17 ], [ %22, %20 ]
  ret i8* %28
}

; Function Attrs: noinline nounwind ssp uwtable
define noalias i8* @pvalloc(i64) local_unnamed_addr #7 {
  %2 = icmp eq i64 %0, 0
  %3 = load i64, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %6, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i64 [ %3, %1 ], [ %6, %5 ]
  br i1 %2, label %19, label %9

9:                                                ; preds = %7
  %10 = add i64 %0, -1
  %11 = add i64 %10, %8
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %14, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i64 [ %8, %9 ], [ %14, %13 ]
  %17 = sub i64 0, %16
  %18 = and i64 %11, %17
  br label %19

19:                                               ; preds = %15, %7
  %20 = phi i64 [ %16, %15 ], [ %8, %7 ]
  %21 = phi i64 [ %18, %15 ], [ %8, %7 ]
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %24, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i64 [ %20, %19 ], [ %24, %23 ]
  %27 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %28 = inttoptr i64 %27 to %"struct.base::allocator::AllocatorDispatch"*
  %29 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %28, i64 0, i32 3
  %30 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %29, align 8
  %31 = tail call i8* %30(%"struct.base::allocator::AllocatorDispatch"* %28, i64 %26, i64 %21, i8* null) #9
  %32 = icmp ne i8* %31, null
  %33 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %34 = icmp eq i8 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %46, label %36

36:                                               ; preds = %25, %39
  %37 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %38 = icmp eq void ()* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  tail call void %37() #9
  %40 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %29, align 8
  %41 = tail call i8* %40(%"struct.base::allocator::AllocatorDispatch"* %28, i64 %26, i64 %21, i8* null) #9
  %42 = icmp ne i8* %41, null
  %43 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %44 = icmp eq i8 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %36

46:                                               ; preds = %36, %39, %25
  %47 = phi i8* [ %31, %25 ], [ null, %36 ], [ %41, %39 ]
  ret i8* %47
}

; Function Attrs: noinline nounwind ssp uwtable
define i32 @posix_memalign(i8** nocapture, i64, i64) local_unnamed_addr #7 {
  %4 = and i64 %1, 7
  %5 = icmp eq i64 %4, 0
  %6 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !2
  %7 = icmp eq i64 %6, 1
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %33

9:                                                ; preds = %3
  %10 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.base::allocator::AllocatorDispatch"*
  %12 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %11, i64 0, i32 3
  %13 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %12, align 8
  %14 = tail call i8* %13(%"struct.base::allocator::AllocatorDispatch"* %11, i64 %1, i64 %2, i8* null) #9
  %15 = icmp ne i8* %14, null
  %16 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %17 = icmp eq i8 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %9, %22
  %20 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %21 = icmp eq void ()* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  tail call void %20() #9
  %23 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %12, align 8
  %24 = tail call i8* %23(%"struct.base::allocator::AllocatorDispatch"* %11, i64 %1, i64 %2, i8* null) #9
  %25 = icmp ne i8* %24, null
  %26 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %27 = icmp eq i8 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %19

29:                                               ; preds = %22, %19, %9
  %30 = phi i8* [ %14, %9 ], [ null, %19 ], [ %24, %22 ]
  store i8* %30, i8** %0, align 8
  %31 = icmp eq i8* %30, null
  %32 = select i1 %31, i32 12, i32 0
  br label %33

33:                                               ; preds = %3, %29
  %34 = phi i32 [ %32, %29 ], [ 22, %3 ]
  ret i32 %34
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @malloc_size(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 6
  %5 = load i64 (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, i64 (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  %6 = tail call i64 %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret i64 %6
}

; Function Attrs: noinline nounwind ssp uwtable
define i64 @malloc_usable_size(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 6
  %5 = load i64 (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, i64 (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  %6 = tail call i64 %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @GlibcMallocHook(i64, i8* nocapture readnone) #1 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 0
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @GlibcReallocHook(i8*, i64, i8* nocapture readnone) #1 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 4
  %7 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %6, align 8
  %8 = tail call i8* %7(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i64 %1, i8* null) #9
  %9 = icmp ne i8* %8, null
  %10 = icmp eq i64 %1, 0
  %11 = or i1 %10, %9
  %12 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %13 = icmp eq i8 %12, 0
  %14 = or i1 %11, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %3, %18
  %16 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %17 = icmp eq void ()* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15
  tail call void %16() #9
  %19 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %6, align 8
  %20 = tail call i8* %19(%"struct.base::allocator::AllocatorDispatch"* %5, i8* %0, i64 %1, i8* null) #9
  %21 = icmp ne i8* %20, null
  %22 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %23 = icmp eq i8 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %15

25:                                               ; preds = %15, %18, %3
  %26 = phi i8* [ %8, %3 ], [ %20, %18 ], [ null, %15 ]
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GlibcFreeHook(i8*, i8* nocapture readnone) #1 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 5
  %6 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %5, align 8
  tail call void %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @GlibcMemalignHook(i64, i64, i8* nocapture readnone) #1 {
  %4 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %5 = inttoptr i64 %4 to %"struct.base::allocator::AllocatorDispatch"*
  %6 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %5, i64 0, i32 3
  %7 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %8 = tail call i8* %7(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %0, i64 %1, i8* null) #9
  %9 = icmp ne i8* %8, null
  %10 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %11 = icmp eq i8 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %23, label %13

13:                                               ; preds = %3, %16
  %14 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %15 = icmp eq void ()* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %13
  tail call void %14() #9
  %17 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %6, align 8
  %18 = tail call i8* %17(%"struct.base::allocator::AllocatorDispatch"* %5, i64 %0, i64 %1, i8* null) #9
  %19 = icmp ne i8* %18, null
  %20 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %21 = icmp eq i8 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %13

23:                                               ; preds = %13, %16, %3
  %24 = phi i8* [ %8, %3 ], [ %18, %16 ], [ null, %13 ]
  ret i8* %24
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_malloc(i64) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 0
  %5 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %6 = tail call i8* %5(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %7 = icmp ne i8* %6, null
  %8 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %9 = icmp eq i8 %8, 0
  %10 = or i1 %7, %9
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %14
  %12 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %13 = icmp eq void ()* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  tail call void %12() #9
  %15 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i8*)** %4, align 8
  %16 = tail call i8* %15(%"struct.base::allocator::AllocatorDispatch"* %3, i64 %0, i8* null) #9
  %17 = icmp ne i8* %16, null
  %18 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %19 = icmp eq i8 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %11

21:                                               ; preds = %11, %14, %1
  %22 = phi i8* [ %6, %1 ], [ %16, %14 ], [ null, %11 ]
  ret i8* %22
}

; Function Attrs: noinline nounwind ssp uwtable
define void @__libc_free(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_realloc(i8*, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 4
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = icmp eq i64 %1, 0
  %10 = or i1 %9, %8
  %11 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %12 = icmp eq i8 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %24, label %14

14:                                               ; preds = %2, %17
  %15 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %16 = icmp eq void ()* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  tail call void %15() #9
  %18 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i8*, i64, i8*)** %5, align 8
  %19 = tail call i8* %18(%"struct.base::allocator::AllocatorDispatch"* %4, i8* %0, i64 %1, i8* null) #9
  %20 = icmp ne i8* %19, null
  %21 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %22 = icmp eq i8 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %14

24:                                               ; preds = %14, %17, %2
  %25 = phi i8* [ %7, %2 ], [ %19, %17 ], [ null, %14 ]
  ret i8* %25
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_calloc(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 2
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define void @__libc_cfree(i8*) local_unnamed_addr #7 {
  %2 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %3 = inttoptr i64 %2 to %"struct.base::allocator::AllocatorDispatch"*
  %4 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %3, i64 0, i32 5
  %5 = load void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)*, void (%"struct.base::allocator::AllocatorDispatch"*, i8*, i8*)** %4, align 8
  tail call void %5(%"struct.base::allocator::AllocatorDispatch"* %3, i8* %0, i8* null) #9
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_memalign(i64, i64) local_unnamed_addr #7 {
  %3 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %4 = inttoptr i64 %3 to %"struct.base::allocator::AllocatorDispatch"*
  %5 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %4, i64 0, i32 3
  %6 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %7 = tail call i8* %6(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %8 = icmp ne i8* %7, null
  %9 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %10 = icmp eq i8 %9, 0
  %11 = or i1 %8, %10
  br i1 %11, label %22, label %12

12:                                               ; preds = %2, %15
  %13 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %14 = icmp eq void ()* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  tail call void %13() #9
  %16 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %5, align 8
  %17 = tail call i8* %16(%"struct.base::allocator::AllocatorDispatch"* %4, i64 %0, i64 %1, i8* null) #9
  %18 = icmp ne i8* %17, null
  %19 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %20 = icmp eq i8 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %12

22:                                               ; preds = %12, %15, %2
  %23 = phi i8* [ %7, %2 ], [ %17, %15 ], [ null, %12 ]
  ret i8* %23
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_valloc(i64) local_unnamed_addr #7 {
  %2 = load i64, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %5, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %6

6:                                                ; preds = %4, %1
  %7 = phi i64 [ %2, %1 ], [ %5, %4 ]
  %8 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %9 = inttoptr i64 %8 to %"struct.base::allocator::AllocatorDispatch"*
  %10 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %9, i64 0, i32 3
  %11 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %10, align 8
  %12 = tail call i8* %11(%"struct.base::allocator::AllocatorDispatch"* %9, i64 %7, i64 %0, i8* null) #9
  %13 = icmp ne i8* %12, null
  %14 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %15 = icmp eq i8 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %27, label %17

17:                                               ; preds = %6, %20
  %18 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %19 = icmp eq void ()* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  tail call void %18() #9
  %21 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %10, align 8
  %22 = tail call i8* %21(%"struct.base::allocator::AllocatorDispatch"* %9, i64 %7, i64 %0, i8* null) #9
  %23 = icmp ne i8* %22, null
  %24 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %25 = icmp eq i8 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %17

27:                                               ; preds = %17, %20, %6
  %28 = phi i8* [ %12, %6 ], [ null, %17 ], [ %22, %20 ]
  ret i8* %28
}

; Function Attrs: noinline nounwind ssp uwtable
define i8* @__libc_pvalloc(i64) local_unnamed_addr #7 {
  %2 = icmp eq i64 %0, 0
  %3 = load i64, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %6, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %7

7:                                                ; preds = %5, %1
  %8 = phi i64 [ %3, %1 ], [ %6, %5 ]
  br i1 %2, label %19, label %9

9:                                                ; preds = %7
  %10 = add i64 %0, -1
  %11 = add i64 %10, %8
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %14, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %15

15:                                               ; preds = %13, %9
  %16 = phi i64 [ %8, %9 ], [ %14, %13 ]
  %17 = sub i64 0, %16
  %18 = and i64 %11, %17
  br label %19

19:                                               ; preds = %15, %7
  %20 = phi i64 [ %16, %15 ], [ %8, %7 ]
  %21 = phi i64 [ %18, %15 ], [ %8, %7 ]
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = tail call i64 @_ZN4base11GetPageSizeEv() #9
  store i64 %24, i64* @_ZZN12_GLOBAL__N_117GetCachedPageSizeEvE8pagesize, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i64 [ %20, %19 ], [ %24, %23 ]
  %27 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %28 = inttoptr i64 %27 to %"struct.base::allocator::AllocatorDispatch"*
  %29 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %28, i64 0, i32 3
  %30 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %29, align 8
  %31 = tail call i8* %30(%"struct.base::allocator::AllocatorDispatch"* %28, i64 %26, i64 %21, i8* null) #9
  %32 = icmp ne i8* %31, null
  %33 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %34 = icmp eq i8 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %46, label %36

36:                                               ; preds = %25, %39
  %37 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %38 = icmp eq void ()* %37, null
  br i1 %38, label %46, label %39

39:                                               ; preds = %36
  tail call void %37() #9
  %40 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %29, align 8
  %41 = tail call i8* %40(%"struct.base::allocator::AllocatorDispatch"* %28, i64 %26, i64 %21, i8* null) #9
  %42 = icmp ne i8* %41, null
  %43 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %44 = icmp eq i8 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %36

46:                                               ; preds = %36, %39, %25
  %47 = phi i8* [ %31, %25 ], [ null, %36 ], [ %41, %39 ]
  ret i8* %47
}

; Function Attrs: noinline nounwind ssp uwtable
define i32 @__posix_memalign(i8** nocapture, i64, i64) local_unnamed_addr #7 {
  %4 = and i64 %1, 7
  %5 = icmp eq i64 %4, 0
  %6 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !2
  %7 = icmp eq i64 %6, 1
  %8 = and i1 %5, %7
  br i1 %8, label %9, label %33

9:                                                ; preds = %3
  %10 = load atomic i64, i64* bitcast ({ { %"struct.base::allocator::AllocatorDispatch"* } }* @_ZN12_GLOBAL__N_112g_chain_headE to i64*) monotonic, align 8
  %11 = inttoptr i64 %10 to %"struct.base::allocator::AllocatorDispatch"*
  %12 = getelementptr inbounds %"struct.base::allocator::AllocatorDispatch", %"struct.base::allocator::AllocatorDispatch"* %11, i64 0, i32 3
  %13 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %12, align 8
  %14 = tail call i8* %13(%"struct.base::allocator::AllocatorDispatch"* %11, i64 %1, i64 %2, i8* null) #9
  %15 = icmp ne i8* %14, null
  %16 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %17 = icmp eq i8 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %29, label %19

19:                                               ; preds = %9, %22
  %20 = tail call void ()* @_ZSt15get_new_handlerv() #9
  %21 = icmp eq void ()* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %19
  tail call void %20() #9
  %23 = load i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)*, i8* (%"struct.base::allocator::AllocatorDispatch"*, i64, i64, i8*)** %12, align 8
  %24 = tail call i8* %23(%"struct.base::allocator::AllocatorDispatch"* %11, i64 %1, i64 %2, i8* null) #9
  %25 = icmp ne i8* %24, null
  %26 = load i8, i8* @_ZN12_GLOBAL__N_136g_call_new_handler_on_malloc_failureE, align 1
  %27 = icmp eq i8 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %19

29:                                               ; preds = %22, %19, %9
  %30 = phi i8* [ %14, %9 ], [ null, %19 ], [ %24, %22 ]
  store i8* %30, i8** %0, align 8
  %31 = icmp eq i8* %30, null
  %32 = select i1 %31, i32 12, i32 0
  br label %33

33:                                               ; preds = %3, %29
  %34 = phi i32 [ %32, %29 ], [ 22, %3 ]
  ret i32 %34
}

; Function Attrs: nounwind
declare void ()* @_ZSt15get_new_handlerv() local_unnamed_addr #4

declare i64 @_ZN4base11GetPageSizeEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
